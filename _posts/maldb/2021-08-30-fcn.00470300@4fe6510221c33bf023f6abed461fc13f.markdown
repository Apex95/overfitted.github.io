---
layout: post
title:  "fcn.00470300 @ 4fe6510221c33bf023f6abed461fc13f"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00470300
- **Origin (md5):** 4fe6510221c33bf023f6abed461fc13f
- **VirusTotal:** [virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f][virustotal_ref]

# Code Tags
<span class="tag" id="REGISTRY">REGISTRY</span>


# Behaviour Tags
<span class="bhv-tag" id="SCREENSHOTS_FOREGROUND_WINDOW">SCREENSHOTS_FOREGROUND_WINDOW / 0.14388880759886322</span><span class="bhv-tag" id="CREATES_SOCKET_LISTENER">CREATES_SOCKET_LISTENER / 0.18402968107575365</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-3093.46435546875, -6158.5625, '<b><a href="/report/fcn.00470300@4fe6510221c33bf023f6abed461fc13f">fcn.00470300</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>push ebp<br>mov ebp, esp<br>and esp, 0xfffffff8<br>sub esp, 0x44<br>push ebx<br>push esi<br>mov esi, dword[0x4c6400]<br>push edi<br>mov ecx, esi<br>mov ebx, eax<br>mov dword[esp+0x28], esi<br>call fcn.00413110<br>test ebx, ebx<br>jne 0x470356<br>mov dword[esp+0x18], 0x57<br>mov eax, dword[esp+0x18]<br>cmp dword[esp+0x18], 0<br>mov ecx, dword[0x4c28ec]<br>mov dword[ecx+0x30], eax<br>mov ecx, dword[ebp+8]<br>setne dl<br>movzx eax, dl<br>push eax<br>push ecx<br>call fcn.0042dd40<br>pop edi<br>pop esi<br>pop ebx<br>mov esp, ebp<br>pop ebp<br>ret 0xc<br>mov ecx, dword[0x4c28ec]<br>mov edx, dword[ecx+0xcc]<br>lea eax, [esp+0x10]<br>push eax<br>mov eax, dword[ebp+0xc]<br>or edx, 0x20019<br>push edx<br>push 0<br>push eax<br>push ebx<br>call dword[sym.imp.ADVAPI32.dll_RegOpenKeyExW]<br>mov dword[esp+0x18], eax<br>test eax, eax<br>jne 0x4703f9<br>mov ebx, dword[ebp+0x10]<br>mov edx, dword[esp+0x10]<br>mov edi, dword[sym.imp.ADVAPI32.dll_RegQueryValueExW]<br>push eax<br>push eax<br>lea ecx, [esp+0x24]<br>push ecx<br>push eax<br>push ebx<br>push edx<br>call edi<br>xor ecx, ecx<br>mov dword[esp+0x18], eax<br>cmp eax, ecx<br>jne 0x4703ee<br>mov eax, dword[esp+0x1c]<br>dec eax<br>cmp eax, 6<br>ja case.0x4703b4.5<br>jmp dword[eax*4+0x4706f8]<br>lea edx, [esp+0x14]<br>push edx<br>lea eax, [esp+0x24]<br>push eax<br>push ecx<br>push ecx<br>mov ecx, dword[esp+0x20]<br>push ebx<br>push ecx<br>mov dword[esp+0x2c], 4<br>call edi<br>mov dword[esp+0x18], eax<br>test eax, eax<br>jne 0x4703ee<br>mov edx, dword[esp+0x20]<br>push 0x18<br>push eax<br>push edx<br>mov eax, esi<br>call fcn.004010e0<br>mov eax, dword[esp+0x10]<br>push eax<br>call dword[sym.imp.ADVAPI32.dll_RegCloseKey]<br>cmp dword[esp+0x18], 0xffffffff<br>jne 0x47032b<br>call dword[sym.imp.KERNEL32.dll_GetLastError]<br>jmp 0x47032f<br>mov eax, dword[esp+0x10]<br>lea edx, [esp+0x14]<br>push edx<br>push ecx<br>push ecx<br>push ecx<br>push ebx<br>push eax<br>mov dword[esp+0x2c], ecx<br>call edi<br>mov dword[esp+0x18], eax<br>test eax, eax<br>jne 0x4703ee<br>mov eax, dword[esp+0x14]<br>test eax, eax<br>je 0x4703ee<br>push 1<br>shr eax, 1<br>push 0<br>add eax, 2<br>push eax<br>push 0<br>push esi<br>call fcn.00476680<br>cmp eax, 1<br>je 0x470460<br>mov ecx, dword[esp+0x10]<br>push ecx<br>call dword[sym.imp.ADVAPI32.dll_RegCloseKey]<br>xor eax, eax<br>pop edi<br>pop esi<br>pop ebx<br>mov esp, ebp<br>pop ebp<br>ret 0xc<br>cmp byte[esi+0x17], 0<br>jne 0x47046b<br>mov ebx, dword[esi+0xc]<br>jmp 0x47046d<br>mov ebx, esi<br>test byte[ebx+0x15], 8<br>je 0x47047a<br>mov eax, ebx<br>call fcn.00401160<br>mov al, byte[ebx+0x17]<br>cmp al, 1<br>jne 0x470493<br>test byte[ebx+0x15], 4<br>je 0x47048e<br>mov eax, ebx<br>call fcn.0042e780<br>mov ebx, dword[ebx+8]<br>jmp 0x4704a5<br>cmp al, 2<br>jne 0x4704a0<br>call fcn.00401000<br>mov ebx, eax<br>jmp 0x4704a5<br>mov ebx, 0x4c85b8<br>mov eax, dword[ebp+0x10]<br>mov ecx, dword[esp+0x10]<br>lea edx, [esp+0x14]<br>push edx<br>push ebx<br>push 0<br>push 0<br>push eax<br>push ecx<br>call edi<br>mov edx, dword[esp+0x10]<br>mov edi, eax<br>push edx<br>mov dword[esp+0x1c], edi<br>call dword[sym.imp.ADVAPI32.dll_RegCloseKey]<br>test edi, edi<br>jne 0x470501<br>mov eax, dword[esp+0x14]<br>test eax, eax<br>je 0x470501<br>shr eax, 1<br>xor ecx, ecx<br>mov dword[ebx+eax*2], ecx<br>cmp dword[esp+0x1c], 7<br>jne 0x470506<br>mov eax, ebx<br>cmp word[eax], 0<br>jne 0x4704fc<br>cmp word[eax+2], 0<br>mov ecx, 0xa<br>mov word[eax], cx<br>je 0x470506<br>add eax, 2<br>jmp 0x4704e7<br>xor edx, edx<br>mov word[ebx], dx<br>mov eax, ebx<br>lea edx, [eax+2]<br>jmp 0x470510<br>mov cx, word[eax]<br>add eax, 2<br>test cx, cx<br>jne 0x470510<br>sub eax, edx<br>sar eax, 1<br>mov edi, eax<br>mov eax, esi<br>call fcn.004135a0<br>cmp byte[esi+0x17], 0<br>jne 0x470533<br>mov eax, dword[esi+0xc]<br>jmp 0x470535<br>mov eax, esi<br>cmp byte[eax+0x17], 2<br>jne 0x47055f<br>cmp dword[0x4c85f0], 0<br>je 0x47055f<br>mov ecx, 0x4c85e4<br>call fcn.00404270<br>test eax, eax<br>jne 0x4703f9<br>pop edi<br>pop esi<br>pop ebx<br>mov esp, ebp<br>pop ebp<br>ret 0xc<br>and byte[eax+0x15], 0x86<br>jmp 0x4703f9<br>mov eax, dword[esp+0x10]<br>lea edx, [esp+0x14]<br>push edx<br>push ecx<br>push ecx<br>push ecx<br>push ebx<br>push eax<br>mov dword[esp+0x2c], ecx<br>call edi<br>mov dword[esp+0x18], eax<br>test eax, eax<br>jne 0x4706d4<br>mov eax, dword[esp+0x14]<br>test eax, eax<br>je 0x4706d4<br>push 1<br>push 0<br>lea ecx, [eax+eax]<br>push ecx<br>push 0<br>push esi<br>call fcn.00476680<br>cmp eax, 1<br>je 0x4705bf<br>mov edx, dword[esp+0x10]<br>push edx<br>call dword[sym.imp.ADVAPI32.dll_RegCloseKey]<br>xor eax, eax<br>pop edi<br>pop esi<br>pop ebx<br>mov esp, ebp<br>pop ebp<br>ret 0xc<br>cmp byte[esi+0x17], 0<br>jne 0x4705c8<br>mov esi, dword[esi+0xc]<br>test byte[esi+0x15], 8<br>je 0x4705d5<br>mov eax, esi<br>call fcn.00401160<br>mov al, byte[esi+0x17]<br>cmp al, 1<br>jne 0x4705ee<br>test byte[esi+0x15], 4<br>je 0x4705e9<br>mov eax, esi<br>call fcn.0042e780<br>mov ebx, dword[esi+8]<br>jmp 0x470600<br>cmp al, 2<br>jne 0x4705fb<br>call fcn.00401000<br>mov ebx, eax<br>jmp 0x470600<br>mov ebx, 0x4c85b8<br>mov edx, dword[ebp+0x10]<br>xor eax, eax<br>mov word[ebx], ax<br>mov ecx, dword[esp+0x14]<br>lea eax, [ebx+ecx*2]<br>add eax, ecx<br>lea ecx, [esp+0x14]<br>push ecx<br>push eax<br>push 0<br>push 0<br>mov dword[esp+0x34], eax<br>mov eax, dword[esp+0x20]<br>push edx<br>push eax<br>call edi<br>mov ecx, dword[esp+0x10]<br>mov esi, eax<br>push ecx<br>mov dword[esp+0x1c], esi<br>call dword[sym.imp.ADVAPI32.dll_RegCloseKey]<br>test esi, esi<br>jne 0x4703f9<br>mov ecx, 8<br>mov esi, str.0123456789ABCDEF<br>lea edi, [esp+0x2c]<br>rep movsd<br>xor ecx, ecx<br>xor edx, edx<br>movsw word<br>cmp dword[esp+0x14], ecx<br>jbe 0x470690<br>lea esp, [esp]<br>mov eax, dword[esp+0x24]<br>movzx eax, byte[ecx+eax]<br>mov esi, eax<br>shr eax, 4<br>and esi, 0xf<br>mov si, word[esp+esi*2+0x2c]<br>and eax, 0xf<br>mov ax, word[esp+eax*2+0x2c]<br>mov word[ebx+edx*2+2], si<br>mov word[ebx+edx*2], ax<br>inc ecx<br>add edx, 2<br>cmp ecx, dword[esp+0x14]<br>jb 0x470660<br>mov eax, dword[esp+0x28]<br>xor ecx, ecx<br>mov word[ebx+edx*2], cx<br>cmp byte[eax+0x17], cl<br>jne 0x4706a2<br>mov eax, dword[eax+0xc]<br>cmp byte[eax+0x17], 2<br>jne 0x4706cb<br>cmp dword[0x4c85f0], ecx<br>je 0x4706cb<br>mov ecx, 0x4c85e4<br>call fcn.00404270<br>test eax, eax<br>jne 0x47032b<br>pop edi<br>pop esi<br>pop ebx<br>mov esp, ebp<br>pop ebp<br>ret 0xc<br>and byte[eax+0x15], 0x86<br>jmp 0x47032b<br>mov edx, dword[esp+0x10]<br>push edx<br>jmp 0x4703f3<br>mov eax, dword[esp+0x10]<br>push eax<br>call dword[sym.imp.ADVAPI32.dll_RegCloseKey]<br>mov dword[esp+0x18], 0x65e<br>jmp 0x47032b<br><eoc> ', 'point { fill-color: #e0440e; }'],
[3093.464599609375, 6158.5625, '<b><a href="/report/fcn.00470720@4fe6510221c33bf023f6abed461fc13f">fcn.00470720</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>sub esp, 0xc<br>push ebx<br>push ebp<br>push esi<br>push edi<br>mov edi, ecx<br>test eax, eax<br>je 0x4709cd<br>test edi, edi<br>je 0x4709cd<br>cmp edi, 0xfffffffe<br>je 0x4709cd<br>lea ecx, [esp+0x18]<br>push ecx<br>mov ecx, dword[0x4c28ec]<br>lea edx, [esp+0x28]<br>push edx<br>mov edx, dword[ecx+0xcc]<br>mov ecx, dword[esp+0x2c]<br>push 0<br>or edx, 0x20006<br>push edx<br>push 0<br>push 0x4ab02c<br>push 0<br>push ecx<br>push eax<br>call dword[sym.imp.ADVAPI32.dll_RegCreateKeyExW]<br>mov ebx, eax<br>test ebx, ebx<br>jne 0x470a0a<br>lea eax, [edi-1]<br>cmp eax, 6<br>ja case.0x47078c.5<br>jmp dword[eax*4+0x470a18]<br>mov esi, dword[esp+0x2c]<br>mov eax, esi<br>lea edx, [eax+2]<br>lea esp, [esp]<br>mov cx, word[eax]<br>add eax, 2<br>test cx, cx<br>jne 0x4707a0<br>sub eax, edx<br>sar eax, 1<br>lea edx, [eax+eax+2]<br>push edx<br>push esi<br>push 1<br>mov eax, dword[esp+0x34]<br>mov ecx, dword[esp+0x30]<br>push 0<br>push eax<br>push ecx<br>call dword[sym.imp.ADVAPI32.dll_RegSetValueExW]<br>mov ebx, eax<br>jmp 0x4709ff<br>mov esi, dword[esp+0x2c]<br>mov eax, esi<br>lea edx, [eax+2]<br>lea esp, [esp]<br>mov cx, word[eax]<br>add eax, 2<br>test cx, cx<br>jne 0x4707e0<br>sub eax, edx<br>sar eax, 1<br>lea edx, [eax+eax+2]<br>push edx<br>push esi<br>push 2<br>jmp 0x4707b7<br>mov esi, dword[esp+0x2c]<br>mov eax, esi<br>lea edx, [eax+2]<br>mov cx, word[eax]<br>add eax, 2<br>test cx, cx<br>jne 0x470802<br>sub eax, edx<br>sar eax, 1<br>mov ebx, eax<br>lea edx, [ebx+ebx+4]<br>push edx<br>call fcn.0048cdd4<br>mov edi, eax<br>add esp, 4<br>test edi, edi<br>jne 0x47082e<br>lea ebx, [eax+0xe]<br>jmp 0x4709ff<br>lea ecx, [ebx+1]<br>mov eax, esi<br>call fcn.004738b0<br>xor eax, eax<br>mov word[edi+ebx*2+2], ax<br>test ebx, ebx<br>je 0x470852<br>cmp word[edi+ebx*2-2], 0xa<br>jne 0x470852<br>dec ebx<br>xor ecx, ecx<br>mov word[edi+ebx*2], cx<br>cmp word[edi], 0<br>mov eax, edi<br>je 0x470874<br>lea ebx, [ebx]<br>cmp word[eax], 0xa<br>jne 0x47086b<br>xor edx, edx<br>mov word[eax], dx<br>add eax, 2<br>cmp word[eax], 0<br>jne 0x470860<br>test ebx, ebx<br>je 0x47087d<br>lea eax, [ebx+2]<br>jmp 0x47087f<br>xor eax, eax<br>mov ecx, dword[esp+0x28]<br>mov edx, dword[esp+0x24]<br>add eax, eax<br>push eax<br>push edi<br>push 7<br>push 0<br>push ecx<br>push edx<br>call dword[sym.imp.ADVAPI32.dll_RegSetValueExW]<br>push edi<br>mov ebx, eax<br>call fcn.0048e3af<br>add esp, 4<br>jmp 0x4709ff<br>mov esi, dword[esp+0x2c]<br>cmp word[esi], 0<br>je 0x4708bc<br>call fcn.004130a0<br>mov dword[esp+0x10], eax<br>jmp 0x4708c4<br>mov dword[esp+0x10], 0<br>mov ecx, dword[esp+0x28]<br>mov edx, dword[esp+0x24]<br>push 4<br>lea eax, [esp+0x14]<br>push eax<br>push 4<br>push 0<br>push ecx<br>push edx<br>call dword[sym.imp.ADVAPI32.dll_RegSetValueExW]<br>mov ebx, eax<br>jmp 0x4709ff<br>mov eax, dword[esp+0x2c]<br>lea edx, [eax+2]<br>lea ecx, [ecx]<br>mov cx, word[eax]<br>add eax, 2<br>test cx, cx<br>jne 0x4708f0<br>sub eax, edx<br>sar eax, 1<br>mov ebp, eax<br>and eax, 0x80000001<br>jns 0x47090d<br>dec eax<br>or eax, 0xfffffffe<br>inc eax<br>jne case.0x47078c.5<br>mov eax, ebp<br>cdq <br>sub eax, edx<br>sar eax, 1<br>push eax<br>mov dword[esp+0x18], eax<br>call fcn.0048cdd4<br>mov esi, eax<br>add esp, 4<br>test esi, esi<br>jne 0x470935<br>lea ebx, [eax+0xe]<br>jmp 0x4709ff<br>xor ebx, ebx<br>xor edi, edi<br>test ebp, ebp<br>jle 0x470996<br>lea ecx, [ecx]<br>cmp ebx, dword[esp+0x14]<br>jge 0x470996<br>xor edx, edx<br>lea ecx, [edx+0x10]<br>jmp 0x470950<br>mov eax, dword[esp+0x2c]<br>movzx eax, word[eax+edi*2]<br>cmp eax, 0x30<br>jb 0x470967<br>cmp eax, 0x39<br>ja 0x470967<br>add eax, 0xffffffd0<br>jmp 0x470983<br>cmp eax, 0x41<br>jb 0x470976<br>cmp eax, 0x46<br>ja 0x470976<br>add eax, 0xffffffc9<br>jmp 0x470983<br>cmp eax, 0x61<br>jb 0x4709b9<br>cmp eax, 0x66<br>ja 0x4709b9<br>add eax, 0xffffffa9<br>imul eax, ecx<br>add edx, eax<br>inc edi<br>sub ecx, 0xf<br>jns 0x470950<br>mov byte[ebx+esi], dl<br>inc ebx<br>cmp edi, ebp<br>jl 0x470940<br>mov edx, dword[esp+0x28]<br>mov eax, dword[esp+0x24]<br>push ebx<br>push esi<br>push 3<br>push 0<br>push edx<br>push eax<br>call dword[sym.imp.ADVAPI32.dll_RegSetValueExW]<br>push esi<br>mov ebx, eax<br>call fcn.0048e3af<br>add esp, 4<br>jmp 0x4709ff<br>push esi<br>call fcn.0048e3af<br>mov ecx, dword[esp+0x28]<br>add esp, 4<br>push ecx<br>call dword[sym.imp.ADVAPI32.dll_RegCloseKey]<br>mov ebx, 0x57<br>mov eax, ebx<br>mov edx, dword[0x4c28ec]<br>mov dword[edx+0x30], eax<br>mov edx, dword[esp+0x20]<br>test ebx, ebx<br>setne al<br>movzx ecx, al<br>push ecx<br>push edx<br>call fcn.0042dd40<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0xc<br>ret 0x10<br>mov ebx, 0x57<br>mov ecx, dword[esp+0x24]<br>push ecx<br>call dword[sym.imp.ADVAPI32.dll_RegCloseKey]<br>cmp ebx, 0xffffffff<br>jne 0x4709d2<br>call dword[sym.imp.KERNEL32.dll_GetLastError]<br>jmp 0x4709d4<br><eoc> ', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
and esp, 0xfffffff8
sub esp, 0x44
push ebx
push esi
mov esi, dword[0x4c6400]
push edi
mov ecx, esi
mov ebx, eax
mov dword[esp+0x28], esi
call fcn.00413110
test ebx, ebx
jne 0x470356
mov dword[esp+0x18], 0x57
mov eax, dword[esp+0x18]
cmp dword[esp+0x18], 0
mov ecx, dword[0x4c28ec]
mov dword[ecx+0x30], eax
mov ecx, dword[ebp+8]
setne dl
movzx eax, dl
push eax
push ecx
call fcn.0042dd40
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 0xc
mov ecx, dword[0x4c28ec]
mov edx, dword[ecx+0xcc]
lea eax, [esp+0x10]
push eax
mov eax, dword[ebp+0xc]
or edx, 0x20019
push edx
push 0
push eax
push ebx
call dword[sym.imp.ADVAPI32.dll_RegOpenKeyExW]
mov dword[esp+0x18], eax
test eax, eax
jne 0x4703f9
mov ebx, dword[ebp+0x10]
mov edx, dword[esp+0x10]
mov edi, dword[sym.imp.ADVAPI32.dll_RegQueryValueExW]
push eax
push eax
lea ecx, [esp+0x24]
push ecx
push eax
push ebx
push edx
call edi
xor ecx, ecx
mov dword[esp+0x18], eax
cmp eax, ecx
jne 0x4703ee
mov eax, dword[esp+0x1c]
dec eax
cmp eax, 6
ja case.0x4703b4.5
jmp dword[eax*4+0x4706f8]
lea edx, [esp+0x14]
push edx
lea eax, [esp+0x24]
push eax
push ecx
push ecx
mov ecx, dword[esp+0x20]
push ebx
push ecx
mov dword[esp+0x2c], 4
call edi
mov dword[esp+0x18], eax
test eax, eax
jne 0x4703ee
mov edx, dword[esp+0x20]
push 0x18
push eax
push edx
mov eax, esi
call fcn.004010e0
mov eax, dword[esp+0x10]
push eax
call dword[sym.imp.ADVAPI32.dll_RegCloseKey]
cmp dword[esp+0x18], 0xffffffff
jne 0x47032b
call dword[sym.imp.KERNEL32.dll_GetLastError]
jmp 0x47032f
mov eax, dword[esp+0x10]
lea edx, [esp+0x14]
push edx
push ecx
push ecx
push ecx
push ebx
push eax
mov dword[esp+0x2c], ecx
call edi
mov dword[esp+0x18], eax
test eax, eax
jne 0x4703ee
mov eax, dword[esp+0x14]
test eax, eax
je 0x4703ee
push 1
shr eax, 1
push 0
add eax, 2
push eax
push 0
push esi
call fcn.00476680
cmp eax, 1
je 0x470460
mov ecx, dword[esp+0x10]
push ecx
call dword[sym.imp.ADVAPI32.dll_RegCloseKey]
xor eax, eax
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 0xc
cmp byte[esi+0x17], 0
jne 0x47046b
mov ebx, dword[esi+0xc]
jmp 0x47046d
mov ebx, esi
test byte[ebx+0x15], 8
je 0x47047a
mov eax, ebx
call fcn.00401160
mov al, byte[ebx+0x17]
cmp al, 1
jne 0x470493
test byte[ebx+0x15], 4
je 0x47048e
mov eax, ebx
call fcn.0042e780
mov ebx, dword[ebx+8]
jmp 0x4704a5
cmp al, 2
jne 0x4704a0
call fcn.00401000
mov ebx, eax
jmp 0x4704a5
mov ebx, 0x4c85b8
mov eax, dword[ebp+0x10]
mov ecx, dword[esp+0x10]
lea edx, [esp+0x14]
push edx
push ebx
push 0
push 0
push eax
push ecx
call edi
mov edx, dword[esp+0x10]
mov edi, eax
push edx
mov dword[esp+0x1c], edi
call dword[sym.imp.ADVAPI32.dll_RegCloseKey]
test edi, edi
jne 0x470501
mov eax, dword[esp+0x14]
test eax, eax
je 0x470501
shr eax, 1
xor ecx, ecx
mov dword[ebx+eax*2], ecx
cmp dword[esp+0x1c], 7
jne 0x470506
mov eax, ebx
cmp word[eax], 0
jne 0x4704fc
cmp word[eax+2], 0
mov ecx, 0xa
mov word[eax], cx
je 0x470506
add eax, 2
jmp 0x4704e7
xor edx, edx
mov word[ebx], dx
mov eax, ebx
lea edx, [eax+2]
jmp 0x470510
mov cx, word[eax]
add eax, 2
test cx, cx
jne 0x470510
sub eax, edx
sar eax, 1
mov edi, eax
mov eax, esi
call fcn.004135a0
cmp byte[esi+0x17], 0
jne 0x470533
mov eax, dword[esi+0xc]
jmp 0x470535
mov eax, esi
cmp byte[eax+0x17], 2
jne 0x47055f
cmp dword[0x4c85f0], 0
je 0x47055f
mov ecx, 0x4c85e4
call fcn.00404270
test eax, eax
jne 0x4703f9
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 0xc
and byte[eax+0x15], 0x86
jmp 0x4703f9
mov eax, dword[esp+0x10]
lea edx, [esp+0x14]
push edx
push ecx
push ecx
push ecx
push ebx
push eax
mov dword[esp+0x2c], ecx
call edi
mov dword[esp+0x18], eax
test eax, eax
jne 0x4706d4
mov eax, dword[esp+0x14]
test eax, eax
je 0x4706d4
push 1
push 0
lea ecx, [eax+eax]
push ecx
push 0
push esi
call fcn.00476680
cmp eax, 1
je 0x4705bf
mov edx, dword[esp+0x10]
push edx
call dword[sym.imp.ADVAPI32.dll_RegCloseKey]
xor eax, eax
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 0xc
cmp byte[esi+0x17], 0
jne 0x4705c8
mov esi, dword[esi+0xc]
test byte[esi+0x15], 8
je 0x4705d5
mov eax, esi
call fcn.00401160
mov al, byte[esi+0x17]
cmp al, 1
jne 0x4705ee
test byte[esi+0x15], 4
je 0x4705e9
mov eax, esi
call fcn.0042e780
mov ebx, dword[esi+8]
jmp 0x470600
cmp al, 2
jne 0x4705fb
call fcn.00401000
mov ebx, eax
jmp 0x470600
mov ebx, 0x4c85b8
mov edx, dword[ebp+0x10]
xor eax, eax
mov word[ebx], ax
mov ecx, dword[esp+0x14]
lea eax, [ebx+ecx*2]
add eax, ecx
lea ecx, [esp+0x14]
push ecx
push eax
push 0
push 0
mov dword[esp+0x34], eax
mov eax, dword[esp+0x20]
push edx
push eax
call edi
mov ecx, dword[esp+0x10]
mov esi, eax
push ecx
mov dword[esp+0x1c], esi
call dword[sym.imp.ADVAPI32.dll_RegCloseKey]
test esi, esi
jne 0x4703f9
mov ecx, 8
mov esi, str.0123456789ABCDEF
lea edi, [esp+0x2c]
rep movsd
xor ecx, ecx
xor edx, edx
movsw word
cmp dword[esp+0x14], ecx
jbe 0x470690
lea esp, [esp]
mov eax, dword[esp+0x24]
movzx eax, byte[ecx+eax]
mov esi, eax
shr eax, 4
and esi, 0xf
mov si, word[esp+esi*2+0x2c]
and eax, 0xf
mov ax, word[esp+eax*2+0x2c]
mov word[ebx+edx*2+2], si
mov word[ebx+edx*2], ax
inc ecx
add edx, 2
cmp ecx, dword[esp+0x14]
jb 0x470660
mov eax, dword[esp+0x28]
xor ecx, ecx
mov word[ebx+edx*2], cx
cmp byte[eax+0x17], cl
jne 0x4706a2
mov eax, dword[eax+0xc]
cmp byte[eax+0x17], 2
jne 0x4706cb
cmp dword[0x4c85f0], ecx
je 0x4706cb
mov ecx, 0x4c85e4
call fcn.00404270
test eax, eax
jne 0x47032b
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 0xc
and byte[eax+0x15], 0x86
jmp 0x47032b
mov edx, dword[esp+0x10]
push edx
jmp 0x4703f3
mov eax, dword[esp+0x10]
push eax
call dword[sym.imp.ADVAPI32.dll_RegCloseKey]
mov dword[esp+0x18], 0x65e
jmp 0x47032b

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f