---
layout: post
title:  "fcn.00470300 @ 4fe6510221c33bf023f6abed461fc13f"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00470300
- **Origin (md5):** 4fe6510221c33bf023f6abed461fc13f
- **VirusTotal:** [virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f][virustotal_ref]

# Code Tags
<span class="tag" id="REGISTRY">REGISTRY</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.00470300@4fe6510221c33bf023f6abed461fc13f">fcn.00470300</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
and esp, 0xfffffff8
sub esp, 0x44
push ebx
push esi
mov esi, dword[0x4c6400]
push edi
mov ecx, esi
mov ebx, eax
mov dword[esp+0x28], esi
call fcn.00413110
test ebx, ebx
jne off.b86
mov dword[esp+0x18], 0x57
mov eax, dword[esp+0x18]
cmp dword[esp+0x18], 0
mov ecx, dword[0x4c28ec]
mov dword[ecx+0x30], eax
mov ecx, dword[ebp+8]
setne dl
movzx eax, dl
push eax
push ecx
call fcn.0042dd40
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 0xc
mov ecx, dword[0x4c28ec]
mov edx, dword[ecx+0xcc]
lea eax, [esp+0x10]
push eax
mov eax, dword[ebp+0xc]
or edx, 0x20019
push edx
push 0
push eax
push ebx
call dword[sym.imp.ADVAPI32.dll_RegOpenKeyExW]
mov dword[esp+0x18], eax
test eax, eax
jne 0x4703f9
mov ebx, dword[ebp+0x10]
mov edx, dword[esp+0x10]
mov edi, dword[sym.imp.ADVAPI32.dll_RegQueryValueExW]
push eax
push eax
lea ecx, [esp+0x24]
push ecx
push eax
push ebx
push edx
call edi
xor ecx, ecx
mov dword[esp+0x18], eax
cmp eax, ecx
jne 0x4703ee
mov eax, dword[esp+0x1c]
dec eax
cmp eax, 6
ja case.0x4703b4.5
jmp dword[eax*4+0x4706f8]
lea edx, [esp+0x14]
push edx
lea eax, [esp+0x24]
push eax
push ecx
push ecx
mov ecx, dword[esp+0x20]
push ebx
push ecx
mov dword[esp+0x2c], 4
call edi
mov dword[esp+0x18], eax
test eax, eax
jne 0x4703ee
mov edx, dword[esp+0x20]
push 0x18
push eax
push edx
mov eax, esi
call fcn.004010e0
mov eax, dword[esp+0x10]
push eax
call dword[sym.imp.ADVAPI32.dll_RegCloseKey]
cmp dword[esp+0x18], 0xffffffff
jne off.b43
call dword[sym.imp.KERNEL32.dll_GetLastError]
jmp off.b47
mov eax, dword[esp+0x10]
lea edx, [esp+0x14]
push edx
push ecx
push ecx
push ecx
push ebx
push eax
mov dword[esp+0x2c], ecx
call edi
mov dword[esp+0x18], eax
test eax, eax
jne 0x4703ee
mov eax, dword[esp+0x14]
test eax, eax
je 0x4703ee
push 1
shr eax, 1
push 0
add eax, 2
push eax
push 0
push esi
call fcn.00476680
cmp eax, 1
je 0x470460
mov ecx, dword[esp+0x10]
push ecx
call dword[sym.imp.ADVAPI32.dll_RegCloseKey]
xor eax, eax
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 0xc
cmp byte[esi+0x17], 0
jne 0x47046b
mov ebx, dword[esi+0xc]
jmp 0x47046d
mov ebx, esi
test byte[ebx+0x15], 8
je 0x47047a
mov eax, ebx
call fcn.00401160
mov al, byte[ebx+0x17]
cmp al, 1
jne 0x470493
test byte[ebx+0x15], 4
je 0x47048e
mov eax, ebx
call fcn.0042e780
mov ebx, dword[ebx+8]
jmp 0x4704a5
cmp al, 2
jne 0x4704a0
call fcn.00401000
mov ebx, eax
jmp 0x4704a5
mov ebx, 0x4c85b8
mov eax, dword[ebp+0x10]
mov ecx, dword[esp+0x10]
lea edx, [esp+0x14]
push edx
push ebx
push 0
push 0
push eax
push ecx
call edi
mov edx, dword[esp+0x10]
mov edi, eax
push edx
mov dword[esp+0x1c], edi
call dword[sym.imp.ADVAPI32.dll_RegCloseKey]
test edi, edi
jne 0x470501
mov eax, dword[esp+0x14]
test eax, eax
je 0x470501
shr eax, 1
xor ecx, ecx
mov dword[ebx+eax*2], ecx
cmp dword[esp+0x1c], 7
jne 0x470506
mov eax, ebx
cmp word[eax], 0
jne 0x4704fc
cmp word[eax+2], 0
mov ecx, 0xa
mov word[eax], cx
je 0x470506
add eax, 2
jmp 0x4704e7
xor edx, edx
mov word[ebx], dx
mov eax, ebx
lea edx, [eax+2]
jmp 0x470510
mov cx, word[eax]
add eax, 2
test cx, cx
jne 0x470510
sub eax, edx
sar eax, 1
mov edi, eax
mov eax, esi
call fcn.004135a0
cmp byte[esi+0x17], 0
jne 0x470533
mov eax, dword[esi+0xc]
jmp 0x470535
mov eax, esi
cmp byte[eax+0x17], 2
jne 0x47055f
cmp dword[0x4c85f0], 0
je 0x47055f
mov ecx, 0x4c85e4
call fcn.00404270
test eax, eax
jne 0x4703f9
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 0xc
and byte[eax+0x15], 0x86
jmp 0x4703f9
mov eax, dword[esp+0x10]
lea edx, [esp+0x14]
push edx
push ecx
push ecx
push ecx
push ebx
push eax
mov dword[esp+0x2c], ecx
call edi
mov dword[esp+0x18], eax
test eax, eax
jne 0x4706d4
mov eax, dword[esp+0x14]
test eax, eax
je 0x4706d4
push 1
push 0
lea ecx, [eax+eax]
push ecx
push 0
push esi
call fcn.00476680
cmp eax, 1
je 0x4705bf
mov edx, dword[esp+0x10]
push edx
call dword[sym.imp.ADVAPI32.dll_RegCloseKey]
xor eax, eax
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 0xc
cmp byte[esi+0x17], 0
jne 0x4705c8
mov esi, dword[esi+0xc]
test byte[esi+0x15], 8
je 0x4705d5
mov eax, esi
call fcn.00401160
mov al, byte[esi+0x17]
cmp al, 1
jne 0x4705ee
test byte[esi+0x15], 4
je 0x4705e9
mov eax, esi
call fcn.0042e780
mov ebx, dword[esi+8]
jmp 0x470600
cmp al, 2
jne 0x4705fb
call fcn.00401000
mov ebx, eax
jmp 0x470600
mov ebx, 0x4c85b8
mov edx, dword[ebp+0x10]
xor eax, eax
mov word[ebx], ax
mov ecx, dword[esp+0x14]
lea eax, [ebx+ecx*2]
add eax, ecx
lea ecx, [esp+0x14]
push ecx
push eax
push 0
push 0
mov dword[esp+0x34], eax
mov eax, dword[esp+0x20]
push edx
push eax
call edi
mov ecx, dword[esp+0x10]
mov esi, eax
push ecx
mov dword[esp+0x1c], esi
call dword[sym.imp.ADVAPI32.dll_RegCloseKey]
test esi, esi
jne 0x4703f9
mov ecx, 8
mov esi, str.0123456789ABCDEF
lea edi, [esp+0x2c]
rep movsd
xor ecx, ecx
xor edx, edx
movsw word
cmp dword[esp+0x14], ecx
jbe 0x470690
lea esp, [esp]
mov eax, dword[esp+0x24]
movzx eax, byte[ecx+eax]
mov esi, eax
shr eax, 4
and esi, 0xf
mov si, word[esp+esi*2+0x2c]
and eax, 0xf
mov ax, word[esp+eax*2+0x2c]
mov word[ebx+edx*2+2], si
mov word[ebx+edx*2], ax
inc ecx
add edx, 2
cmp ecx, dword[esp+0x14]
jb 0x470660
mov eax, dword[esp+0x28]
xor ecx, ecx
mov word[ebx+edx*2], cx
cmp byte[eax+0x17], cl
jne 0x4706a2
mov eax, dword[eax+0xc]
cmp byte[eax+0x17], 2
jne 0x4706cb
cmp dword[0x4c85f0], ecx
je 0x4706cb
mov ecx, 0x4c85e4
call fcn.00404270
test eax, eax
jne off.b43
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 0xc
and byte[eax+0x15], 0x86
jmp off.b43
mov edx, dword[esp+0x10]
push edx
jmp 0x4703f3
mov eax, dword[esp+0x10]
push eax
call dword[sym.imp.ADVAPI32.dll_RegCloseKey]
mov dword[esp+0x18], 0x65e
jmp off.b43

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f