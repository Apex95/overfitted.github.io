---
layout: post
title:  "fcn.00439bbf @ 9c2b894b84f59672d8be2e984066f76f"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00439bbf
- **Origin (md5):** 9c2b894b84f59672d8be2e984066f76f
- **VirusTotal:** [virustotal.com/gui/file/9c2b894b84f59672d8be2e984066f76f][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.00439bbf@9c2b894b84f59672d8be2e984066f76f">fcn.00439bbf</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push 0x64
mov eax, 0x57706c
call fcn.00553908
mov ebx, ecx
mov dword[ebp-0x28], ebx
mov eax, dword[ebx]
push dword[ebp+0x10]
push dword[ebp+0xc]
mov esi, dword[eax+0x390]
mov ecx, esi
call fcn.00553897
mov ecx, ebx
call esi
mov ecx, dword[0x5dfe0c]
mov edi, eax
or esi, 0xffffffff
mov dword[ebp-0x30], edi
cmp ecx, ebx
je off.b97
cmp dword[0x5dfe28], 0
je off.b106
mov dword[0x5dfe0c], ebx
test ecx, ecx
je off.b97
mov eax, dword[ecx+0xbf4]
push eax
mov dword[ecx+0xbf4], esi
call fcn.004376e0
cmp dword[0x5dfe28], 0
jne off.b160
push dword[ebx+0x20]
call dword[sym.imp.USER32.dll_GetParent]
push eax
call fcn.00415cb4
push eax
push 0x590978
call fcn.004317b9
pop ecx
pop ecx
test eax, eax
je off.b160
push dword[ebx+0x20]
call dword[sym.imp.USER32.dll_GetParent]
push eax
call fcn.00415cb4
mov ecx, eax
call fcn.0041bde5
test edi, edi
jns off.b306
mov dword[ebx+0xbec], esi
cmp dword[0x5dfe28], 0
je off.b245
cmp dword[ebx+0xb78], 0
jne off.b245
mov eax, dword[ebx+0xbf4]
mov dword[ebx+0xbf4], esi
cmp eax, esi
je off.b225
push eax
mov ecx, ebx
call fcn.004376e0
push dword[ebx+0x20]
call dword[sym.imp.USER32.dll_UpdateWindow]
mov eax, dword[ebx]
push esi
mov esi, dword[eax+0x3b0]
mov ecx, esi
call fcn.00553897
mov ecx, ebx
call esi
mov eax, dword[ebx]
mov esi, dword[eax+0x1cc]
mov ecx, esi
call fcn.00553897
mov ecx, ebx
call esi
test eax, eax
je off.b285
call fcn.00410017
push dword[eax+0xfc]
call dword[sym.imp.USER32.dll_SetCursor]
push dword[ebp+0x10]
mov ecx, ebx
push dword[ebp+0xc]
push dword[ebp+8]
call fcn.0048838e
jmp off.b2010
push edi
mov ecx, ebx
call fcn.00436cc2
mov dword[ebp-0x24], eax
test eax, eax
je off.b2010
mov ecx, dword[ebx]
push edi
mov esi, dword[ecx+0x25c]
mov ecx, esi
call fcn.00553897
mov ecx, ebx
call esi
and dword[0x5dfe2c], 0
cmp dword[0x5dfe34], 0
je off.b440
mov eax, dword[ebx]
mov esi, dword[eax+0x420]
mov ecx, esi
call fcn.00553897
mov ecx, ebx
call esi
test eax, eax
je off.b440
cmp dword[0x5dfe28], 0
jne off.b462
push 0x12
call dword[sym.imp.USER32.dll_GetAsyncKeyState]
mov ecx, 0x8000
test cx, ax
je off.b440
mov dword[0x5dfe2c], 1
or dword[ebx+0xbf0], 0xffffffff
mov dword[ebx+0xbf4], edi
mov dword[0x5dfe0c], ebx
cmp dword[0x5dfe28], 0
jne off.b462
cmp dword[0x5dfe2c], 0
je off.b1613
xor ecx, ecx
cmp dword[ebx+0xb78], ecx
jne off.b1613
cmp dword[ebx+0xbb8], ecx
jne off.b1613
mov eax, dword[ebx+0xbf4]
mov dword[ebp-0x34], eax
mov eax, dword[ebx]
mov dword[ebp-0x20], ecx
mov dword[ebp-0x1c], ecx
mov dword[ebp-0x18], ecx
mov esi, dword[eax+0x36c]
mov dword[ebp-0x14], ecx
lea ecx, [ebp-0x20]
push ecx
push edi
mov ecx, esi
mov dword[ebx+0xbf4], edi
call fcn.00553897
mov ecx, ebx
call esi
mov eax, dword[ebp-0x34]
cmp eax, 0xffffffff
je off.b555
push eax
mov ecx, ebx
call fcn.004376e0
push dword[ebx+0xbf4]
mov ecx, ebx
call fcn.00436cc2
mov ecx, eax
mov dword[ebp-0x2c], ecx
mov dword[ebx+0xd0c], ecx
test ecx, ecx
jne off.b588
call fcn.0040f785
mov eax, dword[ebp+8]
and eax, 8
mov dword[ebx+0xba0], eax
mov eax, dword[ecx]
mov esi, dword[eax+0x60]
mov ecx, esi
call fcn.00553897
mov ecx, dword[ebp-0x2c]
call esi
test eax, eax
jne off.b659
and dword[ebx+0xd0c], eax
or dword[ebx+0xbf4], 0xffffffff
mov eax, dword[ebp-0x34]
cmp eax, 0xffffffff
je off.b2010
push eax
mov ecx, ebx
call fcn.004376e0
jmp off.b2010
push edi
mov ecx, ebx
call fcn.004376e0
push dword[ebx+0x20]
call dword[sym.imp.USER32.dll_UpdateWindow]
mov edi, dword[ebx+0xd0c]
mov eax, dword[edi]
mov esi, dword[eax+0x3c]
mov ecx, esi
call fcn.00553897
mov ecx, edi
call esi
test eax, eax
je off.b848
mov eax, dword[ebp+0xc]
sub eax, dword[ebp-0x18]
push eax
call fcn.0055e1e6
pop ecx
cmp eax, 6
jg off.b848
cmp dword[0x5dfe2c], 0
jne off.b848
mov eax, dword[ebp-0x28]
mov dword[ebx+0xba4], 1
add eax, 0xcdc
mov ebx, dword[ebx+0xd0c]
mov edi, eax
mov dword[ebp-0x2c], eax
lea esi, [ebx+0x54]
movsd dword
movsd dword
movsd dword
movsd dword
mov eax, dword[ebx]
mov esi, dword[eax+0x38]
mov ecx, esi
call fcn.00553897
mov ecx, ebx
call esi
test eax, eax
je off.b802
push 2
push 2
push dword[ebp-0x2c]
call dword[sym.imp.USER32.dll_InflateRect]
mov ebx, dword[ebp-0x28]
push dword[ebx+0x20]
call dword[sym.imp.USER32.dll_SetCapture]
push eax
call fcn.00415cb4
mov dword[ebx+0xd04], eax
call fcn.00410017
push dword[eax+0xf0]
call dword[sym.imp.USER32.dll_SetCursor]
jmp off.b1962
mov edi, dword[ebx+0xd0c]
mov eax, dword[edi]
mov esi, dword[eax+0x50]
mov ecx, esi
call fcn.00553897
mov ecx, edi
call esi
test eax, eax
je off.b1601
mov edi, dword[ebx+0xd0c]
mov eax, dword[edi]
mov esi, dword[eax+0x74]
mov ecx, esi
call fcn.00553897
mov ecx, edi
call esi
test eax, eax
je off.b1601
lea ecx, [ebp-0x70]
call fcn.004d12c4
mov edi, dword[ebx+0xd0c]
lea ecx, [ebp-0x70]
and dword[ebp-4], 0
push ecx
mov eax, dword[edi]
mov esi, dword[eax+0xc]
mov ecx, esi
call fcn.00553897
mov ecx, edi
call esi
mov eax, dword[ebx]
mov ecx, dword[ebp-0x24]
mov esi, dword[eax+0x418]
push dword[ecx+0x20]
mov ecx, esi
call fcn.00553897
mov ecx, ebx
call esi
and dword[0x5dff10], 0
mov eax, dword[ebp+0xc]
mov edi, dword[ebx+0x20]
mov dword[ebx+0xcf4], eax
mov eax, dword[ebp+0x10]
mov dword[ebx+0xcf8], eax
cmp dword[0x5dfe2c], 0
je off.b1018
mov dword[0x5dfe28], 1
push 0x5dfec8
lea eax, [ebp-0x20]
push eax
push 3
lea ecx, [ebp-0x70]
call fcn.004d1d6c
push edi
mov esi, eax
call dword[sym.imp.USER32.dll_IsWindow]
test eax, eax
jne off.b1086
cmp dword[0x5dfe2c], eax
je off.b1073
mov dword[0x5dfe28], eax
mov dword[0x5dfe2c], eax
mov dword[0x5dfe0c], eax
lea ecx, [ebp-0x70]
call fcn.004d1331
jmp off.b2010
and dword[ebp-0x3c], 0
lea eax, [ebp-0x3c]
and dword[ebp-0x38], 0
push eax
call dword[sym.imp.USER32.dll_GetCursorPos]
lea eax, [ebp-0x3c]
push eax
push dword[ebx+0x20]
call dword[sym.imp.USER32.dll_ScreenToClient]
cmp dword[0x5dff10], 0
je off.b1534
push dword[ebp-0x38]
lea eax, [ebp-0x20]
push dword[ebp-0x3c]
push eax
call dword[sym.imp.USER32.dll_PtInRect]
test eax, eax
jne off.b1534
cmp esi, 1
je off.b1507
mov ecx, dword[ebx+0xd0c]
test ecx, ecx
je off.b1507
cmp dword[0x5dff0c], eax
jne off.b1507
mov eax, dword[ebx]
push esi
push ecx
mov esi, dword[eax+0x37c]
mov ecx, esi
call fcn.00553897
mov ecx, ebx
call esi
test eax, eax
je off.b1507
push dword[ebx+0xd0c]
mov esi, dword[ebx]
mov ecx, ebx
call fcn.00434c25
mov esi, dword[esi+0x34c]
mov ecx, esi
push eax
call fcn.00553897
mov ecx, ebx
call esi
mov eax, dword[ebx]
mov esi, dword[eax+0x3e4]
mov ecx, esi
call fcn.00553897
mov ecx, ebx
call esi
mov edi, 0x505
push edi
push 0
push 0
push dword[ebx+0x20]
call dword[sym.imp.USER32.dll_RedrawWindow]
mov eax, dword[ebx]
push 1
mov esi, dword[eax+0x2d4]
mov ecx, esi
call fcn.00553897
mov ecx, ebx
call esi
push dword[ebx+0x20]
call dword[sym.imp.USER32.dll_GetParent]
push eax
call fcn.00415cb4
test eax, eax
je off.b1364
cmp dword[eax+0x20], 0
je off.b1364
push dword[ebx+0x20]
call dword[sym.imp.USER32.dll_GetParent]
push eax
call fcn.00415cb4
push edi
push 0
push 0
push dword[eax+0x20]
call dword[sym.imp.USER32.dll_RedrawWindow]
cmp dword[0x5dfe2c], 0
jne off.b1406
mov eax, dword[ebx]
mov esi, dword[eax+0x20c]
mov ecx, esi
call fcn.00553897
mov ecx, ebx
call esi
push edi
push 0
push 0
push dword[ebx+0x20]
call dword[sym.imp.USER32.dll_RedrawWindow]
push dword[ebx+0x20]
call dword[sym.imp.USER32.dll_GetParent]
push eax
call fcn.00415cb4
push 0x59c86c
mov ecx, eax
call fcn.00431851
test eax, eax
je off.b1563
push dword[ebx+0x20]
call dword[sym.imp.USER32.dll_GetParent]
push eax
call fcn.00415cb4
push dword[eax+0x20]
call dword[sym.imp.USER32.dll_GetParent]
push eax
call fcn.00415cb4
push eax
push 0x5d8528
call fcn.004317b9
mov edi, eax
pop ecx
pop ecx
test edi, edi
je off.b1563
mov ecx, dword[edi]
mov esi, dword[ecx+0x210]
mov ecx, esi
call fcn.00553897
mov ecx, edi
call esi
jmp off.b1563
mov eax, dword[ebx+0xd0c]
test eax, eax
je off.b1563
push 1
add eax, 0x54
push eax
push dword[ebx+0x20]
call dword[sym.imp.USER32.dll_InvalidateRect]
jmp off.b1563
mov eax, dword[ebx]
mov ecx, dword[ebp-0x30]
mov dword[ebx+0xbf0], ecx
push ecx
mov esi, dword[eax+0x3b0]
mov ecx, esi
call fcn.00553897
mov ecx, ebx
call esi
and dword[ebx+0xd0c], 0
lea ecx, [ebp-0x70]
or dword[ebx+0xcf4], 0xffffffff
or dword[ebx+0xcf8], 0xffffffff
or dword[ebp-4], 0xffffffff
call fcn.004d1331
jmp off.b1962
and dword[ebx+0xd0c], 0
jmp off.b1962
push edi
mov ecx, ebx
mov dword[ebx+0xbec], edi
call fcn.0043ee1d
mov esi, dword[ebp-0x24]
test dword[esi+0x24], 0x40000
je off.b1667
push 0x5d89e8
mov ecx, esi
call fcn.00431851
test eax, eax
jne off.b1667
or dword[ebx+0xbec], 0xffffffff
jmp off.b2010
or dword[esi+0x24], 0x20000
mov ecx, ebx
push edi
call fcn.004376e0
push dword[ebx+0x20]
call dword[sym.imp.USER32.dll_UpdateWindow]
mov eax, dword[ebx]
push dword[esi+0x20]
mov esi, dword[eax+0x418]
mov ecx, esi
call fcn.00553897
mov ecx, ebx
call esi
mov ecx, dword[ebp-0x24]
mov eax, dword[ecx]
mov esi, dword[eax+0x70]
mov ecx, esi
call fcn.00553897
mov ecx, dword[ebp-0x24]
call esi
mov dword[ebp-0x30], eax
mov eax, dword[ebp-0x24]
push 0
push ebx
mov ecx, dword[eax]
mov esi, dword[ecx+0x20]
mov ecx, esi
call fcn.00553897
mov ecx, dword[ebp-0x24]
call esi
test eax, eax
je off.b1941
mov esi, dword[ebp-0x24]
lea ecx, [ebx+0xc3c]
and dword[ebp-0x28], 0
push 0
push esi
call fcn.004d002d
test eax, eax
je off.b1801
and dword[esi+0x24], 0xfffdffff
jmp off.b1808
mov dword[ebp-0x28], 1
mov eax, dword[ebx]
or dword[ebx+0xbec], 0xffffffff
or dword[ebx+0xbf0], 0xffffffff
push 0xffffffffffffffff
mov esi, dword[eax+0x3b0]
mov ecx, esi
call fcn.00553897
mov ecx, ebx
call esi
push edi
mov ecx, ebx
call fcn.004376e0
push dword[ebx+0x20]
call dword[sym.imp.USER32.dll_UpdateWindow]
cmp dword[ebp-0x28], 0
jne off.b1962
mov eax, dword[ebp-0x24]
mov eax, dword[eax]
mov esi, dword[eax+0x70]
mov ecx, esi
call fcn.00553897
mov ecx, dword[ebp-0x24]
call esi
cmp dword[ebp-0x30], eax
je off.b1962
push edi
mov ecx, ebx
call fcn.00433ec1
mov esi, eax
test esi, esi
jle off.b1962
push esi
push 0xfffffffffffffffc
push dword[ebx+0x20]
push 0x800a
call dword[sym.imp.USER32.dll_NotifyWinEvent]
push esi
push 0xfffffffffffffffc
push dword[ebx+0x20]
push 0x8005
call dword[sym.imp.USER32.dll_NotifyWinEvent]
jmp off.b1962
push dword[ebx+0x20]
call dword[sym.imp.USER32.dll_SetCapture]
push eax
call fcn.00415cb4
mov dword[ebx+0xd04], eax
cmp dword[0x5dfe2c], 0
je off.b2010
and dword[0x5dfe2c], 0
and dword[0x5dfe0c], 0
push 0
call fcn.0043d6ad
push 0x505
push 0
push 0
push dword[ebx+0x20]
call dword[sym.imp.USER32.dll_RedrawWindow]
call fcn.005538b2
ret 0xc

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/9c2b894b84f59672d8be2e984066f76f