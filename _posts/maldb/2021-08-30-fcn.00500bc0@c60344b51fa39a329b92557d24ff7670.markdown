---
layout: post
title:  "fcn.00500bc0 @ c60344b51fa39a329b92557d24ff7670"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00500bc0
- **Origin (md5):** c60344b51fa39a329b92557d24ff7670
- **VirusTotal:** [virustotal.com/gui/file/c60344b51fa39a329b92557d24ff7670][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.00500bc0@c60344b51fa39a329b92557d24ff7670">fcn.00500bc0</a><br>@c60344b51fa39a329b92557d24ff7670</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
sub esp, 0x69c
mov eax, dword[0x5ffcc0]
xor eax, ebp
mov dword[ebp-8], eax
mov dword[ebp-0x684], ecx
cmp dword[ebp+0x14], 3
je off.b53
cmp dword[ebp+0x14], 2
je off.b53
cmp dword[ebp+0x14], 1
je off.b53
mov eax, 0x10000
jmp off.b1693
cmp dword[ebp+0x14], 3
jne off.b402
mov eax, dword[ebp-0x684]
mov ecx, dword[ebp+8]
cmp ecx, dword[eax+4]
je off.b259
mov edx, dword[ebp-0x684]
cmp dword[edx+4], 0xffffffff
je off.b110
mov eax, dword[ebp-0x684]
mov ecx, dword[eax]
push ecx
call fcn.004ffaa0
add esp, 4
mov edx, dword[ebp-0x684]
mov dword[edx+4], 0xffffffff
mov eax, dword[ebp-0x684]
mov ecx, dword[eax]
mov edx, dword[ebp+8]
cmp edx, dword[ecx+4]
jl off.b149
mov eax, 0x10000
jmp off.b1693
mov eax, dword[ebp-0x684]
mov ecx, dword[eax]
mov edx, dword[ebp+8]
cmp edx, dword[ecx+0x10]
jge off.b182
mov eax, dword[ebp-0x684]
mov ecx, dword[eax]
push ecx
call fcn.004ff040
add esp, 4
mov edx, dword[ebp-0x684]
mov eax, dword[edx]
mov ecx, dword[eax+0x10]
cmp ecx, dword[ebp+8]
jge off.b217
mov edx, dword[ebp-0x684]
mov eax, dword[edx]
push eax
call fcn.004ff0b0
add esp, 4
jmp off.b182
mov ecx, dword[ebp-0x684]
mov edx, dword[ecx+0x23c]
push edx
mov eax, dword[ebp-0x684]
mov ecx, dword[eax]
push ecx
call fcn.004ff3f0
add esp, 8
mov edx, dword[ebp-0x684]
mov eax, dword[ebp+8]
mov dword[edx+4], eax
lea ecx, [ebp-0x241]
push ecx
mov edx, dword[ebp+0x10]
push edx
mov eax, dword[ebp+0xc]
push eax
mov ecx, dword[ebp-0x684]
mov edx, dword[ecx]
push edx
call fcn.004ff680
add esp, 0x10
mov dword[ebp-0x240], eax
cmp dword[ebp-0x240], 0
jg off.b336
mov eax, dword[ebp-0x684]
mov ecx, dword[eax]
push ecx
call fcn.004ffaa0
add esp, 4
mov edx, dword[ebp-0x684]
mov dword[edx+4], 0xffffffff
movzx eax, byte[ebp-0x241]
test eax, eax
je off.b354
xor eax, eax
jmp off.b1693
cmp dword[ebp-0x240], 0
jle off.b373
mov eax, 0x600
jmp off.b1693
cmp dword[ebp-0x240], 0xffffff96
jne off.b392
mov eax, 0x1000
jmp off.b1693
mov eax, 0x5000000
jmp off.b1693
mov ecx, dword[ebp-0x684]
cmp dword[ecx+4], 0xffffffff
je off.b431
mov edx, dword[ebp-0x684]
mov eax, dword[edx]
push eax
call fcn.004ffaa0
add esp, 4
mov ecx, dword[ebp-0x684]
mov dword[ecx+4], 0xffffffff
mov edx, dword[ebp-0x684]
mov eax, dword[edx]
mov ecx, dword[ebp+8]
cmp ecx, dword[eax+4]
jl off.b470
mov eax, 0x10000
jmp off.b1693
mov edx, dword[ebp-0x684]
mov eax, dword[edx]
mov ecx, dword[ebp+8]
cmp ecx, dword[eax+0x10]
jge off.b503
mov edx, dword[ebp-0x684]
mov eax, dword[edx]
push eax
call fcn.004ff040
add esp, 4
mov ecx, dword[ebp-0x684]
mov edx, dword[ecx]
mov eax, dword[edx+0x10]
cmp eax, dword[ebp+8]
jge off.b538
mov ecx, dword[ebp-0x684]
mov edx, dword[ecx]
push edx
call fcn.004ff0b0
add esp, 4
jmp off.b503
lea eax, [ebp-0x238]
push eax
mov ecx, dword[ebp+8]
push ecx
mov ecx, dword[ebp-0x684]
call fcn.004fffc0
mov edx, dword[ebp-0x2c]
and edx, 0x10
je off.b749
cmp dword[ebp+0x14], 1
jne off.b585
xor eax, eax
jmp off.b1693
mov eax, dword[ebp+0xc]
mov dword[ebp-0x248], eax
mov ecx, dword[ebp-0x248]
movzx edx, word[ecx]
cmp edx, 0x2f
je off.b662
mov eax, dword[ebp-0x248]
movzx ecx, word[eax]
cmp ecx, 0x5c
je off.b662
mov edx, dword[ebp-0x248]
movzx eax, word[edx]
test eax, eax
je off.b650
mov ecx, dword[ebp-0x248]
movzx edx, word[ecx+2]
cmp edx, 0x3a
je off.b662
mov dword[ebp-0x688], 0
jmp off.b672
mov dword[ebp-0x688], 1
mov al, byte[ebp-0x688]
mov byte[ebp-0x242], al
movzx ecx, byte[ebp-0x242]
test ecx, ecx
je off.b714
mov edx, dword[ebp-0x248]
push edx
push 0
call fcn.00500970
add esp, 8
jmp off.b742
mov eax, dword[ebp-0x248]
push eax
mov ecx, dword[ebp-0x684]
add ecx, 0x244
push ecx
call fcn.00500970
add esp, 8
xor eax, eax
jmp off.b1693
cmp dword[ebp+0x14], 1
jne off.b766
mov edx, dword[ebp+0xc]
mov dword[ebp-4], edx
jmp off.b1282
mov eax, dword[ebp+0xc]
mov dword[ebp-0x250], eax
mov ecx, dword[ebp-0x250]
mov dword[ebp-0x254], ecx
mov edx, dword[ebp-0x254]
mov dword[ebp-0x66c], edx
mov eax, dword[ebp-0x66c]
movzx ecx, word[eax]
test ecx, ecx
je off.b872
mov edx, dword[ebp-0x66c]
movzx eax, word[edx]
cmp eax, 0x2f
je off.b840
mov ecx, dword[ebp-0x66c]
movzx edx, word[ecx]
cmp edx, 0x5c
jne off.b855
mov eax, dword[ebp-0x66c]
add eax, 2
mov dword[ebp-0x254], eax
mov ecx, dword[ebp-0x66c]
add ecx, 2
mov dword[ebp-0x66c], ecx
jmp off.b799
mov edx, dword[ebp-0x250]
mov dword[ebp-0x68c], edx
lea eax, [ebp-0x668]
mov dword[ebp-0x690], eax
mov ecx, dword[ebp-0x690]
mov dword[ebp-0x694], ecx
mov edx, dword[ebp-0x68c]
mov ax, word[edx]
mov word[ebp-0x696], ax
mov ecx, dword[ebp-0x690]
mov dx, word[ebp-0x696]
mov word[ecx], dx
mov eax, dword[ebp-0x68c]
add eax, 2
mov dword[ebp-0x68c], eax
mov ecx, dword[ebp-0x690]
add ecx, 2
mov dword[ebp-0x690], ecx
cmp word[ebp-0x696], 0
jne off.b908
mov edx, dword[ebp-0x254]
cmp edx, dword[ebp-0x250]
jne off.b1005
xor eax, eax
mov word[ebp-0x668], ax
jmp off.b1029
mov ecx, dword[ebp-0x254]
sub ecx, dword[ebp-0x250]
sar ecx, 1
xor edx, edx
mov word[ebp+ecx*2-0x668], dx
movzx eax, word[ebp-0x668]
cmp eax, 0x2f
je off.b1088
movzx ecx, word[ebp-0x668]
cmp ecx, 0x5c
je off.b1088
movzx edx, word[ebp-0x668]
test edx, edx
je off.b1076
movzx eax, word[ebp-0x666]
cmp eax, 0x3a
je off.b1088
mov dword[ebp-0x69c], 0
jmp off.b1098
mov dword[ebp-0x69c], 1
mov cl, byte[ebp-0x69c]
mov byte[ebp-0x249], cl
movzx edx, byte[ebp-0x249]
test edx, edx
je off.b1175
mov eax, dword[ebp-0x254]
push eax
lea ecx, [ebp-0x668]
push ecx
push str._s_s_
lea edx, [ebp-0x460]
push edx
call dword[sym.imp.USER32.dll_wsprintfW]
add esp, 0x10
lea eax, [ebp-0x668]
push eax
push 0
call fcn.00500970
add esp, 8
jmp off.b1249
mov ecx, dword[ebp-0x254]
push ecx
lea edx, [ebp-0x668]
push edx
mov eax, dword[ebp-0x684]
add eax, 0x244
push eax
push str._s_s_s_
lea ecx, [ebp-0x460]
push ecx
call dword[sym.imp.USER32.dll_wsprintfW]
add esp, 0x14
lea edx, [ebp-0x668]
push edx
mov eax, dword[ebp-0x684]
add eax, 0x244
push eax
call fcn.00500970
add esp, 8
push 0
mov ecx, dword[ebp-0x2c]
push ecx
push 2
push 0
push 0
push 0x40000000
lea edx, [ebp-0x460]
push edx
call dword[sym.imp.KERNEL32.dll_CreateFileW]
mov dword[ebp-4], eax
cmp dword[ebp-4], 0xffffffff
jne off.b1298
mov eax, 0x200
jmp off.b1693
mov eax, dword[ebp-0x684]
mov ecx, dword[eax+0x23c]
push ecx
mov edx, dword[ebp-0x684]
mov eax, dword[edx]
push eax
call fcn.004ff3f0
add esp, 8
mov ecx, dword[ebp-0x684]
cmp dword[ecx+0x240], 0
jne off.b1380
push 0x4000
call fcn.00552374
add esp, 4
mov dword[ebp-0x680], eax
mov edx, dword[ebp-0x684]
mov eax, dword[ebp-0x680]
mov dword[edx+0x240], eax
mov dword[ebp-0x23c], 0
cmp dword[ebp-0x23c], 0
jne off.b1610
lea ecx, [ebp-0x671]
push ecx
push 0x4000
mov edx, dword[ebp-0x684]
mov eax, dword[edx+0x240]
push eax
mov ecx, dword[ebp-0x684]
mov edx, dword[ecx]
push edx
call fcn.004ff680
add esp, 0x10
mov dword[ebp-0x670], eax
cmp dword[ebp-0x670], 0xffffff96
jne off.b1475
mov dword[ebp-0x23c], 0x1000
jmp off.b1610
cmp dword[ebp-0x670], 0
jge off.b1496
mov dword[ebp-0x23c], 0x5000000
jmp off.b1610
cmp dword[ebp-0x670], 0
jle off.b1571
push 0
lea eax, [ebp-0x67c]
push eax
mov ecx, dword[ebp-0x670]
push ecx
mov edx, dword[ebp-0x684]
mov eax, dword[edx+0x240]
push eax
mov ecx, dword[ebp-4]
push ecx
call dword[sym.imp.KERNEL32.dll_WriteFile]
mov dword[ebp-0x678], eax
cmp dword[ebp-0x678], 0
jne off.b1571
mov dword[ebp-0x23c], 0x400
jmp off.b1610
movzx edx, byte[ebp-0x671]
test edx, edx
je off.b1584
jmp off.b1610
cmp dword[ebp-0x670], 0
jne off.b1605
mov dword[ebp-0x23c], 0x5000000
jmp off.b1610
jmp off.b1390
cmp dword[ebp-0x23c], 0
jne off.b1641
lea eax, [ebp-0x18]
push eax
lea ecx, [ebp-0x28]
push ecx
lea edx, [ebp-0x20]
push edx
mov eax, dword[ebp-4]
push eax
call dword[sym.imp.KERNEL32.dll_SetFileTime]
cmp dword[ebp+0x14], 1
je off.b1657
mov ecx, dword[ebp-4]
push ecx
call dword[sym.imp.KERNEL32.dll_CloseHandle]
mov edx, dword[ebp-0x684]
mov eax, dword[edx]
push eax
call fcn.004ffaa0
add esp, 4
cmp dword[ebp-0x23c], 0
je off.b1691
mov eax, dword[ebp-0x23c]
jmp off.b1693
xor eax, eax
mov ecx, dword[ebp-8]
xor ecx, ebp
call fcn.005713ed
mov esp, ebp
pop ebp
ret 0x10

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/c60344b51fa39a329b92557d24ff7670