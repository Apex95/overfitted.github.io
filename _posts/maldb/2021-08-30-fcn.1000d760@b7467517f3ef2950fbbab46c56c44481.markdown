---
layout: post
title:  "fcn.1000d760 @ b7467517f3ef2950fbbab46c56c44481"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.1000d760
- **Origin (md5):** b7467517f3ef2950fbbab46c56c44481
- **VirusTotal:** [virustotal.com/gui/file/b7467517f3ef2950fbbab46c56c44481][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-181.12509155273438, 669.302978515625, '<b><a href="/report/fcn.1000d760@b7467517f3ef2950fbbab46c56c44481">fcn.1000d760</a><br>@b7467517f3ef2950fbbab46c56c44481</b><br>push ebp<br>mov ebp, esp<br>sub esp, 0x30<br>push ebx<br>push esi<br>mov ebx, ecx<br>lea ecx, [ebp-0x2c]<br>push edi<br>mov edi, dword[sym.imp.DuiLib.dll_public:_void___thiscall_DuiLib::CRect::constructor_void_]<br>mov dword[ebp-0xc], ebx<br>call edi<br>push 0<br>lea eax, [ebp-0x2c]<br>push eax<br>push 0<br>push 0x30<br>call dword[sym.imp.USER32.dll_SystemParametersInfoW]<br>mov esi, dword[sym.imp.USER32.dll_GetSystemMetrics]<br>push 0<br>call esi<br>push 1<br>mov dword[ebp-8], eax<br>call esi<br>lea ecx, [ebp-0x1c]<br>call edi<br>lea eax, [ebp-0x1c]<br>push eax<br>push dword[ebx+4]<br>call dword[sym.imp.USER32.dll_GetWindowRect]<br>cmp dword[ebp+8], 5<br>lea ecx, [ebp-0x1c]<br>jge 0x1000d7bd<br>call dword[sym.imp.DuiLib.dll_public:_int___thiscall_DuiLib::CRect::GetWidth_void_const]<br>jmp 0x1000d7c3<br>call dword[sym.imp.DuiLib.dll_public:_int___thiscall_DuiLib::CRect::GetHeight_void_const]<br>mov ecx, eax<br>mov eax, 0x55555556<br>imul ecx<br>mov eax, dword[ebp+8]<br>mov ecx, dword[ebp-0x1c]<br>mov ebx, edx<br>shr ebx, 0x1f<br>mov edi, ecx<br>add ebx, edx<br>mov edx, dword[ebp-0x18]<br>mov esi, edx<br>cmp eax, 1<br>jne 0x1000d843<br>mov eax, dword[sym.imp.DuiLib.dll_public:_int___thiscall_DuiLib::CRect::GetWidth_void_const]<br>lea ecx, [ebp-0x1c]<br>call eax<br>mov ecx, dword[ebp-0x1c]<br>mov edx, 4<br>sub edx, eax<br>cmp ecx, edx<br>jle 0x1000d806<br>mov edi, ecx<br>sub edi, ebx<br>cmp edx, edi<br>cmovg edi, edx<br>mov eax, dword[ebp-0x10]<br>cmp eax, dword[ebp-0x20]<br>jle 0x1000d8b6<br>mov ebx, dword[sym.imp.DuiLib.dll_public:_int___thiscall_DuiLib::CRect::GetHeight_void_const]<br>lea ecx, [ebp-0x1c]<br>call ebx<br>mov ecx, dword[ebp-0x20]<br>mov esi, dword[ebp-0x10]<br>sub ecx, eax<br>cmp esi, ecx<br>jge 0x1000d831<br>mov edx, dword[ebp-0x18]<br>jmp 0x1000d9e7<br>lea ecx, [ebp-0x1c]<br>call ebx<br>mov esi, dword[ebp-0x20]<br>mov edx, dword[ebp-0x18]<br>sub esi, eax<br>jmp 0x1000d9e7<br>cmp eax, 2<br>jne 0x1000d85f<br>test ecx, ecx<br>jns 0x1000da1f<br>lea eax, [ecx+ebx]<br>xor edi, edi<br>test eax, eax<br>cmovs edi, eax<br>jmp 0x1000d9ea<br>cmp eax, 3<br>jne 0x1000d88b<br>mov eax, dword[ebp-0x24]<br>cmp dword[ebp-8], eax<br>cmovg eax, dword[ebp-8]<br>sub eax, 4<br>cmp ecx, eax<br>jge 0x1000d87d<br>lea edi, [ecx+ebx]<br>cmp eax, edi<br>cmovl edi, eax<br>mov eax, dword[ebp-0x10]<br>cmp eax, dword[ebp-0x20]<br>jle 0x1000d9ea<br>jmp 0x1000d812<br>cmp eax, 4<br>jne 0x1000d8be<br>mov eax, dword[sym.imp.DuiLib.dll_public:_int___thiscall_DuiLib::CRect::GetWidth_void_const]<br>lea ecx, [ebp-0x1c]<br>call eax<br>mov edx, dword[ebp-0x24]<br>cmp dword[ebp-8], edx<br>mov ecx, dword[ebp-0x1c]<br>cmovg edx, dword[ebp-8]<br>sub edx, eax<br>cmp ecx, edx<br>jle 0x1000d8b6<br>mov edi, ecx<br>sub edi, ebx<br>cmp edx, edi<br>cmovg edi, edx<br>mov edx, dword[ebp-0x18]<br>jmp 0x1000d9ea<br>cmp eax, 5<br>jne 0x1000d936<br>mov eax, dword[sym.imp.DuiLib.dll_public:_int___thiscall_DuiLib::CRect::GetHeight_void_const]<br>lea ecx, [ebp-0x1c]<br>call eax<br>mov edx, dword[ebp-0x18]<br>mov ecx, 4<br>sub ecx, eax<br>cmp edx, ecx<br>jle 0x1000d8e4<br>mov esi, edx<br>sub esi, ebx<br>cmp ecx, esi<br>cmovg esi, ecx<br>mov ecx, dword[ebp-0x1c]<br>test ecx, ecx<br>jns 0x1000d8f9<br>xor eax, eax<br>mov edi, ecx<br>test ecx, ecx<br>cmovs edi, eax<br>jmp 0x1000d9ea<br>mov eax, dword[ebp-0x14]<br>cmp eax, dword[ebp-0x24]<br>jle 0x1000d9ea<br>mov ebx, dword[sym.imp.DuiLib.dll_public:_int___thiscall_DuiLib::CRect::GetWidth_void_const]<br>lea ecx, [ebp-0x1c]<br>call ebx<br>mov ecx, dword[ebp-0x24]<br>mov edi, dword[ebp-0x1c]<br>sub ecx, eax<br>cmp edi, ecx<br>jge 0x1000d924<br>mov edx, dword[ebp-0x18]<br>jmp 0x1000d9ee<br>lea ecx, [ebp-0x1c]<br>call ebx<br>mov edi, dword[ebp-0x24]<br>mov edx, dword[ebp-0x18]<br>sub edi, eax<br>jmp 0x1000d9e7<br>cmp eax, 6<br>jne 0x1000d952<br>test edx, edx<br>jns 0x1000da1f<br>lea esi, [edx+ebx]<br>xor eax, eax<br>test esi, esi<br>cmovg esi, eax<br>jmp 0x1000d9ee<br>cmp eax, 7<br>jne 0x1000d96f<br>mov eax, dword[ebp-0x20]<br>add eax, 0xfffffffc<br>cmp edx, eax<br>jge 0x1000da1f<br>lea esi, [edx+ebx]<br>cmp eax, esi<br>cmovl esi, eax<br>jmp 0x1000d9ee<br>cmp eax, 8<br>jne 0x1000d995<br>mov eax, dword[sym.imp.DuiLib.dll_public:_int___thiscall_DuiLib::CRect::GetHeight_void_const]<br>lea ecx, [ebp-0x1c]<br>call eax<br>mov ecx, dword[ebp-0x20]<br>mov edx, dword[ebp-0x18]<br>sub ecx, eax<br>cmp edx, ecx<br>jle 0x1000d9e7<br>mov esi, edx<br>sub esi, ebx<br>cmp ecx, esi<br>cmovg esi, ecx<br>jmp 0x1000d9e7<br>cmp eax, 9<br>jne 0x1000da1f<br>mov eax, dword[sym.imp.DuiLib.dll_public:_int___thiscall_DuiLib::CRect::GetHeight_void_const]<br>lea ecx, [ebp-0x1c]<br>call eax<br>mov ebx, dword[ebp-0x20]<br>mov ecx, dword[ebp-0xc]<br>sub ebx, eax<br>push str.root<br>add ecx, 0x48<br>call dword[sym.imp.DuiLib.dll_public:_class_DuiLib::CControlUI____thiscall_DuiLib::CPaintManagerUI::FindControl_wchar_t_const__]<br>mov ecx, eax<br>mov edx, dword[eax]<br>call dword[edx+0x84]<br>mov ecx, eax<br>mov eax, 0x55555556<br>imul ecx<br>mov eax, edx<br>shr eax, 0x1f<br>add eax, edx<br>mov edx, dword[ebp-0x18]<br>cmp edx, ebx<br>jge 0x1000d9e7<br>lea esi, [edx+eax]<br>cmp ebx, esi<br>cmovl esi, ebx<br>mov ecx, dword[ebp-0x1c]<br>cmp edi, ecx<br>jne 0x1000d9f2<br>cmp esi, edx<br>je 0x1000da1f<br>push 0<br>lea ecx, [ebp-0x1c]<br>call dword[sym.imp.DuiLib.dll_public:_int___thiscall_DuiLib::CRect::GetHeight_void_const]<br>push eax<br>lea ecx, [ebp-0x1c]<br>call dword[sym.imp.DuiLib.dll_public:_int___thiscall_DuiLib::CRect::GetWidth_void_const]<br>push eax<br>mov eax, dword[ebp-0xc]<br>push esi<br>push edi<br>push dword[eax+4]<br>call dword[sym.imp.USER32.dll_MoveWindow]<br>pop edi<br>pop esi<br>pop ebx<br>mov esp, ebp<br>pop ebp<br>ret 4<br>mov eax, dword[ebp-0xc]<br>push 0x14022302<br>push dword[eax+4]<br>mov dword[eax+0x348], 0<br>call dword[sym.imp.USER32.dll_KillTimer]<br>pop edi<br>pop esi<br>pop ebx<br>mov esp, ebp<br>pop ebp<br>ret 4<br><eoc> ', 'point { fill-color: #e0440e; }'],
[181.12472534179688, -669.302978515625, '<b><a href="/report/fcn.0045c72a@d96761eb00d2d97e2b6f5ffffed0b46a">fcn.0045c72a</a><br>@d96761eb00d2d97e2b6f5ffffed0b46a</b><br>push ebp<br>mov ebp, esp<br>sub esp, 0x10<br>push esi<br>push edi<br>xor edi, edi<br>mov esi, ecx<br>cmp dword[ebp+8], 1<br>je 0x45c8c7<br>push ebx<br>push 1<br>push dword[esi+0x54]<br>call dword[sym.imp.USER32.dll_GetDlgItem]<br>mov dword[ebp+8], eax<br>test eax, eax<br>je 0x45c7bc<br>lea ecx, [ebp-0x10]<br>push ecx<br>push eax<br>call dword[sym.imp.USER32.dll_GetWindowRect]<br>mov edi, dword[ebp-0x10]<br>mov ecx, dword[ebp-8]<br>cmp edi, ecx<br>jle 0x45c774<br>mov eax, edi<br>mov edi, ecx<br>mov ecx, eax<br>mov dword[ebp-0x10], edi<br>mov dword[ebp-8], ecx<br>mov ebx, dword[ebp-0xc]<br>mov edx, dword[ebp-4]<br>cmp ebx, edx<br>jle 0x45c78a<br>mov eax, ebx<br>mov ebx, edx<br>mov edx, eax<br>mov dword[ebp-0xc], ebx<br>mov dword[ebp-4], edx<br>sub ecx, edi<br>sub edx, ebx<br>mov edi, dword[ebp+0x10]<br>push 0<br>push edx<br>push ecx<br>sub edi, edx<br>sub edi, 0xa<br>push edi<br>push 0xa<br>pop eax<br>sub eax, ecx<br>cdq <br>sub eax, edx<br>mov ecx, eax<br>mov eax, dword[ebp+0xc]<br>push 4<br>pop ebx<br>cdq <br>idiv ebx<br>sar ecx, 1<br>add ecx, eax<br>push ecx<br>push dword[ebp+8]<br>call dword[sym.imp.USER32.dll_MoveWindow]<br>push 2<br>push dword[esi+0x54]<br>call dword[sym.imp.USER32.dll_GetDlgItem]<br>mov dword[ebp+8], eax<br>test eax, eax<br>je 0x45c82d<br>lea ecx, [ebp-0x10]<br>push ecx<br>push eax<br>call dword[sym.imp.USER32.dll_GetWindowRect]<br>mov ebx, dword[ebp-0x10]<br>mov ecx, dword[ebp-8]<br>cmp ebx, ecx<br>jle 0x45c7ef<br>mov eax, ebx<br>mov ebx, ecx<br>mov ecx, eax<br>mov dword[ebp-0x10], ebx<br>mov dword[ebp-8], ecx<br>mov edx, dword[ebp-4]<br>mov eax, dword[ebp-0xc]<br>cmp eax, edx<br>jle 0x45c804<br>mov dword[ebp-0xc], edx<br>mov edx, eax<br>mov eax, dword[ebp-0xc]<br>mov dword[ebp-4], edx<br>sub ecx, ebx<br>sub edx, eax<br>push 0<br>push edx<br>push ecx<br>lea eax, [ecx+0xa]<br>cdq <br>sub eax, edx<br>mov ecx, eax<br>imul eax, dword[ebp+0xc], 3<br>push edi<br>push 4<br>pop ebx<br>sar ecx, 1<br>cdq <br>idiv ebx<br>sub eax, ecx<br>push eax<br>push dword[ebp+8]<br>call dword[sym.imp.USER32.dll_MoveWindow]<br>push 0x3e9<br>push dword[esi+0x54]<br>call dword[sym.imp.USER32.dll_GetDlgItem]<br>mov ebx, eax<br>test ebx, ebx<br>je 0x45c88f<br>lea eax, [ebp-0x10]<br>push eax<br>push ebx<br>call dword[sym.imp.USER32.dll_GetWindowRect]<br>mov ecx, dword[ebp-0x10]<br>mov eax, dword[ebp-8]<br>cmp ecx, eax<br>jle 0x45c85c<br>mov dword[ebp-0x10], eax<br>mov dword[ebp-8], ecx<br>mov edx, dword[ebp-0xc]<br>mov ecx, dword[ebp-4]<br>cmp edx, ecx<br>jle 0x45c872<br>mov eax, edx<br>mov edx, ecx<br>mov ecx, eax<br>mov dword[ebp-0xc], edx<br>mov dword[ebp-4], ecx<br>push 0xfffffffffffffffb<br>pop eax<br>sub ecx, edx<br>sub eax, ecx<br>push 0<br>add edi, eax<br>mov eax, dword[ebp+0xc]<br>push ecx<br>add eax, 0xffffffec<br>push eax<br>push edi<br>push 0xa<br>push ebx<br>call dword[sym.imp.USER32.dll_MoveWindow]<br>push 0x3ea<br>push dword[esi+0x54]<br>call dword[sym.imp.USER32.dll_GetDlgItem]<br>pop ebx<br>test eax, eax<br>je 0x45c8ba<br>push 0<br>lea ecx, [edi-5]<br>push ecx<br>mov ecx, dword[ebp+0xc]<br>add ecx, 0xffffffec<br>push ecx<br>push 0xa<br>push 0xa<br>push eax<br>call dword[sym.imp.USER32.dll_MoveWindow]<br>push 1<br>push 0<br>push dword[esi+0x54]<br>call dword[sym.imp.USER32.dll_InvalidateRect]<br>pop edi<br>pop esi<br>mov esp, ebp<br>pop ebp<br>ret 0xc<br><eoc> ', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
sub esp, 0x30
push ebx
push esi
mov ebx, ecx
lea ecx, [ebp-0x2c]
push edi
mov edi, dword[sym.imp.DuiLib.dll_public:_void___thiscall_DuiLib::CRect::constructor_void_]
mov dword[ebp-0xc], ebx
call edi
push 0
lea eax, [ebp-0x2c]
push eax
push 0
push 0x30
call dword[sym.imp.USER32.dll_SystemParametersInfoW]
mov esi, dword[sym.imp.USER32.dll_GetSystemMetrics]
push 0
call esi
push 1
mov dword[ebp-8], eax
call esi
lea ecx, [ebp-0x1c]
call edi
lea eax, [ebp-0x1c]
push eax
push dword[ebx+4]
call dword[sym.imp.USER32.dll_GetWindowRect]
cmp dword[ebp+8], 5
lea ecx, [ebp-0x1c]
jge 0x1000d7bd
call dword[sym.imp.DuiLib.dll_public:_int___thiscall_DuiLib::CRect::GetWidth_void_const]
jmp 0x1000d7c3
call dword[sym.imp.DuiLib.dll_public:_int___thiscall_DuiLib::CRect::GetHeight_void_const]
mov ecx, eax
mov eax, 0x55555556
imul ecx
mov eax, dword[ebp+8]
mov ecx, dword[ebp-0x1c]
mov ebx, edx
shr ebx, 0x1f
mov edi, ecx
add ebx, edx
mov edx, dword[ebp-0x18]
mov esi, edx
cmp eax, 1
jne 0x1000d843
mov eax, dword[sym.imp.DuiLib.dll_public:_int___thiscall_DuiLib::CRect::GetWidth_void_const]
lea ecx, [ebp-0x1c]
call eax
mov ecx, dword[ebp-0x1c]
mov edx, 4
sub edx, eax
cmp ecx, edx
jle 0x1000d806
mov edi, ecx
sub edi, ebx
cmp edx, edi
cmovg edi, edx
mov eax, dword[ebp-0x10]
cmp eax, dword[ebp-0x20]
jle 0x1000d8b6
mov ebx, dword[sym.imp.DuiLib.dll_public:_int___thiscall_DuiLib::CRect::GetHeight_void_const]
lea ecx, [ebp-0x1c]
call ebx
mov ecx, dword[ebp-0x20]
mov esi, dword[ebp-0x10]
sub ecx, eax
cmp esi, ecx
jge 0x1000d831
mov edx, dword[ebp-0x18]
jmp 0x1000d9e7
lea ecx, [ebp-0x1c]
call ebx
mov esi, dword[ebp-0x20]
mov edx, dword[ebp-0x18]
sub esi, eax
jmp 0x1000d9e7
cmp eax, 2
jne 0x1000d85f
test ecx, ecx
jns 0x1000da1f
lea eax, [ecx+ebx]
xor edi, edi
test eax, eax
cmovs edi, eax
jmp 0x1000d9ea
cmp eax, 3
jne 0x1000d88b
mov eax, dword[ebp-0x24]
cmp dword[ebp-8], eax
cmovg eax, dword[ebp-8]
sub eax, 4
cmp ecx, eax
jge 0x1000d87d
lea edi, [ecx+ebx]
cmp eax, edi
cmovl edi, eax
mov eax, dword[ebp-0x10]
cmp eax, dword[ebp-0x20]
jle 0x1000d9ea
jmp 0x1000d812
cmp eax, 4
jne 0x1000d8be
mov eax, dword[sym.imp.DuiLib.dll_public:_int___thiscall_DuiLib::CRect::GetWidth_void_const]
lea ecx, [ebp-0x1c]
call eax
mov edx, dword[ebp-0x24]
cmp dword[ebp-8], edx
mov ecx, dword[ebp-0x1c]
cmovg edx, dword[ebp-8]
sub edx, eax
cmp ecx, edx
jle 0x1000d8b6
mov edi, ecx
sub edi, ebx
cmp edx, edi
cmovg edi, edx
mov edx, dword[ebp-0x18]
jmp 0x1000d9ea
cmp eax, 5
jne 0x1000d936
mov eax, dword[sym.imp.DuiLib.dll_public:_int___thiscall_DuiLib::CRect::GetHeight_void_const]
lea ecx, [ebp-0x1c]
call eax
mov edx, dword[ebp-0x18]
mov ecx, 4
sub ecx, eax
cmp edx, ecx
jle 0x1000d8e4
mov esi, edx
sub esi, ebx
cmp ecx, esi
cmovg esi, ecx
mov ecx, dword[ebp-0x1c]
test ecx, ecx
jns 0x1000d8f9
xor eax, eax
mov edi, ecx
test ecx, ecx
cmovs edi, eax
jmp 0x1000d9ea
mov eax, dword[ebp-0x14]
cmp eax, dword[ebp-0x24]
jle 0x1000d9ea
mov ebx, dword[sym.imp.DuiLib.dll_public:_int___thiscall_DuiLib::CRect::GetWidth_void_const]
lea ecx, [ebp-0x1c]
call ebx
mov ecx, dword[ebp-0x24]
mov edi, dword[ebp-0x1c]
sub ecx, eax
cmp edi, ecx
jge 0x1000d924
mov edx, dword[ebp-0x18]
jmp 0x1000d9ee
lea ecx, [ebp-0x1c]
call ebx
mov edi, dword[ebp-0x24]
mov edx, dword[ebp-0x18]
sub edi, eax
jmp 0x1000d9e7
cmp eax, 6
jne 0x1000d952
test edx, edx
jns 0x1000da1f
lea esi, [edx+ebx]
xor eax, eax
test esi, esi
cmovg esi, eax
jmp 0x1000d9ee
cmp eax, 7
jne 0x1000d96f
mov eax, dword[ebp-0x20]
add eax, 0xfffffffc
cmp edx, eax
jge 0x1000da1f
lea esi, [edx+ebx]
cmp eax, esi
cmovl esi, eax
jmp 0x1000d9ee
cmp eax, 8
jne 0x1000d995
mov eax, dword[sym.imp.DuiLib.dll_public:_int___thiscall_DuiLib::CRect::GetHeight_void_const]
lea ecx, [ebp-0x1c]
call eax
mov ecx, dword[ebp-0x20]
mov edx, dword[ebp-0x18]
sub ecx, eax
cmp edx, ecx
jle 0x1000d9e7
mov esi, edx
sub esi, ebx
cmp ecx, esi
cmovg esi, ecx
jmp 0x1000d9e7
cmp eax, 9
jne 0x1000da1f
mov eax, dword[sym.imp.DuiLib.dll_public:_int___thiscall_DuiLib::CRect::GetHeight_void_const]
lea ecx, [ebp-0x1c]
call eax
mov ebx, dword[ebp-0x20]
mov ecx, dword[ebp-0xc]
sub ebx, eax
push str.root
add ecx, 0x48
call dword[sym.imp.DuiLib.dll_public:_class_DuiLib::CControlUI____thiscall_DuiLib::CPaintManagerUI::FindControl_wchar_t_const__]
mov ecx, eax
mov edx, dword[eax]
call dword[edx+0x84]
mov ecx, eax
mov eax, 0x55555556
imul ecx
mov eax, edx
shr eax, 0x1f
add eax, edx
mov edx, dword[ebp-0x18]
cmp edx, ebx
jge 0x1000d9e7
lea esi, [edx+eax]
cmp ebx, esi
cmovl esi, ebx
mov ecx, dword[ebp-0x1c]
cmp edi, ecx
jne 0x1000d9f2
cmp esi, edx
je 0x1000da1f
push 0
lea ecx, [ebp-0x1c]
call dword[sym.imp.DuiLib.dll_public:_int___thiscall_DuiLib::CRect::GetHeight_void_const]
push eax
lea ecx, [ebp-0x1c]
call dword[sym.imp.DuiLib.dll_public:_int___thiscall_DuiLib::CRect::GetWidth_void_const]
push eax
mov eax, dword[ebp-0xc]
push esi
push edi
push dword[eax+4]
call dword[sym.imp.USER32.dll_MoveWindow]
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 4
mov eax, dword[ebp-0xc]
push 0x14022302
push dword[eax+4]
mov dword[eax+0x348], 0
call dword[sym.imp.USER32.dll_KillTimer]
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 4

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/b7467517f3ef2950fbbab46c56c44481