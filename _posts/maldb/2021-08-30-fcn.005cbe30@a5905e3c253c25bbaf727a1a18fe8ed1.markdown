---
layout: post
title:  "fcn.005cbe30 @ a5905e3c253c25bbaf727a1a18fe8ed1"
date:   2021-08-30 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.005cbe30
- **Origin (md5):** a5905e3c253c25bbaf727a1a18fe8ed1
- **VirusTotal:** [virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1][virustotal_ref]

# Code Tags
<span class="tag" id="THREAD">THREAD</span>


# Similar Functions

1. [fcn.00674030][similar_1_ref] (sim.: 0.9714849562844508)
2. [fcn.0069ed20][similar_2_ref] (sim.: 0.9637389241241039)
3. [fcn.006b9e90][similar_3_ref] (sim.: 0.9576976312896015)
4. [fcn.005ba960][similar_4_ref] (sim.: 0.9568530641691686)
5. [fcn.00671da0][similar_5_ref] (sim.: 0.9551686636288527)


# Disassembled Code

{% highlight nasm %}
push r15
push r14
push r13
push r12
push rbp
push rdi
push rsi
push rbx
sub rsp,0x238
movaps xmmword[rsp+0x220],xmm6
lea rax,[0x00b6ecd0]
lea rdi,[rcx+8]
mov rbx,rcx
mov rsi,rdx
mov qword[rcx],rax
xor eax,eax
mov ecx,6
rep stosq qword[rdi],rax
lea rax,[rbx+0x50]
mov dword[rbx+0x38],0
mov dword[rbx+0x3c],0
mov dword[rbx+0x40],0
mov qword[rbx+0x48],0
mov ebp,r8d
mov qword[rsp+0x80],rax
mov qword[rbx+0x50],rax
mov r12d,r9d
mov qword[rbx+0x58],rax
lea rax,fcn.0093d470
mov qword[rbx+0x60],0
mov dword[rbx+0x30],1
mov qword[rbx+0x70],0
mov qword[rbx+0x68],rax
lea rax,[0x00b70960]
mov qword[rbx+0x78],0
mov qword[rbx+0x80],0
mov qword[rbx+0x88],0
mov qword[rbx+0xb8],rax
lea rax,[0x00b708f0]
mov qword[rbx+0x90],0
mov qword[rbx+0x98],0
mov dword[rbx+0xa0],0
mov qword[rbx+0xc0],rax
lea rax,[rbx+0xc8]
mov dword[rbx+0xa4],0
mov dword[rbx+0xa8],0
mov qword[rbx+0xb0],0
mov rcx,rax
mov qword[rsp+0x88],rax
call fcn.006161a0
lea rax,[0x00b70c70]
movss xmm6,dword[0x00aa9b28]
mov rcx,qword[0x00a7d770]
movss dword[rbx+0x1b8],xmm6
mov dword[rbx+0x180],0
mov qword[rbx],rax
lea rax,[0x00b70d40]
mov qword[rbx+0x188],0
mov dword[rbx+0x190],0
mov qword[rbx+0x68],rax
lea rax,[0x00b70d60]
mov qword[rbx+0x1a0],1
mov qword[rbx+0x1a8],0
mov qword[rbx+0x1b0],0
mov qword[rbx+0xb8],rax
lea rax,[0x00b70dc0]
mov qword[rbx+0x1c0],0
mov qword[rbx+0x1c8],0
mov qword[rbx+0x1d8],0
mov qword[rbx+0xc0],rax
lea rax,[rbx+0x1c8]
mov byte[rbx+0x1e0],0
mov dword[rbx+0x1f0],0xffffffff
mov dword[rbx+0x1f4],0xffffffff
mov qword[rbx+0x198],rax
lea rax,[rbx+0x1e0]
mov qword[rbx+0x1d0],rax
call fcn.005d4e30
mov rax,qword[rax]
mov dword[rbx+0x1f8],0
test rax,rax
mov qword[rbx+0x200],rax
je 0x5cc054
lock add dword[rax],1
lea rax,[rbx+0x240]
movss dword[rbx+0x230],xmm6
mov dword[rbx+0x208],0
mov qword[rbx+0x218],1
mov qword[rbx+0x220],0
mov qword[rbx+0x210],rax
lea rax,[rbx+0x258]
mov qword[rbx+0x228],0
mov qword[rbx+0x238],0
mov qword[rbx+0x248],rax
mov eax,dword[0x00c1a580]
mov qword[rbx+0x240],0
mov qword[rbx+0x250],0
mov byte[rbx+0x258],0
mov dword[rbx+0x268],0xffffffff
add eax,1
mov dword[rbx+0x26c],0xffffffff
mov qword[rbx+0x280],0
mov dword[0x00c1a580],eax
mov dword[rbx+0x270],eax
lea rax,[rbx+0x288]
mov byte[rbx+0x288],0
mov dword[rbx+0x298],0x78
mov qword[rbx+0x278],rax
mov qword[rsp+0x90],rax
call fcn.006896a0
mov qword[rbx+0x2a0],rax
lea rax,[rbx+0x2c0]
mov byte[rbx+0x2a8],0
mov byte[rbx+0x2a9],0
mov qword[rsp+0x70],rax
mov qword[rbx+0x2b0],rax
mov rax,qword[0x00b3d1c0]
mov r13,qword[rax]
mov rdi,qword[rax+8]
mov rax,r13
add rax,rdi
je 0x5cc180
test r13,r13
jne 0x5cc180
lea rcx,[0x00aa9a30]
call fcn.00a4f4e0
nop
cmp rdi,0xf
mov qword[rsp+0x130],rdi
ja 0x5cc7c5
cmp rdi,1
je 0x5cc8e2
test rdi,rdi
mov rax,qword[rsp+0x70]
jne 0x5ccde9
mov qword[rbx+0x2b8],rdi
mov byte[rax+rdi],0
lea rax,[rbx+0x2f0]
mov rdi,qword[rsi+8]
mov dword[rbx+0x2d0],5
mov qword[rbx+0x2e0],rax
mov r13,qword[rsi]
mov qword[rsp+0x78],rax
mov qword[rbx+0x2d8],0
mov rax,r13
add rax,rdi
je 0x5cc200
test r13,r13
jne 0x5cc200
lea rcx,[0x00aa9a30]
call fcn.00a4f4e0
nop dword[rax]
cmp rdi,0xf
mov qword[rsp+0x150],rdi
ja 0x5cc814
cmp rdi,1
je 0x5cc8c0
lea rdx,[rsp+0x150]
test rdi,rdi
mov rax,qword[rsp+0x78]
mov qword[rsp+0x48],rdx
jne 0x5ccdf1
mov qword[rbx+0x2e8],rdi
mov byte[rax+rdi],0
lea rax,[rbx+0x310]
mov byte[rbx+0x381],r12b
lea r12,[rsp+0x130]
mov qword[rbx+0x308],0
mov qword[rsp+0xb0],rax
mov qword[rbx+0x300],rax
lea rax,[rbx+0x330]
mov byte[rbx+0x310],0
mov qword[rbx+0x328],0
lea r9,[rbx+0x360]
mov qword[rsp+0xa8],rax
mov qword[rbx+0x320],rax
lea rax,[rbx+0x340]
mov byte[rbx+0x330],0
mov qword[rbx+0x348],0
lea r8,[rbx+0x300]
mov qword[rsp+0x58],rax
lea rax,[rbx+0x350]
mov byte[rbx+0x350],0
mov qword[rbx+0x368],0
mov byte[rbx+0x370],0
mov qword[rsp+0xa0],rax
mov qword[rbx+0x340],rax
lea rax,[rbx+0x370]
mov byte[rbx+0x380],bpl
mov dword[rbx+0x384],3
mov qword[rsp+0x98],rax
mov qword[rbx+0x360],rax
lea rax,[rsp+0xf0]
mov qword[rsp+0xf8],0
mov byte[rsp+0x100],0
mov rdi,rax
mov qword[rsp+0x60],rax
lea rax,[rsp+0x100]
mov qword[rsp+0x118],0
mov byte[rsp+0x120],0
mov qword[rsp+0xf0],rax
lea rax,[rsp+0x110]
mov qword[rsp+0x138],0
mov qword[rsp+0x68],rax
mov rdx,rax
lea rax,[rsp+0x120]
mov qword[rsp+0x110],rax
lea rax,[r12+0x10]
mov qword[rsp+0x130],rax
mov byte[rsp+0x140],0
mov rcx,qword[rsp+0x48]
mov qword[rsp+0x28],r12
mov qword[rsp+0x20],rdi
mov qword[rsp+0x158],0
mov byte[rsp+0x160],0
mov rax,rcx
mov qword[rsp+0x30],rcx
mov rcx,rsi
add rax,0x10
mov qword[rsp+0x150],rax
call fcn.006a5420
lea rax,[rsp+0x1e0]
lea rbp,[rsp+0x170]
mov rdx,r12
mov qword[rsp+0x1e8],2
mov byte[rsp+0x1f2],0
mov qword[rsp+0x50],rax
lea rax,[rsp+0x1f0]
mov rcx,rbp
mov qword[rsp+0x1e0],rax
mov eax,0x706b
mov word[rsp+0x1f0],ax
call fcn.006ab670
mov r14,qword[rsp+0x180]
test r14,r14
je 0x5cca0f
mov r15,qword[rsp+0x1e8]
mov rdi,qword[rsp+0x1e0]
lea rsi,[rbp+8]
jmp 0x5cc480
mov rcx,qword[r14+0x20]
mov rdx,rdi
call sub.msvcrt.dll_memcmp
test eax,eax
je 0x5cc493
test eax,eax
js 0x5cc4af
mov rsi,r14
mov r14,qword[r14+0x10]
test r14,r14
je 0x5cc4b8
mov r13,qword[r14+0x28]
mov r8,r15
cmp r13,r15
cmovbe r8,r13
test r8,r8
jne 0x5cc460
sub r13,r15
cmp r13,0x7fffffff
jg 0x5cc474
cmp r13,0xffffffff80000000
jl 0x5cc4af
mov eax,r13d
test eax,eax
jns 0x5cc474
mov r14,qword[r14+0x18]
test r14,r14
jne 0x5cc480
lea rax,[rbp+8]
cmp rsi,rax
je 0x5cc4f4
mov r13,qword[rsi+0x28]
mov r8,r15
cmp r13,r15
cmovbe r8,r13
test r8,r8
je 0x5cc7a0
mov rdx,qword[rsi+0x20]
mov rcx,rdi
call sub.msvcrt.dll_memcmp
test eax,eax
je 0x5cc7a0
test eax,eax
jns 0x5cc630
mov ecx,0x60
call fcn.00a5af70
mov rdi,rax
lea rax,[rax+0x30]
mov r15,qword[rsp+0x1e0]
mov qword[rsp+0xb8],rax
mov qword[rdi+0x20],rax
mov rax,qword[rsp+0x50]
add rax,0x10
cmp r15,rax
je 0x5ccb58
mov rax,qword[rsp+0x1f0]
mov qword[rdi+0x20],r15
mov qword[rdi+0x30],rax
mov rax,qword[rsp+0x50]
mov r9,qword[rsp+0x1e8]
mov byte[rsp+0x1f0],0
mov qword[rsp+0x1e8],0
mov qword[rdi+0x48],0
mov byte[rdi+0x50],0
add rax,0x10
mov qword[rdi+0x28],r9
mov qword[rsp+0x1e0],rax
lea rax,[rdi+0x50]
mov qword[rdi+0x40],rax
lea rax,[rbp+8]
cmp rsi,rax
je 0x5ccaad
mov r13,qword[rsi+0x28]
mov r10,qword[rsi+0x20]
cmp r9,r13
mov r14,r13
cmovbe r14,r9
test r14,r14
je 0x5cc880
mov rdx,r10
mov r8,r14
mov rcx,r15
mov qword[rsp+0xc8],r9
mov qword[rsp+0xc0],r10
call sub.msvcrt.dll_memcmp
test eax,eax
mov r10,qword[rsp+0xc0]
mov r9,qword[rsp+0xc8]
je 0x5cc97a
js 0x5cc99c
mov r8,r14
mov rdx,r15
mov rcx,r10
mov qword[rsp+0xc0],r9
call sub.msvcrt.dll_memcmp
test eax,eax
mov r9,qword[rsp+0xc0]
je 0x5cc892
test eax,eax
js 0x5cca43
cmp qword[rsp+0xb8],r15
je 0x5cc624
mov rcx,r15
call fcn.00a5af30
mov rcx,rdi
call fcn.00a5af30
nop dword[rax]
mov rcx,qword[rsp+0x58]
lea rdx,[rsi+0x40]
call fcn.00a2df10
mov rdx,qword[rsp+0x180]
mov rcx,rbp
call fcn.00a445b0
mov rax,qword[rsp+0x50]
mov rcx,qword[rsp+0x1e0]
add rax,0x10
cmp rcx,rax
je 0x5cc669
call fcn.00a5af30
mov rdi,qword[0x00a7d760]
lea rax,[rbx+0xc0]
mov qword[rsp+0xe8],rax
mov r15,rdi
add r15,0x38
je 0x5cd0e6
call qword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
lea r13,[rdi+0x3c]
mov r14d,eax
xor eax,eax
lock cmpxchg dword[r13],eax
cmp r14d,eax
je 0x5cc870
lea rbp,[rdi+0x40]
mov esi,dword[rdi+0x40]
jmp 0x5cc6b5
mov esi,eax
mov edx,esi
mov r8d,esi
mov rcx,rbp
or edx,0x80000000
call fcn.008eebc0
cmp esi,eax
jne 0x5cc6b3
test esi,esi
js 0x5ccb7d
xchg dword[r13],r14d
mov dword[rdi+0x38],1
mov rbp,qword[rdi+0x10]
mov rcx,qword[rdi+8]
lea rsi,[rsp+0xe8]
xor r9d,r9d
mov r8,rsi
mov rdx,rbp
call fcn.00a54140
cmp rbp,rax
je 0x5cca18
mov eax,dword[rdi+0x38]
sub eax,1
test eax,eax
mov dword[rdi+0x38],eax
je 0x5cc900
mov rax,qword[rsp+0x48]
mov rcx,qword[rsp+0x150]
add rax,0x10
cmp rcx,rax
je 0x5cc732
call fcn.00a5af30
mov rcx,qword[rsp+0x130]
add r12,0x10
cmp rcx,r12
je 0x5cc748
call fcn.00a5af30
mov rax,qword[rsp+0x68]
mov rcx,qword[rsp+0x110]
add rax,0x10
cmp rcx,rax
je 0x5cc763
call fcn.00a5af30
mov rax,qword[rsp+0x60]
mov rcx,qword[rsp+0xf0]
add rax,0x10
cmp rcx,rax
je 0x5cc77f
call fcn.00a5af30
nop
movaps xmm6,xmmword[rsp+0x220]
add rsp,0x238
pop rbx
pop rsi
pop rdi
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
sub r15,r13
cmp r15,0x7fffffff
jg 0x5cc630
cmp r15,0xffffffff80000000
jl 0x5cc4f4
mov eax,r15d
jmp 0x5cc4ec
lea rdx,[rsp+0x130]
lea rcx,[rbx+0x2b0]
xor r8d,r8d
call fcn.00a2dfc0
mov rcx,rax
mov qword[rbx+0x2b0],rax
mov rax,qword[rsp+0x130]
mov qword[rbx+0x2c0],rax
mov r8,rdi
mov rdx,r13
call sub.msvcrt.dll_memcpy
mov rdi,qword[rsp+0x130]
mov rax,qword[rbx+0x2b0]
jmp 0x5cc1aa
lea rax,[rsp+0x150]
lea rcx,[rbx+0x2e0]
xor r8d,r8d
mov rdx,rax
mov qword[rsp+0x48],rax
call fcn.00a2dfc0
mov rcx,rax
mov qword[rbx+0x2e0],rax
mov rax,qword[rsp+0x150]
mov qword[rbx+0x2f0],rax
mov r8,rdi
mov rdx,r13
call sub.msvcrt.dll_memcpy
mov rdi,qword[rsp+0x150]
mov rax,qword[rbx+0x2e0]
jmp 0x5cc237
add dword[rdi+0x38],1
jmp 0x5cc6df
mov rax,r9
sub rax,r13
cmp rax,0x7fffffff
jle 0x5cc98c
sub r13,r9
cmp r13,0x7fffffff
jg 0x5cc612
cmp r13,0xffffffff80000000
jl 0x5cca43
mov eax,r13d
jmp 0x5cc60a
movzx eax,byte[r13]
lea rdx,[rsp+0x150]
mov qword[rsp+0x48],rdx
mov byte[rbx+0x2f0],al
mov rax,qword[rsp+0x78]
jmp 0x5cc237
movzx eax,byte[r13]
mov byte[rbx+0x2c0],al
mov rax,qword[rsp+0x70]
jmp 0x5cc1aa
xchg dword[r13],eax
mov eax,0x80000000
lea rsi,[rdi+0x40]
lock xadd dword[rsi],eax
test eax,0x40000000
jne 0x5cc717
cmp eax,0x80000000
je 0x5cc717
mov ebx,dword[rdi+0x40]
jmp 0x5cc932
mov ebx,eax
mov edx,ebx
mov r8d,ebx
mov rcx,rsi
or edx,0x40000000
call fcn.008eebc0
cmp ebx,eax
jne 0x5cc930
and ebx,0x40000000
jne 0x5cc717
add rdi,0x48
xor eax,eax
lock cmpxchg qword[rdi],rax
test rax,rax
mov rbx,rax
mov rcx,rax
je 0x5cce4e
call qword[sym.imp.KERNEL32.dll_SetEvent]
jmp 0x5cc717
mov rax,r9
sub rax,r13
cmp rax,0x7fffffff
jg 0x5cc5e4
cmp rax,0xffffffff80000000
jl 0x5cc99c
test eax,eax
jns 0x5ccd41
cmp qword[rsp+0x188],rsi
je 0x5cca07
mov rcx,rsi
mov qword[rsp+0xc0],r9
call fcn.00a4f390
mov r9,qword[rsp+0xc0]
mov r13,qword[rax+0x28]
mov r14,rax
cmp r9,r13
mov r8,r13
cmovbe r8,r9
test r8,r8
jne 0x5ccd20
sub r13,r9
cmp r13,0x7fffffff
jg 0x5ccabc
cmp r13,0xffffffff80000000
jl 0x5cc9fc
mov eax,r13d
test eax,eax
jns 0x5ccabc
cmp qword[r14+0x18],0
je 0x5ccdc1
mov r14,rsi
jmp 0x5ccaf9
lea rsi,[rbp+8]
jmp 0x5cc4f4
mov rax,qword[rdi+0x10]
cmp rax,qword[rdi+0x18]
je 0x5cce3d
test rax,rax
mov rdx,qword[rsp+0xe8]
je 0x5cca36
mov qword[rax],rdx
add rax,8
mov qword[rdi+0x10],rax
jmp 0x5cc706
cmp qword[rsp+0x190],rsi
je 0x5cce35
mov rcx,rsi
mov qword[rsp+0xc0],r9
call fcn.00a4f3f0
mov r9,qword[rsp+0xc0]
mov r13,qword[rax+0x28]
mov r14,rax
cmp r9,r13
mov r8,r13
cmovbe r8,r9
test r8,r8
jne 0x5ccdc8
mov rax,r9
sub rax,r13
cmp rax,0x7fffffff
jg 0x5ccabc
cmp rax,0xffffffff80000000
jl 0x5cca9d
test eax,eax
jns 0x5ccabc
cmp qword[rsi+0x18],0
je 0x5cce35
mov rsi,r14
jmp 0x5ccaf0
cmp qword[rsp+0x198],0
jne 0x5ccd7e
lea rcx,[rsp+0xd0]
lea r8,[rdi+0x20]
mov rdx,rbp
mov qword[rsp+0xc0],r9
call fcn.00a440d0
mov rsi,qword[rsp+0xd0]
mov r14,qword[rsp+0xd8]
mov r9,qword[rsp+0xc0]
test r14,r14
je 0x5cc612
test rsi,rsi
jne 0x5ccdf9
lea rax,[rbp+8]
cmp r14,rax
je 0x5ccdf9
mov rsi,qword[r14+0x28]
cmp r9,rsi
mov r8,rsi
cmovbe r8,r9
test r8,r8
jne 0x5ccd50
sub r9,rsi
xor ecx,ecx
cmp r9,0x7fffffff
jle 0x5cce24
lea r9,[rbp+8]
mov r8,r14
mov rdx,rdi
mov rsi,rdi
call fcn.00a506e0
add qword[rsp+0x198],1
jmp 0x5cc630
mov rax,qword[rsp+0x1f0]
mov rdx,qword[rsp+0x1f8]
mov r15,qword[rsp+0xb8]
mov qword[rdi+0x30],rax
mov qword[rdi+0x38],rdx
jmp 0x5cc53b
mov edx,dword[rdi+0x40]
jmp 0x5ccb84
mov edx,eax
lea eax,[rdx+1]
mov esi,edx
or esi,0x80000000
test edx,edx
cmovs esi,eax
mov eax,edx
lock cmpxchg dword[rbp],esi
cmp eax,edx
jne 0x5ccb82
shr edx,0x1f
test dl,dl
je 0x5cc6d4
mov eax,esi
shr eax,0x1f
test al,al
je 0x5cc6d4
lea rax,[rdi+0x48]
mov rdx,rax
mov qword[rsp+0xb8],rax
xor eax,eax
lock cmpxchg qword[rdx],rax
test rax,rax
mov qword[rsp+0x58],rax
je 0x5cce8c
nop dword[rax+rax]
xor r8d,r8d
mov edx,0xffffffff
mov rcx,qword[rsp+0x58]
call qword[sym.imp.KERNEL32.dll_WaitForSingleObjectEx]
and esi,0x7fffffff
or esi,0x40000000
mov edx,esi
test edx,edx
js 0x5ccc29
lea ecx,[rdx-1]
mov eax,edx
and ecx,0x3fffffff
or ecx,0x80000000
lock cmpxchg dword[rbp],ecx
cmp eax,edx
je 0x5cc6d4
mov edx,eax
test edx,edx
jns 0x5ccc05
mov ecx,edx
mov eax,edx
and ecx,0xbfffffff
lock cmpxchg dword[rbp],ecx
cmp eax,edx
jne 0x5ccc23
mov esi,eax
jmp 0x5ccbe0
mov rcx,qword[rbx+0x2b0]
cmp qword[rsp+0x70],rcx
je 0x5ccc56
call fcn.00a5af30
mov rcx,qword[rbx+0x278]
cmp qword[rsp+0x90],rcx
je 0x5ccc6c
call fcn.00a5af30
lea rcx,[rbx+0x1f8]
call fcn.0093ec90
lea rcx,[rbx+0x180]
call fcn.0093ec90
lea rdx,[rbx+0x168]
mov rcx,qword[rdx-0x20]
lea rdi,[rdx-0x20]
sub rdx,0x10
cmp rcx,rdx
je 0x5ccca1
call fcn.00a5af30
cmp qword[rsp+0x88],rdi
mov rdx,rdi
jne 0x5ccc8b
mov rdi,rsi
lea rcx,[rbx+0x68]
call fcn.0093d470
mov rsi,qword[rbx+0x50]
cmp qword[rsp+0x80],rsi
lea rax,[0x00b6ecd0]
mov qword[rbx],rax
je 0x5cccfc
mov rcx,qword[rsi+0x10]
lea rax,[rsi+0x20]
mov rbp,qword[rsi]
cmp rcx,rax
je 0x5ccce7
call fcn.00a5af30
mov rcx,rsi
mov rsi,rbp
call fcn.00a5af30
cmp qword[rsp+0x80],rbp
jne 0x5cccd2
xor ecx,ecx
xchg qword[rbx+0x48],rcx
test rcx,rcx
je 0x5ccd0d
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rcx,rdi
call fcn.008da260
mov rsi,rax
jmp 0x5ccc56
mov rcx,qword[rax+0x20]
mov rdx,r15
call sub.msvcrt.dll_memcmp
test eax,eax
mov r9,qword[rsp+0xc0]
jne 0x5cc9f4
jmp 0x5cc9d8
test r14,r14
jne 0x5cc5e4
jmp 0x5cc892
mov rdx,qword[r14+0x20]
mov rcx,r15
mov qword[rsp+0xb8],r9
call sub.msvcrt.dll_memcmp
test eax,eax
mov r9,qword[rsp+0xb8]
je 0x5ccb26
shr eax,0x1f
mov ecx,eax
jmp 0x5ccb38
mov r14,qword[rsp+0x190]
mov rsi,qword[r14+0x28]
cmp r9,rsi
mov r8,rsi
cmovbe r8,r9
test r8,r8
je 0x5cce03
mov rcx,qword[r14+0x20]
mov rdx,r15
mov qword[rsp+0xc0],r9
call sub.msvcrt.dll_memcmp
test eax,eax
mov r9,qword[rsp+0xc0]
je 0x5cce03
test eax,eax
jns 0x5ccabc
xor esi,esi
jmp 0x5ccaf9
mov rdx,qword[rax+0x20]
mov rcx,r15
call sub.msvcrt.dll_memcmp
test eax,eax
mov r9,qword[rsp+0xc0]
jne 0x5cca99
jmp 0x5cca83
mov rcx,rax
jmp 0x5cc7f5
mov rcx,rax
jmp 0x5cc84c
mov ecx,1
jmp 0x5ccb38
mov rax,rsi
sub rax,r9
cmp rax,0x7fffffff
jg 0x5ccabc
cmp rax,0xffffffff80000000
jge 0x5ccdb9
xor esi,esi
jmp 0x5ccaf9
cmp r9,0xffffffff80000000
jl 0x5ccdf9
mov eax,r9d
jmp 0x5ccd74
mov r14,rsi
jmp 0x5ccb0f
lea rcx,[rdi+8]
mov rdx,rsi
call fcn.00a20b50
jmp 0x5cc706
xor ecx,ecx
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
je 0x5cd07d
mov rax,rbx
lock cmpxchg qword[rdi],rcx
test rax,rax
mov rbx,rax
je 0x5cc96f
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rcx,rbx
jmp 0x5cc96f
xor r9d,r9d
xor r8d,r8d
xor edx,edx
xor ecx,ecx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov qword[rsp+0x58],rax
je 0x5ccfc8
mov rdx,qword[rsp+0xb8]
mov rcx,rax
xor eax,eax
lock cmpxchg qword[rdx],rcx
test rax,rax
mov qword[rsp+0xb8],rax
je 0x5ccbe0
mov rcx,qword[rsp+0x58]
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rax,qword[rsp+0xb8]
mov qword[rsp+0x58],rax
jmp 0x5ccbe0
mov rax,qword[rsp+0x48]
mov rcx,qword[rsp+0x150]
add rax,0x10
cmp rcx,rax
je 0x5ccf08
call fcn.00a5af30
mov rcx,qword[rsp+0x130]
add r12,0x10
cmp rcx,r12
je 0x5ccf1e
call fcn.00a5af30
mov rax,qword[rsp+0x68]
mov rcx,qword[rsp+0x110]
add rax,0x10
cmp rcx,rax
je 0x5ccf39
call fcn.00a5af30
mov rax,qword[rsp+0x60]
mov rcx,qword[rsp+0xf0]
add rax,0x10
cmp rcx,rax
je 0x5ccf54
call fcn.00a5af30
mov rcx,qword[rbx+0x360]
cmp qword[rsp+0x98],rcx
je 0x5ccf6a
call fcn.00a5af30
mov rcx,qword[rbx+0x340]
cmp qword[rsp+0xa0],rcx
je 0x5ccf80
call fcn.00a5af30
mov rcx,qword[rbx+0x320]
cmp qword[rsp+0xa8],rcx
je 0x5ccf96
call fcn.00a5af30
mov rcx,qword[rbx+0x300]
cmp qword[rsp+0xb0],rcx
je 0x5ccfac
call fcn.00a5af30
mov rcx,qword[rbx+0x2e0]
cmp qword[rsp+0x78],rcx
je 0x5ccc43
call fcn.00a5af30
jmp 0x5ccc43
call fcn.006ea660
mov rdi,qword[rsp+0x50]
lea rdx,[0x00aa9a60]
mov rsi,rax
mov rcx,rdi
call fcn.009de540
mov rax,rdi
mov rcx,rdi
mov dword[rsp+0x1f0],0xb
add rax,0x30
mov qword[rsp+0x1f8],rsi
mov qword[rsp+0x208],0
mov qword[rsp+0x200],rax
lea rax,[0x00b72480]
mov byte[rsp+0x210],0
mov qword[rsp+0x1e0],rax
call fcn.00947760
mov rsi,rax
mov rax,qword[rsp+0x50]
mov rcx,qword[rsp+0x1e0]
add rax,0x10
cmp rcx,rax
je 0x5cceed
call fcn.00a5af30
jmp 0x5cceed
call fcn.006ea660
mov rdi,qword[rsp+0x50]
lea rdx,[0x00aa9a60]
mov rbx,rax
mov rcx,rdi
call fcn.009de540
mov rax,rdi
mov rcx,rdi
mov dword[rsp+0x1f0],0xb
add rax,0x30
mov qword[rsp+0x1f8],rbx
mov qword[rsp+0x208],0
mov qword[rsp+0x200],rax
lea rax,[0x00b72480]
mov byte[rsp+0x210],0
mov qword[rsp+0x1e0],rax
call fcn.00947760
lea rsi,[rsp+0x1a0]
call fcn.006ea660
lea rdx,[0x00aa9a80]
mov rcx,rsi
mov rdi,rax
call fcn.009de540
lea rax,[rsi+0x30]
mov rcx,rsi
mov dword[rsp+0x1b0],1
mov qword[rsp+0x1b8],rdi
mov qword[rsp+0x1c8],0
mov qword[rsp+0x1c0],rax
lea rax,[0x00b714e0]
mov byte[rsp+0x1d0],0
mov qword[rsp+0x1a0],rax
call fcn.009472d0
mov rsi,rax
jmp 0x5ccc78
{% endhighlight %}


[similar_1_ref]: /report/fcn.00674030@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_2_ref]: /report/fcn.0069ed20@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_3_ref]: /report/fcn.006b9e90@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_4_ref]: /report/fcn.005ba960@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_5_ref]: /report/fcn.00671da0@a5905e3c253c25bbaf727a1a18fe8ed1
[virustotal_ref]: https://www.virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1