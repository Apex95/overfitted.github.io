---
layout: post
title:  "fcn.004a254c @ 9c2b894b84f59672d8be2e984066f76f"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.004a254c
- **Origin (md5):** 9c2b894b84f59672d8be2e984066f76f
- **VirusTotal:** [virustotal.com/gui/file/9c2b894b84f59672d8be2e984066f76f][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.004a254c@9c2b894b84f59672d8be2e984066f76f">fcn.004a254c</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
sub esp, 0x64
mov eax, dword[0x5d9004]
xor eax, ebp
mov dword[ebp-4], eax
push ebx
mov ebx, dword[ebp+8]
push esi
mov esi, dword[ebp+0xc]
push edi
mov edi, ecx
mov dword[ebp-0x60], ebx
mov ecx, esi
mov dword[ebp-0x5c], edi
mov dword[ebp-0x58], esi
call fcn.0041b540
mov ecx, dword[edi+0xe4]
and eax, 0x400000
push ecx
mov dword[ebp-0x64], eax
lea eax, [ebp+0x10]
push ecx
push eax
mov ecx, ebx
call fcn.0042e82f
push 0xffffffffffffffff
push 0xffffffffffffffff
lea eax, [ebp+0x10]
push eax
call dword[sym.imp.USER32.dll_InflateRect]
mov eax, dword[edi+0xc0]
mov ecx, ebx
push eax
push eax
lea eax, [ebp+0x10]
push eax
call fcn.0042e82f
xor eax, eax
mov dword[ebp-0x3c], 2
inc eax
xor ebx, ebx
mov dword[ebp-0x44], eax
mov dword[ebp-0x40], eax
mov eax, dword[ebp+0x1c]
dec eax
mov dword[ebp-0x38], eax
mov eax, ebx
add edi, 0xfc
je off.b141
mov eax, dword[edi+4]
push eax
lea eax, [ebp-0x44]
push eax
mov eax, dword[ebp-0x60]
push dword[eax+4]
call dword[sym.imp.USER32.dll_FillRect]
mov ecx, esi
call fcn.00444871
test eax, eax
je off.b431
cmp dword[eax+0x1160], ebx
je off.b431
cmp dword[ebp-0x64], ebx
jne off.b431
mov eax, dword[esi+0x158]
test eax, eax
je off.b431
cmp dword[eax+0xb4], ebx
je off.b431
mov ecx, esi
call fcn.00444871
lea ecx, [ebp-0x24]
mov dword[ebp-0x24], ebx
push ecx
mov dword[ebp-0x20], ebx
mov dword[ebp-0x1c], ebx
mov dword[ebp-0x18], ebx
push dword[eax+0x20]
call dword[sym.imp.USER32.dll_GetWindowRect]
lea eax, [ebp-0x34]
mov dword[ebp-0x34], ebx
push eax
push dword[esi+0x20]
mov dword[ebp-0x30], ebx
mov dword[ebp-0x2c], ebx
mov dword[ebp-0x28], ebx
call dword[sym.imp.USER32.dll_GetWindowRect]
push ebx
mov ecx, esi
call fcn.004447b8
lea edi, [ebp-0x54]
lea esi, [eax+0x54]
movsd dword
lea eax, [ebp-0x14]
push eax
movsd dword
movsd dword
movsd dword
mov dword[ebp-0x14], ebx
mov dword[ebp-0x10], ebx
mov dword[ebp-0xc], ebx
mov dword[ebp-8], ebx
call dword[sym.imp.USER32.dll_SetRectEmpty]
mov eax, dword[ebp-0x24]
cmp eax, dword[ebp-0x34]
mov eax, dword[ebp-0x20]
jle off.b348
mov ecx, dword[ebp+0x18]
cmp eax, dword[ebp-0x30]
lea eax, [ecx+1]
jg off.b353
push dword[ebp-0x48]
push eax
push dword[ebp+0x14]
jmp off.b367
mov ecx, dword[ebp+0x10]
jmp off.b331
push dword[ebp+0x1c]
push eax
mov eax, dword[ebp-0x50]
sub eax, dword[ebp-0x48]
add eax, dword[ebp+0x1c]
push eax
lea eax, [ecx-1]
push eax
lea eax, [ebp-0x14]
push eax
call dword[sym.imp.USER32.dll_SetRect]
lea eax, [ebp-0x14]
push eax
call dword[sym.imp.USER32.dll_IsRectEmpty]
test eax, eax
jne off.b428
mov edi, dword[ebp-0x5c]
mov eax, ebx
add edi, 0xfc
je off.b411
mov eax, dword[edi+4]
push eax
lea eax, [ebp-0x14]
push eax
mov eax, dword[ebp-0x60]
push dword[eax+4]
call dword[sym.imp.USER32.dll_FillRect]
mov esi, dword[ebp-0x58]
cmp dword[0x5dfe28], ebx
jne off.b897
mov eax, dword[ebp-0x5c]
mov edi, dword[esi+0x158]
mov dword[ebp-0x64], edi
cmp dword[eax+0x14c], ebx
je off.b897
test edi, edi
je off.b897
mov ecx, esi
call fcn.00444871
test eax, eax
jne off.b897
mov eax, dword[edi]
mov esi, dword[eax+0xe4]
mov ecx, esi
call fcn.00553897
mov ecx, edi
call esi
test eax, eax
je off.b897
lea eax, [ebp-0x24]
mov dword[ebp-0x24], ebx
push eax
mov dword[ebp-0x20], ebx
mov dword[ebp-0x1c], ebx
mov dword[ebp-0x18], ebx
call dword[sym.imp.USER32.dll_SetRectEmpty]
mov ecx, dword[ebp-0x64]
lea esi, [edi+0x54]
lea edi, [ebp-0x14]
movsd dword
lea eax, [ebp-0x14]
push eax
mov ecx, dword[ecx+0x6c]
movsd dword
movsd dword
movsd dword
call fcn.0041231c
mov esi, dword[ebp-0x58]
lea eax, [ebp-0x14]
push eax
mov ecx, esi
call fcn.0041288e
mov eax, dword[esi+0xf30]
sub eax, 1
je off.b747
sub eax, 1
je off.b733
sub eax, 1
je off.b676
sub eax, 1
jne off.b800
mov ecx, dword[ebp+0x18]
lea esi, [ebp-0x54]
mov edx, dword[ebp-0x10]
lea edi, [ebp-0x24]
mov dword[ebp-0x54], ecx
inc edx
mov dword[ebp-0x50], edx
lea eax, [ecx+1]
mov ecx, dword[ebp-8]
mov dword[ebp-0x4c], eax
dec ecx
mov eax, dword[ebp+0x1c]
sub eax, dword[ebp+0x14]
mov dword[ebp-0x48], ecx
add eax, 2
movsd dword
sub ecx, edx
movsd dword
movsd dword
movsd dword
cmp ecx, eax
jle off.b800
jmp off.b897
mov ecx, dword[ebp+0x10]
lea esi, [ebp-0x54]
mov edx, dword[ebp-0x10]
lea edi, [ebp-0x24]
mov dword[ebp-0x4c], ecx
inc edx
mov dword[ebp-0x50], edx
lea eax, [ecx-1]
mov ecx, dword[ebp-8]
mov dword[ebp-0x54], eax
dec ecx
mov eax, dword[ebp+0x1c]
sub eax, dword[ebp+0x14]
mov dword[ebp-0x48], ecx
add eax, 2
movsd dword
sub ecx, edx
movsd dword
movsd dword
movsd dword
cmp ecx, eax
jg off.b897
jmp off.b800
mov ecx, dword[ebp+0x1c]
mov dword[ebp-0x50], ecx
lea eax, [ecx+1]
mov dword[ebp-0x48], eax
jmp off.b759
mov ecx, dword[ebp+0x14]
mov dword[ebp-0x48], ecx
lea eax, [ecx-1]
mov dword[ebp-0x50], eax
mov ebx, dword[ebp-0x14]
lea edi, [ebp-0x24]
mov edx, dword[ebp-0xc]
lea esi, [ebp-0x54]
mov eax, dword[ebp+0x18]
inc ebx
sub eax, dword[ebp+0x10]
dec edx
mov dword[ebp-0x4c], edx
add eax, 2
mov dword[ebp-0x54], ebx
sub edx, ebx
movsd dword
movsd dword
movsd dword
movsd dword
cmp edx, eax
jg off.b897
xor ebx, ebx
lea esi, [ebp+0x10]
lea edi, [ebp-0x34]
movsd dword
lea eax, [ebp-0x34]
movsd dword
movsd dword
movsd dword
xor esi, esi
inc esi
push esi
push esi
push eax
call dword[sym.imp.USER32.dll_InflateRect]
lea eax, [ebp-0x34]
push eax
lea eax, [ebp-0x24]
push eax
push eax
call dword[sym.imp.USER32.dll_IntersectRect]
push esi
push esi
lea eax, [ebp-0x14]
push eax
call dword[sym.imp.USER32.dll_InflateRect]
lea eax, [ebp-0x14]
push eax
lea eax, [ebp-0x24]
push eax
push eax
call dword[sym.imp.USER32.dll_IntersectRect]
mov eax, dword[ebp-0x5c]
add eax, 0xfc
je off.b880
mov ebx, dword[eax+4]
push ebx
lea eax, [ebp-0x24]
push eax
mov eax, dword[ebp-0x60]
push dword[eax+4]
call dword[sym.imp.USER32.dll_FillRect]
mov ecx, dword[ebp-4]
pop edi
pop esi
xor ecx, ebp
pop ebx
call fcn.00553199
mov esp, ebp
pop ebp
ret 0x18

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/9c2b894b84f59672d8be2e984066f76f