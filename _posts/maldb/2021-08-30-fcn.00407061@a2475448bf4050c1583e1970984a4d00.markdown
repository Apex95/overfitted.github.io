---
layout: post
title:  "fcn.00407061 @ a2475448bf4050c1583e1970984a4d00"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00407061
- **Origin (md5):** a2475448bf4050c1583e1970984a4d00
- **VirusTotal:** [virustotal.com/gui/file/a2475448bf4050c1583e1970984a4d00][virustotal_ref]

# Code Tags
<span class="tag" id="MEMORY">MEMORY</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.00407061@a2475448bf4050c1583e1970984a4d00">fcn.00407061</a><br>@a2475448bf4050c1583e1970984a4d00</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
sub esp, 0x14
mov edx, dword[ebp+0xc]
mov ecx, dword[ebp+8]
push ebx
push esi
mov eax, dword[ecx+0x10]
mov esi, edx
sub esi, dword[ecx+0xc]
mov ebx, dword[edx-4]
add edx, 0xfffffffc
push edi
shr esi, 0xf
mov ecx, esi
mov edi, dword[edx-4]
imul ecx, ecx, 0x204
dec ebx
mov dword[ebp-4], edi
lea ecx, [ecx+eax+0x144]
mov dword[ebp-0xc], ebx
mov dword[ebp-0x10], ecx
mov ecx, dword[ebx+edx]
test cl, 1
mov dword[ebp-8], ecx
jne off.b198
sar ecx, 4
push 0x3f
dec ecx
pop edi
mov dword[ebp+0xc], ecx
cmp ecx, edi
jbe off.b88
mov dword[ebp+0xc], edi
mov ecx, dword[ebx+edx+4]
cmp ecx, dword[ebx+edx+8]
jne off.b170
mov ecx, dword[ebp+0xc]
cmp ecx, 0x20
jae off.b134
mov edi, 0x80000000
shr edi, cl
lea ecx, [ecx+eax+4]
not edi
and dword[eax+esi*4+0x44], edi
dec byte[ecx]
jne off.b170
mov ecx, dword[ebp+8]
and dword[ecx], edi
jmp off.b170
add ecx, 0xffffffe0
mov edi, 0x80000000
shr edi, cl
mov ecx, dword[ebp+0xc]
lea ecx, [ecx+eax+4]
not edi
and dword[eax+esi*4+0xc4], edi
dec byte[ecx]
jne off.b170
mov ecx, dword[ebp+8]
and dword[ecx+4], edi
mov ecx, dword[ebx+edx+8]
mov edi, dword[ebx+edx+4]
mov dword[ecx+4], edi
mov ecx, dword[ebx+edx+4]
mov edi, dword[ebx+edx+8]
add ebx, dword[ebp-8]
mov dword[ecx+8], edi
mov dword[ebp-0xc], ebx
mov edi, ebx
sar edi, 4
dec edi
cmp edi, 0x3f
jbe off.b212
push 0x3f
pop edi
mov ecx, dword[ebp-4]
and ecx, 1
mov dword[ebp-0x14], ecx
jne off.b387
sub edx, dword[ebp-4]
mov ecx, dword[ebp-4]
sar ecx, 4
push 0x3f
mov dword[ebp-8], edx
dec ecx
pop edx
cmp ecx, edx
mov dword[ebp+0xc], ecx
jbe off.b255
mov dword[ebp+0xc], edx
mov ecx, edx
add ebx, dword[ebp-4]
mov edi, ebx
mov dword[ebp-0xc], ebx
sar edi, 4
dec edi
cmp edi, edx
jbe off.b273
mov edi, edx
cmp ecx, edi
je off.b384
mov ecx, dword[ebp-8]
mov edx, dword[ecx+4]
cmp edx, dword[ecx+8]
jne off.b360
mov ecx, dword[ebp+0xc]
cmp ecx, 0x20
jae off.b324
mov edx, 0x80000000
shr edx, cl
lea ecx, [ecx+eax+4]
not edx
and dword[eax+esi*4+0x44], edx
dec byte[ecx]
jne off.b360
mov ecx, dword[ebp+8]
and dword[ecx], edx
jmp off.b360
add ecx, 0xffffffe0
mov edx, 0x80000000
shr edx, cl
mov ecx, dword[ebp+0xc]
lea ecx, [ecx+eax+4]
not edx
and dword[eax+esi*4+0xc4], edx
dec byte[ecx]
jne off.b360
mov ecx, dword[ebp+8]
and dword[ecx+4], edx
mov ecx, dword[ebp-8]
mov edx, dword[ecx+8]
mov ecx, dword[ecx+4]
mov dword[edx+4], ecx
mov ecx, dword[ebp-8]
mov edx, dword[ecx+4]
mov ecx, dword[ecx+8]
mov dword[edx+8], ecx
mov edx, dword[ebp-8]
cmp dword[ebp-0x14], 0
jne off.b402
cmp dword[ebp+0xc], edi
je off.b539
mov ecx, dword[ebp-0x10]
lea ecx, [ecx+edi*8]
mov ecx, dword[ecx+4]
mov dword[edx+4], ecx
mov ecx, dword[ebp-0x10]
lea ecx, [ecx+edi*8]
mov dword[edx+8], ecx
mov dword[ecx+4], edx
mov ecx, dword[edx+4]
mov dword[ecx+8], edx
mov ecx, dword[edx+4]
cmp ecx, dword[edx+8]
jne off.b539
mov cl, byte[edi+eax+4]
cmp edi, 0x20
mov byte[ebp+0xf], cl
inc cl
mov byte[edi+eax+4], cl
jae off.b495
cmp byte[ebp+0xf], 0
jne off.b478
mov ebx, 0x80000000
mov ecx, edi
shr ebx, cl
mov ecx, dword[ebp+8]
or dword[ecx], ebx
mov ebx, 0x80000000
mov ecx, edi
shr ebx, cl
lea eax, [eax+esi*4+0x44]
or dword[eax], ebx
jmp off.b536
cmp byte[ebp+0xf], 0
jne off.b517
lea ecx, [edi-0x20]
mov ebx, 0x80000000
shr ebx, cl
mov ecx, dword[ebp+8]
or dword[ecx+4], ebx
lea ecx, [edi-0x20]
mov edi, 0x80000000
shr edi, cl
lea eax, [eax+esi*4+0xc4]
or dword[eax], edi
mov ebx, dword[ebp-0xc]
mov eax, dword[ebp-0x10]
mov dword[edx], ebx
mov dword[ebx+edx-4], ebx
dec dword[eax]
jne off.b806
mov eax, dword[0x419a70]
test eax, eax
je off.b792
mov ecx, dword[0x419a68]
mov edi, dword[sym.imp.KERNEL32.dll_VirtualFree]
shl ecx, 0xf
add ecx, dword[eax+0xc]
mov ebx, 0x8000
push 0x4000
push ebx
push ecx
call edi
mov ecx, dword[0x419a68]
mov eax, dword[0x419a70]
mov edx, 0x80000000
shr edx, cl
or dword[eax+8], edx
mov eax, dword[0x419a70]
mov ecx, dword[0x419a68]
mov eax, dword[eax+0x10]
and dword[eax+ecx*4+0xc4], 0
mov eax, dword[0x419a70]
mov eax, dword[eax+0x10]
dec byte[eax+0x43]
mov eax, dword[0x419a70]
mov ecx, dword[eax+0x10]
cmp byte[ecx+0x43], 0
jne off.b678
and dword[eax+4], 0xfffffffe
mov eax, dword[0x419a70]
cmp dword[eax+8], 0xffffffff
jne off.b792
push ebx
push 0
push dword[eax+0xc]
call edi
mov eax, dword[0x419a70]
push dword[eax+0x10]
push 0
push dword[0x419a7c]
call dword[sym.imp.KERNEL32.dll_HeapFree]
mov eax, dword[0x419a74]
mov edx, dword[0x419a78]
lea eax, [eax+eax*4]
shl eax, 2
mov ecx, eax
mov eax, dword[0x419a70]
sub ecx, eax
lea ecx, [ecx+edx-0x14]
push ecx
lea ecx, [eax+0x14]
push ecx
push eax
call fcn.00405650
mov eax, dword[ebp+8]
add esp, 0xc
dec dword[0x419a74]
cmp eax, dword[0x419a70]
jbe off.b778
sub eax, 0x14
mov ecx, dword[0x419a78]
mov dword[0x419a6c], ecx
jmp off.b795
mov eax, dword[ebp+8]
mov dword[0x419a70], eax
mov dword[0x419a68], esi
pop edi
pop esi
pop ebx
leave
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/a2475448bf4050c1583e1970984a4d00