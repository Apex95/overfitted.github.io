---
layout: post
title:  "fcn.00438d70 @ 4fe6510221c33bf023f6abed461fc13f"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00438d70
- **Origin (md5):** 4fe6510221c33bf023f6abed461fc13f
- **VirusTotal:** [virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Behaviour Tags
<span class="bhv-tag" id="CREATES_SOCKET_LISTENER">CREATES_SOCKET_LISTENER / 0.00828357203361552</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-230.53485107421875, -111.14835357666016, '<b><a href="/report/fcn.00438d70@4fe6510221c33bf023f6abed461fc13f">fcn.00438d70</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>', 'point { fill-color: #e0440e; }'],
[137.70985412597656, 14.216846466064453, '<b><a href="/report/fcn.00438640@4fe6510221c33bf023f6abed461fc13f">fcn.00438640</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>', 'null'],
[-11.241700172424316, 165.6840057373047, '<b><a href="/report/fcn.004305f0@4fe6510221c33bf023f6abed461fc13f">fcn.004305f0</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>', 'null'],
[-25.193405151367188, -110.8138198852539, '<b><a href="/report/fcn.00406ed0@4fe6510221c33bf023f6abed461fc13f">fcn.00406ed0</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>', 'null'],
[-205.0926513671875, 99.76338958740234, '<b><a href="/report/fcn.00434890@4fe6510221c33bf023f6abed461fc13f">fcn.00434890</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
and esp, 0xfffffff8
sub esp, 0xdc
mov edx, dword[ebp+8]
mov ecx, dword[0x4c6400]
mov al, 1
cmp al, byte[edx+1]
push ebx
push esi
sbb esi, esi
and esi, dword[0x4c6404]
push edi
mov dword[esp+0x8c], ecx
mov dword[esp+0x90], esi
test ecx, ecx
je 0x438dac
call fcn.00413110
test esi, esi
je 0x438db7
mov ecx, esi
call fcn.00413110
mov eax, dword[0x4c28ec]
movzx ebx, word[eax+0xec]
xor esi, esi
xor edi, edi
and ebx, 3
mov dword[esp+0x60], esi
mov dword[esp+0x64], edi
cmp ebx, 2
je 0x438e3f
call dword[sym.imp.USER32.dll_GetForegroundWindow]
mov dword[esp+0x14], eax
test eax, eax
je 0x438e3f
mov ecx, eax
push ecx
call dword[sym.imp.USER32.dll_IsIconic]
test eax, eax
jne 0x438e3f
test ebx, ebx
jne 0x438e08
mov eax, dword[esp+0x14]
lea edx, [esp+0x7c]
push edx
push eax
call dword[sym.imp.USER32.dll_GetWindowRect]
jmp 0x438e28
mov edx, dword[esp+0x14]
lea ecx, [esp+0x7c]
xor eax, eax
push ecx
push edx
mov dword[esp+0x84], eax
mov dword[esp+0x88], eax
call dword[sym.imp.USER32.dll_ClientToScreen]
test eax, eax
je 0x438e3f
add esi, dword[esp+0x7c]
add edi, dword[esp+0x80]
mov dword[esp+0x60], esi
mov dword[esp+0x64], edi
mov ebx, dword[ebp+0x1c]
add dword[ebp+0xc], esi
add dword[ebp+0x10], edi
add dword[ebp+0x14], esi
add dword[ebp+0x18], edi
xor eax, eax
push 0x2e
push ebx
mov dword[esp+0x18], eax
mov dword[esp+0x3c], 0xffffffff
mov dword[esp+0x1c], eax
mov dword[esp+0x2c], eax
mov dword[esp+0x30], eax
call fcn.0048e91d
mov esi, eax
add esp, 8
test esi, esi
je 0x438ec8
add esi, 2
push 0x4a9bb0
push esi
call fcn.0048cd49
add esp, 8
test eax, eax
je 0x438eb2
push 0x4a9bb8
push esi
call fcn.0048cd49
add esp, 8
test eax, eax
je 0x438eb2
push 0x4a9bc0
push esi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x438ec8
mov esi, dword[sym.imp.USER32.dll_GetSystemMetrics]
push 0x31
call esi
push 0x32
mov dword[esp+0x28], eax
call esi
mov dword[esp+0x28], eax
mov edi, ebx
lea ebx, [ebx]
movzx eax, word[edi]
cmp eax, 0x20
je 0x438edd
cmp eax, 9
jne 0x438ee2
add edi, 2
jmp 0x438ed0
cmp word[edi], 0x2a
jne 0x4391c2
movzx eax, word[edi+2]
add edi, 2
push eax
call fcn.0048ee9d
movzx eax, ax
add esp, 4
cmp eax, 0x48
je 0x4390be
cmp eax, 0x57
je 0x43904b
push 4
push str.Icon
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x438f58
add edi, 8
mov eax, edi
call fcn.0040d200
test al, al
je 0x438f49
push 0x10
push 0
push edi
call fcn.0048e37b
add esp, 0xc
mov dword[esp+0x14], eax
jmp 0x43912f
push edi
call fcn.0048dfe6
mov dword[esp+0x18], eax
jmp 0x43912c
push 5
push str.Trans
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x438ff7
push 0x1f
add edi, 0xa
lea ecx, [esp+0xac]
push edi
push ecx
call fcn.0048fa44
xor edx, edx
add esp, 0xc
mov ebx, 0x4a352c
lea eax, [esp+0xa8]
mov word[esp+0xe6], dx
call fcn.004095d0
test eax, eax
je 0x438faa
xor ecx, ecx
mov word[eax], cx
lea esi, [esp+0xa8]
call fcn.00474a80
cmp eax, 0xffffffff
jne 0x438fd3
push 0x10
mov edx, esi
push 0
push edx
call fcn.0048e37b
add esp, 0xc
mov dword[esp+0x34], eax
jmp 0x43912f
mov ecx, eax
shr ecx, 8
movzx edx, al
movzx ecx, cl
shl edx, 8
shr eax, 0x10
or ecx, edx
movzx eax, al
shl ecx, 8
or ecx, eax
mov dword[esp+0x34], ecx
jmp 0x43912f
mov eax, edi
call fcn.0040d200
test al, al
je 0x439015
push 0x10
push 0
push edi
call fcn.0048e37b
add esp, 0xc
mov dword[esp+0x10], eax
jmp 0x439022
push edi
call fcn.0048dfe6
add esp, 4
mov dword[esp+0x10], eax
test eax, eax
jns 0x439033
mov dword[esp+0x10], 0
jmp 0x43912f
cmp eax, 0xff
jle 0x43912f
mov dword[esp+0x10], 0xff
jmp 0x43912f
lea esi, [edi+2]
mov eax, esi
movzx ecx, word[eax]
cmp ecx, 0x20
je 0x43905d
cmp ecx, 9
jne 0x439062
add eax, 2
jmp 0x439050
movzx ecx, word[eax]
test cx, cx
je 0x4390b2
cmp ecx, 0x2d
je 0x439074
cmp ecx, 0x2b
jne 0x439077
add eax, 2
cmp word[eax], 0x30
jne 0x4390b2
movzx ecx, word[eax+2]
cmp ecx, 0x78
je 0x43908b
cmp ecx, 0x58
jne 0x4390b2
movzx ecx, word[eax+4]
push ecx
call fcn.0048e189
add esp, 4
test eax, eax
je 0x4390b2
push 0x10
push 0
push esi
call fcn.0048e37b
add esp, 0xc
mov dword[esp+0x24], eax
jmp 0x43912f
push esi
call fcn.0048dfe6
mov dword[esp+0x28], eax
jmp 0x43912c
lea esi, [edi+2]
mov eax, esi
movzx ecx, word[eax]
cmp ecx, 0x20
je 0x4390d0
cmp ecx, 9
jne 0x4390d5
add eax, 2
jmp 0x4390c3
movzx ecx, word[eax]
test cx, cx
je 0x439122
cmp ecx, 0x2d
je 0x4390e7
cmp ecx, 0x2b
jne 0x4390ea
add eax, 2
cmp word[eax], 0x30
jne 0x439122
movzx ecx, word[eax+2]
cmp ecx, 0x78
je 0x4390fe
cmp ecx, 0x58
jne 0x439122
movzx edx, word[eax+4]
push edx
call fcn.0048e189
add esp, 4
test eax, eax
je 0x439122
push 0x10
push 0
push esi
call fcn.0048e37b
add esp, 0xc
mov dword[esp+0x28], eax
jmp 0x43912f
push esi
call fcn.0048dfe6
mov dword[esp+0x2c], eax
add esp, 4
test edi, edi
je 0x43916d
movzx eax, word[edi]
test ax, ax
je 0x43916d
jmp 0x439140
movzx edx, ax
mov ecx, 0x4a352c
mov eax, 0x20
lea ecx, [ecx]
cmp dx, ax
je 0x43919f
movzx eax, word[ecx+2]
add ecx, 2
test ax, ax
jne 0x439150
movzx eax, word[edi+2]
add edi, 2
test ax, ax
jne 0x439140
mov eax, dword[0x4c28ec]
cmp byte[eax+0x104], 0
jne 0x439845
mov ecx, dword[0x4c6cb4]
push 1
push 0
push 0xffffffffffffffff
push 0x4a358c
push ecx
call fcn.00476680
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 0x18
lea ebx, [edi+2]
mov eax, ebx
movzx ecx, word[eax]
cmp ecx, 0x20
je 0x4391b1
cmp ecx, 9
jne 0x4391b6
add eax, 2
jmp 0x4391a4
cmp word[eax], 0x2a
mov edi, eax
je 0x438eec
mov ecx, dword[esp+0x14]
lea eax, [esp+0x1c]
push eax
mov eax, dword[esp+0x2c]
push 0
push ecx
mov ecx, dword[esp+0x30]
lea edx, [esp+0x38]
push edx
push eax
push ecx
push ebx
call fcn.00474f00
mov esi, eax
add esp, 0x1c
mov dword[esp+0x68], esi
test esi, esi
je 0x43916d
push 0
call dword[sym.imp.USER32.dll_GetDC]
mov edi, eax
mov dword[esp+0x48], edi
test edi, edi
jne 0x43922e
cmp byte[esp+0x1c], al
jne 0x43916d
cmp dword[esp+0x2c], 1
push esi
jne 0x439223
call dword[sym.imp.USER32.dll_DestroyIcon]
jmp 0x43916d
call dword[sym.imp.GDI32.dll_DeleteObject]
jmp 0x43916d
mov ebx, dword[sym.imp.GDI32.dll_DeleteObject]
xor eax, eax
cmp dword[esp+0x2c], 1
mov dword[esp+0x78], eax
mov dword[esp+0x14], eax
mov dword[esp+0x28], eax
mov dword[esp+0x38], eax
mov dword[esp+0x6c], eax
mov byte[esp+0xd], al
jne 0x4392ba
lea edx, [esp+0x94]
push edx
push esi
call dword[sym.imp.USER32.dll_GetIconInfo]
test eax, eax
je 0x4392a3
push 1
lea eax, [esp+0x12]
push eax
mov eax, dword[esp+0xa8]
lea ecx, [esp+0x54]
push ecx
lea edx, [esp+0x4c]
push edx
push eax
mov eax, edi
call fcn.00438430
mov ecx, dword[esp+0xb8]
add esp, 0x14
push ecx
mov dword[esp+0x3c], eax
call ebx
mov edx, dword[esp+0xa0]
push edx
call ebx
push esi
call fcn.004757f0
mov esi, eax
add esp, 4
mov dword[esp+0x68], eax
test esi, esi
je 0x43916d
push 8
lea eax, [esp+0x12]
push eax
lea ecx, [esp+0x54]
push ecx
lea edx, [esp+0x4c]
push edx
push esi
mov eax, edi
call fcn.00438430
add esp, 0x14
mov dword[esp+0x3c], eax
test eax, eax
je 0x439517
mov esi, dword[ebp+0x14]
mov ebx, dword[ebp+0x18]
mov eax, dword[esp+0x48]
sub esi, dword[ebp+0xc]
sub ebx, dword[ebp+0x10]
push eax
inc esi
inc ebx
call dword[sym.imp.GDI32.dll_CreateCompatibleDC]
mov edi, eax
mov dword[esp+0x78], edi
test edi, edi
je 0x439517
mov ecx, dword[esp+0x48]
push ebx
push esi
push ecx
call dword[sym.imp.GDI32.dll_CreateCompatibleBitmap]
mov dword[esp+0x14], eax
test eax, eax
je 0x439517
mov edx, eax
push edx
push edi
call dword[sym.imp.GDI32.dll_SelectObject]
mov dword[esp+0x6c], eax
test eax, eax
je 0x439517
mov eax, dword[ebp+0x10]
mov ecx, dword[ebp+0xc]
mov edx, dword[esp+0x48]
push 0xcc0020
push eax
push ecx
push edx
push ebx
push esi
push 0
push 0
push edi
call dword[sym.imp.GDI32.dll_BitBlt]
test eax, eax
je 0x439517
push 8
lea eax, [esp+0x13]
push eax
mov eax, dword[esp+0x1c]
lea ecx, [esp+0x64]
push ecx
lea edx, [esp+0x3c]
push edx
push eax
mov eax, edi
call fcn.00438430
mov esi, eax
add esp, 0x14
mov dword[esp+0x28], esi
test esi, esi
je 0x439517
mov ecx, dword[esp+0x40]
mov edx, dword[esp+0x30]
imul ecx, dword[esp+0x4c]
imul edx, dword[esp+0x5c]
cmp byte[esp+0xe], 0
mov dword[esp+0x44], ecx
mov dword[esp+0x70], edx
jne 0x4393b5
cmp byte[esp+0xf], 0
je 0x4393f4
cmp dword[esp+0x34], 0xffffffff
je 0x4393c4
and dword[esp+0x34], 0xf8f8f8
xor eax, eax
test edx, edx
jle 0x4393dc
lea ebx, [ebx]
and dword[esi+eax*4], 0xf8f8f8
inc eax
cmp eax, edx
jl 0x4393d0
mov edi, dword[esp+0x3c]
xor eax, eax
test ecx, ecx
jle 0x439409
and dword[edi+eax*4], 0xf8f8f8
inc eax
cmp eax, ecx
jl 0x4393e6
jmp 0x4393f8
mov edi, dword[esp+0x3c]
test ecx, ecx
jle 0x439409
lea eax, [edi+3]
nop
mov byte[eax], 0
add eax, 4
dec ecx
jne 0x439400
mov ebx, dword[esp+0x10]
cmp ebx, 1
jge 0x4395d9
test edx, edx
jle 0x439429
lea eax, [esi+3]
mov ecx, edx
nop
mov byte[eax], 0
add eax, 4
dec ecx
jne 0x439420
xor esi, esi
mov dword[esp+0x20], esi
test edx, edx
jle 0x4397bd
mov ebx, dword[edi]
mov dword[esp+0x50], ebx
lea ecx, [ecx]
mov ecx, dword[esp+0x28]
lea edi, [esi*4]
cmp dword[edi+ecx], ebx
je 0x439467
mov eax, dword[esp+0x38]
test eax, eax
je 0x43945d
cmp dword[eax], 0
jne 0x439467
cmp ebx, dword[esp+0x34]
jne 0x4395c5
mov ecx, dword[esp+0x30]
mov eax, esi
cdq
idiv ecx
mov esi, dword[esp+0x5c]
sub esi, eax
cmp dword[esp+0x4c], esi
jg 0x4395c1
sub ecx, edx
cmp dword[esp+0x40], ecx
jg 0x4395c1
mov esi, dword[esp+0x20]
xor ebx, ebx
mov byte[esp+0xd], 1
mov dword[esp+0x24], ebx
cmp dword[esp+0x44], ebx
jle 0x43951b
mov eax, dword[esp+0x3c]
mov edx, dword[esp+0x38]
sub edx, eax
mov byte[esp+0xd], 1
mov ecx, esi
mov dword[esp+0x2c], edi
mov dword[esp+0x58], edx
mov edi, edi
mov edx, dword[eax]
mov edi, dword[esp+0x28]
cmp dword[edi+esi*4], edx
je 0x4394e6
cmp dword[esp+0x38], 0
je 0x4394dc
mov edi, dword[esp+0x58]
cmp dword[edi+eax], 0
jne 0x4394e6
cmp edx, dword[esp+0x34]
jne 0x4395b8
inc ebx
cmp ebx, dword[esp+0x40]
jge 0x4394f0
inc esi
jmp 0x439505
mov edx, dword[esp+0x30]
lea esi, [edx*4]
add dword[esp+0x2c], esi
xor ebx, ebx
add ecx, edx
mov esi, ecx
mov edx, dword[esp+0x24]
inc edx
add eax, 4
mov dword[esp+0x24], edx
cmp edx, dword[esp+0x44]
jl 0x4394c0
mov esi, dword[esp+0x20]
mov eax, dword[esp+0x48]
push eax
push 0
call dword[sym.imp.USER32.dll_ReleaseDC]
cmp byte[esp+0x1c], 0
jne 0x43953a
mov ecx, dword[esp+0x68]
push ecx
call dword[sym.imp.GDI32.dll_DeleteObject]
mov edi, dword[esp+0x78]
test edi, edi
je 0x439559
mov eax, dword[esp+0x6c]
test eax, eax
je 0x439552
push eax
push edi
call dword[sym.imp.GDI32.dll_SelectObject]
push edi
call dword[sym.imp.GDI32.dll_DeleteDC]
mov eax, dword[esp+0x14]
test eax, eax
je 0x439568
push eax
call dword[sym.imp.GDI32.dll_DeleteObject]
mov eax, dword[esp+0x3c]
test eax, eax
je 0x439579
push eax
call fcn.0048e3af
add esp, 4
mov eax, dword[esp+0x38]
test eax, eax
je 0x43958a
push eax
call fcn.0048e3af
add esp, 4
mov eax, dword[esp+0x28]
test eax, eax
je 0x43916d
push eax
call fcn.0048e3af
add esp, 4
cmp byte[esp+0xd], 0
jne 0x4397d9
mov eax, 1
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 0x18
mov ebx, dword[esp+0x50]
mov byte[esp+0xd], 0
mov esi, dword[esp+0x20]
inc esi
mov dword[esp+0x20], esi
cmp esi, dword[esp+0x70]
jl 0x439440
jmp 0x4397bd
xor esi, esi
mov dword[esp+0x20], esi
test edx, edx
jle 0x4397bd
mov eax, esi
cdq
idiv dword[esp+0x30]
mov ecx, dword[esp+0x5c]
sub ecx, eax
cmp dword[esp+0x4c], ecx
jg 0x4397ae
mov eax, dword[esp+0x30]
sub eax, edx
cmp dword[esp+0x40], eax
jg 0x4397ae
xor eax, eax
mov byte[esp+0xd], 1
mov dword[esp+0x54], eax
mov dword[esp+0x24], eax
mov dword[esp+0x2c], esi
cmp dword[esp+0x44], eax
jle 0x43951b
mov eax, dword[esp+0x38]
lea ecx, [esi*4]
sub eax, edi
mov byte[esp+0xd], 1
mov dword[esp+0x50], esi
mov dword[esp+0x74], ecx
mov dword[esp+0x58], eax
lea esp, [esp]
movzx eax, byte[edi+2]
mov dl, byte[edi+1]
cmp ebx, eax
jle 0x439662
mov byte[esp+0xe], 0
jmp 0x43966a
mov cl, al
sub cl, bl
mov byte[esp+0xe], cl
movzx edx, dl
mov dword[esp+0x7c], edx
cmp ebx, edx
jle 0x43967c
mov byte[esp+0x1e], 0
jmp 0x43968a
mov ebx, dword[esp+0x10]
mov cl, dl
sub cl, byte[esp+0x10]
mov byte[esp+0x1e], cl
movzx ecx, byte[edi]
cmp ebx, ecx
jle 0x439698
mov byte[esp+0x1f], 0
jmp 0x4396a6
mov dl, cl
sub dl, byte[esp+0x10]
mov byte[esp+0x1f], dl
mov edx, dword[esp+0x7c]
mov ebx, dword[esp+0x10]
mov esi, 0xff
sub esi, eax
cmp ebx, esi
jle 0x4396c0
mov eax, 0xff
mov byte[esp+0x1d], al
jmp 0x4396cb
add al, bl
mov byte[esp+0x1d], al
mov eax, 0xff
mov esi, eax
sub esi, edx
cmp ebx, esi
jle 0x4396d9
mov byte[esp+0x1b], al
jmp 0x4396df
add dl, bl
mov byte[esp+0x1b], dl
mov edx, eax
sub edx, ecx
cmp ebx, edx
jle 0x4396ed
mov byte[esp+0xf], al
jmp 0x4396f3
add cl, bl
mov byte[esp+0xf], cl
mov eax, dword[esp+0x28]
mov esi, dword[esp+0x2c]
mov cl, byte[eax+esi*4+2]
mov dl, byte[eax+esi*4+1]
mov al, byte[eax+esi*4]
cmp cl, byte[esp+0xe]
jb 0x43972a
cmp cl, byte[esp+0x1d]
ja 0x43972a
cmp dl, byte[esp+0x1e]
jb 0x43972a
cmp dl, byte[esp+0x1b]
ja 0x43972a
cmp al, byte[esp+0x1f]
jb 0x43972a
cmp al, byte[esp+0xf]
jbe 0x439743
cmp dword[esp+0x38], 0
je 0x43973b
mov eax, dword[esp+0x58]
cmp dword[edi+eax], 0
jne 0x439743
mov ecx, dword[esp+0x34]
cmp dword[edi], ecx
jne 0x43979d
mov eax, dword[esp+0x54]
inc eax
mov dword[esp+0x54], eax
cmp eax, dword[esp+0x40]
jge 0x439759
inc esi
mov dword[esp+0x2c], esi
jmp 0x43977e
mov eax, dword[esp+0x30]
lea ecx, [eax*4]
add dword[esp+0x74], ecx
mov ecx, dword[esp+0x50]
add ecx, eax
mov dword[esp+0x54], 0
mov dword[esp+0x50], ecx
mov dword[esp+0x2c], ecx
mov eax, dword[esp+0x24]
inc eax
add edi, 4
mov dword[esp+0x24], eax
cmp eax, dword[esp+0x44]
jge 0x439517
mov ebx, dword[esp+0x10]
jmp 0x439650
mov ebx, dword[esp+0x10]
mov esi, dword[esp+0x20]
mov edi, dword[esp+0x3c]
mov byte[esp+0xd], 0
inc esi
mov dword[esp+0x20], esi
cmp esi, dword[esp+0x70]
jl 0x4395e7
mov edx, dword[0x4c6cb4]
push 1
push 0
push 0xffffffffffffffff
push 0x4a331c
push edx
call fcn.00476680
jmp 0x43951b
mov ecx, dword[esp+0x8c]
test ecx, ecx
je 0x439800
mov eax, esi
cdq
idiv dword[esp+0x30]
push 0x18
mov eax, edx
sub eax, dword[esp+0x64]
add eax, dword[ebp+0xc]
cdq
push edx
push eax
mov eax, ecx
call fcn.004010e0
mov ecx, dword[esp+0x90]
test ecx, ecx
je 0x439825
mov eax, esi
cdq
idiv dword[esp+0x30]
push 0x18
sub eax, dword[esp+0x68]
add eax, dword[ebp+0x10]
cdq
push edx
push eax
mov eax, ecx
call fcn.004010e0
mov edx, dword[0x4c6cb4]
push 1
push 0
push 0xffffffffffffffff
push 0x4a0900
push edx
call fcn.00476680
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 0x18
mov ecx, dword[ebp+8]
push 0x4ab02c
push 0
push 0x4a358c
call fcn.0042dc50
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 0x18

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f