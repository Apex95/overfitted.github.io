---
layout: post
title:  "sym.MFC80D.DLL_Ordinal_7039 @ ebea46c6b17785efc2ebcb24ad99656c"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** sym.MFC80D.DLL\_Ordinal\_7039
- **Origin (md5):** ebea46c6b17785efc2ebcb24ad99656c
- **VirusTotal:** [virustotal.com/gui/file/ebea46c6b17785efc2ebcb24ad99656c][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/sym.MFC80D.DLL_Ordinal_7039@ebea46c6b17785efc2ebcb24ad99656c">sym.MFC80D.DLL_Ordinal_7039</a><br>@ebea46c6b17785efc2ebcb24ad99656c</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
sub esp, 0x44
mov dword[ebp-0x44], ecx
cmp dword[ebp+0xc], 0
jne off.b35
push 0x12a
push 0x781d6d98
call sym.MFC80D.DLL_Ordinal_1363
test eax, eax
je off.b35
int3
mov ecx, dword[ebp+8]
cmp dword[ecx+4], 0x367
je off.b68
mov edx, dword[ebp+8]
cmp dword[edx+4], 0x100
jne off.b103
mov eax, dword[ebp+8]
cmp dword[eax+8], 0x1b
jne off.b103
push 1
mov ecx, dword[ebp+8]
mov edx, dword[ecx+4]
push edx
mov eax, dword[ebp+8]
mov ecx, dword[eax+4]
push ecx
push 0
mov edx, dword[ebp+8]
push edx
call dword[sym.imp.USER32.dll_PeekMessageA]
xor eax, eax
jmp off.b988
lea ecx, [ebp-8]
call fcn.783a6cb0
mov eax, dword[ebp+8]
cmp dword[eax+4], 0x200
jb off.b135
mov ecx, dword[ebp+8]
cmp dword[ecx+4], 0x209
jbe off.b167
mov edx, dword[ebp+8]
cmp dword[edx+4], 0xa0
jb off.b611
mov eax, dword[ebp+8]
cmp dword[eax+4], 0xa9
ja off.b611
lea ecx, [ebp-0xc]
push ecx
mov edx, dword[ebp+8]
mov eax, dword[edx+0x18]
push eax
mov ecx, dword[edx+0x14]
push ecx
mov ecx, dword[ebp-0x44]
call sym.MFC80D.DLL_Ordinal_7974
mov dword[ebp-0x10], eax
cmp dword[ebp-0x10], 0
jne off.b209
mov eax, 1
jmp off.b988
cmp dword[ebp-0xc], 0
je off.b568
mov edx, dword[ebp+8]
cmp dword[edx+4], 0x201
je off.b269
push 1
mov eax, dword[ebp+8]
mov ecx, dword[eax+4]
push ecx
mov edx, dword[ebp+8]
mov eax, dword[edx+4]
push eax
push 0
mov ecx, dword[ebp+8]
push ecx
call dword[sym.imp.USER32.dll_PeekMessageA]
mov eax, 1
jmp off.b988
mov edx, dword[ebp+8]
mov eax, dword[edx+0x14]
and eax, 0xffff
movzx ecx, ax
mov edx, dword[ebp+8]
mov eax, dword[edx+0x18]
and eax, 0xffff
movzx edx, ax
shl edx, 0x10
or ecx, edx
push ecx
push 0
push 0x84
mov eax, dword[ebp-0x10]
push eax
call dword[sym.imp.USER32.dll_SendMessageA]
mov dword[ebp-0x14], eax
cmp dword[ebp-0x14], 5
je off.b335
cmp dword[ebp-0x14], 3
jne off.b449
call dword[sym.imp.USER32.dll_GetCapture]
mov ecx, dword[ebp-0x44]
cmp eax, dword[ecx+0x20]
je off.b369
push 0x148
push 0x781d6d98
call sym.MFC80D.DLL_Ordinal_1363
test eax, eax
je off.b369
int3
call dword[sym.imp.USER32.dll_ReleaseCapture]
push 0xa1
push 0xa1
push 0
mov eax, dword[ebp+8]
push eax
call dword[sym.imp.USER32.dll_GetMessageA]
mov ecx, dword[ebp+8]
push ecx
call dword[sym.imp.USER32.dll_DispatchMessageA]
lea edx, [ebp-8]
push edx
call dword[sym.imp.USER32.dll_GetCursorPos]
mov eax, dword[ebp-8]
mov dword[ebp-0x38], eax
mov ecx, dword[ebp-4]
mov dword[ebp-0x34], ecx
push 0
mov edx, dword[ebp-0x34]
push edx
mov eax, dword[ebp-0x38]
push eax
mov ecx, dword[ebp-0x44]
call sym.MFC80D.DLL_Ordinal_7974
jmp off.b566
cmp dword[ebp-0x14], 1
jne off.b517
mov ecx, dword[ebp+8]
mov edx, dword[ecx+0x18]
push edx
mov eax, dword[ecx+0x14]
push eax
mov ecx, dword[ebp-0x10]
push ecx
call fcn.7825b810
mov edx, dword[ebp+0xc]
mov dword[edx], eax
push 1
mov eax, dword[ebp+8]
mov ecx, dword[eax+4]
push ecx
mov edx, dword[ebp+8]
mov eax, dword[edx+4]
push eax
push 0
mov ecx, dword[ebp+8]
push ecx
call dword[sym.imp.USER32.dll_PeekMessageA]
xor eax, eax
jmp off.b988
mov edx, dword[ebp-0x14]
push edx
call fcn.7825b8e0
mov ecx, dword[ebp+0xc]
mov dword[ecx], eax
push 1
mov edx, dword[ebp+8]
mov eax, dword[edx+4]
push eax
mov ecx, dword[ebp+8]
mov edx, dword[ecx+4]
push edx
push 0
mov eax, dword[ebp+8]
push eax
call dword[sym.imp.USER32.dll_PeekMessageA]
xor eax, eax
jmp off.b988
jmp off.b606
push 1
mov ecx, dword[ebp+8]
mov edx, dword[ecx+4]
push edx
mov eax, dword[ebp+8]
mov ecx, dword[eax+4]
push ecx
push 0
mov edx, dword[ebp+8]
push edx
call dword[sym.imp.USER32.dll_PeekMessageA]
mov eax, dword[ebp+8]
push eax
call dword[sym.imp.USER32.dll_DispatchMessageA]
jmp off.b983
mov ecx, dword[ebp+8]
cmp dword[ecx+4], 0x112
je off.b655
mov edx, dword[ebp+8]
cmp dword[edx+4], 0x100
jb off.b941
mov eax, dword[ebp+8]
cmp dword[eax+4], 0x109
ja off.b941
call dword[sym.imp.USER32.dll_GetCapture]
test eax, eax
je off.b701
call dword[sym.imp.USER32.dll_ReleaseCapture]
push 3
push 0x209
push 0x200
push 0
lea ecx, [ebp-0x30]
push ecx
call dword[sym.imp.USER32.dll_PeekMessageA]
test eax, eax
je off.b701
jmp off.b671
push 0
mov edx, dword[ebp+8]
mov eax, dword[edx+4]
push eax
mov ecx, dword[ebp+8]
mov edx, dword[ecx+4]
push edx
push 0
mov eax, dword[ebp+8]
push eax
call dword[sym.imp.USER32.dll_PeekMessageA]
test eax, eax
je off.b899
mov ecx, dword[ebp+8]
mov edx, dword[ecx+4]
push edx
mov eax, dword[ebp+8]
mov ecx, dword[eax+4]
push ecx
push 0
mov edx, dword[ebp+8]
push edx
call dword[sym.imp.USER32.dll_GetMessageA]
mov eax, dword[ebp+8]
push eax
mov ecx, dword[ebp-0x44]
mov edx, dword[ecx]
mov ecx, dword[ebp-0x44]
mov eax, dword[edx+0x108]
call eax
test eax, eax
jne off.b899
mov ecx, dword[ebp+8]
push ecx
call dword[sym.imp.USER32.dll_TranslateMessage]
mov edx, dword[ebp+8]
cmp dword[edx+4], 0x112
je off.b833
mov eax, dword[ebp+8]
cmp dword[eax+4], 0x104
jb off.b899
mov ecx, dword[ebp+8]
cmp dword[ecx+4], 0x107
ja off.b899
mov edx, dword[ebp+8]
cmp dword[edx+4], 0x112
je off.b889
mov eax, dword[ebp+8]
cmp dword[eax+4], 0x104
jb off.b869
mov ecx, dword[ebp+8]
cmp dword[ecx+4], 0x107
jbe off.b889
push 0x17e
push 0x781d6d98
call sym.MFC80D.DLL_Ordinal_1363
test eax, eax
je off.b889
int3
mov eax, dword[ebp+8]
push eax
call dword[sym.imp.USER32.dll_DispatchMessageA]
lea ecx, [ebp-8]
push ecx
call dword[sym.imp.USER32.dll_GetCursorPos]
mov edx, dword[ebp-8]
mov dword[ebp-0x40], edx
mov eax, dword[ebp-4]
mov dword[ebp-0x3c], eax
push 0
mov ecx, dword[ebp-0x3c]
push ecx
mov edx, dword[ebp-0x40]
push edx
mov ecx, dword[ebp-0x44]
call sym.MFC80D.DLL_Ordinal_7974
jmp off.b983
push 1
mov eax, dword[ebp+8]
mov ecx, dword[eax+4]
push ecx
mov edx, dword[ebp+8]
mov eax, dword[edx+4]
push eax
push 0
mov ecx, dword[ebp+8]
push ecx
call dword[sym.imp.USER32.dll_PeekMessageA]
test eax, eax
je off.b983
mov edx, dword[ebp+8]
push edx
call dword[sym.imp.USER32.dll_DispatchMessageA]
mov eax, 1
mov esp, ebp
pop ebp
ret 8

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/ebea46c6b17785efc2ebcb24ad99656c