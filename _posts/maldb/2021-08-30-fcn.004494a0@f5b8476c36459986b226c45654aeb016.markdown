---
layout: post
title:  "fcn.004494a0 @ f5b8476c36459986b226c45654aeb016"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.004494a0
- **Origin (md5):** f5b8476c36459986b226c45654aeb016
- **VirusTotal:** [virustotal.com/gui/file/f5b8476c36459986b226c45654aeb016][virustotal_ref]

# Code Tags
<span class="tag" id="THREAD">THREAD</span>


# Behaviour Tags
<span class="bhv-tag" id="CREATES_SOCKET_LISTENER">CREATES_SOCKET_LISTENER / 0.20105417754842658</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [49.76958465576172, 105.72340393066406, '<b><a href="/report/fcn.004494a0@f5b8476c36459986b226c45654aeb016">fcn.004494a0</a><br>@f5b8476c36459986b226c45654aeb016</b><br>', 'point { fill-color: #e0440e; }'],
[-47.544918060302734, 159.92681884765625, '<b><a href="/report/fcn.00442a56@e16f74a2849182d98050864255e902f8">fcn.00442a56</a><br>@e16f74a2849182d98050864255e902f8</b><br>', 'null'],
[-50.68326187133789, -149.35879516601562, '<b><a href="/report/fcn.00441880@3d7f25d788af3e7f7707a736ac852465">fcn.00441880</a><br>@3d7f25d788af3e7f7707a736ac852465</b><br>', 'null'],
[129.53616333007812, 267.0756530761719, '<b><a href="/report/fcn.0040c867@418e0921f3a9bd4f5bc0dcc59623b5a1">fcn.0040c867</a><br>@418e0921f3a9bd4f5bc0dcc59623b5a1</b><br>', 'null'],
[57.615142822265625, -177.7582550048828, '<b><a href="/report/fcn.00441880@6e426bd8e348fab7a17ba317fb0f2d87">fcn.00441880</a><br>@6e426bd8e348fab7a17ba317fb0f2d87</b><br>', 'null'],
[-6.271947383880615, -29.97587776184082, '<b><a href="/report/fcn.0044c5d0@20a93604f17ee6f3c2aa7b1f7a497fcf">fcn.0044c5d0</a><br>@20a93604f17ee6f3c2aa7b1f7a497fcf</b><br>', 'null'],
[-30.939590454101562, -266.98211669921875, '<b><a href="/report/fcn.00441880@e83552e81a6f265fd7baa50402d3d47d">fcn.00441880</a><br>@e83552e81a6f265fd7baa50402d3d47d</b><br>', 'null'],
[-149.4137725830078, -95.87550354003906, '<b><a href="/report/fcn.00441880@44a756939733df3681808b122b91651f">fcn.00441880</a><br>@44a756939733df3681808b122b91651f</b><br>', 'null'],
[-145.41592407226562, -221.57981872558594, '<b><a href="/report/fcn.00441880@7307643b343733b7fbd7b4b4fb482515">fcn.00441880</a><br>@7307643b343733b7fbd7b4b4fb482515</b><br>', 'null'],
[165.60267639160156, 55.6112060546875, '<b><a href="/report/fcn.00432c54@f5b8476c36459986b226c45654aeb016">fcn.00432c54</a><br>@f5b8476c36459986b226c45654aeb016</b><br>', 'null'],
[171.71775817871094, 156.6280517578125, '<b><a href="/report/fcn.0042f013@e16f74a2849182d98050864255e902f8">fcn.0042f013</a><br>@e16f74a2849182d98050864255e902f8</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
and esp, 0xfffffff8
push 0xffffffffffffffff
push 0x45a444
mov eax, dword
push eax
sub esp, 0x6c
push esi
push edi
mov eax, dword[0x47e084]
xor eax, esp
push eax
lea eax, [esp+0x78]
mov dword
push dword[0x47f120]
call fcn.0041431a
pop ecx
mov dword[esp+0x38], eax
xor esi, esi
mov dword[esp+0x80], esi
push dword[0x47f120]
push dword[0x47f208]
push esi
call fcn.004403bb
mov eax, dword[ebx+0xcc]
add esp, 0xc
cmp eax, esi
jbe 0x44950b
push eax
push esi
call dword[sym.imp.USER32.dll_KillTimer]
lea edi, [ebx+0x10]
call dword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
push eax
call fcn.00405314
mov esi, eax
mov eax, dword[esi+0x14]
xor ecx, ecx
test eax, eax
jle 0x449534
mov edx, dword[esi+0x10]
cmp dword[edx], edi
je 0x449537
inc ecx
add edx, 4
cmp ecx, eax
jl 0x449528
or ecx, 0xffffffff
cmp ecx, 0xffffffff
je 0x44956b
test ecx, ecx
js 0x44956b
cmp ecx, eax
jge 0x44956b
lea edx, [eax-1]
cmp ecx, edx
je 0x449568
mov edx, dword[esi+0x10]
sub eax, ecx
shl eax, 2
lea ecx, [edx+ecx*4]
lea edx, [eax-4]
push edx
lea edx, [ecx+4]
push edx
push eax
push ecx
call fcn.00404fae
add esp, 0x10
dec dword[esi+0x14]
fld qword[0x478b38]
fst qword[esp+0x1c]
fld qword[0x478b30]
fst qword[esp+0x2c]
fxch st(1)
fstp qword[esp+0x14]
fstp qword[esp+0x24]
fld qword[esp+0x2c]
fadd qword[esp+0x2c]
fsub qword[0x478b40]
fld qword[esp+0x24]
fmul qword[esp+0x2c]
fsubp st(1)
fsub qword[0x478a80]
fld qword[esp+0x24]
fmul qword[esp+0x24]
faddp st(1)
fsub qword[0x478ae0]
fld qword[esp+0x1c]
fmul qword[0x478ad8]
faddp st(1)
fld qword[esp+0x14]
fdiv qword[0x478ad0]
faddp st(1)
fstp qword[esp+0x1c]
fld qword[esp+0x2c]
fld qword[esp+0x2c]
fmul qword[esp+0x2c]
fsubp st(1)
fadd qword[esp+0x1c]
mov eax, dword[ebx+0x54]
sub eax, dword[ebx+0x50]
sar eax, 2
fstp qword[esp+0x2c]
test eax, eax
jne 0x449607
mov ecx, dword[ebx+0x64]
sub ecx, dword[ebx+0x60]
sar ecx, 2
test ecx, ecx
je 0x4498de
mov ecx, dword[ebx+0x64]
sub ecx, dword[ebx+0x60]
sar ecx, 2
push ecx
push eax
push dword[0x47f124]
push 0
call fcn.004403bb
fld qword[0x478b40]
fstp qword[esp+0x3c]
add esp, 0x10
fld qword[esp+0x2c]
lea eax, [esp+0x3c]
fdiv qword[0x478b28]
push eax
lea ecx, [ebx+0x50]
fdiv qword[0x478a30]
fadd qword[esp+0x30]
fld qword[esp+0x30]
fdiv qword[0x478b20]
fmul qword[esp+0x30]
fsubp st(1)
fstp qword[esp+0x30]
fld qword[esp+0x30]
fadd qword[esp+0x30]
fadd qword[esp+0x30]
fld qword[esp+0x30]
fmul qword[0x478b18]
faddp st(1)
fadd qword[esp+0x30]
fadd qword[0x478b10]
fsub qword[esp+0x30]
fsub qword[0x478b08]
fsub qword[esp+0x30]
fld qword[esp+0x30]
fmul qword[0x478b00]
faddp st(1)
fadd qword[esp+0x30]
fadd qword[esp+0x30]
fadd qword[esp+0x30]
fstp qword[esp+0x30]
fld qword[esp+0x30]
fsub qword[esp+0x30]
fadd qword[0x478a60]
fadd qword[esp+0x30]
fld qword[esp+0x30]
fmul qword[esp+0x30]
faddp st(1)
fsub qword[esp+0x30]
fsub qword[0x478af8]
fsub qword[esp+0x30]
fld qword[esp+0x30]
fmul qword[0x478af0]
fsubp st(1)
fsub qword[esp+0x30]
fstp qword[esp+0x30]
fld qword[esp+0x30]
fsub qword[esp+0x30]
fstp qword[esp+0x30]
fld qword[esp+0x30]
fadd qword[esp+0x30]
fsub qword[0x478ae8]
fld qword[esp+0x30]
fmul qword[esp+0x30]
faddp st(1)
fstp qword[esp+0x30]
call fcn.00402f32
mov byte[esp+0x80], 1
mov eax, dword[ebx+0x64]
mov edi, dword[ebx+0x60]
mov dword[esp+0x2c], eax
cmp edi, eax
je 0x44973d
mov eax, edi
lea esi, [esp+0x3c]
call fcn.00402fbf
add edi, 4
cmp edi, dword[esp+0x2c]
jne 0x449729
mov esi, dword[esp+0x3c]
mov edi, dword[esp+0x40]
jmp 0x449752
mov eax, dword[esi]
mov ecx, dword[eax]
push eax
call dword[ecx+0xc]
add esi, 4
cmp esi, edi
jne 0x449747
mov esi, dword[esp+0x3c]
jmp 0x449767
mov eax, dword[esi]
mov ecx, dword[eax]
push eax
call dword[ecx+0x10]
add esi, 4
cmp esi, edi
jne 0x44975c
fld qword[0x478b38]
fst qword[esp+0x1c]
fld qword[0x478b30]
fst qword[esp+0x2c]
fxch st(1)
fstp qword[esp+0x14]
fstp qword[esp+0x24]
fld qword[esp+0x2c]
fadd qword[esp+0x2c]
fsub qword[0x478b40]
fld qword[esp+0x24]
fmul qword[esp+0x2c]
fsubp st(1)
fsub qword[0x478a80]
fld qword[esp+0x24]
fmul qword[esp+0x24]
faddp st(1)
fsub qword[0x478ae0]
fld qword[esp+0x1c]
fmul qword[0x478ad8]
faddp st(1)
fld qword[esp+0x14]
fdiv qword[0x478ad0]
faddp st(1)
fstp qword[esp+0x1c]
fld qword[esp+0x2c]
fld qword[esp+0x2c]
fmul qword[esp+0x2c]
fsubp st(1)
fadd qword[esp+0x1c]
mov ecx, dword[ebx+0x64]
mov eax, dword[ebx+0x60]
fstp qword[esp+0x2c]
cmp eax, ecx
je 0x44981f
push ecx
call fcn.004047ce
mov esi, dword[ebx+0x64]
mov edi, eax
pop ecx
mov dword[esp+0x2c], edi
jmp 0x449814
mov eax, dword[edi]
test eax, eax
je 0x449811
mov ecx, dword[eax]
push eax
call dword[ecx+8]
add edi, 4
cmp edi, esi
jne 0x449805
mov eax, dword[esp+0x2c]
mov dword[ebx+0x64], eax
fld qword[0x478b88]
lea esi, [esp+0x3c]
fstp qword[esp+0x24]
fld qword[0x478b80]
fstp qword[esp+0x2c]
fld qword[esp+0x2c]
fld qword[0x478b90]
fmul st(1), st(0)
fld qword[esp+0x24]
faddp st(2)
fxch st(1)
fstp qword[esp+0x2c]
fld qword[esp+0x2c]
fsub qword[0x478b78]
fstp qword[esp+0x24]
fld qword[esp+0x2c]
fsub qword[0x478b70]
fsub qword[esp+0x24]
faddp st(1)
fsub qword[esp+0x2c]
fadd qword[0x478b68]
fadd qword[esp+0x2c]
fstp qword[esp+0x2c]
fld qword[esp+0x24]
fdiv qword[0x478a90]
fstp qword[esp+0x2c]
fld qword[esp+0x2c]
fmul qword[esp+0x24]
fadd qword[esp+0x24]
fstp qword[esp+0x24]
fld qword[esp+0x2c]
fdiv qword[0x478b60]
fadd qword[esp+0x24]
fsub qword[esp+0x24]
fsub qword[esp+0x2c]
fsub qword[0x478b58]
fadd qword[esp+0x2c]
fadd qword[0x478b50]
fsub qword[esp+0x2c]
fadd qword[0x478b48]
fstp qword[esp+0x2c]
mov byte[esp+0x80], 0
call fcn.00403ff4
mov eax, dword[ebx+0xa8]
test eax, eax
je 0x4498f5
mov ecx, dword[eax]
push eax
call dword[ecx+8]
and dword[ebx+0xa8], 0
lea eax, [ebx+0xac]
xor ecx, ecx
cmp dword[eax], ecx
je 0x449908
push ecx
push ecx
call fcn.00404f1c
mov esi, dword[ebx+0x20]
test esi, esi
je 0x449914
call fcn.0043339e
xor eax, eax
inc eax
mov dword[esp+0xc], eax
mov dword[esp+0x2c], 6
mov dword[esp+0x24], 0x47
mov dword[esp+0x14], 0
mov dword[esp+0x1c], eax
mov dword[esp+0x10], 0x52
mov eax, dword[esp+0x14]
mov ecx, dword[esp+0x2c]
cmp ecx, eax
jne 0x4499a6
add dword[esp+0x24], 3
mov eax, dword[esp+0x1c]
mov ecx, dword[esp+0x14]
imul eax, ecx
mov ecx, dword[esp+0x10]
imul ecx, ecx, 0xffffffa2
sub ecx, eax
mov eax, dword[esp+0x10]
lea eax, [ecx+eax-0x17]
add eax, dword[esp+0x14]
push 0x25
add eax, dword[esp+0x30]
pop ecx
add eax, dword[esp+0xc]
add eax, dword[esp+0xc]
mov dword[esp+0xc], eax
mov eax, dword[esp+0x1c]
sub ecx, eax
mov eax, dword[esp+0xc]
sub ecx, eax
add ecx, dword[esp+0x10]
mov dword[esp+0x10], ecx
mov eax, dword[esp+0x1c]
mov ecx, dword[esp+0x14]
imul eax, ecx
mov dword[esp+0x24], eax
mov eax, dword[ebx+0x20]
test eax, eax
je 0x4499b7
mov ecx, dword[eax]
push eax
call dword[ecx+8]
and dword[ebx+0x20], 0
mov eax, dword[ebx+0xe0]
test eax, eax
je 0x449a26
push eax
push dword[0x47f128]
push 0
call fcn.004403bb
mov eax, dword[ebx+0xdc]
mov ecx, dword[eax]
add esp, 0xc
mov dword[esp+0x34], ecx
cmp ecx, eax
je 0x449a1b
mov esi, dword[ecx+0x10]
test esi, esi
je 0x449a06
lea eax, [esi+8]
push eax
call dword[sym.imp.OLEAUT32.dll_VariantCopy]
mov eax, dword[esi]
test eax, eax
je 0x4499ff
mov ecx, dword[eax]
push eax
call dword[ecx+8]
push esi
call fcn.004121c0
pop ecx
lea eax, [esp+0x34]
call fcn.004040e6
mov ecx, dword[esp+0x34]
cmp ecx, dword[ebx+0xdc]
jne 0x4499e2
lea edi, [ebx+0xd8]
call fcn.004032b7
push dword[ebx+0x2c]
and dword[0x480ff4], 0
call dword[sym.imp.USER32.dll_DestroyWindow]
push 0
lea eax, [esp+0x50]
call fcn.00444234
mov eax, dword[esp+0x50]
mov dword[ebx+0x2c], eax
mov eax, dword[esp+0x64]
lea edi, [ebx+0x30]
lea esi, [esp+0x54]
movsd dword
mov dword[ebx+0x40], eax
mov eax, dword[esp+0x68]
movsd dword
mov dword[ebx+0x44], eax
mov eax, dword[esp+0x6c]
mov dword[ebx+0x48], eax
mov eax, dword[esp+0x70]
movsd dword
mov dword[ebx+0x4c], eax
lea eax, [esp+0x4c]
movsd dword
call fcn.0044425e
mov esi, dword[ebx+0x24]
test esi, esi
je 0x449a8c
push esi
call fcn.0043f6a4
push esi
call fcn.004121c0
pop ecx
and dword[ebx+0x24], 0
fld qword[0x478b38]
fst qword[esp+0x1c]
lea esi, [esp+0x38]
fld qword[0x478b30]
fst qword[esp+0x2c]
fxch st(1)
fstp qword[esp+0x14]
fstp qword[esp+0x24]
fld qword[esp+0x2c]
fadd qword[esp+0x2c]
fsub qword[0x478b40]
fld qword[esp+0x24]
fmul qword[esp+0x2c]
fsubp st(1)
fsub qword[0x478a80]
fld qword[esp+0x24]
fmul qword[esp+0x24]
faddp st(1)
fsub qword[0x478ae0]
fld qword[esp+0x1c]
fmul qword[0x478ad8]
faddp st(1)
fld qword[esp+0x14]
fdiv qword[0x478ad0]
faddp st(1)
fstp qword[esp+0x1c]
fld qword[esp+0x2c]
fld qword[esp+0x2c]
fmul qword[esp+0x2c]
fsubp st(1)
fadd qword[esp+0x1c]
fstp qword[esp+0x2c]
or dword[esp+0x80], 0xffffffff
call fcn.004057de
mov ecx, dword[esp+0x78]
mov dword
pop ecx
pop edi
pop esi
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/f5b8476c36459986b226c45654aeb016