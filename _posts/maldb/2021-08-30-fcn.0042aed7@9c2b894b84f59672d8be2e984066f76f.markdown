---
layout: post
title:  "fcn.0042aed7 @ 9c2b894b84f59672d8be2e984066f76f"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0042aed7
- **Origin (md5):** 9c2b894b84f59672d8be2e984066f76f
- **VirusTotal:** [virustotal.com/gui/file/9c2b894b84f59672d8be2e984066f76f][virustotal_ref]

# Code Tags
<span class="tag" id="SYSTEM-INFO">SYSTEM-INFO</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.0042aed7@9c2b894b84f59672d8be2e984066f76f">fcn.0042aed7</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push 0x474
mov eax, 0x576847
call fcn.00553908
mov esi, ecx
push 0
lea ecx, [ebp-0x480]
call fcn.00411a63
and dword[ebp-4], 0
push 0x58
push dword[ebp-0x478]
call dword[sym.imp.GDI32.dll_GetDeviceCaps]
mov dword[ebp-0x460], eax
fild dword[ebp-0x460]
fstp dword[ebp-0x460]
fld dword[ebp-0x460]
fdiv qword[0x587790]
fst qword[esi+0x1e0]
fld1
fcom st(1)
fnstsw ax
test ah, 5
jp off.b120
fld qword[0x587780]
fcomp st(2)
fnstsw ax
fstp st(1)
test ah, 0x41
jne off.b122
fstp qword[esi+0x1e0]
jmp off.b124
fstp st(1)
fstp st(0)
lea edi, [esi+0x11c]
test edi, edi
je off.b154
cmp dword[edi+4], 0
je off.b154
mov ecx, edi
call fcn.004124bc
push eax
call dword[sym.imp.GDI32.dll_DeleteObject]
lea eax, [esi+0x124]
test eax, eax
je off.b184
cmp dword[eax+4], 0
je off.b184
mov ecx, eax
call fcn.004124bc
push eax
call dword[sym.imp.GDI32.dll_DeleteObject]
lea eax, [esi+0x12c]
test eax, eax
je off.b214
cmp dword[eax+4], 0
je off.b214
mov ecx, eax
call fcn.004124bc
push eax
call dword[sym.imp.GDI32.dll_DeleteObject]
lea eax, [esi+0x134]
test eax, eax
je off.b244
cmp dword[eax+4], 0
je off.b244
mov ecx, eax
call fcn.004124bc
push eax
call dword[sym.imp.GDI32.dll_DeleteObject]
lea eax, [esi+0x13c]
test eax, eax
je off.b274
cmp dword[eax+4], 0
je off.b274
mov ecx, eax
call fcn.004124bc
push eax
call dword[sym.imp.GDI32.dll_DeleteObject]
lea eax, [esi+0x144]
test eax, eax
je off.b304
cmp dword[eax+4], 0
je off.b304
mov ecx, eax
call fcn.004124bc
push eax
call dword[sym.imp.GDI32.dll_DeleteObject]
lea eax, [esi+0x14c]
test eax, eax
je off.b334
cmp dword[eax+4], 0
je off.b334
mov ecx, eax
call fcn.004124bc
push eax
call dword[sym.imp.GDI32.dll_DeleteObject]
lea eax, [esi+0x154]
test eax, eax
je off.b364
cmp dword[eax+4], 0
je off.b364
mov ecx, eax
call fcn.004124bc
push eax
call dword[sym.imp.GDI32.dll_DeleteObject]
lea eax, [esi+0x164]
test eax, eax
je off.b394
cmp dword[eax+4], 0
je off.b394
mov ecx, eax
call fcn.004124bc
push eax
call dword[sym.imp.GDI32.dll_DeleteObject]
lea ebx, [esi+0x15c]
test ebx, ebx
je off.b424
cmp dword[ebx+4], 0
je off.b424
mov ecx, ebx
call fcn.004124bc
push eax
call dword[sym.imp.GDI32.dll_DeleteObject]
lea eax, [ebp-0x264]
mov dword[ebp-0x264], 0x1f8
push eax
mov ecx, esi
call fcn.0042a8fd
push 0x5c
lea eax, [ebp-0x6c]
push 0
push eax
call fcn.005576f0
add esp, 0xc
push 0
push 0
push dword[ebp-0x47c]
call dword[sym.imp.GDI32.dll_GetTextCharsetInfo]
mov byte[ebp-0x55], al
mov eax, dword[ebp-0x174]
mov dword[ebp-0x5c], eax
mov al, byte[ebp-0x170]
mov byte[ebp-0x58], al
mov eax, dword[ebp-0x184]
cdq
xor eax, edx
sub eax, edx
cmp eax, 0xc
jg off.b522
push 0xb
pop eax
jmp off.b529
cmp dword[esi+8], 0
jne off.b529
dec eax
cmp dword[ebp-0x184], 0
jge off.b540
neg eax
mov dword[ebp-0x6c], eax
lea eax, [ebp-0x168]
push eax
lea eax, [ebp-0x50]
push eax
call dword[sym.imp.KERNEL32.dll_lstrcpyW]
cmp dword[esi+4], 0
jne off.b674
cmp byte[ebp-0x16d], 2
ja off.b674
push 0x5876a0
push 0x42a781
push 0
push dword[ebp-0x47c]
call dword[sym.imp.GDI32.dll_EnumFontFamiliesW]
test eax, eax
jne off.b624
push 0x5876a0
lea eax, [ebp-0x50]
push eax
call dword[sym.imp.KERNEL32.dll_lstrcpyW]
mov byte[ebp-0x52], 5
jmp off.b674
push str.Tahoma
push 0x42a781
push 0
push dword[ebp-0x47c]
call dword[sym.imp.GDI32.dll_EnumFontFamiliesW]
test eax, eax
lea eax, [ebp-0x50]
jne off.b662
push str.Tahoma
jmp off.b667
push str.MS_Sans_Serif
push eax
call dword[sym.imp.KERNEL32.dll_lstrcpyW]
lea eax, [ebp-0x6c]
push eax
call dword[sym.imp.GDI32.dll_CreateFontIndirectW]
push eax
mov ecx, edi
call fcn.004122f0
mov edi, dword[ebp-0x6c]
push edi
call fcn.0055e1e6
mov dword[ebp-0x460], eax
fild dword[ebp-0x460]
pop ecx
fstp qword[ebp-0x464]
fld qword[ebp-0x464]
fld1
faddp st(1)
fadd st(0), st(0)
fdiv qword[0x587788]
call fcn.00553a60
mov dword[ebp-0x6c], eax
test edi, edi
jns off.b755
neg eax
mov dword[ebp-0x6c], eax
lea eax, [ebp-0x6c]
push eax
call dword[sym.imp.GDI32.dll_CreateFontIndirectW]
push eax
mov ecx, ebx
call fcn.004122f0
lea eax, [ebp-0x45c]
mov dword[ebp-0x6c], edi
push eax
mov ecx, esi
mov dword[ebp-0x45c], 0x1f8
call fcn.0042a8fd
mov al, byte[ebp-0x30c]
mov byte[ebp-0x58], al
mov eax, dword[ebp-0x310]
mov dword[ebp-0x5c], eax
lea eax, [ebp-0x6c]
push eax
call dword[sym.imp.GDI32.dll_CreateFontIndirectW]
push eax
lea ecx, [esi+0x124]
call fcn.004122f0
mov al, byte[ebp-0x170]
mov byte[ebp-0x58], al
mov eax, dword[ebp-0x174]
mov dword[ebp-0x5c], eax
lea eax, [ebp-0x6c]
push eax
mov byte[ebp-0x57], 1
call dword[sym.imp.GDI32.dll_CreateFontIndirectW]
push eax
lea ecx, [esi+0x13c]
call fcn.004122f0
lea eax, [ebp-0x6c]
mov byte[ebp-0x57], 0
push eax
mov dword[ebp-0x5c], 0x2bc
call dword[sym.imp.GDI32.dll_CreateFontIndirectW]
push eax
lea ecx, [esi+0x12c]
call fcn.004122f0
mov bl, byte[ebp-0x55]
and dword[ebp-0x5c], 0
push 0x48
mov byte[ebp-0x55], 2
call dword[sym.imp.USER32.dll_GetSystemMetrics]
dec eax
mov dword[ebp-0x6c], eax
lea eax, [ebp-0x50]
push str.Marlett
push eax
call dword[sym.imp.KERNEL32.dll_lstrcpyW]
lea eax, [ebp-0x6c]
push eax
call dword[sym.imp.GDI32.dll_CreateFontIndirectW]
push eax
lea ecx, [esi+0x164]
call fcn.004122f0
and dword[ebp-0x468], 0
mov byte[ebp-0x55], bl
mov dword[ebp-method.CFont.virtual_0], 0x58768c
push 0x11
mov byte[ebp-4], 1
call dword[sym.imp.GDI32.dll_GetStockObject]
mov dword[ebp-0x468], eax
test eax, eax
je off.b1140
lea ecx, [ebp-0x6c]
push ecx
push 0x5c
push eax
call dword[sym.imp.GDI32.dll_GetObjectW]
test eax, eax
je off.b1140
mov eax, dword[ebp-0x184]
mov edi, 0x384
mov dword[ebp-0x6c], eax
mov eax, dword[ebp-0x174]
mov dword[ebp-0x5c], eax
mov al, byte[ebp-0x170]
mov byte[ebp-0x58], al
lea eax, [ebp-0x50]
push str.Arial
push eax
mov dword[ebp-0x60], edi
mov dword[ebp-0x64], 0xa8c
call dword[sym.imp.KERNEL32.dll_lstrcpyW]
lea eax, [ebp-0x6c]
push eax
call dword[sym.imp.GDI32.dll_CreateFontIndirectW]
push eax
lea ecx, [esi+0x14c]
call fcn.004122f0
lea eax, [ebp-0x6c]
mov dword[ebp-0x64], edi
push eax
call dword[sym.imp.GDI32.dll_CreateFontIndirectW]
push eax
lea ecx, [esi+0x154]
call fcn.004122f0
push 0x11
call dword[sym.imp.GDI32.dll_GetStockObject]
push eax
call fcn.0041253e
lea ecx, [ebp-0x6c]
push ecx
push 0x5c
push dword[eax+4]
call dword[sym.imp.GDI32.dll_GetObjectW]
lea eax, [ebp-0x6c]
mov byte[ebp-0x57], 1
push eax
call dword[sym.imp.GDI32.dll_CreateFontIndirectW]
push eax
lea ecx, [esi+0x144]
call fcn.004122f0
lea eax, [ebp-0x6c]
mov byte[ebp-0x57], 0
push eax
mov dword[ebp-0x5c], 0x2bc
call dword[sym.imp.GDI32.dll_CreateFontIndirectW]
push eax
lea ecx, [esi+0x134]
call fcn.004122f0
mov ecx, esi
call fcn.0042b82d
mov edi, dword[0x5dfe8c]
jmp off.b1289
mov ebx, edi
test edi, edi
je off.b1331
mov ebx, dword[ebx+8]
mov edi, dword[edi]
test ebx, ebx
je off.b1331
push dword[ebx+0x20]
call fcn.00415cde
test eax, eax
je off.b1289
mov eax, dword[ebx]
mov esi, dword[eax+0x3a8]
mov ecx, esi
call fcn.00553897
mov ecx, ebx
call esi
test edi, edi
jne off.b1243
lea ecx, [ebp-0x46c]
mov dword[ebp-method.CFont.virtual_0], 0x58768c
call fcn.00404d00
lea ecx, [ebp-0x480]
call fcn.00411bb2
call fcn.005538b2
ret
call fcn.0040f785
int3

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/9c2b894b84f59672d8be2e984066f76f