---
layout: post
title:  "fcn.00468620 @ 4fe6510221c33bf023f6abed461fc13f"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00468620
- **Origin (md5):** 4fe6510221c33bf023f6abed461fc13f
- **VirusTotal:** [virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Behaviour Tags
<span class="bhv-tag" id="SCREENSHOTS_FOREGROUND_WINDOW">SCREENSHOTS_FOREGROUND_WINDOW / 0.11015531935962142</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.00468620@4fe6510221c33bf023f6abed461fc13f">fcn.00468620</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>sub esp, 0x38<br>push ebx<br>push ebp<br>mov ebp, dword[esp+0x44]<br>mov eax, dword[ebp]<br>push esi<br>mov esi, dword[sym.imp.USER32.dll_SendMessageW]<br>push 0<br>push 0<br>push 0x130b<br>push eax<br>call esi<br>mov dword[esp+0x1c], eax<br>cmp eax, 0xffffffff<br>je 0x468908<br>mov ecx, dword[ebp]<br>push 0xfffffffffffffff0<br>push ecx<br>call dword[sym.imp.USER32.dll_GetWindowLongW]<br>mov edx, eax<br>shr eax, 0x1b<br>shr edx, 0x1c<br>and al, 1<br>not dl<br>mov byte[esp+0x11], al<br>mov eax, dword[edi+4]<br>and dl, 1<br>push eax<br>mov byte[esp+0x14], dl<br>call dword[sym.imp.USER32.dll_IsWindowVisible]<br>test eax, eax<br>setne bl<br>test bl, bl<br>je 0x468695<br>mov ecx, dword[edi+4]<br>push ecx<br>call dword[sym.imp.USER32.dll_IsIconic]<br>mov byte[esp+0xf], 1<br>test eax, eax<br>je 0x46869a<br>mov byte[esp+0xf], 0<br>cmp byte[esp+0x10], 0<br>jne 0x4686dc<br>cmp byte[esp+0x11], 0<br>jne 0x4686dc<br>cmp byte[esp+0x4c], 0<br>je 0x4686b6<br>mov byte[esp+0x4c], 0<br>jmp 0x4686e1<br>test bl, bl<br>je 0x4686dc<br>call dword[sym.imp.USER32.dll_GetFocus]<br>test eax, eax<br>je 0x4686dc<br>mov ebx, edi<br>call fcn.004012c0<br>test eax, eax<br>je 0x4686dc<br>mov dl, byte[eax+6]<br>mov byte[esp+0x4c], 0<br>cmp dl, byte[ebp+7]<br>je 0x4686e1<br>mov byte[esp+0x4c], 1<br>mov ecx, dword[ebp]<br>lea eax, [esp+0x30]<br>push eax<br>push ecx<br>call dword[sym.imp.USER32.dll_GetWindowRect]<br>mov bl, byte[esp+0xf]<br>test bl, bl<br>je 0x468704<br>mov edx, dword[edi+4]<br>push 0<br>push 0<br>push 0xb<br>push edx<br>call esi<br>cmp dword[edi+0x10], 0<br>mov byte[esp+0x12], 0<br>mov dword[esp+0x14], 0<br>jbe 0x4688a1<br>mov ebp, dword[sym.imp.USER32.dll_ShowWindow]<br>xor esi, esi<br>mov dword[esp+0x18], esi<br>jmp 0x468730<br>add esi, dword[edi+0x18]<br>mov edx, dword[esp+0x48]<br>mov cl, byte[esi+6]<br>cmp cl, byte[edx+7]<br>jne case.0x468861.1<br>movzx eax, byte[esi+7]<br>cmp eax, dword[esp+0x1c]<br>sete al<br>cmp byte[esp+0x10], 0<br>mov byte[esp+0x13], al<br>jne 0x468768<br>test al, al<br>je 0x468768<br>test byte[esi+5], 8<br>mov byte[esp+0xd], 1<br>je 0x46876d<br>mov byte[esp+0xd], 0<br>cmp byte[esp+0x11], 0<br>jne 0x468783<br>test al, al<br>je 0x468783<br>test byte[esi+5], 0x10<br>mov byte[esp+0xe], 1<br>je 0x468788<br>mov byte[esp+0xe], 0<br>mov ecx, dword[esi]<br>push 0xfffffffffffffff0<br>push ecx<br>call dword[sym.imp.USER32.dll_GetWindowLongW]<br>mov ecx, eax<br>shr eax, 0x1b<br>not al<br>and al, 1<br>shr ecx, 0x1c<br>mov bl, al<br>xor al, al<br>and cl, 1<br>cmp byte[esp+0xd], al<br>je 0x4687b7<br>test cl, cl<br>jne 0x4687c4<br>mov eax, dword[esi]<br>push 4<br>push eax<br>jmp 0x4687c0<br>test cl, cl<br>je 0x4687c4<br>mov ecx, dword[esi]<br>push 0<br>push ecx<br>call ebp<br>mov al, 1<br>cmp byte[esp+0xe], 0<br>je 0x4687dc<br>test bl, bl<br>jne 0x4687ed<br>mov edx, dword[esi]<br>push 1<br>push edx<br>call dword[sym.imp.USER32.dll_EnableWindow]<br>jmp 0x4687f1<br>test bl, bl<br>je 0x4687ed<br>mov eax, dword[esi]<br>push 0<br>push eax<br>call dword[sym.imp.USER32.dll_EnableWindow]<br>jmp 0x4687f1<br>test al, al<br>je 0x468834<br>mov edx, dword[esi]<br>lea ecx, [esp+0x20]<br>push ecx<br>push edx<br>call dword[sym.imp.USER32.dll_GetWindowRect]<br>mov eax, dword[esp+0x24]<br>mov ecx, dword[esp+0x20]<br>mov ebx, dword[sym.imp.USER32.dll_PtInRect]<br>push eax<br>push ecx<br>lea edx, [esp+0x38]<br>push edx<br>call ebx<br>test eax, eax<br>je 0x46882f<br>mov eax, dword[esp+0x2c]<br>mov ecx, dword[esp+0x28]<br>push eax<br>push ecx<br>lea edx, [esp+0x38]<br>push edx<br>call ebx<br>test eax, eax<br>jne 0x468834<br>mov byte[esp+0x12], 1<br>cmp byte[esp+0x4c], 0<br>jne case.0x468861.1<br>cmp byte[esp+0x13], 0<br>je case.0x468861.1<br>cmp byte[esp+0xd], 0<br>je case.0x468861.1<br>cmp byte[esp+0xe], 0<br>je case.0x468861.1<br>movzx eax, byte[esi+4]<br>dec eax<br>cmp eax, 0x11<br>ja case.0x468861.4<br>movzx eax, byte[eax+0x46891c]<br>jmp dword[eax*4+0x468914]<br>mov ecx, dword[esi]<br>push ecx<br>call dword[sym.imp.USER32.dll_SetFocus]<br>mov byte[esp+0x4c], 1<br>mov eax, dword[esp+0x14]<br>mov esi, dword[esp+0x18]<br>inc eax<br>add esi, 0x14<br>mov dword[esp+0x14], eax<br>mov dword[esp+0x18], esi<br>cmp eax, dword[edi+0x10]<br>jb 0x468730<br>mov esi, dword[sym.imp.USER32.dll_SendMessageW]<br>mov ebp, dword[esp+0x48]<br>mov bl, byte[esp+0xf]<br>test bl, bl<br>je 0x4688b1<br>mov edx, dword[edi+4]<br>push 0<br>push 1<br>push 0xb<br>push edx<br>call esi<br>cmp byte[esp+0x4c], 0<br>jne 0x4688c2<br>mov eax, dword[ebp]<br>push eax<br>call dword[sym.imp.USER32.dll_SetFocus]<br>test bl, bl<br>je 0x468908<br>cmp byte[esp+0x12], 0<br>je 0x4688e4<br>mov ecx, dword[edi+4]<br>push 1<br>push 0<br>push ecx<br>call dword[sym.imp.USER32.dll_InvalidateRect]<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0x38<br>ret 8<br>mov eax, dword[edi+4]<br>push 2<br>lea edx, [esp+0x34]<br>push edx<br>push eax<br>push 0<br>call dword[sym.imp.USER32.dll_MapWindowPoints]<br>mov edx, dword[edi+4]<br>push 1<br>lea ecx, [esp+0x34]<br>push ecx<br>push edx<br>call dword[sym.imp.USER32.dll_InvalidateRect]<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0x38<br>ret 8<br><eoc> ', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

sub esp, 0x38
push ebx
push ebp
mov ebp, dword[esp+0x44]
mov eax, dword[ebp]
push esi
mov esi, dword[sym.imp.USER32.dll_SendMessageW]
push 0
push 0
push 0x130b
push eax
call esi
mov dword[esp+0x1c], eax
cmp eax, 0xffffffff
je 0x468908
mov ecx, dword[ebp]
push 0xfffffffffffffff0
push ecx
call dword[sym.imp.USER32.dll_GetWindowLongW]
mov edx, eax
shr eax, 0x1b
shr edx, 0x1c
and al, 1
not dl
mov byte[esp+0x11], al
mov eax, dword[edi+4]
and dl, 1
push eax
mov byte[esp+0x14], dl
call dword[sym.imp.USER32.dll_IsWindowVisible]
test eax, eax
setne bl
test bl, bl
je 0x468695
mov ecx, dword[edi+4]
push ecx
call dword[sym.imp.USER32.dll_IsIconic]
mov byte[esp+0xf], 1
test eax, eax
je 0x46869a
mov byte[esp+0xf], 0
cmp byte[esp+0x10], 0
jne 0x4686dc
cmp byte[esp+0x11], 0
jne 0x4686dc
cmp byte[esp+0x4c], 0
je 0x4686b6
mov byte[esp+0x4c], 0
jmp 0x4686e1
test bl, bl
je 0x4686dc
call dword[sym.imp.USER32.dll_GetFocus]
test eax, eax
je 0x4686dc
mov ebx, edi
call fcn.004012c0
test eax, eax
je 0x4686dc
mov dl, byte[eax+6]
mov byte[esp+0x4c], 0
cmp dl, byte[ebp+7]
je 0x4686e1
mov byte[esp+0x4c], 1
mov ecx, dword[ebp]
lea eax, [esp+0x30]
push eax
push ecx
call dword[sym.imp.USER32.dll_GetWindowRect]
mov bl, byte[esp+0xf]
test bl, bl
je 0x468704
mov edx, dword[edi+4]
push 0
push 0
push 0xb
push edx
call esi
cmp dword[edi+0x10], 0
mov byte[esp+0x12], 0
mov dword[esp+0x14], 0
jbe 0x4688a1
mov ebp, dword[sym.imp.USER32.dll_ShowWindow]
xor esi, esi
mov dword[esp+0x18], esi
jmp 0x468730
add esi, dword[edi+0x18]
mov edx, dword[esp+0x48]
mov cl, byte[esi+6]
cmp cl, byte[edx+7]
jne case.0x468861.1
movzx eax, byte[esi+7]
cmp eax, dword[esp+0x1c]
sete al
cmp byte[esp+0x10], 0
mov byte[esp+0x13], al
jne 0x468768
test al, al
je 0x468768
test byte[esi+5], 8
mov byte[esp+0xd], 1
je 0x46876d
mov byte[esp+0xd], 0
cmp byte[esp+0x11], 0
jne 0x468783
test al, al
je 0x468783
test byte[esi+5], 0x10
mov byte[esp+0xe], 1
je 0x468788
mov byte[esp+0xe], 0
mov ecx, dword[esi]
push 0xfffffffffffffff0
push ecx
call dword[sym.imp.USER32.dll_GetWindowLongW]
mov ecx, eax
shr eax, 0x1b
not al
and al, 1
shr ecx, 0x1c
mov bl, al
xor al, al
and cl, 1
cmp byte[esp+0xd], al
je 0x4687b7
test cl, cl
jne 0x4687c4
mov eax, dword[esi]
push 4
push eax
jmp 0x4687c0
test cl, cl
je 0x4687c4
mov ecx, dword[esi]
push 0
push ecx
call ebp
mov al, 1
cmp byte[esp+0xe], 0
je 0x4687dc
test bl, bl
jne 0x4687ed
mov edx, dword[esi]
push 1
push edx
call dword[sym.imp.USER32.dll_EnableWindow]
jmp 0x4687f1
test bl, bl
je 0x4687ed
mov eax, dword[esi]
push 0
push eax
call dword[sym.imp.USER32.dll_EnableWindow]
jmp 0x4687f1
test al, al
je 0x468834
mov edx, dword[esi]
lea ecx, [esp+0x20]
push ecx
push edx
call dword[sym.imp.USER32.dll_GetWindowRect]
mov eax, dword[esp+0x24]
mov ecx, dword[esp+0x20]
mov ebx, dword[sym.imp.USER32.dll_PtInRect]
push eax
push ecx
lea edx, [esp+0x38]
push edx
call ebx
test eax, eax
je 0x46882f
mov eax, dword[esp+0x2c]
mov ecx, dword[esp+0x28]
push eax
push ecx
lea edx, [esp+0x38]
push edx
call ebx
test eax, eax
jne 0x468834
mov byte[esp+0x12], 1
cmp byte[esp+0x4c], 0
jne case.0x468861.1
cmp byte[esp+0x13], 0
je case.0x468861.1
cmp byte[esp+0xd], 0
je case.0x468861.1
cmp byte[esp+0xe], 0
je case.0x468861.1
movzx eax, byte[esi+4]
dec eax
cmp eax, 0x11
ja case.0x468861.4
movzx eax, byte[eax+0x46891c]
jmp dword[eax*4+0x468914]
mov ecx, dword[esi]
push ecx
call dword[sym.imp.USER32.dll_SetFocus]
mov byte[esp+0x4c], 1
mov eax, dword[esp+0x14]
mov esi, dword[esp+0x18]
inc eax
add esi, 0x14
mov dword[esp+0x14], eax
mov dword[esp+0x18], esi
cmp eax, dword[edi+0x10]
jb 0x468730
mov esi, dword[sym.imp.USER32.dll_SendMessageW]
mov ebp, dword[esp+0x48]
mov bl, byte[esp+0xf]
test bl, bl
je 0x4688b1
mov edx, dword[edi+4]
push 0
push 1
push 0xb
push edx
call esi
cmp byte[esp+0x4c], 0
jne 0x4688c2
mov eax, dword[ebp]
push eax
call dword[sym.imp.USER32.dll_SetFocus]
test bl, bl
je 0x468908
cmp byte[esp+0x12], 0
je 0x4688e4
mov ecx, dword[edi+4]
push 1
push 0
push ecx
call dword[sym.imp.USER32.dll_InvalidateRect]
pop esi
pop ebp
pop ebx
add esp, 0x38
ret 8
mov eax, dword[edi+4]
push 2
lea edx, [esp+0x34]
push edx
push eax
push 0
call dword[sym.imp.USER32.dll_MapWindowPoints]
mov edx, dword[edi+4]
push 1
lea ecx, [esp+0x34]
push ecx
push edx
call dword[sym.imp.USER32.dll_InvalidateRect]
pop esi
pop ebp
pop ebx
add esp, 0x38
ret 8

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f