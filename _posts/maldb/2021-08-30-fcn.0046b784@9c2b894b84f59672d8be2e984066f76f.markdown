---
layout: post
title:  "fcn.0046b784 @ 9c2b894b84f59672d8be2e984066f76f"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0046b784
- **Origin (md5):** 9c2b894b84f59672d8be2e984066f76f
- **VirusTotal:** [virustotal.com/gui/file/9c2b894b84f59672d8be2e984066f76f][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.0046b784@9c2b894b84f59672d8be2e984066f76f">fcn.0046b784</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push 0x74
mov eax, 0x578b50
call fcn.005538d4
mov edi, ecx
mov dword[ebp-0x7c], edi
mov ebx, dword[ebp+0x18]
mov esi, dword[ebp+0x24]
mov eax, dword[ebp+0x28]
mov dword[ebp-0x44], esi
mov dword[ebp-0x30], eax
test ebx, ebx
je off.b1170
lea eax, [ebp+8]
push eax
call dword[sym.imp.USER32.dll_IsRectEmpty]
test eax, eax
jne off.b1170
mov eax, dword[ebp+0x10]
xor edx, edx
mov ecx, dword[ebp+8]
sub eax, ecx
mov dword[ebp-0x38], eax
mov eax, dword[ebp+0x14]
sub eax, dword[ebp+0xc]
mov dword[ebp-0x40], eax
mov eax, dword[ebp+0x30]
test eax, eax
sete dl
mov dword[ebp-0x3c], edx
mov edx, dword[ebp-0x30]
test edx, edx
je off.b200
mov edx, dword[edx+4]
test edx, edx
je off.b200
test esi, esi
je off.b191
cmp dword[esi+4], 0
je off.b191
test eax, eax
jne off.b123
sub ecx, ebx
jmp off.b126
mov ecx, dword[ebp+0x10]
mov eax, dword[ebp-0x40]
xor esi, esi
push esi
push esi
push dword[ebp-0x30]
add eax, ebx
push eax
push ebx
push dword[ebp+0xc]
push ecx
mov ecx, dword[edi+4]
call fcn.0046bc21
mov ecx, dword[ebp+8]
cmp dword[ebp+0x30], esi
jne off.b162
sub ecx, ebx
mov eax, dword[ebp-0x38]
push esi
push esi
push dword[ebp-0x44]
add eax, ebx
push ebx
push eax
push dword[ebp+0x14]
push ecx
mov ecx, dword[edi+4]
call fcn.0046bc21
jmp off.b1170
test edx, edx
je off.b200
call fcn.0040f785
test esi, esi
je off.b210
cmp dword[esi+4], 0
jne off.b195
lea ecx, [ebp-0x5c]
call fcn.004119b2
mov eax, dword[edi+4]
xor esi, esi
mov dword[ebp-4], esi
test eax, eax
jne off.b234
mov eax, esi
jmp off.b237
mov eax, dword[eax+4]
push eax
call dword[sym.imp.GDI32.dll_CreateCompatibleDC]
push eax
lea ecx, [ebp-0x5c]
call fcn.004122af
test eax, eax
jne off.b272
lea ecx, [ebp-0x5c]
call fcn.00411b08
xor eax, eax
jmp off.b1173
mov dword[ebp-0x48], esi
mov dword[ebp-0x4c], 0x585684
mov ecx, dword[ebp-0x40]
mov eax, dword[edi+4]
add ecx, ebx
mov dword[ebp-0x24], ecx
push dword[ebp-0x24]
mov ecx, dword[ebp-0x38]
add ecx, ebx
mov byte[ebp-4], 1
push ecx
push dword[eax+4]
mov dword[ebp-0x34], ecx
call dword[sym.imp.GDI32.dll_CreateCompatibleBitmap]
push eax
lea ecx, [ebp-0x4c]
call fcn.004122f0
test eax, eax
jne off.b348
lea ecx, [ebp-0x4c]
mov dword[ebp-0x4c], 0x585684
call fcn.00404d00
jmp off.b257
push dword[ebp-0x48]
push dword[ebp-0x58]
call fcn.00412959
mov dword[ebp-0x80], eax
test eax, eax
je off.b195
mov eax, dword[ebp-0x24]
mov edx, dword[ebp-0x34]
mov dword[ebp-0x70], eax
lea eax, [ebp-0x28]
push eax
lea eax, [ebp-0x74]
mov dword[ebp-0x74], edx
push eax
call fcn.00469c5b
mov dword[ebp-0x70], eax
test eax, eax
je off.b331
cmp dword[ebp-0x28], 0
je off.b331
push eax
push dword[ebp-0x58]
call dword[sym.imp.GDI32.dll_SelectObject]
cmp dword[ebp+0x30], 0
mov eax, dword[ebp+8]
jne off.b429
sub eax, ebx
mov ecx, dword[edi+4]
test ecx, ecx
jne off.b440
mov ecx, esi
jmp off.b443
mov ecx, dword[ecx+4]
push 0xcc0020
push dword[ebp+0xc]
push eax
push ecx
push dword[ebp-0x24]
push dword[ebp-0x34]
push esi
push esi
push dword[ebp-0x58]
call dword[sym.imp.GDI32.dll_BitBlt]
mov eax, dword[ebp+0x20]
sub eax, dword[ebp+0x1c]
cdq
idiv ebx
mov dword[ebp-0x68], eax
test ebx, ebx
jle off.b885
mov edx, dword[ebp-0x40]
lea esi, [ebx+ebx]
mov ecx, dword[ebp-0x38]
mov edi, dword[ebp+0x20]
mov dword[ebp-0x18], edi
lea eax, [edx+1]
mov dword[ebp-0x14], ecx
mov dword[ebp-0x2c], eax
mov eax, dword[ebp-0x68]
neg eax
mov dword[ebp-0x1c], esi
mov dword[ebp-0x78], eax
lea eax, [ebx+ecx]
mov dword[ebp-0x20], eax
mov eax, ebx
imul eax, dword[ebp-0x68]
mov dword[ebp-0x6c], ebx
sub dword[ebp-0x18], eax
mov eax, edx
sub eax, ecx
mov dword[ebp-0x60], eax
mov eax, ebx
sub eax, ecx
mov dword[ebp-0x64], eax
mov eax, dword[ebp-0x20]
add eax, dword[ebp-0x60]
mov esi, dword[ebp-0x1c]
mov dword[ebp-0x10], edx
cmp edx, eax
jge off.b638
push dword[ebp-0x3c]
mov eax, dword[ebp-0x64]
lea esi, [ebp+8]
push dword[ebp+0x2c]
add eax, ecx
push ebx
push dword[ebp-0x18]
push dword[ebp-0x10]
push eax
sub esp, 0x10
mov edi, esp
push dword[ebp-0x28]
movsd dword
movsd dword
movsd dword
movsd dword
call fcn.0046d998
mov ecx, dword[ebp-0x10]
mov eax, dword[ebp-0x60]
inc ecx
add eax, dword[ebp-0x20]
mov dword[ebp-0x10], ecx
cmp ecx, eax
mov ecx, dword[ebp-0x14]
jl off.b573
mov esi, dword[ebp-0x1c]
mov edi, dword[ebp+0x20]
mov edx, esi
mov dword[ebp-0x10], edx
cmp esi, ecx
jge off.b701
push dword[ebp-0x3c]
mov eax, dword[ebp-0x2c]
lea esi, [ebp+8]
push dword[ebp+0x2c]
dec eax
push ebx
push edi
push eax
push edx
sub esp, 0x10
mov edi, esp
push dword[ebp-0x28]
movsd dword
movsd dword
movsd dword
movsd dword
call fcn.0046d998
mov edx, dword[ebp-0x10]
mov ecx, dword[ebp-0x14]
inc edx
mov edi, dword[ebp+0x20]
mov dword[ebp-0x10], edx
cmp edx, ecx
jl off.b647
mov esi, dword[ebp-0x1c]
mov eax, esi
mov dword[ebp-0x10], esi
cmp esi, dword[ebp-0x2c]
jge off.b761
push dword[ebp-0x3c]
lea esi, [ebp+8]
push dword[ebp+0x2c]
push ebx
push dword[ebp+0x20]
push eax
push ecx
sub esp, 0x10
mov edi, esp
push dword[ebp-0x28]
movsd dword
movsd dword
movsd dword
movsd dword
call fcn.0046d998
mov eax, dword[ebp-0x10]
mov ecx, dword[ebp-0x14]
inc eax
mov dword[ebp-0x10], eax
cmp eax, dword[ebp-0x2c]
jl off.b711
mov esi, dword[ebp-0x1c]
mov eax, dword[ebp-0x38]
mov ecx, eax
mov dword[ebp-0x10], ecx
cmp eax, dword[ebp-0x20]
jge off.b831
push dword[ebp-0x3c]
mov eax, dword[ebp-0x14]
lea esi, [ebp+8]
push dword[ebp+0x2c]
add eax, dword[ebp-0x64]
push ebx
push dword[ebp-0x18]
push eax
push ecx
sub esp, 0x10
mov edi, esp
push dword[ebp-0x28]
movsd dword
movsd dword
movsd dword
movsd dword
call fcn.0046d998
mov ecx, dword[ebp-0x10]
mov eax, dword[ebp-0x20]
inc ecx
mov dword[ebp-0x10], ecx
cmp ecx, eax
jl off.b774
mov esi, dword[ebp-0x1c]
jmp off.b834
mov eax, dword[ebp-0x20]
inc dword[ebp-0x2c]
mov edi, dword[ebp+0x20]
add edi, dword[ebp-0x78]
mov ecx, dword[ebp-0x14]
mov edx, dword[ebp-0x68]
inc ecx
add dword[ebp-0x18], edx
dec esi
mov edx, dword[ebp-0x40]
dec eax
sub dword[ebp-0x6c], 1
mov dword[ebp+0x20], edi
mov dword[ebp-0x14], ecx
mov dword[ebp-0x1c], esi
mov dword[ebp-0x20], eax
jne off.b560
mov edi, dword[ebp-0x7c]
xor esi, esi
cmp dword[ebp+0x30], 0
mov ecx, dword[ebp+8]
jne off.b896
sub ecx, ebx
mov edx, dword[ebp-0x34]
mov eax, dword[edi+4]
push 0xcc0020
push esi
push esi
push dword[ebp-0x58]
push dword[ebp-0x24]
push edx
push dword[ebp+0xc]
push ecx
push dword[eax+4]
call dword[sym.imp.GDI32.dll_BitBlt]
cmp dword[ebp-0x30], 0
je off.b1026
push dword[ebp-0x24]
mov ecx, dword[edi+4]
lea eax, [ebx+1]
push eax
push dword[ecx+4]
call dword[sym.imp.GDI32.dll_CreateCompatibleBitmap]
mov ecx, dword[ebp-0x30]
push eax
call fcn.004122f0
mov eax, dword[ebp-0x30]
push dword[eax+4]
push dword[ebp-0x58]
call fcn.00412959
mov eax, dword[ebp+0x30]
mov ecx, dword[edi+4]
neg eax
sbb eax, eax
and eax, dword[ebp+0x10]
test ecx, ecx
jne off.b998
mov ecx, esi
jmp off.b1001
mov ecx, dword[ecx+4]
push 0xcc0020
push dword[ebp+0xc]
push eax
push ecx
push dword[ebp-0x24]
push ebx
push esi
push esi
push dword[ebp-0x58]
call dword[sym.imp.GDI32.dll_BitBlt]
cmp dword[ebp-0x44], 0
je off.b1124
mov ecx, dword[edi+4]
lea eax, [ebx+1]
push eax
push dword[ebp-0x34]
push dword[ecx+4]
call dword[sym.imp.GDI32.dll_CreateCompatibleBitmap]
mov ecx, dword[ebp-0x44]
push eax
call fcn.004122f0
mov eax, dword[ebp-0x44]
push dword[eax+4]
push dword[ebp-0x58]
call fcn.00412959
cmp dword[ebp+0x30], 0
mov eax, dword[ebp+8]
jne off.b1085
sub eax, ebx
mov ecx, dword[edi+4]
test ecx, ecx
jne off.b1096
mov ecx, esi
jmp off.b1099
mov ecx, dword[ecx+4]
push 0xcc0020
push dword[ebp+0x14]
push eax
push ecx
push ebx
push dword[ebp-0x34]
push esi
push esi
push dword[ebp-0x58]
call dword[sym.imp.GDI32.dll_BitBlt]
mov eax, dword[ebp-0x80]
push dword[eax+4]
push dword[ebp-0x58]
call fcn.00412959
push dword[ebp-0x70]
call dword[sym.imp.GDI32.dll_DeleteObject]
lea ecx, [ebp-0x4c]
mov dword[ebp-0x4c], 0x585684
call fcn.00404d00
lea ecx, [ebp-0x5c]
call fcn.00411b08
xor eax, eax
inc eax
call fcn.0055389d
ret 0x2c

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/9c2b894b84f59672d8be2e984066f76f