---
layout: post
title:  "fcn.00694190 @ c92f0480e2fbc88393d2c65c08a235e0"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00694190
- **Origin (md5):** c92f0480e2fbc88393d2c65c08a235e0
- **VirusTotal:** [virustotal.com/gui/file/c92f0480e2fbc88393d2c65c08a235e0][virustotal_ref]

# Code Tags
<span class="tag" id="SOCKET">SOCKET</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.00694190@c92f0480e2fbc88393d2c65c08a235e0">fcn.00694190</a><br>@c92f0480e2fbc88393d2c65c08a235e0</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push edi
push esi
push ebx
sub esp, 0x10
mov ebx, dword[esp+0x20]
cmp byte[ebx+0xd4], 0
jne case.0x6941ba.0
cmp dword[ebx+0xa4], 0x15
ja case.default.0x6941ba
mov eax, dword[ebx+0xa4]
jmp dword[eax*4+0x7b8b24]
mov eax, dword[ebx+0x80]
mov edx, 0x19
mov dword[esp], ebx
sub edx, eax
add eax, str.HTTP_1.1_100_Continue_r_n_r_n
mov dword[esp+8], edx
mov dword[esp+4], eax
call dword[ebx+0xcc]
test eax, eax
js 0x694560
mov ecx, dword[ebx+0x8c]
add dword[ebx+0x80], eax
test ecx, ecx
je case.0x6941ba.0
cmp byte[ebx+0xd4], 0
jne case.0x6941ba.0
mov esi, dword[ebx+0x10]
call fcn.0069e6e0
mov dword[ebx+0x88], eax
test byte[esi+0xdc], 4
jne case.0x6941ba.0
mov eax, dword[esi+0xd4]
cmp dword[ebx+0x8c], eax
jne case.0x6941ba.0
lea edi, [esi+0x9c]
mov dword[esp], edi
call dword[sym.imp.KERNEL32.dll_EnterCriticalSection]
push edx
mov eax, dword[ebx+0xc]
test eax, eax
je 0x6948c8
mov edx, dword[ebx+8]
mov dword[eax+8], edx
mov eax, dword[ebx+8]
mov edx, dword[ebx+0xc]
test eax, eax
je 0x6948c0
mov dword[eax+0xc], edx
mov dword[ebx+8], 0
mov dword[ebx+0xc], 0
mov eax, dword[esi+0x20]
mov dword[ebx+8], eax
cmp dword[esi+0x24], 0
je 0x6948b8
mov eax, dword[esi+0x20]
mov dword[eax+0xc], ebx
mov dword[esi+0x20], ebx
mov dword[esp], edi
call dword[sym.imp.KERNEL32.dll_LeaveCriticalSection]
push eax
add esp, 0x10
pop ebx
pop esi
pop edi
ret
mov dword[esp+4], str.Internal_error_n
mov eax, dword[ebx+0x10]
mov dword[esp], eax
call fcn.0069df20
mov esi, dword[ebx+0x10]
mov dword[ebx+0xa4], 0x13
mov dword[ebx+0xa8], 3
mov edi, dword[ebx+0x1c]
test byte[esi+0xdd], 0x10
je 0x694540
test edi, edi
je 0x6942ed
mov dword[ebx+0x1c], 0
mov dword[esp], edi
call sym.xmrig.exe_MHD_destroy_response
mov eax, dword[esi+0x38]
test eax, eax
je 0x694318
cmp byte[ebx+0x94], 0
je 0x694318
lea edx, [ebx+0x24]
mov dword[esp+0xc], 1
mov dword[esp+4], ebx
mov dword[esp+8], edx
mov edx, dword[esi+0x3c]
mov dword[esp], edx
call eax
mov byte[ebx+0x94], 0
add esp, 0x10
pop ebx
pop esi
pop edi
ret
mov eax, dword[ebx+0x64]
mov edx, dword[ebx+0x68]
sub edx, eax
mov dword[esp+8], edx
add eax, dword[ebx+0x40]
mov dword[esp], ebx
mov dword[esp+4], eax
call dword[ebx+0xcc]
test eax, eax
jns 0x694630
cmp eax, 0xfffff3ff
je case.0x6941ba.0
mov dword[esp+4], str.Connection_was_closed_while_sending_response_headers._n
mov eax, dword[ebx+0x10]
mov dword[esp], eax
call fcn.0069df20
jmp 0x6942b3
mov eax, dword[ebx+0x64]
mov edx, dword[ebx+0x68]
sub edx, eax
mov dword[esp+8], edx
add eax, dword[ebx+0x40]
mov dword[esp], ebx
mov dword[esp+4], eax
call dword[ebx+0xcc]
test eax, eax
jns 0x6945e0
cmp eax, 0xfffff3ff
je case.0x6941ba.0
mov dword[esp+4], str.Connection_was_closed_while_sending_response_body._n
mov eax, dword[ebx+0x10]
mov dword[esp], eax
call fcn.0069df20
jmp 0x6942b3
mov esi, dword[ebx+0x1c]
mov edx, dword[ebx+0x7c]
mov eax, dword[ebx+0x78]
mov ecx, dword[esi+0x3c]
mov edi, dword[esi+0x38]
cmp edx, ecx
ja 0x6945c0
jb 0x6943f1
cmp eax, edi
jae 0x6945c0
mov eax, dword[esi+0xc]
test eax, eax
je 0x694407
lea eax, [esi+0x1c]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_EnterCriticalSection]
sub esp, 4
mov eax, ebx
call fcn.00693800
cmp eax, 1
jne case.0x6941ba.0
mov eax, dword[ebx+0x78]
sub eax, dword[esi+0x40]
mov edx, dword[ebx+0x7c]
sbb edx, dword[esi+0x44]
cmp edx, 0
ja 0x69492f
mov edx, dword[esi+0x50]
sub edx, eax
mov dword[esp+8], edx
add eax, dword[esi+4]
mov dword[esp], ebx
mov dword[esp+4], eax
call dword[ebx+0xcc]
mov edi, eax
mov eax, dword[esi+0xc]
test eax, eax
je 0x69445d
add esi, 0x1c
mov dword[esp], esi
call dword[sym.imp.KERNEL32.dll_LeaveCriticalSection]
sub esp, 4
test edi, edi
jns 0x69458a
cmp edi, 0xfffff3ff
je case.0x6941ba.0
mov eax, dword[ebx+0x30]
mov dword[esp+4], str.Failed_to_send_data_in_request_for_`_s'.

mov dword[esp+8], eax
jmp 0x69457a
mov eax, dword[ebx+0x64]
mov edx, dword[ebx+0x68]
sub edx, eax
mov dword[esp+8], edx
add eax, dword[ebx+0x40]
mov dword[esp], ebx
mov dword[esp+4], eax
call dword[ebx+0xcc]
test eax, eax
js 0x6943a4
add dword[ebx+0x64], eax
mov eax, dword[ebx+0x8c]
test eax, eax
je 0x6944c3
cmp byte[ebx+0xd4], 0
je 0x694715
cmp dword[ebx+0xa4], 0xe
jne case.0x6941ba.0
mov edx, dword[ebx+0x1c]
mov ecx, dword[ebx+0x64]
mov eax, dword[edx+0x38]
mov edx, dword[edx+0x3c]
xor eax, dword[ebx+0x78]
xor edx, dword[ebx+0x7c]
or edx, eax
sete al
movzx eax, al
add eax, 0xf
cmp dword[ebx+0x68], ecx
jne case.0x6941ba.0
mov dword[ebx+0x68], 0
mov dword[ebx+0x64], 0
mov dword[ebx+0xa4], eax
mov dword[esp+0xc], 0
mov eax, dword[ebx+0x60]
mov dword[esp+8], eax
mov eax, dword[ebx+0x40]
mov dword[esp+4], eax
mov eax, dword[ebx+0x20]
mov dword[esp], eax
call fcn.0069e4d0
mov dword[ebx+0x40], 0
mov dword[ebx+0x60], 0
jmp case.0x6941ba.0
mov dword[esp+4], 1
mov eax, dword[ebx+0x98]
mov dword[esp], eax
call dword[sym.imp.WS2_32.dll_shutdown]
sub esp, 8
jmp 0x6942da
cmp eax, 0xfffff3ff
je case.0x6941ba.0
mov eax, dword[ebx+0x30]
mov dword[esp+4], str.Failed_to_send_data_in_request_for__s.

mov dword[esp+8], eax
mov eax, dword[ebx+0x10]
mov dword[esp], eax
call fcn.0069df20
jmp 0x6942b3
mov eax, edi
mov ecx, dword[ebx+0x8c]
cdq
add eax, dword[ebx+0x78]
adc edx, dword[ebx+0x7c]
test ecx, ecx
mov dword[ebx+0x78], eax
mov dword[ebx+0x7c], edx
je 0x6945b0
cmp byte[ebx+0xd4], 0
je 0x694837
mov ecx, dword[ebx+0x1c]
mov edi, dword[ecx+0x38]
mov ecx, dword[ecx+0x3c]
lea esi, [esi]
xor edi, eax
xor ecx, edx
or ecx, edi
jne case.0x6941ba.0
mov dword[ebx+0xa4], 0x12
jmp case.0x6941ba.0
mov ecx, dword[ebx+0x8c]
add dword[ebx+0x64], eax
test ecx, ecx
je 0x6945fa
cmp byte[ebx+0xd4], 0
je 0x694680
cmp dword[ebx+0xa4], 0x11
jne case.0x6941ba.0
mov eax, dword[ebx+0x64]
cmp dword[ebx+0x68], eax
jne case.0x6941ba.0
mov dword[ebx+0x68], 0
mov dword[ebx+0x64], 0
mov dword[ebx+0xa4], 0x12
jmp 0x69450a
add dword[ebx+0x64], eax
mov eax, dword[ebx+0x8c]
test eax, eax
je 0x69464a
cmp byte[ebx+0xd4], 0
je 0x6947aa
cmp dword[ebx+0xa4], 0xa
jne case.0x6941ba.0
mov eax, dword[ebx+0x64]
cmp dword[ebx+0x68], eax
jne case.0x6941ba.0
mov dword[ebx+0x68], 0
mov dword[ebx+0x64], 0
mov dword[ebx+0xa4], 0xb
jmp 0x69450a
mov esi, dword[ebx+0x10]
call fcn.0069e6e0
mov dword[ebx+0x88], eax
test byte[esi+0xdc], 4
jne 0x6945fa
mov eax, dword[esi+0xd4]
cmp dword[ebx+0x8c], eax
jne 0x6945fa
lea edi, [esi+0x9c]
mov dword[esp], edi
call dword[sym.imp.KERNEL32.dll_EnterCriticalSection]
push edx
mov eax, dword[ebx+0xc]
test eax, eax
je 0x694892
mov edx, dword[ebx+8]
mov dword[eax+8], edx
mov eax, dword[ebx+8]
test eax, eax
je 0x694887
mov edx, dword[ebx+0xc]
mov dword[eax+0xc], edx
mov dword[ebx+8], 0
mov dword[ebx+0xc], 0
mov eax, dword[esi+0x20]
mov dword[ebx+8], eax
cmp dword[esi+0x24], 0
je 0x69487f
mov eax, dword[esi+0x20]
mov dword[eax+0xc], ebx
mov dword[esi+0x20], ebx
mov dword[esp], edi
call dword[sym.imp.KERNEL32.dll_LeaveCriticalSection]
push eax
jmp 0x6945fa
mov esi, dword[ebx+0x10]
call fcn.0069e6e0
mov dword[ebx+0x88], eax
test byte[esi+0xdc], 4
jne 0x6944c3
mov eax, dword[esi+0xd4]
cmp dword[ebx+0x8c], eax
jne 0x6944c3
lea edi, [esi+0x9c]
mov dword[esp], edi
call dword[sym.imp.KERNEL32.dll_EnterCriticalSection]
push eax
mov eax, dword[ebx+0xc]
test eax, eax
je 0x6948ad
mov edx, dword[ebx+8]
mov dword[eax+8], edx
mov eax, dword[ebx+8]
mov edx, dword[ebx+0xc]
test eax, eax
je 0x6948a5
mov dword[eax+0xc], edx
mov dword[ebx+8], 0
mov dword[ebx+0xc], 0
mov eax, dword[esi+0x20]
mov dword[ebx+8], eax
cmp dword[esi+0x24], 0
je 0x69489d
mov eax, dword[esi+0x20]
mov dword[eax+0xc], ebx
mov dword[esi+0x20], ebx
mov dword[esp], edi
call dword[sym.imp.KERNEL32.dll_LeaveCriticalSection]
push esi
jmp 0x6944c3
mov esi, dword[ebx+0x10]
call fcn.0069e6e0
mov dword[ebx+0x88], eax
test byte[esi+0xdc], 4
jne 0x69464a
mov eax, dword[esi+0xd4]
cmp dword[ebx+0x8c], eax
jne 0x69464a
lea edi, [esi+0x9c]
mov dword[esp], edi
call dword[sym.imp.KERNEL32.dll_EnterCriticalSection]
push eax
mov eax, dword[ebx+0xc]
test eax, eax
je 0x694874
mov edx, dword[ebx+8]
mov dword[eax+8], edx
mov eax, dword[ebx+8]
test eax, eax
je 0x69486c
mov edx, dword[ebx+0xc]
mov dword[eax+0xc], edx
mov dword[ebx+8], 0
mov dword[ebx+0xc], 0
mov eax, dword[esi+0x20]
mov dword[ebx+8], eax
cmp dword[esi+0x24], 0
je 0x694867
mov eax, dword[esi+0x20]
mov dword[eax+0xc], ebx
mov dword[esi+0x20], ebx
mov dword[esp], edi
call dword[sym.imp.KERNEL32.dll_LeaveCriticalSection]
push eax
jmp 0x69464a
mov esi, dword[ebx+0x10]
call fcn.0069e6e0
mov dword[ebx+0x88], eax
test byte[esi+0xdc], 4
jne 0x69485c
mov eax, dword[esi+0xd4]
cmp dword[ebx+0x8c], eax
je 0x6948d3
mov eax, dword[ebx+0x78]
mov edx, dword[ebx+0x7c]
jmp 0x6945b0
mov dword[esi+0x24], ebx
jmp 0x694825
mov eax, dword[ebx+0xc]
mov dword[esi+0x24], eax
jmp 0x694805
mov eax, dword[ebx+8]
mov dword[esi+0x20], eax
jmp 0x6947f8
mov dword[esi+0x24], ebx
jmp 0x694703
mov eax, dword[ebx+0xc]
mov dword[esi+0x24], eax
jmp 0x6946df
mov eax, dword[ebx+8]
mov dword[esi+0x20], eax
jmp 0x6946ce
mov dword[esi+0x24], ebx
jmp 0x694798
mov dword[esi+0x24], edx
jmp 0x694774
mov eax, dword[ebx+8]
mov dword[esi+0x20], eax
jmp 0x694763
mov dword[esi+0x24], ebx
jmp 0x694288
mov dword[esi+0x24], edx
jmp 0x694264
mov eax, dword[ebx+8]
mov dword[esi+0x20], eax
jmp 0x694253
lea edi, [esi+0x9c]
mov dword[esp], edi
call dword[sym.imp.KERNEL32.dll_EnterCriticalSection]
push eax
mov eax, dword[ebx+0xc]
test eax, eax
je 0x69495f
mov edx, dword[ebx+8]
mov dword[eax+8], edx
mov eax, dword[ebx+8]
mov edx, dword[ebx+0xc]
test eax, eax
je 0x69495a
mov dword[eax+0xc], edx
mov dword[ebx+8], 0
mov dword[ebx+0xc], 0
mov eax, dword[esi+0x20]
mov dword[ebx+8], eax
cmp dword[esi+0x24], 0
je 0x694955
mov eax, dword[esi+0x20]
mov dword[eax+0xc], ebx
mov dword[esi+0x20], ebx
mov dword[esp], edi
call dword[sym.imp.KERNEL32.dll_LeaveCriticalSection]
push eax
jmp 0x69485c
mov eax, dword[0x83a8a0]
mov dword[esp+0xc], str.Data_offset_exceeds_limit
mov dword[esp+8], 0xbe4
mov dword[esp+4], str.T:_Bin-prep_mhd_src_libmicrohttpd-0.9.58_src_microhttpd_connection.c
mov dword[esp], eax
call dword[0x83a8a4]
mov dword[esi+0x24], ebx
jmp 0x69491d
mov dword[esi+0x24], edx
jmp 0x6948fd
mov eax, dword[ebx+8]
mov dword[esi+0x20], eax
jmp 0x6948f0

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/c92f0480e2fbc88393d2c65c08a235e0