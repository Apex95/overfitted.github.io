---
layout: post
title:  "fcn.006ad640 @ a5905e3c253c25bbaf727a1a18fe8ed1"
date:   2021-08-30 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.006ad640
- **Origin (md5):** a5905e3c253c25bbaf727a1a18fe8ed1
- **VirusTotal:** [virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>
<span class="tag" id="LINKING">LINKING</span>


# Similar Functions

1. [fcn.0042b730][similar_1_ref] (sim.: 0.9646316464497788)
2. [fcn.00656050][similar_2_ref] (sim.: 0.9612858379677592)
3. [fcn.005c0710][similar_3_ref] (sim.: 0.9568831170015166)
4. [fcn.005c9510][similar_4_ref] (sim.: 0.9503101461151849)
5. [fcn.0054f1a0][similar_5_ref] (sim.: 0.9490091990353352)


# Disassembled Code

{% highlight nasm %}
push r15
push r14
push r13
push r12
push rbp
push rdi
push rsi
push rbx
sub rsp,0x4a8
mov r14,rcx
call fcn.0067add0
xor ecx,ecx
call qword[sym.imp.msvcrt.dll__time64]
lea rcx,[0x00c1e3c0]
mov edx,eax
mov dword[0x00c1da00],eax
lea rax,[0x00c1da04]
nop dword[rax]
imul edx,edx,0x10dcd
add rax,4
mov dword[rax-4],edx
cmp rcx,rax
jne 0x6ad680
lea rdi,[rsp+0x290]
xor eax,eax
mov ecx,0x41
xor r10d,r10d
lea rbp,[rsp+0x290]
mov r8d,0x104
rep stosq qword[rdi],rax
mov rdx,rbp
mov dword[0x00a69130],0x270
mov word[rdi],r10w
lea rdi,[rsp+0x230]
call qword[sym.imp.KERNEL32.dll_GetModuleFileNameW]
lea rax,[rdi+0x10]
mov rcx,rbp
mov qword[rsp+0x230],rax
call sub.msvcrt.dll_wcslen
lea rbx,[rax+rax]
mov rdx,rbx
sar rdx,1
cmp rdx,7
mov r8,rdx
mov qword[rsp+0x270],rdx
ja 0x6ae010
cmp rdx,1
mov rcx,qword[rsp+0x230]
je 0x6ae7f6
test rdx,rdx
lea rsi,[rsp+0x270]
jne 0x6ae041
xor r9d,r9d
lea r12,[rsi+0x10]
lea rbx,[rsp+0x250]
mov qword[rsp+0x238],r8
mov rdx,rsi
mov word[rcx+r8*2],r9w
mov rcx,rdi
mov qword[rsp+0x270],r12
mov qword[rsp+0x278],0
mov byte[rsp+0x280],0
call fcn.0067b680
lea rdx,[rbx+0x10]
mov rcx,rbx
mov qword[rsp+0x250],rdx
mov rdx,qword[rax]
mov r8,rdx
add r8,qword[rax+8]
call fcn.006a4560
mov rcx,qword[rsp+0x270]
cmp rcx,r12
je 0x6ad79d
call fcn.00a5af30
mov r8,0xffffffffffffffff
mov edx,0x5c
mov rcx,rbx
call fcn.00978e10
cmp rax,0xffffffffffffffff
je 0x6ae631
lea r12,[rsp+0x70]
mov r8,qword[rsp+0x258]
add rax,1
lea rdx,[r12+0x10]
mov rcx,r12
cmp rax,r8
mov qword[rsp+0x70],rdx
mov rdx,qword[rsp+0x250]
cmovbe r8,rax
add r8,rdx
call fcn.006a4560
mov rcx,qword[rsp+0x250]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x6ad806
call fcn.00a5af30
mov rcx,qword[rsp+0x230]
lea rax,[rdi+0x10]
cmp rcx,rax
je 0x6ad81c
call fcn.00a5af30
lea rcx,[0x00c1d800]
mov rdx,r12
call fcn.00a2df10
lea rdx,[0x00c1d800]
lea rcx,[0x00c1d820]
call fcn.00a2df10
call fcn.006ac0c0
lea rcx,[0x00c1d820]
call fcn.005ff5e0
test al,al
jne 0x6ad922
mov rdx,qword[0x00c1d800]
lea r13,[rsp+0x90]
lea rax,[r13+0x10]
mov rcx,r13
mov r8,rdx
add r8,qword[0x00c1d808]
mov qword[rsp+0x90],rax
call fcn.006a4560
mov r8,qword[0x00c1d828]
mov rdx,qword[0x00c1d820]
mov rcx,r13
call fcn.00a2de80
mov rdx,qword[rsp+0x90]
lea rcx,[r13+0x10]
mov rax,qword[0x00c1d820]
cmp rdx,rcx
je 0x6aecb4
lea rcx,[0x00c1d830]
cmp rax,rcx
je 0x6aebb8
movdqu xmm0,xmmword[rsp+0x98]
test rax,rax
mov rcx,qword[0x00c1d830]
mov qword[0x00c1d820],rdx
movups xmmword[0x00c1d828],xmm0
je 0x6aebcf
mov qword[rsp+0x90],rax
mov qword[rsp+0xa0],rcx
mov qword[rsp+0x98],0
mov byte[rax],0
add r13,0x10
mov rcx,qword[rsp+0x90]
cmp rcx,r13
je 0x6ad922
call fcn.00a5af30
mov rdx,qword[0x00c1d820]
lea r13,[rsp+0xb0]
lea rax,[r13+0x10]
mov rcx,r13
mov r8,rdx
add r8,qword[0x00c1d828]
mov qword[rsp+0xb0],rax
call fcn.006a4560
lea r15,[rsp+0xd0]
mov rdx,r13
mov rcx,r15
call fcn.006a4db0
mov rdx,qword[rsp+0xd0]
lea rcx,[r15+0x10]
mov rax,qword[0x00c1d820]
cmp rdx,rcx
je 0x6aec40
lea rcx,[0x00c1d830]
cmp rax,rcx
je 0x6aea83
movdqu xmm0,xmmword[rsp+0xd8]
test rax,rax
mov rcx,qword[0x00c1d830]
mov qword[0x00c1d820],rdx
movups xmmword[0x00c1d828],xmm0
je 0x6aea9a
mov qword[rsp+0xd0],rax
mov qword[rsp+0xe0],rcx
mov qword[rsp+0xd8],0
mov byte[rax],0
add r15,0x10
mov rcx,qword[rsp+0xd0]
cmp rcx,r15
je 0x6ad9ea
call fcn.00a5af30
mov rcx,qword[rsp+0xb0]
add r13,0x10
cmp rcx,r13
je 0x6ada00
call fcn.00a5af30
movzx r15d,byte[0x00a69150]
test r15b,r15b
je 0x6adb80
lea rdx,[0x00c1d820]
lea rcx,[0x00c1d840]
call fcn.00a2df10
mov rdx,qword[0x00c1d820]
lea r13,[rsp+0xf0]
lea rax,[r13+0x10]
mov rcx,r13
mov r8,rdx
add r8,qword[0x00c1d828]
mov qword[rsp+0xf0],rax
call fcn.006a4560
movabs rax,0x7fffffffffffffff
sub rax,qword[rsp+0xf8]
cmp rax,9
jbe 0x6aeeba
lea rdx,str.Downloads
mov r8d,0xa
mov rcx,r13
call fcn.00a2de80
mov rdx,qword[rsp+0xf0]
lea rcx,[r13+0x10]
mov rax,qword[0x00c1d8a0]
cmp rdx,rcx
je 0x6aecd0
lea rcx,[0x00c1d8b0]
cmp rax,rcx
je 0x6aeb90
movdqu xmm0,xmmword[rsp+0xf8]
test rax,rax
mov rcx,qword[0x00c1d8b0]
mov qword[0x00c1d8a0],rdx
movups xmmword[0x00c1d8a8],xmm0
je 0x6aeba7
mov qword[rsp+0xf0],rax
mov qword[rsp+0x100],rcx
mov qword[rsp+0xf8],0
mov byte[rax],0
add r13,0x10
mov rcx,qword[rsp+0xf0]
cmp rcx,r13
je 0x6adb0a
call fcn.00a5af30
lea rcx,[0x00c1d860]
mov rdx,r12
call fcn.00a2df10
lea rax,[rsi+0x10]
xor r9d,r9d
mov rdx,rsi
mov rcx,r12
mov qword[rsp+0x278],0
mov word[rsp+0x280],r9w
mov qword[rsp+0x270],rax
call fcn.0067bbe0
lea rdx,[rbx+0x10]
mov r13,qword[rax+8]
mov qword[rsp+0x250],rdx
mov r15,qword[rax]
add r13,r13
mov rax,r15
add rax,r13
je 0x6ae061
test r15,r15
jne 0x6ae061
lea rcx,[0x00aba520]
call fcn.00a4f4e0
nop
mov rax,qword[sym.imp.SHELL32.dll_SHGetFolderPathW]
mov qword[rsp+0x20],rbp
xor r9d,r9d
xor r8d,r8d
mov edx,0x1a
xor ecx,ecx
mov qword[rsp+0x30],rax
call rax
test eax,eax
jne 0x6add9f
lea r13,[rsp+0x110]
mov rcx,rbp
lea rax,[r13+0x10]
mov qword[rsp+0x110],rax
call sub.msvcrt.dll_wcslen
add rax,rax
mov rdx,rax
mov qword[rsp+0x38],rax
sar rdx,1
cmp rdx,7
mov qword[rsp+0x48],rdx
ja 0x6aea3c
cmp rdx,1
mov rax,qword[rsp+0x110]
je 0x6aeca4
test rdx,rdx
jne 0x6aea61
lea r9,[rsi+0x10]
xor ecx,ecx
mov qword[rsp+0x118],rdx
mov word[rax+rdx*2],cx
mov rdx,rsi
mov rcx,r13
mov qword[rsp+0x270],r9
mov qword[rsp+0x38],r9
mov qword[rsp+0x278],0
mov byte[rsp+0x280],0
call fcn.0067b680
lea rdx,[rbx+0x10]
mov rcx,rbx
mov qword[rsp+0x250],rdx
mov rdx,qword[rax]
mov r8,rdx
add r8,qword[rax+8]
call fcn.006a4560
mov rcx,qword[rsp+0x270]
mov r9,qword[rsp+0x38]
cmp rcx,r9
je 0x6adc6f
call fcn.00a5af30
movabs rax,0x7fffffffffffffff
sub rax,qword[rsp+0x258]
cmp rax,5
jbe 0x6aee90
lea rdx,[0x00abaa33]
mov r8d,6
mov rcx,rbx
call fcn.00a2de80
lea rdx,[rsi+0x10]
mov qword[rsp+0x270],rdx
mov rcx,qword[rax]
lea rdx,[rax+0x10]
cmp rcx,rdx
je 0x6aed4c
mov qword[rsp+0x270],rcx
mov rcx,qword[rax+0x10]
mov qword[rsp+0x280],rcx
mov rcx,qword[rax+8]
mov qword[rsp+0x278],rcx
mov qword[rax],rdx
lea rcx,[rsi+0x10]
mov byte[rax+0x10],0
mov rdx,qword[rsp+0x270]
mov qword[rax+8],0
mov rax,qword[0x00c1d820]
cmp rdx,rcx
je 0x6aed8e
lea rcx,[0x00c1d830]
cmp rax,rcx
je 0x6aecec
movdqu xmm0,xmmword[rsp+0x278]
test rax,rax
mov rcx,qword[0x00c1d830]
mov qword[0x00c1d820],rdx
movups xmmword[0x00c1d828],xmm0
je 0x6aed03
mov qword[rsp+0x270],rax
mov qword[rsp+0x280],rcx
mov qword[rsp+0x278],0
mov byte[rax],0
lea rax,[rsi+0x10]
mov rcx,qword[rsp+0x270]
cmp rcx,rax
je 0x6add73
call fcn.00a5af30
mov rcx,qword[rsp+0x250]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x6add89
call fcn.00a5af30
mov rcx,qword[rsp+0x110]
add r13,0x10
cmp rcx,r13
je 0x6add9f
call fcn.00a5af30
cmp qword[0x00c1e3c0],0
je 0x6ae823
mov rdx,qword[0x00c1d820]
lea r13,[rsp+0x130]
lea rax,[r13+0x10]
mov rcx,r13
mov r8,rdx
add r8,qword[0x00c1d828]
mov qword[rsp+0x130],rax
call fcn.006a4560
movabs rax,0x7fffffffffffffff
sub rax,qword[rsp+0x138]
cmp rax,9
jbe 0x6af042
lea rdx,str.Downloads
mov r8d,0xa
mov rcx,r13
call fcn.00a2de80
mov rdx,qword[rsp+0x130]
lea rcx,[r13+0x10]
mov rax,qword[0x00c1d8a0]
cmp rdx,rcx
je 0x6aed14
lea rcx,[0x00c1d8b0]
cmp rax,rcx
je 0x6aeb68
movdqu xmm0,xmmword[rsp+0x138]
test rax,rax
mov rcx,qword[0x00c1d8b0]
mov qword[0x00c1d8a0],rdx
movups xmmword[0x00c1d8a8],xmm0
je 0x6aeb7f
mov qword[rsp+0x130],rax
mov qword[rsp+0x140],rcx
mov qword[rsp+0x138],0
mov byte[rax],0
add r13,0x10
mov rcx,qword[rsp+0x130]
cmp rcx,r13
je 0x6ade93
call fcn.00a5af30
mov qword[rsp+0x20],rbp
xor r9d,r9d
xor r8d,r8d
mov edx,0x1c
xor ecx,ecx
mov rax,qword[rsp+0x30]
call rax
test eax,eax
jne 0x6ae6f0
lea r15,[rsp+0x150]
mov rcx,rbp
lea rax,[r15+0x10]
mov qword[rsp+0x150],rax
call sub.msvcrt.dll_wcslen
lea r13,[rax+rax]
mov rdx,r13
sar rdx,1
cmp rdx,7
mov qword[rsp+0x60],rdx
ja 0x6ae9f7
cmp rdx,1
mov rax,qword[rsp+0x150]
je 0x6aec94
test rdx,rdx
jne 0x6aea1c
lea r9,[rsi+0x10]
xor r10d,r10d
lea r13,[rsp+0x170]
mov qword[rsp+0x158],rdx
mov rcx,r15
mov word[rax+rdx*2],r10w
mov rdx,rsi
mov qword[rsp+0x270],r9
mov qword[rsp+0x30],r9
mov qword[rsp+0x278],0
mov byte[rsp+0x280],0
call fcn.0067b680
lea rdx,[r13+0x10]
mov rcx,r13
mov qword[rsp+0x170],rdx
mov rdx,qword[rax]
mov r8,rdx
add r8,qword[rax+8]
call fcn.006a4560
mov rcx,qword[rsp+0x270]
mov r9,qword[rsp+0x30]
cmp rcx,r9
je 0x6adf81
call fcn.00a5af30
movabs rax,0x7fffffffffffffff
sub rax,qword[rsp+0x178]
cmp rax,5
jbe 0x6aefac
lea rdx,[0x00abaa33]
mov r8d,6
mov rcx,r13
call fcn.00a2de80
lea r13,[rsp+0x190]
lea rdx,[r13+0x10]
mov qword[rsp+0x190],rdx
mov rcx,qword[rax]
lea rdx,[rax+0x10]
cmp rcx,rdx
je 0x6aed69
mov qword[rsp+0x190],rcx
mov rcx,qword[rax+0x10]
mov qword[rsp+0x1a0],rcx
mov rcx,qword[rax+8]
mov byte[rax+0x10],0
mov r15d,1
mov qword[rsp+0x198],rcx
mov qword[rax],rdx
mov qword[rax+8],0
jmp 0x6ae71d
lea rsi,[rsp+0x270]
mov rcx,rdi
xor r8d,r8d
mov rdx,rsi
call fcn.00a30910
mov rcx,rax
mov qword[rsp+0x230],rax
mov rax,qword[rsp+0x270]
mov qword[rsp+0x240],rax
mov r8,rbx
mov rdx,rbp
call sub.msvcrt.dll_memcpy
mov r8,qword[rsp+0x270]
mov rcx,qword[rsp+0x230]
jmp 0x6ad72a
mov rcx,r13
sar rcx,1
cmp rcx,7
mov rax,rcx
mov qword[rsp+0x230],rcx
ja 0x6ae6a5
cmp rax,1
je 0x6ae80e
test rcx,rcx
lea rdx,[rbx+0x10]
jne 0x6aed86
xor r8d,r8d
mov rcx,qword[rsp+0x270]
mov qword[rsp+0x258],rax
mov word[rdx+rax*2],r8w
lea rax,[rsi+0x10]
cmp rcx,rax
je 0x6ae0b9
call fcn.00a5af30
lea rcx,str.locale
call sub.msvcrt.dll_wcslen
movabs rdx,0x3fffffffffffffff
sub rdx,qword[rsp+0x258]
mov r8,rax
cmp rax,rdx
ja 0x6af05a
lea rdx,str.locale
mov rcx,rbx
call fcn.00a307c0
lea r13,[rsp+0x1b0]
lea rdx,[r13+0x10]
mov qword[rsp+0x1b0],rdx
mov rcx,qword[rax]
lea rdx,[rax+0x10]
cmp rcx,rdx
je 0x6aeb4b
mov qword[rsp+0x1b0],rcx
mov rcx,qword[rax+0x10]
mov qword[rsp+0x1c0],rcx
mov rcx,qword[rax+8]
mov qword[rsp+0x1b8],rcx
xor ecx,ecx
mov qword[rax],rdx
mov word[rax+0x10],cx
mov rcx,qword[rsp+0x250]
mov qword[rax+8],0
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x6ae15d
call fcn.00a5af30
mov ecx,0x41
xor eax,eax
mov rdi,rbp
rep stosq qword[rdi],rax
xor edx,edx
mov r8d,0x105
mov rcx,qword[rsp+0x1b0]
mov word[rdi],dx
mov rdx,rbp
call qword[sym.imp.KERNEL32.dll_GetShortPathNameW]
lea rdi,[rsp+0x1d0]
mov rcx,rbp
lea rax,[rdi+0x10]
mov qword[rsp+0x1d0],rax
call sub.msvcrt.dll_wcslen
lea r15,[rax+rax]
mov rdx,r15
sar rdx,1
cmp rdx,7
mov qword[rsp+0x68],rdx
ja 0x6ae660
cmp rdx,1
mov rcx,qword[rsp+0x1d0]
je 0x6ae7e6
test rdx,rdx
jne 0x6ae688
xor eax,eax
lea rbp,[rsi+0x10]
mov qword[rsp+0x1d8],rdx
mov word[rcx+rdx*2],ax
mov rdx,rsi
mov rcx,rdi
mov qword[rsp+0x270],rbp
mov qword[rsp+0x278],0
mov byte[rsp+0x280],0
call fcn.0067b680
lea rdx,[rbx+0x10]
mov rcx,rbx
mov qword[rsp+0x250],rdx
mov rdx,qword[rax]
mov r8,rdx
add r8,qword[rax+8]
call fcn.006a4560
mov rcx,qword[rsp+0x270]
cmp rcx,rbp
je 0x6ae23f
call fcn.00a5af30
mov rdx,qword[rsp+0x250]
lea rcx,[rbx+0x10]
mov rax,qword[0x00c1d880]
cmp rdx,rcx
je 0x6aec5c
lea rcx,[0x00c1d890]
cmp rax,rcx
je 0x6aeafb
movdqu xmm0,xmmword[rsp+0x258]
test rax,rax
mov rcx,qword[0x00c1d890]
mov qword[0x00c1d880],rdx
movups xmmword[0x00c1d888],xmm0
je 0x6aeb12
mov qword[rsp+0x250],rax
mov qword[rsp+0x260],rcx
mov qword[rsp+0x258],0
mov byte[rax],0
lea rax,[rbx+0x10]
mov rcx,qword[rsp+0x250]
cmp rcx,rax
je 0x6ae2c7
call fcn.00a5af30
mov rcx,qword[rsp+0x1d0]
add rdi,0x10
cmp rcx,rdi
je 0x6ae2dd
call fcn.00a5af30
mov rdx,qword[0x00c1d840]
lea rsi,[rsp+0x1f0]
lea rax,[rsi+0x10]
mov rcx,rsi
mov r8,rdx
add r8,qword[0x00c1d848]
mov qword[rsp+0x1f0],rax
call fcn.006a4560
movabs rax,0x7fffffffffffffff
sub rax,qword[rsp+0x1f8]
cmp rax,9
jbe 0x6af04e
lea rdx,str.FileLists
mov r8d,0xa
mov rcx,rsi
call fcn.00a2de80
mov rdx,qword[rsp+0x1f0]
lea rcx,[rsi+0x10]
mov rax,qword[0x00c1d8c0]
cmp rdx,rcx
je 0x6aec08
lea rcx,[0x00c1d8d0]
cmp rax,rcx
je 0x6aead3
movdqu xmm0,xmmword[rsp+0x1f8]
test rax,rax
mov rcx,qword[0x00c1d8d0]
mov qword[0x00c1d8c0],rdx
movups xmmword[0x00c1d8c8],xmm0
je 0x6aeaea
mov qword[rsp+0x1f0],rax
mov qword[rsp+0x200],rcx
mov qword[rsp+0x1f8],0
mov byte[rax],0
add rsi,0x10
mov rcx,qword[rsp+0x1f0]
cmp rcx,rsi
je 0x6ae3c3
call fcn.00a5af30
mov rdx,qword[0x00c1d840]
lea rsi,[rsp+0x210]
lea rax,[rsi+0x10]
mov rcx,rsi
mov r8,rdx
add r8,qword[0x00c1d848]
mov qword[rsp+0x210],rax
call fcn.006a4560
movabs rax,0x7fffffffffffffff
sub rax,qword[rsp+0x218]
cmp rax,8
jbe 0x6af0a3
lea rdx,str.HubLists
mov r8d,9
mov rcx,rsi
call fcn.00a2de80
mov rdx,qword[rsp+0x210]
lea rcx,[rsi+0x10]
mov rax,qword[0x00c1d8e0]
cmp rdx,rcx
je 0x6aec24
lea rcx,[0x00c1d8f0]
cmp rax,rcx
je 0x6aeb23
movdqu xmm0,xmmword[rsp+0x218]
test rax,rax
mov rcx,qword[0x00c1d8f0]
mov qword[0x00c1d8e0],rdx
movups xmmword[0x00c1d8e8],xmm0
je 0x6aeb3a
mov qword[rsp+0x210],rax
mov qword[rsp+0x220],rcx
mov qword[rsp+0x218],0
mov byte[rax],0
add rsi,0x10
mov rcx,qword[rsp+0x210]
cmp rcx,rsi
je 0x6ae4a9
call fcn.00a5af30
mov rdx,qword[0x00c1d820]
lea rax,[rbx+0x10]
mov rcx,rbx
mov qword[rsp+0x250],rax
mov r8,rdx
add r8,qword[0x00c1d828]
call fcn.006a4560
movabs rax,0x7fffffffffffffff
sub rax,qword[rsp+0x258]
cmp rax,0xa
jbe 0x6aef2f
lea rdx,str.Notepad.txt
mov r8d,0xb
mov rcx,rbx
call fcn.00a2de80
mov rdx,qword[rsp+0x250]
lea rcx,[rbx+0x10]
mov rax,qword[0x00c1d900]
cmp rdx,rcx
je 0x6aec78
lea rcx,[0x00c1d910]
cmp rax,rcx
je 0x6aeaab
movdqu xmm0,xmmword[rsp+0x258]
test rax,rax
mov rcx,qword[0x00c1d910]
mov qword[0x00c1d900],rdx
movups xmmword[0x00c1d908],xmm0
je 0x6aeac2
mov qword[rsp+0x250],rax
mov qword[rsp+0x260],rcx
mov qword[rsp+0x258],0
mov byte[rax],0
add rbx,0x10
mov rcx,qword[rsp+0x250]
cmp rcx,rbx
je 0x6ae587
call fcn.00a5af30
mov rbx,qword[r14+0x18]
lea rsi,[r14+8]
lea rdi,[0x00c1d800]
cmp rsi,rbx
jne 0x6ae5b0
jmp 0x6ae5db
mov rcx,rbx
call fcn.00a4f3f0
cmp rsi,rax
mov rbx,rax
je 0x6ae5db
cmp qword[rbx+0x30],0
je 0x6ae5a0
movsxd rcx,dword[rbx+0x20]
lea rdx,[rbx+0x28]
shl rcx,5
add rcx,rdi
call fcn.00a2df10
mov rcx,rbx
call fcn.00a4f3f0
cmp rsi,rax
mov rbx,rax
jne 0x6ae5b0
lea rcx,[0x00c1d820]
add r13,0x10
call fcn.005ff410
lea rcx,[0x00c1d840]
call fcn.005ff410
mov rcx,qword[rsp+0x1b0]
cmp rcx,r13
je 0x6ae609
call fcn.00a5af30
mov rcx,qword[rsp+0x70]
add r12,0x10
cmp rcx,r12
je 0x6ae61d
call fcn.00a5af30
nop
add rsp,0x4a8
pop rbx
pop rsi
pop rdi
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov rdx,qword[rsp+0x250]
lea r12,[rsp+0x70]
lea rax,[r12+0x10]
mov rcx,r12
mov r8,rdx
add r8,qword[rsp+0x258]
mov qword[rsp+0x70],rax
call fcn.006a4560
jmp 0x6ad7f0
lea rdx,[rsp+0x68]
xor r8d,r8d
mov rcx,rdi
call fcn.00a30910
mov rcx,rax
mov qword[rsp+0x1d0],rax
mov rax,qword[rsp+0x68]
mov qword[rsp+0x1e0],rax
mov rdx,rbp
mov r8,r15
call sub.msvcrt.dll_memcpy
mov rdx,qword[rsp+0x68]
mov rcx,qword[rsp+0x1d0]
jmp 0x6ae1d6
mov rcx,rbx
xor r8d,r8d
mov rdx,rdi
call fcn.00a30910
mov rcx,rax
mov qword[rsp+0x250],rax
mov rax,qword[rsp+0x230]
mov qword[rsp+0x260],rax
mov rdx,r15
mov r8,r13
call sub.msvcrt.dll_memcpy
mov rax,qword[rsp+0x230]
mov rdx,qword[rsp+0x250]
jmp 0x6ae093
mov rdx,qword[0x00c1d820]
lea r13,[rsp+0x190]
lea rax,[r13+0x10]
mov rcx,r13
mov r8,rdx
add r8,qword[0x00c1d828]
mov qword[rsp+0x190],rax
call fcn.006a4560
mov rdx,qword[rsp+0x190]
lea rcx,[r13+0x10]
mov rax,qword[0x00c1d840]
cmp rdx,rcx
je 0x6aed30
lea rcx,[0x00c1d850]
cmp rax,rcx
je 0x6aebe0
movdqu xmm0,xmmword[rsp+0x198]
test rax,rax
mov rcx,qword[0x00c1d850]
mov qword[0x00c1d840],rdx
movups xmmword[0x00c1d848],xmm0
je 0x6aebf7
mov qword[rsp+0x190],rax
mov qword[rsp+0x1a0],rcx
mov qword[rsp+0x198],0
mov byte[rax],0
add r13,0x10
mov rcx,qword[rsp+0x190]
cmp rcx,r13
je 0x6ae7a5
call fcn.00a5af30
test r15b,r15b
je 0x6adb0a
mov rcx,qword[rsp+0x170]
lea rax,[rsp+0x180]
cmp rcx,rax
je 0x6ae7c8
call fcn.00a5af30
mov rcx,qword[rsp+0x150]
lea rax,[rsp+0x160]
cmp rcx,rax
jne 0x6adb05
jmp 0x6adb0a
movzx eax,word[rsp+0x290]
mov word[rcx],ax
jmp 0x6ae1d6
movzx eax,word[rsp+0x290]
lea rsi,[rsp+0x270]
mov word[rcx],ax
jmp 0x6ad72a
movzx edx,word[r15]
mov word[rsp+0x260],dx
lea rdx,[rbx+0x10]
jmp 0x6ae093
lea rcx,str.Shell32.dll
call qword[sym.imp.KERNEL32.dll_LoadLibraryW]
test rax,rax
mov qword[0x00c1e3c0],rax
je 0x6addad
lea rdx,str.SHGetKnownFolderPath
mov rcx,rax
call qword[sym.imp.KERNEL32.dll_GetProcAddress]
test rax,rax
je 0x6addad
mov qword[rsp+0x50],0
lea r9,[rsp+0x50]
xor r8d,r8d
xor edx,edx
lea rcx,[0x00a69140]
call rax
test eax,eax
jne 0x6addad
mov r13,qword[rsp+0x50]
lea rax,[rsi+0x10]
mov qword[rsp+0x270],rax
test r13,r13
je 0x6aee26
mov rcx,r13
call sub.msvcrt.dll_wcslen
add rax,rax
mov qword[rsp+0x38],rax
sar rax,1
cmp rax,7
mov rdx,rax
mov qword[rsp+0x58],rax
ja 0x6aedd2
cmp rdx,1
mov rax,qword[rsp+0x270]
je 0x6aee19
test rdx,rdx
jne 0x6aedf7
xor r11d,r11d
mov qword[rsp+0x278],rdx
mov rcx,rbx
mov word[rax+rdx*2],r11w
mov rdx,rsi
call fcn.0093b710
movabs rax,0x7fffffffffffffff
cmp qword[rsp+0x258],rax
je 0x6aee84
lea rdx,[0x00abaa67]
mov r8d,1
mov rcx,rbx
call fcn.00a2de80
lea rdx,[rdi+0x10]
mov qword[rsp+0x230],rdx
mov rcx,qword[rax]
lea rdx,[rax+0x10]
cmp rcx,rdx
je 0x6aef8f
mov qword[rsp+0x230],rcx
mov rcx,qword[rax+0x10]
mov qword[rsp+0x240],rcx
mov rcx,qword[rax+8]
mov qword[rsp+0x238],rcx
mov qword[rax],rdx
mov byte[rax+0x10],0
mov rcx,qword[rsp+0x250]
mov qword[rax+8],0
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x6ae980
call fcn.00a5af30
mov rcx,qword[rsp+0x270]
lea rax,[rsi+0x10]
cmp rcx,rax
je 0x6ae996
call fcn.00a5af30
mov rcx,qword[rsp+0x50]
call qword[sym.imp.ole32.dll_CoTaskMemFree]
lea r13,[rsp+0x130]
mov rdx,qword[rsp+0x230]
lea rcx,[rdi+0x10]
lea rax,[r13+0x10]
cmp rdx,rcx
mov qword[rsp+0x130],rax
je 0x6aedaa
mov rax,qword[rsp+0x240]
mov qword[rsp+0x130],rdx
mov qword[rsp+0x140],rax
mov rax,qword[rsp+0x238]
mov qword[rsp+0x138],rax
jmp 0x6ade13
lea rdx,[rsp+0x60]
xor r8d,r8d
mov rcx,r15
call fcn.00a30910
mov rdx,qword[rsp+0x60]
mov qword[rsp+0x150],rax
mov qword[rsp+0x160],rdx
mov rdx,rbp
mov r8,r13
mov rcx,rax
call sub.msvcrt.dll_memcpy
mov rdx,qword[rsp+0x60]
mov rax,qword[rsp+0x150]
jmp 0x6adf04
lea rdx,[rsp+0x48]
xor r8d,r8d
mov rcx,r13
call fcn.00a30910
mov rdx,qword[rsp+0x48]
mov qword[rsp+0x110],rax
mov qword[rsp+0x120],rdx
mov r8,qword[rsp+0x38]
mov rdx,rbp
mov rcx,rax
call sub.msvcrt.dll_memcpy
mov rdx,qword[rsp+0x48]
mov rax,qword[rsp+0x110]
jmp 0x6adbfc
movdqu xmm0,xmmword[rsp+0xd8]
mov qword[0x00c1d820],rdx
movups xmmword[0x00c1d828],xmm0
lea rax,[r15+0x10]
mov qword[rsp+0xd0],rax
jmp 0x6ad9c5
movdqu xmm0,xmmword[rsp+0x258]
mov qword[0x00c1d900],rdx
movups xmmword[0x00c1d908],xmm0
lea rax,[rbx+0x10]
mov qword[rsp+0x250],rax
jmp 0x6ae562
movdqu xmm0,xmmword[rsp+0x1f8]
mov qword[0x00c1d8c0],rdx
movups xmmword[0x00c1d8c8],xmm0
lea rax,[rsi+0x10]
mov qword[rsp+0x1f0],rax
jmp 0x6ae39e
movdqu xmm0,xmmword[rsp+0x258]
mov qword[0x00c1d880],rdx
movups xmmword[0x00c1d888],xmm0
lea rax,[rbx+0x10]
mov qword[rsp+0x250],rax
jmp 0x6ae2a2
movdqu xmm0,xmmword[rsp+0x218]
mov qword[0x00c1d8e0],rdx
movups xmmword[0x00c1d8e8],xmm0
lea rax,[rsi+0x10]
mov qword[rsp+0x210],rax
jmp 0x6ae484
mov r9,qword[rax+0x10]
mov r10,qword[rax+0x18]
mov qword[rsp+0x1c0],r9
mov qword[rsp+0x1c8],r10
jmp 0x6ae12a
movdqu xmm0,xmmword[rsp+0x138]
mov qword[0x00c1d8a0],rdx
movups xmmword[0x00c1d8a8],xmm0
lea rax,[r13+0x10]
mov qword[rsp+0x130],rax
jmp 0x6ade6e
movdqu xmm0,xmmword[rsp+0xf8]
mov qword[0x00c1d8a0],rdx
movups xmmword[0x00c1d8a8],xmm0
lea rax,[r13+0x10]
mov qword[rsp+0xf0],rax
jmp 0x6adae5
movdqu xmm0,xmmword[rsp+0x98]
mov qword[0x00c1d820],rdx
movups xmmword[0x00c1d828],xmm0
lea rax,[r13+0x10]
mov qword[rsp+0x90],rax
jmp 0x6ad8fd
movdqu xmm0,xmmword[rsp+0x198]
mov qword[0x00c1d840],rdx
movups xmmword[0x00c1d848],xmm0
lea rax,[r13+0x10]
mov qword[rsp+0x190],rax
jmp 0x6ae780
lea rcx,[0x00c1d8c0]
mov rdx,rsi
call fcn.00a2df10
mov rax,qword[rsp+0x1f0]
jmp 0x6ae39e
lea rcx,[0x00c1d8e0]
mov rdx,rsi
call fcn.00a2df10
mov rax,qword[rsp+0x210]
jmp 0x6ae484
lea rcx,[0x00c1d820]
mov rdx,r15
call fcn.00a2df10
mov rax,qword[rsp+0xd0]
jmp 0x6ad9c5
lea rcx,[0x00c1d880]
mov rdx,rbx
call fcn.00a2df10
mov rax,qword[rsp+0x250]
jmp 0x6ae2a2
lea rcx,[0x00c1d900]
mov rdx,rbx
call fcn.00a2df10
mov rax,qword[rsp+0x250]
jmp 0x6ae562
movzx ecx,word[rsp+0x290]
mov word[rax],cx
jmp 0x6adf04
movzx ecx,word[rsp+0x290]
mov word[rax],cx
jmp 0x6adbfc
lea rcx,[0x00c1d820]
mov rdx,r13
call fcn.00a2df10
mov rax,qword[rsp+0x90]
jmp 0x6ad8fd
lea rcx,[0x00c1d8a0]
mov rdx,r13
call fcn.00a2df10
mov rax,qword[rsp+0xf0]
jmp 0x6adae5
movdqu xmm0,xmmword[rsp+0x278]
mov qword[0x00c1d820],rdx
movups xmmword[0x00c1d828],xmm0
lea rax,[rsi+0x10]
mov qword[rsp+0x270],rax
jmp 0x6add4e
lea rcx,[0x00c1d8a0]
mov rdx,r13
call fcn.00a2df10
mov rax,qword[rsp+0x130]
jmp 0x6ade6e
lea rcx,[0x00c1d840]
mov rdx,r13
call fcn.00a2df10
mov rax,qword[rsp+0x190]
jmp 0x6ae780
mov r9,qword[rax+0x10]
mov r10,qword[rax+0x18]
mov qword[rsp+0x280],r9
mov qword[rsp+0x288],r10
jmp 0x6adcd0
mov r9,qword[rax+0x10]
mov r10,qword[rax+0x18]
mov qword[rsp+0x1a0],r9
mov qword[rsp+0x1a8],r10
jmp 0x6adfea
mov rcx,rdx
jmp 0x6ae6ce
lea rcx,[0x00c1d820]
mov rdx,rsi
call fcn.00a2df10
mov rax,qword[rsp+0x270]
jmp 0x6add4e
mov r9,qword[rsp+0x240]
mov r10,qword[rsp+0x248]
mov rdx,rax
mov qword[rsp+0x140],r9
mov qword[rsp+0x148],r10
jmp 0x6ae9e2
lea rdx,[rsp+0x58]
xor r8d,r8d
mov rcx,rsi
call fcn.00a30910
mov rdx,qword[rsp+0x58]
mov qword[rsp+0x270],rax
mov qword[rsp+0x280],rdx
mov r8,qword[rsp+0x38]
mov rdx,r13
mov rcx,rax
call sub.msvcrt.dll_memcpy
mov rdx,qword[rsp+0x58]
mov rax,qword[rsp+0x270]
jmp 0x6ae8d7
movzx ecx,word[r13]
mov word[rax],cx
jmp 0x6ae8d7
lea rcx,[0x00aba520]
call fcn.00a4f4e0
mov rbx,rax
mov rcx,qword[rsp+0x70]
add r12,0x10
cmp rcx,r12
je 0x6aee48
call fcn.00a5af30
mov rcx,rbx
call fcn.008da260
mov rcx,qword[rsp+0x250]
add rbx,0x10
mov rdi,rax
cmp rcx,rbx
je 0x6aee69
call fcn.00a5af30
mov rcx,qword[rsp+0x270]
add rsi,0x10
cmp rcx,rsi
je 0x6aee7f
call fcn.00a5af30
mov rbx,rdi
jmp 0x6aee35
lea rcx,[0x00aba6b5]
call fcn.00a4f830
lea rcx,[0x00aba6b5]
call fcn.00a4f830
mov rcx,qword[rsp+0xb0]
add r13,0x10
mov rbx,rax
cmp rcx,r13
je 0x6aee35
call fcn.00a5af30
jmp 0x6aee35
lea rcx,[0x00aba6b5]
call fcn.00a4f830
mov rcx,qword[rsp+0x250]
add rbx,0x10
mov rsi,rax
cmp rcx,rbx
je 0x6aeedf
call fcn.00a5af30
mov rcx,qword[rsp+0x230]
add rdi,0x10
cmp rcx,rdi
je 0x6aeef5
call fcn.00a5af30
mov rcx,rsi
call fcn.008da260
mov rcx,qword[rsp+0x90]
add r13,0x10
mov rbx,rax
cmp rcx,r13
jne 0x6aeeb0
jmp 0x6aee35
lea rcx,[0x00aba6b5]
call fcn.00a4f830
mov rcx,qword[rsp+0x250]
add rbx,0x10
mov rsi,rax
cmp rcx,rbx
je 0x6aef54
call fcn.00a5af30
mov rcx,qword[rsp+0x110]
add r13,0x10
cmp rcx,r13
je 0x6aef6a
call fcn.00a5af30
mov rbx,rsi
jmp 0x6aee35
mov r9,qword[rax+0x10]
mov r10,qword[rax+0x18]
mov qword[rsp+0x240],r9
mov qword[rsp+0x248],r10
jmp 0x6ae94f
lea rcx,[0x00aba6b5]
call fcn.00a4f830
mov rcx,qword[rsp+0x170]
add r13,0x10
mov rbx,rax
cmp rcx,r13
je 0x6aefd1
call fcn.00a5af30
mov rcx,qword[rsp+0x150]
lea rax,[rsp+0x160]
cmp rcx,rax
jne 0x6aeeb0
jmp 0x6aee35
mov rcx,qword[rsp+0x1b0]
add r13,0x10
cmp rcx,r13
jne 0x6aeeb0
jmp 0x6aee35
lea rcx,[0x00aba6b5]
call fcn.00a4f830
lea rcx,[0x00aba6b5]
call fcn.00a4f830
lea rcx,[0x00aba6b5]
call fcn.00a4f830
mov rcx,qword[rsp+0x250]
add rbx,0x10
mov rsi,rax
cmp rcx,rbx
jne 0x6aef65
jmp 0x6aef6a
call fcn.00a5af30
jmp 0x6af028
lea rcx,[0x00aba6b5]
call fcn.00a4f830
mov rcx,qword[rsp+0x210]
add rsi,0x10
mov rbx,rax
cmp rcx,rsi
jne 0x6af09c
jmp 0x6af028
{% endhighlight %}


[similar_1_ref]: /report/fcn.0042b730@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_2_ref]: /report/fcn.00656050@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_3_ref]: /report/fcn.005c0710@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_4_ref]: /report/fcn.005c9510@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_5_ref]: /report/fcn.0054f1a0@a5905e3c253c25bbaf727a1a18fe8ed1
[virustotal_ref]: https://www.virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1