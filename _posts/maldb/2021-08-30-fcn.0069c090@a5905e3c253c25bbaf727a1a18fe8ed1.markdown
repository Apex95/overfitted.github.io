---
layout: post
title:  "fcn.0069c090 @ a5905e3c253c25bbaf727a1a18fe8ed1"
date:   2021-08-30 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0069c090
- **Origin (md5):** a5905e3c253c25bbaf727a1a18fe8ed1
- **VirusTotal:** [virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1][virustotal_ref]

# Code Tags
<span class="tag" id="THREAD">THREAD</span>


# Similar Functions

1. [fcn.006b9e90][similar_1_ref] (sim.: 0.9608371111404436)
2. [fcn.00656050][similar_2_ref] (sim.: 0.9596365702129865)
3. [fcn.005c0710][similar_3_ref] (sim.: 0.9577374550870121)
4. [fcn.00618280][similar_4_ref] (sim.: 0.9548909595208486)
5. [fcn.005c9510][similar_5_ref] (sim.: 0.9544893443976519)


# Disassembled Code

{% highlight nasm %}
push r15
push r14
push r13
push r12
push rbp
push rdi
push rsi
push rbx
sub rsp,0x158
mov qword[rsp+0x1a8],rdx
mov rbp,rcx
mov rcx,qword[rsp+0x1a8]
xor edx,edx
mov r13d,r8d
lea rdi,[rsp+0xa0]
call fcn.006b5310
lea rcx,[rsp+0xb0]
mov rbx,qword[rax+8]
mov qword[rsp+0x40],rdi
mov qword[rsp+0xa0],rcx
mov rsi,qword[rax]
mov rax,rsi
add rax,rbx
setne dil
test rsi,rsi
sete al
and dil,al
je 0x69c105
lea rcx,[0x00ab95c0]
call fcn.00a4f4e0
cmp rbx,0xf
mov qword[rsp+0xe0],rbx
ja 0x69c390
cmp rbx,1
je 0x69c4b0
test rbx,rbx
mov rax,rcx
jne 0x69c3c0
mov qword[rsp+0xa8],rbx
mov byte[rax+rbx],0
mov rbx,qword[0x00a7d770]
mov rax,rbx
add rax,0xa0
mov qword[rsp+0x58],rax
je 0x69cc1a
call qword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
mov r12d,eax
lea rax,[rbx+0xa4]
mov rsi,rax
mov qword[rsp+0x48],rax
xor eax,eax
lock cmpxchg dword[rsi],eax
cmp r12d,eax
je 0x69c3e0
lea rsi,[rbx+0xa8]
mov r14d,dword[rbx+0xa8]
jmp 0x69c193
mov r14d,eax
mov edx,r14d
mov r8d,r14d
mov rcx,rsi
or edx,0x80000000
call fcn.008eebc0
cmp r14d,eax
jne 0x69c190
test r14d,r14d
js 0x69c8e0
mov rax,qword[rsp+0x48]
xchg dword[rax],r12d
mov dword[rbx+0xa0],1
mov rax,qword[rbp+0x170]
lea rsi,[rbp+0xc0]
mov rcx,rbx
mov r8,rsi
lea rdx,[rax+8]
call fcn.005ce8c0
mov rcx,rbx
mov r12,rax
call fcn.005d4e30
mov rdx,qword[rax]
mov r8,rsi
mov rcx,rbx
add rdx,8
call fcn.005ce8c0
test r13b,r13b
mov rsi,rax
jne 0x69c20f
mov rsi,r12
mov r12,rax
test rsi,rsi
je 0x69c225
lea rcx,[rsi+0x68]
call fcn.00693630
test al,al
jne 0x69c345
lea r13,[rsp+0xe0]
lea r14,[rsp+0xc0]
xor r8d,r8d
mov qword[rsp+0xc0],0x16
lea r15,[r13+0x10]
mov rdx,r14
mov rcx,r13
mov qword[rsp+0xe0],r15
call fcn.00a2dfc0
mov rdx,qword[rsp+0xc0]
movabs rcx,0x6168632e70706364
mov qword[rsp+0xe0],rax
test rsi,rsi
mov qword[rsp+0xf0],rdx
mov qword[rax],rcx
mov edx,0x4d50
movabs rcx,0x6f636e496e6f2e74
mov dword[rax+0x10],0x676e696d
mov word[rax+0x14],dx
mov qword[rax+8],rcx
mov rax,qword[rsp+0xc0]
mov rdx,qword[rsp+0xe0]
mov qword[rsp+0xe8],rax
mov byte[rdx+rax],0
mov rax,qword[0x00a7d790]
mov qword[rsp+0x50],rax
mov rax,qword[rsp+0xa0]
mov qword[rsp+0x60],rax
je 0x69c552
lea rax,[rsi+0x38]
mov rcx,r14
mov byte[rsp+0xc8],0
mov qword[rsp+0xc0],rax
call fcn.00943240
mov rax,qword[rsi]
mov rcx,rsi
call qword[rax+0x10]
mov qword[rsp+0x68],rax
mov rax,qword[rsp+0x50]
cmp byte[rax+0x118],0
je 0x69c402
cmp byte[rsp+0xc8],0
jne 0x69c3f0
mov rcx,qword[rsp+0xe0]
lea rax,[r13+0x10]
cmp rcx,rax
je 0x69c33c
call fcn.00a5af30
test dil,dil
je 0x69c575
mov eax,dword[rbx+0xa0]
sub eax,1
test eax,eax
mov dword[rbx+0xa0],eax
je 0x69c4d0
mov rax,qword[rsp+0x40]
mov rcx,qword[rsp+0xa0]
add rax,0x10
cmp rcx,rax
je 0x69c378
call fcn.00a5af30
nop
add rsp,0x158
pop rbx
pop rsi
pop rdi
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov rcx,qword[rsp+0x40]
lea rdx,[rsp+0xe0]
xor r8d,r8d
call fcn.00a2dfc0
mov rcx,rax
mov qword[rsp+0xa0],rax
mov rax,qword[rsp+0xe0]
mov qword[rsp+0xb0],rax
mov r8,rbx
mov rdx,rsi
call sub.msvcrt.dll_memcpy
mov rbx,qword[rsp+0xe0]
mov rax,qword[rsp+0xa0]
jmp 0x69c12d
add dword[rbx+0xa0],1
jmp 0x69c1c7
mov rcx,qword[rsp+0xc0]
call fcn.00962120
jmp 0x69c326
mov r15,qword[rax+0x68]
lea rdi,[rax+0x60]
mov r10,rdi
mov qword[rsp+0x70],rdi
test r15,r15
je 0x69c8bd
mov rax,qword[rsp+0xe0]
mov r9,qword[rsp+0xe8]
mov qword[rsp+0x78],rbx
mov qword[rsp+0x80],rsi
mov rsi,r10
mov qword[rsp+0x1a0],rbp
mov qword[rsp+0x88],rax
mov rdi,rax
mov rbx,r9
jmp 0x69c477
mov rcx,qword[r15+0x20]
mov rdx,rdi
call sub.msvcrt.dll_memcmp
test eax,eax
je 0x69c48a
test eax,eax
js 0x69c4c2
mov rsi,r15
mov r15,qword[r15+0x10]
test r15,r15
je 0x69c860
mov rbp,qword[r15+0x28]
mov r8,rbx
cmp rbp,rbx
cmovbe r8,rbp
test r8,r8
jne 0x69c453
mov r11,rbp
sub r11,rbx
cmp r11,0x7fffffff
jg 0x69c467
cmp r11,0xffffffff80000000
jl 0x69c4c2
mov eax,r11d
jmp 0x69c463
movzx eax,byte[rsi]
mov byte[rsp+0xb0],al
mov rax,rcx
jmp 0x69c12d
mov r15,qword[r15+0x18]
jmp 0x69c46e
mov rdi,qword[rsp+0x48]
xchg dword[rdi],eax
mov eax,0x80000000
lea rdi,[rbx+0xa8]
lock xadd dword[rdi],eax
test eax,0x40000000
jne 0x69c35c
cmp eax,0x80000000
je 0x69c35c
mov esi,dword[rbx+0xa8]
jmp 0x69c507
mov esi,eax
mov edx,esi
mov r8d,esi
mov rcx,rdi
or edx,0x40000000
call fcn.008eebc0
cmp esi,eax
jne 0x69c505
and esi,0x40000000
jne 0x69c35c
add rbx,0xb0
xor eax,eax
lock cmpxchg qword[rbx],rax
test rax,rax
mov rsi,rax
je 0x69cb83
mov rcx,rsi
call qword[sym.imp.KERNEL32.dll_SetEvent]
jmp 0x69c35c
mov rax,qword[rsp+0x50]
cmp byte[rax+0x118],0
je 0x69c9f9
mov rcx,qword[rsp+0xe0]
cmp rcx,r15
jne 0x69c337
mov rcx,qword[rsp+0x1a8]
lea rax,[r14+0x10]
lea rdx,[0x00ab96c6]
mov r9,r14
mov r8d,1
mov qword[rsp+0xc8],0
mov qword[rsp+0xc0],rax
mov byte[rsp+0xd0],0
xor ebx,ebx
call fcn.006b5340
test al,al
jne 0x69cb2f
mov rcx,qword[rsp+0x1a8]
lea rdx,[0x00ab96c9]
mov r8d,1
lea rdi,[0x009375c0]
call fcn.006b5540
mov rdx,qword[rsp+0x40]
movzx eax,al
mov r8,rsi
mov r9,r12
mov qword[rsp+0x30],rbx
mov dword[rsp+0x28],eax
mov qword[rsp+0x20],rsi
mov rcx,r13
call fcn.005c2f60
lea rax,[rbp+0x98]
lea rcx,[rsp+0x90]
mov byte[rsp+0x98],0
mov qword[rsp+0x90],rax
call fcn.00943240
lea rdx,[rbp+0x68]
lea rcx,[rbp+0x80]
call fcn.00a219b0
mov rsi,qword[rbp+0x88]
mov rbx,qword[rbp+0x80]
cmp rbx,rsi
jne 0x69c659
jmp 0x69c674
add rbx,8
cmp rsi,rbx
je 0x69c674
mov rcx,qword[rbx]
mov rax,qword[rcx]
mov rax,qword[rax+0x60]
cmp rax,rdi
je 0x69c650
mov r9,r13
mov r8,rbp
xor edx,edx
call rax
jmp 0x69c650
cmp byte[rsp+0x98],0
je 0x69c68b
mov rcx,qword[rsp+0x90]
call fcn.00962120
mov r12,qword[rsp+0x130]
test r12,r12
je 0x69c709
mov eax,1
mov esi,0xffffffff
lock xadd dword[r12],esi
sub esi,eax
jne 0x69c709
mov rdi,qword[sym.imp.KERNEL32.dll_Sleep]
mov rbx,qword[0x00b3d090]
mov r15d,1
mov rbp,rdi
jmp 0x69c6c8
add esi,1
mov eax,r15d
xchg dword[rbx],eax
test eax,eax
je 0x69c6f1
cmp esi,3
jbe 0x69c6c5
cmp esi,0xf
jbe 0x69ca9a
cmp esi,0x1f
jbe 0x69cb45
mov ecx,1
call rdi
jmp 0x69c6c5
mov rax,qword[0x00a7d6e0]
mov qword[r12],rax
mov qword[0x00a7d6e0],r12
mov dword[rbx],0
mov r12,qword[rsp+0x128]
test r12,r12
je 0x69c787
mov eax,1
mov esi,0xffffffff
lock xadd dword[r12],esi
sub esi,eax
jne 0x69c787
mov rdi,qword[sym.imp.KERNEL32.dll_Sleep]
mov rbx,qword[0x00b3d090]
mov r15d,1
mov rbp,rdi
jmp 0x69c746
add esi,1
mov eax,r15d
xchg dword[rbx],eax
test eax,eax
je 0x69c76f
cmp esi,3
jbe 0x69c743
cmp esi,0xf
jbe 0x69caa1
cmp esi,0x1f
jbe 0x69cb4e
mov ecx,1
call rdi
jmp 0x69c743
mov rax,qword[0x00a7d6e0]
mov qword[r12],rax
mov qword[0x00a7d6e0],r12
mov dword[rbx],0
mov r12,qword[rsp+0x120]
test r12,r12
je 0x69c805
mov eax,1
mov esi,0xffffffff
lock xadd dword[r12],esi
sub esi,eax
jne 0x69c805
mov rdi,qword[sym.imp.KERNEL32.dll_Sleep]
mov rbx,qword[0x00b3d090]
mov r15d,1
mov rbp,rdi
jmp 0x69c7c4
add esi,1
mov eax,r15d
xchg dword[rbx],eax
test eax,eax
je 0x69c7ed
cmp esi,3
jbe 0x69c7c1
cmp esi,0xf
jbe 0x69caa8
cmp esi,0x1f
jbe 0x69cb57
mov ecx,1
call rdi
jmp 0x69c7c1
mov rax,qword[0x00a7d6e0]
mov qword[r12],rax
mov qword[0x00a7d6e0],r12
mov dword[rbx],0
mov rcx,qword[rsp+0x100]
lea rax,[r13+0x30]
cmp rcx,rax
je 0x69c81b
call fcn.00a5af30
mov rcx,qword[rsp+0xe0]
add r13,0x10
cmp rcx,r13
je 0x69c831
call fcn.00a5af30
mov rcx,qword[rsp+0xc0]
add r14,0x10
cmp rcx,r14
je 0x69c847
call fcn.00a5af30
mov rcx,qword[rsp+0x58]
call fcn.00962120
jmp 0x69c35c
mov r10,rsi
cmp qword[rsp+0x70],r10
mov r9,rbx
mov rsi,qword[rsp+0x80]
mov rbx,qword[rsp+0x78]
mov rbp,qword[rsp+0x1a0]
je 0x69c8bd
mov rdi,qword[r10+0x28]
mov r8,r9
cmp rdi,r9
cmovbe r8,rdi
test r8,r8
jne 0x69c9b7
sub r9,rdi
cmp r9,0x7fffffff
jg 0x69c8bd
cmp r9,0xffffffff80000000
jl 0x69cc10
mov eax,r9d
test eax,eax
cmovs r10,qword[rsp+0x70]
mov rdx,qword[r10+0x40]
mov r9,qword[rsp+0x60]
mov r8,qword[rsp+0x68]
mov rcx,qword[rsp+0x50]
call fcn.00634180
mov edi,eax
jmp 0x69c318
mov edx,dword[rbx+0xa8]
jmp 0x69c8f2
mov edx,eax
lea eax,[rdx+1]
mov r14d,edx
or r14d,0x80000000
test edx,edx
cmovs r14d,eax
mov eax,edx
lock cmpxchg dword[rsi],r14d
cmp eax,edx
jne 0x69c8f0
shr edx,0x1f
test dl,dl
je 0x69c1b5
mov eax,r14d
shr eax,0x1f
test al,al
je 0x69c1b5
lea r11,[rbx+0xb0]
xor eax,eax
lock cmpxchg qword[r11],rax
test rax,rax
mov r15,rax
mov rcx,rax
je 0x69cbbe
mov r15,qword[sym.imp.KERNEL32.dll_WaitForSingleObjectEx]
mov qword[rsp+0x50],rbx
mov rbx,rsi
mov rsi,rcx
nop dword[rax+rax]
xor r8d,r8d
mov edx,0xffffffff
mov rcx,rsi
call r15
mov edx,r14d
and edx,0x7fffffff
or edx,0x40000000
test edx,edx
js 0x69c9a0
lea ecx,[rdx-1]
mov eax,edx
and ecx,0x3fffffff
or ecx,0x80000000
lock cmpxchg dword[rbx],ecx
cmp eax,edx
je 0x69c9ef
mov edx,eax
test edx,edx
jns 0x69c981
mov ecx,edx
mov eax,edx
and ecx,0xbfffffff
lock cmpxchg dword[rbx],ecx
cmp eax,edx
jne 0x69c99a
mov r14d,eax
jmp 0x69c960
mov rdx,qword[r10+0x20]
mov rcx,qword[rsp+0x88]
mov qword[rsp+0x80],r9
mov qword[rsp+0x78],r10
call sub.msvcrt.dll_memcmp
test eax,eax
mov r10,qword[rsp+0x78]
mov r9,qword[rsp+0x80]
jne 0x69c8b5
jmp 0x69c899
mov rbx,qword[rsp+0x50]
jmp 0x69c1b5
mov rdi,rax
add rax,0x60
mov r15,qword[rdi+0x68]
mov qword[rsp+0x68],rax
test r15,r15
je 0x69cb7e
mov r9,qword[rsp+0xe8]
mov rdi,qword[rsp+0xe0]
mov qword[rsp+0x70],rbx
mov qword[rsp+0x78],rsi
mov rsi,rax
mov qword[rsp+0x1a0],rbp
mov qword[rsp+0x80],rdi
mov rbx,r9
jmp 0x69ca64
mov rcx,qword[r15+0x20]
mov rdx,rdi
call sub.msvcrt.dll_memcmp
test eax,eax
je 0x69ca77
test eax,eax
js 0x69ca94
mov rsi,r15
mov r15,qword[r15+0x10]
test r15,r15
je 0x69caaf
mov rbp,qword[r15+0x28]
cmp rbx,rbp
mov r8,rbp
cmovbe r8,rbx
test r8,r8
jne 0x69ca44
mov r11,rbp
sub r11,rbx
cmp r11,0x7fffffff
jg 0x69ca58
cmp r11,0xffffffff80000000
jl 0x69ca94
mov eax,r11d
jmp 0x69ca54
mov r15,qword[r15+0x18]
jmp 0x69ca5f
pause
jmp 0x69c6c5
pause
jmp 0x69c743
pause
jmp 0x69c7c1
mov r10,rsi
cmp qword[rsp+0x68],r10
mov r9,rbx
mov rsi,qword[rsp+0x78]
mov rbx,qword[rsp+0x70]
mov rbp,qword[rsp+0x1a0]
je 0x69cb12
mov rdi,qword[r10+0x28]
cmp r9,rdi
mov r8,rdi
cmovbe r8,r9
test r8,r8
je 0x69cb60
mov rdx,qword[r10+0x20]
mov rcx,qword[rsp+0x80]
mov qword[rsp+0x78],r9
mov qword[rsp+0x70],r10
call sub.msvcrt.dll_memcmp
test eax,eax
mov r10,qword[rsp+0x70]
mov r9,qword[rsp+0x78]
je 0x69cb60
test eax,eax
cmovs r10,qword[rsp+0x68]
mov rdx,qword[r10+0x40]
mov r9,qword[rsp+0x60]
xor r8d,r8d
mov rcx,qword[rsp+0x50]
call fcn.00634180
mov edi,eax
jmp 0x69c326
mov rcx,qword[rsp+0xc0]
call qword[sym.imp.msvcrt.dll__atoi64]
mov rbx,rax
jmp 0x69c5bc
xor ecx,ecx
call rbp
jmp 0x69c6c5
xor ecx,ecx
call rbp
jmp 0x69c743
xor ecx,ecx
call rbp
jmp 0x69c7c1
sub r9,rdi
cmp r9,0x7fffffff
jg 0x69cb12
cmp r9,0xffffffff80000000
jl 0x69cc06
mov eax,r9d
jmp 0x69cb0a
mov r10,rax
jmp 0x69cb12
xor ecx,ecx
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
je 0x69cca7
mov rax,rsi
lock cmpxchg qword[rbx],rcx
test rax,rax
mov rsi,rax
je 0x69cc9f
call qword[sym.imp.KERNEL32.dll_CloseHandle]
jmp 0x69c544
xor ecx,ecx
mov qword[rsp+0x50],r11
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
mov r11,qword[rsp+0x50]
je 0x69cd2c
mov rax,r15
lock cmpxchg qword[r11],rcx
test rax,rax
mov r15,rax
je 0x69c946
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rcx,r15
jmp 0x69c946
mov r10,qword[rsp+0x68]
jmp 0x69cb12
mov r10,qword[rsp+0x70]
jmp 0x69c8bd
lea rbx,[rsp+0xe0]
call fcn.006ea660
lea rdx,[0x00ab9658]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0xf0],1
mov qword[rsp+0xf8],rsi
mov qword[rsp+0x108],0
mov qword[rsp+0x100],rax
lea rax,[0x00b714e0]
mov byte[rsp+0x110],0
mov qword[rsp+0xe0],rax
call fcn.009472d0
lea rax,[0x00b72450]
mov rcx,rbx
mov qword[rsp+0xe0],rax
call fcn.00962490
call fcn.00a55e20
mov rsi,rcx
jmp 0x69c544
lea rbx,[rsp+0xe0]
call fcn.006ea660
lea rdx,[0x00ab95ea]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0xf0],0xb
mov qword[rsp+0xf8],rsi
mov qword[rsp+0x108],0
mov qword[rsp+0x100],rax
lea rax,[0x00b72480]
mov byte[rsp+0x110],0
mov qword[rsp+0xe0],rax
call fcn.00947760
cmp byte[rsp+0xc8],0
je 0x69cc9a
mov rcx,qword[rsp+0xc0]
call fcn.00962120
jmp 0x69cc9a
lea rbx,[rsp+0xe0]
call fcn.006ea660
lea rdx,[0x00ab95ea]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0xf0],0xb
mov qword[rsp+0xf8],rsi
mov qword[rsp+0x108],0
mov qword[rsp+0x100],rax
lea rax,[0x00b72480]
mov byte[rsp+0x110],0
mov qword[rsp+0xe0],rax
call fcn.00947760
jmp 0x69cc83
{% endhighlight %}


[similar_1_ref]: /report/fcn.006b9e90@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_2_ref]: /report/fcn.00656050@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_3_ref]: /report/fcn.005c0710@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_4_ref]: /report/fcn.00618280@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_5_ref]: /report/fcn.005c9510@a5905e3c253c25bbaf727a1a18fe8ed1
[virustotal_ref]: https://www.virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1