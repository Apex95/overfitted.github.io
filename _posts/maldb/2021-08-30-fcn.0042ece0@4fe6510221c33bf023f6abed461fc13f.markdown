---
layout: post
title:  "fcn.0042ece0 @ 4fe6510221c33bf023f6abed461fc13f"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0042ece0
- **Origin (md5):** 4fe6510221c33bf023f6abed461fc13f
- **VirusTotal:** [virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f][virustotal_ref]

# Code Tags
<span class="tag" id="PROCESS">PROCESS</span>
<span class="tag" id="LINKING">LINKING</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.0042ece0@4fe6510221c33bf023f6abed461fc13f">fcn.0042ece0</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
mov eax, 0x15b8
call fcn.00498540
mov eax, dword[ebp+0x1c]
mov ecx, dword[ebp+0x28]
push ebx
mov ebx, dword[ebp+0x10]
push esi
mov esi, dword[ebp+0xc]
push edi
mov edi, edx
xor edx, edx
cmp eax, edx
jne off.b39
lea eax, [ebp-0x30]
mov dword[ebp-0x18], eax
mov dword[eax], edx
cmp ecx, edx
je off.b55
call fcn.00413110
xor edx, edx
cmp edi, edx
je off.b1030
cmp word[edi], dx
je off.b1030
cmp ebx, edx
je off.b84
cmp word[ebx], dx
jne off.b84
mov dword[ebp+0x10], edx
mov dword[ebp-0x14], edx
mov dword[ebp-0x10], edi
mov dword[ebp-0xc], edx
cmp esi, edx
je off.b224
push str.find
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
je off.b213
push str.explore
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
je off.b213
push str.open
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
je off.b213
push str.edit
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
je off.b213
push str.print_
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
je off.b213
push str.properties
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
je off.b213
mov dword[ebp-0xc], esi
jmp off.b413
mov dword[ebp-0x14], edi
mov dword[ebp-0x10], esi
jmp off.b413
mov ebx, 0x4a352c
mov eax, edi
call fcn.004095d0
test eax, eax
je off.b413
sub eax, edi
sar eax, 1
lea ebx, [eax+eax]
lea eax, [ebx+2]
call fcn.00494320
mov eax, esp
push ebx
push edi
push eax
call fcn.004950d0
mov esi, eax
xor eax, eax
add esp, 0xc
mov word[ebx+esi], ax
cmp word[esi], 0x2a
jne off.b291
add esi, 2
jmp off.b399
push str.find
push esi
call fcn.0048cd49
add esp, 8
test eax, eax
je off.b399
push str.explore
push esi
call fcn.0048cd49
add esp, 8
test eax, eax
je off.b399
push str.open
push esi
call fcn.0048cd49
add esp, 8
test eax, eax
je off.b399
push str.edit
push esi
call fcn.0048cd49
add esp, 8
test eax, eax
je off.b399
push str.print_
push esi
call fcn.0048cd49
add esp, 8
test eax, eax
je off.b399
push str.properties
push esi
call fcn.0048cd49
add esp, 8
test eax, eax
jne off.b413
mov dword[ebp-0x14], esi
test esi, esi
je off.b413
lea ecx, [ebx+edi+2]
mov dword[ebp-0x10], ecx
xor edx, edx
push 0x3fe
push edx
lea eax, [ebp-0x5b2]
push eax
mov byte[ebp-5], 0
mov word[ebp-0x5b4], dx
call fcn.00495c20
mov esi, dword[ebp+8]
add esp, 0xc
cmp byte[ebp+0x24], 0
je off.b553
mov eax, dword[esi+0xaec]
test eax, eax
je off.b472
cmp dword[eax+8], 0
jne off.b503
mov eax, dword[esi+0xaf8]
test eax, eax
je off.b488
cmp dword[eax+8], 0
jne off.b503
lea eax, [esi+0xb00]
call fcn.0042f440
test al, al
jne off.b553
cmp dword[ebp-0x14], 0
mov byte[ebp+0x27], 1
je off.b557
cmp byte[ebp+0x14], 0
je off.b536
push 0x4ab02c
push str.System_verbs_unsupported_with_RunAs.
mov ecx, esi
call fcn.0042e1d0
xor eax, eax
lea esp, [ebp-0x15c4]
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 0x24
mov byte[ebp+0x27], 0
mov eax, dword[ebp-0x10]
lea edx, [eax+2]
mov cx, word[eax]
add eax, 2
test cx, cx
jne off.b563
sub eax, edx
sar eax, 1
mov dword[ebp-0x1c], eax
cmp eax, 0x4001
jb off.b627
cmp byte[ebp+0x14], cl
je off.b610
push 0x4ab02c
push str.String_too_long.
mov ecx, esi
call fcn.0042e1d0
xor eax, eax
lea esp, [ebp-0x15c4]
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 0x24
cmp dword[ebp-0x14], 0
jne off.b1144
push 0x40
lea ecx, [ebp-0xb0]
push 0
push ecx
call fcn.00495c20
mov eax, dword[ebp+0x18]
add esp, 0xc
mov dword[ebp-0xb4], 0x44
mov dword[ebp-0x88], 1
test eax, eax
je off.b705
cmp word[eax], 0
je off.b705
mov esi, eax
call fcn.004149d0
mov word[ebp-0x84], ax
jmp off.b717
mov edx, 1
mov word[ebp-0x84], dx
mov ebx, dword[ebp+0xc]
xor eax, eax
mov dword[ebp-0x2c], 0
mov dword[ebp-0x28], eax
mov dword[ebp-0x24], eax
mov dword[ebp-0x20], eax
test ebx, ebx
je off.b799
cmp word[ebx], ax
je off.b799
mov eax, ebx
lea edx, [eax+2]
mov cx, word[eax]
add eax, 2
test cx, cx
jne off.b752
sub eax, edx
sar eax, 1
add eax, dword[ebp-0x1c]
lea eax, [eax+eax+0x14]
call fcn.00494320
mov esi, esp
push ebx
push edi
push str._s__s
push esi
call fcn.0048d153
add esp, 0x10
jmp off.b834
mov eax, dword[ebp-0x1c]
lea eax, [eax+eax+2]
call fcn.00494320
mov esi, esp
mov edx, esi
mov eax, edi
sub edx, edi
movzx ecx, word[eax]
mov word[eax+edx], cx
add eax, 2
test cx, cx
jne off.b819
cmp byte[ebp+0x27], 0
je off.b913
mov eax, dword[ebp-0x18]
lea edx, [ebp-0x5b4]
push edx
push eax
mov eax, dword[ebp+0x28]
lea ecx, [ebp-5]
push ecx
mov ecx, dword[ebp-0x84]
lea edx, [ebp-0x2c]
push edx
mov edx, dword[ebp+0x20]
push eax
mov eax, dword[ebp+8]
push ecx
mov cl, byte[ebp+0x14]
push edx
mov edx, dword[ebp+0x10]
push esi
push eax
call fcn.00450ef0
test eax, eax
jne off.b1134
lea esp, [ebp-0x15c4]
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 0x24
mov eax, dword[ebp+0x10]
lea ecx, [ebp-0x2c]
push ecx
lea edx, [ebp-0xb4]
push edx
push eax
push 0
push 0
push 0
push 0
push 0
push esi
push 0
call dword[sym.imp.KERNEL32.dll_CreateProcessW]
test eax, eax
je off.b1050
mov eax, dword[ebp-0x28]
test eax, eax
je off.b965
push eax
call dword[sym.imp.KERNEL32.dll_CloseHandle]
mov eax, dword[ebp+0x28]
mov ecx, dword[ebp-0x2c]
mov edx, dword[ebp-0x18]
mov dword[edx], ecx
test eax, eax
je off.b989
push eax
mov eax, dword[ebp-0x24]
call fcn.00401200
cmp byte[ebp+0x20], 0
je off.b1008
mov ecx, dword[0x4c28ec]
mov dword[ecx+0x30], 0
cmp dword[ebp+0x1c], 0
jne off.b1030
mov edx, dword[ebp-0x18]
mov eax, dword[edx]
test eax, eax
je off.b1030
push eax
call dword[sym.imp.KERNEL32.dll_CloseHandle]
mov eax, 1
lea esp, [ebp-0x15c4]
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 0x24
mov eax, dword[ebp+0x20]
push eax
mov eax, 0x200
lea esi, [ebp-0x5b4]
call fcn.004749b0
add esp, 4
push 0x38
lea edx, [ebp-0x68]
push 0
push edx
call fcn.00495c20
mov eax, dword[ebp+0x10]
mov dword[ebp-0x54], eax
mov eax, dword[ebp+0x18]
add esp, 0xc
mov dword[ebp-0x6c], 0x3c
mov dword[ebp-0x68], 0x440
test eax, eax
je off.b1193
cmp word[eax], 0
je off.b1193
mov esi, eax
call fcn.004149d0
mov dword[ebp-0x50], eax
jmp off.b1200
cmp byte[ebp-5], 0
jne off.b989
cmp byte[ebp+0x27], 0
je off.b1073
cmp byte[ebp+0x14], 0
je off.b1176
lea ecx, [ebp-0x5b4]
push ecx
mov ecx, dword[ebp+8]
push str.Launch_Error__possibly_related_to_RunAs_.
call fcn.0042e1d0
xor eax, eax
lea esp, [ebp-0x15c4]
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 0x24
mov dword[ebp-0x50], 1
mov eax, dword[ebp-0x14]
test eax, eax
je off.b1232
push str.properties
push eax
mov dword[ebp-0x60], eax
call fcn.0048cd49
add esp, 8
test eax, eax
jne off.b1232
or dword[ebp-0x68], 0xc
cmp dword[ebp-0xc], 0
jne off.b1526
mov eax, dword[ebp-0x1c]
lea eax, [eax+eax+2]
call fcn.00494320
mov eax, dword[ebp-0x10]
mov edi, esp
mov edx, edi
sub edx, eax
nop
movzx ecx, word[eax]
mov word[eax+edx], cx
add eax, 2
test cx, cx
jne off.b1264
cmp word[edi], 0x22
jne off.b1345
lea esi, [edi+2]
push 0x22
push esi
call fcn.0048db21
add esp, 8
test eax, eax
je off.b1345
xor ecx, ecx
mov word[eax], cx
add eax, 2
mov dword[ebp-0x10], esi
cmp word[eax], cx
je off.b1526
cmp word[eax], 0x20
mov dword[ebp-0xc], eax
jne off.b1526
add dword[ebp-0xc], 2
jmp off.b1526
mov eax, dword[ebp+0x10]
test eax, eax
je off.b1359
push eax
call dword[sym.imp.KERNEL32.dll_SetCurrentDirectoryW]
lea edx, [edi+2]
push 0x20
push edx
call fcn.0048db21
mov ebx, eax
add esp, 8
test ebx, ebx
je off.b1509
lea esi, [ebx-2]
cmp esi, edi
jbe off.b1420
mov edi, edi
movzx eax, word[esi]
push eax
push 0x4a874c
call fcn.0048db21
add esp, 8
test eax, eax
jne off.b1420
sub esi, 2
cmp esi, edi
ja off.b1392
cmp word[esi], 0x2e
jne off.b1478
mov edx, ebx
sub edx, esi
xor ecx, ecx
and edx, 0xfffffffe
mov word[ebx], cx
cmp edx, 8
jne off.b1459
mov eax, esi
mov ecx, str..exe.bat.com.cmd.hta
call fcn.00473c80
test eax, eax
jne off.b1500
push edi
call dword[sym.imp.KERNEL32.dll_GetFileAttributesW]
test al, 0x10
je off.b1500
mov eax, 0x20
mov word[ebx], ax
push 0x20
add ebx, 2
push ebx
call fcn.0048db21
mov ebx, eax
add esp, 8
test ebx, ebx
jne off.b1383
jmp off.b1509
add ebx, 2
mov dword[ebp-0x10], edi
mov dword[ebp-0xc], ebx
cmp dword[ebp+0x10], 0
je off.b1526
push 0x4c6cb8
call dword[sym.imp.KERNEL32.dll_SetCurrentDirectoryW]
mov ecx, dword[ebp-0x10]
mov edx, dword[ebp-0xc]
lea eax, [ebp-0x6c]
push eax
mov dword[ebp-0x5c], ecx
mov dword[ebp-0x58], edx
call dword[sym.imp.SHELL32.dll_ShellExecuteExW]
test eax, eax
je off.b1649
test byte[0x4c9e34], 1
jne off.b1598
or dword[0x4c9e34], 1
push str.GetProcessId
push str.kernel32.dll
call dword[sym.imp.KERNEL32.dll_GetModuleHandleW]
push eax
call dword[sym.imp.KERNEL32.dll_GetProcAddress]
mov dword[0x4c9e30], eax
jmp off.b1603
mov eax, dword[0x4c9e30]
mov ecx, dword[ebp-0x34]
mov edx, dword[ebp-0x18]
mov dword[edx], ecx
test ecx, ecx
je off.b989
cmp dword[ebp+0x28], 0
je off.b989
test eax, eax
je off.b989
push ecx
call eax
mov ecx, dword[ebp+0x28]
push ecx
jmp off.b984
mov edx, dword[ebp+0x20]
push edx
mov eax, 0x200
lea esi, [ebp-0x5b4]
call fcn.004749b0
add esp, 4
cmp byte[ebp+0x14], 0
je off.b1867
mov eax, dword[ebp-0x14]
test eax, eax
je off.b1716
push eax
push str._nVerb:___s_
mov esi, 0x80
lea edi, [ebp-0x1b4]
call fcn.004738d0
add esp, 8
jmp off.b1725
xor eax, eax
mov word[ebp-0x1b4], ax
cmp dword[ebp-0xc], 0
mov esi, 0x4ab02c
jne off.b1739
mov dword[ebp-0xc], esi
mov ebx, dword[ebp-0xc]
mov eax, ebx
lea edx, [eax+2]
mov cx, word[eax]
add eax, 2
test cx, cx
jne off.b1747
sub eax, edx
sar eax, 1
cmp eax, 0x190
jbe off.b1774
mov esi, 0x4a4700
mov edi, dword[ebp-0x10]
mov eax, edi
lea edx, [eax+2]
mov cx, word[eax]
add eax, 2
test cx, cx
jne off.b1782
sub eax, edx
sar eax, 1
cmp eax, 0x190
mov eax, 0x4a4700
ja off.b1814
mov eax, 0x4ab02c
push esi
push ebx
lea ecx, [ebp-0x1b4]
push ecx
push eax
push edi
push str.Failed_attempt_to_launch_program_or_document:_nAction:____0.400s_s__s_nParams:____0.400s_s_
mov esi, 0x800
lea edi, [ebp-0x15b4]
call fcn.004738d0
mov ecx, dword[ebp+8]
add esp, 0x18
lea edx, [ebp-0x5b4]
push edx
mov eax, edi
push eax
call fcn.0042e1d0
xor eax, eax
lea esp, [ebp-0x15c4]
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 0x24

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f