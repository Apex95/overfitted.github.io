---
layout: post
title:  "fcn.64127fd0 @ 07e4412910bcf0f5969ef64c44eecb2d"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.64127fd0
- **Origin (md5):** 07e4412910bcf0f5969ef64c44eecb2d
- **VirusTotal:** [virustotal.com/gui/file/07e4412910bcf0f5969ef64c44eecb2d][virustotal_ref]

# Code Tags
<span class="tag" id="PROCESS">PROCESS</span>
<span class="tag" id="LINKING">LINKING</span>
<span class="tag" id="CRYPTO">CRYPTO</span>
<span class="tag" id="SCREEN">SCREEN</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [2933.982666015625, 3875.34130859375, '<b><a href="/report/fcn.64127fd0@07e4412910bcf0f5969ef64c44eecb2d">fcn.64127fd0</a><br>@07e4412910bcf0f5969ef64c44eecb2d</b><br>push ebp<br>lea ebp, [esp-0x3e0]<br>mov eax, 0x3e0<br>call fcn.64142a00<br>push 0xfffffffffffffffe<br>push 0x641929d8<br>push 0x641435c4<br>mov eax, dword<br>push eax<br>sub esp, 8<br>mov eax, 0x70<br>call fcn.64142a00<br>mov eax, dword[0x641b8950]<br>xor dword[ebp-8], eax<br>xor eax, ebp<br>mov dword[ebp+0x3dc], eax<br>push ebx<br>push esi<br>push edi<br>push eax<br>lea eax, [ebp-0x10]<br>mov dword<br>mov dword[ebp-0x18], esp<br>mov dword[ebp-0x30], 0<br>xor edi, edi<br>mov dword[ebp-0x50], edi<br>push str.ADVAPI32.DLL<br>mov ebx, dword[sym.imp.KERNEL32.dll_LoadLibraryA]<br>call ebx<br>mov esi, eax<br>push str.KERNEL32.DLL<br>call ebx<br>mov dword[ebp-0x20], eax<br>push str.NETAPI32.DLL<br>call ebx<br>mov dword[ebp-0x40], eax<br>xor ecx, ecx<br>mov dword[ebp-0x2c], ecx<br>mov dword[ebp-0x24], ecx<br>mov dword[ebp-0x28], ecx<br>mov dword[ebp-0x38], ecx<br>xor edx, edx<br>mov dword[ebp-0x34], edx<br>mov ebx, dword[sym.imp.KERNEL32.dll_GetProcAddress]<br>test eax, eax<br>je 0x6412808b<br>push str.NetStatisticsGet<br>push eax<br>call ebx<br>mov dword[ebp-0x38], eax<br>push str.NetApiBufferFree<br>push dword[ebp-0x40]<br>call ebx<br>mov edx, eax<br>mov dword[ebp-0x34], edx<br>mov ecx, dword[ebp-0x38]<br>test ecx, ecx<br>je 0x64128113<br>test edx, edx<br>je 0x64128113<br>lea eax, [ebp-0x1c]<br>push eax<br>push 0<br>push 0<br>push str.LanmanWorkstation<br>push 0<br>call ecx<br>test eax, eax<br>jne 0x641280d5<br>mov eax, 8<br>call fcn.64142a00<br>fld qword[0x6418a598]<br>fstp qword[esp]<br>push 0xd8<br>push dword[ebp-0x1c]<br>call fcn.640e3af0<br>add esp, 0x10<br>push dword[ebp-0x1c]<br>call dword[ebp-0x34]<br>lea eax, [ebp-0x1c]<br>push eax<br>push 0<br>push 0<br>push str.LanmanServer<br>push 0<br>mov eax, dword[ebp-0x38]<br>call eax<br>test eax, eax<br>jne 0x64128113<br>mov eax, 8<br>call fcn.64142a00<br>fld qword[0x6418a590]<br>fstp qword[esp]<br>push 0x44<br>push dword[ebp-0x1c]<br>call fcn.640e3af0<br>add esp, 0x10<br>push dword[ebp-0x1c]<br>call dword[ebp-0x34]<br>mov eax, dword[ebp-0x40]<br>test eax, eax<br>je 0x64128121<br>push eax<br>call dword[sym.imp.KERNEL32.dll_FreeLibrary]<br>test esi, esi<br>je 0x6412814a<br>push str.CryptAcquireContextW<br>push esi<br>call ebx<br>mov dword[ebp-0x2c], eax<br>push str.CryptGenRandom<br>push esi<br>call ebx<br>mov dword[ebp-0x24], eax<br>push str.CryptReleaseContext<br>push esi<br>call ebx<br>mov ecx, eax<br>mov dword[ebp-0x28], ecx<br>jmp 0x6412814c<br>xor ecx, ecx<br>mov eax, dword[ebp-0x2c]<br>test eax, eax<br>je 0x6412821f<br>cmp dword[ebp-0x24], edi<br>je 0x6412821f<br>test ecx, ecx<br>je 0x6412821f<br>push 0xf0000000<br>push 1<br>push 0<br>push 0<br>lea ecx, [ebp-0x30]<br>push ecx<br>call eax<br>test eax, eax<br>je 0x641281c0<br>lea eax, [ebp+0x39c]<br>push eax<br>push 0x40<br>push dword[ebp-0x30]<br>call dword[ebp-0x24]<br>test eax, eax<br>je 0x641281b8<br>mov eax, 8<br>call fcn.64142a00<br>fldz <br>fstp qword[esp]<br>push 0x40<br>lea eax, [ebp+0x39c]<br>push eax<br>call fcn.640e3af0<br>add esp, 0x10<br>mov edi, 1<br>mov dword[ebp-0x50], edi<br>push 0<br>push dword[ebp-0x30]<br>call dword[ebp-0x28]<br>push 0<br>push 0x16<br>push str.Intel_Hardware_Cryptographic_Service_Provider<br>push 0<br>lea eax, [ebp-0x30]<br>push eax<br>mov ecx, dword[ebp-0x2c]<br>call ecx<br>test eax, eax<br>je 0x6412821f<br>lea eax, [ebp+0x39c]<br>push eax<br>push 0x40<br>push dword[ebp-0x30]<br>call dword[ebp-0x24]<br>test eax, eax<br>je 0x64128217<br>mov eax, 8<br>call fcn.64142a00<br>fld qword[0x6418a5a0]<br>fstp qword[esp]<br>push 0x40<br>lea eax, [ebp+0x39c]<br>push eax<br>call fcn.640e3af0<br>add esp, 0x10<br>mov edi, 1<br>mov dword[ebp-0x50], edi<br>push 0<br>push dword[ebp-0x30]<br>call dword[ebp-0x28]<br>test esi, esi<br>je 0x6412822a<br>push esi<br>call dword[sym.imp.KERNEL32.dll_FreeLibrary]<br>call fcn.640d2ca0<br>test eax, eax<br>jne 0x64128311<br>push str.USER32.DLL<br>call dword[sym.imp.KERNEL32.dll_LoadLibraryA]<br>mov esi, eax<br>test esi, esi<br>je 0x64128311<br>push str.GetForegroundWindow<br>push esi<br>call ebx<br>mov dword[ebp-0x3c], eax<br>push str.GetCursorInfo<br>push esi<br>call ebx<br>mov dword[ebp-0x48], eax<br>push str.GetQueueStatus<br>push esi<br>call ebx<br>mov dword[ebp-0x44], eax<br>mov eax, dword[ebp-0x3c]<br>test eax, eax<br>je 0x64128296<br>call eax<br>mov dword[ebp-0x3c], eax<br>mov eax, 8<br>call fcn.64142a00<br>fldz <br>fstp qword[esp]<br>push 4<br>lea eax, [ebp-0x3c]<br>push eax<br>call fcn.640e3af0<br>add esp, 0x10<br>mov eax, dword[ebp-0x48]<br>test eax, eax<br>je 0x641282dc<br>mov dword[ebp+0x388], 0x14<br>lea ecx, [ebp+0x388]<br>push ecx<br>call eax<br>test eax, eax<br>je 0x641282dc<br>mov eax, 8<br>call fcn.64142a00<br>fld qword[0x6418a568]<br>fstp qword[esp]<br>push dword[ebp+0x388]<br>lea eax, [ebp+0x388]<br>push eax<br>call fcn.640e3af0<br>add esp, 0x10<br>mov eax, dword[ebp-0x44]<br>test eax, eax<br>je 0x6412830a<br>push 0xbf<br>call eax<br>mov dword[ebp-0x4c], eax<br>mov eax, 8<br>call fcn.64142a00<br>fld1 <br>fstp qword[esp]<br>push 4<br>lea eax, [ebp-0x4c]<br>push eax<br>call fcn.640e3af0<br>add esp, 0x10<br>push esi<br>call dword[sym.imp.KERNEL32.dll_FreeLibrary]<br>cmp dword[ebp-0x20], 0<br>je 0x6412871d<br>xor esi, esi<br>mov dword[ebp-0x24], esi<br>push str.CreateToolhelp32Snapshot<br>mov esi, dword[ebp-0x20]<br>push esi<br>call ebx<br>mov dword[ebp-0x28], eax<br>push str.CloseToolhelp32Snapshot<br>push esi<br>call ebx<br>mov dword[ebp-0x5c], eax<br>push str.Heap32First<br>push esi<br>call ebx<br>mov dword[ebp-0x40], eax<br>push str.Heap32Next<br>push esi<br>call ebx<br>mov dword[ebp-0x2c], eax<br>push str.Heap32ListFirst<br>push esi<br>call ebx<br>mov esi, eax<br>mov dword[ebp-0x60], esi<br>push str.Heap32ListNext<br>push dword[ebp-0x20]<br>call ebx<br>mov dword[ebp-0x34], eax<br>push str.Process32First<br>push dword[ebp-0x20]<br>call ebx<br>mov dword[ebp-0x38], eax<br>push str.Process32Next<br>push dword[ebp-0x20]<br>call ebx<br>mov dword[ebp-0x54], eax<br>push str.Thread32First<br>push dword[ebp-0x20]<br>call ebx<br>mov dword[ebp-0x44], eax<br>push str.Thread32Next<br>push dword[ebp-0x20]<br>call ebx<br>mov dword[ebp-0x48], eax<br>push str.Module32First<br>push dword[ebp-0x20]<br>call ebx<br>mov dword[ebp-0x3c], eax<br>push str.Module32Next<br>push dword[ebp-0x20]<br>call ebx<br>mov ecx, eax<br>mov dword[ebp-0x58], ecx<br>mov eax, dword[ebp-0x28]<br>test eax, eax<br>je 0x64128714<br>cmp dword[ebp-0x40], 0<br>je 0x64128714<br>cmp dword[ebp-0x2c], 0<br>je 0x64128714<br>test esi, esi<br>je 0x64128714<br>cmp dword[ebp-0x34], 0<br>je 0x64128714<br>cmp dword[ebp-0x38], 0<br>je 0x64128714<br>cmp dword[ebp-0x54], 0<br>je 0x64128714<br>cmp dword[ebp-0x44], 0<br>je 0x64128714<br>cmp dword[ebp-0x48], 0<br>je 0x64128714<br>cmp dword[ebp-0x3c], 0<br>je 0x64128714<br>test ecx, ecx<br>je 0x64128714<br>push 0<br>push 0xf<br>call eax<br>mov esi, eax<br>mov dword[ebp-0x1c], esi<br>cmp esi, 0xffffffff<br>je 0x64128714<br>xor eax, eax<br>mov dword[ebp+0x38c], eax<br>mov dword[ebp+0x390], eax<br>mov dword[ebp+0x394], eax<br>mov dword[ebp+0x398], eax<br>mov dword[ebp+0x38c], 0x10<br>mov ebx, dword[sym.imp.KERNEL32.dll_GetTickCount]<br>test edi, edi<br>je 0x6412846b<br>call ebx<br>mov dword[ebp-0x24], eax<br>lea eax, [ebp+0x38c]<br>push eax<br>push esi<br>call dword[ebp-0x60]<br>test eax, eax<br>je 0x641285a9<br>mov esi, 0x2a<br>mov dword[ebp-0x28], esi<br>mov eax, 8<br>call fcn.64142a00<br>fld qword[0x6418a570]<br>fstp qword[esp]<br>push dword[ebp+0x38c]<br>lea eax, [ebp+0x38c]<br>push eax<br>call fcn.640e3af0<br>add esp, 0x10<br>wait <br>mov dword[ebp-4], 0<br>xor eax, eax<br>mov dword[ebp-0x88], eax<br>mov dword[ebp-0x84], eax<br>mov dword[ebp-0x80], eax<br>mov dword[ebp-0x7c], eax<br>mov dword[ebp-0x78], eax<br>mov dword[ebp-0x74], eax<br>mov dword[ebp-0x70], eax<br>mov dword[ebp-0x6c], eax<br>mov dword[ebp-0x68], eax<br>mov dword[ebp-0x88], 0x24<br>push dword[ebp+0x394]<br>push dword[ebp+0x390]<br>lea eax, [ebp-0x88]<br>push eax<br>call dword[ebp-0x40]<br>test eax, eax<br>je 0x64128556<br>mov esi, 0x50<br>mov dword[ebp-0x64], esi<br>mov eax, 8<br>call fcn.64142a00<br>fld qword[0x6418a578]<br>fstp qword[esp]<br>push dword[ebp-0x88]<br>lea eax, [ebp-0x88]<br>push eax<br>call fcn.640e3af0<br>add esp, 0x10<br>lea eax, [ebp-0x88]<br>push eax<br>call dword[ebp-0x2c]<br>test eax, eax<br>je 0x64128553<br>test edi, edi<br>je 0x6412854b<br>call ebx<br>sub eax, dword[ebp-0x24]<br>cmp eax, 0x3e8<br>jae 0x64128553<br>dec esi<br>mov dword[ebp-0x64], esi<br>test esi, esi<br>jg 0x64128505<br>mov esi, dword[ebp-0x28]<br>wait <br>mov dword[ebp-4], 0xfffffffe<br>jmp 0x64128580<br>lea eax, [ebp+0x38c]<br>push eax<br>push dword[ebp-0x1c]<br>call dword[ebp-0x34]<br>test eax, eax<br>je 0x641285a9<br>test edi, edi<br>je 0x641285a1<br>call ebx<br>sub eax, dword[ebp-0x24]<br>cmp eax, 0x3e8<br>jae 0x641285a9<br>test esi, esi<br>jg 0x64128486<br>mov dword[ebp+0x224], 0x128<br>test edi, edi<br>je 0x641285bd<br>call ebx<br>mov esi, eax<br>jmp 0x641285c0<br>mov esi, dword[ebp-0x24]<br>lea eax, [ebp+0x224]<br>push eax<br>push dword[ebp-0x1c]<br>call dword[ebp-0x38]<br>test eax, eax<br>je 0x64128629<br>fld qword[0x6418a588]<br>mov eax, 8<br>call fcn.64142a00<br>fstp qword[esp]<br>push dword[ebp+0x224]<br>lea eax, [ebp+0x224]<br>push eax<br>call fcn.640e3af0<br>add esp, 0x10<br>lea eax, [ebp+0x224]<br>push eax<br>push dword[ebp-0x1c]<br>call dword[ebp-0x54]<br>test eax, eax<br>je 0x64128629<br>test edi, edi<br>fld qword[0x6418a588]<br>je 0x641285d7<br>fstp st(0)<br>call ebx<br>sub eax, esi<br>cmp eax, 0x3e8<br>fld qword[0x6418a588]<br>jb 0x641285d7<br>fstp st(0)<br>mov dword[ebp+0x36c], 0x1c<br>test edi, edi<br>je 0x6412863b<br>call ebx<br>mov esi, eax<br>lea eax, [ebp+0x36c]<br>push eax<br>push dword[ebp-0x1c]<br>call dword[ebp-0x44]<br>test eax, eax<br>je 0x641286a4<br>fld qword[0x6418a580]<br>mov eax, 8<br>call fcn.64142a00<br>fstp qword[esp]<br>push dword[ebp+0x36c]<br>lea eax, [ebp+0x36c]<br>push eax<br>call fcn.640e3af0<br>add esp, 0x10<br>lea eax, [ebp+0x36c]<br>push eax<br>push dword[ebp-0x1c]<br>call dword[ebp-0x48]<br>test eax, eax<br>je 0x641286a4<br>test edi, edi<br>fld qword[0x6418a580]<br>je 0x64128652<br>fstp st(0)<br>call ebx<br>sub eax, esi<br>cmp eax, 0x3e8<br>fld qword[0x6418a580]<br>jb 0x64128652<br>fstp st(0)<br>mov dword[ebp], 0x224<br>test edi, edi<br>je 0x641286b3<br>call ebx<br>mov esi, eax<br>lea eax, [ebp]<br>push eax<br>push dword[ebp-0x1c]<br>call dword[ebp-0x3c]<br>test eax, eax<br>je 0x64128700<br>mov eax, 8<br>call fcn.64142a00<br>fld qword[0x6418a588]<br>fstp qword[esp]<br>push dword[ebp]<br>lea eax, [ebp]<br>push eax<br>call fcn.640e3af0<br>add esp, 0x10<br>lea eax, [ebp]<br>push eax<br>push dword[ebp-0x1c]<br>call dword[ebp-0x58]<br>test eax, eax<br>je 0x64128700<br>test edi, edi<br>je 0x641286c1<br>call ebx<br>sub eax, esi<br>cmp eax, 0x3e8<br>jb 0x641286c1<br>mov eax, dword[ebp-0x5c]<br>push dword[ebp-0x1c]<br>test eax, eax<br>je 0x6412870e<br>call eax<br>jmp 0x64128714<br>call dword[sym.imp.KERNEL32.dll_CloseHandle]<br>push dword[ebp-0x20]<br>call dword[sym.imp.KERNEL32.dll_FreeLibrary]<br>call fcn.641287a0<br>lea eax, [ebp+0x34c]<br>push eax<br>call dword[sym.imp.KERNEL32.dll_GlobalMemoryStatus]<br>mov eax, 8<br>call fcn.64142a00<br>fld1 <br>fstp qword[esp]<br>push 0x20<br>lea eax, [ebp+0x34c]<br>push eax<br>call fcn.640e3af0<br>add esp, 0x10<br>call dword[sym.imp.KERNEL32.dll_GetCurrentProcessId]<br>mov dword[ebp-0x4c], eax<br>mov eax, 8<br>call fcn.64142a00<br>fld1 <br>fstp qword[esp]<br>push 4<br>lea eax, [ebp-0x4c]<br>push eax<br>call fcn.640e3af0<br>add esp, 0x10<br>mov eax, 1<br>mov ecx, dword[ebp-0x10]<br>mov dword<br>pop ecx<br>pop edi<br>pop esi<br>pop ebx<br>mov ecx, dword[ebp+0x3dc]<br>xor ecx, ebp<br>call fcn.641429ea<br>lea esp, [ebp+0x3e0]<br>pop ebp<br>ret <br><eoc> ', 'point { fill-color: #e0440e; }'],
[-2933.982666015625, -3875.34130859375, '<b><a href="/report/fcn.004784b0@e2ba7f10eb234338a49853c34d7d9c56">fcn.004784b0</a><br>@e2ba7f10eb234338a49853c34d7d9c56</b><br>push ebp<br>lea ebp, [esp-0x390]<br>mov eax, 0x390<br>call fcn.004f5100<br>push 0xfffffffffffffffe<br>push 0x556270<br>push 0x4f8530<br>mov eax, dword<br>push eax<br>sub esp, 8<br>mov eax, 0xbc<br>call fcn.004f5100<br>mov eax, dword[0x55bdf4]<br>xor dword[ebp-8], eax<br>xor eax, ebp<br>mov dword[ebp+0x38c], eax<br>push ebx<br>push esi<br>push edi<br>push eax<br>lea eax, [ebp-0x10]<br>mov dword<br>mov dword[ebp-0x18], esp<br>xor esi, esi<br>mov dword[ebp-0x3c], esi<br>mov dword[ebp-0x28], esi<br>push str.ADVAPI32.DLL<br>mov ebx, dword[sym.imp.KERNEL32.dll_LoadLibraryA]<br>call ebx<br>mov dword[ebp-0x30], eax<br>push str.KERNEL32.DLL<br>call ebx<br>mov edi, eax<br>mov dword[ebp-0x74], edi<br>push str.NETAPI32.DLL<br>call ebx<br>mov ebx, eax<br>mov dword[ebp-0x20], esi<br>mov dword[ebp-0x34], esi<br>mov dword[ebp-0x2c], esi<br>mov dword[ebp-0x1c], esi<br>mov dword[ebp-0x38], esi<br>cmp ebx, esi<br>mov esi, dword[sym.imp.KERNEL32.dll_GetProcAddress]<br>je 0x47855e<br>push str.NetStatisticsGet<br>push ebx<br>call esi<br>mov dword[ebp-0x1c], eax<br>push str.NetApiBufferFree<br>push ebx<br>call esi<br>mov dword[ebp-0x38], eax<br>cmp dword[ebp-0x1c], 0<br>je 0x4785ed<br>cmp dword[ebp-0x38], 0<br>je 0x4785ed<br>lea eax, [ebp-0x24]<br>push eax<br>push 0<br>push 0<br>push str.LanmanWorkstation<br>push 0<br>call dword[ebp-0x1c]<br>test eax, eax<br>jne 0x4785af<br>mov eax, 8<br>call fcn.004f5100<br>fld qword[0x52da60]<br>fstp qword[esp]<br>push 0xd8<br>mov ecx, dword[ebp-0x24]<br>push ecx<br>call fcn.00443c70<br>add esp, 0x10<br>mov edx, dword[ebp-0x24]<br>push edx<br>call dword[ebp-0x38]<br>lea eax, [ebp-0x24]<br>push eax<br>push 0<br>push 0<br>push str.LanmanServer<br>push 0<br>call dword[ebp-0x1c]<br>test eax, eax<br>jne 0x4785ed<br>mov eax, 8<br>call fcn.004f5100<br>fld qword[0x52da38]<br>fstp qword[esp]<br>push 0x44<br>mov ecx, dword[ebp-0x24]<br>push ecx<br>call fcn.00443c70<br>add esp, 0x10<br>mov edx, dword[ebp-0x24]<br>push edx<br>call dword[ebp-0x38]<br>test ebx, ebx<br>je 0x4785f8<br>push ebx<br>call dword[sym.imp.KERNEL32.dll_FreeLibrary]<br>cmp dword[ebp-0x30], 0<br>je 0x478622<br>push str.CryptAcquireContextW<br>mov ebx, dword[ebp-0x30]<br>push ebx<br>call esi<br>mov dword[ebp-0x20], eax<br>push str.CryptGenRandom<br>push ebx<br>call esi<br>mov dword[ebp-0x34], eax<br>push str.CryptReleaseContext<br>push ebx<br>call esi<br>mov dword[ebp-0x2c], eax<br>cmp dword[ebp-0x20], 0<br>je 0x4786f9<br>cmp dword[ebp-0x34], 0<br>je 0x4786f9<br>cmp dword[ebp-0x2c], 0<br>je 0x4786f9<br>push 0xf0000000<br>push 1<br>push 0<br>push 0<br>lea eax, [ebp-0x3c]<br>push eax<br>mov ebx, dword[ebp-0x20]<br>call ebx<br>test eax, eax<br>je 0x47869c<br>lea ecx, [ebp+0x34c]<br>push ecx<br>push 0x40<br>mov edx, dword[ebp-0x3c]<br>push edx<br>call dword[ebp-0x34]<br>test eax, eax<br>je 0x478693<br>mov eax, 8<br>call fcn.004f5100<br>fldz <br>fstp qword[esp]<br>push 0x40<br>lea eax, [ebp+0x34c]<br>push eax<br>call fcn.00443c70<br>add esp, 0x10<br>mov dword[ebp-0x28], 1<br>push 0<br>mov ecx, dword[ebp-0x3c]<br>push ecx<br>call dword[ebp-0x2c]<br>push 0<br>push 0x16<br>push str.Intel_Hardware_Cryptographic_Service_Provider<br>push 0<br>lea edx, [ebp-0x3c]<br>push edx<br>call ebx<br>test eax, eax<br>je 0x4786f9<br>lea eax, [ebp+0x34c]<br>push eax<br>push 0x40<br>mov ecx, dword[ebp-0x3c]<br>push ecx<br>call dword[ebp-0x34]<br>test eax, eax<br>je 0x4786f0<br>mov eax, 8<br>call fcn.004f5100<br>fld qword[0x52d998]<br>fstp qword[esp]<br>push 0x40<br>lea edx, [ebp+0x34c]<br>push edx<br>call fcn.00443c70<br>add esp, 0x10<br>mov dword[ebp-0x28], 1<br>push 0<br>mov eax, dword[ebp-0x3c]<br>push eax<br>call dword[ebp-0x2c]<br>cmp dword[ebp-0x30], 0<br>je 0x478709<br>mov ecx, dword[ebp-0x30]<br>push ecx<br>call dword[sym.imp.KERNEL32.dll_FreeLibrary]<br>call dword[sym.imp.KERNEL32.dll_GetVersion]<br>cmp eax, 0x80000000<br>jae 0x478723<br>call fcn.00454c10<br>test eax, eax<br>jne 0x47880f<br>push str.USER32.DLL<br>call dword[sym.imp.KERNEL32.dll_LoadLibraryA]<br>mov ebx, eax<br>test ebx, ebx<br>je 0x47880f<br>push str.GetForegroundWindow<br>push ebx<br>call esi<br>mov dword[ebp-0x30], eax<br>push str.GetCursorInfo<br>push ebx<br>call esi<br>mov dword[ebp-0x20], eax<br>push 0x52d958<br>push ebx<br>call esi<br>mov dword[ebp-0x2c], eax<br>cmp dword[ebp-0x30], 0<br>je 0x478782<br>call dword[ebp-0x30]<br>mov dword[ebp-0x40], eax<br>mov eax, 8<br>call fcn.004f5100<br>fldz <br>fstp qword[esp]<br>push 4<br>lea edx, [ebp-0x40]<br>push edx<br>call fcn.00443c70<br>add esp, 0x10<br>cmp dword[ebp-0x20], 0<br>je 0x4787da<br>call dword[sym.imp.KERNEL32.dll_GetVersion]<br>cmp eax, 0x80000000<br>jae 0x47879f<br>call dword[sym.imp.KERNEL32.dll_GetVersion]<br>cmp al, 5<br>jb 0x4787da<br>cmp dword[ebp-0x20], 0<br>je 0x4787da<br>mov dword[ebp-0x5c], 0x14<br>lea eax, [ebp-0x5c]<br>push eax<br>call dword[ebp-0x20]<br>test eax, eax<br>je 0x4787da<br>mov eax, 8<br>call fcn.004f5100<br>fld qword[0x52d950]<br>fstp qword[esp]<br>mov ecx, dword[ebp-0x5c]<br>push ecx<br>lea edx, [ebp-0x5c]<br>push edx<br>call fcn.00443c70<br>add esp, 0x10<br>cmp dword[ebp-0x2c], 0<br>je 0x478808<br>push 0xbf<br>call dword[ebp-0x2c]<br>mov dword[ebp-0x44], eax<br>mov eax, 8<br>call fcn.004f5100<br>fld1 <br>fstp qword[esp]<br>push 4<br>lea eax, [ebp-0x44]<br>push eax<br>call fcn.00443c70<br>add esp, 0x10<br>push ebx<br>call dword[sym.imp.KERNEL32.dll_FreeLibrary]<br>test edi, edi<br>je 0x478c0d<br>mov dword[ebp-0x1c], 0<br>push str.CreateToolhelp32Snapshot<br>push edi<br>call esi<br>mov ebx, eax<br>push str.CloseToolhelp32Snapshot<br>push edi<br>call esi<br>mov dword[ebp-0x70], eax<br>push str.Heap32First<br>push edi<br>call esi<br>mov dword[ebp-0x30], eax<br>push str.Heap32Next<br>push edi<br>call esi<br>mov dword[ebp-0x2c], eax<br>push str.Heap32ListFirst<br>push edi<br>call esi<br>mov dword[ebp-0x20], eax<br>push str.Heap32ListNext<br>push edi<br>call esi<br>mov dword[ebp-0x34], eax<br>push str.Process32First<br>push edi<br>call esi<br>mov dword[ebp-0x38], eax<br>push str.Process32Next<br>push edi<br>call esi<br>mov dword[ebp-0x68], eax<br>push str.Thread32First<br>push edi<br>call esi<br>mov dword[ebp-0x60], eax<br>push str.Thread32Next<br>push edi<br>call esi<br>mov dword[ebp-0x48], eax<br>push str.Module32First<br>push edi<br>call esi<br>mov dword[ebp-0x64], eax<br>push 0x52d880<br>push edi<br>call esi<br>mov dword[ebp-0x40], eax<br>test ebx, ebx<br>je 0x478c06<br>cmp dword[ebp-0x30], 0<br>je 0x478c06<br>cmp dword[ebp-0x2c], 0<br>je 0x478c06<br>mov esi, dword[ebp-0x20]<br>test esi, esi<br>je 0x478c06<br>cmp dword[ebp-0x34], 0<br>je 0x478c06<br>cmp dword[ebp-0x38], 0<br>je 0x478c06<br>cmp dword[ebp-0x68], 0<br>je 0x478c06<br>cmp dword[ebp-0x60], 0<br>je 0x478c06<br>cmp dword[ebp-0x48], 0<br>je 0x478c06<br>cmp dword[ebp-0x64], 0<br>je 0x478c06<br>test eax, eax<br>je 0x478c06<br>push 0<br>push 0xf<br>call ebx<br>mov dword[ebp-0x24], eax<br>cmp eax, 0xffffffff<br>je 0x478c06<br>xor eax, eax<br>mov dword[ebp-0x58], eax<br>mov dword[ebp-0x54], eax<br>mov dword[ebp-0x50], eax<br>mov dword[ebp-0x4c], eax<br>mov dword[ebp-0x58], 0x10<br>cmp dword[ebp-0x28], eax<br>je 0x478941<br>call dword[sym.imp.KERNEL32.dll_GetTickCount]<br>mov dword[ebp-0x1c], eax<br>lea ecx, [ebp-0x58]<br>push ecx<br>mov ebx, dword[ebp-0x24]<br>push ebx<br>call esi<br>test eax, eax<br>je 0x478a8a<br>mov dword[ebp-0x20], 0x2a<br>lea ebx, [ebx]<br>mov eax, 8<br>call fcn.004f5100<br>fld qword[0x52d878]<br>fstp qword[esp]<br>mov edx, dword[ebp-0x58]<br>push edx<br>lea eax, [ebp-0x58]<br>push eax<br>call fcn.00443c70<br>add esp, 0x10<br>wait <br>xor eax, eax<br>mov dword[ebp-4], eax<br>mov dword[ebp-0x98], eax<br>mov dword[ebp-0x94], eax<br>mov dword[ebp-0x90], eax<br>mov dword[ebp-0x8c], eax<br>mov dword[ebp-0x88], eax<br>mov dword[ebp-0x84], eax<br>mov dword[ebp-0x80], eax<br>mov dword[ebp-0x7c], eax<br>mov dword[ebp-0x78], eax<br>mov dword[ebp-0x98], 0x24<br>mov ecx, dword[ebp-0x50]<br>push ecx<br>mov edx, dword[ebp-0x54]<br>push edx<br>lea eax, [ebp-0x98]<br>push eax<br>call dword[ebp-0x30]<br>test eax, eax<br>je 0x478a3a<br>mov ebx, 0x50<br>mov dword[ebp-0x6c], ebx<br>mov esi, dword[ebp-0x1c]<br>mov eax, 8<br>call fcn.004f5100<br>fld qword[0x52d870]<br>fstp qword[esp]<br>mov ecx, dword[ebp-0x98]<br>push ecx<br>lea edx, [ebp-0x98]<br>push edx<br>call fcn.00443c70<br>add esp, 0x10<br>lea eax, [ebp-0x98]<br>push eax<br>call dword[ebp-0x2c]<br>test eax, eax<br>je 0x478a37<br>cmp dword[ebp-0x28], 0<br>je 0x478a2d<br>call dword[sym.imp.KERNEL32.dll_GetTickCount]<br>sub eax, esi<br>cmp eax, 0x3e8<br>jae 0x478a37<br>sub ebx, 1<br>mov dword[ebp-0x6c], ebx<br>test ebx, ebx<br>jg 0x4789e1<br>mov ebx, dword[ebp-0x24]<br>wait <br>mov dword[ebp-4], 0xfffffffe<br>jmp 0x478a5e<br>lea ecx, [ebp-0x58]<br>push ecx<br>push ebx<br>call dword[ebp-0x34]<br>test eax, eax<br>je 0x478a8a<br>cmp dword[ebp-0x28], 0<br>je 0x478a80<br>call dword[sym.imp.KERNEL32.dll_GetTickCount]<br>sub eax, dword[ebp-0x1c]<br>cmp eax, 0x3e8<br>jae 0x478a8a<br>cmp dword[ebp-0x20], 0<br>jg 0x478960<br>mov dword[ebp+0x224], 0x128<br>cmp dword[ebp-0x28], 0<br>je 0x478aa3<br>call dword[sym.imp.KERNEL32.dll_GetTickCount]<br>mov dword[ebp-0x1c], eax<br>lea edx, [ebp+0x224]<br>push edx<br>push ebx<br>call dword[ebp-0x38]<br>test eax, eax<br>je 0x478b0a<br>mov ebx, dword[ebp-0x1c]<br>mov esi, dword[ebp-0x68]<br>mov eax, 8<br>call fcn.004f5100<br>fld qword[0x52d868]<br>fstp qword[esp]<br>mov eax, dword[ebp+0x224]<br>push eax<br>lea ecx, [ebp+0x224]<br>push ecx<br>call fcn.00443c70<br>add esp, 0x10<br>lea edx, [ebp+0x224]<br>push edx<br>mov eax, dword[ebp-0x24]<br>push eax<br>call esi<br>test eax, eax<br>je 0x478b07<br>cmp dword[ebp-0x28], 0<br>je 0x478ab8<br>call dword[sym.imp.KERNEL32.dll_GetTickCount]<br>sub eax, ebx<br>cmp eax, 0x3e8<br>jb 0x478ab8<br>mov ebx, dword[ebp-0x24]<br>mov dword[ebp-0xb4], 0x1c<br>cmp dword[ebp-0x28], 0<br>je 0x478b23<br>call dword[sym.imp.KERNEL32.dll_GetTickCount]<br>mov dword[ebp-0x1c], eax<br>lea ecx, [ebp-0xb4]<br>push ecx<br>push ebx<br>call dword[ebp-0x60]<br>test eax, eax<br>je 0x478b8a<br>mov ebx, dword[ebp-0x1c]<br>mov esi, dword[sym.imp.KERNEL32.dll_GetTickCount]<br>mov eax, 8<br>call fcn.004f5100<br>fld qword[0x52d860]<br>fstp qword[esp]<br>mov edx, dword[ebp-0xb4]<br>push edx<br>lea eax, [ebp-0xb4]<br>push eax<br>call fcn.00443c70<br>add esp, 0x10<br>lea ecx, [ebp-0xb4]<br>push ecx<br>mov edx, dword[ebp-0x24]<br>push edx<br>call dword[ebp-0x48]<br>test eax, eax<br>je 0x478b87<br>cmp dword[ebp-0x28], 0<br>je 0x478b3b<br>call esi<br>sub eax, ebx<br>cmp eax, 0x3e8<br>jb 0x478b3b<br>mov ebx, dword[ebp-0x24]<br>mov dword[ebp], 0x224<br>cmp dword[ebp-0x28], 0<br>je 0x478ba0<br>call dword[sym.imp.KERNEL32.dll_GetTickCount]<br>mov dword[ebp-0x1c], eax<br>lea eax, [ebp]<br>push eax<br>push ebx<br>call dword[ebp-0x64]<br>test eax, eax<br>je 0x478bf4<br>mov esi, dword[ebp-0x40]<br>nop <br>mov eax, 8<br>call fcn.004f5100<br>fld qword[0x52d868]<br>fstp qword[esp]<br>mov ecx, dword[ebp]<br>push ecx<br>lea edx, [ebp]<br>push edx<br>call fcn.00443c70<br>add esp, 0x10<br>lea eax, [ebp]<br>push eax<br>push ebx<br>call esi<br>test eax, eax<br>je 0x478bf4<br>cmp dword[ebp-0x28], 0<br>je 0x478bb0<br>call dword[sym.imp.KERNEL32.dll_GetTickCount]<br>sub eax, dword[ebp-0x1c]<br>cmp eax, 0x3e8<br>jb 0x478bb0<br>mov eax, dword[ebp-0x70]<br>push ebx<br>test eax, eax<br>je 0x478c00<br>call eax<br>jmp 0x478c06<br>call dword[sym.imp.KERNEL32.dll_CloseHandle]<br>push edi<br>call dword[sym.imp.KERNEL32.dll_FreeLibrary]<br>call fcn.00478430<br>lea ecx, [ebp-0xd4]<br>push ecx<br>call dword[sym.imp.KERNEL32.dll_GlobalMemoryStatus]<br>mov eax, 8<br>call fcn.004f5100<br>fld1 <br>fstp qword[esp]<br>push 0x20<br>lea edx, [ebp-0xd4]<br>push edx<br>call fcn.00443c70<br>add esp, 0x10<br>call dword[sym.imp.KERNEL32.dll_GetCurrentProcessId]<br>mov dword[ebp-0x44], eax<br>mov eax, 8<br>call fcn.004f5100<br>fld1 <br>fstp qword[esp]<br>push 4<br>lea eax, [ebp-0x44]<br>push eax<br>call fcn.00443c70<br>add esp, 0x10<br>mov eax, 1<br>mov ecx, dword[ebp-0x10]<br>mov dword<br>pop ecx<br>pop edi<br>pop esi<br>pop ebx<br>mov ecx, dword[ebp+0x38c]<br>xor ecx, ebp<br>call fcn.004f166b<br>add ebp, 0x390<br>mov esp, ebp<br>pop ebp<br>ret <br><eoc> ', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
lea ebp, [esp-0x3e0]
mov eax, 0x3e0
call fcn.64142a00
push 0xfffffffffffffffe
push 0x641929d8
push 0x641435c4
mov eax, dword
push eax
sub esp, 8
mov eax, 0x70
call fcn.64142a00
mov eax, dword[0x641b8950]
xor dword[ebp-8], eax
xor eax, ebp
mov dword[ebp+0x3dc], eax
push ebx
push esi
push edi
push eax
lea eax, [ebp-0x10]
mov dword
mov dword[ebp-0x18], esp
mov dword[ebp-0x30], 0
xor edi, edi
mov dword[ebp-0x50], edi
push str.ADVAPI32.DLL
mov ebx, dword[sym.imp.KERNEL32.dll_LoadLibraryA]
call ebx
mov esi, eax
push str.KERNEL32.DLL
call ebx
mov dword[ebp-0x20], eax
push str.NETAPI32.DLL
call ebx
mov dword[ebp-0x40], eax
xor ecx, ecx
mov dword[ebp-0x2c], ecx
mov dword[ebp-0x24], ecx
mov dword[ebp-0x28], ecx
mov dword[ebp-0x38], ecx
xor edx, edx
mov dword[ebp-0x34], edx
mov ebx, dword[sym.imp.KERNEL32.dll_GetProcAddress]
test eax, eax
je 0x6412808b
push str.NetStatisticsGet
push eax
call ebx
mov dword[ebp-0x38], eax
push str.NetApiBufferFree
push dword[ebp-0x40]
call ebx
mov edx, eax
mov dword[ebp-0x34], edx
mov ecx, dword[ebp-0x38]
test ecx, ecx
je 0x64128113
test edx, edx
je 0x64128113
lea eax, [ebp-0x1c]
push eax
push 0
push 0
push str.LanmanWorkstation
push 0
call ecx
test eax, eax
jne 0x641280d5
mov eax, 8
call fcn.64142a00
fld qword[0x6418a598]
fstp qword[esp]
push 0xd8
push dword[ebp-0x1c]
call fcn.640e3af0
add esp, 0x10
push dword[ebp-0x1c]
call dword[ebp-0x34]
lea eax, [ebp-0x1c]
push eax
push 0
push 0
push str.LanmanServer
push 0
mov eax, dword[ebp-0x38]
call eax
test eax, eax
jne 0x64128113
mov eax, 8
call fcn.64142a00
fld qword[0x6418a590]
fstp qword[esp]
push 0x44
push dword[ebp-0x1c]
call fcn.640e3af0
add esp, 0x10
push dword[ebp-0x1c]
call dword[ebp-0x34]
mov eax, dword[ebp-0x40]
test eax, eax
je 0x64128121
push eax
call dword[sym.imp.KERNEL32.dll_FreeLibrary]
test esi, esi
je 0x6412814a
push str.CryptAcquireContextW
push esi
call ebx
mov dword[ebp-0x2c], eax
push str.CryptGenRandom
push esi
call ebx
mov dword[ebp-0x24], eax
push str.CryptReleaseContext
push esi
call ebx
mov ecx, eax
mov dword[ebp-0x28], ecx
jmp 0x6412814c
xor ecx, ecx
mov eax, dword[ebp-0x2c]
test eax, eax
je 0x6412821f
cmp dword[ebp-0x24], edi
je 0x6412821f
test ecx, ecx
je 0x6412821f
push 0xf0000000
push 1
push 0
push 0
lea ecx, [ebp-0x30]
push ecx
call eax
test eax, eax
je 0x641281c0
lea eax, [ebp+0x39c]
push eax
push 0x40
push dword[ebp-0x30]
call dword[ebp-0x24]
test eax, eax
je 0x641281b8
mov eax, 8
call fcn.64142a00
fldz
fstp qword[esp]
push 0x40
lea eax, [ebp+0x39c]
push eax
call fcn.640e3af0
add esp, 0x10
mov edi, 1
mov dword[ebp-0x50], edi
push 0
push dword[ebp-0x30]
call dword[ebp-0x28]
push 0
push 0x16
push str.Intel_Hardware_Cryptographic_Service_Provider
push 0
lea eax, [ebp-0x30]
push eax
mov ecx, dword[ebp-0x2c]
call ecx
test eax, eax
je 0x6412821f
lea eax, [ebp+0x39c]
push eax
push 0x40
push dword[ebp-0x30]
call dword[ebp-0x24]
test eax, eax
je 0x64128217
mov eax, 8
call fcn.64142a00
fld qword[0x6418a5a0]
fstp qword[esp]
push 0x40
lea eax, [ebp+0x39c]
push eax
call fcn.640e3af0
add esp, 0x10
mov edi, 1
mov dword[ebp-0x50], edi
push 0
push dword[ebp-0x30]
call dword[ebp-0x28]
test esi, esi
je 0x6412822a
push esi
call dword[sym.imp.KERNEL32.dll_FreeLibrary]
call fcn.640d2ca0
test eax, eax
jne 0x64128311
push str.USER32.DLL
call dword[sym.imp.KERNEL32.dll_LoadLibraryA]
mov esi, eax
test esi, esi
je 0x64128311
push str.GetForegroundWindow
push esi
call ebx
mov dword[ebp-0x3c], eax
push str.GetCursorInfo
push esi
call ebx
mov dword[ebp-0x48], eax
push str.GetQueueStatus
push esi
call ebx
mov dword[ebp-0x44], eax
mov eax, dword[ebp-0x3c]
test eax, eax
je 0x64128296
call eax
mov dword[ebp-0x3c], eax
mov eax, 8
call fcn.64142a00
fldz
fstp qword[esp]
push 4
lea eax, [ebp-0x3c]
push eax
call fcn.640e3af0
add esp, 0x10
mov eax, dword[ebp-0x48]
test eax, eax
je 0x641282dc
mov dword[ebp+0x388], 0x14
lea ecx, [ebp+0x388]
push ecx
call eax
test eax, eax
je 0x641282dc
mov eax, 8
call fcn.64142a00
fld qword[0x6418a568]
fstp qword[esp]
push dword[ebp+0x388]
lea eax, [ebp+0x388]
push eax
call fcn.640e3af0
add esp, 0x10
mov eax, dword[ebp-0x44]
test eax, eax
je 0x6412830a
push 0xbf
call eax
mov dword[ebp-0x4c], eax
mov eax, 8
call fcn.64142a00
fld1
fstp qword[esp]
push 4
lea eax, [ebp-0x4c]
push eax
call fcn.640e3af0
add esp, 0x10
push esi
call dword[sym.imp.KERNEL32.dll_FreeLibrary]
cmp dword[ebp-0x20], 0
je 0x6412871d
xor esi, esi
mov dword[ebp-0x24], esi
push str.CreateToolhelp32Snapshot
mov esi, dword[ebp-0x20]
push esi
call ebx
mov dword[ebp-0x28], eax
push str.CloseToolhelp32Snapshot
push esi
call ebx
mov dword[ebp-0x5c], eax
push str.Heap32First
push esi
call ebx
mov dword[ebp-0x40], eax
push str.Heap32Next
push esi
call ebx
mov dword[ebp-0x2c], eax
push str.Heap32ListFirst
push esi
call ebx
mov esi, eax
mov dword[ebp-0x60], esi
push str.Heap32ListNext
push dword[ebp-0x20]
call ebx
mov dword[ebp-0x34], eax
push str.Process32First
push dword[ebp-0x20]
call ebx
mov dword[ebp-0x38], eax
push str.Process32Next
push dword[ebp-0x20]
call ebx
mov dword[ebp-0x54], eax
push str.Thread32First
push dword[ebp-0x20]
call ebx
mov dword[ebp-0x44], eax
push str.Thread32Next
push dword[ebp-0x20]
call ebx
mov dword[ebp-0x48], eax
push str.Module32First
push dword[ebp-0x20]
call ebx
mov dword[ebp-0x3c], eax
push str.Module32Next
push dword[ebp-0x20]
call ebx
mov ecx, eax
mov dword[ebp-0x58], ecx
mov eax, dword[ebp-0x28]
test eax, eax
je 0x64128714
cmp dword[ebp-0x40], 0
je 0x64128714
cmp dword[ebp-0x2c], 0
je 0x64128714
test esi, esi
je 0x64128714
cmp dword[ebp-0x34], 0
je 0x64128714
cmp dword[ebp-0x38], 0
je 0x64128714
cmp dword[ebp-0x54], 0
je 0x64128714
cmp dword[ebp-0x44], 0
je 0x64128714
cmp dword[ebp-0x48], 0
je 0x64128714
cmp dword[ebp-0x3c], 0
je 0x64128714
test ecx, ecx
je 0x64128714
push 0
push 0xf
call eax
mov esi, eax
mov dword[ebp-0x1c], esi
cmp esi, 0xffffffff
je 0x64128714
xor eax, eax
mov dword[ebp+0x38c], eax
mov dword[ebp+0x390], eax
mov dword[ebp+0x394], eax
mov dword[ebp+0x398], eax
mov dword[ebp+0x38c], 0x10
mov ebx, dword[sym.imp.KERNEL32.dll_GetTickCount]
test edi, edi
je 0x6412846b
call ebx
mov dword[ebp-0x24], eax
lea eax, [ebp+0x38c]
push eax
push esi
call dword[ebp-0x60]
test eax, eax
je 0x641285a9
mov esi, 0x2a
mov dword[ebp-0x28], esi
mov eax, 8
call fcn.64142a00
fld qword[0x6418a570]
fstp qword[esp]
push dword[ebp+0x38c]
lea eax, [ebp+0x38c]
push eax
call fcn.640e3af0
add esp, 0x10
wait
mov dword[ebp-4], 0
xor eax, eax
mov dword[ebp-0x88], eax
mov dword[ebp-0x84], eax
mov dword[ebp-0x80], eax
mov dword[ebp-0x7c], eax
mov dword[ebp-0x78], eax
mov dword[ebp-0x74], eax
mov dword[ebp-0x70], eax
mov dword[ebp-0x6c], eax
mov dword[ebp-0x68], eax
mov dword[ebp-0x88], 0x24
push dword[ebp+0x394]
push dword[ebp+0x390]
lea eax, [ebp-0x88]
push eax
call dword[ebp-0x40]
test eax, eax
je 0x64128556
mov esi, 0x50
mov dword[ebp-0x64], esi
mov eax, 8
call fcn.64142a00
fld qword[0x6418a578]
fstp qword[esp]
push dword[ebp-0x88]
lea eax, [ebp-0x88]
push eax
call fcn.640e3af0
add esp, 0x10
lea eax, [ebp-0x88]
push eax
call dword[ebp-0x2c]
test eax, eax
je 0x64128553
test edi, edi
je 0x6412854b
call ebx
sub eax, dword[ebp-0x24]
cmp eax, 0x3e8
jae 0x64128553
dec esi
mov dword[ebp-0x64], esi
test esi, esi
jg 0x64128505
mov esi, dword[ebp-0x28]
wait
mov dword[ebp-4], 0xfffffffe
jmp 0x64128580
lea eax, [ebp+0x38c]
push eax
push dword[ebp-0x1c]
call dword[ebp-0x34]
test eax, eax
je 0x641285a9
test edi, edi
je 0x641285a1
call ebx
sub eax, dword[ebp-0x24]
cmp eax, 0x3e8
jae 0x641285a9
test esi, esi
jg 0x64128486
mov dword[ebp+0x224], 0x128
test edi, edi
je 0x641285bd
call ebx
mov esi, eax
jmp 0x641285c0
mov esi, dword[ebp-0x24]
lea eax, [ebp+0x224]
push eax
push dword[ebp-0x1c]
call dword[ebp-0x38]
test eax, eax
je 0x64128629
fld qword[0x6418a588]
mov eax, 8
call fcn.64142a00
fstp qword[esp]
push dword[ebp+0x224]
lea eax, [ebp+0x224]
push eax
call fcn.640e3af0
add esp, 0x10
lea eax, [ebp+0x224]
push eax
push dword[ebp-0x1c]
call dword[ebp-0x54]
test eax, eax
je 0x64128629
test edi, edi
fld qword[0x6418a588]
je 0x641285d7
fstp st(0)
call ebx
sub eax, esi
cmp eax, 0x3e8
fld qword[0x6418a588]
jb 0x641285d7
fstp st(0)
mov dword[ebp+0x36c], 0x1c
test edi, edi
je 0x6412863b
call ebx
mov esi, eax
lea eax, [ebp+0x36c]
push eax
push dword[ebp-0x1c]
call dword[ebp-0x44]
test eax, eax
je 0x641286a4
fld qword[0x6418a580]
mov eax, 8
call fcn.64142a00
fstp qword[esp]
push dword[ebp+0x36c]
lea eax, [ebp+0x36c]
push eax
call fcn.640e3af0
add esp, 0x10
lea eax, [ebp+0x36c]
push eax
push dword[ebp-0x1c]
call dword[ebp-0x48]
test eax, eax
je 0x641286a4
test edi, edi
fld qword[0x6418a580]
je 0x64128652
fstp st(0)
call ebx
sub eax, esi
cmp eax, 0x3e8
fld qword[0x6418a580]
jb 0x64128652
fstp st(0)
mov dword[ebp], 0x224
test edi, edi
je 0x641286b3
call ebx
mov esi, eax
lea eax, [ebp]
push eax
push dword[ebp-0x1c]
call dword[ebp-0x3c]
test eax, eax
je 0x64128700
mov eax, 8
call fcn.64142a00
fld qword[0x6418a588]
fstp qword[esp]
push dword[ebp]
lea eax, [ebp]
push eax
call fcn.640e3af0
add esp, 0x10
lea eax, [ebp]
push eax
push dword[ebp-0x1c]
call dword[ebp-0x58]
test eax, eax
je 0x64128700
test edi, edi
je 0x641286c1
call ebx
sub eax, esi
cmp eax, 0x3e8
jb 0x641286c1
mov eax, dword[ebp-0x5c]
push dword[ebp-0x1c]
test eax, eax
je 0x6412870e
call eax
jmp 0x64128714
call dword[sym.imp.KERNEL32.dll_CloseHandle]
push dword[ebp-0x20]
call dword[sym.imp.KERNEL32.dll_FreeLibrary]
call fcn.641287a0
lea eax, [ebp+0x34c]
push eax
call dword[sym.imp.KERNEL32.dll_GlobalMemoryStatus]
mov eax, 8
call fcn.64142a00
fld1
fstp qword[esp]
push 0x20
lea eax, [ebp+0x34c]
push eax
call fcn.640e3af0
add esp, 0x10
call dword[sym.imp.KERNEL32.dll_GetCurrentProcessId]
mov dword[ebp-0x4c], eax
mov eax, 8
call fcn.64142a00
fld1
fstp qword[esp]
push 4
lea eax, [ebp-0x4c]
push eax
call fcn.640e3af0
add esp, 0x10
mov eax, 1
mov ecx, dword[ebp-0x10]
mov dword
pop ecx
pop edi
pop esi
pop ebx
mov ecx, dword[ebp+0x3dc]
xor ecx, ebp
call fcn.641429ea
lea esp, [ebp+0x3e0]
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/07e4412910bcf0f5969ef64c44eecb2d