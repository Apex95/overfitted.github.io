---
layout: post
title:  "fcn.006aa320 @ a5905e3c253c25bbaf727a1a18fe8ed1"
date:   2021-08-30 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.006aa320
- **Origin (md5):** a5905e3c253c25bbaf727a1a18fe8ed1
- **VirusTotal:** [virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1][virustotal_ref]

# Code Tags
<span class="tag" id="MEMORY">MEMORY</span>


# Similar Functions

1. [fcn.00671590][similar_1_ref] (sim.: 0.9331593940704883)
2. [fcn.00674c10][similar_2_ref] (sim.: 0.9306812828599346)
3. [fcn.005feee0][similar_3_ref] (sim.: 0.9295502604516235)
4. [fcn.006b9e90][similar_4_ref] (sim.: 0.9249250081276724)
5. [fcn.005c0710][similar_5_ref] (sim.: 0.9232816029519374)


# Disassembled Code

{% highlight nasm %}
push r15
push r14
push r13
push r12
push rbp
push rdi
push rsi
push rbx
sub rsp,0x318
mov ebx,0x3a98
cmp dl,1
mov r12,rcx
mov qword[rcx],0
sbb eax,eax
mov qword[rcx+8],0
mov qword[rcx+0x10],0
and eax,0xffffffeb
mov dword[rsp+0x94],0x3a98
mov dword[rsp+0x8c],3
add eax,0x17
mov dword[rsp+0x88],eax
lea rax,[rsp+0xb0]
mov qword[rsp+0x60],rax
lea rax,[rsp+0xc0]
mov qword[rsp+0x50],rax
lea rax,[rsp+0xf0]
mov qword[rsp+0x68],rax
lea rbp,[rax+0x10]
call qword[sym.imp.KERNEL32.dll_GetProcessHeap]
mov r8,rbx
mov edx,0xc
mov rcx,rax
call qword[sym.imp.KERNEL32.dll_HeapAlloc]
mov r9,rax
mov qword[rsp+0x78],rax
mov ecx,dword[rsp+0x88]
lea rax,[rsp+0x94]
xor r8d,r8d
mov edx,0xe
mov qword[rsp+0x20],rax
call sub.IPHLPAPI.DLL_GetAdaptersAddresses
test eax,eax
mov dword[rsp+0x84],eax
je 0x6aa434
call qword[sym.imp.KERNEL32.dll_GetProcessHeap]
mov r8,qword[rsp+0x78]
xor edx,edx
mov rcx,rax
call qword[sym.imp.KERNEL32.dll_HeapFree]
cmp dword[rsp+0x84],0x6f
jne 0x6aaa30
sub dword[rsp+0x8c],1
je 0x6aaa30
mov ebx,dword[rsp+0x94]
call qword[sym.imp.KERNEL32.dll_GetProcessHeap]
jmp 0x6aa3ab
mov rax,qword[rsp+0x78]
test rax,rax
je 0x6aa3f0
mov qword[rsp+0x58],rax
mov edx,1
jmp 0x6aa467
mov rax,qword[rsp+0x58]
mov rax,qword[rax+8]
test rax,rax
mov qword[rsp+0x58],rax
je 0x6aaa28
cmp dword[rax+0x68],1
jne 0x6aa450
mov eax,dword[rax+0x64]
cmp eax,6
je 0x6aa47a
cmp eax,0x47
jne 0x6aa450
mov rax,qword[rsp+0x58]
lea r13,[rsp+0xd0]
mov rsi,qword[rax+0x18]
lea rax,[rsp+0x110]
mov qword[rsp+0x48],rax
mov r14,rax
test rsi,rsi
je 0x6aa75a
mov rdi,qword[rsp+0x48]
mov ecx,0x40
xor eax,eax
mov qword[rsp+0x48],r14
mov r9d,0x200
mov r8,r14
rep stosq qword[rdi],rax
mov edx,dword[rsi+0x18]
mov rcx,qword[rsi+0x10]
mov dword[rsp+0x30],2
mov dword[rsp+0x28],0
mov qword[rsp+0x20],0
call qword[sym.imp.WS2_32.dll_getnameinfo]
mov rax,qword[rsp+0x58]
mov rdi,qword[rax+0x48]
mov rax,qword[rsp+0x50]
test rdi,rdi
mov qword[rsp+0xb0],rax
je 0x6aa9d0
mov rcx,rdi
call sub.msvcrt.dll_wcslen
lea rbx,[rax+rax]
mov rdx,rbx
sar rdx,1
cmp rdx,7
mov r8,rdx
mov qword[rsp+0xd0],rdx
ja 0x6aa7f0
cmp rdx,1
mov rcx,qword[rsp+0xb0]
je 0x6aa900
test rdx,rdx
jne 0x6aa81b
xor eax,eax
mov qword[rsp+0xb8],r8
mov rdx,qword[rsp+0x68]
mov word[rcx+r8*2],ax
mov rcx,qword[rsp+0x60]
mov qword[rsp+0xf0],rbp
mov qword[rsp+0xf8],0
mov byte[rsp+0x100],0
call fcn.0067b680
lea rdx,[r13+0x10]
mov rbx,qword[rax+8]
mov qword[rsp+0xd0],rdx
mov rdi,qword[rax]
mov rax,rdi
add rax,rbx
je 0x6aa5b0
test rdi,rdi
jne 0x6aa5b0
lea rcx,[0x00aba520]
call fcn.00a4f4e0
nop
cmp rbx,0xf
mov qword[rsp+0xa8],rbx
ja 0x6aa840
cmp rbx,1
je 0x6aa910
test rbx,rbx
lea rax,[r13+0x10]
jne 0x6aaa00
mov qword[rsp+0xd8],rbx
mov byte[rax+rbx],0
mov rcx,qword[rsp+0xf0]
cmp rcx,rbp
je 0x6aa5f7
call fcn.00a5af30
mov rbx,qword[r12+8]
cmp rbx,qword[r12+0x10]
je 0x6aa8e0
mov qword[rsp+0xf0],rbp
mov rdi,r14
mov edx,dword[rdi]
add rdi,4
lea eax,[rdx-0x1010101]
not edx
and eax,edx
and eax,0x80808080
je 0x6aa612
mov edx,eax
shr edx,0x10
test eax,0x8080
cmove eax,edx
lea rdx,[rdi+2]
cmove rdi,rdx
mov edx,eax
add dl,al
sbb rdi,3
sub rdi,r14
cmp rdi,0xf
mov qword[rsp+0x98],rdi
ja 0x6aa890
cmp rdi,1
je 0x6aa9b0
test rdi,rdi
mov rax,rbp
jne 0x6aaa10
test rbx,rbx
mov qword[rsp+0xf8],rdi
mov byte[rax+rdi],0
je 0x6aa70b
movzx eax,byte[rsi+0x38]
mov rdi,qword[rsp+0xd8]
mov byte[rsp+0x83],al
lea rax,[rbx+0x10]
mov qword[rbx],rax
mov r15,qword[rsp+0xd0]
mov qword[rsp+0x70],rax
mov rax,r15
add rax,rdi
je 0x6aa780
test r15,r15
jne 0x6aa780
lea rcx,[0x00aba520]
call fcn.00a4f4e0
nop
cmp rdi,0xf
mov qword[rsp+0xa8],rdi
ja 0x6aa923
cmp rdi,1
je 0x6aa9f1
test rdi,rdi
mov rax,rcx
jne 0x6aa94a
mov qword[rbx+0x28],rdi
mov byte[rax+rdi],0
movzx eax,byte[rsp+0x83]
mov dword[rbx+0x40],eax
mov rcx,qword[rsp+0xf0]
cmp rcx,rbp
je 0x6aa71d
call fcn.00a5af30
add qword[r12+8],0x48
mov rcx,qword[rsp+0xd0]
lea rax,[r13+0x10]
cmp rcx,rax
je 0x6aa739
call fcn.00a5af30
mov rcx,qword[rsp+0xb0]
cmp rcx,qword[rsp+0x50]
je 0x6aa74d
call fcn.00a5af30
mov rsi,qword[rsi+8]
test rsi,rsi
jne 0x6aa4a4
mov rax,qword[rsp+0x58]
mov rax,qword[rax+8]
test rax,rax
mov qword[rsp+0x58],rax
je 0x6aaa30
xor edx,edx
jmp 0x6aa467
cmp rdi,0xf
mov qword[rsp+0xa0],rdi
ja 0x6aa970
cmp rdi,1
je 0x6aa9e0
test rdi,rdi
mov rax,qword[rsp+0x70]
jne 0x6aaa20
lea rcx,[rbx+0x30]
mov qword[rbx+8],rdi
mov byte[rax+rdi],0
mov rdi,qword[rsp+0xf8]
mov qword[rbx+0x20],rcx
mov r15,qword[rsp+0xf0]
mov rax,r15
add rax,rdi
je 0x6aa6d0
test r15,r15
jne 0x6aa6d0
lea rcx,[0x00aba520]
call fcn.00a4f4e0
nop dword[rax+rax]
mov rcx,qword[rsp+0x60]
xor r8d,r8d
mov rdx,r13
call fcn.00a30910
mov rcx,rax
mov qword[rsp+0xb0],rax
mov rax,qword[rsp+0xd0]
mov qword[rsp+0xc0],rax
mov r8,rbx
mov rdx,rdi
call sub.msvcrt.dll_memcpy
mov r8,qword[rsp+0xd0]
mov rcx,qword[rsp+0xb0]
jmp 0x6aa548
lea rdx,[rsp+0xa8]
mov rcx,r13
xor r8d,r8d
call fcn.00a2dfc0
mov rcx,rax
mov qword[rsp+0xd0],rax
mov rax,qword[rsp+0xa8]
mov qword[rsp+0xe0],rax
mov r8,rbx
mov rdx,rdi
call sub.msvcrt.dll_memcpy
mov rbx,qword[rsp+0xa8]
mov rax,qword[rsp+0xd0]
jmp 0x6aa5d9
mov rcx,qword[rsp+0x68]
lea rdx,[rsp+0x98]
xor r8d,r8d
call fcn.00a2dfc0
mov rcx,rax
mov qword[rsp+0xf0],rax
mov rax,qword[rsp+0x98]
mov qword[rsp+0x100],rax
mov r8,rdi
mov rdx,r14
call sub.msvcrt.dll_memcpy
mov rdi,qword[rsp+0x98]
mov rax,qword[rsp+0xf0]
jmp 0x6aa671
lea r9,[rsi+0x38]
mov r8,r14
mov rdx,r13
mov rcx,r12
call fcn.00a12300
jmp 0x6aa723
movzx eax,word[rdi]
mov word[rcx],ax
jmp 0x6aa548
movzx eax,byte[rdi]
mov byte[rsp+0xe0],al
lea rax,[r13+0x10]
jmp 0x6aa5d9
lea rdx,[rsp+0xa8]
lea rcx,[rbx+0x20]
xor r8d,r8d
call fcn.00a2dfc0
mov rcx,rax
mov qword[rbx+0x20],rax
mov rax,qword[rsp+0xa8]
mov qword[rbx+0x30],rax
mov r8,rdi
mov rdx,r15
call sub.msvcrt.dll_memcpy
mov rdi,qword[rsp+0xa8]
mov rax,qword[rbx+0x20]
jmp 0x6aa6f8
lea rdx,[rsp+0xa0]
xor r8d,r8d
mov rcx,rbx
call fcn.00a2dfc0
mov rcx,rax
mov qword[rbx],rax
mov rax,qword[rsp+0xa0]
mov qword[rbx+0x10],rax
mov r8,rdi
mov rdx,r15
call sub.msvcrt.dll_memcpy
mov rdi,qword[rsp+0xa0]
mov rax,qword[rbx]
jmp 0x6aa7aa
movzx eax,byte[rsp+0x110]
mov byte[rsp+0x100],al
mov rax,rbp
jmp 0x6aa671
lea rcx,[0x00aba520]
call fcn.00a4f4e0
nop dword[rax]
movzx eax,byte[r15]
mov byte[rbx+0x10],al
mov rax,qword[rsp+0x70]
jmp 0x6aa7aa
movzx eax,byte[r15]
mov byte[rbx+0x30],al
mov rax,rcx
jmp 0x6aa6f8
mov rcx,rax
jmp 0x6aa86e
mov rcx,rbp
jmp 0x6aa8c0
mov rcx,rax
jmp 0x6aa995
test dl,dl
jne 0x6aa3f0
mov rax,r12
add rsp,0x318
pop rbx
pop rsi
pop rdi
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
{% endhighlight %}


[similar_1_ref]: /report/fcn.00671590@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_2_ref]: /report/fcn.00674c10@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_3_ref]: /report/fcn.005feee0@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_4_ref]: /report/fcn.006b9e90@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_5_ref]: /report/fcn.005c0710@a5905e3c253c25bbaf727a1a18fe8ed1
[virustotal_ref]: https://www.virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1