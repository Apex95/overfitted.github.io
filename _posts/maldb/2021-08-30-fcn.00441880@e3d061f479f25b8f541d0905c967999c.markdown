---
layout: post
title:  "fcn.00441880 @ e3d061f479f25b8f541d0905c967999c"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00441880
- **Origin (md5):** e3d061f479f25b8f541d0905c967999c
- **VirusTotal:** [virustotal.com/gui/file/e3d061f479f25b8f541d0905c967999c][virustotal_ref]

# Code Tags
<span class="tag" id="THREAD">THREAD</span>


# Behaviour Tags
<span class="bhv-tag" id="CREATES_SOCKET_LISTENER">CREATES_SOCKET_LISTENER / 0.13383551930192256</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [110.8224105834961, -41.1246452331543, '<b><a href="/report/fcn.00441880@e3d061f479f25b8f541d0905c967999c">fcn.00441880</a><br>@e3d061f479f25b8f541d0905c967999c</b><br>', 'point { fill-color: #e0440e; }'],
[36.81159210205078, -194.01585388183594, '<b><a href="/report/fcn.00457bf0@3e981d1767f44f5fe2446a49ffe52f4e">fcn.00457bf0</a><br>@3e981d1767f44f5fe2446a49ffe52f4e</b><br>', 'null'],
[-15.561859130859375, -23.29051971435547, '<b><a href="/report/fcn.00441880@3d7f25d788af3e7f7707a736ac852465">fcn.00441880</a><br>@3d7f25d788af3e7f7707a736ac852465</b><br>', 'null'],
[-108.11358642578125, -168.93902587890625, '<b><a href="/report/fcn.0048f780@3e981d1767f44f5fe2446a49ffe52f4e">fcn.0048f780</a><br>@3e981d1767f44f5fe2446a49ffe52f4e</b><br>', 'null'],
[282.1349792480469, 80.11542510986328, '<b><a href="/report/fcn.004494a0@f5b8476c36459986b226c45654aeb016">fcn.004494a0</a><br>@f5b8476c36459986b226c45654aeb016</b><br>', 'null'],
[-112.80120849609375, 312.7476501464844, '<b><a href="/report/fcn.00464ae0@3e981d1767f44f5fe2446a49ffe52f4e">fcn.00464ae0</a><br>@3e981d1767f44f5fe2446a49ffe52f4e</b><br>', 'null'],
[-150.81649780273438, 71.81437683105469, '<b><a href="/report/fcn.00437fb0@3e981d1767f44f5fe2446a49ffe52f4e">fcn.00437fb0</a><br>@3e981d1767f44f5fe2446a49ffe52f4e</b><br>', 'null'],
[255.1534881591797, -108.0758285522461, '<b><a href="/report/fcn.0040c113@505be53c36227b94e2fcc406f247f6e5">fcn.0040c113</a><br>@505be53c36227b94e2fcc406f247f6e5</b><br>', 'null'],
[-37.19181442260742, -332.3983154296875, '<b><a href="/report/fcn.00408b10@e2ba7f10eb234338a49853c34d7d9c56">fcn.00408b10</a><br>@e2ba7f10eb234338a49853c34d7d9c56</b><br>', 'null'],
[64.35237884521484, 82.70243072509766, '<b><a href="/report/fcn.00441880@6e426bd8e348fab7a17ba317fb0f2d87">fcn.00441880</a><br>@6e426bd8e348fab7a17ba317fb0f2d87</b><br>', 'null'],
[-221.38067626953125, 201.62086486816406, '<b><a href="/report/fcn.100c9e60@89dc67d2f980e8488f97b1bf8cb24258">fcn.100c9e60</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
and esp, 0xfffffff8
push 0xffffffffffffffff
push 0x450a16
mov eax, dword
push eax
sub esp, 0x6c
push esi
push edi
mov eax, dword[0x475084]
xor eax, esp
push eax
lea eax, [esp+0x78]
mov dword
push dword[0x476120]
call fcn.00412c8a
pop ecx
mov dword[esp+0x38], eax
and dword[esp+0x80], 0
push dword[0x476120]
push dword[0x476208]
push 0
call fcn.0043a48f
mov eax, dword[ebx+0xcc]
add esp, 0xc
test eax, eax
je 0x4418e9
push eax
call fcn.0043babf
lea edi, [ebx+0x10]
call dword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
push eax
call fcn.00404164
mov esi, eax
mov eax, dword[esi+0x14]
xor ecx, ecx
test eax, eax
jle 0x441912
mov edx, dword[esi+0x10]
cmp dword[edx], edi
je 0x441915
inc ecx
add edx, 4
cmp ecx, eax
jl 0x441906
or ecx, 0xffffffff
cmp ecx, 0xffffffff
je 0x441949
test ecx, ecx
js 0x441949
cmp ecx, eax
jge 0x441949
lea edx, [eax-1]
cmp ecx, edx
je 0x441946
mov edx, dword[esi+0x10]
sub eax, ecx
shl eax, 2
lea ecx, [edx+ecx*4]
lea edx, [eax-4]
push edx
lea edx, [ecx+4]
push edx
push eax
push ecx
call fcn.00403d87
add esp, 0x10
dec dword[esi+0x14]
mov eax, dword[ebx+0x54]
sub eax, dword[ebx+0x50]
sar eax, 2
test eax, eax
jne 0x441967
mov ecx, dword[ebx+0x64]
sub ecx, dword[ebx+0x60]
sar ecx, 2
test ecx, ecx
je 0x441be9
mov ecx, dword[ebx+0x64]
sub ecx, dword[ebx+0x60]
sar ecx, 2
push ecx
push eax
push dword[0x476124]
push 0
call fcn.0043a48f
add esp, 0x10
lea eax, [esp+0x3c]
push eax
lea ecx, [ebx+0x50]
call fcn.00402888
mov byte[esp+0x80], 1
mov eax, dword[ebx+0x64]
mov edi, dword[ebx+0x60]
mov dword[esp+0x28], eax
cmp edi, eax
je 0x4419b9
mov eax, edi
lea esi, [esp+0x3c]
call fcn.00402915
add edi, 4
cmp edi, dword[esp+0x28]
jne 0x4419a5
mov esi, dword[esp+0x3c]
mov edi, dword[esp+0x40]
jmp 0x4419ce
mov eax, dword[esi]
mov ecx, dword[eax]
push eax
call dword[ecx+0xc]
add esi, 4
cmp esi, edi
jne 0x4419c3
mov esi, dword[esp+0x3c]
jmp 0x4419e3
mov eax, dword[esi]
mov ecx, dword[eax]
push eax
call dword[ecx+0x10]
add esi, 4
cmp esi, edi
jne 0x4419d8
mov dword[esp+0x2c], 0x2b
mov dword[esp+0x10], 0x47
mov dword[esp+0x18], 0x5b
push 0x56
pop eax
mov dword[esp+0x14], eax
mov dword[esp+0x1c], 0x27
mov dword[esp+0x10], 6
mov ecx, dword[esp+0x14]
add ecx, 0xa
mov dword[esp+0x18], ecx
mov ecx, dword[esp+0x14]
imul ecx, ecx, 0x45
mov dword[esp+0x10], ecx
mov ecx, dword[esp+0x2c]
sub ecx, 0x20
mov dword[esp+0x18], ecx
mov ecx, dword[esp+0x10]
add ecx, eax
mov dword[esp+0x10], ecx
mov eax, dword[esp+0x14]
mov dword[esp+0x14], eax
mov eax, dword[esp+0x1c]
sub eax, 0x22
mov dword[esp+0x18], eax
mov eax, dword[esp+0x10]
mov ecx, dword[esp+0x10]
imul eax, ecx
mov ecx, 0xffffff68
sub ecx, eax
mov eax, dword[esp+0x1c]
mov edx, dword[esp+0x18]
imul eax, edx
sub ecx, eax
add ecx, dword[esp+0x1c]
add ecx, dword[esp+0x10]
mov dword[esp+0x14], ecx
mov dword[esp+0x14], 0x29
mov dword[esp+0x18], 0x37
mov dword[esp+0x10], 0xc
mov dword[esp+0x1c], 0x31
mov eax, dword[esp+0x1c]
mov ecx, dword[esp+0x18]
imul eax, ecx
mov ecx, dword[esp+0x18]
imul eax, eax, 0xffffffd3
imul ecx, ecx, 0x37
sub eax, ecx
mov ecx, dword[esp+0x14]
sub eax, ecx
add eax, dword[esp+0x1c]
mov ecx, dword[esp+0x10]
lea eax, [eax+ecx+1]
mov dword[esp+0x1c], eax
mov eax, dword[esp+0x10]
mov ecx, dword[esp+0x14]
imul eax, ecx
mov ecx, dword[esp+0x10]
sub eax, ecx
add eax, dword[esp+0x18]
add eax, dword[esp+0x18]
add eax, dword[esp+0x14]
mov dword[esp+0x10], eax
mov eax, dword[esp+0x18]
mov eax, dword[esp+0x14]
mov eax, dword[esp+0x10]
mov ecx, dword[esp+0x14]
cmp ecx, eax
jl 0x441b0c
mov eax, dword[esp+0x10]
imul eax, eax, 0x5e
mov dword[esp+0x14], eax
mov ecx, dword[ebx+0x64]
mov eax, dword[ebx+0x60]
cmp eax, ecx
je 0x441b42
push ecx
call fcn.004035a7
mov esi, dword[ebx+0x64]
mov edi, eax
pop ecx
mov dword[esp+0x2c], edi
jmp 0x441b37
mov eax, dword[edi]
test eax, eax
je 0x441b34
mov ecx, dword[eax]
push eax
call dword[ecx+8]
add edi, 4
cmp edi, esi
jne 0x441b28
mov eax, dword[esp+0x2c]
mov dword[ebx+0x64], eax
fld qword[0x46f970]
lea esi, [esp+0x3c]
fstp qword[esp+0x2c]
fld qword[esp+0x2c]
fld qword[0x46f968]
fadd st(1), st(0)
fld qword[esp+0x2c]
fmul qword[esp+0x2c]
fmul qword[esp+0x2c]
fdivrp st(1)
fsubp st(1)
fstp qword[esp+0x2c]
fld qword[esp+0x2c]
fld qword[esp+0x2c]
fmul qword[esp+0x2c]
fmul qword[esp+0x2c]
fsubp st(1)
fadd qword[esp+0x2c]
fadd qword[0x46f960]
fld qword[esp+0x2c]
fdiv qword[0x46f910]
fsubp st(1)
fadd qword[esp+0x2c]
fadd qword[esp+0x2c]
fsub qword[0x46f958]
fstp qword[esp+0x2c]
fld qword[esp+0x2c]
fadd qword[esp+0x2c]
fstp qword[esp+0x2c]
fld qword[esp+0x2c]
fsub qword[0x46f950]
fstp qword[esp+0x2c]
fld qword[esp+0x2c]
fsub qword[0x46f920]
fld qword[esp+0x2c]
fmul qword[esp+0x2c]
fsubp st(1)
fstp qword[esp+0x2c]
mov byte[esp+0x80], 0
call fcn.00402e45
mov eax, dword[ebx+0xa8]
test eax, eax
je 0x441c00
mov ecx, dword[eax]
push eax
call dword[ecx+8]
and dword[ebx+0xa8], 0
lea eax, [ebx+0xac]
xor ecx, ecx
cmp dword[eax], ecx
je 0x441c13
push ecx
push ecx
call fcn.00403cf5
mov esi, dword[ebx+0x20]
test esi, esi
je 0x441c1f
call fcn.0042ecef
mov dword[esp+0x18], 0x2d
mov dword[esp+0x2c], 0x17
mov dword[esp+0x1c], 0
mov eax, dword[esp+0x18]
mov ecx, dword[esp+0x1c]
imul eax, eax, 0x60
sub eax, ecx
add eax, dword[esp+0x1c]
mov dword[esp+0x18], eax
mov eax, dword[ebx+0x20]
test eax, eax
je 0x441c5d
mov ecx, dword[eax]
push eax
call dword[ecx+8]
and dword[ebx+0x20], 0
mov eax, dword[ebx+0xe0]
test eax, eax
je 0x441db3
push eax
push dword[0x476128]
push 0
call fcn.0043a48f
fld qword[0x46f948]
fstp qword[esp+0x38]
add esp, 0xc
fld qword[esp+0x2c]
fadd qword[esp+0x2c]
fstp qword[esp+0x2c]
fld qword[esp+0x2c]
fsub qword[0x46f940]
fstp qword[esp+0x2c]
fld qword[esp+0x2c]
fadd qword[0x46f938]
fstp qword[esp+0x2c]
fld qword[esp+0x2c]
fadd qword[0x46f930]
fsub qword[esp+0x2c]
fadd qword[esp+0x2c]
fadd qword[esp+0x2c]
fadd qword[0x46f928]
fsub qword[esp+0x2c]
mov eax, dword[ebx+0xdc]
mov ecx, dword[eax]
mov dword[esp+0x28], ecx
fstp qword[esp+0x2c]
cmp ecx, eax
je 0x441d1b
mov esi, dword[ecx+0x10]
test esi, esi
je 0x441d06
lea eax, [esi+8]
push eax
call dword[sym.imp.OLEAUT32.dll_VariantCopy]
mov eax, dword[esi]
test eax, eax
je 0x441cff
mov ecx, dword[eax]
push eax
call dword[ecx+8]
push esi
call fcn.00410b32
pop ecx
lea eax, [esp+0x28]
call fcn.00402f37
mov ecx, dword[esp+0x28]
cmp ecx, dword[ebx+0xdc]
jne 0x441ce2
mov dword[esp+0x10], 0x29
mov dword[esp+0x18], 0x37
mov dword[esp+0x14], 0xc
mov dword[esp+0x1c], 0x31
mov eax, dword[esp+0x1c]
mov ecx, dword[esp+0x18]
imul eax, ecx
mov ecx, dword[esp+0x18]
imul eax, eax, 0xffffffd3
imul ecx, ecx, 0x37
sub eax, ecx
mov ecx, dword[esp+0x10]
sub eax, ecx
add eax, dword[esp+0x1c]
mov ecx, dword[esp+0x14]
lea eax, [eax+ecx+1]
mov dword[esp+0x1c], eax
mov eax, dword[esp+0x14]
mov ecx, dword[esp+0x10]
imul eax, ecx
mov ecx, dword[esp+0x14]
sub eax, ecx
add eax, dword[esp+0x18]
add eax, dword[esp+0x18]
add eax, dword[esp+0x10]
mov dword[esp+0x14], eax
mov eax, dword[esp+0x18]
mov eax, dword[esp+0x10]
mov eax, dword[esp+0x14]
mov ecx, dword[esp+0x10]
cmp ecx, eax
jl 0x441da8
mov eax, dword[esp+0x14]
imul eax, eax, 0x5e
mov dword[esp+0x10], eax
lea edi, [ebx+0xd8]
call fcn.00402c0d
and dword[0x477fb4], 0
mov dword[esp+0x2c], 0x2b
mov dword[esp+0x10], 0x47
mov dword[esp+0x14], 0x5b
push 0x56
pop eax
mov dword[esp+0x18], eax
mov dword[esp+0x1c], 0x27
mov dword[esp+0x10], 6
mov ecx, dword[esp+0x18]
add ecx, 0xa
mov dword[esp+0x14], ecx
mov ecx, dword[esp+0x18]
imul ecx, ecx, 0x45
mov dword[esp+0x10], ecx
mov ecx, dword[esp+0x2c]
sub ecx, 0x20
mov dword[esp+0x14], ecx
mov ecx, dword[esp+0x10]
add ecx, eax
mov dword[esp+0x10], ecx
mov eax, dword[esp+0x18]
mov dword[esp+0x18], eax
mov eax, dword[esp+0x1c]
sub eax, 0x22
mov dword[esp+0x14], eax
mov eax, dword[esp+0x10]
mov ecx, dword[esp+0x10]
imul eax, ecx
mov ecx, 0xffffff68
sub ecx, eax
mov eax, dword[esp+0x1c]
mov edx, dword[esp+0x14]
imul eax, edx
sub ecx, eax
add ecx, dword[esp+0x1c]
add ecx, dword[esp+0x10]
push dword[ebx+0x2c]
mov dword[esp+0x1c], ecx
call dword[sym.imp.USER32.dll_DestroyWindow]
fld qword[0x46f920]
fstp qword[esp+0x1c]
push 0
fld qword[0x46f918]
lea eax, [esp+0x50]
fstp qword[esp+0x30]
fld qword[esp+0x30]
fsub qword[esp+0x30]
fld qword[esp+0x30]
fmul qword[0x46f910]
fsubp st(1)
fld qword[esp+0x30]
fmul qword[0x46f908]
fmul qword[esp+0x30]
fsubp st(1)
fld qword[esp+0x30]
fmul qword[esp+0x20]
fsubp st(1)
fadd qword[0x46f900]
fstp qword[esp+0x20]
call fcn.0043d595
mov eax, dword[esp+0x50]
mov dword[ebx+0x2c], eax
mov eax, dword[esp+0x64]
lea edi, [ebx+0x30]
lea esi, [esp+0x54]
movsd dword
mov dword[ebx+0x40], eax
mov eax, dword[esp+0x68]
movsd dword
mov dword[ebx+0x44], eax
mov eax, dword[esp+0x6c]
mov dword[ebx+0x48], eax
mov eax, dword[esp+0x70]
movsd dword
mov dword[ebx+0x4c], eax
lea eax, [esp+0x4c]
movsd dword
call fcn.0043d5bf
fld qword[0x46f920]
fstp qword[esp+0x1c]
fld qword[0x46f918]
fstp qword[esp+0x2c]
fld qword[esp+0x2c]
fsub qword[esp+0x2c]
fld qword[esp+0x2c]
fmul qword[0x46f910]
fsubp st(1)
fld qword[esp+0x2c]
fmul qword[0x46f908]
fmul qword[esp+0x2c]
fsubp st(1)
fld qword[esp+0x2c]
fmul qword[esp+0x1c]
mov esi, dword[ebx+0x24]
fsubp st(1)
fadd qword[0x46f900]
fstp qword[esp+0x1c]
test esi, esi
je 0x441f49
push esi
call fcn.00439729
push esi
call fcn.00410b32
pop ecx
mov dword[esp+0x18], 0x2d
mov dword[esp+0x2c], 0x17
mov dword[esp+0x1c], 0
mov eax, dword[esp+0x18]
mov ecx, dword[esp+0x1c]
imul eax, eax, 0x60
sub eax, ecx
add eax, dword[esp+0x1c]
and dword[ebx+0x24], ecx
mov dword[esp+0x18], eax
or dword[esp+0x80], 0xffffffff
lea esi, [esp+0x38]
call fcn.0040462e
mov ecx, dword[esp+0x78]
mov dword
pop ecx
pop edi
pop esi
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/e3d061f479f25b8f541d0905c967999c