---
layout: post
title:  "fcn.004021c0 @ 3a017db0719485179e5931e1ff048b6a"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.004021c0
- **Origin (md5):** 3a017db0719485179e5931e1ff048b6a
- **VirusTotal:** [virustotal.com/gui/file/3a017db0719485179e5931e1ff048b6a][virustotal_ref]

# Code Tags
<span class="tag" id="PROCESS">PROCESS</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [229.197265625, -57.15467834472656, '<b><a href="/report/fcn.004021c0@3a017db0719485179e5931e1ff048b6a">fcn.004021c0</a><br>@3a017db0719485179e5931e1ff048b6a</b><br>', 'point { fill-color: #e0440e; }'],
[223.96328735351562, 89.91515350341797, '<b><a href="/report/fcn.004021c0@6f3954a480bef11309decb3759df55ad">fcn.004021c0</a><br>@6f3954a480bef11309decb3759df55ad</b><br>', 'null'],
[-11.630355834960938, -172.23635864257812, '<b><a href="/report/fcn.004021c0@cd64783198de5872d050db281b6d529b">fcn.004021c0</a><br>@cd64783198de5872d050db281b6d529b</b><br>', 'null'],
[-29.636751174926758, -4.139326572418213, '<b><a href="/report/fcn.00401c90@368dd66411b8b6ce2bcd15b0e14af5c0">fcn.00401c90</a><br>@368dd66411b8b6ce2bcd15b0e14af5c0</b><br>', 'null'],
[143.01145935058594, -193.39637756347656, '<b><a href="/report/fcn.004021c0@47d4e089bbf62dab1a8f678bd32b173c">fcn.004021c0</a><br>@47d4e089bbf62dab1a8f678bd32b173c</b><br>', 'null'],
[-35.332889556884766, 155.16580200195312, '<b><a href="/report/fcn.00401c90@c0371bf2f84d37acabd30e547b4cc5fa">fcn.00401c90</a><br>@c0371bf2f84d37acabd30e547b4cc5fa</b><br>', 'null'],
[85.24100494384766, 64.85035705566406, '<b><a href="/report/fcn.004021c0@125511dc58d9fe5b15e0562013727778">fcn.004021c0</a><br>@125511dc58d9fe5b15e0562013727778</b><br>', 'null'],
[-153.210693359375, 65.44581604003906, '<b><a href="/report/fcn.00401c90@835812ed365516de32516b9bf14b0450">fcn.00401c90</a><br>@835812ed365516de32516b9bf14b0450</b><br>', 'null'],
[-137.6079864501953, -95.69523620605469, '<b><a href="/report/fcn.004021c0@2a380710d2016aed75cfad6eacab1d1a">fcn.004021c0</a><br>@2a380710d2016aed75cfad6eacab1d1a</b><br>', 'null'],
[87.59540557861328, -65.25333404541016, '<b><a href="/report/fcn.004021c0@985d3a961f1a2ad37039ba25bf21c0ee">fcn.004021c0</a><br>@985d3a961f1a2ad37039ba25bf21c0ee</b><br>', 'null'],
[108.28365325927734, 203.74227905273438, '<b><a href="/report/fcn.004021c0@83f49824bfe7c3c24f4b74a2ba6ab65b">fcn.004021c0</a><br>@83f49824bfe7c3c24f4b74a2ba6ab65b</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
push 0xffffffffffffffff
push 0x481af0
mov eax, dword
push eax
push ecx
sub esp, 0xe8
push ebx
push esi
push edi
mov eax, dword[0x49b06c]
xor eax, ebp
push eax
lea eax, [ebp-0xc]
mov dword
mov dword[ebp-0x10], esp
mov dword[ebp-4], 0
push 0
call fcn.00407fa0
add esp, 4
mov dword[ebp-0xc4], eax
mov eax, dword[ebp-0xc4]
mov dword[ebp-0x98], eax
push 2
call fcn.00407fa0
add esp, 4
mov dword[ebp-0x50], eax
mov ecx, dword[ebp-0x50]
mov dword[ebp-0x44], ecx
push 0
push 0
push 3
push 0x80010000
mov edx, dword[ebp+8]
push edx
call fcn.00401e70
add esp, 0x14
mov dword[ebp-0x54], eax
mov eax, dword[ebp-0x54]
mov dword[ebp-0x30], eax
cmp dword[ebp-0x30], 0xffffffff
jne off.b146
xor al, al
jmp off.b1207
mov ecx, dword[ebp-0x30]
mov dword[ebp-0x34], ecx
mov byte[ebp-4], 1
mov dword[ebp-0xe8], 0x200
mov edx, 0x214
add edx, 0x78
mov dword[ebp-0x2c], edx
mov eax, dword[ebp-0x2c]
push eax
call fcn.0045c788
add esp, 4
mov dword[ebp-0x58], eax
mov ecx, dword[ebp-0x58]
mov dword[ebp-0x5c], ecx
mov edx, dword[ebp-0x5c]
mov dword[ebp-0x28], edx
mov byte[ebp-4], 2
mov eax, dword[ebp-0x2c]
sub eax, 0x68
mov dword[ebp-0x60], eax
mov ecx, dword[ebp-0x28]
mov dword[ebp-0x64], ecx
lea edx, [ebp-0x40]
push edx
mov eax, dword[ebp-0x60]
push eax
mov ecx, dword[ebp-0x64]
push ecx
push 1
mov edx, dword[ebp-0x30]
push edx
call dword[ebp-0x44]
mov dword[ebp-0x68], eax
cmp dword[ebp-0x68], 0
je off.b364
mov eax, dword[ebp-0x40]
push eax
lea ecx, [ebp-0x2c]
call fcn.00402130
mov ecx, dword[ebp-0x2c]
sub ecx, 0x68
mov dword[ebp-0x6c], ecx
mov edx, dword[ebp-0x28]
mov dword[ebp-0x70], edx
lea eax, [ebp-0x40]
push eax
mov ecx, dword[ebp-0x6c]
push ecx
mov edx, dword[ebp-0x70]
push edx
push 1
mov eax, dword[ebp-0x30]
push eax
call dword[ebp-0x44]
mov dword[ebp-0x74], eax
cmp dword[ebp-0x74], 0
je off.b364
mov byte[ebp-0x19], 0
mov byte[ebp-4], 1
mov ecx, dword[ebp-0x28]
mov dword[ebp-0x78], ecx
mov edx, dword[ebp-0x78]
push edx
call fcn.0045c791
add esp, 4
mov byte[ebp-4], 0
mov eax, dword[ebp-0x34]
mov dword[ebp-0x7c], eax
mov ecx, dword[ebp-0x7c]
push ecx
call dword[sym.imp.KERNEL32.dll_CloseHandle]
mov al, byte[ebp-0x19]
jmp off.b1207
mov edx, dword[ebp-0x28]
mov dword[ebp-0x18], edx
mov eax, dword[ebp-0x18]
mov dword[ebp-0x24], eax
mov ecx, dword[ebp-0x2c]
mov dword[ebp-0x80], ecx
mov edx, 2
imul eax, edx, 0
mov ecx, dword[ebp-0x18]
lea edx, [ecx+eax+0xc]
mov eax, dword[ebp-0x18]
add eax, dword[ebp-0x80]
sub eax, edx
shr eax, 1
mov dword[ebp-0x84], eax
mov ecx, dword[ebp-0x18]
movzx edx, word[ecx]
push edx
mov eax, dword[ebp-0x18]
mov ecx, dword[eax+4]
push ecx
mov edx, dword[ebp-0x18]
add edx, 0xc
push edx
call fcn.0045e6a0
add esp, 0xc
mov eax, dword[ebp-0x18]
movzx ecx, word[eax]
shr ecx, 1
mov dword[ebp-0x14], ecx
mov edx, dword[ebp-0x14]
mov dword[ebp-0x38], edx
jmp off.b470
mov eax, dword[ebp-0x14]
sub eax, 1
mov dword[ebp-0x14], eax
cmp dword[ebp-0x38], 0
je off.b505
mov ecx, dword[ebp-0x38]
sub ecx, 1
mov dword[ebp-0x38], ecx
mov edx, dword[ebp-0x38]
mov eax, dword[ebp-0x18]
movzx ecx, word[eax+edx*2+0xc]
cmp ecx, 0x5c
jne off.b503
jmp off.b505
jmp off.b461
mov edx, dword[ebp-0x84]
sub edx, dword[ebp-0x14]
mov dword[ebp-0x48], edx
lea eax, [ebp-0x48]
push eax
mov ecx, dword[ebp-0x14]
mov edx, dword[ebp-0x24]
lea eax, [edx+ecx*2+0xc]
push eax
call fcn.00402030
add esp, 8
mov byte[ebp-0x1a], al
movzx ecx, byte[ebp-0x1a]
test ecx, ecx
jne off.b617
mov byte[ebp-0x1b], 0
mov byte[ebp-4], 1
mov edx, dword[ebp-0x28]
mov dword[ebp-0x88], edx
mov eax, dword[ebp-0x88]
push eax
call fcn.0045c791
add esp, 4
mov byte[ebp-4], 0
mov ecx, dword[ebp-0x34]
mov dword[ebp-0x8c], ecx
mov edx, dword[ebp-0x8c]
push edx
call dword[sym.imp.KERNEL32.dll_CloseHandle]
mov al, byte[ebp-0x1b]
jmp off.b1207
mov eax, dword[ebp-0x14]
add eax, dword[ebp-0x48]
mov dword[ebp-0x14], eax
call dword[sym.imp.KERNEL32.dll_GetCurrentProcessId]
mov dword[ebp-0x90], eax
mov ecx, dword[ebp-0x14]
mov edx, dword[ebp-0x24]
lea eax, [edx+ecx*2+0xc]
push eax
push 4
lea ecx, [ebp-0x90]
push ecx
call fcn.00401f00
add esp, 0xc
mov edx, dword[ebp-0x14]
add edx, 8
mov dword[ebp-0x14], edx
lock dec
mov eax, dword[ebp-0x14]
mov ecx, dword[ebp-0x24]
lea edx, [ecx+eax*2+0xc]
push edx
push 4
push 0x49f378
call fcn.00401f00
add esp, 0xc
mov eax, dword[ebp-0x14]
add eax, 8
mov dword[ebp-0x14], eax
mov ecx, dword[ebp-0x14]
shl ecx, 1
mov edx, dword[ebp-0x24]
mov dword[edx+8], ecx
mov eax, dword[ebp-0x24]
mov dword[eax], 1
mov ecx, dword[ebp-0x24]
mov dword[ecx+4], 0
mov edx, dword[ebp-0x2c]
mov dword[ebp-0x94], edx
push 0xa
mov eax, dword[ebp-0x94]
push eax
mov ecx, dword[ebp-0x24]
push ecx
lea edx, [ebp-0xf0]
push edx
mov eax, dword[ebp-0x30]
push eax
call dword[ebp-0x98]
mov dword[ebp-0x9c], eax
cmp dword[ebp-0x9c], 0
je off.b867
mov byte[ebp-0x1c], 0
mov byte[ebp-4], 1
mov ecx, dword[ebp-0x28]
mov dword[ebp-0xa0], ecx
mov edx, dword[ebp-0xa0]
push edx
call fcn.0045c791
add esp, 4
mov byte[ebp-4], 0
mov eax, dword[ebp-0x34]
mov dword[ebp-0xa4], eax
mov ecx, dword[ebp-0xa4]
push ecx
call dword[sym.imp.KERNEL32.dll_CloseHandle]
mov al, byte[ebp-0x1c]
jmp off.b1207
mov byte[ebp-4], 1
mov edx, dword[ebp-0x28]
mov dword[ebp-0xa8], edx
mov eax, dword[ebp-0xa8]
push eax
call fcn.0045c791
add esp, 4
push 5
call fcn.00407fa0
add esp, 4
mov dword[ebp-0xac], eax
mov ecx, dword[ebp-0xac]
mov dword[ebp-0xb4], ecx
push 6
call fcn.00407fa0
add esp, 4
mov dword[ebp-0xb0], eax
mov edx, dword[ebp-0xb0]
mov dword[ebp-0xb8], edx
mov ax, word[0x492ce0]
mov word[ebp-0x3c], ax
xor ecx, ecx
mov word[ebp-0xcc], cx
mov edx, 2
mov word[ebp-0xca], dx
lea eax, [ebp-0x3c]
mov dword[ebp-0xc8], eax
mov dword[ebp-0xe4], 0x18
mov ecx, dword[ebp-0x30]
mov dword[ebp-0xe0], ecx
mov dword[ebp-0xd8], 0
lea edx, [ebp-0xcc]
mov dword[ebp-0xdc], edx
mov dword[ebp-0xd4], 0
mov dword[ebp-0xd0], 0
mov dword[ebp-0x4c], 0
push 0x1000
push 7
lea eax, [ebp-0xf8]
push eax
lea ecx, [ebp-0xe4]
push ecx
push 0x10000
lea edx, [ebp-0x4c]
push edx
call dword[ebp-0xb4]
mov eax, dword[ebp-0x4c]
push eax
call dword[ebp-0xb8]
mov byte[ebp-0x1d], 1
mov byte[ebp-4], 0
mov ecx, dword[ebp-0x34]
mov dword[ebp-0xbc], ecx
mov edx, dword[ebp-0xbc]
push edx
call dword[sym.imp.KERNEL32.dll_CloseHandle]
mov al, byte[ebp-0x1d]
jmp off.b1207
mov ecx, dword[ebp-0xc]
mov dword
pop ecx
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/3a017db0719485179e5931e1ff048b6a