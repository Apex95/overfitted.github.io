---
layout: post
title:  "fcn.0057adc0 @ a5905e3c253c25bbaf727a1a18fe8ed1"
date:   2021-08-30 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0057adc0
- **Origin (md5):** a5905e3c253c25bbaf727a1a18fe8ed1
- **VirusTotal:** [virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1][virustotal_ref]

# Code Tags
<span class="tag" id="THREAD">THREAD</span>


# Similar Functions

1. [fcn.0059ebb0][similar_1_ref] (sim.: 0.9528861377310944)
2. [fcn.005a3a50][similar_2_ref] (sim.: 0.9370735810131587)
3. [fcn.00617220][similar_3_ref] (sim.: 0.9364209042629078)
4. [fcn.005fe7f0][similar_4_ref] (sim.: 0.9342598276663289)
5. [fcn.0061c530][similar_5_ref] (sim.: 0.9326842927522838)


# Disassembled Code

{% highlight nasm %}
push r15
push r14
push r13
push r12
push rbp
push rdi
push rsi
push rbx
sub rsp,0x888
mov rax,qword[rdx+8]
mov qword[rsp+0x8d8],rdx
mov qword[rsp+0x8d0],rcx
mov dword[rsp+0x8e0],r8d
lea rdx,[rax+8]
mov qword[rsp+0x20],rax
call fcn.0059a4f0
mov rcx,qword[rsp+0x8d0]
mov edx,0x64
call fcn.00713e70
mov rax,qword[rsp+0x8d0]
lea r12,[rsp+0x530]
mov rcx,r12
mov qword[rsp+0x50],rax
mov rax,qword[rsp+0x8d8]
mov rax,qword[rax+8]
lea rdx,[rax+8]
mov qword[rsp+0x20],rax
call fcn.0059a570
lea rcx,str.Hubs:__1_
call fcn.00750560
lea rdi,[rsp+0x170]
test rax,rax
mov rsi,rax
lea rbp,[rdi+0x10]
mov qword[rsp+0x170],rbp
je 0x57c9f3
mov rcx,rax
call sub.msvcrt.dll_strlen
cmp rax,0xf
mov rbx,rax
mov qword[rsp+0x70],rax
ja 0x57bd70
cmp rax,1
je 0x57c8b3
test rax,rax
mov rdx,rbp
jne 0x57cd20
lea rbx,[rsp+0x7a0]
lea rbp,[rsp+0x5e0]
mov qword[rsp+0x178],rax
mov byte[rdx+rax],0
mov rdx,rdi
mov rcx,rbx
call fcn.0093b6a0
lea rax,[rbp+0x60]
lea rcx,[rbp+0xb0]
xor r9d,r9d
mov qword[rsp+0x5e0],0
mov qword[rsp+0x5e8],0
mov qword[rsp+0x630],rax
mov rax,qword[0x00b3e010]
mov qword[rsp+0x5f0],0
mov qword[rsp+0x5f8],0
mov dword[rsp+0x600],0
mov qword[rsp+0x608],0
add rax,0x10
mov dword[rsp+0x610],0
mov qword[rsp+0x618],0
mov qword[rsp+0x658],rax
mov dword[rsp+0x620],0
mov dword[rsp+0x624],0
mov dword[rsp+0x628],0
mov byte[rsp+0x62c],0
mov qword[rsp+0x638],0
mov word[rsp+0x640],r9w
mov byte[rsp+0x650],0xff
mov qword[rsp+0x660],0
mov qword[rsp+0x668],0
mov qword[rsp+0x670],0
mov qword[rsp+0x678],0
mov qword[rsp+0x680],0
mov qword[rsp+0x688],0
call fcn.00a0b870
lea rax,[0x00b72620]
mov rdx,rbx
mov rcx,rbp
mov qword[rsp+0x698],0
mov byte[rsp+0x6a0],0
mov qword[rsp+0x658],rax
mov dword[rsp+0x6a4],0x18
mov byte[rsp+0x6b0],0
mov byte[rsp+0x650],0
call fcn.00944920
lea rax,[0x0095dce0]
lea rdx,[rsp+0xd0]
mov rcx,rbp
mov qword[rsp+0xd0],r12
mov qword[rsp+0xd8],rax
lea rax,[0x0095df70]
mov qword[rsp+0xe0],rax
call fcn.00961630
lea r13,[rsp+0x190]
mov rdx,rax
mov rcx,r13
call fcn.00969ca0
mov edx,0x64
mov rcx,r13
call fcn.00713e70
lea rcx,[0x00aa130a]
lea rsi,[rsp+0x4d0]
call sub.msvcrt.dll_wcslen
mov r14,rax
lea rax,[rsi+0x10]
xor r8d,r8d
mov rdx,r14
add rdx,qword[rsp+0x198]
mov rcx,rsi
mov qword[rsp+0x4d0],rax
mov qword[rsp+0x4d8],0
mov word[rsp+0x4e0],r8w
call fcn.00a30620
movabs rax,0x3fffffffffffffff
sub rax,qword[rsp+0x4d8]
cmp r14,rax
ja 0x57d26d
lea rdx,[0x00aa130a]
mov r8,r14
mov rcx,rsi
call fcn.00a307c0
mov r8,qword[rsp+0x198]
mov rdx,qword[rsp+0x190]
mov rcx,rsi
call fcn.00a307c0
mov r8,qword[rsp+0x4d8]
mov rdx,qword[rsp+0x4d0]
mov rcx,qword[rsp+0x50]
call fcn.00a307c0
mov rcx,qword[rsp+0x4d0]
add rsi,0x10
cmp rcx,rsi
je 0x57b140
call fcn.00a5af30
mov rcx,qword[rsp+0x190]
add r13,0x10
cmp rcx,r13
je 0x57b156
call fcn.00a5af30
cmp byte[rsp+0x6b0],0
jne 0x57bdb5
cmp byte[rsp+0x6a0],0
lea rax,[0x00b72620]
mov qword[rsp+0x658],rax
je 0x57b18a
mov rcx,qword[rsp+0x660]
call fcn.00a5af30
mov rax,qword[0x00b3e010]
lea rcx,[rbp+0xb0]
mov byte[rsp+0x6a0],0
mov qword[rsp+0x660],0
mov qword[rsp+0x668],0
mov qword[rsp+0x670],0
mov qword[rsp+0x680],0
add rax,0x10
mov qword[rsp+0x678],0
mov qword[rsp+0x688],0
mov qword[rsp+0x658],rax
mov qword[rsp+0x698],0
call fcn.00a0b980
mov rcx,qword[rsp+0x630]
lea rax,[rbp+0x60]
cmp rcx,rax
je 0x57b21b
call fcn.00a5af30
mov rcx,qword[rsp+0x5f8]
test rcx,rcx
je 0x57b22d
call fcn.00a5af30
mov rsi,qword[rsp+0x5e8]
mov r13,qword[rsp+0x5e0]
cmp rsi,r13
jne 0x57b274
jmp 0x57b298
mov rcx,qword[r13+0x28]
lea rax,[r13+0x38]
cmp rcx,rax
je 0x57b256
call fcn.00a5af30
mov rcx,qword[r13+8]
lea rax,[r13+0x18]
cmp rcx,rax
je 0x57b268
call fcn.00a5af30
add r13,0x88
cmp rsi,r13
je 0x57b290
cmp byte[r13+0x68],0
je 0x57b244
lea rcx,[r13+0x70]
call fcn.00a0b980
jmp 0x57b244
mov r13,qword[rsp+0x5e0]
test r13,r13
je 0x57b2a5
mov rcx,r13
call fcn.00a5af30
mov rcx,qword[rsp+0x7a0]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x57b2bb
call fcn.00a5af30
mov rcx,qword[rsp+0x170]
add rdi,0x10
cmp rcx,rdi
je 0x57b2d1
call fcn.00a5af30
mov rcx,qword[rsp+0x530]
add r12,0x10
cmp rcx,r12
je 0x57b2e7
call fcn.00a5af30
mov rdi,qword[0x00a7d770]
mov rax,rdi
add rax,0xa0
mov qword[rsp+0x40],rax
je 0x57d279
call qword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
mov r13d,eax
lea rax,[rdi+0xa4]
mov rsi,rax
mov qword[rsp+0x30],rax
xor eax,eax
lock cmpxchg dword[rsi],eax
cmp r13d,eax
je 0x57bdd0
lea r12,[rdi+0xa8]
mov esi,dword[rdi+0xa8]
jmp 0x57b342
mov esi,eax
mov edx,esi
mov r8d,esi
mov rcx,r12
or edx,0x80000000
call fcn.008eebc0
cmp esi,eax
jne 0x57b340
test esi,esi
js 0x57cb4c
mov rax,qword[rsp+0x30]
xchg dword[rax],r13d
mov dword[rdi+0xa0],1
mov rax,qword[rsp+0x8d8]
mov rcx,qword[0x00a7d770]
lea rdx,[rax+8]
call fcn.005ce6d0
test rax,rax
je 0x57bd37
lea rsi,[rax+0x68]
lea rax,[rsp+0x50]
mov edx,0x40
mov rcx,rsi
mov qword[rsp+0x28],rax
mov qword[rsp+0x60],rax
call fcn.00692eb0
test al,al
je 0x57bde0
lea rcx,str.Hidden_user
call fcn.00750560
lea r12,[rsp+0x1b0]
test rax,rax
mov r13,rax
lea r15,[r12+0x10]
mov qword[rsp+0x1b0],r15
je 0x57cd34
mov rcx,r13
call sub.msvcrt.dll_strlen
cmp rax,0xf
mov r14,rax
mov qword[rsp+0x78],rax
ja 0x57ca4d
cmp rax,1
je 0x57c82a
test rax,rax
mov rdx,r15
jne 0x57cd7e
mov qword[rsp+0x1b8],rax
mov rcx,rbx
mov byte[rdx+rax],0
mov rdx,r12
call fcn.0093b6a0
mov rcx,qword[rsp+0x28]
mov rdx,rbx
call fcn.00579570
mov rcx,qword[rsp+0x7a0]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x57b453
call fcn.00a5af30
mov rcx,qword[rsp+0x1b0]
add r12,0x10
cmp rcx,r12
je 0x57b469
call fcn.00a5af30
mov edx,1
mov rcx,rsi
call fcn.00692eb0
test al,al
je 0x57be00
lea rcx,[0x00aa16ac]
call fcn.00750560
lea r12,[rsp+0x1d0]
test rax,rax
mov r13,rax
lea r15,[r12+0x10]
mov qword[rsp+0x1d0],r15
je 0x57cd40
mov rcx,r13
call sub.msvcrt.dll_strlen
cmp rax,0xf
mov r14,rax
mov qword[rsp+0x80],rax
ja 0x57c9ff
cmp rax,1
je 0x57c851
test rax,rax
mov rdx,r15
jne 0x57cd86
mov qword[rsp+0x1d8],rax
mov rcx,rbx
mov byte[rdx+rax],0
mov rdx,r12
call fcn.0093b6a0
mov rcx,qword[rsp+0x28]
mov rdx,rbx
call fcn.00579570
mov rcx,qword[rsp+0x7a0]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x57b518
call fcn.00a5af30
mov rcx,qword[rsp+0x1d0]
add r12,0x10
cmp rcx,r12
je 0x57b52e
call fcn.00a5af30
mov edx,4
mov rcx,rsi
call fcn.00692eb0
test al,al
je 0x57be20
lea rcx,str.Hub_operator
call fcn.00750560
lea r12,[rsp+0x1f0]
mov rdx,rax
mov rcx,r12
call fcn.00579730
mov rdx,r12
mov rcx,rbx
call fcn.0093b6a0
mov rcx,qword[rsp+0x28]
mov rdx,rbx
call fcn.00579570
mov rcx,qword[rsp+0x7a0]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x57b590
call fcn.00a5af30
mov rcx,qword[rsp+0x1f0]
add r12,0x10
cmp rcx,r12
je 0x57b5a6
call fcn.00a5af30
lea rdx,[0x00aa163b]
mov rcx,rsi
call fcn.00693140
test al,al
je 0x57b66d
lea rcx,str.In_away_mode
call fcn.00750560
lea r12,[rsp+0x210]
test rax,rax
mov r14,rax
lea r15,[r12+0x10]
mov qword[rsp+0x210],r15
je 0x57cd28
mov rcx,rax
call sub.msvcrt.dll_strlen
cmp rax,0xf
mov r13,rax
mov qword[rsp+0x88],rax
ja 0x57ca92
cmp rax,1
je 0x57c83e
test rax,rax
mov rdx,r15
jne 0x57cd8e
mov qword[rsp+0x218],rax
mov rcx,rbx
mov byte[rdx+rax],0
mov rdx,r12
call fcn.0093b6a0
mov rcx,qword[rsp+0x28]
mov rdx,rbx
call fcn.00579570
mov rcx,qword[rsp+0x7a0]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x57b657
call fcn.00a5af30
mov rcx,qword[rsp+0x210]
add r12,0x10
cmp rcx,r12
je 0x57b66d
call fcn.00a5af30
lea r12,[rsp+0x4f0]
lea r8,[0x00aa164b]
mov rdx,rsi
mov rcx,r12
call fcn.00692960
mov rcx,qword[rsp+0x4f0]
call qword[sym.imp.msvcrt.dll__atoi64]
mov rcx,qword[rsp+0x4f0]
add r12,0x10
mov r14,rax
cmp rcx,r12
je 0x57b6ae
call fcn.00a5af30
lea r13,[rsp+0x250]
mov rdx,r14
mov rcx,r13
call fcn.006a6100
lea rcx,[0x00aa164e]
call fcn.00750560
lea r12,[rsp+0x230]
test rax,rax
mov r15,rax
lea rdx,[r12+0x10]
mov qword[rsp+0x230],rdx
mov qword[rsp+0x20],rdx
je 0x57cae0
mov rcx,rax
call sub.msvcrt.dll_strlen
cmp rax,0xf
mov r14,rax
mov qword[rsp+0x90],rax
mov rdx,qword[rsp+0x20]
ja 0x57bfb0
cmp rax,1
je 0x57c9e0
test rax,rax
mov rcx,rdx
jne 0x57bfde
mov qword[rsp+0x238],rax
mov rdx,r12
mov byte[rcx+rax],0
mov rcx,rbx
call fcn.0093b6a0
lea rax,[rsp+0x60]
mov r8,r13
mov rdx,rbx
mov rcx,rax
mov qword[rsp+0x20],rax
call fcn.0057a540
mov rcx,qword[rsp+0x7a0]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x57b770
call fcn.00a5af30
mov rcx,qword[rsp+0x230]
add r12,0x10
cmp rcx,r12
je 0x57b786
call fcn.00a5af30
mov rcx,qword[rsp+0x250]
add r13,0x10
cmp rcx,r13
je 0x57b79c
call fcn.00a5af30
lea r13,[rsp+0x290]
lea r8,[0x00aa1655]
mov rdx,rsi
mov rcx,r13
call fcn.00692960
lea rcx,[0x00aa1658]
call fcn.00750560
lea r12,[rsp+0x270]
test rax,rax
mov r15,rax
lea rdx,[r12+0x10]
mov qword[rsp+0x270],rdx
mov qword[rsp+0x38],rdx
je 0x57cb20
mov rcx,rax
call sub.msvcrt.dll_strlen
cmp rax,0xf
mov r14,rax
mov qword[rsp+0x98],rax
mov rdx,qword[rsp+0x38]
ja 0x57bf60
cmp rax,1
je 0x57c993
test rax,rax
mov rcx,rdx
jne 0x57bf8e
mov qword[rsp+0x278],rax
mov rdx,r12
mov byte[rcx+rax],0
mov rcx,rbx
call fcn.0093b6a0
mov rcx,qword[rsp+0x20]
mov r8,r13
mov rdx,rbx
call fcn.0057a540
mov rcx,qword[rsp+0x7a0]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x57b85d
call fcn.00a5af30
mov rcx,qword[rsp+0x270]
add r12,0x10
cmp rcx,r12
je 0x57b873
call fcn.00a5af30
mov rcx,qword[rsp+0x290]
add r13,0x10
cmp rcx,r13
je 0x57b889
call fcn.00a5af30
lea r13,[rsp+0x2d0]
mov rdx,rsi
mov rcx,r13
call fcn.006943c0
lea rcx,[0x00aa1664]
call fcn.00750560
lea r12,[rsp+0x2b0]
test rax,rax
mov r15,rax
lea rdx,[r12+0x10]
mov qword[rsp+0x2b0],rdx
mov qword[rsp+0x38],rdx
je 0x57cb10
mov rcx,rax
call sub.msvcrt.dll_strlen
cmp rax,0xf
mov r14,rax
mov qword[rsp+0xa0],rax
mov rdx,qword[rsp+0x38]
ja 0x57bf10
cmp rax,1
je 0x57c980
test rax,rax
mov rcx,rdx
jne 0x57bf3e
mov qword[rsp+0x2b8],rax
mov rdx,r12
mov byte[rcx+rax],0
mov rcx,rbx
call fcn.0093b6a0
mov rcx,qword[rsp+0x20]
mov r8,r13
mov rdx,rbx
call fcn.0057a540
mov rcx,qword[rsp+0x7a0]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x57b943
call fcn.00a5af30
mov rcx,qword[rsp+0x2b0]
add r12,0x10
cmp rcx,r12
je 0x57b959
call fcn.00a5af30
mov rcx,qword[rsp+0x2d0]
add r13,0x10
cmp rcx,r13
je 0x57b96f
call fcn.00a5af30
lea r13,[rsp+0x310]
mov rdx,rsi
mov rcx,r13
call fcn.00696f70
lea rcx,[0x00aa1668]
call fcn.00750560
lea r12,[rsp+0x2f0]
test rax,rax
mov r15,rax
lea rdx,[r12+0x10]
mov qword[rsp+0x2f0],rdx
mov qword[rsp+0x38],rdx
je 0x57cb00
mov rcx,rax
call sub.msvcrt.dll_strlen
cmp rax,0xf
mov r14,rax
mov qword[rsp+0xa8],rax
mov rdx,qword[rsp+0x38]
ja 0x57bec0
cmp rax,1
je 0x57c963
test rax,rax
mov rcx,rdx
jne 0x57beee
mov qword[rsp+0x2f8],rax
mov rdx,r12
mov byte[rcx+rax],0
mov rcx,rbx
call fcn.0093b6a0
mov rcx,qword[rsp+0x20]
mov r8,r13
mov rdx,rbx
call fcn.0057a540
mov rcx,qword[rsp+0x7a0]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x57ba29
call fcn.00a5af30
mov rcx,qword[rsp+0x2f0]
add r12,0x10
cmp rcx,r12
je 0x57ba3f
call fcn.00a5af30
mov rcx,qword[rsp+0x310]
add r13,0x10
cmp rcx,r13
je 0x57ba55
call fcn.00a5af30
lea r13,[rsp+0x350]
mov rdx,rsi
mov rcx,r13
call fcn.00692ac0
lea rcx,[0x00aa1673]
call fcn.00750560
lea r12,[rsp+0x330]
test rax,rax
mov r15,rax
lea rdx,[r12+0x10]
mov qword[rsp+0x330],rdx
mov qword[rsp+0x38],rdx
je 0x57caf0
mov rcx,rax
call sub.msvcrt.dll_strlen
cmp rax,0xf
mov r14,rax
mov qword[rsp+0xb0],rax
mov rdx,qword[rsp+0x38]
ja 0x57be70
cmp rax,1
je 0x57c950
test rax,rax
mov rcx,rdx
jne 0x57be9e
mov qword[rsp+0x338],rax
mov rdx,r12
mov byte[rcx+rax],0
mov rcx,rbx
call fcn.0093b6a0
mov rcx,qword[rsp+0x20]
mov r8,r13
mov rdx,rbx
call fcn.0057a540
mov rcx,qword[rsp+0x7a0]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x57bb0f
call fcn.00a5af30
mov rcx,qword[rsp+0x330]
add r12,0x10
cmp rcx,r12
je 0x57bb25
call fcn.00a5af30
mov rcx,qword[rsp+0x350]
add r13,0x10
cmp rcx,r13
je 0x57bb3b
call fcn.00a5af30
mov rcx,rsi
call fcn.00692b60
lea rcx,[0x00aa1676]
mov qword[rsp+0x38],rax
call fcn.00750560
lea r12,[rsp+0x370]
test rax,rax
mov r14,rax
lea r15,[r12+0x10]
mov qword[rsp+0x370],r15
je 0x57cb40
mov rcx,rax
call sub.msvcrt.dll_strlen
cmp rax,0xf
mov r13,rax
mov qword[rsp+0xb8],rax
ja 0x57c000
cmp rax,1
je 0x57c9c3
test rax,rax
mov rcx,r15
jne 0x57c02e
mov qword[rsp+0x378],rax
mov rdx,r12
mov byte[rcx+rax],0
mov rcx,rbx
call fcn.0093b6a0
mov r8,qword[rsp+0x38]
mov rcx,qword[rsp+0x20]
mov rdx,rbx
call fcn.0057a540
mov rcx,qword[rsp+0x7a0]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x57bbe7
call fcn.00a5af30
mov rcx,qword[rsp+0x370]
add r12,0x10
cmp rcx,r12
je 0x57bbfd
call fcn.00a5af30
lea r13,[rsp+0x3b0]
lea r8,[0x00aa167e]
mov rdx,rsi
mov rcx,r13
call fcn.00692960
lea rcx,str.E_mail
call fcn.00750560
lea r12,[rsp+0x390]
test rax,rax
mov r15,rax
lea rdx,[r12+0x10]
mov qword[rsp+0x390],rdx
mov qword[rsp+0x38],rdx
je 0x57cb30
mov rcx,rax
call sub.msvcrt.dll_strlen
cmp rax,0xf
mov r14,rax
mov qword[rsp+0xc0],rax
mov rdx,qword[rsp+0x38]
ja 0x57c050
cmp rax,1
je 0x57c9b0
test rax,rax
mov rcx,rdx
jne 0x57c07e
mov qword[rsp+0x398],rax
mov rdx,r12
mov byte[rcx+rax],0
mov rcx,rbx
call fcn.0093b6a0
mov rcx,qword[rsp+0x20]
mov r8,r13
mov rdx,rbx
call fcn.0057a540
mov rcx,qword[rsp+0x7a0]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x57bcbe
call fcn.00a5af30
mov rcx,qword[rsp+0x390]
add r12,0x10
cmp rcx,r12
je 0x57bcd4
call fcn.00a5af30
mov rcx,qword[rsp+0x3b0]
add r13,0x10
cmp rcx,r13
je 0x57bcea
call fcn.00a5af30
lea r12,[rsp+0x3d0]
lea r8,[0x00aa1688]
mov rdx,rsi
mov rcx,r12
call fcn.00692960
cmp qword[rsp+0x3d8],0
jne 0x57c1f0
test byte[rsp+0x8e0],1
jne 0x57c0a0
mov rcx,qword[rsp+0x3d0]
add r12,0x10
cmp rcx,r12
je 0x57bd37
call fcn.00a5af30
mov eax,dword[rdi+0xa0]
sub eax,1
test eax,eax
mov dword[rdi+0xa0],eax
je 0x57c8c5
mov rax,qword[rsp+0x8d0]
add rsp,0x888
pop rbx
pop rsi
pop rdi
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
lea rdx,[rsp+0x70]
xor r8d,r8d
mov rcx,rdi
call fcn.00a2dfc0
mov rcx,rax
mov qword[rsp+0x170],rax
mov rax,qword[rsp+0x70]
mov qword[rsp+0x180],rax
mov rdx,rsi
mov r8,rbx
call sub.msvcrt.dll_memcpy
mov rax,qword[rsp+0x70]
mov rdx,qword[rsp+0x170]
jmp 0x57ae9d
lea rcx,[rbp+0xd8]
call fcn.00a0b980
jmp 0x57b164
add dword[rdi+0xa0],1
jmp 0x57b373
lea rdx,[0x00aa1632]
mov rcx,rsi
call fcn.00693140
test al,al
jne 0x57b3bc
jmp 0x57b469
lea rdx,[0x00aa1635]
mov rcx,rsi
call fcn.00693140
test al,al
jne 0x57b47e
jmp 0x57b52e
mov edx,8
mov rcx,rsi
call fcn.00692eb0
test al,al
jne 0x57b543
mov edx,0x10
mov rcx,rsi
call fcn.00692eb0
test al,al
jne 0x57b543
lea rdx,[0x00aa1638]
mov rcx,rsi
call fcn.00693140
test al,al
jne 0x57b543
jmp 0x57b5a6
lea rdx,[rsp+0xb0]
xor r8d,r8d
mov rcx,r12
call fcn.00a2dfc0
mov rcx,rax
mov qword[rsp+0x330],rax
mov rax,qword[rsp+0xb0]
mov qword[rsp+0x340],rax
mov r8,r14
mov rdx,r15
call sub.msvcrt.dll_memcpy
mov rax,qword[rsp+0xb0]
mov rcx,qword[rsp+0x330]
jmp 0x57bad2
lea rdx,[rsp+0xa8]
xor r8d,r8d
mov rcx,r12
call fcn.00a2dfc0
mov rcx,rax
mov qword[rsp+0x2f0],rax
mov rax,qword[rsp+0xa8]
mov qword[rsp+0x300],rax
mov r8,r14
mov rdx,r15
call sub.msvcrt.dll_memcpy
mov rax,qword[rsp+0xa8]
mov rcx,qword[rsp+0x2f0]
jmp 0x57b9ec
lea rdx,[rsp+0xa0]
xor r8d,r8d
mov rcx,r12
call fcn.00a2dfc0
mov rcx,rax
mov qword[rsp+0x2b0],rax
mov rax,qword[rsp+0xa0]
mov qword[rsp+0x2c0],rax
mov r8,r14
mov rdx,r15
call sub.msvcrt.dll_memcpy
mov rax,qword[rsp+0xa0]
mov rcx,qword[rsp+0x2b0]
jmp 0x57b906
lea rdx,[rsp+0x98]
xor r8d,r8d
mov rcx,r12
call fcn.00a2dfc0
mov rcx,rax
mov qword[rsp+0x270],rax
mov rax,qword[rsp+0x98]
mov qword[rsp+0x280],rax
mov r8,r14
mov rdx,r15
call sub.msvcrt.dll_memcpy
mov rax,qword[rsp+0x98]
mov rcx,qword[rsp+0x270]
jmp 0x57b820
lea rdx,[rsp+0x90]
xor r8d,r8d
mov rcx,r12
call fcn.00a2dfc0
mov rcx,rax
mov qword[rsp+0x230],rax
mov rax,qword[rsp+0x90]
mov qword[rsp+0x240],rax
mov r8,r14
mov rdx,r15
call sub.msvcrt.dll_memcpy
mov rax,qword[rsp+0x90]
mov rcx,qword[rsp+0x230]
jmp 0x57b72b
lea rdx,[rsp+0xb8]
xor r8d,r8d
mov rcx,r12
call fcn.00a2dfc0
mov rcx,rax
mov qword[rsp+0x370],rax
mov rax,qword[rsp+0xb8]
mov qword[rsp+0x380],rax
mov r8,r13
mov rdx,r14
call sub.msvcrt.dll_memcpy
mov rax,qword[rsp+0xb8]
mov rcx,qword[rsp+0x370]
jmp 0x57bba8
lea rdx,[rsp+0xc0]
xor r8d,r8d
mov rcx,r12
call fcn.00a2dfc0
mov rcx,rax
mov qword[rsp+0x390],rax
mov rax,qword[rsp+0xc0]
mov qword[rsp+0x3a0],rax
mov r8,r14
mov rdx,r15
call sub.msvcrt.dll_memcpy
mov rax,qword[rsp+0xc0]
mov rcx,qword[rsp+0x390]
jmp 0x57bc81
mov rax,qword[rsp+0x8d8]
lea r13,[rsp+0x510]
mov edx,0x18
mov qword[rsp+0x518],0
mov byte[rsp+0x520],0
mov r8,r13
mov rcx,qword[rax+8]
lea rax,[r13+0x10]
mov qword[rsp+0x510],rax
add rcx,8
call fcn.005f3590
lea rbp,[rsp+0x4b0]
mov rsi,qword[rax+8]
lea rdx,[rbp+0x10]
mov qword[rsp+0x4b0],rdx
mov r14,qword[rax]
mov rax,r14
add rax,rsi
je 0x57c119
test r14,r14
jne 0x57c119
cmp rsi,0xf
mov qword[rsp+0xc8],rsi
ja 0x57c865
mov qword[rsp+0x4b8],rsi
mov byte[rax+rsi],0
add r13,0x10
mov rcx,qword[rsp+0x510]
cmp rcx,r13
je 0x57c164
call fcn.00a5af30
lea rcx,[0x00aa169c]
call fcn.00750560
lea rsi,[rsp+0x490]
mov rdx,rax
mov rcx,rsi
call fcn.00579730
mov rdx,rsi
mov rcx,rbx
call fcn.0093b6a0
mov rcx,qword[rsp+0x20]
mov r8,rbp
mov rdx,rbx
call fcn.0057a540
mov rcx,qword[rsp+0x7a0]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x57c1b4
call fcn.00a5af30
mov rcx,qword[rsp+0x490]
add rsi,0x10
cmp rcx,rsi
je 0x57c1ca
call fcn.00a5af30
mov rcx,qword[rsp+0x4b0]
add rbp,0x10
cmp rcx,rbp
je 0x57bd21
call fcn.00a5af30
jmp 0x57bd21
lea rax,[rsp+0x560]
mov rdx,r12
mov rcx,rax
mov qword[rsp+0x38],rax
call fcn.0093b6a0
lea rax,[rsp+0x5a0]
lea r8,[0x00aa168b]
mov rdx,rsi
mov rcx,rax
mov qword[rsp+0x48],rax
mov rsi,rax
call fcn.00692960
cmp qword[rsp+0x5a8],0
je 0x57c527
mov rcx,rbx
mov rdx,rsi
call fcn.0093b6a0
lea rcx,str._1___2_
call fcn.00750560
lea r14,[rsp+0x3f0]
mov rdx,rax
mov rcx,r14
call fcn.00579730
lea rsi,[rsp+0x6c0]
mov rdx,r14
mov rcx,rbp
call fcn.0093b6a0
lea rax,[rsi+0x60]
xor ecx,ecx
mov qword[rsp+0x6c0],0
mov word[rsp+0x720],cx
lea rcx,[rsi+0xb0]
mov qword[rsp+0x6c8],0
mov qword[rsp+0x710],rax
mov rax,qword[0x00b3e010]
mov qword[rsp+0x6d0],0
mov qword[rsp+0x6d8],0
mov dword[rsp+0x6e0],0
mov qword[rsp+0x6e8],0
add rax,0x10
mov dword[rsp+0x6f0],0
mov qword[rsp+0x6f8],0
mov qword[rsp+0x738],rax
mov dword[rsp+0x700],0
mov dword[rsp+0x704],0
mov dword[rsp+0x708],0
mov byte[rsp+0x70c],0
mov qword[rsp+0x718],0
mov byte[rsp+0x730],0xff
mov qword[rsp+0x740],0
mov qword[rsp+0x748],0
mov qword[rsp+0x750],0
mov qword[rsp+0x758],0
mov qword[rsp+0x760],0
mov qword[rsp+0x768],0
call fcn.00a0b870
lea rax,[0x00b72620]
mov rdx,rbp
mov rcx,rsi
mov qword[rsp+0x778],0
mov byte[rsp+0x780],0
mov qword[rsp+0x738],rax
mov dword[rsp+0x784],0x18
mov byte[rsp+0x790],0
mov byte[rsp+0x730],0
call fcn.00944920
lea rax,[0x0095dce0]
lea rdx,[rsp+0xf0]
mov rcx,rsi
mov qword[rsp+0xf0],rbx
mov qword[rsp+0xf8],rax
lea rax,[0x0095df70]
mov qword[rsp+0x100],rax
call fcn.00961630
lea rdx,[0x0095dd20]
mov r15,qword[rsp+0x38]
mov rcx,rax
mov qword[rsp+0x118],rdx
lea rdx,[0x0095dfb0]
mov qword[rsp+0x110],r15
mov qword[rsp+0x120],rdx
lea rdx,[rsp+0x110]
call fcn.00961630
lea r13,[rsp+0x410]
mov rdx,rax
mov rcx,r13
call fcn.00969ca0
mov rax,qword[rsp+0x410]
lea rdx,[r13+0x10]
mov rcx,qword[rsp+0x560]
cmp rax,rdx
je 0x57cd96
mov rdx,r15
add rdx,0x10
cmp rcx,rdx
je 0x57cd60
movdqu xmm0,xmmword[rsp+0x418]
test rcx,rcx
mov rdx,qword[rsp+0x570]
mov qword[rsp+0x560],rax
movups xmmword[rsp+0x568],xmm0
je 0x57c4dd
mov qword[rsp+0x410],rcx
mov qword[rsp+0x420],rdx
add r13,0x10
xor edx,edx
mov qword[rsp+0x418],0
cmp rcx,r13
mov word[rcx],dx
je 0x57c4dd
call fcn.00a5af30
mov rcx,rsi
call fcn.00944f70
mov rcx,qword[rsp+0x5e0]
lea rax,[rbp+0x10]
cmp rcx,rax
je 0x57c4fb
call fcn.00a5af30
mov rcx,qword[rsp+0x3f0]
add r14,0x10
cmp rcx,r14
je 0x57c511
call fcn.00a5af30
mov rcx,qword[rsp+0x7a0]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x57c527
call fcn.00a5af30
lea rcx,[0x00aa1696]
call fcn.00750560
lea r15,[rsp+0x450]
mov rdx,rax
mov rcx,r15
call fcn.00579730
lea rsi,[rsp+0x6c0]
mov rdx,r15
mov rcx,rsi
call fcn.0093b6a0
lea rcx,[0x00aa161f]
call fcn.00750560
lea r14,[rsp+0x430]
mov rdx,rax
mov rcx,r14
call fcn.00579730
mov rdx,r14
mov rcx,rbp
call fcn.0093b6a0
lea rax,[rbx+0x60]
lea rcx,[rbx+0xb0]
mov qword[rsp+0x7a0],0
mov qword[rsp+0x7a8],0
mov qword[rsp+0x7b0],0
mov qword[rsp+0x7f0],rax
xor eax,eax
mov qword[rsp+0x7b8],0
mov word[rsp+0x800],ax
mov rax,qword[0x00b3e010]
mov dword[rsp+0x7c0],0
mov qword[rsp+0x7c8],0
mov dword[rsp+0x7d0],0
mov qword[rsp+0x7d8],0
add rax,0x10
mov dword[rsp+0x7e0],0
mov dword[rsp+0x7e4],0
mov qword[rsp+0x818],rax
mov dword[rsp+0x7e8],0
mov byte[rsp+0x7ec],0
mov qword[rsp+0x7f8],0
mov byte[rsp+0x810],0xff
mov qword[rsp+0x820],0
mov qword[rsp+0x828],0
mov qword[rsp+0x830],0
mov qword[rsp+0x838],0
mov qword[rsp+0x840],0
mov qword[rsp+0x848],0
call fcn.00a0b870
lea rax,[0x00b72620]
mov rdx,rbp
mov rcx,rbx
mov qword[rsp+0x858],0
mov byte[rsp+0x860],0
mov qword[rsp+0x818],rax
mov dword[rsp+0x864],0x18
mov byte[rsp+0x870],0
mov byte[rsp+0x810],0
call fcn.00944920
lea rax,[0x0095dce0]
lea rdx,[rsp+0x130]
mov rcx,rbx
mov qword[rsp+0x130],rsi
mov qword[rsp+0x138],rax
lea rax,[0x0095df70]
mov qword[rsp+0x140],rax
call fcn.00961630
mov rdx,qword[rsp+0x38]
mov rcx,rax
mov qword[rsp+0x150],rdx
lea rdx,[0x0095dd20]
mov qword[rsp+0x158],rdx
lea rdx,[0x0095dfb0]
mov qword[rsp+0x160],rdx
lea rdx,[rsp+0x150]
call fcn.00961630
lea r13,[rsp+0x470]
mov rdx,rax
mov rcx,r13
call fcn.00969ca0
mov rcx,qword[rsp+0x28]
mov rdx,r13
call fcn.00579570
mov rcx,qword[rsp+0x470]
add r13,0x10
cmp rcx,r13
je 0x57c78b
call fcn.00a5af30
mov rcx,rbx
add rbp,0x10
call fcn.00944f70
mov rcx,qword[rsp+0x5e0]
cmp rcx,rbp
je 0x57c7a9
call fcn.00a5af30
mov rcx,qword[rsp+0x430]
add r14,0x10
cmp rcx,r14
je 0x57c7bf
call fcn.00a5af30
mov rcx,qword[rsp+0x6c0]
add rsi,0x10
cmp rcx,rsi
je 0x57c7d5
call fcn.00a5af30
mov rcx,qword[rsp+0x450]
add r15,0x10
cmp rcx,r15
je 0x57c7eb
call fcn.00a5af30
mov rax,qword[rsp+0x48]
mov rcx,qword[rsp+0x5a0]
add rax,0x10
cmp rcx,rax
je 0x57c806
call fcn.00a5af30
mov rax,qword[rsp+0x38]
mov rcx,qword[rsp+0x560]
add rax,0x10
cmp rcx,rax
je 0x57bd13
call fcn.00a5af30
jmp 0x57bd13
movzx edx,byte[r13]
mov byte[rsp+0x1c0],dl
mov rdx,r15
jmp 0x57b419
movzx edx,byte[r14]
mov byte[rsp+0x220],dl
mov rdx,r15
jmp 0x57b61d
movzx edx,byte[r13]
mov byte[rsp+0x1e0],dl
mov rdx,r15
jmp 0x57b4de
movzx edx,byte[rsi]
mov byte[rsp+0x180],dl
mov rdx,rbp
jmp 0x57ae9d
mov rsi,qword[rsp+0x30]
xchg dword[rsi],eax
mov eax,0x80000000
lea rbp,[rdi+0xa8]
lock xadd dword[rbp],eax
test eax,0x40000000
jne 0x57bd4e
cmp eax,0x80000000
je 0x57bd4e
mov esi,dword[rdi+0xa8]
jmp 0x57c902
mov esi,eax
mov edx,esi
mov r8d,esi
mov rcx,rbp
or edx,0x40000000
call fcn.008eebc0
cmp esi,eax
jne 0x57c900
and esi,0x40000000
jne 0x57bd4e
add rdi,0xb0
xor eax,eax
lock cmpxchg qword[rdi],rax
test rax,rax
mov rsi,rax
mov rcx,rax
je 0x57cdb0
call qword[sym.imp.KERNEL32.dll_SetEvent]
jmp 0x57bd4e
movzx ecx,byte[r15]
mov byte[rsp+0x340],cl
mov rcx,rdx
jmp 0x57bad2
movzx ecx,byte[r15]
mov byte[rsp+0x300],cl
mov rcx,rdx
jmp 0x57b9ec
movzx ecx,byte[r15]
mov byte[rsp+0x2c0],cl
mov rcx,rdx
jmp 0x57b906
movzx ecx,byte[r15]
mov byte[rsp+0x280],cl
mov rcx,rdx
jmp 0x57b820
movzx ecx,byte[r15]
mov byte[rsp+0x3a0],cl
mov rcx,rdx
jmp 0x57bc81
movzx ecx,byte[r14]
mov byte[rsp+0x380],cl
mov rcx,r15
jmp 0x57bba8
movzx ecx,byte[r15]
mov byte[rsp+0x240],cl
mov rcx,rdx
jmp 0x57b72b
lea rcx,[0x00aa1328]
call fcn.00a4f4e0
lea rdx,[rsp+0x80]
xor r8d,r8d
mov rcx,r12
call fcn.00a2dfc0
mov rdx,qword[rsp+0x80]
mov qword[rsp+0x1d0],rax
mov qword[rsp+0x1e0],rdx
mov rdx,r13
mov r8,r14
mov rcx,rax
call sub.msvcrt.dll_memcpy
mov rax,qword[rsp+0x80]
mov rdx,qword[rsp+0x1d0]
jmp 0x57b4de
lea rdx,[rsp+0x78]
xor r8d,r8d
mov rcx,r12
call fcn.00a2dfc0
mov rdx,qword[rsp+0x78]
mov qword[rsp+0x1b0],rax
mov qword[rsp+0x1c0],rdx
mov rdx,r13
mov r8,r14
mov rcx,rax
call sub.msvcrt.dll_memcpy
mov rax,qword[rsp+0x78]
mov rdx,qword[rsp+0x1b0]
jmp 0x57b419
lea rdx,[rsp+0x88]
xor r8d,r8d
mov rcx,r12
call fcn.00a2dfc0
mov rdx,qword[rsp+0x88]
mov qword[rsp+0x210],rax
mov qword[rsp+0x220],rdx
mov rdx,r14
mov r8,r13
mov rcx,rax
call sub.msvcrt.dll_memcpy
mov rax,qword[rsp+0x88]
mov rdx,qword[rsp+0x210]
jmp 0x57b61d
lea rcx,[0x00aa1328]
call fcn.00a4f4e0
nop dword[rax]
lea rcx,[0x00aa1328]
call fcn.00a4f4e0
nop dword[rax]
lea rcx,[0x00aa1328]
call fcn.00a4f4e0
nop dword[rax]
lea rcx,[0x00aa1328]
call fcn.00a4f4e0
nop dword[rax]
lea rcx,[0x00aa1328]
call fcn.00a4f4e0
nop dword[rax]
lea rcx,[0x00aa1328]
call fcn.00a4f4e0
nop dword[rax]
lea rcx,[0x00aa1328]
call fcn.00a4f4e0
mov edx,dword[rdi+0xa8]
jmp 0x57cb56
mov edx,eax
lea eax,[rdx+1]
mov esi,edx
or esi,0x80000000
test edx,edx
cmovs esi,eax
mov eax,edx
lock cmpxchg dword[r12],esi
cmp eax,edx
jne 0x57cb54
mov eax,esi
shr eax,0x1f
test al,al
je 0x57b361
shr edx,0x1f
test dl,dl
je 0x57b361
lea r14,[rdi+0xb0]
xor eax,eax
lock cmpxchg qword[r14],rax
test rax,rax
mov r15,rax
je 0x57cdee
mov r14,qword[sym.imp.KERNEL32.dll_WaitForSingleObjectEx]
nop dword[rax+rax]
xor r8d,r8d
mov edx,0xffffffff
mov rcx,r15
call r14
and esi,0x7fffffff
or esi,0x40000000
mov edx,esi
test edx,edx
js 0x57cbf5
lea ecx,[rdx-1]
mov eax,edx
and ecx,0x3fffffff
or ecx,0x80000000
lock cmpxchg dword[r12],ecx
cmp edx,eax
je 0x57b361
mov edx,eax
test edx,edx
jns 0x57cbd0
mov ecx,edx
mov eax,edx
and ecx,0xbfffffff
lock cmpxchg dword[r12],ecx
cmp eax,edx
jne 0x57cbef
mov esi,eax
jmp 0x57cbb0
mov rax,qword[rsp+0x8d0]
mov rcx,qword[rax]
add rax,0x10
cmp rcx,rax
je 0x57cc42
call fcn.00a5af30
mov rcx,rbx
call fcn.008da260
nop word[rax+rax]
mov rbx,rax
mov rcx,qword[rsp+0x40]
call fcn.00962120
jmp 0x57cc29
call fcn.00a5af30
jmp 0x57cc53
mov rcx,qword[rsp+0x2d0]
add r13,0x10
cmp rcx,r13
jne 0x57cc73
jmp 0x57cc53
mov rcx,rbp
jmp 0x57bd98
lea rcx,[0x00aa1328]
call fcn.00a4f4e0
lea rcx,[0x00aa1328]
call fcn.00a4f4e0
lea rcx,[0x00aa1328]
call fcn.00a4f4e0
movzx eax,byte[r14]
mov byte[rsp+0x4c0],al
lea rax,[rbp+0x10]
jmp 0x57c142
movdqu xmm0,xmmword[rsp+0x418]
mov qword[rsp+0x560],rax
movups xmmword[rsp+0x568],xmm0
jmp 0x57c4dd
mov rax,r15
jmp 0x57ca72
mov rax,r15
jmp 0x57ca2a
mov rax,r15
jmp 0x57cabd
mov rcx,qword[rsp+0x38]
mov rdx,r13
call fcn.00a30850
mov rcx,qword[rsp+0x410]
jmp 0x57c4be
xor ecx,ecx
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
je 0x57d158
mov rax,rsi
lock cmpxchg qword[rdi],rcx
test rax,rax
mov rsi,rax
je 0x57c942
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rcx,rsi
jmp 0x57c942
xor r9d,r9d
xor r8d,r8d
xor edx,edx
xor ecx,ecx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov r15,rax
je 0x57d2ed
xor eax,eax
lock cmpxchg qword[r14],r15
test rax,rax
mov r14,rax
je 0x57cba4
mov rcx,r15
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov r15,r14
jmp 0x57cba4
call fcn.006ea660
lea rdx,[0x00aa1352]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0x7b0],0xb
mov qword[rsp+0x7b8],rsi
mov qword[rsp+0x7c8],0
mov qword[rsp+0x7c0],rax
lea rax,[0x00b72480]
mov byte[rsp+0x7d0],0
mov qword[rsp+0x7a0],rax
call fcn.00947760
mov rcx,qword[rsp+0x7a0]
add rbx,0x10
mov rsi,rax
cmp rcx,rbx
je 0x57d1d2
call fcn.00a5af30
mov rcx,qword[rsp+0x2b0]
add r12,0x10
cmp rcx,r12
je 0x57d1e8
call fcn.00a5af30
mov rbx,rsi
jmp 0x57cc93
lea rcx,[0x00aa1310]
call fcn.00a4f830
call fcn.006ea660
mov rbx,rax
lea rax,[rsp+0x560]
lea rdx,[0x00aa1370]
mov rcx,rax
mov rdi,rax
mov qword[rsp+0x38],rax
call fcn.009de540
mov rax,rdi
mov rcx,rdi
mov dword[rsp+0x570],1
add rax,0x30
mov qword[rsp+0x578],rbx
mov qword[rsp+0x588],0
mov qword[rsp+0x580],rax
lea rax,[0x00b714e0]
mov byte[rsp+0x590],0
mov qword[rsp+0x560],rax
call fcn.009472d0
call fcn.006ea660
mov rbx,rax
lea rax,[rsp+0x5a0]
lea rdx,[0x00aa1352]
mov rcx,rax
mov rdi,rax
mov qword[rsp+0x48],rax
call fcn.009de540
mov rax,rdi
mov rcx,rdi
mov dword[rsp+0x5b0],0xb
add rax,0x30
mov qword[rsp+0x5b8],rbx
mov qword[rsp+0x5c8],0
mov qword[rsp+0x5c0],rax
lea rax,[0x00b72480]
mov byte[rsp+0x5d0],0
mov qword[rsp+0x5a0],rax
call fcn.00947760
mov rcx,qword[rsp+0x38]
mov rbx,rax
lea rax,[0x00b72450]
mov qword[rsp+0x560],rax
call fcn.00962490
jmp 0x57cc29
{% endhighlight %}


[similar_1_ref]: /report/fcn.0059ebb0@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_2_ref]: /report/fcn.005a3a50@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_3_ref]: /report/fcn.00617220@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_4_ref]: /report/fcn.005fe7f0@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_5_ref]: /report/fcn.0061c530@a5905e3c253c25bbaf727a1a18fe8ed1
[virustotal_ref]: https://www.virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1