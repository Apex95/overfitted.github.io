---
layout: post
title:  "fcn.100445f8 @ e5d49e0823e602f2ee948ac39d32c1eb"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.100445f8
- **Origin (md5):** e5d49e0823e602f2ee948ac39d32c1eb
- **VirusTotal:** [virustotal.com/gui/file/e5d49e0823e602f2ee948ac39d32c1eb][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-137.29933166503906, -10.657426834106445, '<b><a href="/report/fcn.100445f8@e5d49e0823e602f2ee948ac39d32c1eb">fcn.100445f8</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'point { fill-color: #e0440e; }'],
[-323.30426025390625, 81.36920166015625, '<b><a href="/report/fcn.10045e81@e5d49e0823e602f2ee948ac39d32c1eb">fcn.10045e81</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],
[174.98207092285156, 240.19859313964844, '<b><a href="/report/fcn.100438a5@e5d49e0823e602f2ee948ac39d32c1eb">fcn.100438a5</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],
[157.67735290527344, 93.56410217285156, '<b><a href="/report/fcn.0046aa15@9c2b894b84f59672d8be2e984066f76f">fcn.0046aa15</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'null'],
[-166.1593017578125, 168.3874053955078, '<b><a href="/report/fcn.10044332@e5d49e0823e602f2ee948ac39d32c1eb">fcn.10044332</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],
[-15.717873573303223, 235.9613800048828, '<b><a href="/report/fcn.10038d78@e5d49e0823e602f2ee948ac39d32c1eb">fcn.10038d78</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],
[107.97023010253906, -348.2874450683594, '<b><a href="/report/fcn.0051f8c6@9c2b894b84f59672d8be2e984066f76f">fcn.0051f8c6</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'null'],
[-415.2575378417969, -80.67853546142578, '<b><a href="/report/fcn.004a254c@9c2b894b84f59672d8be2e984066f76f">fcn.004a254c</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'null'],
[-45.64701843261719, -270.1830139160156, '<b><a href="/report/fcn.0046c1c7@9c2b894b84f59672d8be2e984066f76f">fcn.0046c1c7</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'null'],
[152.95176696777344, -167.08030700683594, '<b><a href="/report/fcn.004dc17d@9c2b894b84f59672d8be2e984066f76f">fcn.004dc17d</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'null'],
[277.226806640625, -253.96263122558594, '<b><a href="/report/fcn.100c8626@e5d49e0823e602f2ee948ac39d32c1eb">fcn.100c8626</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push 0x78
mov eax, 0x1013da25
call fcn.10124124
mov edi, ecx
mov dword[ebp-0x7c], edi
mov esi, dword[ebp+0x18]
mov ebx, dword[ebp+0x24]
mov eax, dword[ebp+0x28]
mov dword[ebp-0x70], esi
mov dword[ebp-0x38], ebx
mov dword[ebp-0x30], eax
test esi, esi
je 0x10044ab2
lea eax, [ebp+8]
push eax
call dword[sym.imp.USER32.dll_IsRectEmpty]
test eax, eax
jne 0x10044ab2
mov eax, dword[ebp+0x10]
mov ecx, dword[ebp+8]
sub eax, ecx
mov edx, dword[ebp-0x30]
mov dword[ebp-0x40], eax
mov eax, dword[ebp+0x14]
sub eax, dword[ebp+0xc]
mov dword[ebp-0x4c], eax
xor eax, eax
cmp dword[ebp+0x30], eax
sete al
mov dword[ebp-0x14], eax
test edx, edx
je 0x100446c1
mov edx, dword[edx+4]
test edx, edx
je 0x100446c1
test ebx, ebx
je 0x100446b8
cmp dword[ebx+4], 0
je 0x100446b8
test eax, eax
je 0x10044674
sub ecx, esi
jmp 0x10044677
mov ecx, dword[ebp+0x10]
mov eax, dword[ebp-0x4c]
xor ebx, ebx
push ebx
push ebx
push dword[ebp-0x30]
add eax, esi
push eax
push esi
push dword[ebp+0xc]
push ecx
mov ecx, dword[edi+4]
call fcn.10044abd
mov ecx, dword[ebp+8]
cmp dword[ebp-0x14], ebx
je 0x1004469b
sub ecx, esi
mov eax, dword[ebp-0x40]
push ebx
push ebx
push dword[ebp-0x38]
add eax, esi
push esi
push eax
push dword[ebp+0x14]
push ecx
mov ecx, dword[edi+4]
call fcn.10044abd
jmp 0x10044ab2
test edx, edx
je 0x100446c1
call fcn.10009c74
test ebx, ebx
je 0x100446cb
cmp dword[ebx+4], 0
jne 0x100446bc
lea ecx, [ebp-0x5c]
call fcn.1001703e
mov eax, dword[edi+4]
xor ebx, ebx
mov dword[ebp-4], ebx
test eax, eax
jne 0x100446e3
mov eax, ebx
jmp 0x100446e6
mov eax, dword[eax+4]
push eax
call dword[sym.imp.GDI32.dll_CreateCompatibleDC]
push eax
lea ecx, [ebp-0x5c]
call fcn.100179cf
test eax, eax
jne 0x1004470d
or dword[ebp-4], 0xffffffff
lea ecx, [ebp-0x5c]
call fcn.10017194
xor eax, eax
jmp 0x10044ab5
mov dword[ebp-0x44], ebx
mov dword[ebp-0x48], 0x1014cb54
mov ecx, dword[ebp-0x4c]
mov eax, dword[edi+4]
add ecx, esi
mov dword[ebp-0x1c], ecx
push dword[ebp-0x1c]
mov ecx, dword[ebp-0x40]
add ecx, esi
mov byte[ebp-4], 1
push ecx
push dword[eax+4]
mov dword[ebp-0x2c], ecx
call dword[sym.imp.GDI32.dll_CreateCompatibleBitmap]
push eax
lea ecx, [ebp-0x48]
call fcn.10017a05
test eax, eax
jne 0x1004475c
lea ecx, [ebp-0x48]
mov byte[ebp-4], bl
mov dword[ebp-0x48], 0x1014cb54
call fcn.100171ad
jmp 0x100446fa
push dword[ebp-0x44]
push dword[ebp-0x58]
call fcn.1001807d
mov ecx, eax
xor eax, eax
test ecx, ecx
mov dword[ebp-0x80], ecx
setne al
test eax, eax
je 0x100446bc
mov eax, dword[ebp-0x1c]
mov edx, dword[ebp-0x2c]
mov dword[ebp-0x74], eax
lea eax, [ebp-0x34]
push eax
lea eax, [ebp-0x78]
mov dword[ebp-0x78], edx
push eax
call fcn.10042ae4
mov dword[ebp-0x74], eax
test eax, eax
je 0x10044748
cmp dword[ebp-0x34], 0
je 0x10044748
push eax
push dword[ebp-0x58]
call dword[sym.imp.GDI32.dll_SelectObject]
cmp dword[ebp-0x14], 0
mov eax, dword[ebp+8]
je 0x100447b6
sub eax, esi
mov ecx, dword[edi+4]
test ecx, ecx
jne 0x100447c1
mov ecx, ebx
jmp 0x100447c4
mov ecx, dword[ecx+4]
push 0xcc0020
push dword[ebp+0xc]
push eax
push ecx
push dword[ebp-0x1c]
push dword[ebp-0x2c]
push ebx
push ebx
push dword[ebp-0x58]
call dword[sym.imp.GDI32.dll_BitBlt]
mov eax, dword[ebp+0x20]
sub eax, dword[ebp+0x1c]
cdq
idiv esi
mov dword[ebp-0x68], eax
test esi, esi
jle 0x10044983
mov edx, dword[ebp-0x4c]
mov ecx, dword[ebp-0x40]
mov ebx, dword[ebp-0x70]
mov edi, dword[ebp+0x20]
lea eax, [edx+1]
mov dword[ebp-0x18], ecx
mov dword[ebp-0x28], eax
mov eax, dword[ebp-0x68]
lea esi, [ebx+ebx]
neg eax
mov dword[ebp-0x24], esi
mov dword[ebp-0x84], eax
lea eax, [ebx+ecx]
mov dword[ebp-0x20], eax
mov eax, ebx
imul eax, dword[ebp-0x68]
mov dword[ebp-0x60], ebx
sub edi, eax
mov eax, edx
sub eax, ecx
mov dword[ebp-0x3c], edi
mov dword[ebp-0x64], eax
mov edi, ecx
mov eax, ebx
sub eax, ecx
mov dword[ebp-0x6c], eax
mov eax, dword[ebp-0x20]
add eax, dword[ebp-0x64]
mov ecx, edx
mov esi, dword[ebp-0x24]
mov dword[ebp-0x10], ecx
cmp edx, eax
jge 0x1004488b
push dword[ebp-0x14]
mov eax, dword[ebp-0x6c]
lea esi, [ebp+8]
push dword[ebp+0x2c]
add eax, edi
push ebx
push dword[ebp-0x3c]
push ecx
push eax
sub esp, 0x10
mov edi, esp
push dword[ebp-0x34]
movsd dword
movsd dword
movsd dword
movsd dword
call fcn.10046870
mov ecx, dword[ebp-0x10]
mov eax, dword[ebp-0x64]
inc ecx
add eax, dword[ebp-0x20]
mov edi, dword[ebp-0x18]
mov dword[ebp-0x10], ecx
cmp ecx, eax
jl 0x1004484f
mov esi, dword[ebp-0x24]
mov ecx, esi
mov dword[ebp-0x10], ecx
cmp esi, edi
jge 0x100448c9
push dword[ebp-0x14]
mov eax, dword[ebp-0x28]
lea esi, [ebp+8]
push dword[ebp+0x2c]
dec eax
push ebx
push dword[ebp+0x20]
push eax
push ecx
sub esp, 0x10
mov edi, esp
push dword[ebp-0x34]
movsd dword
movsd dword
movsd dword
movsd dword
call fcn.10046870
mov ecx, dword[ebp-0x10]
mov edi, dword[ebp-0x18]
inc ecx
mov dword[ebp-0x10], ecx
cmp ecx, edi
jl 0x10044894
mov esi, dword[ebp-0x24]
mov eax, esi
mov dword[ebp-0x10], esi
cmp esi, dword[ebp-0x28]
jge 0x10044905
push dword[ebp-0x14]
lea esi, [ebp+8]
push dword[ebp+0x2c]
push ebx
push dword[ebp+0x20]
push eax
push edi
sub esp, 0x10
mov edi, esp
push dword[ebp-0x34]
movsd dword
movsd dword
movsd dword
movsd dword
call fcn.10046870
mov eax, dword[ebp-0x10]
mov edi, dword[ebp-0x18]
inc eax
mov dword[ebp-0x10], eax
cmp eax, dword[ebp-0x28]
jl 0x100448d3
mov esi, dword[ebp-0x24]
mov eax, dword[ebp-0x40]
mov ecx, eax
mov dword[ebp-0x10], ecx
cmp eax, dword[ebp-0x20]
jge 0x1004494b
push dword[ebp-0x14]
mov eax, dword[ebp-0x18]
lea esi, [ebp+8]
push dword[ebp+0x2c]
add eax, dword[ebp-0x6c]
push ebx
push dword[ebp-0x3c]
push eax
push ecx
sub esp, 0x10
mov edi, esp
push dword[ebp-0x34]
movsd dword
movsd dword
movsd dword
movsd dword
call fcn.10046870
mov ecx, dword[ebp-0x10]
mov eax, dword[ebp-0x20]
inc ecx
mov dword[ebp-0x10], ecx
cmp ecx, eax
jl 0x10044912
mov esi, dword[ebp-0x24]
jmp 0x1004494e
mov eax, dword[ebp-0x20]
inc dword[ebp-0x28]
mov ecx, dword[ebp-0x84]
add dword[ebp+0x20], ecx
mov edi, dword[ebp-0x18]
mov ecx, dword[ebp-0x68]
inc edi
add dword[ebp-0x3c], ecx
dec esi
mov edx, dword[ebp-0x4c]
dec eax
dec dword[ebp-0x60]
mov dword[ebp-0x18], edi
mov dword[ebp-0x24], esi
mov dword[ebp-0x20], eax
jne 0x10044840
mov esi, dword[ebp-0x70]
xor ebx, ebx
mov edi, dword[ebp-0x7c]
cmp dword[ebp-0x14], 0
mov ecx, dword[ebp+8]
je 0x1004498e
sub ecx, esi
mov edx, dword[ebp-0x2c]
mov eax, dword[edi+4]
push 0xcc0020
push ebx
push ebx
push dword[ebp-0x58]
push dword[ebp-0x1c]
push edx
push dword[ebp+0xc]
push ecx
push dword[eax+4]
call dword[sym.imp.GDI32.dll_BitBlt]
cmp dword[ebp-0x30], 0
je 0x10044a12
push dword[ebp-0x1c]
mov ecx, dword[edi+4]
lea eax, [esi+1]
push eax
push dword[ecx+4]
call dword[sym.imp.GDI32.dll_CreateCompatibleBitmap]
mov ecx, dword[ebp-0x30]
push eax
call fcn.10017a05
mov eax, dword[ebp-0x30]
push dword[eax+4]
push dword[ebp-0x58]
call fcn.1001807d
mov eax, dword[ebp-0x14]
mov ecx, dword[edi+4]
neg eax
sbb eax, eax
not eax
and eax, dword[ebp+0x10]
test ecx, ecx
jne 0x100449f6
mov ecx, ebx
jmp 0x100449f9
mov ecx, dword[ecx+4]
push 0xcc0020
push dword[ebp+0xc]
push eax
push ecx
push dword[ebp-0x1c]
push esi
push ebx
push ebx
push dword[ebp-0x58]
call dword[sym.imp.GDI32.dll_BitBlt]
cmp dword[ebp-0x38], 0
je 0x10044a74
mov ecx, dword[edi+4]
lea eax, [esi+1]
push eax
push dword[ebp-0x2c]
push dword[ecx+4]
call dword[sym.imp.GDI32.dll_CreateCompatibleBitmap]
mov ecx, dword[ebp-0x38]
push eax
call fcn.10017a05
mov eax, dword[ebp-0x38]
push dword[eax+4]
push dword[ebp-0x58]
call fcn.1001807d
cmp dword[ebp-0x14], 0
mov eax, dword[ebp+8]
je 0x10044a4d
sub eax, esi
mov ecx, dword[edi+4]
test ecx, ecx
jne 0x10044a58
mov ecx, ebx
jmp 0x10044a5b
mov ecx, dword[ecx+4]
push 0xcc0020
push dword[ebp+0x14]
push eax
push ecx
push esi
push dword[ebp-0x2c]
push ebx
push ebx
push dword[ebp-0x58]
call dword[sym.imp.GDI32.dll_BitBlt]
mov eax, dword[ebp-0x80]
test eax, eax
jne 0x10044a7f
mov eax, ebx
jmp 0x10044a82
mov eax, dword[eax+4]
push eax
push dword[ebp-0x58]
call fcn.1001807d
push dword[ebp-0x74]
call dword[sym.imp.GDI32.dll_DeleteObject]
lea ecx, [ebp-0x48]
mov byte[ebp-4], bl
mov dword[ebp-0x48], 0x1014cb54
call fcn.100171ad
or dword[ebp-4], 0xffffffff
lea ecx, [ebp-0x5c]
call fcn.10017194
xor eax, eax
inc eax
call fcn.101240f2
ret 0x2c

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/e5d49e0823e602f2ee948ac39d32c1eb