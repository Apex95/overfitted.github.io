---
layout: post
title:  "fcn.004086e0 @ e2ba7f10eb234338a49853c34d7d9c56"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.004086e0
- **Origin (md5):** e2ba7f10eb234338a49853c34d7d9c56
- **VirusTotal:** [virustotal.com/gui/file/e2ba7f10eb234338a49853c34d7d9c56][virustotal_ref]

# Code Tags
<span class="tag" id="SOCKET">SOCKET</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.004086e0@e2ba7f10eb234338a49853c34d7d9c56">fcn.004086e0</a><br>@e2ba7f10eb234338a49853c34d7d9c56</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
sub esp, 0x340
mov eax, dword[0x55bdf4]
xor eax, ebp
mov dword[ebp-4], eax
push ebx
push esi
xor esi, esi
push edi
xor edi, edi
mov dword[ebp-0x324], esi
mov dword[ebp-0x320], esi
mov dword[ebp-0x31c], esi
cmp dword[ebp+0x18], esi
jl off.b72
jg off.b62
mov edx, dword[ebp+0x14]
cmp edx, 0x7fffffff
jb off.b75
mov dword[ebp+0x14], 0x7fffffff
mov dword[ebp+0x18], esi
mov edx, dword[ebp+0x14]
mov eax, dword[ebp+8]
mov ecx, dword[ebp+0xc]
cmp eax, 0xffffffff
jne off.b121
cmp ecx, eax
jne off.b121
cmp dword[ebp+0x10], eax
jne off.b121
push edx
call fcn.004086b0
add esp, 4
pop edi
pop esi
pop ebx
mov ecx, dword[ebp-4]
xor ecx, ebp
call fcn.004f166b
mov esp, ebp
pop ebp
ret
cmp dword[ebp+0x18], esi
jl off.b192
jg off.b132
cmp edx, esi
jbe off.b192
lea eax, [ebp-0x340]
push eax
mov edi, edx
call fcn.00413660
mov ecx, dword[eax]
mov edx, dword[eax+4]
mov dword[ebp-0x324], ecx
mov ecx, dword[eax+8]
mov dword[ebp-0x320], edx
mov edx, dword[eax+0xc]
mov eax, dword[ebp+8]
add esp, 4
mov dword[ebp-0x31c], ecx
mov ecx, dword[ebp+0xc]
mov dword[ebp-0x318], edx
xor esi, esi
xor edx, edx
or ebx, 0xffffffff
xor esi, esi
mov dword[ebp-0x108], edx
mov dword[ebp-0x314], ebx
mov dword[ebp-0x20c], esi
cmp eax, 0xffffffff
je off.b261
mov esi, 1
mov edx, esi
mov dword[ebp-0x208], eax
mov dword[ebp-0x20c], esi
mov dword[ebp-0x104], eax
mov dword[ebp-0x108], edx
mov ebx, eax
mov dword[ebp-0x314], eax
cmp ecx, 0xffffffff
je off.b376
xor eax, eax
test esi, esi
je off.b286
cmp dword[ebp+eax*4-0x208], ecx
je off.b286
inc eax
cmp eax, esi
jb off.b272
cmp eax, esi
jne off.b315
cmp esi, 0x40
jae off.b315
mov dword[ebp+eax*4-0x208], ecx
mov esi, dword[ebp-0x20c]
inc esi
mov dword[ebp-0x20c], esi
xor eax, eax
test edx, edx
je off.b335
cmp dword[ebp+eax*4-0x104], ecx
je off.b335
inc eax
cmp eax, edx
jb off.b321
cmp eax, edx
jne off.b364
cmp edx, 0x40
jae off.b364
mov dword[ebp+eax*4-0x104], ecx
mov edx, dword[ebp-0x108]
inc edx
mov dword[ebp-0x108], edx
cmp ecx, ebx
jbe off.b376
mov ebx, ecx
mov dword[ebp-0x314], ebx
mov eax, dword[ebp+0x10]
xor ecx, ecx
mov dword[ebp-0x310], ecx
cmp eax, 0xffffffff
je off.b472
mov dword[ebp-0x30c], eax
mov ecx, 1
xor eax, eax
mov dword[ebp-0x310], ecx
test edx, edx
je off.b439
nop
mov ebx, dword[ebp+0x10]
cmp dword[ebp+eax*4-0x104], ebx
je off.b433
inc eax
cmp eax, edx
jb off.b416
mov ebx, dword[ebp-0x314]
cmp eax, edx
jne off.b464
cmp edx, 0x40
jae off.b464
mov edx, dword[ebp+0x10]
mov dword[ebp+eax*4-0x104], edx
inc dword[ebp-0x108]
cmp dword[ebp+0x10], ebx
jbe off.b472
mov ebx, dword[ebp+0x10]
cmp dword[ebp+0x18], 0
jg off.b511
jl off.b486
cmp dword[ebp+0x14], 0
jae off.b511
inc ebx
mov dword[ebp-0x330], ebx
mov ebx, dword[sym.imp.WS2_32.dll_select]
mov dword[ebp-0x314], 0
jmp off.b560
inc ebx
lea eax, [ebp-0x32c]
mov dword[ebp-0x330], ebx
mov ebx, dword[sym.imp.WS2_32.dll_select]
mov dword[ebp-0x314], eax
jmp off.b560
mov ecx, dword[ebp-0x310]
mov esi, dword[ebp-0x20c]
lea esp, [esp]
cmp dword[ebp+0x18], 0
jl off.b621
jg off.b574
cmp dword[ebp+0x14], 0
jbe off.b621
mov eax, 0x10624dd3
imul edi
sar edx, 6
mov eax, edx
shr eax, 0x1f
add eax, edx
mov dword[ebp-0x32c], eax
imul eax, eax, 0x3e8
mov edx, edi
sub edx, eax
imul edx, edx, 0x3e8
mov dword[ebp-0x328], edx
jmp off.b641
mov eax, dword[ebp+0x14]
or eax, dword[ebp+0x18]
jne off.b641
mov dword[ebp-0x32c], eax
mov dword[ebp-0x328], eax
mov edx, dword[ebp-0x314]
push edx
neg ecx
sbb ecx, ecx
lea edx, [ebp-0x310]
and ecx, edx
lea eax, [ebp-0x108]
push eax
neg esi
push ecx
mov ecx, dword[ebp-0x330]
sbb esi, esi
lea eax, [ebp-0x20c]
and esi, eax
push esi
push ecx
call ebx
cmp eax, 0xffffffff
jne off.b852
call dword[sym.imp.WS2_32.dll_WSAGetLastError]
test eax, eax
je off.b729
cmp dword[0x5620a8], 0
jne off.b856
cmp eax, 0x2714
jne off.b856
cmp dword[ebp+0x18], 0
jl off.b544
jg off.b751
cmp dword[ebp+0x14], 0
jbe off.b544
lea edx, [ebp-0x340]
push edx
call fcn.00413660
mov edx, dword[ebp-0x324]
sub esp, 0xc
mov ecx, esp
mov dword[ecx], edx
mov edx, dword[ebp-0x320]
mov dword[ecx+4], edx
mov edx, dword[ebp-0x31c]
mov dword[ecx+8], edx
mov edx, dword[ebp-0x318]
mov dword[ecx+0xc], edx
mov edx, dword[eax]
sub esp, 0x10
mov ecx, esp
mov dword[ecx], edx
mov edx, dword[eax+4]
mov dword[ecx+4], edx
mov edx, dword[eax+8]
mov eax, dword[eax+0xc]
mov dword[ecx+8], edx
mov dword[ecx+0xc], eax
call fcn.004136a0
mov edi, dword[ebp+0x14]
sub edi, eax
add esp, 0x20
test edi, edi
jle off.b878
jmp off.b544
test eax, eax
jns off.b876
or eax, 0xffffffff
pop edi
pop esi
pop ebx
mov ecx, dword[ebp-4]
xor ecx, ebp
call fcn.004f166b
mov esp, ebp
pop ebp
ret
jne off.b897
xor eax, eax
pop edi
pop esi
pop ebx
mov ecx, dword[ebp-4]
xor ecx, ebp
call fcn.004f166b
mov esp, ebp
pop ebp
ret
mov edi, dword[ebp+8]
xor esi, esi
cmp edi, 0xffffffff
je off.b949
lea ecx, [ebp-0x20c]
push ecx
push edi
call sub.WS2_32.dll___WSAFDIsSet
test eax, eax
je off.b929
mov esi, 1
lea edx, [ebp-0x108]
push edx
push edi
call sub.WS2_32.dll___WSAFDIsSet
test eax, eax
je off.b949
or esi, 4
mov edi, dword[ebp+0xc]
cmp edi, 0xffffffff
je off.b997
lea eax, [ebp-0x20c]
push eax
push edi
call sub.WS2_32.dll___WSAFDIsSet
test eax, eax
je off.b977
or esi, 8
lea ecx, [ebp-0x108]
push ecx
push edi
call sub.WS2_32.dll___WSAFDIsSet
test eax, eax
je off.b997
or esi, 4
mov edi, dword[ebp+0x10]
cmp edi, 0xffffffff
je off.b1045
lea edx, [ebp-0x310]
push edx
push edi
call sub.WS2_32.dll___WSAFDIsSet
test eax, eax
je off.b1025
or esi, 2
lea eax, [ebp-0x108]
push eax
push edi
call sub.WS2_32.dll___WSAFDIsSet
test eax, eax
je off.b1045
or esi, 4
mov ecx, dword[ebp-4]
pop edi
mov eax, esi
pop esi
xor ecx, ebp
pop ebx
call fcn.004f166b
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/e2ba7f10eb234338a49853c34d7d9c56