---
layout: post
title:  "fcn.0040c9c9 @ 20a93604f17ee6f3c2aa7b1f7a497fcf"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0040c9c9
- **Origin (md5):** 20a93604f17ee6f3c2aa7b1f7a497fcf
- **VirusTotal:** [virustotal.com/gui/file/20a93604f17ee6f3c2aa7b1f7a497fcf][virustotal_ref]

# Code Tags
<span class="tag" id="REGISTRY">REGISTRY</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.0040c9c9@20a93604f17ee6f3c2aa7b1f7a497fcf">fcn.0040c9c9</a><br>@20a93604f17ee6f3c2aa7b1f7a497fcf</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
and esp, 0xfffffff8
push 0xffffffffffffffff
push 0x45f266
mov eax, dword
push eax
sub esp, 0xa90
mov eax, dword[0x482084]
xor eax, esp
mov dword[esp+0xa88], eax
push ebx
push esi
push edi
mov eax, dword[0x482084]
xor eax, esp
push eax
lea eax, [esp+0xaa0]
mov dword
mov esi, 0x114
push esi
xor edi, edi
push edi
mov ebx, 0x485638
push ebx
call fcn.00413900
mov dword[0x485638], esi
mov dword[esp+0x2c], 0x35
mov dword[esp+0x48], 0x43
mov dword[esp+0x20], 0x4f
mov dword[esp+0x30], 0x4c
mov dword[esp+0x38], 0x4a
mov dword[esp+0x28], 0x37
mov eax, dword[esp+0x38]
mov ecx, dword[esp+0x2c]
imul eax, ecx
mov ecx, dword[esp+0x38]
imul ecx, ecx, 0x26
sub ecx, eax
mov dword[esp+0x30], ecx
mov eax, dword[esp+0x28]
mov ecx, dword[esp+0x2c]
add esp, 0xc
cmp ecx, eax
jg off.b299
mov eax, dword[esp+0x1c]
mov ecx, dword[esp+0x20]
imul eax, ecx
mov dword[esp+0x1c], eax
mov eax, dword[esp+0x24]
mov ecx, dword[esp+0x20]
imul eax, eax, 0x51
sub ecx, eax
mov dword[esp+0x1c], ecx
mov eax, dword[esp+0x1c]
mov ecx, dword[esp+0x1c]
imul eax, ecx
mov ecx, dword[esp+0x1c]
imul eax, ecx
mov ecx, dword[esp+0x24]
imul eax, ecx
mov ecx, dword[esp+0x14]
imul eax, ecx
mov ecx, dword[esp+0x2c]
imul eax, eax, 0x2c
imul ecx, ecx, 0x52
sub eax, ecx
mov ecx, dword[esp+0x1c]
sub eax, ecx
mov ecx, dword[esp+0x24]
sub eax, ecx
mov ecx, dword[esp+0x1c]
lea eax, [eax+ecx-0xc3]
add eax, dword[esp+0x3c]
add eax, dword[esp+0x20]
mov dword[esp+0x1c], eax
mov eax, dword[esp+0x2c]
sub eax, 0x2d
mov dword[esp+0x3c], eax
call fcn.004429a6
push ebx
call dword[eax+0x60]
mov dword[0x485750], edi
mov dword[0x48574c], edi
mov dword[esp+0x44], edi
mov dword[esp+0x48], edi
mov dword[esp+0x4c], edi
mov dword[esp+0xaa8], edi
push dword[0x4838f4]
mov eax, 0x20019
push reloc.OLEAUT32.dll_SysReAllocString
lea ebx, [esp+0x4c]
call fcn.0040536b
test eax, eax
jne off.b1020
push 0x7fe
mov word[esp+0x298], ax
xor ebx, ebx
lea eax, [esp+0x29a]
push ebx
push eax
call fcn.00413900
fld qword[0x47c9d8]
fstp qword[esp+0x48]
add esp, 0xc
fld qword[0x47c9d0]
lea eax, [esp+0x44]
fstp qword[esp+0x14]
lea esi, [esp+0x50]
fld qword[0x47c9c8]
lea edi, [esp+0x294]
fstp qword[esp+0x14]
fld qword[0x47c9c0]
fstp qword[esp+0x2c]
fld qword[esp+0x14]
fdiv qword[0x47c9b8]
fstp qword[esp+0x14]
fld qword[esp+0x3c]
fadd qword[0x47c9f0]
push dword[0x4838f8]
mov dword[esp+0x54], 0x400
push eax
fstp qword[esp+0x1c]
call fcn.0040b85a
test eax, eax
jne off.b1020
fld qword[0x47ca58]
mov dword[esp+0x38], ebx
mov dword[esp+0x28], ebx
fstp qword[esp+0x14]
fld qword[esp+0x14]
mov eax, edi
fadd qword[esp+0x14]
push eax
lea eax, [esp+0x58]
fsub qword[0x47ca50]
fsub qword[esp+0x18]
fadd qword[0x47ca48]
fstp qword[esp+0x18]
fld qword[esp+0x18]
fmul qword[esp+0x18]
fadd qword[esp+0x18]
fadd qword[0x47c998]
fld qword[esp+0x18]
fmul qword[esp+0x18]
faddp st(1)
fsub qword[esp+0x18]
fld qword[esp+0x18]
fld qword[0x47ca40]
fmul st(1), st(0)
fxch st(2)
faddp st(1)
fsubrp st(1)
fadd qword[esp+0x18]
fsub qword[esp+0x18]
fsub qword[0x47ca38]
fadd qword[esp+0x18]
fstp qword[esp+0x18]
fld qword[esp+0x18]
fadd qword[0x47c980]
fstp qword[esp+0x18]
fld qword[esp+0x18]
fsub qword[0x47ca10]
fstp qword[esp+0x18]
fld qword[esp+0x18]
fmul qword[esp+0x18]
fadd qword[esp+0x18]
fstp qword[esp+0x18]
call fcn.00405844
lea eax, [esp+0x54]
push eax
mov ecx, 0xfde9
lea edx, [esp+0x74]
mov byte[esp+0xaac], 1
call fcn.00452a24
cmp dword[eax+0x14], 0x10
pop ecx
jb off.b725
mov eax, dword[eax]
lea ecx, [esp+0x28]
push ecx
lea ecx, [esp+0x3c]
push ecx
push dword[0x483270]
push eax
call fcn.00414704
add esp, 0x10
cmp eax, 2
sete bl
push 1
xor edi, edi
lea esi, [esp+0x74]
call fcn.004053d9
push 1
lea esi, [esp+0x58]
call fcn.0040571d
test bl, bl
je off.b1020
mov eax, dword[esp+0x38]
fld qword[0x47c9b0]
mov dword[0x48574c], eax
fstp qword[esp+0x14]
fld qword[esp+0x14]
fsub qword[0x47c9a8]
fstp qword[esp+0x14]
fld qword[esp+0x14]
fsub qword[0x47c9a0]
fstp qword[esp+0x14]
fld qword[esp+0x14]
fsub qword[esp+0x14]
fadd qword[0x47c998]
fadd qword[esp+0x14]
fadd qword[0x47c990]
fadd qword[esp+0x14]
fsub qword[0x47c988]
fadd qword[esp+0x14]
fsub qword[esp+0x14]
fsub qword[0x47c980]
fadd qword[esp+0x14]
fstp qword[esp+0x14]
fld qword[esp+0x14]
fsub qword[esp+0x14]
fld qword[esp+0x14]
fmul qword[0x47c978]
faddp st(1)
fsub qword[esp+0x14]
fadd qword[esp+0x14]
fld qword[esp+0x14]
fmul qword[0x47c970]
faddp st(1)
fadd qword[esp+0x14]
fadd qword[esp+0x14]
fsub qword[0x47c968]
fstp qword[esp+0x14]
fld qword[esp+0x14]
fmul qword[esp+0x14]
fstp qword[esp+0x14]
fld qword[esp+0x14]
fsub qword[esp+0x14]
fstp qword[esp+0x14]
fld qword[esp+0x14]
fdiv qword[0x47c960]
fsub qword[esp+0x14]
fadd qword[0x47c958]
fsub qword[esp+0x14]
fadd qword[esp+0x14]
mov eax, dword[esp+0x28]
mov dword[0x485750], eax
fsub qword[0x47c950]
fstp qword[esp+0x14]
or dword[esp+0xaa8], 0xffffffff
cmp dword[esp+0x44], 0
je off.b1045
push dword[esp+0x44]
call dword[sym.imp.ADVAPI32.dll_RegCloseKey]
xor eax, eax
push 0x206
push eax
mov word[esp+0x94], ax
lea eax, [esp+0x96]
push eax
call fcn.00413900
push dword[0x4838fc]
lea eax, [esp+0x9c]
push eax
call fcn.00414002
add esp, 0x14
lea eax, [esp+0x8c]
push eax
call fcn.004434c7
call fcn.004429a6
lea ecx, [esp+0x8c]
push ecx
call dword[eax+0x1b8]
neg eax
sbb eax, eax
and eax, 0x20
add eax, 0x20
mov dword[0x485754], eax
mov eax, 0x485638
mov ecx, dword[esp+0xaa0]
mov dword
pop ecx
pop edi
pop esi
pop ebx
mov ecx, dword[esp+0xa88]
xor ecx, esp
call fcn.00411833
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/20a93604f17ee6f3c2aa7b1f7a497fcf