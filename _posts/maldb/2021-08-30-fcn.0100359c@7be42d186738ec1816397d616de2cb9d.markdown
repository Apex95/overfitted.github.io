---
layout: post
title:  "fcn.0100359c @ 7be42d186738ec1816397d616de2cb9d"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0100359c
- **Origin (md5):** 7be42d186738ec1816397d616de2cb9d
- **VirusTotal:** [virustotal.com/gui/file/7be42d186738ec1816397d616de2cb9d][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>
<span class="tag" id="PROCESS">PROCESS</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.0100359c@7be42d186738ec1816397d616de2cb9d">fcn.0100359c</a><br>@7be42d186738ec1816397d616de2cb9d</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

mov edi, edi
push ebp
mov ebp, esp
sub esp, 0x110
mov eax, dword[0x100b2d0]
push ebx
push esi
push edi
xor edi, edi
mov dword[ebp-4], eax
mov eax, dword[ebp+8]
inc edi
test eax, eax
mov dword[ebp-0x10c], edi
je off.b1263
cmp byte[eax], 0
je off.b1263
mov ebx, eax
cmp dword[ebp-0x10c], 0
je off.b264
mov eax, ebx
mov cl, byte[eax]
cmp cl, 0x20
je off.b100
cmp cl, 9
je off.b100
cmp cl, 0xd
je off.b100
cmp cl, 0xa
je off.b100
cmp cl, 0xb
je off.b100
cmp cl, 0xc
jne off.b109
push eax
call dword[sym.imp.USER32.dll_CharNextA]
jmp off.b68
cmp byte[eax], 0
je off.b264
xor ecx, ecx
xor edx, edx
mov ebx, eax
xor esi, esi
test edx, edx
jne off.b158
mov al, byte[ebx]
cmp al, 0x20
je off.b241
cmp al, 9
je off.b241
cmp al, 0xd
je off.b241
cmp al, 0xa
je off.b241
cmp al, 0xb
je off.b241
cmp al, 0xc
je off.b241
jmp off.b162
test esi, esi
jne off.b241
mov al, byte[ebx]
cmp al, 0x22
jne off.b215
lea eax, [ebx+1]
cmp byte[eax], 0x22
je off.b190
test edx, edx
jne off.b184
mov edx, edi
jmp off.b186
mov esi, edi
mov ebx, eax
jmp off.b236
cmp ecx, 0x103
jae off.b1029
mov byte[ebp+ecx-0x108], 0x22
inc ecx
inc ebx
inc ebx
jmp off.b236
cmp ecx, 0x103
jae off.b1029
mov byte[ebp+ecx-0x108], al
inc ecx
inc ebx
cmp byte[ebx], 0
jne off.b126
test edx, edx
mov byte[ebp+ecx-0x108], 0
je off.b338
test esi, esi
jne off.b342
and dword[ebp-0x10c], 0
cmp dword[0x100c88c], 0
je off.b1255
cmp byte[0x100c99e], 0
jne off.b1255
push 0x104
mov esi, 0x100c99e
push esi
push dword[0x100c4a4]
call dword[sym.imp.KERNEL32.dll_GetModuleFileNameA]
test eax, eax
je off.b1248
push 0x5c
push esi
call fcn.01006752
mov byte[eax+1], 0
jmp off.b1255
test esi, esi
jne off.b257
cmp byte[ebp-0x108], 0x2f
je off.b364
cmp byte[ebp-0x108], 0x2d
jne off.b1029
movsx eax, byte[ebp-0x107]
mov esi, dword[sym.imp.USER32.dll_CharUpperA]
push eax
call esi
movsx eax, al
sub eax, 0x3f
je off.b1219
sub eax, 4
je off.b1036
dec eax
je off.b863
sub eax, 0xa
je off.b742
push 3
pop ecx
sub eax, ecx
je off.b668
dec eax
je off.b460
dec eax
dec eax
je off.b863
and dword[ebp-0x10c], 0
cmp byte[ebx], 0
jne off.b53
jmp off.b264
cmp byte[ebp-0x106], 0
jne off.b483
mov dword[0x100c48c], ecx
mov dword[0x100c888], edi
jmp off.b446
cmp byte[ebp-0x106], 0x3a
jne off.b637
cmp byte[ebp-0x105], 0
mov dword[0x100c48c], edi
je off.b446
lea esi, [ebp-0x105]
movsx eax, byte[esi]
push eax
call dword[sym.imp.USER32.dll_CharUpperA]
movsx eax, al
inc esi
sub eax, 0x41
je off.b614
sub eax, 3
je off.b605
sub eax, 5
je off.b596
sub eax, 5
je off.b587
dec eax
dec eax
je off.b578
sub eax, 3
je off.b569
and dword[ebp-0x10c], 0
jmp off.b627
or dword[0x100c48c], 4
jmp off.b621
or byte[0x100cba8], 0x80
jmp off.b627
and dword[0x100c48c], 0xfffffffe
jmp off.b621
and dword[0x100c48c], 0xfffffffd
jmp off.b621
or dword[0x100cba8], 0x40
jmp off.b627
or dword[0x100c48c], 2
mov dword[0x100c888], edi
cmp byte[esi], 0
jne off.b517
jmp off.b446
lea eax, [ebp-0x107]
push eax
push 0x1001374
call dword[sym.imp.KERNEL32.dll_lstrcmpiA]
test eax, eax
je off.b446
jmp off.b439
cmp byte[ebp-0x106], 0
je off.b716
cmp byte[ebp-0x106], 0x3a
jne off.b439
movsx eax, byte[ebp-0x105]
push eax
call esi
cmp al, 0x31
je off.b716
cmp al, 0x41
je off.b730
cmp al, 0x55
jne off.b439
mov word[0x100c898], 2
jmp off.b446
mov word[0x100c898], di
jmp off.b446
cmp byte[ebp-0x106], 0
jne off.b762
mov dword[0x100c88c], edi
jmp off.b446
cmp byte[ebp-0x106], 0x3a
jne off.b439
cmp byte[ebp-0x105], 0
je off.b446
lea esi, [ebp-0x105]
movsx eax, byte[esi]
push eax
call dword[sym.imp.USER32.dll_CharUpperA]
movsx eax, al
inc esi
sub eax, 0x45
je off.b847
dec eax
dec eax
je off.b839
sub eax, 0xf
je off.b831
and dword[ebp-0x10c], 0
jmp off.b853
mov dword[0x100c894], edi
jmp off.b853
mov dword[0x100c890], edi
jmp off.b853
mov dword[0x100c88c], edi
cmp byte[esi], 0
jne off.b794
jmp off.b446
cmp byte[ebp-0x106], 0x3a
jne off.b439
xor eax, eax
cmp byte[ebp-0x105], 0x22
sete al
add eax, 3
mov esi, eax
lea edi, [ebp+esi-0x108]
push edi
call dword[sym.imp.KERNEL32.dll_lstrlenA]
test eax, eax
je off.b1175
lea eax, [ebp-0x110]
push eax
push edi
mov dword[ebp-0x110], esi
call fcn.01003517
test eax, eax
je off.b1175
movsx eax, byte[ebp-0x107]
push eax
call dword[sym.imp.USER32.dll_CharUpperA]
cmp al, 0x54
mov eax, dword[ebp-0x110]
jne off.b975
add eax, esi
mov esi, 0x100c99e
jmp off.b982
add eax, esi
mov esi, 0x100c89a
lea eax, [ebp+eax-0x108]
push eax
push esi
call dword[sym.imp.KERNEL32.dll_lstrcpyA]
push 0x1001271
push 0x104
push esi
call fcn.010066cf
mov eax, esi
push eax
call fcn.01002c57
test eax, eax
jne off.b1182
xor eax, eax
jmp off.b1265
cmp byte[ebp-0x106], 0
jne off.b1056
mov dword[0x100c884], edi
jmp off.b446
cmp byte[ebp-0x106], 0x3a
jne off.b439
xor eax, eax
cmp byte[ebp-0x105], 0x22
sete al
add eax, 3
mov esi, eax
lea edi, [ebp+esi-0x108]
push edi
call dword[sym.imp.KERNEL32.dll_lstrlenA]
test eax, eax
je off.b1175
push 0x5b
push edi
call fcn.0100662b
test eax, eax
je off.b1128
push 0x5d
push edi
call fcn.0100662b
test eax, eax
je off.b1175
push 0x5d
push edi
call fcn.0100662b
test eax, eax
je off.b1152
push 0x5b
push edi
call fcn.0100662b
test eax, eax
je off.b1175
lea eax, [ebp-0x110]
push eax
push edi
mov dword[ebp-0x110], esi
call fcn.01003517
test eax, eax
jne off.b1190
and dword[ebp-0x10c], 0
xor edi, edi
inc edi
jmp off.b446
mov eax, dword[ebp-0x110]
add eax, esi
lea eax, [ebp+eax-0x108]
push eax
push 0x100caa2
call dword[sym.imp.KERNEL32.dll_lstrcpyA]
jmp off.b1182
call fcn.010019a7
mov eax, dword[0x100ba54]
test eax, eax
je off.b1240
push eax
call dword[sym.imp.KERNEL32.dll_CloseHandle]
push 0
call dword[sym.imp.KERNEL32.dll_ExitProcess]
and dword[ebp-0x10c], 0
mov eax, dword[ebp-0x10c]
jmp off.b1265
mov eax, edi
mov ecx, dword[ebp-4]
pop edi
pop esi
pop ebx
call fcn.010064de
leave
ret 4

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/7be42d186738ec1816397d616de2cb9d