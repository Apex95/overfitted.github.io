---
layout: post
title:  "fcn.005e56b0 @ a5905e3c253c25bbaf727a1a18fe8ed1"
date:   2021-08-30 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.005e56b0
- **Origin (md5):** a5905e3c253c25bbaf727a1a18fe8ed1
- **VirusTotal:** [virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1][virustotal_ref]

# Code Tags
<span class="tag" id="SOCKET">SOCKET</span>
<span class="tag" id="THREAD">THREAD</span>


# Similar Functions

1. [fcn.005e7ab0][similar_1_ref] (sim.: 0.9576707184469968)
2. [fcn.005cbe30][similar_2_ref] (sim.: 0.9514323651685657)
3. [fcn.005bcbe0][similar_3_ref] (sim.: 0.9506932106343233)
4. [fcn.005ba960][similar_4_ref] (sim.: 0.948565070727742)
5. [fcn.00607950][similar_5_ref] (sim.: 0.9483572290199359)


# Disassembled Code

{% highlight nasm %}
push r15
push r14
push r13
push r12
push rbp
push rdi
push rsi
push rbx
sub rsp,0x2a8
mov ecx,0x202
lea rdx,[rsp+0x100]
call qword[sym.imp.WS2_32.dll_WSAStartup]
mov rax,qword[0x00b3d230]
lea rcx,[0x00aabcbe]
mov rdx,qword[rax+0x80]
call fcn.0074ee60
lea rcx,[0x00aabcbe]
lea rdx,str.UTF_8
call fcn.0074f070
mov rcx,qword[0x00a7d810]
test rcx,rcx
je 0x5e5730
mov rax,qword[rcx]
lea rdx,[0x00933a70]
mov rax,qword[rax+8]
cmp rax,rdx
jne 0x5e6d4f
mov edx,0x10
call fcn.00a5af40
mov ecx,0x10
lea rdi,[0x00b70090]
call fcn.00a5af70
mov rbp,qword[0x00a7d820]
mov qword[rax],rdi
mov byte[rax+8],0
mov qword[0x00a7d810],rax
test rbp,rbp
je 0x5e58e3
mov rax,qword[rbp]
lea rdx,[0x00933b40]
mov rax,qword[rax+8]
cmp rax,rdx
jne 0x5e6d45
lea rax,[0x00b700b0]
mov rdi,qword[rbp+0x1a70]
mov qword[rbp],rax
lea rax,[0x00b700d0]
test rdi,rdi
mov qword[rbp+8],rax
je 0x5e57fd
nop dword[rax]
mov rsi,qword[rdi+0x30]
mov rbx,qword[rdi+0x28]
mov r12,qword[rdi]
cmp rsi,rbx
je 0x5e57ce
mov rcx,qword[rbx]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x5e57c1
call fcn.00a5af30
add rbx,0x20
cmp rsi,rbx
jne 0x5e57b0
mov rbx,qword[rdi+0x28]
test rbx,rbx
je 0x5e57db
mov rcx,rbx
call fcn.00a5af30
mov rcx,qword[rdi+8]
lea rax,[rdi+0x18]
cmp rcx,rax
je 0x5e57ed
call fcn.00a5af30
mov rcx,rdi
mov rdi,r12
call fcn.00a5af30
test r12,r12
jne 0x5e57a0
mov r8,qword[rbp+0x1a68]
mov rcx,qword[rbp+0x1a60]
xor edx,edx
shl r8,3
call sub.msvcrt.dll_memset
mov rcx,qword[rbp+0x1a60]
lea rax,[rbp+0x1a90]
mov qword[rbp+0x1a78],0
mov qword[rbp+0x1a70],0
cmp rcx,rax
je 0x5e5844
call fcn.00a5af30
lea rsi,[rbp+0xcc8]
lea rax,[rbp+0x1728]
mov rcx,qword[rax-0x20]
lea rbx,[rax-0x20]
sub rax,0x10
cmp rcx,rax
je 0x5e5868
call fcn.00a5af30
cmp rsi,rbx
mov rax,rbx
jne 0x5e5852
lea rsi,[rbp+0x58]
lea rax,[rbp+0xab8]
nop dword[rax+rax]
mov rcx,qword[rax-0x20]
lea rbx,[rax-0x20]
sub rax,0x10
cmp rcx,rax
je 0x5e5896
call fcn.00a5af30
cmp rsi,rbx
mov rax,rbx
jne 0x5e5880
lea rax,fcn.0093e490
xor ecx,ecx
mov qword[rbp+8],rax
xchg qword[rbp+0x50],rcx
test rcx,rcx
je 0x5e58ba
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rcx,qword[rbp+0x28]
test rcx,rcx
je 0x5e58c8
call fcn.00a5af30
mov rcx,qword[rbp+0x10]
test rcx,rcx
je 0x5e58d6
call fcn.00a5af30
mov edx,0x1a98
mov rcx,rbp
call fcn.00a5af40
mov ecx,0x1a98
call fcn.00a5af70
mov rcx,rax
mov rbx,rax
call fcn.00658c50
mov rcx,qword[0x00a7d710]
mov qword[0x00a7d820],rbx
test rcx,rcx
je 0x5e5911
mov rax,qword[rcx]
call qword[rax+8]
mov ecx,0xf8
call fcn.00a5af70
mov rcx,rax
mov rbx,rax
call fcn.00617a60
mov rcx,qword[0x00a7d760]
mov qword[0x00a7d710],rbx
test rcx,rcx
je 0x5e593f
mov rax,qword[rcx]
call qword[rax+8]
mov ecx,0x80
call fcn.00a5af70
mov rcx,rax
mov rsi,rax
call fcn.006871f0
mov rbx,qword[0x00a7d720]
mov qword[0x00a7d760],rsi
test rbx,rbx
je 0x5e6cde
mov rax,qword[rbx]
lea rdx,[0x0092e4a0]
mov rax,qword[rax+8]
cmp rax,rdx
jne 0x5e6cd9
lea rax,[0x00b6eb30]
lea r13,[0x00b6eb58]
lea r14,[0x00b6eb78]
lea rbp,[rsi+0x3c]
mov qword[rbx],rax
mov qword[rsp+0x28],rax
lea rax,[rbx+0x58]
mov qword[rbx+8],r13
mov qword[rbx+0x58],r14
mov qword[rsp+0x68],rax
call qword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
mov edi,eax
mov dword[rsp+0x30],eax
xor eax,eax
lock cmpxchg dword[rbp],eax
cmp edi,eax
je 0x5e6d28
lea rdi,[rsi+0x40]
mov r15d,dword[rsi+0x40]
jmp 0x5e59e3
mov r15d,eax
mov edx,r15d
mov r8d,r15d
mov rcx,rdi
or edx,0x80000000
call fcn.008eebc0
cmp r15d,eax
jne 0x5e59e0
test r15d,r15d
js 0x5e70dc
mov eax,dword[rsp+0x30]
xchg dword[rbp],eax
mov dword[rsi+0x38],1
mov rdx,qword[rsi+0x10]
mov rcx,qword[rsi+8]
lea r8,[rsp+0x68]
xor r9d,r9d
call fcn.00a54140
mov r9,qword[rsi+0x10]
cmp r9,rax
je 0x5e5a58
lea rdx,[rax+8]
cmp r9,rdx
je 0x5e5a50
mov r8,r9
sub r8,rdx
mov rcx,r8
sar rcx,3
test rcx,rcx
jne 0x5e6e4a
sub r9,8
mov qword[rsi+0x10],r9
mov eax,dword[rsi+0x38]
sub eax,1
test eax,eax
mov dword[rsi+0x38],eax
je 0x5e6e5b
mov rdi,qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rcx,qword[rbx+0x68]
cmp rcx,0xffffffffffffffff
je 0x5e5a93
mov edx,0xffffffff
call qword[sym.imp.KERNEL32.dll_WaitForSingleObject]
mov rcx,qword[rbx+0x68]
call rdi
mov qword[rbx+0x68],0xffffffffffffffff
xor ecx,ecx
xchg qword[rbx+0x188],rcx
test rcx,rcx
je 0x5e5aa3
call rdi
mov rcx,qword[rbx+0x148]
test rcx,rcx
je 0x5e5ac0
nop
mov rsi,qword[rcx]
call fcn.00a5af30
test rsi,rsi
mov rcx,rsi
jne 0x5e5ab0
mov r8,qword[rbx+0x140]
mov rcx,qword[rbx+0x138]
xor edx,edx
shl r8,3
call sub.msvcrt.dll_memset
mov rcx,qword[rbx+0x138]
lea rax,[rbx+0x168]
mov qword[rbx+0x150],0
mov qword[rbx+0x148],0
cmp rcx,rax
je 0x5e5b07
call fcn.00a5af30
mov rbp,qword[rbx+0x110]
test rbp,rbp
je 0x5e5b71
mov r12,qword[rbp+0x30]
mov rsi,qword[rbp+0x28]
mov r15,qword[rbp]
cmp r12,rsi
je 0x5e5b42
mov rcx,qword[rsi]
lea rax,[rsi+0x10]
cmp rcx,rax
je 0x5e5b35
call fcn.00a5af30
add rsi,0x40
cmp r12,rsi
jne 0x5e5b24
mov rsi,qword[rbp+0x28]
test rsi,rsi
je 0x5e5b4f
mov rcx,rsi
call fcn.00a5af30
mov rcx,qword[rbp+8]
lea rax,[rbp+0x18]
cmp rcx,rax
je 0x5e5b61
call fcn.00a5af30
mov rcx,rbp
mov rbp,r15
call fcn.00a5af30
test r15,r15
jne 0x5e5b13
mov r8,qword[rbx+0x108]
mov rcx,qword[rbx+0x100]
xor edx,edx
shl r8,3
call sub.msvcrt.dll_memset
mov rcx,qword[rbx+0x100]
lea rax,[rbx+0x130]
mov qword[rbx+0x118],0
mov qword[rbx+0x110],0
cmp rcx,rax
je 0x5e5bb8
call fcn.00a5af30
mov rbp,qword[0x00b3dcb0]
mov rcx,qword[rbx+0xd8]
lea rax,[rbp+0x10]
mov qword[rbx+0x60],rax
lea rax,[rbx+0xe8]
cmp rcx,rax
je 0x5e5bdf
call fcn.00a5af30
mov rcx,qword[rbx+0xc0]
call rdi
xor ecx,ecx
xchg qword[rbx+0xb8],rcx
test rcx,rcx
je 0x5e5bf8
call rdi
mov r12,qword[rbx+0x88]
lea r15,[rbx+0x78]
test r12,r12
je 0x5e5c46
nop dword[rax+rax]
mov rdx,qword[r12+0x18]
mov rcx,r15
call fcn.00a44f30
mov rcx,qword[r12+0x20]
lea rax,[r12+0x30]
mov rsi,qword[r12+0x10]
cmp rcx,rax
je 0x5e5c36
call fcn.00a5af30
mov rcx,r12
mov r12,rsi
call fcn.00a5af30
test rsi,rsi
jne 0x5e5c10
mov rcx,qword[rbx+0x68]
lea rax,[0x00b70f00]
mov qword[rbx+0x60],rax
cmp rcx,0xffffffffffffffff
je 0x5e5c5d
call rdi
lea rax,fcn.0093d5d0
xor ecx,ecx
mov qword[rbx+8],rax
xchg qword[rbx+0x50],rcx
test rcx,rcx
je 0x5e5c75
call rdi
mov rcx,qword[rbx+0x28]
test rcx,rcx
je 0x5e5c83
call fcn.00a5af30
mov rcx,qword[rbx+0x10]
test rcx,rcx
je 0x5e5c91
call fcn.00a5af30
mov edx,0x190
mov rcx,rbx
call fcn.00a5af40
mov ecx,0x190
call fcn.00a5af70
mov rbx,rax
mov qword[rax+0x10],0
mov qword[rax+0x18],0
mov qword[rax+0x20],0
mov qword[rax+0x28],0
xor ecx,ecx
mov qword[rax+0x30],0
mov qword[rax+0x38],0
xor r9d,r9d
mov dword[rax+0x40],0
mov dword[rax+0x44],0
mov r8d,0x7fffffff
mov dword[rax+0x48],0
mov qword[rax+0x50],0
xor edx,edx
mov rax,qword[rsp+0x28]
mov qword[rbx+8],r13
mov qword[rbx+0x58],r14
mov qword[rbx+0x68],0xffffffffffffffff
mov dword[rbx+0x70],0
mov dword[rbx+0x80],0
mov qword[rbx],rax
lea rax,[rbp+0x10]
mov qword[rbx+0x88],0
mov qword[rbx+0xa0],0
mov dword[rbx+0xa8],0
mov qword[rbx+0x60],rax
lea rax,[rbx+0x80]
mov dword[rbx+0xac],0
mov dword[rbx+0xb0],0
mov qword[rbx+0xb8],0
mov qword[rbx+0x90],rax
mov qword[rbx+0x98],rax
call qword[sym.imp.KERNEL32.dll_CreateSemaphoreW]
mov qword[rbx+0xc0],rax
lea rax,[rbx+0xe8]
mov byte[rbx+0xc8],0
mov byte[rbx+0xc9],0
mov dword[rbx+0xcc],0
mov qword[rsp+0x48],rax
mov qword[rbx+0xd8],rax
lea rax,[rbx+0x100]
mov byte[rbx+0xd0],0
mov qword[rbx+0xe0],0
mov byte[rbx+0xe8],0
mov qword[rbx+0xf8],0
mov rcx,rax
mov qword[rsp+0x40],rax
call fcn.0060fc10
mov r13,qword[0x00a7d760]
lea rax,[rbx+0x58]
mov dword[rbx+0x178],0
mov dword[rbx+0x17c],0
mov dword[rbx+0x180],0
mov qword[rsp+0x70],rax
mov qword[rbx+0x188],0
mov rax,r13
add rax,0x38
mov qword[rsp+0x50],rax
je 0x5e79d1
mov rax,qword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
mov rdi,qword[sym.imp.KERNEL32.dll_CloseHandle]
mov qword[rsp+0x30],rax
call rax
lea r15,[r13+0x3c]
mov edi,eax
mov dword[rsp+0x5c],eax
xor eax,eax
lock cmpxchg dword[r15],eax
cmp edi,eax
je 0x5e6d0d
lea r14,[r13+0x40]
mov esi,dword[r13+0x40]
jmp 0x5e5e82
mov esi,eax
mov edx,esi
mov r8d,esi
mov rcx,r14
or edx,0x80000000
call fcn.008eebc0
cmp esi,eax
jne 0x5e5e80
test esi,esi
js 0x5e6f45
mov eax,dword[rsp+0x5c]
xchg dword[r15],eax
mov dword[r13+0x38],1
mov rdi,qword[r13+0x10]
mov rcx,qword[r13+8]
lea rsi,[rsp+0x70]
xor r9d,r9d
mov r8,rsi
mov rdx,rdi
call fcn.00a54140
cmp rdi,rax
je 0x5e6f1d
mov eax,dword[r13+0x38]
sub eax,1
test eax,eax
mov dword[r13+0x38],eax
je 0x5e6d56
mov rcx,qword[0x00a7d780]
mov qword[0x00a7d720],rbx
test rcx,rcx
je 0x5e5f00
mov rax,qword[rcx]
call qword[rax+8]
mov ecx,0x78
call fcn.00a5af70
mov rcx,rax
mov rbx,rax
call fcn.005dfcf0
mov rcx,qword[0x00a7d7a0]
mov qword[0x00a7d780],rbx
test rcx,rcx
je 0x5e5f2e
mov rax,qword[rcx]
call qword[rax+8]
mov ecx,0xa8
call fcn.00a5af70
mov rcx,rax
mov rbx,rax
call fcn.0064bf10
mov rcx,qword[0x00a7d770]
mov qword[0x00a7d7a0],rbx
test rcx,rcx
je 0x5e5f5c
mov rax,qword[rcx]
call qword[rax+8]
mov ecx,0x208
call fcn.00a5af70
mov rcx,rax
mov rbx,rax
call fcn.005d3730
mov rbp,qword[0x00a7d860]
mov qword[0x00a7d770],rbx
test rbp,rbp
je 0x5e6588
mov rax,qword[rbp]
lea rdx,[0x00934e40]
mov rax,qword[rax+8]
cmp rax,rdx
jne 0x5e6d3b
mov rax,qword[0x00b3dd10]
mov rcx,rbp
lea rdx,[rax+0x10]
mov qword[rbp],rdx
lea rdx,[rax+0x98]
mov qword[rbp+8],rdx
lea rdx,[rax+0xb8]
add rax,0xe8
mov qword[rbp+0x60],rax
mov qword[rbp+0x58],rdx
call fcn.005d8db0
mov rbx,qword[rbp+0x1e8]
test rbx,rbx
je 0x5e60e4
mov rax,qword[rbx]
lea rdx,[0x00934c60]
mov rax,qword[rax+8]
cmp rax,rdx
jne 0x5e6ed7
mov rax,qword[0x00b3dd00]
mov rcx,qword[rbx+8]
mov byte[rbx+0xc1],1
add rax,0x10
cmp rcx,0xffffffffffffffff
mov qword[rbx],rax
je 0x5e603a
mov edx,0xffffffff
call qword[sym.imp.KERNEL32.dll_WaitForSingleObject]
mov rcx,qword[rbx+8]
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov qword[rbx+8],0xffffffffffffffff
mov rcx,qword[rbx+0xa0]
lea rax,[rbx+0xb0]
cmp rcx,rax
je 0x5e6052
call fcn.00a5af30
mov rax,qword[0x00b3dd30]
lea rcx,[rbx+0x90]
mov rdx,0xffffffffffffffff
add rax,0x10
mov qword[rbx+0x18],rax
call fcn.006708a0
lea rcx,[rbx+0x88]
mov rdx,0xffffffffffffffff
call fcn.006708a0
mov rcx,qword[rbx+0x60]
lea rax,[rbx+0x70]
cmp rcx,rax
je 0x5e6099
call fcn.00a5af30
mov rcx,qword[rbx+0x40]
lea rax,[rbx+0x50]
cmp rcx,rax
je 0x5e60ab
call fcn.00a5af30
mov rcx,qword[rbx+0x20]
lea rax,[rbx+0x30]
cmp rcx,rax
je 0x5e60bd
call fcn.00a5af30
mov rcx,qword[rbx+8]
lea rax,[0x00b70f00]
mov qword[rbx],rax
cmp rcx,0xffffffffffffffff
je 0x5e60d7
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov edx,0xc8
mov rcx,rbx
call fcn.00a5af40
mov rbx,qword[rbp+0x1e0]
test rbx,rbx
je 0x5e61f1
mov rax,qword[rbx]
lea rdx,[0x00934c60]
mov rax,qword[rax+8]
cmp rax,rdx
jne 0x5e6ee1
mov rax,qword[0x00b3dd00]
mov rcx,qword[rbx+8]
mov byte[rbx+0xc1],1
add rax,0x10
cmp rcx,0xffffffffffffffff
mov qword[rbx],rax
je 0x5e6147
mov edx,0xffffffff
call qword[sym.imp.KERNEL32.dll_WaitForSingleObject]
mov rcx,qword[rbx+8]
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov qword[rbx+8],0xffffffffffffffff
mov rcx,qword[rbx+0xa0]
lea rax,[rbx+0xb0]
cmp rcx,rax
je 0x5e615f
call fcn.00a5af30
mov rax,qword[0x00b3dd30]
lea rcx,[rbx+0x90]
mov rdx,0xffffffffffffffff
add rax,0x10
mov qword[rbx+0x18],rax
call fcn.006708a0
lea rcx,[rbx+0x88]
mov rdx,0xffffffffffffffff
call fcn.006708a0
mov rcx,qword[rbx+0x60]
lea rax,[rbx+0x70]
cmp rcx,rax
je 0x5e61a6
call fcn.00a5af30
mov rcx,qword[rbx+0x40]
lea rax,[rbx+0x50]
cmp rcx,rax
je 0x5e61b8
call fcn.00a5af30
mov rcx,qword[rbx+0x20]
lea rax,[rbx+0x30]
cmp rcx,rax
je 0x5e61ca
call fcn.00a5af30
mov rcx,qword[rbx+8]
lea rax,[0x00b70f00]
mov qword[rbx],rax
cmp rcx,0xffffffffffffffff
je 0x5e61e4
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov edx,0xc8
mov rcx,rbx
call fcn.00a5af40
mov rbx,qword[rbp+0x1b8]
test rbx,rbx
je 0x5e6225
nop dword[rax]
mov rcx,qword[rbx+8]
lea rax,[rbx+0x18]
mov rsi,qword[rbx]
cmp rcx,rax
je 0x5e6215
call fcn.00a5af30
mov rcx,rbx
mov rbx,rsi
call fcn.00a5af30
test rsi,rsi
jne 0x5e6200
mov r8,qword[rbp+0x1b0]
mov rcx,qword[rbp+0x1a8]
xor edx,edx
shl r8,3
call sub.msvcrt.dll_memset
mov rcx,qword[rbp+0x1a8]
lea rax,[rbp+0x1d8]
mov qword[rbp+0x1c0],0
mov qword[rbp+0x1b8],0
cmp rcx,rax
je 0x5e626c
call fcn.00a5af30
xor ecx,ecx
xchg qword[rbp+0x198],rcx
test rcx,rcx
je 0x5e6280
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rbx,qword[rbp+0x160]
test rbx,rbx
je 0x5e62d9
nop dword[rax]
mov rcx,qword[rbx+0x48]
lea rax,[rbx+0x58]
mov rsi,qword[rbx]
cmp rcx,rax
je 0x5e62a5
call fcn.00a5af30
mov rcx,qword[rbx+0x28]
lea rax,[rbx+0x38]
cmp rcx,rax
je 0x5e62b7
call fcn.00a5af30
mov rcx,qword[rbx+8]
lea rax,[rbx+0x18]
cmp rcx,rax
je 0x5e62c9
call fcn.00a5af30
mov rcx,rbx
mov rbx,rsi
call fcn.00a5af30
test rsi,rsi
jne 0x5e6290
mov r8,qword[rbp+0x158]
mov rcx,qword[rbp+0x150]
xor edx,edx
shl r8,3
call sub.msvcrt.dll_memset
mov rcx,qword[rbp+0x150]
lea rax,[rbp+0x180]
mov qword[rbp+0x168],0
mov qword[rbp+0x160],0
cmp rcx,rax
je 0x5e6320
call fcn.00a5af30
mov rbx,qword[rbp+0x128]
test rbx,rbx
je 0x5e6355
nop dword[rax]
mov rcx,qword[rbx+8]
lea rax,[rbx+0x18]
mov rsi,qword[rbx]
cmp rcx,rax
je 0x5e6345
call fcn.00a5af30
mov rcx,rbx
mov rbx,rsi
call fcn.00a5af30
test rsi,rsi
jne 0x5e6330
mov r8,qword[rbp+0x120]
mov rcx,qword[rbp+0x118]
xor edx,edx
shl r8,3
call sub.msvcrt.dll_memset
mov rcx,qword[rbp+0x118]
lea rax,[rbp+0x148]
mov qword[rbp+0x130],0
mov qword[rbp+0x128],0
cmp rcx,rax
je 0x5e639c
call fcn.00a5af30
mov rsi,qword[rbp+0x108]
mov rbx,qword[rbp+0x100]
cmp rsi,rbx
je 0x5e63d1
nop
mov rcx,qword[rbx]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x5e63c1
call fcn.00a5af30
add rbx,0x20
cmp rsi,rbx
jne 0x5e63b0
mov rbx,qword[rbp+0x100]
test rbx,rbx
je 0x5e63de
mov rcx,rbx
call fcn.00a5af30
mov rsi,qword[rbp+0xf0]
mov rbx,qword[rbp+0xe8]
cmp rsi,rbx
je 0x5e6412
mov rcx,qword[rbx]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x5e6402
call fcn.00a5af30
add rbx,0x20
cmp rsi,rbx
jne 0x5e63f1
mov rbx,qword[rbp+0xe8]
test rbx,rbx
je 0x5e641f
mov rcx,rbx
call fcn.00a5af30
mov rcx,qword[rbp+0xd0]
test rcx,rcx
je 0x5e6430
call fcn.00a5af30
lea rax,[rbp+0x80]
lea rdi,[rbp+0xc8]
mov qword[rsp+0x28],rax
cmp rdi,qword[rsp+0x28]
mov rax,qword[sym.imp.KERNEL32.dll_Sleep]
je 0x5e6532
mov qword[rsp+0x38],rbp
mov r13,rax
nop dword[rax]
sub rdi,0x18
mov r15,qword[rdi]
mov r12,qword[rdi+8]
mov ebp,1
mov rsi,qword[0x00b3d090]
cmp r12,r15
mov rcx,r15
je 0x5e6518
mov rcx,qword[r15+0x40]
lea rax,[r15+0x50]
cmp rcx,rax
je 0x5e6495
call fcn.00a5af30
mov r14,qword[r15+0x38]
test r14,r14
je 0x5e64f7
mov ebx,0xffffffff
lock xadd dword[r14],ebx
sub ebx,ebp
je 0x5e64b3
jmp 0x5e64f7
add ebx,1
mov eax,ebp
xchg dword[rsi],eax
test eax,eax
je 0x5e64e0
cmp ebx,3
jbe 0x5e64b0
cmp ebx,0xf
jbe 0x5e6940
cmp ebx,0x1f
jbe 0x5e6950
mov ecx,1
call qword[sym.imp.KERNEL32.dll_Sleep]
jmp 0x5e64b0
mov rax,qword[0x00a7d6e0]
mov qword[r14],rax
mov qword[0x00a7d6e0],r14
mov dword[rsi],0
mov rcx,qword[r15]
lea rax,[r15+0x10]
cmp rcx,rax
je 0x5e6508
call fcn.00a5af30
add r15,0x60
cmp r12,r15
jne 0x5e6483
mov rcx,qword[rdi]
test rcx,rcx
je 0x5e6522
call fcn.00a5af30
cmp rdi,qword[rsp+0x28]
jne 0x5e6460
mov rbp,qword[rsp+0x38]
xor ecx,ecx
xchg qword[rbp+0x78],rcx
test rcx,rcx
je 0x5e6543
call qword[sym.imp.KERNEL32.dll_CloseHandle]
lea rax,fcn.0093e640
xor ecx,ecx
mov qword[rbp+8],rax
xchg qword[rbp+0x50],rcx
test rcx,rcx
je 0x5e655f
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rcx,qword[rbp+0x28]
test rcx,rcx
je 0x5e656d
call fcn.00a5af30
mov rcx,qword[rbp+0x10]
test rcx,rcx
je 0x5e657b
call fcn.00a5af30
mov edx,0x1f8
mov rcx,rbp
call fcn.00a5af40
mov ecx,0x1f8
call fcn.00a5af70
mov rcx,rax
mov rbx,rax
call fcn.005dafd0
mov rcx,qword[0x00a7d7e0]
mov qword[0x00a7d860],rbx
test rcx,rcx
je 0x5e65b6
mov rax,qword[rcx]
call qword[rax+8]
mov ecx,0xb0
call fcn.00a5af70
mov rcx,rax
mov rbx,rax
call fcn.005f0470
mov rcx,qword[0x00a7d7b0]
mov qword[0x00a7d7e0],rbx
test rcx,rcx
je 0x5e65e4
mov rax,qword[rcx]
call qword[rax+8]
mov ecx,0x178
call fcn.00a5af70
mov rcx,rax
mov rbx,rax
call fcn.0068ecc0
mov rcx,qword[0x00a7d830]
mov qword[0x00a7d7b0],rbx
test rcx,rcx
je 0x5e6612
mov rax,qword[rcx]
call qword[rax+8]
mov ecx,0xa0
call fcn.00a5af70
mov rbx,rax
mov rax,qword[0x00b3dce0]
mov rdi,qword[0x00a7d760]
mov dword[rbx+0x10],0
mov dword[rbx+0x14],0
mov dword[rbx+0x18],0
mov qword[rbx+0x20],0
lea rdx,[rax+0x10]
add rax,0x38
mov dword[rbx+0x28],0
mov qword[rbx+8],rax
lea rax,[rbx+8]
mov dword[rbx+0x2c],0
mov qword[rbx],rdx
mov dword[rbx+0x30],0
mov qword[rsp+0x78],rax
mov rax,rdi
mov qword[rbx+0x38],0
add rax,0x38
mov dword[rbx+0x40],0
mov dword[rbx+0x44],0
mov dword[rbx+0x48],0
mov qword[rbx+0x50],0
mov dword[rbx+0x58],0xffffffff
mov dword[rbx+0x60],0
mov dword[rbx+0x64],0
mov dword[rbx+0x68],0
mov qword[rbx+0x70],0
mov qword[rbx+0x78],0
mov dword[rbx+0x80],0
mov dword[rbx+0x84],0
mov dword[rbx+0x88],0
mov qword[rbx+0x90],0
mov qword[rbx+0x98],0
mov qword[rsp+0x28],rax
je 0x5e72d8
mov rax,qword[rsp+0x30]
call rax
lea r12,[rdi+0x3c]
mov r14d,eax
xor eax,eax
lock cmpxchg dword[r12],eax
cmp r14d,eax
je 0x5e6d04
lea rbp,[rdi+0x40]
mov esi,dword[rdi+0x40]
jmp 0x5e6742
mov esi,eax
mov edx,esi
mov r8d,esi
mov rcx,rbp
or edx,0x80000000
call fcn.008eebc0
cmp esi,eax
jne 0x5e6740
test esi,esi
js 0x5e701c
xchg dword[r12],r14d
mov dword[rdi+0x38],1
mov rsi,qword[rdi+0x10]
mov rcx,qword[rdi+8]
lea rbp,[rsp+0x78]
xor r9d,r9d
mov r8,rbp
mov rdx,rsi
call fcn.00a54140
cmp rsi,rax
je 0x5e6eeb
mov eax,dword[rdi+0x38]
sub eax,1
test eax,eax
mov dword[rdi+0x38],eax
je 0x5e6dcd
mov rcx,qword[0x00a7d740]
mov qword[0x00a7d830],rbx
test rcx,rcx
je 0x5e67ba
mov rax,qword[rcx]
call qword[rax+8]
mov ecx,0x468
call fcn.00a5af70
mov rcx,rax
mov rbx,rax
call fcn.00643600
mov rcx,qword[0x00a7d750]
mov qword[0x00a7d740],rbx
test rcx,rcx
je 0x5e67e8
mov rax,qword[rcx]
call qword[rax+8]
mov ecx,0x200
call fcn.00a5af70
mov rcx,rax
mov rbx,rax
call fcn.0065e4b0
mov rcx,qword[0x00a7d730]
mov qword[0x00a7d750],rbx
test rcx,rcx
je 0x5e6816
mov rax,qword[rcx]
call qword[rax+8]
mov ecx,0x98
call fcn.00a5af70
mov rcx,rax
mov rbx,rax
call fcn.006158d0
mov rcx,qword[0x00a7d7f0]
mov qword[0x00a7d730],rbx
test rcx,rcx
je 0x5e6844
mov rax,qword[rcx]
call qword[rax+8]
mov ecx,0x1f8
call fcn.00a5af70
mov rcx,rax
mov rbx,rax
call fcn.005f8f20
mov rcx,qword[0x00a7d800]
mov qword[0x00a7d7f0],rbx
test rcx,rcx
je 0x5e6872
mov rax,qword[rcx]
call qword[rax+8]
mov ecx,0x168
call fcn.00a5af70
mov rcx,rax
mov rbx,rax
call fcn.00601bb0
mov rcx,qword[0x00a7d840]
mov qword[0x00a7d800],rbx
test rcx,rcx
je 0x5e68a0
mov rax,qword[rcx]
call qword[rax+8]
mov ecx,0x50
call fcn.00a5af70
mov rcx,rax
mov rbx,rax
call fcn.005b77d0
mov qword[0x00a7d840],rbx
mov rbx,qword[0x00a7d870]
test rbx,rbx
je 0x5e6a32
mov rax,qword[rbx]
lea rdx,[0x00935900]
mov rax,qword[rax+8]
cmp rax,rdx
jne 0x5e6d31
lea rax,[0x00b706e0]
xor ecx,ecx
mov qword[rbx],rax
lea rax,[0x00b70700]
mov qword[rbx+8],rax
xchg qword[rbx+0xe8],rcx
test rcx,rcx
je 0x5e690c
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rsi,qword[rbx+0xb0]
lea rdi,[0x00aabd60]
test rsi,rsi
je 0x5e697c
mov eax,dword[rsi+0x10]
mov rbp,qword[rsi]
cdq
xor eax,edx
cmp eax,0x13
ja case.0x5e6934.3
movsxd rax,dword[rdi+rax*4]
add rax,rdi
jmp rax
call sub.msvcrt.dll_abort
nop dword[rax+rax]
pause
jmp 0x5e64b0
xor ecx,ecx
call r13
jmp 0x5e64b0
mov rcx,qword[rsi+0x18]
lea rax,[rsi+0x28]
cmp rcx,rax
je case.0x5e6934.0
call fcn.00a5af30
mov rcx,rsi
mov rsi,rbp
call fcn.00a5af30
test rbp,rbp
jne 0x5e691f
mov r8,qword[rbx+0xa8]
mov rcx,qword[rbx+0xa0]
xor edx,edx
shl r8,3
call sub.msvcrt.dll_memset
mov rcx,qword[rbx+0xa0]
lea rax,[rbx+0xd0]
mov qword[rbx+0xb8],0
mov qword[rbx+0xb0],0
cmp rcx,rax
je 0x5e69c3
call fcn.00a5af30
mov rcx,qword[rbx+0x80]
lea rax,[rbx+0x90]
cmp rcx,rax
je 0x5e69db
call fcn.00a5af30
mov rcx,qword[rbx+0x60]
lea rax,[rbx+0x70]
cmp rcx,rax
je 0x5e69ed
call fcn.00a5af30
lea rax,[0x00b71310]
xor ecx,ecx
mov qword[rbx+8],rax
xchg qword[rbx+0x50],rcx
test rcx,rcx
je 0x5e6a09
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rcx,qword[rbx+0x28]
test rcx,rcx
je 0x5e6a17
call fcn.00a5af30
mov rcx,qword[rbx+0x10]
test rcx,rcx
je 0x5e6a25
call fcn.00a5af30
mov edx,0xf0
mov rcx,rbx
call fcn.00a5af40
mov ecx,0xf0
call fcn.00a5af70
mov rcx,rax
mov rbx,rax
call fcn.005dc690
mov rsi,qword[0x00a7d7d0]
mov qword[0x00a7d870],rbx
test rsi,rsi
je 0x5e6b7b
mov rax,qword[rsi]
lea rdx,[0x009316a0]
mov rax,qword[rax+8]
cmp rax,rdx
jne 0x5e6f13
mov rax,qword[0x00b3dcc0]
mov rcx,qword[rsi+0x68]
lea rdx,[rax+0x10]
mov qword[rsi],rdx
lea rdx,[rax+0x40]
add rax,0x68
test rcx,rcx
mov qword[rsi+0x20],rax
mov qword[rsi+8],rdx
je 0x5e6aa2
mov rax,qword[rcx]
call qword[rax+8]
mov rcx,qword[rsi+0x60]
test rcx,rcx
je 0x5e6ab1
mov rax,qword[rcx]
call qword[rax+8]
mov rdi,qword[rsi+0x48]
mov rbx,qword[rsi+0x40]
cmp rdi,rbx
je 0x5e6af6
nop
mov rax,qword[rbx+0x30]
test rax,rax
je 0x5e6ad8
lea rcx,[rbx+0x20]
mov r8d,3
mov rdx,rcx
call rax
mov rcx,qword[rbx]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x5e6ae9
call fcn.00a5af30
add rbx,0x40
cmp rdi,rbx
jne 0x5e6ac0
mov rbx,qword[rsi+0x40]
test rbx,rbx
je 0x5e6b03
mov rcx,rbx
call fcn.00a5af30
mov rdi,qword[rsi+0x30]
mov rbx,qword[rsi+0x28]
cmp rdi,rbx
je 0x5e6b46
mov rax,qword[rbx+0x30]
test rax,rax
je 0x5e6b28
lea rcx,[rbx+0x20]
mov r8d,3
mov rdx,rcx
call rax
mov rcx,qword[rbx]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x5e6b39
call fcn.00a5af30
add rbx,0x40
cmp rdi,rbx
jne 0x5e6b10
mov rbx,qword[rsi+0x28]
test rbx,rbx
je 0x5e6b53
mov rcx,rbx
call fcn.00a5af30
mov rcx,qword[rsi+0x10]
lea rax,[0x00b70f00]
mov qword[rsi+8],rax
cmp rcx,0xffffffffffffffff
je 0x5e6b6e
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov edx,0x78
mov rcx,rsi
call fcn.00a5af40
mov ecx,0x78
call fcn.00a5af70
mov rcx,rax
mov rbx,rax
call fcn.0061c320
mov qword[0x00a7d7d0],rbx
mov rbx,qword[0x00a7d700]
test rbx,rbx
je 0x5e6d1c
mov rax,qword[rbx]
lea rdx,[0x00928d60]
mov rax,qword[rax+8]
cmp rax,rdx
jne 0x5e6d17
mov rdi,qword[rbx+0x10]
lea rsi,[0x00b6e9f0]
mov qword[rbx],rsi
test rdi,rdi
je 0x5e6be6
mov rcx,rdi
call fcn.00607540
mov edx,0x78
mov rcx,rdi
call fcn.00a5af40
mov rdi,qword[rbx+8]
test rdi,rdi
je 0x5e6c04
mov rcx,rdi
call fcn.00607540
mov edx,0x78
mov rcx,rdi
call fcn.00a5af40
mov edx,0x18
mov rcx,rbx
call fcn.00a5af40
mov ecx,0x18
call fcn.00a5af70
mov rcx,qword[0x00a7d850]
mov qword[rax],rsi
mov qword[rax+8],0
mov qword[rax+0x10],0
mov qword[0x00a7d700],rax
test rcx,rcx
je 0x5e6c47
mov rax,qword[rcx]
call qword[rax+8]
mov ecx,0x48
call fcn.00a5af70
mov rcx,rax
mov rbx,rax
call fcn.006a1d20
mov rcx,qword[0x00a7d7c0]
mov qword[0x00a7d850],rbx
test rcx,rcx
je 0x5e6c75
mov rax,qword[rcx]
call qword[rax+8]
mov ecx,0x98
call fcn.00a5af70
mov rcx,rax
mov rbx,rax
call fcn.006b26e0
mov rcx,qword[0x00a7d790]
mov qword[0x00a7d7c0],rbx
test rcx,rcx
je 0x5e6ca3
mov rax,qword[rcx]
call qword[rax+8]
mov ecx,0x128
call fcn.00a5af70
mov rcx,rax
mov rbx,rax
call fcn.00633990
mov qword[0x00a7d790],rbx
call fcn.0062c9a0
nop
add rsp,0x2a8
pop rbx
pop rsi
pop rdi
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov rcx,rbx
call rax
lea rax,[0x00b6eb30]
lea r13,[0x00b6eb58]
lea r14,[0x00b6eb78]
mov rbp,qword[0x00b3dcb0]
mov qword[rsp+0x28],rax
jmp 0x5e5c9e
add dword[rdi+0x38],1
jmp 0x5e676c
add dword[r13+0x38],1
jmp 0x5e5eb0
mov rcx,rbx
call rax
lea rsi,[0x00b6e9f0]
jmp 0x5e6c11
add dword[rsi+0x38],1
jmp 0x5e5a13
mov rcx,rbx
call rax
jmp 0x5e6a32
mov rcx,rbp
call rax
jmp 0x5e6588
mov rcx,rbp
call rax
jmp 0x5e58e3
call rax
jmp 0x5e5730
xchg dword[r15],eax
mov eax,0x80000000
lea rdi,[r13+0x40]
lock xadd dword[rdi],eax
test eax,0x40000000
jne 0x5e5ee7
cmp eax,0x80000000
je 0x5e5ee7
mov esi,dword[r13+0x40]
jmp 0x5e6d84
mov esi,eax
mov edx,esi
mov r8d,esi
mov rcx,rdi
or edx,0x40000000
call fcn.008eebc0
cmp esi,eax
jne 0x5e6d82
and esi,0x40000000
jne 0x5e5ee7
add r13,0x48
xor eax,eax
lock cmpxchg qword[r13],rax
test rax,rax
mov rsi,rax
mov rcx,rax
je 0x5e75f7
call qword[sym.imp.KERNEL32.dll_SetEvent]
jmp 0x5e5ee7
xchg dword[r12],eax
mov eax,0x80000000
lea rbp,[rdi+0x40]
lock xadd dword[rbp],eax
test eax,0x40000000
jne 0x5e67a1
cmp eax,0x80000000
je 0x5e67a1
mov esi,dword[rdi+0x40]
jmp 0x5e6e02
mov esi,eax
mov edx,esi
mov r8d,esi
mov rcx,rbp
or edx,0x40000000
call fcn.008eebc0
cmp esi,eax
jne 0x5e6e00
and esi,0x40000000
jne 0x5e67a1
add rdi,0x48
xor eax,eax
lock cmpxchg qword[rdi],rax
test rax,rax
mov rsi,rax
mov rcx,rax
je 0x5e7867
call qword[sym.imp.KERNEL32.dll_SetEvent]
jmp 0x5e67a1
mov rcx,rax
call sub.msvcrt.dll_memmove
mov r9,qword[rsi+0x10]
jmp 0x5e5a50
xchg dword[rbp],eax
mov eax,0x80000000
lea rdi,[rsi+0x40]
lock xadd dword[rdi],eax
test eax,0x40000000
jne 0x5e5a69
cmp eax,0x80000000
je 0x5e5a69
mov ebp,dword[rsi+0x40]
jmp 0x5e6e88
mov ebp,eax
mov edx,ebp
mov r8d,ebp
mov rcx,rdi
or edx,0x40000000
call fcn.008eebc0
cmp ebp,eax
jne 0x5e6e86
and ebp,0x40000000
mov rdi,qword[sym.imp.KERNEL32.dll_CloseHandle]
jne 0x5e5a70
add rsi,0x48
xor eax,eax
lock cmpxchg qword[rsi],rax
test rax,rax
mov rbp,rax
mov rcx,rax
je 0x5e7479
call qword[sym.imp.KERNEL32.dll_SetEvent]
jmp 0x5e5a70
mov rcx,rbx
call rax
jmp 0x5e60e4
mov rcx,rbx
call rax
jmp 0x5e61f1
mov rax,qword[rdi+0x10]
cmp rax,qword[rdi+0x18]
je 0x5e75e6
test rax,rax
mov rdx,qword[rsp+0x78]
je 0x5e6f06
mov qword[rax],rdx
add rax,8
mov qword[rdi+0x10],rax
jmp 0x5e6790
mov rcx,rsi
call rax
jmp 0x5e6b7b
mov rax,qword[r13+0x10]
cmp rax,qword[r13+0x18]
je 0x5e7719
test rax,rax
mov rdx,qword[rsp+0x70]
je 0x5e6f38
mov qword[rax],rdx
add rax,8
mov qword[r13+0x10],rax
jmp 0x5e5ed4
mov edx,dword[r13+0x40]
jmp 0x5e6f52
mov edx,eax
lea eax,[rdx+1]
mov esi,edx
or esi,0x80000000
test edx,edx
cmovs esi,eax
mov eax,edx
lock cmpxchg dword[r14],esi
cmp eax,edx
jne 0x5e6f50
shr edx,0x1f
test dl,dl
je 0x5e5ea1
mov eax,esi
shr eax,0x1f
test al,al
je 0x5e5ea1
lea rax,[r13+0x48]
mov rdi,rax
mov r12,rax
xor eax,eax
lock cmpxchg qword[rdi],rax
test rax,rax
mov qword[rsp+0x28],rax
je 0x5e76ad
mov rax,qword[sym.imp.KERNEL32.dll_WaitForSingleObjectEx]
mov r12d,0xffffffff
mov qword[rsp+0x38],rax
xor r8d,r8d
mov edx,r12d
mov rcx,qword[rsp+0x28]
mov rdi,qword[sym.imp.KERNEL32.dll_CloseHandle]
call rax
mov edx,esi
and edx,0x7fffffff
or edx,0x40000000
test edx,edx
js 0x5e7000
lea ecx,[rdx-1]
mov eax,edx
and ecx,0x3fffffff
or ecx,0x80000000
lock cmpxchg dword[r14],ecx
cmp eax,edx
je 0x5e5ea1
mov edx,eax
test edx,edx
jns 0x5e6fdc
mov ecx,edx
mov eax,edx
and ecx,0xbfffffff
lock cmpxchg dword[r14],ecx
cmp eax,edx
jne 0x5e6ffa
mov esi,eax
mov rax,qword[rsp+0x38]
jmp 0x5e6fb6
mov edx,dword[rdi+0x40]
jmp 0x5e7023
mov edx,eax
lea eax,[rdx+1]
mov esi,edx
or esi,0x80000000
test edx,edx
cmovs esi,eax
mov eax,edx
lock cmpxchg dword[rbp],esi
cmp eax,edx
jne 0x5e7021
mov eax,esi
shr eax,0x1f
test al,al
je 0x5e6761
shr edx,0x1f
test dl,dl
je 0x5e6761
lea r15,[rdi+0x48]
xor eax,eax
lock cmpxchg qword[r15],rax
test rax,rax
mov r13,rax
je 0x5e74af
mov rax,qword[sym.imp.KERNEL32.dll_WaitForSingleObjectEx]
mov r15d,0xffffffff
mov qword[rsp+0x38],rax
xor r8d,r8d
mov edx,r15d
mov rcx,r13
call rax
mov edx,esi
and edx,0x7fffffff
or edx,0x40000000
test edx,edx
js 0x5e70c0
lea ecx,[rdx-1]
mov eax,edx
and ecx,0x3fffffff
or ecx,0x80000000
lock cmpxchg dword[rbp],ecx
cmp eax,edx
je 0x5e6761
mov edx,eax
test edx,edx
jns 0x5e709c
mov ecx,edx
mov eax,edx
and ecx,0xbfffffff
lock cmpxchg dword[rbp],ecx
cmp eax,edx
jne 0x5e70ba
mov esi,eax
mov rax,qword[rsp+0x38]
jmp 0x5e707f
mov edx,dword[rsi+0x40]
jmp 0x5e70e3
mov edx,eax
lea eax,[rdx+1]
mov r15d,edx
or r15d,0x80000000
test edx,edx
cmovs r15d,eax
mov eax,edx
lock cmpxchg dword[rdi],r15d
cmp eax,edx
jne 0x5e70e1
mov eax,r15d
shr eax,0x1f
test al,al
je 0x5e5a05
shr edx,0x1f
test dl,dl
je 0x5e5a05
lea r10,[rsi+0x48]
xor eax,eax
lock cmpxchg qword[r10],rax
test rax,rax
mov r12,rax
je 0x5e719b
mov rax,qword[sym.imp.KERNEL32.dll_WaitForSingleObjectEx]
mov qword[rsp+0x38],rax
and r15d,0x7fffffff
mov edx,0xffffffff
xor r8d,r8d
mov rcx,r12
call rax
mov edx,r15d
or edx,0x40000000
jmp 0x5e717b
lea ecx,[rdx-1]
mov eax,edx
and ecx,0x3fffffff
or ecx,0x80000000
lock cmpxchg dword[rdi],ecx
cmp edx,eax
mov r15d,eax
je 0x5e5a05
mov edx,r15d
test edx,edx
jns 0x5e7158
mov ecx,edx
mov eax,edx
and ecx,0xbfffffff
lock cmpxchg dword[rdi],ecx
cmp eax,edx
mov r15d,eax
jne 0x5e7178
mov rax,qword[rsp+0x38]
jmp 0x5e7139
mov qword[rsp+0x38],r10
xor r9d,r9d
xor r8d,r8d
xor edx,edx
xor ecx,ecx
mov qword[rsp+0x40],rax
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov r12,rax
mov r10,qword[rsp+0x38]
mov r11,qword[rsp+0x40]
je 0x5e720b
mov rax,r11
lock cmpxchg qword[r10],r12
test rax,rax
je 0x5e712d
mov rcx,r12
mov qword[rsp+0x38],rax
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov r11,qword[rsp+0x38]
mov r12,r11
jmp 0x5e712d
lea rbx,[rsp+0xc0]
call fcn.006ea660
lea rdx,[0x00aabd1a]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0xd0],0xb
mov qword[rsp+0xd8],rsi
mov qword[rsp+0xe8],0
mov qword[rsp+0xe0],rax
lea rax,[0x00b72480]
mov byte[rsp+0xf0],0
mov qword[rsp+0xc0],rax
call fcn.00947760
mov rsi,rax
mov rcx,rbx
mov edx,0x200
call fcn.00a5af40
mov rcx,rsi
call fcn.008da260
mov rsi,rax
mov rcx,rbx
mov edx,0xa8
call fcn.00a5af40
mov rcx,rsi
call fcn.008da260
lea rax,[0x00b72450]
mov rcx,rbx
mov qword[rsp+0xc0],rax
call fcn.00962490
call fcn.00a55e20
mov rsi,rax
mov rcx,rbx
mov edx,0xb0
call fcn.00a5af40
mov rcx,rsi
call fcn.008da260
lea r12,[rsp+0x80]
call fcn.006ea660
lea rdx,[0x00aabd38]
mov rcx,r12
mov rsi,rax
call fcn.009de540
lea rax,[r12+0x30]
mov rcx,r12
mov dword[rsp+0x90],1
mov qword[rsp+0x98],rsi
mov qword[rsp+0xa8],0
mov qword[rsp+0xa0],rax
lea rax,[0x00b714e0]
mov byte[rsp+0xb0],0
mov qword[rsp+0x80],rax
call fcn.009472d0
mov rdi,rax
lea rcx,[rbx+0x88]
lea rsi,[rbx+0x28]
call fcn.00961980
lea rcx,[rbx+0x68]
call fcn.00961980
lea rax,[rbx+0x58]
lea rbp,[rax-0x18]
lea rcx,[rax-0x10]
call fcn.00961980
cmp rbp,rsi
mov rax,rbp
jne 0x5e7362
lea rcx,[rbx+0x18]
call fcn.00961980
mov rcx,rbx
mov edx,0xa0
call fcn.00a5af40
mov rcx,rdi
call fcn.008da260
mov rsi,rax
mov rcx,rbx
mov edx,0x468
call fcn.00a5af40
mov rcx,rsi
call fcn.008da260
mov rdi,rax
lea rax,[0x00b72450]
mov rcx,r12
mov qword[rsp+0x80],rax
call fcn.00962490
jmp 0x5e7345
xor ecx,ecx
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
je 0x5e74ef
mov rax,rbp
lock cmpxchg qword[rsi],rcx
test rax,rax
mov rbp,rax
je 0x5e6ecc
call rdi
mov rcx,rbp
jmp 0x5e6ecc
xor r9d,r9d
xor r8d,r8d
xor edx,edx
xor ecx,ecx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov r13,rax
je 0x5e7558
xor eax,eax
lock cmpxchg qword[r15],r13
test rax,rax
mov r15,rax
je 0x5e706d
mov rcx,r13
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov r13,r15
jmp 0x5e706d
lea rbx,[rsp+0xc0]
call fcn.006ea660
lea rdx,[0x00aabd1a]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0xd0],0xb
mov qword[rsp+0xd8],rsi
mov qword[rsp+0xe8],0
mov qword[rsp+0xe0],rax
lea rax,[0x00b72480]
mov byte[rsp+0xf0],0
mov qword[rsp+0xc0],rax
call fcn.00947760
lea r12,[rsp+0xc0]
call fcn.006ea660
lea rdx,[0x00aabd1a]
mov rcx,r12
mov rsi,rax
call fcn.009de540
lea rax,[r12+0x30]
mov rcx,r12
mov dword[rsp+0xd0],0xb
mov qword[rsp+0xd8],rsi
mov qword[rsp+0xe8],0
mov qword[rsp+0xe0],rax
lea rax,[0x00b72480]
mov byte[rsp+0xf0],0
mov qword[rsp+0xc0],rax
call fcn.00947760
jmp 0x5e72a4
lea rcx,[rdi+8]
mov rdx,rbp
call fcn.00a20b50
jmp 0x5e6790
xor ecx,ecx
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
je 0x5e7644
mov rax,rsi
lock cmpxchg qword[r13],rcx
test rax,rax
mov rsi,rax
je 0x5e6dc2
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rcx,rsi
jmp 0x5e6dc2
lea rbx,[rsp+0xc0]
call fcn.006ea660
lea rdx,[0x00aabd1a]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0xd0],0xb
mov qword[rsp+0xd8],rsi
mov qword[rsp+0xe8],0
mov qword[rsp+0xe0],rax
lea rax,[0x00b72480]
mov byte[rsp+0xf0],0
mov qword[rsp+0xc0],rax
call fcn.00947760
xor r9d,r9d
xor r8d,r8d
xor edx,edx
xor ecx,ecx
mov rdi,qword[sym.imp.KERNEL32.dll_CloseHandle]
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov qword[rsp+0x28],rax
je 0x5e78a5
mov rdx,rax
xor eax,eax
lock cmpxchg qword[r12],rdx
test rax,rax
mov r12,rax
je 0x5e6fa4
mov rcx,qword[rsp+0x28]
mov rdi,qword[sym.imp.KERNEL32.dll_CloseHandle]
call rdi
mov qword[rsp+0x28],r12
jmp 0x5e6fa4
lea rcx,[r13+8]
mov rdx,rsi
call fcn.00a20b50
jmp 0x5e5ed4
lea rcx,[rbx+0x180]
call fcn.00961980
mov rcx,qword[rbx+0x148]
test rcx,rcx
je 0x5e776b
mov r12,qword[rcx]
call fcn.00a5af30
test r12,r12
mov rcx,r12
jne 0x5e775b
mov r8,qword[rbx+0x140]
mov rcx,qword[rbx+0x138]
xor edx,edx
shl r8,3
call sub.msvcrt.dll_memset
mov rcx,qword[rbx+0x138]
lea rax,[rbx+0x168]
mov qword[rbx+0x150],0
mov qword[rbx+0x148],0
cmp rcx,rax
je 0x5e77b2
call fcn.00a5af30
mov rcx,qword[rsp+0x40]
call fcn.009c4c70
add rbp,0x10
mov rcx,qword[rbx+0xd8]
cmp qword[rsp+0x48],rcx
mov qword[rbx+0x60],rbp
je 0x5e77d7
call fcn.00a5af30
mov rcx,qword[rbx+0xc0]
call rdi
xor ecx,ecx
xchg qword[rbx+0xb8],rcx
test rcx,rcx
je 0x5e77f0
call rdi
mov rbp,qword[rbx+0x88]
lea r12,[rbx+0x78]
test rbp,rbp
je 0x5e7832
mov rdx,qword[rbp+0x18]
mov rcx,r12
call fcn.00a44f30
mov rcx,qword[rbp+0x20]
lea rax,[rbp+0x30]
mov r13,qword[rbp+0x10]
cmp rcx,rax
je 0x5e7822
call fcn.00a5af30
mov rcx,rbp
mov rbp,r13
call fcn.00a5af30
test r13,r13
jne 0x5e7800
mov rcx,qword[rbx+0x68]
lea rax,[0x00b70f00]
mov qword[rbx+0x60],rax
cmp rcx,0xffffffffffffffff
je 0x5e7849
call rdi
lea rcx,[rbx+8]
call fcn.0093d5d0
mov rcx,rbx
mov edx,0x190
call fcn.00a5af40
mov rcx,rsi
call fcn.008da260
xor ecx,ecx
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
je 0x5e7916
mov rax,rsi
lock cmpxchg qword[rdi],rcx
test rax,rax
mov rsi,rax
je 0x5e6e3f
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rcx,rsi
jmp 0x5e6e3f
lea r12,[rsp+0xc0]
call fcn.006ea660
lea rdx,[0x00aabd1a]
mov rcx,r12
mov rsi,rax
mov rdi,qword[sym.imp.KERNEL32.dll_CloseHandle]
call fcn.009de540
lea rax,[r12+0x30]
mov rcx,r12
mov dword[rsp+0xd0],0xb
mov qword[rsp+0xd8],rsi
mov qword[rsp+0xe8],0
mov qword[rsp+0xe0],rax
lea rax,[0x00b72480]
mov byte[rsp+0xf0],0
mov qword[rsp+0xc0],rax
call fcn.00947760
lea rbx,[rsp+0xc0]
call fcn.006ea660
lea rdx,[0x00aabd1a]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0xd0],0xb
mov qword[rsp+0xd8],rsi
mov qword[rsp+0xe8],0
mov qword[rsp+0xe0],rax
lea rax,[0x00b72480]
mov byte[rsp+0xf0],0
mov qword[rsp+0xc0],rax
call fcn.00947760
mov rsi,rax
lea rax,[0x00b72450]
mov rcx,r12
mov qword[rsp+0xc0],rax
call fcn.00962490
mov rdi,qword[sym.imp.KERNEL32.dll_CloseHandle]
jmp 0x5e7743
lea r12,[rsp+0x80]
call fcn.006ea660
lea rdx,[0x00aabd38]
mov rcx,r12
mov rsi,rax
mov rdi,qword[sym.imp.KERNEL32.dll_CloseHandle]
call fcn.009de540
lea rax,[r12+0x30]
mov rcx,r12
mov dword[rsp+0x90],1
mov qword[rsp+0x98],rsi
mov qword[rsp+0xa8],0
mov qword[rsp+0xa0],rax
lea rax,[0x00b714e0]
mov byte[rsp+0xb0],0
mov qword[rsp+0x80],rax
call fcn.009472d0
mov rsi,rax
mov rcx,rbx
mov edx,0x78
call fcn.00a5af40
mov rcx,rsi
call fcn.008da260
mov rsi,rax
lea rax,[0x00b72450]
mov rcx,r12
mov qword[rsp+0x80],rax
call fcn.00962490
mov rdi,qword[sym.imp.KERNEL32.dll_CloseHandle]
jmp 0x5e7743
{% endhighlight %}


[similar_1_ref]: /report/fcn.005e7ab0@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_2_ref]: /report/fcn.005cbe30@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_3_ref]: /report/fcn.005bcbe0@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_4_ref]: /report/fcn.005ba960@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_5_ref]: /report/fcn.00607950@a5905e3c253c25bbaf727a1a18fe8ed1
[virustotal_ref]: https://www.virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1