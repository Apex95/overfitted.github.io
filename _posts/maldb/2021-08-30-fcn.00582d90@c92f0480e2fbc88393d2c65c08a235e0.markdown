---
layout: post
title:  "fcn.00582d90 @ c92f0480e2fbc88393d2c65c08a235e0"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00582d90
- **Origin (md5):** c92f0480e2fbc88393d2c65c08a235e0
- **VirusTotal:** [virustotal.com/gui/file/c92f0480e2fbc88393d2c65c08a235e0][virustotal_ref]

# Code Tags
<span class="tag" id="CRYPTO">CRYPTO</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.00582d90@c92f0480e2fbc88393d2c65c08a235e0">fcn.00582d90</a><br>@c92f0480e2fbc88393d2c65c08a235e0</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
push edi
push esi
push ebx
mov ebx, eax
sub esp, 0x5c
mov eax, dword[eax+0x10]
mov dword[ebp-0x3c], edx
mov dword[ebp-0x2c], 0
mov dword[esp+0xc], eax
mov eax, dword[ebx+0xc]
mov dword[esp+4], str.Listing_containers_CSP=_s, _type_=__d_n_
mov dword[esp], ebx
mov dword[esp+8], eax
call fcn.005821d0
mov eax, dword[ebx+0xc]
test eax, eax
je off.b800
mov dword[esp+0x14], 0
mov dword[esp+0x10], 0
mov dword[esp+0xc], 0xffffffff
mov dword[esp+8], eax
mov dword[esp+4], 0
mov dword[esp], 0
mov esi, dword[sym.imp.KERNEL32.dll_MultiByteToWideChar]
call esi
sub esp, 0x18
test eax, eax
mov edx, eax
mov dword[ebp-0x28], eax
je off.b612
lea eax, [eax+eax+0x1e]
shr eax, 4
shl eax, 4
call fcn.006acfd0
sub esp, eax
lea edi, [esp+0x27]
mov dword[esp+0x14], edx
mov dword[esp+0xc], 0xffffffff
and edi, 0xfffffff0
mov dword[esp+0x10], edi
mov eax, dword[ebx+0xc]
mov dword[esp+4], 0
mov dword[esp], 0
mov dword[esp+8], eax
call esi
sub esp, 0x18
mov dword[esp+0x10], 0xf0000000
mov eax, dword[ebx+0x10]
mov dword[esp+8], edi
mov dword[esp+4], 0
mov dword[esp+0xc], eax
lea eax, [ebp-0x30]
mov dword[esp], eax
call dword[sym.imp.ADVAPI32.dll_CryptAcquireContextW]
sub esp, 0x14
test eax, eax
je off.b752
lea eax, [ebp-0x2c]
mov dword[esp+0x10], 1
mov dword[esp+8], 0
mov dword[esp+4], 2
mov dword[esp+0xc], eax
mov eax, dword[ebp-0x30]
mov dword[esp], eax
mov eax, dword[sym.imp.ADVAPI32.dll_CryptGetProvParam]
mov dword[ebp-0x40], eax
call eax
sub esp, 0x14
test eax, eax
je off.b816
mov eax, dword[ebp-0x2c]
mov dword[esp+4], str.Got_max_container_len__d_n_
mov dword[esp], ebx
mov dword[esp+8], eax
call fcn.005821d0
mov eax, dword[ebp-0x2c]
test eax, eax
jne off.b346
mov dword[ebp-0x2c], 0x400
mov eax, 0x400
mov dword[esp+8], 0x4d1
mov dword[esp+4], str.engines_e_capi.c_
xor edi, edi
mov dword[esp], eax
call fcn.00517a60
test eax, eax
mov esi, eax
je off.b1152
mov dword[ebp-0x44], ebx
jmp off.b472
mov eax, dword[ebp-0x28]
mov dword[esp+0x14], ebx
mov dword[esp+0x10], edi
mov dword[esp+8], esi
mov dword[esp+4], str.Container_name__s, _len=_d
mov dword[esp+0xc], eax
mov eax, dword[ebp-0x44]
mov dword[esp], eax
call fcn.005821d0
cmp byte[esi], 0
jne off.b442
mov eax, dword[ebp-0x2c]
cmp dword[ebp-0x28], eax
je off.b992
mov eax, dword[ebp-0x3c]
mov dword[esp+8], edi
add edi, 1
mov dword[esp+0xc], esi
mov dword[esp+4], str._lu.__s_n_
mov dword[esp], eax
call fcn.004be930
mov eax, dword[ebp-0x2c]
xor ebx, ebx
test edi, edi
sete bl
mov dword[ebp-0x28], eax
lea eax, [ebp-0x28]
mov byte[esi], 0
mov dword[esp+0x10], ebx
mov dword[esp+8], esi
mov dword[esp+0xc], eax
mov eax, dword[ebp-0x30]
mov dword[esp+4], 2
mov dword[esp], eax
call dword[ebp-0x40]
sub esp, 0x14
test eax, eax
jne off.b387
call dword[sym.imp.KERNEL32.dll_GetLastError]
cmp eax, 0x103
mov edi, eax
mov ebx, 1
jne off.b1024
mov dword[esp], esi
mov dword[esp+8], 0x4f5
mov dword[esp+4], str.engines_e_capi.c_
call fcn.00517a30
mov eax, dword[ebp-0x30]
mov dword[esp+4], 0
mov dword[esp], eax
call dword[sym.imp.ADVAPI32.dll_CryptReleaseContext]
sub esp, 8
lea esp, [ebp-0xc]
mov eax, ebx
pop ebx
pop esi
pop edi
pop ebp
ret
mov eax, dword[0x83a194]
test eax, eax
jne off.b631
call fcn.004f8b40
mov dword[0x83a194], eax
mov dword[esp+0x10], 0x4bb
mov dword[esp+0xc], str.engines_e_capi.c_
mov dword[esp+8], 0x41
lea ebx, [ebp-0x22]
mov dword[esp], eax
mov dword[esp+4], 0x6b
call fcn.004f6fb0
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov dword[esp], ebx
mov dword[esp+0xc], eax
mov dword[esp+8], 0x78771d
mov dword[esp+4], 0xa
call fcn.004be960
mov dword[esp+8], ebx
mov dword[esp+4], str.Error_code=_0x_
xor ebx, ebx
mov dword[esp], 2
call fcn.004f8e30
lea esp, [ebp-0xc]
mov eax, ebx
pop ebx
pop esi
pop edi
pop ebp
ret
mov eax, dword[0x83a194]
test eax, eax
je off.b976
mov dword[esp+0x10], 0x4c3
mov dword[esp+0xc], str.engines_e_capi.c_
mov dword[esp+8], 0x68
jmp off.b655
xor edi, edi
jmp off.b196
mov eax, dword[0x83a194]
test eax, eax
jne off.b835
call fcn.004f8b40
mov dword[0x83a194], eax
lea ebx, [ebp-0x22]
mov dword[esp], eax
mov dword[esp+0x10], 0x4c9
mov dword[esp+0xc], str.engines_e_capi.c_
mov dword[esp+8], 0x6c
mov dword[esp+4], 0x6b
call fcn.004f6fb0
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov dword[esp], ebx
mov dword[esp+0xc], eax
mov dword[esp+8], 0x78771d
mov dword[esp+4], 0xa
call fcn.004be960
mov dword[esp+8], ebx
mov dword[esp+4], str.Error_code=_0x_
xor ebx, ebx
mov dword[esp], 2
call fcn.004f8e30
mov eax, dword[ebp-0x30]
mov dword[esp+4], 0
mov dword[esp], eax
call dword[sym.imp.ADVAPI32.dll_CryptReleaseContext]
sub esp, 8
lea esp, [ebp-0xc]
mov eax, ebx
pop ebx
pop esi
pop edi
pop ebp
ret
call fcn.004f8b40
mov dword[0x83a194], eax
jmp off.b765
mov ebx, dword[ebp-0x44]
mov dword[esp+4], str.Enumerate_bug:_using_workaround_n_
mov dword[esp], ebx
mov ebx, 1
call fcn.005821d0
jmp off.b555
mov eax, dword[0x83a194]
test eax, eax
jne off.b1043
call fcn.004f8b40
mov dword[0x83a194], eax
lea ebx, [ebp-0x22]
mov dword[esp], eax
mov dword[esp+0x10], 0x4e4
mov dword[esp+0xc], str.engines_e_capi.c_
mov dword[esp+8], 0x6c
mov dword[esp+4], 0x6b
call fcn.004f6fb0
mov dword[esp], ebx
mov dword[esp+0xc], edi
mov dword[esp+8], 0x78771d
mov dword[esp+4], 0xa
call fcn.004be960
mov dword[esp+8], ebx
mov dword[esp+4], str.Error_code=_0x_
xor ebx, ebx
mov dword[esp], 2
call fcn.004f8e30
jmp off.b555
mov eax, dword[0x83a194]
test eax, eax
jne off.b1171
call fcn.004f8b40
mov dword[0x83a194], eax
mov dword[esp+0x10], 0x4d3
mov dword[esp+0xc], str.engines_e_capi.c_
xor ebx, ebx
mov dword[esp+8], 0x41
mov dword[esp+4], 0x6b
mov dword[esp], eax
call fcn.004f6fb0
jmp off.b555

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/c92f0480e2fbc88393d2c65c08a235e0