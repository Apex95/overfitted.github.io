---
layout: post
title:  "fcn.00414172 @ 9060907d555cecab3519fcbc82318d7e"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00414172
- **Origin (md5):** 9060907d555cecab3519fcbc82318d7e
- **VirusTotal:** [virustotal.com/gui/file/9060907d555cecab3519fcbc82318d7e][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [20.560924530029297, -285.56085205078125, '<b><a href="/report/fcn.00414172@9060907d555cecab3519fcbc82318d7e">fcn.00414172</a><br>@9060907d555cecab3519fcbc82318d7e</b><br>', 'point { fill-color: #e0440e; }'],
[-98.21094512939453, 34.8482780456543, '<b><a href="/report/fcn.00414172@e9c6b3bcaa2edc455cb26f1e0f4a513a">fcn.00414172</a><br>@e9c6b3bcaa2edc455cb26f1e0f4a513a</b><br>', 'null'],
[-235.98387145996094, 143.01123046875, '<b><a href="/report/fcn.00414172@6312517583453b51c66fd5c06a181092">fcn.00414172</a><br>@6312517583453b51c66fd5c06a181092</b><br>', 'null'],
[243.99119567871094, 11.056585311889648, '<b><a href="/report/fcn.00475c1d@6f3954a480bef11309decb3759df55ad">fcn.00475c1d</a><br>@6f3954a480bef11309decb3759df55ad</b><br>', 'null'],
[-47.9775505065918, 208.8108367919922, '<b><a href="/report/fcn.00475c1d@cd64783198de5872d050db281b6d529b">fcn.00475c1d</a><br>@cd64783198de5872d050db281b6d529b</b><br>', 'null'],
[66.12580871582031, 20.042882919311523, '<b><a href="/report/fcn.00475c1d@985d3a961f1a2ad37039ba25bf21c0ee">fcn.00475c1d</a><br>@985d3a961f1a2ad37039ba25bf21c0ee</b><br>', 'null'],
[155.50462341308594, -154.0670928955078, '<b><a href="/report/fcn.00475c1d@2a380710d2016aed75cfad6eacab1d1a">fcn.00475c1d</a><br>@2a380710d2016aed75cfad6eacab1d1a</b><br>', 'null'],
[-252.6643524169922, -57.15287780761719, '<b><a href="/report/fcn.00414172@bd5810ea8cdeec913ece5ee7baedb8e9">fcn.00414172</a><br>@bd5810ea8cdeec913ece5ee7baedb8e9</b><br>', 'null'],
[135.49537658691406, 183.5513153076172, '<b><a href="/report/fcn.00475c1d@83f49824bfe7c3c24f4b74a2ba6ab65b">fcn.00475c1d</a><br>@83f49824bfe7c3c24f4b74a2ba6ab65b</b><br>', 'null'],
[-174.12744140625, -224.80409240722656, '<b><a href="/report/fcn.00475c1d@125511dc58d9fe5b15e0562013727778">fcn.00475c1d</a><br>@125511dc58d9fe5b15e0562013727778</b><br>', 'null'],
[-33.78504943847656, -116.31472778320312, '<b><a href="/report/fcn.00414172@b9e7701b101639a92238161f00b7471e">fcn.00414172</a><br>@b9e7701b101639a92238161f00b7471e</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

mov edi, edi
push ebp
mov ebp, esp
sub esp, 0x28
mov eax, dword[ebp+8]
mov ecx, eax
push ebx
mov ebx, dword[ebp+0xc]
and eax, 0x3f
push esi
sar ecx, 6
push edi
imul edi, eax, 0x30
mov dword[ebp-8], ecx
mov eax, dword[ecx*4+0x42f9c0]
mov dword[ebp-0x28], 0xa
mov edx, dword[edi+eax+0x18]
mov dword[ebp-0x20], edx
mov edx, dword[ebp+0x10]
test edx, edx
je off.b74
push 0xa
pop esi
cmp word[ebx], si
jne off.b74
or byte[edi+eax+0x28], 4
jmp off.b79
and byte[edi+eax+0x28], 0xfb
lea eax, [ebx+edx*2]
mov esi, ebx
mov dword[ebp-0x10], eax
mov edx, ebx
cmp ebx, eax
jae off.b453
mov dword[ebp-0x14], 0x1a
mov dword[ebp-0x18], 0xd
movzx eax, word[edx]
cmp ax, word[ebp-0x14]
je off.b421
lea ecx, [edx+2]
cmp ax, word[ebp-0x18]
je off.b140
mov edx, ecx
jmp off.b401
cmp ecx, dword[ebp-0x10]
jae off.b204
movzx ecx, word[ecx]
mov dword[ebp-0xc], ecx
lea ecx, [esi+2]
push 0xa
mov dword[ebp-0x1c], ecx
mov ecx, dword[ebp-0xc]
pop ebx
cmp cx, bx
jne off.b170
push ebx
pop eax
mov ecx, eax
xor eax, eax
cmp word[ebp-0xc], bx
mov ebx, dword[ebp+0xc]
sete al
mov word[esi], cx
mov esi, dword[ebp-0x1c]
lea eax, [eax*2+2]
add edx, eax
jmp off.b407
push 0
lea eax, [ebp-0x24]
mov dword[ebp-0xc], ecx
push eax
push 2
lea eax, [ebp-4]
push eax
push dword[ebp-0x20]
call dword[sym.imp.KERNEL32.dll_ReadFile]
test eax, eax
je off.b395
cmp dword[ebp-0x24], 0
je off.b395
mov ecx, dword[ebp-8]
mov eax, dword[ecx*4+0x42f9c0]
test byte[edi+eax+0x28], 0x48
je off.b340
mov dx, word[ebp-4]
lea eax, [esi+2]
mov dword[ebp-0x1c], eax
cmp dx, word[ebp-0x28]
jne off.b287
push 0xa
pop edx
mov word[esi], dx
jmp off.b336
push 0xd
pop eax
mov word[esi], ax
mov eax, dword[ecx*4+0x42f9c0]
push 0xa
mov byte[edi+eax+0x2a], dl
mov eax, dword[ecx*4+0x42f9c0]
shr dx, 8
mov byte[edi+eax+0x2b], dl
mov eax, dword[ecx*4+0x42f9c0]
pop edx
mov byte[edi+eax+0x2c], dl
mov eax, dword[ebp-0x1c]
mov esi, eax
jmp off.b359
push 0xa
pop eax
cmp word[ebp-4], ax
jne off.b364
cmp esi, ebx
jne off.b364
mov word[esi], ax
add esi, 2
mov edx, dword[ebp-0xc]
jmp off.b410
push 1
push 0xffffffffffffffff
push 0xfffffffffffffffe
push dword[ebp+8]
call fcn.00414b70
mov edx, dword[ebp-0xc]
add esp, 0x10
push 0xa
pop eax
cmp word[ebp-4], ax
je off.b407
jmp off.b398
mov edx, dword[ebp-0xc]
push 0xd
pop eax
mov word[esi], ax
add esi, 2
mov ecx, dword[ebp-8]
cmp edx, dword[ebp-0x10]
jb off.b111
jmp off.b453
mov ecx, dword[ecx*4+0x42f9c0]
mov al, byte[ecx+edi+0x28]
test al, 0x40
jne off.b444
or al, 2
mov byte[ecx+edi+0x28], al
jmp off.b453
push 0x1a
pop eax
mov word[esi], ax
add esi, 2
sub esi, ebx
and esi, 0xfffffffe
pop edi
mov eax, esi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/9060907d555cecab3519fcbc82318d7e