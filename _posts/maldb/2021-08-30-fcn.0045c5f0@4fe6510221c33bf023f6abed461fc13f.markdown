---
layout: post
title:  "fcn.0045c5f0 @ 4fe6510221c33bf023f6abed461fc13f"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0045c5f0
- **Origin (md5):** 4fe6510221c33bf023f6abed461fc13f
- **VirusTotal:** [virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.0045c5f0@4fe6510221c33bf023f6abed461fc13f">fcn.0045c5f0</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

sub esp, 0x1fc
mov ecx, dword[esp+0x204]
push ebx
push ebp
mov ebp, dword[esp+0x210]
push esi
push edi
push 0
mov ebx, eax
push 0
lea eax, [esp+0x21c]
push eax
push ecx
mov ecx, ebp
call fcn.0045b9a0
mov edi, dword[esp+0x224]
mov esi, eax
add esp, 0x10
mov dword[esp+0x14], esi
call fcn.0045b3e0
mov dword[esp+0x24], eax
test eax, eax
jne off.b160
mov edx, dword[0x4c28ec]
cmp byte[edx+0x104], al
jne off.b123
push 1
push eax
mov eax, dword[0x4c6cb4]
push 0xffffffffffffffff
push 0x4a331c
push eax
call fcn.00476680
pop edi
pop esi
pop ebp
pop ebx
add esp, 0x1fc
ret 0x10
mov ecx, dword[esp+0x210]
push 0x4ab02c
push 0
push 0x4a331c
call fcn.0042dc50
pop edi
pop esi
pop ebp
pop ebx
add esp, 0x1fc
ret 0x10
test esi, esi
jne off.b214
mov ecx, dword[0x4c28ec]
cmp byte[ecx+0x104], 0
jne off.b123
mov edx, dword[0x4c6cb4]
push 1
push esi
push 0xffffffffffffffff
push 0x4a331c
push edx
call fcn.00476680
pop edi
pop esi
pop ebp
pop ebx
add esp, 0x1fc
ret 0x10
push ebp
push esi
call fcn.00465dc0
mov dword[esp+0x1c], eax
cmp eax, dword[esi+0x10]
jb off.b256
mov eax, dword[esp+0x210]
push eax
call fcn.00430510
pop edi
pop esi
pop ebp
pop ebx
add esp, 0x1fc
ret 0x10
mov edx, dword[esi+0x18]
push 1
xor edi, edi
push edi
push 0xffffffffffffffff
lea ecx, [eax+eax*4]
mov eax, dword[0x4c6cb4]
push 0x4a0900
push eax
lea ebp, [edx+ecx*4]
call fcn.00476680
mov ecx, dword[0x4c8568]
mov edx, dword[0x4c856c]
mov dword[0x4c8568], edi
mov dword[0x4c856c], edi
mov edi, dword[esp+0x24]
lea eax, [edi-1]
mov dword[esp+0x4c], ecx
mov dword[esp+0x48], edx
mov dword[esp+0x2c], 1
mov byte[esp+0x13], 0
cmp eax, 0xc
ja case.default.0x45c74d
jmp dword[eax*4+0x45d4c0]
mov edi, ebp
lea esi, [esp+0x70]
call fcn.00464220
mov eax, dword[esp+0x21c]
mov ecx, dword[esp+0x1c]
push eax
mov eax, dword[esp+0x18]
push ecx
push ebp
mov edx, esi
push edx
mov edx, dword[esp+0x224]
push eax
call fcn.00461d30
mov dword[esp+0x2c], eax
jmp case.0x45c7a1.10
mov al, byte[ebp+4]
movzx ecx, al
dec ecx
cmp ecx, 0x17
ja case.0x45c7a1.7
movzx ecx, byte[ecx+0x45d52c]
jmp dword[ecx*4+0x45d4f4]
mov al, byte[ebp+5]
shr al, 6
and al, 1
mov byte[esp+0x13], al
jmp case.0x45c7a1.4
mov eax, dword[ebp]
lea edx, [esp+0x30]
push edx
push eax
call dword[sym.imp.USER32.dll_GetClientRect]
mov eax, dword[esp+0x38]
sub eax, dword[esp+0x30]
mov dword[esp+0x28], 0
mov dword[esp+0x20], eax
mov eax, dword[esp+0x3c]
sub eax, dword[esp+0x34]
mov dword[esp+0x1c], eax
mov eax, ebx
call fcn.00409620
mov esi, eax
cmp word[esi], 0x2a
jne 0x45c8a2
jmp 0x45c800
mov ebx, 0x4a352c
mov eax, esi
call fcn.004095d0
mov ebx, eax
test ebx, ebx
jne 0x45c829
mov eax, esi
lea edx, [eax+2]
mov cx, word[eax]
add eax, 2
test cx, cx
jne 0x45c817
sub eax, edx
sar eax, 1
lea ebx, [esi+eax*2]
movzx edi, word[ebx]
push 4
xor ecx, ecx
add esi, 2
push str.Icon
push esi
mov word[ebx], cx
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x45c856
add esi, 8
call fcn.0040d260
mov dword[esp+0x28], eax
jmp 0x45c885
mov ax, word[esi]
call fcn.004095a0
movzx eax, ax
cmp eax, 0x48
je 0x45c879
cmp eax, 0x57
jne 0x45c885
add esi, 2
call fcn.0040d260
mov dword[esp+0x20], eax
jmp 0x45c885
add esi, 2
call fcn.0040d260
mov dword[esp+0x1c], eax
mov eax, ebx
mov word[ebx], di
call fcn.00409620
mov esi, eax
cmp word[esi], 0x2a
je 0x45c800
test edi, edi
je 0x45c8a2
add ebx, 2
mov edx, dword[esp+0x1c]
mov eax, dword[esp+0x20]
push edx
mov edx, dword[esp+0x2c]
push eax
push ebx
mov esi, ebp
call fcn.00464500
test eax, eax
je 0x45d1ee
mov byte[esp+0x13], 1
jmp case.0x45c7a1.4
cmp edi, 2
jne case.0x45c7a1.4
push 0
push 0
push 0
push 1
mov eax, ebx
call fcn.00473730
add esp, 0x10
test eax, eax
je case.0x45c7a1.4
mov esi, ebx
call fcn.0040d260
test eax, eax
je 0x45c912
cmp eax, 1
je 0x45c912
cmp byte[ebp+4], 5
jne case.0x45c7a1.4
cmp eax, 0xffffffff
jne case.0x45c7a1.4
jmp 0x45c917
cmp eax, 0xffffffff
jne 0x45c91c
mov eax, 2
cmp byte[ebp+4], 6
jne 0x45c936
mov ecx, dword[esp+0x14]
push eax
mov eax, dword[esp+0x20]
push ebp
call fcn.004680b0
jmp case.0x45c7a1.10
mov ecx, dword[ebp]
push 0
push eax
push 0xf1
push ecx
call dword[sym.imp.USER32.dll_SendMessageW]
jmp case.0x45c7a1.10
cmp word[ebx], 0
je 0x45c96e
mov edx, dword[ebp]
push 0xfffffffffffffff0
push edx
call dword[sym.imp.USER32.dll_GetWindowLongW]
test al, 4
je 0x45c96e
mov edi, ebx
call fcn.00474610
mov esi, eax
jmp 0x45c970
mov esi, ebx
mov eax, esi
test esi, esi
jne 0x45c978
mov eax, ebx
push eax
mov eax, dword[ebp]
push eax
call dword[sym.imp.USER32.dll_SetWindowTextW]
test esi, esi
je case.0x45c7a1.10
cmp esi, ebx
je case.0x45c7a1.10
push esi
call fcn.0048e3af
add esp, 4
jmp case.0x45c7a1.10
cmp edi, 2
jne 0x45c9f8
cmp word[ebx], 0
je 0x45c9dd
push 1
lea esi, [esp+0x54]
mov eax, ebx
call fcn.004733b0
add esp, 4
test eax, eax
je case.0x45c7a1.10
mov edx, dword[ebp]
mov ecx, esi
push ecx
push 0
push 0x1002
push edx
call dword[sym.imp.USER32.dll_SendMessageW]
jmp case.0x45c7a1.10
mov ecx, dword[ebp]
lea eax, [esp+0x50]
push eax
push 1
push 0x1002
push ecx
call dword[sym.imp.USER32.dll_SendMessageW]
jmp case.0x45c7a1.10
mov edx, dword[ebp]
push 0xfffffffffffffff0
push edx
mov byte[esp+0x1b], 0
call dword[sym.imp.USER32.dll_GetWindowLongW]
mov esi, eax
and esi, 0xfffffff2
cmp word[ebx], 0
je 0x45ca29
push str.LongDate
push ebx
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x45ca58
or esi, 4
mov eax, dword[ebp]
push esi
push 0xfffffffffffffff0
push eax
call dword[sym.imp.USER32.dll_SetWindowLongW]
movzx ecx, byte[esp+0x13]
mov edx, dword[ebp]
neg ecx
sbb ecx, ecx
and ecx, ebx
push ecx
push 0
push 0x1032
push edx
call dword[sym.imp.USER32.dll_SendMessageW]
jmp case.0x45c7a1.10
push str.Time
push ebx
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x45ca6f
or esi, 9
jmp 0x45ca29
mov byte[esp+0x13], 1
jmp 0x45ca36
cmp word[ebx], 0
je case.0x45c7a1.10
lea eax, [esp+0x50]
mov ecx, ebx
call fcn.00473320
mov esi, eax
test esi, esi
je case.0x45c7a1.4
mov eax, dword[ebp]
push 0xfffffffffffffff0
push eax
call dword[sym.imp.USER32.dll_GetWindowLongW]
test al, 2
je 0x45cb85
cmp esi, 1
jne 0x45cace
mov ecx, dword[esp+0x50]
mov edx, dword[esp+0x54]
mov eax, dword[esp+0x58]
mov dword[esp+0x60], ecx
mov ecx, dword[esp+0x5c]
mov dword[esp+0x64], edx
mov dword[esp+0x68], eax
mov dword[esp+0x6c], ecx
mov eax, dword[ebp]
lea edx, [esp+0x50]
push edx
push 0
push 0x1006
push eax
call dword[sym.imp.USER32.dll_SendMessageW]
mov bl, byte[ebp+6]
mov ecx, dword[esp+0x14]
call fcn.00468930
test eax, eax
je case.0x45c7a1.10
mov edx, dword[ebp]
push edx
call dword[sym.imp.USER32.dll_IsWindowVisible]
test eax, eax
je case.0x45c7a1.10
mov ecx, dword[ebp]
lea eax, [esp+0x30]
push eax
push ecx
call dword[sym.imp.USER32.dll_GetWindowRect]
mov esi, dword[esp+0x14]
mov eax, dword[esi+4]
push 2
lea edx, [esp+0x34]
push edx
push eax
push 0
call dword[sym.imp.USER32.dll_MapWindowPoints]
mov edx, dword[esi+4]
push 1
lea ecx, [esp+0x34]
push ecx
push edx
call dword[sym.imp.USER32.dll_InvalidateRect]
mov esi, dword[esp+0x4c]
test esi, esi
je 0x45cb74
mov eax, dword[0x4c8568]
test eax, eax
je 0x45cb65
push eax
call fcn.0048e3af
add esp, 4
cmp dword[0x4c856c], 0x400000
jbe 0x45cb65
dec dword[0x4c8570]
mov eax, dword[esp+0x48]
mov dword[0x4c8568], esi
mov dword[0x4c856c], eax
mov eax, dword[esp+0x2c]
pop edi
pop esi
pop ebp
pop ebx
add esp, 0x1fc
ret 0x10
mov edx, dword[ebp]
lea ecx, [esp+0x50]
push ecx
push 0
push 0x1002
push edx
jmp 0x45cade
push 0
mov eax, ebx
call fcn.00467e70
mov ecx, dword[ebp]
movzx eax, ax
push eax
push 0x401
push ecx
call dword[sym.imp.USER32.dll_SendMessageW]
jmp case.0x45c7a1.10
cmp word[ebx], 0x2b
mov edi, dword[sym.imp.USER32.dll_SendMessageW]
jne 0x45cbf9
lea esi, [ebx+2]
call fcn.0040d260
test byte[ebp+5], 0x80
push 0
mov esi, eax
push 0
je 0x45cbe7
mov edx, dword[ebp]
push 0x472
push edx
call edi
add esi, eax
jmp 0x45cc02
mov eax, dword[ebp]
push 0x468
push eax
call edi
movsx ecx, ax
add esi, ecx
jmp 0x45cc02
mov esi, ebx
call fcn.0040d260
mov esi, eax
mov dl, byte[ebp+5]
mov ecx, dword[ebp]
and dl, 0x80
movzx eax, dl
neg eax
sbb eax, eax
push esi
and eax, 0xa
push 0
add eax, 0x467
push eax
push ecx
call edi
jmp case.0x45c7a1.10
cmp word[ebx], 0x2b
jne 0x45cc68
lea esi, [ebx+2]
call fcn.0040d260
test byte[ebp+5], 0x80
mov edi, eax
je 0x45cc3e
neg edi
mov edx, dword[ebp]
mov esi, dword[sym.imp.USER32.dll_SendMessageW]
push 0
push 0
push 0x400
push edx
call esi
add eax, edi
push eax
mov eax, dword[ebp]
push 1
push 0x405
push eax
call esi
jmp case.0x45c7a1.10
mov esi, ebx
call fcn.0040d260
test byte[ebp+5], 0x80
je 0x45cc7d
push eax
mov edi, ebp
call fcn.00468200
mov ecx, dword[ebp]
push eax
push 1
push 0x405
push ecx
call dword[sym.imp.USER32.dll_SendMessageW]
jmp case.0x45c7a1.10
cmp word[ebx], 0x2b
push 0
jne 0x45ccb9
lea esi, [ebx+2]
call fcn.0040d260
mov edx, dword[ebp]
push eax
push 0x403
push edx
call dword[sym.imp.USER32.dll_SendMessageW]
jmp case.0x45c7a1.10
mov esi, ebx
call fcn.0040d260
push eax
mov eax, dword[ebp]
push 0x402
push eax
call dword[sym.imp.USER32.dll_SendMessageW]
jmp case.0x45c7a1.10
mov ecx, dword[ebp]
push ebx
push ecx
call dword[sym.imp.USER32.dll_SetWindowTextW]
jmp case.0x45c7a1.10
cmp al, 8
jne 0x45cd1c
cmp edi, 3
jne 0x45cd1c
mov edx, dword[ebp]
push 0
push 0xffffffffffffffff
push 0x14e
push edx
call dword[sym.imp.USER32.dll_SendMessageW]
mov eax, dword[ebp]
push ebx
push eax
call dword[sym.imp.USER32.dll_SetWindowTextW]
cmp byte[esp+0x13], 0
jne 0x45cb02
jmp case.0x45c7a1.10
mov cx, word[ebx]
cmp cx, word[esi+0x46]
jne 0x45cd6c
add ebx, 2
mov byte[esp+0x13], 1
cmp al, 9
je 0x45cd56
xor edx, edx
cmp al, 0x13
sete dl
push 0
push 0
lea eax, [edx-1]
and eax, 0xffffee42
add eax, 0x1309
push eax
mov eax, dword[ebp]
push eax
call dword[sym.imp.USER32.dll_SendMessageW]
jmp 0x45cd71
push 0
push 0
mov eax, 0x184
push eax
mov eax, dword[ebp]
push eax
call dword[sym.imp.USER32.dll_SendMessageW]
jmp 0x45cd71
mov byte[esp+0x13], 0
cmp word[ebx], 0
je 0x45cd87
mov ecx, dword[esp+0x14]
push 0
push ecx
mov eax, ebx
mov esi, ebp
call fcn.00464280
cmp byte[ebp+4], 0x13
jne case.0x45c7a1.10
cmp byte[esp+0x13], 0
je case.0x45c7a1.10
mov edi, dword[esp+0x14]
push 0
push ebp
call fcn.00468620
mov edx, dword[edi+4]
push 1
push 0
jmp 0x45cb32
cmp word[ebx], 0
mov eax, 0x80000000
mov dword[esp+0x18], eax
mov dword[esp+0x28], eax
mov dword[esp+0x1c], eax
mov dword[esp+0x20], eax
je 0x45cea2
mov edi, dword[sym.imp.KERNEL32.dll_MulDiv]
add ebx, 2
lea esp, [esp]
mov ax, word[ebx-2]
call fcn.004095a0
movzx eax, ax
add eax, 0xffffffb8
cmp eax, 0x11
ja case.0x45cdff.73
movzx eax, byte[eax+0x45d558]
jmp dword[eax*4+0x45d544]
push ebx
call fcn.0048dfe6
add esp, 4
cmp byte[esi+0xc0], 0
je 0x45ce24
mov ecx, dword[0x4c85d0]
push 0x60
push ecx
push eax
call edi
mov dword[esp+0x1c], eax
jmp case.0x45cdff.73
push ebx
call fcn.0048dfe6
add esp, 4
cmp byte[esi+0xc0], 0
je 0x45ce48
mov edx, dword[0x4c85d0]
push 0x60
push edx
push eax
call edi
mov dword[esp+0x20], eax
jmp case.0x45cdff.73
push ebx
call fcn.0048dfe6
add esp, 4
cmp byte[esi+0xc0], 0
je 0x45ce6c
mov ecx, dword[0x4c85d0]
push 0x60
push ecx
push eax
call edi
mov dword[esp+0x18], eax
jmp case.0x45cdff.73
push ebx
call fcn.0048dfe6
add esp, 4
cmp byte[esi+0xc0], 0
je 0x45ce90
mov edx, dword[0x4c85d0]
push 0x60
push edx
push eax
call edi
mov dword[esp+0x28], eax
add ebx, 2
cmp word[ebx-2], 0
jne 0x45cde0
mov ecx, dword[ebp]
lea eax, [esp+0x30]
push eax
push ecx
call dword[sym.imp.USER32.dll_GetWindowRect]
mov edx, dword[esp+0x30]
mov eax, dword[esp+0x34]
lea ecx, [esp+0x40]
mov dword[esp+0x40], edx
mov edx, dword[esi+4]
push ecx
push edx
mov dword[esp+0x4c], eax
call dword[sym.imp.USER32.dll_ScreenToClient]
mov eax, dword[esp+0x18]
cmp eax, 0x80000000
je 0x45cedf
mov dword[esp+0x40], eax
mov eax, dword[esp+0x28]
cmp eax, 0x80000000
je 0x45ceee
mov dword[esp+0x44], eax
mov ecx, dword[esp+0x20]
cmp ecx, 0x80000000
jne 0x45cf02
mov ecx, dword[esp+0x3c]
sub ecx, dword[esp+0x34]
mov eax, dword[esp+0x1c]
cmp eax, 0x80000000
jne 0x45cf15
mov eax, dword[esp+0x38]
sub eax, dword[esp+0x30]
mov edx, dword[ebp]
push 1
push ecx
mov ecx, dword[esp+0x48]
push eax
mov eax, dword[esp+0x50]
push eax
push ecx
push edx
call dword[sym.imp.USER32.dll_MoveWindow]
test eax, eax
je 0x45d1ee
cmp byte[ebp+4], 0x11
jne 0x45cf9d
mov eax, dword[ebp]
mov ebx, dword[sym.imp.USER32.dll_SendMessageW]
push 0
push 1
push 0x421
push eax
call ebx
mov ecx, dword[ebp]
push 0
push 0
push 0x421
push ecx
mov esi, eax
call ebx
mov edi, eax
test esi, esi
je 0x45cf80
mov edx, dword[ebp]
push esi
push 1
push 0x420
push edx
call ebx
push 1
push 0
push esi
call dword[sym.imp.USER32.dll_InvalidateRect]
test edi, edi
je 0x45cf9d
mov eax, dword[ebp]
push edi
push 0
push 0x420
push eax
call ebx
push 1
push 0
push edi
call dword[sym.imp.USER32.dll_InvalidateRect]
cmp dword[esp+0x24], 5
jne case.0x45c7a1.10
mov edx, dword[ebp]
lea ecx, [esp+0x30]
push ecx
push edx
call dword[sym.imp.USER32.dll_GetWindowRect]
mov esi, dword[esp+0x14]
mov ecx, dword[esi+4]
push 2
lea eax, [esp+0x34]
push eax
push ecx
push 0
call dword[sym.imp.USER32.dll_MapWindowPoints]
mov eax, dword[esi+4]
push 1
lea edx, [esp+0x34]
push edx
push eax
jmp 0x45cb33
mov ecx, dword[ebp]
push ecx
call dword[sym.imp.USER32.dll_SetFocus]
test eax, eax
je 0x45d1ee
mov dword[esp+0x2c], 1
jmp case.0x45c7a1.10
cmp edi, 7
jne 0x45d008
and byte[ebp+5], 0xef
jmp 0x45d00c
or byte[ebp+5], 0x10
mov bl, byte[ebp+6]
mov ecx, esi
call fcn.00468930
mov esi, eax
test esi, esi
je 0x45d055
mov edx, dword[esi]
push 0xfffffffffffffff0
push edx
call dword[sym.imp.USER32.dll_GetWindowLongW]
test eax, 0x8000000
jne case.0x45c7a1.10
mov eax, dword[esi]
push 0
push 0
push 0x130b
push eax
call dword[sym.imp.USER32.dll_SendMessageW]
movzx ecx, byte[ebp+7]
cmp eax, ecx
je 0x45d055
cmp eax, 0xffffffff
jne case.0x45c7a1.10
call dword[sym.imp.USER32.dll_GetForegroundWindow]
mov edx, dword[esp+0x14]
mov esi, dword[sym.imp.USER32.dll_GetFocus]
cmp eax, dword[edx+4]
jne 0x45d075
call esi
cmp eax, dword[ebp]
jne 0x45d075
mov bl, 1
jmp 0x45d077
xor bl, bl
mov ecx, dword[ebp]
xor eax, eax
cmp edi, 7
sete al
push eax
push ecx
call dword[sym.imp.USER32.dll_EnableWindow]
test bl, bl
je 0x45d117
call esi
test eax, eax
jne 0x45d117
mov edx, dword[esp+0x14]
mov eax, dword[edx+4]
push eax
call dword[sym.imp.USER32.dll_SetFocus]
jmp 0x45d117
cmp edi, 9
jne 0x45d0b3
and byte[ebp+5], 0xf7
jmp 0x45d0b7
or byte[ebp+5], 8
mov bl, byte[ebp+6]
mov ecx, esi
call fcn.00468930
mov esi, eax
test esi, esi
je 0x45d100
mov ecx, dword[esi]
push 0xfffffffffffffff0
push ecx
call dword[sym.imp.USER32.dll_GetWindowLongW]
test eax, 0x10000000
je case.0x45c7a1.10
mov edx, dword[esi]
push 0
push 0
push 0x130b
push edx
call dword[sym.imp.USER32.dll_SendMessageW]
movzx ecx, byte[ebp+7]
cmp eax, ecx
je 0x45d100
cmp eax, 0xffffffff
jne case.0x45c7a1.10
mov eax, dword[ebp]
xor edx, edx
cmp edi, 9
setne dl
dec edx
and edx, 4
push edx
push eax
call dword[sym.imp.USER32.dll_ShowWindow]
cmp byte[ebp+4], 0x13
jne case.0x45c7a1.10
mov edi, dword[esp+0x14]
push 0
push ebp
call fcn.00468620
jmp case.0x45c7a1.10
movzx eax, word[esi+0x46]
mov dword[esp+0x18], 0
cmp word[ebx], ax
jne 0x45d14e
add ebx, 2
mov dword[esp+0x18], 1
cmp byte[ebp+4], 0x13
jne 0x45d23a
cmp edi, 0xb
jne 0x45d173
push 0
push 0
push 0
push 1
mov eax, ebx
call fcn.00473730
add esp, 0x10
test eax, eax
jmp 0x45d176
cmp edi, 0xc
jne 0x45d186
push 0
push ebp
mov edi, ebx
call fcn.00468980
mov esi, eax
jmp 0x45d190
mov esi, ebx
call fcn.0040d260
lea esi, [eax-1]
cmp esi, 0xff
ja 0x45d1ee
mov ecx, dword[ebp]
mov edi, dword[sym.imp.USER32.dll_SendMessageW]
push 0
push 0
push 0x130b
push ecx
call edi
cmp dword[esp+0x18], 0
mov ebx, eax
je 0x45d204
mov edx, dword[ebp]
push 0xfffffffffffffff0
push edx
call dword[sym.imp.USER32.dll_GetWindowLongW]
test eax, 0x100
jne 0x45d204
mov eax, dword[ebp]
push 0
push esi
push 0x1330
push eax
call edi
mov ecx, dword[ebp]
push 0
push 0
push 0x130b
push ecx
call edi
cmp eax, esi
je case.0x45c7a1.10
mov ecx, dword[esp+0x210]
push ecx
call fcn.00430510
mov dword[esp+0x2c], eax
jmp case.0x45c7a1.10
mov edx, dword[ebp]
push 0
push esi
push 0x130c
push edx
call edi
cmp eax, 0xffffffff
je 0x45d1ee
cmp ebx, esi
je case.0x45c7a1.10
cmp dword[esp+0x18], 0
mov edi, dword[esp+0x14]
setg al
movzx ecx, al
push ecx
push ebp
call fcn.00468620
jmp case.0x45c7a1.10
cmp word[ebx], ax
jne 0x45d246
add ebx, 2
inc dword[esp+0x18]
cmp edi, 0xb
jne 0x45d269
push 0
push 0
push 0
push 1
mov eax, ebx
call fcn.00473730
add esp, 0x10
test eax, eax
jne 0x45d269
mov dword[esp+0x24], 0xc
mov al, byte[ebp+4]
cmp al, 7
jb 0x45d1ee
cmp al, 8
jbe 0x45d2c8
cmp al, 9
jne 0x45d1ee
mov edx, dword[ebp]
push 0xfffffffffffffff0
push edx
call dword[sym.imp.USER32.dll_GetWindowLongW]
mov edi, dword[esp+0x24]
sub edi, 0xb
test eax, 0x808
je 0x45d2b1
neg edi
sbb edi, edi
and edi, 0xa
add edi, 0x185
mov dword[esp+0x20], 2
jmp 0x45d2e0
neg edi
sbb edi, edi
and edi, 6
add edi, 0x186
mov dword[esp+0x20], 2
jmp 0x45d2e0
xor eax, eax
cmp dword[esp+0x24], 0xb
mov dword[esp+0x20], 9
sete al
lea edi, [eax+0x14d]
cmp dword[esp+0x24], 0xc
jne 0x45d333
mov esi, dword[sym.imp.USER32.dll_SendMessageW]
push ebx
push 0xffffffffffffffff
cmp edi, 0x18f
jne 0x45d321
mov ecx, dword[ebp]
push edi
push ecx
call esi
cmp eax, 0xffffffff
je 0x45d1ee
mov edx, dword[ebp]
push eax
push 1
push 0x185
push edx
call esi
cmp eax, 0xffffffff
je 0x45d1ee
jmp 0x45d386
mov eax, dword[ebp]
push edi
push eax
call esi
cmp eax, 0xffffffff
je 0x45d1ee
jmp 0x45d386
mov esi, ebx
call fcn.0040d260
lea ebx, [eax-1]
cmp ebx, 0xffffffff
jl 0x45d1ee
mov esi, dword[sym.imp.USER32.dll_SendMessageW]
cmp edi, 0x185
jne 0x45d36f
mov edx, dword[ebp]
xor ecx, ecx
test ebx, ebx
setns cl
push ebx
push ecx
push edi
push edx
call esi
cmp eax, 0xffffffff
je 0x45d1ee
jmp 0x45d386
mov eax, dword[ebp]
push 0
push ebx
push edi
push eax
call esi
cmp eax, 0xffffffff
jne 0x45d386
cmp ebx, eax
jne 0x45d1ee
mov edi, dword[esp+0x1c]
mov ebx, dword[esp+0x18]
add edi, 3
test ebx, ebx
jle 0x45d3b2
mov ecx, dword[ebp]
mov eax, dword[esp+0x14]
push ecx
mov ecx, dword[eax+4]
movzx edx, di
or edx, 0x10000
push edx
push 0x111
push ecx
call esi
cmp ebx, 1
jle case.0x45c7a1.10
movzx eax, word[esp+0x20]
mov edx, dword[ebp]
movzx ecx, di
push edx
mov edx, dword[esp+0x18]
shl eax, 0x10
or eax, ecx
push eax
mov eax, dword[edx+4]
push 0x111
push eax
call esi
jmp case.0x45c7a1.10
mov edx, dword[esi+0x50]
mov eax, dword[0x4c8574]
imul edx, edx, 0x94
mov ecx, dword[edx+eax+0x90]
mov edx, dword[ebp]
mov ebx, dword[sym.imp.USER32.dll_SendMessageW]
push 0
push ecx
push 0x30
push edx
call ebx
mov al, byte[ebp+4]
cmp al, 2
je case.0x45d43f.12
cmp al, 0x10
je case.0x45d43f.12
cmp al, 0x11
je case.0x45d43f.12
cmp al, 0x12
je case.0x45d43f.12
cmp al, 0xa
je 0x45d434
mov ecx, dword[esi+0x54]
mov dword[ebp+0x10], ecx
movzx eax, al
add eax, 0xfffffff6
cmp eax, 4
ja case.0x45d43f.12
jmp dword[eax*4+0x45d56c]
mov edx, dword[esi+0x54]
mov eax, dword[ebp]
push edx
push 0
push 0x1024
push eax
call ebx
mov ecx, dword[ebp]
push 1
push 0
push ecx
jmp 0x45cb33
mov ecx, dword[esi+0x54]
mov edx, dword[ebp]
push ecx
push 0
push 0x111e
push edx
call ebx
mov ecx, dword[ebp]
push 1
push 0
push ecx
jmp 0x45cb33
mov eax, dword[esi+0x54]
mov ecx, dword[ebp]
push eax
push 1
push 0x1006
push ecx
call ebx
mov ecx, dword[ebp]
push 1
push 0
push ecx
jmp 0x45cb33
mov edx, dword[esi+0x54]
mov eax, dword[ebp]
push edx
push 1
push 0x100a
push eax
call ebx
mov ecx, dword[ebp]
push 1
push 0
push ecx
jmp 0x45cb33

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f