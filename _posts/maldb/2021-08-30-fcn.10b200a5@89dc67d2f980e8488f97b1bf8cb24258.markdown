---
layout: post
title:  "fcn.10b200a5 @ 89dc67d2f980e8488f97b1bf8cb24258"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.10b200a5
- **Origin (md5):** 89dc67d2f980e8488f97b1bf8cb24258
- **VirusTotal:** [virustotal.com/gui/file/89dc67d2f980e8488f97b1bf8cb24258][virustotal_ref]

# Code Tags
<span class="tag" id="THREAD">THREAD</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [73.80303955078125, 6.488311767578125, '<b><a href="/report/fcn.10b200a5@89dc67d2f980e8488f97b1bf8cb24258">fcn.10b200a5</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>add byte[eax], al<br>jmp 0x10b3e785<br>push ebp<br>xchg dword[esp], ecx<br>mov ecx, dword[esp]<br>push esi<br>xchg dword[esp], ebx<br>mov ebx, dword[esp]<br>pushfd <br>xor ecx, ecx<br>add ecx, dword[esp+4]<br>popfd <br>mov ecx, dword[ecx]<br>mov dword[esp+4], ecx<br>mov ebx, dword[esp+4]<br>mov ecx, 0x677dc045<br>lea ecx, [ecx-0x222417ec]<br>push ecx<br>call fcn.10af0afa<br>jb 0x10098336<br>pop ds<br>sub edi, dword[ebx+0x27b7ae2d]<br>mov ebx, 0x2bfc442f<br>movsb byte<br>mov esp, dword[ecx]<br>mov eax, esi<br>jmp 0x10098356<br>lea esp, [esp+4]<br>pushfd <br>xchg dword[esp+4], eax<br>lea esp, [esp+8]<br>call dword[sym.imp.KERNEL32.dll_GetCurrentThreadId]<br>push esi<br>pushfd <br>mov dword[esp+4], edi<br>popfd <br>push ebx<br>call fcn.10adda28<br>jecxz 0x10adda84<br>pop ebx<br>lea esi, [esi+6]<br>add edx, 0x7dc36084<br>pushfd <br>mov dword[esp], edx<br>push edi<br>call fcn.10b3e187<br>loopne 0x10add9fb<br>lcall 0x8312, 0xda06bb2b<br>mov edx, 0xb028872a<br>retf 0x7a9f<br>adc al, byte[ebx+0x28872aba]<br>mov al, 0xca<br>lahf <br>jp 0x10adda8c<br>mov esi, 0x36488436<br>mov esi, 0x295aaf2a<br>mov ebx, 0x93ebec2a<br>int 0xe2<br>xor eax, 0x7a07be56<br>scasb al, byte<br>sub edi, eax<br>pop eax<br>jmp 0xab789d54<br>xchg ebx, eax<br>xor eax, 0x333b3ae9<br>mov esi, 0xd4973f36<br>movsb byte<br>aas <br>xchg edi, eax<br>aam 0xa4<br>lea esp, [0x7ecccfaa]<br>sbb ebp, ebp<br>in eax, dx<br>mov word[ebx], cs<br>shl dword[ebx+ecx*4-0x490f76dd], 1<br>jnp 0x10adda4c<br>in eax, 0xb2<br>or byte[eax+0x5b7e64d2], al<br>imul ebp, ecx, 0x71e5ab85<br>adc ch, byte[eax]<br>mov ebx, 0x2bfc4436<br>movsb byte<br>imul esi, dword[0x98bdf08d], 0xf4d4e5aa<br>jnp 0x10adda97<br>jb 0x10adda55<br>pop ebx<br>imul esp, dword[ecx+0x68e5a818], 0x1efe82d<br>inc eax<br>xor eax, 0xd50036be<br>rcr dword[ebx-0x2e6fea61], 1<br>lea ebp, [ebp-0x34]<br>sub eax, 0xb2b036bb<br>inc edx<br>fadd qword[esp+edi*8+0x2b]<br>movsb byte<br>mov esp, dword[ebx]<br>mov eax, esi<br>inc ebx<br>pop esp<br>add esp, ebp<br>aam 0xf4<br>jnp 0x10addaca<br>sbb byte[eax-0x17d2971b], ch<br>out dx, eax<br>add dword[eax+0x35], eax<br>mov esi, 0xd1d50036<br>wait <br>lahf <br>adc eax, 0x6d8dd190<br>int3 <br>sub eax, dword[esi-0x7e4496a5]<br>test eax, 0x32b493e5<br>mov esi, 0xce0ae63d<br>lcall 0x3dbd, 0xad97143d<br>sub eax, ecx<br>call fcn.100ff7cb<br>push eax<br>mov eax, dword[esp+0x58]<br>mov dword[esp], eax<br>pop eax<br>push ebx<br>call 0x10b03ac4<br>loope 0x10b03b20<br>lea ebx, [ebx+0x19df2]<br>call ebx<br>jmp 0xcbdb5a8d<br>inc esp<br>xor al, 0xbe<br>or eax, 0xbe343e51<br>sub eax, 0xd27ebb77<br>and edi, dword[edx+0x54]<br>imul ecx, dword[eax-0x362d7ea2], 0xa508d1<br>add byte[eax], al<br>add byte[edi+0x58], dh<br>pop eax<br>xor dword[esp+0x10], eax<br>lea esp, [esp-4]<br>push ecx<br>lea esp, [esp-8]<br>mov dword[esp+0xc], edx<br>lea esp, [esp+8]<br>pop ecx<br>mov edx, dword[esp+8]<br>lea esp, [esp-4]<br>pushfd <br>mov dword[esp+4], edx<br>popfd <br>mov edx, dword[esp+4]<br>mov dword[esp+0xc], edx<br>mov edi, dword[esp+0x18]<br>mov dword[esp+4], edi<br>mov edi, dword[esp+8]<br>push ebp<br>push ecx<br>lea esp, [esp-6]<br>push edx<br>call 0x10b03baf<br>loop 0x10b03c0a<br>lea edx, [edx+0x3fec5]<br>jmp edx<br>pop edx<br>ret 0xdd09<br>popfd <br>mov dword[ecx], ebx<br>pushfd <br>xor eax, eax<br>add eax, dword[esp+0xc]<br>mov ecx, 0x4ea3100d<br>lea ecx, [ecx-0x79c992b6]<br>add eax, ecx<br>mov ecx, 0x5ec41aa0<br>lea ecx, [ecx-0x339d97f3]<br>add eax, ecx<br>popfd <br>mov eax, dword[eax]<br>mov dword[esp], eax<br>mov eax, dword[esp+0x64]<br>mov dword[esp+0xc], eax<br>mov eax, dword[esp]<br>jmp 0x1009a53d<br>push ebx<br>push eax<br>push esi<br>pushfd <br>push ebp<br>push edi<br>jmp fcn.10b42d43<br>lea esp, [esp+4]<br>lea esp, [esp+0xc]<br>jmp 0x10b2de1d<br>cmp dword[esp+0x20], ecx<br>pop ecx<br>pop eax<br>pop edi<br>pop ebx<br>jb 0x10b4c508<br>jmp 0x10b03aac<br>push dword[esp+0x40]<br>push eax<br>mov eax, 0x576f2e27<br>lea eax, [eax-0x29ab0cc2]<br>xchg dword[esp], eax<br>xchg dword[esp], ebx<br>mov ebx, dword[esp]<br>mov ebx, dword[esp]<br>mov dword[esp+0x54], ebx<br>mov ebx, dword[esp]<br>mov dword[esp+0x58], ebx<br>mov ebx, dword[esp]<br>mov dword[esp+0x5c], ebx<br>lea esp, [esp-4]<br>mov ebx, dword[esp+4]<br>push eax<br>push edx<br>call 0x10b2de6b<br>jns 0x10b2dec6<br>lea edx, [edx-0x1be45]<br>call edx<br>jns 0x10b2decf<br>pop dword[esp+8]<br>pop eax<br>pop edx<br>pop ecx<br>shl edi, 3<br>sar ecx, 3<br>push ebx<br>push edi<br>push eax<br>pushfd <br>xor ebx, ebx<br>add ebx, dword[esp+8]<br>add ebx, dword[esp+4]<br>popfd <br>mov dword[esp+8], ebx<br>push ecx<br>mov ecx, dword[esp]<br>jmp 0x10b20339<br>je 0x10b2df19<br>mov eax, dword[esp+4]<br>lea esp, [esp+8]<br>popfd <br>push esi<br>pushfd <br>mov dword[esp+4], eax<br>popfd <br>pushfd <br>xor eax, eax<br>add eax, dword[esp+4]<br>popfd <br>mov eax, dword[eax]<br>mov dword[esp], eax<br>mov eax, dword[esp]<br>push edx<br>call 0x10b2defb<br>jecxz 0x10b2df56<br>lea edx, [edx+0x1ad5]<br>call edx<br>jp 0x10b2df09<br>loopne 0x10b2de93<br>push ss<br>add edx, dword[edi]<br>and bh, bl<br><eoc> ', 'point { fill-color: #e0440e; }'],
[-109.02437591552734, -101.20923614501953, '<b><a href="/report/fcn.10a460bf@89dc67d2f980e8488f97b1bf8cb24258">fcn.10a460bf</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>mov dword[esp], eax<br>mov eax, dword[esp]<br>add dword[esp+4], eax<br>pop eax<br>pop ecx<br>popfd <br>push ecx<br>mov ecx, dword[esp]<br>mov dword[esp+4], ecx<br>mov ecx, dword[esp+4]<br>mov dword[esp], ecx<br>pop dword[esp]<br>push ebp<br>mov ebp, dword[esp+8]<br>mov dword[esp], ebp<br>pop dword[esp+4]<br>push ebx<br>call fcn.10a460bf<br>jmp 0xdf3fee1e<br>pop ebx<br>wait <br>into <br>pop ebx<br>lea ebx, [ebx-0xa1832]<br>call ebx<br>je 0x10a46128<br>pop esi<br>mov esi, ebx<br>lea edi, [eax+0x15]<br>movsd dword<br>push ebx<br>call 0x10a460d7<br>jl 0x10a46133<br>lea ebx, [ebx-0x63bf1]<br>call ebx<br>jbe 0x10a4607e<br>push edx<br>lea esp, [esp-4]<br>mov dword[esp+8], esi<br>lea esp, [esp+4]<br>pop edx<br>mov esi, dword[esp]<br>lea esp, [esp-4]<br>mov dword[esp], esi<br>mov esi, dword[esp]<br>mov dword[esp+4], esi<br>push ebx<br>call 0x10a46117<br>jne 0x10a46173<br>lea ebx, [ebx-0x56fd6]<br>jmp ebx<br>sbb eax, 0xe2ff6316<br>iretd <br>cmc <br>daa <br>mov esi, 0xd5b71d04<br>sal dword[esi], 1<br>test eax, 0x683b696d<br>insb byte<br>shl byte[0xa52aa9], cl<br>add byte[eax], al<br>add byte[ecx-0x73], bh<br>xor al, 0x30<br>pop eax<br>mov dword[esp+4], esi<br>pop esi<br>push dword[ebp+8]<br>call dword[sym.imp.KERNEL32.dll_CreateFileA]<br>push ebx<br>mov ebx, eax<br>mov edi, 0x3bf7da1f<br>lea edi, [edi-0x326453b]<br>mov edi, edi<br>mov edi, ebx<br>sti <br>pop ebx<br><eoc> ', 'null'],
[-33.87253952026367, 189.32872009277344, '<b><a href="/report/fcn.10a5987f@89dc67d2f980e8488f97b1bf8cb24258">fcn.10a5987f</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>ror byte[eax+eax*8+0x547b6963], cl<br>mov dword[0x2356e1e5], eax<br>mov ebx, 0xc900b31a<br>movsb byte<br>in al, 0xed<br>xchg al, dh<br>aam 0x8c<br>lahf <br>in eax, 0x93<br>jns 0x10a5990f<br>rcr byte[edx+0x1b6963d0], cl<br>fild word[edx]<br>in eax, 0xf6<br>popal <br>jecxz 0x10a59898<br>cmp dword[esi+0x2c], ebx<br>mov esi, 0xa5f0d71a<br>test byte[ecx], dh<br>in al, 0x87<br>sal dword[ebp-0x457df8af], 1<br>sbb al, byte[ebp+0xb]<br>cmp ebx, esp<br>std <br>mov ebp, 0xede4a4ce<br>xchg al, dh<br>aam 0x8c<br>lahf <br>in eax, 0x93<br>jns 0x10a59942<br>rcl byte[ebx-0x38], cl<br>arpl word[ecx+0x3a], bp<br>and al, 0xa4<br>in eax, 0xd4<br>fsubr qword[esi+edi*4]<br>aam 0xdc<br>sub al, 0xbe<br>sbb al, 0xba<br>rol ecx, 1<br>lcall 0x7ad5, 0x69dc1f1c<br>lea ecx, [ebx-0x42]<br>sbb al, 0xcd<br>add eax, 0x479d184<br>inc edx<br>lds ebx, [edx+0x2a4f6f1c]<br>mov esi, 0x73af8e1c<br>ror byte[edi-0x3395ff43], cl<br>stosd dword<br>jns 0x10a598d8<br>js 0x10a59908<br>sbb esp, dword[ebp-0x2d865434]<br>imul edi<br>out dx, eax<br>bound ebp, qword[ecx+0x37]<br>jbe 0x10a59988<br>sar dh, cl<br>and al, 0x17<br>movsd dword<br>rol dword[ecx], 1<br>in al, dx<br>fadd st(3), st(0)<br>dec esi<br>call fcn.10a5a1df<br>add byte[eax], al<br>add byte[ebx+0x53], bh<br>xchg edx, eax<br>or byte[eax], al<br>add byte[eax], al<br>add byte[eax], al<br>jnp 0x10a599a5<br>lea esi, [ebp-0x30]<br>mov dword[ebp-0x14], edi<br>call fcn.100038eb<br>mov edi, dword[eax+0x14]<br>push 4<br>push eax<br>mov eax, 0x4efb96ee<br>lea eax, [eax-0x4efb66ee]<br>xchg dword[esp], eax<br>inc edi<br>jmp 0x10a921bf<br>mov dword[esp+8], ecx<br>pop ecx<br>pop dword[esp+8]<br>push edx<br>mov edx, dword[esp]<br>push edx<br>mov dword[esp+4], 0x38a7bea6<br>push eax<br>mov eax, dword[esp+0xc]<br>mov dword[esp], eax<br>pop eax<br>pop edx<br>cmpsd dword[esi], dword<br>cmp byte[eax-0x75], dl<br>test byte[esp+ecx], ah<br>add byte[eax], al<br>add byte[ecx+0x5a582404], cl<br>pushfd <br>lea esp, [esp+0xc]<br>push ebx<br>mov ebx, dword[esp]<br>pushfd <br>call 0x10a599c7<br>jns 0x10a59949<br>add al, 0x24<br>hlt <br>push edi<br>push 0<br>push eax<br>call fcn.10109950<br>add esp, 0xc<br>push ebx<br>push ebx<br>call 0x10a81741<br>js 0x10a8179d<br>lea ebx, [ebx-0x1a43]<br>jmp ebx<br>pop ds<br>mov ebx, 0x73d8dc1c<br>sal byte[ecx+ecx*2+0x61], cl<br>imul edx, dword[edx+0x36efe618], 0x16f08447<br>pop ss<br>mov esi, 0x20240308<br>mov ebx, 0x6a736e08<br>cli <br>out 0x76, eax<br>out 0xea, eax<br>add edi, esi<br>sub al, 0xbe<br>and ch, bl<br>imul ebp, ebp, 0x76e722f0<br>out 0xea, eax<br>push ss<br>pop ss<br>mov esi, 0x251a431f<br>mov ebx, 0x78b2691c<br>sal byte[esi], cl<br>dec ecx<br>popal <br>imul edx, dword[edx+0x36efe618], 0xd8f08447<br>into <br>sub eax, 0xee4d22be<br>and bh, byte[ebx+0x2356e11f]<br>mov ebx, 0xcebdfd22<br>movsb byte<br>jae 0x10a8184b<br>xor eax, 0x47<br>pop es<br>cmpsd dword[esi], dword<br>in eax, 0x75<br>sub al, 0xac<br>retf 0xc871<br>in eax, 0x2d<br>sar dword[ecx-0x2e], 0xef<br>push eax<br>popal <br>imul ebx, dword[edi+0x14], 0x61f6e5a6<br>jecxz 0x10a81843<br>cmp dword[0x8b37be2f], edi<br>cwde <br>mov dword[0x879bf384], eax<br>rol dword[edi], 1<br>mov dh, 5<br>cmp byte[edx+0x3b0b4537], 0xdc<br>mov bl, 0<br>leave <br>movsb byte<br>dec edx<br>cmpsb byte[esi], byte<br>xor al, 0x71<br>and byte[ebp+0x737993e5], 0xd2<br>test al, 0x48<br>popal <br>imul esp, dword[0xd4e5a3c7], 0x1bbe2cdc<br>xor eax, 0x1b9ac2ad<br>push es<br>pop es<br>lodsb al, byte[esi]<br>mov ebp, 0x86a9ef1b<br>rcl edx, 1<br>add al, 0x42<br>lds ebx, [edx+0x30430c1b]<br>mov esi, 0x79abcc1b<br>rol byte[eax+0x2b6961a1], cl<br>mov dword[0x3893d279], eax<br>sbb byte[ebp-0x2e29c907], ah<br>sub ch, bh<br>popal <br>imul edx, dword[eax-0x252d84d8], 0x86a51733<br>pop edx<br>enter 0x31a4, 0xffffffffffffffe4<br>xchg ecx, edx<br>and byte[0x1bbb22fb], bl<br>push eax<br>hlt <br>push edi<br>push 0<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>mov dword[ebp-0x10], eax<br>test eax, eax<br>je fcn.10a77406<br>jmp 0x10a8172d<br><eoc> ', 'null'],
[-216.70008850097656, 81.63105010986328, '<b><a href="/report/fcn.100bd3e5@89dc67d2f980e8488f97b1bf8cb24258">fcn.100bd3e5</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>push eax<br>mov eax, 0x4b716550<br>lea eax, [eax-0x3b5b303c]<br>xchg dword[esp], eax<br>lea ecx, [esp+0x22c]<br>push eax<br>mov eax, 0x53efa30c<br>lea eax, [eax-0x53ef9f0c]<br>xchg dword[esp], eax<br>push ecx<br>push ecx<br>call 0x100bd414<br>jge 0x100bd46e<br>lea ecx, [ecx+0xb219ef]<br>jmp ecx<br>cmp ecx, dword[ebp-0x443a741]<br>or eax, 0xb25d8ce8<br>add byte[ecx-0x7d], bh<br>in al, dx<br>and al, 0x53<br>push ebp<br>mov ebp, dword[esp+0x30]<br>push esi<br>push edi<br>or esi, 0xffffffff<br>push eax<br>mov eax, 0x421bcf37<br>lea eax, [eax-0x32059d3b]<br>xchg dword[esp], eax<br>push eax<br>jmp 0x100c0bb9<br>mov eax, 0x438c0042<br>lea eax, [eax-0x33792646]<br>xchg dword[esp], eax<br>mov eax, dword<br>push eax<br>sub esp, 0xbc<br>mov eax, 0x4a5f00d2<br>lea eax, [eax-0x3a46eaa2]<br>mov eax, dword[eax]<br>xor eax, esp<br>mov dword[esp+0xb8], eax<br>push ebx<br>push ebp<br>push eax<br>call 0x100c0baf<br>jno 0x100c0c08<br>lea eax, [eax+0x89ac]<br>jmp eax<br>mov eax, 0x5610e58e<br>lea eax, [eax-0x45fab382]<br>xchg dword[esp], eax<br>mov dword[esp+0x1c], esi<br>mov dword[esp+0x20], esi<br>mov dword[esp+0x24], esi<br>mov dword[esp+0x28], esi<br>lea edi, [esi+2]<br>mov dword[esp+0x18], 0<br>call dword[sym.imp.KERNEL32.dll_GetModuleHandleA]<br>push eax<br>pushfd <br>call 0x100c0bf1<br>ja 0x100c0b73<br>add al, 0x24<br>and al, 0x70<br>mov dl, 0<br>ret <br>pop ebx<br>pop ebx<br>test eax, eax<br>jne 0x10beb412<br>jmp 0x10be7e28<br>lea edx, [esp+0x2c]<br>push edx<br>push ebx<br>call fcn.100ff9a2<br>add esp, 8<br>les ecx, [eax]<br>push edx<br>call 0x10beb427<br>jb 0x10beb482<br>lea edx, [edx-0xb0a3]<br>jmp edx<br>dec ebp<br>add byte[eax], al<br>pop esi<br>call fcn.100fe24c<br>push edx<br>mov edx, eax<br>mov esi, 0x5a4f746c<br>mov esi, edx<br>pushfd <br>call 0x10beb49c<br>jl 0x10beb41e<br>add al, 0x24<br>dec edx<br>adc byte[eax], al<br>add bl, al<br>jne 0x10beb443<br>add esp, 0x250<br>ret <br><eoc> ', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

add byte[eax], al
jmp 0x10b3e785
push ebp
xchg dword[esp], ecx
mov ecx, dword[esp]
push esi
xchg dword[esp], ebx
mov ebx, dword[esp]
pushfd
xor ecx, ecx
add ecx, dword[esp+4]
popfd
mov ecx, dword[ecx]
mov dword[esp+4], ecx
mov ebx, dword[esp+4]
mov ecx, 0x677dc045
lea ecx, [ecx-0x222417ec]
push ecx
call fcn.10af0afa
jb 0x10098336
pop ds
sub edi, dword[ebx+0x27b7ae2d]
mov ebx, 0x2bfc442f
movsb byte
mov esp, dword[ecx]
mov eax, esi
jmp 0x10098356
lea esp, [esp+4]
pushfd
xchg dword[esp+4], eax
lea esp, [esp+8]
call dword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
push esi
pushfd
mov dword[esp+4], edi
popfd
push ebx
call fcn.10adda28
jecxz 0x10adda84
pop ebx
lea esi, [esi+6]
add edx, 0x7dc36084
pushfd
mov dword[esp], edx
push edi
call fcn.10b3e187
loopne 0x10add9fb
lcall 0x8312, 0xda06bb2b
mov edx, 0xb028872a
retf 0x7a9f
adc al, byte[ebx+0x28872aba]
mov al, 0xca
lahf
jp 0x10adda8c
mov esi, 0x36488436
mov esi, 0x295aaf2a
mov ebx, 0x93ebec2a
int 0xe2
xor eax, 0x7a07be56
scasb al, byte
sub edi, eax
pop eax
jmp 0xab789d54
xchg ebx, eax
xor eax, 0x333b3ae9
mov esi, 0xd4973f36
movsb byte
aas
xchg edi, eax
aam 0xa4
lea esp, [0x7ecccfaa]
sbb ebp, ebp
in eax, dx
mov word[ebx], cs
shl dword[ebx+ecx*4-0x490f76dd], 1
jnp 0x10adda4c
in eax, 0xb2
or byte[eax+0x5b7e64d2], al
imul ebp, ecx, 0x71e5ab85
adc ch, byte[eax]
mov ebx, 0x2bfc4436
movsb byte
imul esi, dword[0x98bdf08d], 0xf4d4e5aa
jnp 0x10adda97
jb 0x10adda55
pop ebx
imul esp, dword[ecx+0x68e5a818], 0x1efe82d
inc eax
xor eax, 0xd50036be
rcr dword[ebx-0x2e6fea61], 1
lea ebp, [ebp-0x34]
sub eax, 0xb2b036bb
inc edx
fadd qword[esp+edi*8+0x2b]
movsb byte
mov esp, dword[ebx]
mov eax, esi
inc ebx
pop esp
add esp, ebp
aam 0xf4
jnp 0x10addaca
sbb byte[eax-0x17d2971b], ch
out dx, eax
add dword[eax+0x35], eax
mov esi, 0xd1d50036
wait
lahf
adc eax, 0x6d8dd190
int3
sub eax, dword[esi-0x7e4496a5]
test eax, 0x32b493e5
mov esi, 0xce0ae63d
lcall 0x3dbd, 0xad97143d
sub eax, ecx
call fcn.100ff7cb
push eax
mov eax, dword[esp+0x58]
mov dword[esp], eax
pop eax
push ebx
call 0x10b03ac4
loope 0x10b03b20
lea ebx, [ebx+0x19df2]
call ebx
jmp 0xcbdb5a8d
inc esp
xor al, 0xbe
or eax, 0xbe343e51
sub eax, 0xd27ebb77
and edi, dword[edx+0x54]
imul ecx, dword[eax-0x362d7ea2], 0xa508d1
add byte[eax], al
add byte[edi+0x58], dh
pop eax
xor dword[esp+0x10], eax
lea esp, [esp-4]
push ecx
lea esp, [esp-8]
mov dword[esp+0xc], edx
lea esp, [esp+8]
pop ecx
mov edx, dword[esp+8]
lea esp, [esp-4]
pushfd
mov dword[esp+4], edx
popfd
mov edx, dword[esp+4]
mov dword[esp+0xc], edx
mov edi, dword[esp+0x18]
mov dword[esp+4], edi
mov edi, dword[esp+8]
push ebp
push ecx
lea esp, [esp-6]
push edx
call 0x10b03baf
loop 0x10b03c0a
lea edx, [edx+0x3fec5]
jmp edx
pop edx
ret 0xdd09
popfd
mov dword[ecx], ebx
pushfd
xor eax, eax
add eax, dword[esp+0xc]
mov ecx, 0x4ea3100d
lea ecx, [ecx-0x79c992b6]
add eax, ecx
mov ecx, 0x5ec41aa0
lea ecx, [ecx-0x339d97f3]
add eax, ecx
popfd
mov eax, dword[eax]
mov dword[esp], eax
mov eax, dword[esp+0x64]
mov dword[esp+0xc], eax
mov eax, dword[esp]
jmp 0x1009a53d
push ebx
push eax
push esi
pushfd
push ebp
push edi
jmp fcn.10b42d43
lea esp, [esp+4]
lea esp, [esp+0xc]
jmp 0x10b2de1d
cmp dword[esp+0x20], ecx
pop ecx
pop eax
pop edi
pop ebx
jb 0x10b4c508
jmp 0x10b03aac
push dword[esp+0x40]
push eax
mov eax, 0x576f2e27
lea eax, [eax-0x29ab0cc2]
xchg dword[esp], eax
xchg dword[esp], ebx
mov ebx, dword[esp]
mov ebx, dword[esp]
mov dword[esp+0x54], ebx
mov ebx, dword[esp]
mov dword[esp+0x58], ebx
mov ebx, dword[esp]
mov dword[esp+0x5c], ebx
lea esp, [esp-4]
mov ebx, dword[esp+4]
push eax
push edx
call 0x10b2de6b
jns 0x10b2dec6
lea edx, [edx-0x1be45]
call edx
jns 0x10b2decf
pop dword[esp+8]
pop eax
pop edx
pop ecx
shl edi, 3
sar ecx, 3
push ebx
push edi
push eax
pushfd
xor ebx, ebx
add ebx, dword[esp+8]
add ebx, dword[esp+4]
popfd
mov dword[esp+8], ebx
push ecx
mov ecx, dword[esp]
jmp 0x10b20339
je 0x10b2df19
mov eax, dword[esp+4]
lea esp, [esp+8]
popfd
push esi
pushfd
mov dword[esp+4], eax
popfd
pushfd
xor eax, eax
add eax, dword[esp+4]
popfd
mov eax, dword[eax]
mov dword[esp], eax
mov eax, dword[esp]
push edx
call 0x10b2defb
jecxz 0x10b2df56
lea edx, [edx+0x1ad5]
call edx
jp 0x10b2df09
loopne 0x10b2de93
push ss
add edx, dword[edi]
and bh, bl

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/89dc67d2f980e8488f97b1bf8cb24258