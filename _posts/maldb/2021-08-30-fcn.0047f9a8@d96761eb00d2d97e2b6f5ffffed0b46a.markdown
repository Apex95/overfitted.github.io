---
layout: post
title:  "fcn.0047f9a8 @ d96761eb00d2d97e2b6f5ffffed0b46a"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0047f9a8
- **Origin (md5):** d96761eb00d2d97e2b6f5ffffed0b46a
- **VirusTotal:** [virustotal.com/gui/file/d96761eb00d2d97e2b6f5ffffed0b46a][virustotal_ref]

# Code Tags
<span class="tag" id="PROCESS">PROCESS</span>


# Behaviour Tags
<span class="bhv-tag" id="CREATES_SOCKET_LISTENER">CREATES_SOCKET_LISTENER / 0.00043122149511465335</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.0047f9a8@d96761eb00d2d97e2b6f5ffffed0b46a">fcn.0047f9a8</a><br>@d96761eb00d2d97e2b6f5ffffed0b46a</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
and esp, 0xfffffff8
sub esp, 0xac
push ebx
push esi
push edi
push 0x44
pop esi
push esi
xor ebx, ebx
lea eax, [esp+0x74]
mov edi, ecx
push ebx
push eax
mov dword[esp+0x3c], edi
call fcn.00423020
xor eax, eax
mov dword[esp+0x7c], esi
inc eax
mov dword[esp+0x20], ebx
mov dword[esp+0xa8], eax
add esp, 0xc
mov word[esp+0xa0], ax
mov esi, ebx
mov al, byte[ebp+0xc]
mov dword[esp+0x18], ebx
mov dword[esp+0x10], ebx
mov dword[esp+0x2c], ebx
mov dword[esp+0x28], ebx
mov dword[esp+0x20], ebx
mov ebx, dword[ebp+0x10]
test al, al
je 0x47fa35
mov eax, dword[ebx+4]
mov ecx, dword[eax+0xc]
call fcn.00409c9c
cmp dword[ebx+8], 7
mov dword[esp+0x2c], eax
jbe 0x47fa6b
mov eax, dword[ebx+4]
mov ecx, dword[eax+0x1c]
call fcn.00409c9c
mov esi, eax
mov eax, dword[ebx+4]
mov ecx, dword[eax+0x1c]
jmp 0x47fa4e
cmp dword[ebx+8], 3
jbe 0x47fa80
mov eax, dword[ebx+4]
mov ecx, dword[eax+0xc]
call fcn.00409c9c
mov esi, eax
mov eax, dword[ebx+4]
mov ecx, dword[eax+0xc]
and esi, 0xffff0000
call fcn.00409c9c
and eax, 0xffff
mov dword[esp+0x28], eax
mov al, byte[ebp+0xc]
test al, al
je 0x47fa80
jmp 0x47fa6e
mov al, byte[ebp+0xc]
cmp dword[ebx+8], 6
jbe 0x47fa7c
mov eax, dword[ebx+4]
mov ecx, dword[eax+0x18]
jmp 0x47fa8e
test al, al
jne 0x47fa9b
push 2
pop eax
cmp dword[ebx+8], eax
jbe 0x47fa9b
mov eax, dword[ebx+4]
mov ecx, dword[eax+8]
call fcn.00409c9c
mov word[esp+0xa0], ax
test esi, 0x10000
je 0x47faab
mov dword[esp+0x20], 0x10
mov eax, dword[ebx+4]
mov esi, dword[eax]
mov ecx, esi
call fcn.00409997
mov eax, dword[esi+8]
mov ecx, dword[eax]
call fcn.0041fec6
cmp byte[ebp+0xc], 0
je 0x47fb84
mov ecx, dword[ebx+4]
mov dword[esp+0x14], eax
mov esi, dword[ecx+4]
mov ecx, esi
call fcn.00409997
mov ecx, dword[esi+8]
mov ecx, dword[ecx]
call fcn.0041fec6
mov ecx, dword[ebx+4]
mov dword[esp+0x18], eax
mov esi, dword[ecx+8]
mov ecx, esi
call fcn.00409997
mov ecx, dword[esi+8]
mov ecx, dword[ecx]
call fcn.0041fec6
mov ecx, dword[ebx+4]
mov dword[esp+0x10], eax
mov esi, dword[ecx+0x10]
mov ecx, esi
call fcn.00409997
mov ecx, dword[esi+8]
mov ecx, dword[ecx]
call fcn.0041fec6
cmp dword[ebx+8], 5
mov dword[esp+0x1c], eax
jbe 0x47fb52
mov ecx, dword[ebx+4]
mov esi, dword[ecx+0x14]
mov ecx, esi
call fcn.00409997
mov ecx, dword[esi+8]
mov ecx, dword[ecx]
call fcn.0041fec6
mov esi, eax
test esi, esi
je 0x47fb52
push esi
call fcn.00422e3c
pop ecx
test eax, eax
jne 0x47fbec
mov edi, dword[sym.imp.KERNEL32.dll_GetSystemDirectoryW]
push 0
push 0
call edi
mov esi, eax
xor ecx, ecx
push 2
pop edx
lea eax, [esi+1]
mul edx
seto cl
neg ecx
or ecx, eax
push ecx
call fcn.00420ff6
pop ecx
push esi
mov esi, eax
mov dword[esp+0x28], eax
push esi
call edi
jmp 0x47fbe8
cmp dword[ebx+8], 1
mov dword[esp+0x1c], eax
jbe 0x47fbb6
mov eax, dword[ebx+4]
mov esi, dword[eax+4]
mov ecx, esi
call fcn.00409997
mov eax, dword[esi+8]
mov ecx, dword[eax]
call fcn.0041fec6
mov esi, eax
test esi, esi
je 0x47fbb6
push esi
call fcn.00422e3c
pop ecx
test eax, eax
jne 0x47fc21
mov edi, dword[sym.imp.KERNEL32.dll_GetCurrentDirectoryW]
push 0
push 0
call edi
mov esi, eax
xor ecx, ecx
push 2
pop edx
lea eax, [esi+1]
mul edx
seto cl
neg ecx
or ecx, eax
push ecx
call fcn.00420ff6
pop ecx
push eax
push esi
mov dword[esp+0x2c], eax
call edi
mov esi, dword[esp+0x24]
mov edi, dword[esp+0x30]
cmp byte[ebp+0xc], 0
je 0x47fc21
mov ecx, dword[ebx+4]
push 0x48f910
mov ecx, dword[ecx]
call fcn.00409bf8
mov ecx, dword[ebx+4]
push 0x48f910
mov ecx, dword[ecx+4]
call fcn.00409bf8
mov ecx, dword[ebx+4]
push 0x48f910
mov ecx, dword[ecx+8]
call fcn.00409bf8
mov edx, dword[esp+0x28]
lea ecx, [esp+0x48]
push edx
call fcn.00466c7c
test edx, edx
je 0x47fc8d
call fcn.00467339
cmp eax, 0xffffffff
mov dword[esp+0xac], eax
lea ecx, [esp+0x48]
sete bl
dec bl
and bl, 1
call fcn.00467248
cmp eax, 0xffffffff
mov dword[esp+0xb0], eax
lea ecx, [esp+0x48]
sete bh
dec bh
and bh, bl
call fcn.004672c1
cmp eax, 0xffffffff
mov dword[esp+0xa8], eax
sete bl
dec bl
and bl, bh
je 0x47fc8f
or dword[esp+0x9c], 0x100
jmp 0x47fc8f
xor bl, bl
cmp byte[ebp+0xc], 0
je 0x47fd3f
call fcn.0045881d
test al, al
lea eax, [esp+0x38]
push eax
lea eax, [esp+0x74]
push eax
push esi
push dword[esp+0x2c]
push dword[esp+0x2c]
push ecx
push dword[esp+0x44]
push dword[esp+0x2c]
push dword[esp+0x38]
push dword[esp+0x38]
je 0x47fccd
call fcn.00458858
jmp 0x47fcd2
call fcn.00458af9
push dword[esp+0x14]
mov bh, al
call fcn.00422e3c
pop ecx
mov ecx, dword[esp+0x14]
test eax, eax
je 0x47fced
mov byte[ecx], 0
inc ecx
dec eax
jne 0x47fce6
push dword[esp+0x18]
call fcn.00422e3c
pop ecx
mov ecx, dword[esp+0x18]
test eax, eax
je 0x47fd06
mov byte[ecx], 0
inc ecx
dec eax
jne 0x47fcff
push dword[esp+0x10]
call fcn.00422e3c
pop ecx
mov ecx, dword[esp+0x10]
test eax, eax
je 0x47fd1f
mov byte[ecx], 0
inc ecx
dec eax
jne 0x47fd18
push dword[esp+0x14]
call fcn.0042106c
pop ecx
push dword[esp+0x18]
call fcn.0042106c
pop ecx
push dword[esp+0x10]
call fcn.0042106c
pop ecx
jmp 0x47fd69
lea eax, [esp+0x38]
push eax
lea eax, [esp+0x74]
push eax
push esi
push 0
push dword[esp+0x30]
movzx eax, bl
push eax
push 0
push 0
push dword[esp+0x3c]
push 0
call dword[sym.imp.KERNEL32.dll_CreateProcessW]
test eax, eax
setne bh
push dword[esp+0x1c]
call fcn.0042106c
pop ecx
push esi
call fcn.0042106c
pop ecx
test bh, bh
jne 0x47fdbb
mov eax, dword[edi]
xor ebx, ebx
push ebx
push 1
mov ecx, dword[eax+4]
add ecx, edi
call fcn.00456aa3
push ebx
call dword[sym.imp.KERNEL32.dll_GetLastError]
push eax
mov eax, dword[edi]
mov ecx, dword[eax+4]
add ecx, edi
call fcn.0041ff61
mov esi, dword[ebp+0x14]
mov ecx, esi
call fcn.00409a20
mov dword[esi+0xc], 1
mov dword[esi], ebx
jmp 0x47fe3c
push dword[esp+0x3c]
call dword[sym.imp.KERNEL32.dll_CloseHandle]
test bl, bl
je 0x47fdf3
lea ecx, [esp+0x48]
call fcn.00466eec
mov eax, dword[esp+0x40]
lea ecx, [esp+0x48]
mov dword[esp+0x4c], eax
call fcn.00467534
lea eax, [esp+0x48]
push eax
lea ecx, [edi+0x45c]
call fcn.0047fe8a
cmp byte[ebp+8], 0
je 0x47fe05
mov eax, dword[esp+0x38]
mov dword[edi+0x444], eax
jmp 0x47fe3c
mov eax, dword[esp+0x40]
fild dword[esp+0x40]
test eax, eax
jns 0x47fe17
fadd qword[0x4bbac8]
mov esi, dword[ebp+0x14]
mov ecx, esi
fstp qword[esp+0x30]
call fcn.00409a20
fld qword[esp+0x30]
push dword[esp+0x38]
fstp qword[esi]
mov dword[esi+0xc], 3
call dword[sym.imp.KERNEL32.dll_CloseHandle]
lea ecx, [esp+0x48]
call fcn.00466d16
pop edi
pop esi
xor eax, eax
pop ebx
mov esp, ebp
pop ebp
ret 0x10

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/d96761eb00d2d97e2b6f5ffffed0b46a