---
layout: post
title:  "fcn.00455f70 @ 3e981d1767f44f5fe2446a49ffe52f4e"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00455f70
- **Origin (md5):** 3e981d1767f44f5fe2446a49ffe52f4e
- **VirusTotal:** [virustotal.com/gui/file/3e981d1767f44f5fe2446a49ffe52f4e][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.00455f70@3e981d1767f44f5fe2446a49ffe52f4e">fcn.00455f70</a><br>@3e981d1767f44f5fe2446a49ffe52f4e</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push 0xffffffffffffffff
push 0x4c2488
mov eax, dword
push eax
mov dword
sub esp, 0x44
push ebx
push ebp
push esi
mov esi, ecx
push edi
mov eax, dword[esi+0x1c]
push eax
call dword[sym.imp.USER32.dll_GetDC]
mov edi, eax
mov dword[esp+0x3c], edi
call fcn.0043ce90
push eax
push edi
call dword[sym.imp.GDI32.dll_SetStretchBltMode]
mov ebp, dword[sym.imp.GDI32.dll_CreateCompatibleDC]
push edi
call ebp
push edi
mov ebx, eax
call ebp
mov ebp, eax
mov dword[esi+0xa4], edi
mov dword[esp+0x10], ebp
mov dword[esp+0x18], 0
mov eax, dword[esi+0xc4]
test eax, eax
je off.b113
mov eax, dword[esi+0xc4]
test eax, eax
jne off.b103
mov dword[esi+0xc4], 1
mov eax, dword[esi+0xc0]
test eax, eax
jne off.b313
mov ecx, dword[esi+0xd8]
mov edx, dword[esi+0xd4]
push ecx
push edx
push edi
call dword[sym.imp.GDI32.dll_CreateCompatibleBitmap]
push eax
push ebp
mov ebp, dword[sym.imp.GDI32.dll_SelectObject]
mov dword[esi+0xc0], eax
call ebp
mov dword[esp+0x1c], eax
mov eax, dword[esi+0xdc]
push eax
lea ecx, [esp+0x50]
call fcn.004ba9e3
mov edx, dword[esp+0x50]
mov ecx, dword[esp+0x10]
lea eax, [esp+0x4c]
neg eax
sbb eax, eax
and eax, edx
push eax
push ecx
call ebp
mov edx, dword[esi+0xd8]
mov ecx, dword[esp+0x10]
mov dword[esp+0x2c], eax
mov eax, dword[esi+0xd4]
push 0xf00021
push edx
push eax
push 0
push 0
push ecx
call dword[sym.imp.GDI32.dll_PatBlt]
mov edx, dword[esp+0x2c]
mov eax, dword[esp+0x10]
push edx
push eax
call ebp
mov ecx, dword[esp+0x1c]
mov edx, dword[esp+0x10]
push ecx
push edx
call ebp
mov dword[esp+0x4c], 0x4d6ac8
lea ecx, [esp+0x4c]
mov dword[esp+0x5c], 0
call fcn.004ba97d
mov dword[esp+0x5c], 0xffffffff
jmp off.b319
mov ebp, dword[sym.imp.GDI32.dll_SelectObject]
mov dword[esi+0xc4], 0
mov dword[esi+0x84], 4
mov eax, dword[esi+0xbc]
cmp eax, 1
je off.b1353
call dword[sym.imp.KERNEL32.dll_GetTickCount]
mov dword[esp+0x48], eax
mov dword[esp+0x2c], eax
mov eax, dword[esi+0xc4]
test eax, eax
je off.b388
mov eax, dword[esi+0xc4]
test eax, eax
jne off.b378
mov dword[esi+0xc4], 1
mov eax, dword[esi+0xc0]
mov ecx, dword[esp+0x10]
push eax
push ecx
call ebp
mov dword[esp+0x1c], eax
mov eax, dword[esi+0x84]
cmp eax, 8
je off.b432
cmp eax, 0xc
jne off.b508
mov edx, dword[esp+0x18]
push edx
push ebx
call ebp
mov ecx, dword[esi+0x54]
mov edx, dword[esi+0x5c]
push 0xcc0020
mov dword[esp+0x18], eax
mov eax, dword[esi+0x58]
push 0
push 0
push ebx
push eax
mov eax, dword[esi+0x60]
push ecx
mov ecx, dword[esp+0x28]
push edx
push eax
push ecx
call dword[sym.imp.GDI32.dll_BitBlt]
mov edx, dword[esp+0x14]
push edx
push ebx
call ebp
mov eax, dword[esp+0x18]
push eax
call dword[sym.imp.GDI32.dll_DeleteObject]
mov dword[esp+0x18], 0
mov ecx, esi
mov dword[esi+0x84], 0
call fcn.00456750
test eax, eax
mov dword[esp+0x20], eax
je off.b1058
mov ecx, dword[esi+0x84]
cmp ecx, 8
je off.b553
cmp ecx, 0xc
jne off.b629
mov ecx, dword[esi+0x58]
mov edx, dword[esi+0x54]
push ecx
push edx
push edi
call dword[sym.imp.GDI32.dll_CreateCompatibleBitmap]
push eax
push ebx
mov dword[esp+0x20], eax
call ebp
mov ecx, dword[esi+0x60]
mov edx, dword[esp+0x10]
mov dword[esp+0x14], eax
mov eax, dword[esi+0x5c]
push 0xcc0020
push eax
mov eax, dword[esi+0x58]
push ecx
mov ecx, dword[esi+0x54]
push edx
push eax
push ecx
push 0
push 0
push ebx
call dword[sym.imp.GDI32.dll_BitBlt]
mov edx, dword[esp+0x14]
push edx
push ebx
call ebp
mov eax, dword[esp+0x20]
push eax
push ebx
call ebp
mov dword[esp+0x14], eax
mov eax, dword[esi+0x88]
test eax, eax
je off.b1002
push edi
call dword[sym.imp.GDI32.dll_CreateCompatibleDC]
push edi
mov ebp, eax
call dword[sym.imp.GDI32.dll_CreateCompatibleDC]
mov ecx, dword[esi+0x54]
mov edi, eax
mov eax, dword[esi+0x58]
push 0
push 1
push 1
push eax
push ecx
call dword[sym.imp.GDI32.dll_CreateBitmap]
mov edx, dword[esi+0x58]
push 0
mov dword[esp+0x34], eax
mov eax, dword[esi+0x54]
push 1
push 1
push edx
push eax
call dword[sym.imp.GDI32.dll_CreateBitmap]
mov ecx, dword[esp+0x30]
mov dword[esp+0x34], eax
push ecx
push ebp
call dword[sym.imp.GDI32.dll_SelectObject]
mov edx, dword[esp+0x34]
mov dword[esp+0x30], eax
push edx
push edi
call dword[sym.imp.GDI32.dll_SelectObject]
mov dword[esp+0x38], eax
mov eax, dword[esi+0xa0]
push eax
push ebx
call dword[sym.imp.GDI32.dll_SetBkColor]
mov ecx, dword[esi+0x58]
mov edx, dword[esi+0x54]
push 0xcc0020
push 0
push 0
push ebx
push ecx
push edx
push 0
push 0
push edi
mov dword[esp+0x58], eax
call dword[sym.imp.GDI32.dll_BitBlt]
mov eax, dword[esp+0x34]
push eax
push ebx
call dword[sym.imp.GDI32.dll_SetBkColor]
mov ecx, dword[esi+0x58]
mov edx, dword[esi+0x54]
push 0x330008
push 0
push 0
push edi
push ecx
push edx
push 0
push 0
push ebp
call dword[sym.imp.GDI32.dll_BitBlt]
mov eax, dword[esi+0x58]
mov ecx, dword[esi+0x54]
mov edx, dword[esi+0x5c]
push 0x8800c6
push 0
push 0
push edi
push eax
mov eax, dword[esi+0x60]
push ecx
mov ecx, dword[esp+0x28]
push edx
push eax
push ecx
call dword[sym.imp.GDI32.dll_BitBlt]
mov edx, dword[esi+0x58]
mov eax, dword[esi+0x54]
push 0x8800c6
push 0
push 0
push ebp
push edx
push eax
push 0
push 0
push ebx
call dword[sym.imp.GDI32.dll_BitBlt]
mov ecx, dword[esi+0x58]
mov edx, dword[esi+0x54]
mov eax, dword[esi+0x5c]
push 0xee0086
push 0
push 0
push ebx
push ecx
mov ecx, dword[esi+0x60]
push edx
mov edx, dword[esp+0x28]
push eax
push ecx
push edx
call dword[sym.imp.GDI32.dll_BitBlt]
mov eax, dword[esp+0x30]
push eax
push ebp
call dword[sym.imp.GDI32.dll_SelectObject]
push eax
call dword[sym.imp.GDI32.dll_DeleteObject]
mov ecx, dword[esp+0x38]
push ecx
push edi
call dword[sym.imp.GDI32.dll_SelectObject]
push eax
call dword[sym.imp.GDI32.dll_DeleteObject]
push ebp
mov ebp, dword[sym.imp.GDI32.dll_DeleteDC]
call ebp
push edi
call ebp
mov edi, dword[esp+0x3c]
mov ebp, dword[sym.imp.GDI32.dll_SelectObject]
jmp off.b1039
mov edx, dword[esi+0x58]
mov eax, dword[esi+0x54]
mov ecx, dword[esi+0x5c]
push 0xcc0020
push 0
push 0
push ebx
push edx
mov edx, dword[esi+0x60]
push eax
mov eax, dword[esp+0x28]
push ecx
push edx
push eax
call dword[sym.imp.GDI32.dll_BitBlt]
mov ecx, dword[esp+0x14]
push ecx
push ebx
call ebp
mov edx, dword[esp+0x20]
push edx
call dword[sym.imp.GDI32.dll_DeleteObject]
mov eax, dword[esi+0x1c]
push eax
call dword[sym.imp.USER32.dll_IsWindow]
test eax, eax
je off.b1210
lea ecx, [esp+0x40]
lea edx, [esp+0x44]
push ecx
lea eax, [esp+0x28]
push edx
lea ecx, [esp+0x30]
push eax
push ecx
mov ecx, esi
call fcn.00455ab0
mov eax, dword[esi+0xd0]
push 0xcc0020
test eax, eax
je off.b1170
mov edx, dword[esi+0xd8]
mov eax, dword[esi+0xd4]
mov ecx, dword[esp+0x14]
push edx
mov edx, dword[esp+0x48]
push eax
mov eax, dword[esp+0x50]
push 0
push 0
push ecx
mov ecx, dword[esp+0x3c]
push edx
mov edx, dword[esp+0x44]
push eax
push ecx
push edx
push edi
call dword[sym.imp.GDI32.dll_StretchBlt]
jmp off.b1210
mov eax, dword[esp+0x14]
mov ecx, dword[esi+0xd8]
mov edx, dword[esi+0xd4]
push 0
push 0
push eax
mov eax, dword[esp+0x34]
push ecx
mov ecx, dword[esp+0x3c]
push edx
push eax
push ecx
push edi
call dword[sym.imp.GDI32.dll_BitBlt]
mov edx, dword[esp+0x1c]
mov eax, dword[esp+0x10]
push edx
push eax
call ebp
mov dword[esi+0xc4], 0
mov eax, dword[esi+0x90]
test eax, eax
je off.b1253
lea ecx, [eax+eax*4]
shl ecx, 1
mov dword[esp+0x1c], ecx
jmp off.b1263
mov ecx, dword[esi+0x9c]
mov dword[esp+0x1c], ecx
mov eax, dword[esi+0xbc]
cmp eax, 1
je off.b1338
jmp off.b1280
mov ecx, dword[esp+0x1c]
mov eax, dword[esp+0x2c]
mov edx, dword[esp+0x48]
sub eax, edx
cmp ecx, eax
jbe off.b1323
push 0xa
call dword[sym.imp.KERNEL32.dll_Sleep]
call dword[sym.imp.KERNEL32.dll_GetTickCount]
mov dword[esp+0x2c], eax
mov eax, dword[esi+0xbc]
cmp eax, 1
jne off.b1276
mov eax, dword[esi+0xbc]
cmp eax, 1
jne off.b354
mov eax, dword[esp+0x18]
test eax, eax
je off.b1353
push eax
call dword[sym.imp.GDI32.dll_DeleteObject]
push ebx
mov ebx, dword[sym.imp.GDI32.dll_DeleteDC]
call ebx
mov edx, dword[esp+0x10]
push edx
call ebx
mov eax, dword[esi+0x1c]
push edi
push eax
call dword[sym.imp.USER32.dll_ReleaseDC]
mov dword[esi+0xbc], 2
mov ecx, dword[esp+0x54]
pop edi
pop esi
pop ebp
mov eax, 1
pop ebx
mov dword
add esp, 0x50
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/3e981d1767f44f5fe2446a49ffe52f4e