---
layout: post
title:  "fcn.0043efd7 @ e16f74a2849182d98050864255e902f8"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0043efd7
- **Origin (md5):** e16f74a2849182d98050864255e902f8
- **VirusTotal:** [virustotal.com/gui/file/e16f74a2849182d98050864255e902f8][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.0043efd7@e16f74a2849182d98050864255e902f8">fcn.0043efd7</a><br>@e16f74a2849182d98050864255e902f8</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push 0xa4
mov eax, 0x4510eb
call fcn.0044cc59
fld qword[0x4708c8]
mov eax, dword[ebp+8]
fstp qword[ebp-0x60]
xor esi, esi
fld qword[0x470930]
push esi
fstp qword[ebp-0x60]
push 0x80
fld qword[0x470928]
push 3
fstp qword[ebp-0x60]
push esi
fld qword[0x470960]
push 1
fstp qword[ebp-0x60]
mov dword[ebp-0x84], eax
fld qword[ebp-0x60]
mov eax, dword[ebp+0xc]
fsub qword[0x470920]
push 0x80000000
push eax
mov byte[ebp-0x51], 0
fstp qword[ebp-0x60]
call dword[sym.imp.KERNEL32.dll_CreateFileW]
push 0x48
mov dword[ebp-0x90], eax
pop ebx
cmp eax, 0xffffffff
je off.b999
push eax
call fcn.0043c66e
mov dword[ebp-0x94], eax
cmp eax, esi
je off.b988
push eax
call fcn.0043c650
fld qword[0x4708c8]
fstp qword[ebp-0x60]
mov dword[ebp-0x64], eax
fld qword[0x470930]
fstp qword[ebp-0x60]
fld qword[0x470928]
fstp qword[ebp-0x60]
fld qword[0x470960]
fstp qword[ebp-0x60]
fld qword[ebp-0x60]
fsub qword[0x470920]
fstp qword[ebp-0x60]
cmp eax, esi
je off.b988
xor eax, eax
push 6
pop ecx
mov dword[ebp-0xb0], esi
push 0x28
lea edi, [ebp-0xac]
rep stosd
mov dword[ebp-0x4c], ebx
mov eax, dword[ebp-0x4c]
shl eax, 6
cdq
pop ecx
idiv ecx
mov ecx, dword[ebp-0x4c]
push 0xffffffffffffff9f
sub eax, ecx
mov ecx, dword[ebp-0x4c]
lea eax, [eax+ecx-0x51]
add eax, dword[ebp-0x4c]
add eax, dword[ebp-0x4c]
mov dword[ebp-0x4c], eax
mov eax, dword[ebp-0x4c]
mov ecx, dword[ebp-0x4c]
sub eax, ecx
add eax, dword[ebp-0x4c]
mov dword[ebp-0x4c], eax
add dword[ebp-0x4c], 0x54
mov eax, dword[ebp-0x4c]
mov ecx, dword[ebp-0x4c]
imul eax, ecx
pop ecx
sub ecx, eax
mov eax, dword[ebp-0x4c]
sub ecx, eax
add ecx, dword[ebp-0x4c]
push 0xffffffffffffffb8
mov dword[ebp-0x4c], ecx
add dword[ebp-0x4c], 0xfffffffe
mov eax, dword[ebp-0x4c]
mov ecx, dword[ebp-0x4c]
imul eax, ecx
mov ecx, dword[ebp-0x4c]
imul eax, eax, 0x18
imul ecx, ecx, 0x56
sub eax, ecx
add eax, dword[ebp-0x4c]
pop ecx
add eax, dword[ebp-0x4c]
push 0x38
add eax, dword[ebp-0x4c]
mov dword[ebp-0x4c], eax
mov eax, dword[ebp-0x4c]
sub ecx, eax
add ecx, dword[ebp-0x4c]
add ecx, dword[ebp-0x4c]
mov dword[ebp-0x4c], ecx
mov eax, dword[ebp-0x4c]
cdq
pop ecx
idiv ecx
mov ecx, dword[ebp-0x4c]
imul ecx, ecx, 0xffffffd4
sub ecx, eax
mov eax, dword[ebp-0x4c]
shl eax, 5
add ecx, eax
mov eax, dword[ebp-0x4c]
sub ecx, eax
add ecx, dword[ebp-0x4c]
lea eax, [ebp-0xb0]
add ecx, dword[ebp-0x4c]
push eax
push dword[ebp-0x64]
mov dword[ebp-0x4c], ecx
call fcn.0043c636
test eax, eax
je off.b905
push dword[0x4771c0]
lea eax, [ebp-0x48]
call fcn.004045d8
lea eax, [ebp-0x48]
mov dword[ebp-4], esi
push eax
lea esi, [ebp-0x2c]
call fcn.0040264a
mov byte[ebp-4], 1
cmp dword[ebp-0x18], 0x10
mov ecx, dword[ebp-0x2c]
mov eax, ecx
jae off.b466
mov eax, esi
inc eax
cmp dword[ebp-0x18], 0x10
jae off.b476
lea ecx, [ebp-0x2c]
test eax, eax
je off.b482
sub eax, ecx
push 0x2f
mov edi, eax
lea esi, [ebp-0x2c]
call fcn.00403b94
mov dword[ebp-0x4c], ebx
mov eax, dword[ebp-0x4c]
shl eax, 6
cdq
push 0x28
pop ecx
idiv ecx
mov ecx, dword[ebp-0x4c]
push 0xffffffffffffff9f
mov edi, dword[ebp-0x64]
sub eax, ecx
mov ecx, dword[ebp-0x4c]
lea eax, [eax+ecx-0x51]
add eax, dword[ebp-0x4c]
add eax, dword[ebp-0x4c]
mov dword[ebp-0x4c], eax
mov eax, dword[ebp-0x4c]
mov ecx, dword[ebp-0x4c]
sub eax, ecx
add eax, dword[ebp-0x4c]
mov dword[ebp-0x4c], eax
add dword[ebp-0x4c], 0x54
mov eax, dword[ebp-0x4c]
mov ecx, dword[ebp-0x4c]
imul eax, ecx
pop ecx
sub ecx, eax
mov eax, dword[ebp-0x4c]
sub ecx, eax
add ecx, dword[ebp-0x4c]
push 0xffffffffffffffb8
mov dword[ebp-0x4c], ecx
add dword[ebp-0x4c], 0xfffffffe
mov eax, dword[ebp-0x4c]
mov ecx, dword[ebp-0x4c]
imul eax, ecx
mov ecx, dword[ebp-0x4c]
imul eax, eax, 0x18
imul ecx, ecx, 0x56
sub eax, ecx
add eax, dword[ebp-0x4c]
pop ecx
add eax, dword[ebp-0x4c]
push 0x38
add eax, dword[ebp-0x4c]
mov dword[ebp-0x4c], eax
mov eax, dword[ebp-0x4c]
sub ecx, eax
add ecx, dword[ebp-0x4c]
add ecx, dword[ebp-0x4c]
mov dword[ebp-0x4c], ecx
mov eax, dword[ebp-0x4c]
cdq
pop ecx
idiv ecx
mov ecx, dword[ebp-0x4c]
imul ecx, ecx, 0xffffffd4
sub ecx, eax
mov eax, dword[ebp-0x4c]
shl eax, 5
add ecx, eax
mov eax, dword[ebp-0x4c]
sub ecx, eax
add ecx, dword[ebp-0x4c]
add ecx, dword[ebp-0x4c]
mov eax, dword[ebp-0x38]
mov esi, dword[ebp-0xa4]
mov dword[ebp-0x4c], ecx
mov ecx, dword[ebp-0x1c]
lea edx, [ecx+eax]
cmp esi, edx
jb off.b736
sub esi, ecx
add esi, edi
jmp off.b730
cmp dword[ebp-0x18], 0x10
mov eax, dword[ebp-0x2c]
jae off.b705
lea eax, [ebp-0x2c]
push dword[ebp-0x1c]
push eax
push esi
call fcn.00410e21
add esp, 0xc
test eax, eax
je off.b1225
mov eax, dword[ebp-0x38]
dec esi
add eax, edi
cmp esi, eax
jae off.b693
and dword[ebp-0x88], 0
and dword[ebp-0x8c], 0
lea eax, [ebp-0x8c]
push eax
lea eax, [ebp-0x88]
push eax
push dword[ebp-0xa4]
mov eax, edi
call fcn.0044763d
add esp, 0xc
test al, al
je off.b877
mov esi, dword[ebp-0x84]
mov eax, dword[ebp-0x8c]
mov ecx, dword[ebp-0x88]
add esi, 0x8c
call fcn.0040456f
push dword[ebp-0x88]
call fcn.00412e7c
mov dword[ebp-0x4c], 6
mov eax, dword[ebp-0x4c]
pop ecx
mov ecx, dword[ebp-0x4c]
imul eax, ecx
mov ecx, dword[ebp-0x4c]
imul eax, eax, 0x37
imul ecx, ecx, 0x48
add eax, ecx
add eax, dword[ebp-0x4c]
mov dword[ebp-0x4c], eax
mov eax, dword[ebp-0x4c]
mov dword[ebp-0x4c], eax
mov eax, dword[ebp-0x4c]
add eax, dword[ebp-0x4c]
mov dword[ebp-0x4c], eax
mov byte[ebp-0x51], 1
push 1
xor edi, edi
lea esi, [ebp-0x2c]
call fcn.00404af1
or dword[ebp-4], 0xffffffff
push 1
lea esi, [ebp-0x48]
call fcn.00404af1
xor esi, esi
push dword[ebp-0x64]
call fcn.0043c627
fld qword[0x470960]
fstp qword[ebp-0x68]
fld qword[ebp-0x68]
fsub qword[0x470958]
fstp qword[ebp-0x68]
fld qword[ebp-0x68]
fadd qword[ebp-0x68]
fstp qword[ebp-0x68]
fld qword[ebp-0x68]
fmul qword[0x470950]
fstp qword[ebp-0x68]
fld qword[ebp-0x68]
fmul qword[0x470948]
fmul qword[ebp-0x68]
fsub qword[0x470940]
fstp qword[ebp-0x68]
fld qword[ebp-0x68]
fsub qword[0x470938]
fstp qword[ebp-0x68]
push dword[ebp-0x94]
call fcn.0043ccbf
push dword[ebp-0x90]
call fcn.0043ccbf
cmp byte[ebp-0x51], 0
je off.b1043
mov eax, dword[ebp-0x84]
push dword[eax+0x9c]
push dword[0x4771c4]
push esi
call fcn.0043b050
add esp, 0xc
mov dword[ebp-0x4c], ebx
mov eax, dword[ebp-0x4c]
shl eax, 6
cdq
push 0x28
pop ecx
idiv ecx
mov ecx, dword[ebp-0x4c]
push 0xffffffffffffff9f
sub eax, ecx
mov ecx, dword[ebp-0x4c]
lea eax, [eax+ecx-0x51]
add eax, dword[ebp-0x4c]
add eax, dword[ebp-0x4c]
mov dword[ebp-0x4c], eax
mov eax, dword[ebp-0x4c]
mov ecx, dword[ebp-0x4c]
sub eax, ecx
add eax, dword[ebp-0x4c]
mov dword[ebp-0x4c], eax
add dword[ebp-0x4c], 0x54
mov eax, dword[ebp-0x4c]
mov ecx, dword[ebp-0x4c]
imul eax, ecx
pop ecx
sub ecx, eax
mov eax, dword[ebp-0x4c]
sub ecx, eax
add ecx, dword[ebp-0x4c]
push 0xffffffffffffffb8
mov dword[ebp-0x4c], ecx
add dword[ebp-0x4c], 0xfffffffe
mov eax, dword[ebp-0x4c]
mov ecx, dword[ebp-0x4c]
imul eax, ecx
mov ecx, dword[ebp-0x4c]
imul eax, eax, 0x18
imul ecx, ecx, 0x56
sub eax, ecx
add eax, dword[ebp-0x4c]
pop ecx
add eax, dword[ebp-0x4c]
push 0x38
add eax, dword[ebp-0x4c]
mov dword[ebp-0x4c], eax
mov eax, dword[ebp-0x4c]
sub ecx, eax
add ecx, dword[ebp-0x4c]
add ecx, dword[ebp-0x4c]
mov dword[ebp-0x4c], ecx
mov eax, dword[ebp-0x4c]
cdq
pop ecx
idiv ecx
mov ecx, dword[ebp-0x4c]
imul ecx, ecx, 0xffffffd4
sub ecx, eax
mov eax, dword[ebp-0x4c]
shl eax, 5
add ecx, eax
mov eax, dword[ebp-0x4c]
sub ecx, eax
add ecx, dword[ebp-0x4c]
mov al, byte[ebp-0x51]
add ecx, dword[ebp-0x4c]
mov dword[ebp-0x4c], ecx
call fcn.0044ccdc
ret 8
mov dword[ebp-0x4c], esi
test esi, esi
je off.b736
sub esi, dword[ebp-0x38]
cmp dword[ebp-0x34], 0x10
mov eax, dword[ebp-0x48]
jae off.b1251
lea eax, [ebp-0x48]
push dword[ebp-0x38]
push eax
push esi
call fcn.00410e21
add esp, 0xc
test eax, eax
je off.b1279
cmp esi, edi
je off.b736
dec esi
jmp off.b1239
fldz
fst qword[ebp-0x70]
fld qword[0x4708e0]
fstp qword[ebp-0x60]
fld qword[0x4708d8]
fst qword[ebp-0x78]
fld qword[0x4708d0]
fstp qword[ebp-0x80]
fld qword[0x4708c8]
fstp qword[ebp-0x80]
fld qword[0x4708c0]
fst qword[ebp-0x80]
fld qword[ebp-0x70]
fcomp qword[ebp-0x80]
fnstsw ax
test ah, 0x41
jp off.b1432
fld qword[ebp-0x80]
fld qword[ebp-0x60]
fmul qword[0x4708b8]
fsubp st(1)
fsub qword[ebp-0x70]
fld qword[ebp-0x78]
fmul qword[ebp-0x70]
fmulp st(2)
fsubrp st(1)
fadd qword[ebp-0x70]
fsub qword[0x4708b0]
fstp qword[ebp-0x78]
fld qword[ebp-0x78]
fsubrp st(2)
fld qword[ebp-0x60]
faddp st(2)
fld qword[ebp-0x80]
faddp st(2)
fmul qword[ebp-0x78]
fmul qword[0x4708a8]
fdiv qword[0x4708f0]
fsubp st(1)
fld qword[ebp-0x78]
fmul qword[0x4708a0]
faddp st(1)
fsub qword[ebp-0x70]
fstp qword[ebp-0x70]
jmp off.b1438
fstp st(2)
fstp st(0)
fstp st(0)
test esi, esi
je off.b736
mov ecx, dword[ebp-0x38]
mov eax, dword[ebp-0x4c]
sub eax, ecx
sub eax, esi
add ecx, esi
mov esi, dword[ebp-0x84]
add esi, 0x8c
call fcn.0040456f
fldz
fst qword[ebp-0x70]
fld qword[0x4708e0]
fstp qword[ebp-0x60]
fld qword[0x4708d8]
fst qword[ebp-0x78]
fld qword[0x4708d0]
fstp qword[ebp-0x80]
fld qword[0x4708c8]
fstp qword[ebp-0x80]
fld qword[0x4708c0]
fst qword[ebp-0x80]
fld qword[ebp-0x70]
fcomp qword[ebp-0x80]
fnstsw ax
test ah, 0x41
jp off.b1628
fld qword[ebp-0x80]
fld qword[ebp-0x60]
fmul qword[0x4708b8]
fsubp st(1)
fsub qword[ebp-0x70]
fld qword[ebp-0x78]
fmul qword[ebp-0x70]
fmulp st(2)
fsubrp st(1)
fadd qword[ebp-0x70]
fsub qword[0x4708b0]
fstp qword[ebp-0x78]
fld qword[ebp-0x78]
fsubrp st(2)
fld qword[ebp-0x60]
faddp st(2)
fld qword[ebp-0x80]
faddp st(2)
fmul qword[ebp-0x78]
fmul qword[0x4708a8]
fdiv qword[0x4708f0]
fsubp st(1)
fld qword[ebp-0x78]
fmul qword[0x4708a0]
faddp st(1)
fsub qword[ebp-0x70]
fstp qword[ebp-0x70]
jmp off.b1634
fstp st(2)
fstp st(0)
fstp st(0)
fld qword[0x470960]
fstp qword[ebp-0x50]
fld qword[ebp-0x50]
fsub qword[0x470958]
fstp qword[ebp-0x50]
fld qword[ebp-0x50]
fadd qword[ebp-0x50]
fstp qword[ebp-0x50]
fld qword[ebp-0x50]
fmul qword[0x470950]
fstp qword[ebp-0x50]
fld qword[ebp-0x50]
fmul qword[0x470948]
fmul qword[ebp-0x50]
fsub qword[0x470940]
fstp qword[ebp-0x50]
fld qword[ebp-0x50]
fsub qword[0x470938]
fstp qword[ebp-0x50]
jmp off.b873

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/e16f74a2849182d98050864255e902f8