---
layout: post
title:  "fcn.1000bb80 @ 4c3818fdf32d89a09257dbc9d3e142ea"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.1000bb80
- **Origin (md5):** 4c3818fdf32d89a09257dbc9d3e142ea
- **VirusTotal:** [virustotal.com/gui/file/4c3818fdf32d89a09257dbc9d3e142ea][virustotal_ref]

# Code Tags
<span class="tag" id="PROCESS">PROCESS</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.1000bb80@4c3818fdf32d89a09257dbc9d3e142ea">fcn.1000bb80</a><br>@4c3818fdf32d89a09257dbc9d3e142ea</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push 0xffffffffffffffff
push 0x1002ad7f
mov eax, dword
push eax
sub esp, 0x78c
mov eax, dword[0x10034390]
xor eax, esp
mov dword[esp+0x788], eax
push ebx
push ebp
push esi
push edi
mov eax, dword[0x10034390]
xor eax, esp
push eax
lea eax, [esp+0x7a0]
mov dword
lea eax, [esp+0x28]
push eax
xor ebp, ebp
push 0xf01ff
mov edi, ecx
mov dword[esp+0x20], ebp
call dword[sym.imp.KERNEL32.dll_GetCurrentProcess]
push eax
call dword[sym.imp.ADVAPI32.dll_OpenProcessToken]
test eax, eax
je off.b304
lea ecx, [esp+0x20]
push ecx
push str.SeDebugPrivilege
push ebp
call dword[sym.imp.ADVAPI32.dll_LookupPrivilegeValueW]
test eax, eax
je off.b304
mov edx, dword[esp+0x20]
mov eax, dword[esp+0x24]
push ebp
push ebp
push 0x10
lea ecx, [esp+0x38]
push ecx
mov dword[esp+0x40], edx
mov edx, dword[esp+0x38]
push ebp
push edx
mov dword[esp+0x44], 1
mov dword[esp+0x4c], eax
mov dword[esp+0x50], 2
call dword[sym.imp.ADVAPI32.dll_AdjustTokenPrivileges]
test eax, eax
jne off.b304
call dword[sym.imp.KERNEL32.dll_GetLastError]
cmp eax, 0x514
jne off.b304
cmp dword[0x100368c0], ebp
jg off.b254
lea eax, [esp+0xcc]
push eax
lea edi, [ebp+0x25]
mov ebx, str...installincludeProcessOperation.cpp
call fcn.10009a80
add eax, 4
push str.The_token_does_not_have_the_specified_privilege.__n
mov dword[esp+0x7ac], ebp
push eax
mov dword[esp+0x20], 1
call fcn.10003ac0
add esp, 8
mov dword[esp+0x7a8], 0xffffffff
test byte[esp+0x18], 1
je off.b284
lea ecx, [esp+0xcc]
call fcn.10009af0
push str.The_token_does_not_have_the_specified_privilege.__n
call fcn.10015379
add esp, 4
xor eax, eax
jmp off.b994
mov edx, dword[0x10035a8c]
mov eax, dword[edx+0xc]
mov ecx, 0x10035a8c
call eax
lea esi, [eax+0x10]
mov dword[esp+0x1c], esi
push 0x206
lea ecx, [esp+0x59a]
push ebp
mov dword[esp+0x7b0], 1
push ecx
mov word[esp+0x5a0], bp
call fcn.100157d0
add esp, 0xc
push 0x206
lea edx, [esp+0x392]
push ebp
push edx
mov word[esp+0x398], bp
call fcn.100157d0
add esp, 0xc
push 2
lea eax, [esp+0x598]
push edi
push eax
call fcn.10013d4f
add esp, 0xc
push 0x104
lea ecx, [esp+0x390]
push ecx
lea edx, [esp+0x59c]
push edx
call dword[sym.imp.KERNEL32.dll_QueryDosDeviceW]
mov eax, edi
lea edx, [eax+2]
mov cx, word[eax]
add eax, 2
cmp cx, bp
jne off.b449
sub eax, edx
sar eax, 1
add eax, 0xfffffffe
push eax
add edi, 4
lea eax, [esp+0x390]
push edi
push eax
call fcn.1001543e
add esp, 0xc
push ebp
push 2
call sub.KERNEL32.dll_CreateToolhelp32Snapshot
mov edi, eax
or ebx, 0xffffffff
cmp edi, ebx
mov dword[esp+0x20], edi
jne off.b548
lea eax, [esi-0x10]
mov dword[esp+0x7a8], ebx
lea ecx, [eax+0xc]
lock xadd
dec ebx
test ebx, ebx
jg off.b541
mov ecx, dword[eax]
mov edx, dword[ecx]
push eax
mov eax, dword[edx+4]
call eax
xor eax, eax
jmp off.b994
lea ecx, [esp+0x15c]
push ecx
push edi
mov dword[esp+0x164], 0x22c
call sub.KERNEL32.dll_Process32FirstW
test eax, eax
jne off.b624
push edi
call dword[sym.imp.KERNEL32.dll_CloseHandle]
lea eax, [esi-0x10]
mov dword[esp+0x7a8], ebx
lea edx, [eax+0xc]
lock xadd
dec ebx
test ebx, ebx
jg off.b541
mov ecx, dword[eax]
mov edx, dword[ecx]
push eax
mov eax, dword[edx+4]
call eax
xor eax, eax
jmp off.b994
mov ecx, dword[esp+0x164]
push ecx
push ebp
push 0x1f0fff
call dword[sym.imp.KERNEL32.dll_OpenProcess]
mov ebx, eax
cmp ebx, ebp
je off.b921
mov eax, dword[esi-8]
mov ecx, 1
sub ecx, dword[esi-4]
sub eax, 0x104
or eax, ecx
jge off.b692
mov ecx, 0x104
lea eax, [esp+0x1c]
call fcn.10004470
mov esi, dword[esp+0x1c]
push 0x104
push esi
push ebx
call sub.PSAPI.DLL_GetProcessImageFileNameW
cmp esi, ebp
jne off.b712
xor ecx, ecx
jmp off.b745
mov ecx, esi
lea edi, [ecx+2]
lea ecx, [ecx]
mov dx, word[ecx]
add ecx, 2
cmp dx, bp
jne off.b720
sub ecx, edi
sar ecx, 1
js off.b1034
mov edi, dword[esp+0x20]
cmp ecx, dword[esi-8]
jg off.b1034
cmp eax, ebp
mov dword[esi-0xc], ecx
mov word[esi+ecx*2], bp
je off.b921
cmp dword[esi-4], 1
jle off.b793
mov edx, dword[esi-0xc]
push edx
lea eax, [esp+0x20]
push eax
call fcn.100044c0
mov esi, dword[esp+0x1c]
lea ecx, [esp+0x38c]
push ecx
push esi
call fcn.10013850
add esp, 8
test eax, eax
jne off.b921
push ebp
push ebx
call dword[sym.imp.KERNEL32.dll_TerminateProcess]
test eax, eax
jne off.b921
cmp dword[0x100368c0], ebp
jg off.b889
lea edx, [esp+0x3c]
push edx
lea edi, [eax+0x60]
mov ebx, str...installincludeProcessOperation.cpp
call fcn.10009a80
mov ecx, 2
add eax, 4
push str.TerminateProcess_error.__n
mov byte[esp+0x7ac], cl
or dword[esp+0x1c], ecx
push eax
call fcn.10003ac0
mov edi, dword[esp+0x28]
add esp, 8
mov dword[esp+0x7a8], 1
test byte[esp+0x18], 2
je off.b921
and dword[esp+0x18], 0xfffffffd
lea ecx, [esp+0x3c]
call fcn.10009af0
lea eax, [esp+0x15c]
push eax
push edi
call sub.KERNEL32.dll_Process32NextW
test eax, eax
jne off.b624
push edi
call dword[sym.imp.KERNEL32.dll_CloseHandle]
lea eax, [esi-0x10]
mov dword[esp+0x7a8], 0xffffffff
lea ecx, [eax+0xc]
or edx, 0xffffffff
lock xadd
dec edx
test edx, edx
jg off.b989
mov ecx, dword[eax]
mov edx, dword[ecx]
push eax
mov eax, dword[edx+4]
call eax
mov eax, 1
mov ecx, dword[esp+0x7a0]
mov dword
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx, dword[esp+0x788]
xor ecx, esp
call fcn.10013bd6
add esp, 0x798
ret
push 0x80070057
call fcn.10004350
int3

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/4c3818fdf32d89a09257dbc9d3e142ea