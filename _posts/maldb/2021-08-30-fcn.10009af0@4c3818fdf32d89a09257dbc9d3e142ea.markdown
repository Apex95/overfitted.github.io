---
layout: post
title:  "fcn.10009af0 @ 4c3818fdf32d89a09257dbc9d3e142ea"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.10009af0
- **Origin (md5):** 4c3818fdf32d89a09257dbc9d3e142ea
- **VirusTotal:** [virustotal.com/gui/file/4c3818fdf32d89a09257dbc9d3e142ea][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>
<span class="tag" id="SYSTEM-INFO">SYSTEM-INFO</span>


# Behaviour Tags
<span class="bhv-tag" id="CREATES_SOCKET_LISTENER">CREATES_SOCKET_LISTENER / 0.2451724899110928</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.10009af0@4c3818fdf32d89a09257dbc9d3e142ea">fcn.10009af0</a><br>@4c3818fdf32d89a09257dbc9d3e142ea</b><br>push 0xffffffffffffffff<br>push 0x1002a988<br>mov eax, dword<br>push eax<br>sub esp, 0x44<br>mov eax, dword[0x10034390]<br>xor eax, esp<br>mov dword[esp+0x40], eax<br>push ebx<br>push ebp<br>push esi<br>push edi<br>mov eax, dword[0x10034390]<br>xor eax, esp<br>push eax<br>lea eax, [esp+0x58]<br>mov dword<br>mov esi, ecx<br>mov dword[esp+0x34], esi<br>lea edi, [esi+4]<br>xor ebx, ebx<br>push edi<br>mov dword[esp+0x64], ebx<br>call fcn.10009240<br>add esp, 4<br>lea ecx, [esp+0x38]<br>mov eax, edi<br>call fcn.1000a7e0<br>mov byte[esp+0x60], 1<br>mov eax, dword[0x100368d4]<br>cmp eax, ebx<br>je 0x10009b9a<br>mov edx, dword[esi+0x84]<br>lea ecx, [esp+0x38]<br>push ecx<br>mov ecx, dword[esi+0x8c]<br>push edx<br>mov edx, dword[esi+0x88]<br>push ecx<br>mov ecx, dword[esi]<br>push edx<br>push ecx<br>call eax<br>add esp, 0x14<br>test al, al<br>je 0x10009b9a<br>cmp dword[esp+0x50], 0x10<br>jb 0x10009b8d<br>mov edx, dword[esp+0x3c]<br>push edx<br>call fcn.1001353a<br>add esp, 4<br>mov dword[esp+0x50], 0xf<br>jmp 0x10009dec<br>mov eax, dword[0x100354f0]<br>cmp eax, 2<br>je 0x10009bb5<br>cmp eax, 3<br>je 0x10009bb5<br>cmp dword[esi], 2<br>jl 0x10009c05<br>cmp dword[esp+0x50], 0x10<br>jmp 0x10009bd3<br>mov eax, dword[esp+0x3c]<br>mov ebp, 0x10<br>cmp dword[esp+0x50], ebp<br>jae 0x10009bc8<br>lea eax, [esp+0x3c]<br>push eax<br>call dword[sym.imp.KERNEL32.dll_OutputDebugStringA]<br>cmp dword[esp+0x50], ebp<br>mov eax, dword[esp+0x3c]<br>jae 0x10009bdd<br>lea eax, [esp+0x3c]<br>push eax<br>push 0x1002ef68<br>call fcn.10014eaf<br>add eax, 0x40<br>push eax<br>call fcn.1001522a<br>add esp, 0xc<br>call fcn.10014eaf<br>add eax, 0x40<br>push eax<br>call fcn.100151ce<br>add esp, 4<br>mov ebp, 7<br>mov dword[esp+0x2c], ebp<br>mov dword[esp+0x28], ebx<br>mov word[esp+0x18], bx<br>lea eax, [esp+0x14]<br>push eax<br>xor ecx, ecx<br>mov byte[esp+0x64], 2<br>call fcn.100093d0<br>add esp, 4<br>mov byte[esp+0x60], 1<br>cmp dword[esp+0x2c], 8<br>jb 0x10009c44<br>mov ecx, dword[esp+0x18]<br>push ecx<br>call fcn.1001353a<br>add esp, 4<br>mov eax, dword[0x100354f0]<br>cmp eax, ebx<br>mov dword[esp+0x2c], ebp<br>mov dword[esp+0x28], ebx<br>mov word[esp+0x18], bx<br>je 0x10009d08<br>cmp eax, 2<br>je 0x10009d08<br>cmp dword[0x100368dc], ebx<br>jne 0x10009c80<br>mov edx, dword[0x100368e0]<br>push 0xffffffffffffffff<br>push edx<br>call dword[sym.imp.KERNEL32.dll_WaitForSingleObject]<br>jmp 0x10009c8c<br>mov eax, dword[0x100368d8]<br>push eax<br>call dword[sym.imp.KERNEL32.dll_EnterCriticalSection]<br>mov byte[esp+0x60], 3<br>call fcn.10009590<br>test al, al<br>je 0x10009cd9<br>mov ecx, dword[0x100368c4]<br>push 2<br>push ebx<br>push ebx<br>push ecx<br>call dword[sym.imp.KERNEL32.dll_SetFilePointer]<br>mov eax, dword[esp+0x3c]<br>mov ebp, 0x10<br>cmp dword[esp+0x50], ebp<br>jae 0x10009cbe<br>lea eax, [esp+0x3c]<br>mov ecx, dword[esp+0x4c]<br>push ebx<br>lea edx, [esp+0x34]<br>push edx<br>mov edx, dword[0x100368c4]<br>push ecx<br>push eax<br>push edx<br>call dword[sym.imp.KERNEL32.dll_WriteFile]<br>jmp 0x10009cde<br>mov ebp, 0x10<br>mov byte[esp+0x60], 1<br>cmp dword[0x100368dc], ebx<br>jne 0x10009cf9<br>mov eax, dword[0x100368e0]<br>push eax<br>call dword[sym.imp.KERNEL32.dll_ReleaseMutex]<br>jmp 0x10009d0d<br>mov ecx, dword[0x100368d8]<br>push ecx<br>call dword[sym.imp.KERNEL32.dll_LeaveCriticalSection]<br>jmp 0x10009d0d<br>mov ebp, 0x10<br>mov eax, dword[esi]<br>cmp eax, 4<br>mov esi, 0xf<br>jne 0x10009d69<br>call dword[sym.imp.KERNEL32.dll_IsDebuggerPresent]<br>test eax, eax<br>je 0x10009d2e<br>call dword[sym.imp.KERNEL32.dll_DebugBreak]<br>jmp 0x10009dd5<br>cmp dword[0x100368cc], ebx<br>je 0x10009dd5<br>lea ecx, [esp+0x14]<br>mov eax, edi<br>call fcn.1000a7e0<br>push eax<br>mov byte[esp+0x64], 4<br>call dword[0x100368cc]<br>add esp, 4<br>cmp dword[esp+0x2c], ebp<br>jb 0x10009dd5<br>mov edx, dword[esp+0x18]<br>push edx<br>call fcn.1001353a<br>add esp, 4<br>jmp 0x10009dd5<br>cmp eax, 3<br>jne 0x10009dd5<br>cmp dword[0x100368d0], ebx<br>lea ecx, [esp+0x14]<br>mov eax, edi<br>je 0x10009da5<br>call fcn.1000a7e0<br>push eax<br>mov byte[esp+0x64], 5<br>call dword[0x100368d0]<br>add esp, 4<br>cmp dword[esp+0x2c], ebp<br>jb 0x10009dd5<br>mov eax, dword[esp+0x18]<br>push eax<br>call fcn.1001353a<br>add esp, 4<br>jmp 0x10009dd5<br>call fcn.1000a7e0<br>mov ecx, eax<br>mov byte[esp+0x60], 6<br>call fcn.10009830<br>cmp dword[esp+0x2c], ebp<br>jb 0x10009dc9<br>mov ecx, dword[esp+0x18]<br>push ecx<br>call fcn.1001353a<br>add esp, 4<br>mov dword[esp+0x2c], esi<br>mov dword[esp+0x28], ebx<br>mov byte[esp+0x18], bl<br>cmp dword[esp+0x50], ebp<br>jb 0x10009de8<br>mov edx, dword[esp+0x3c]<br>push edx<br>call fcn.1001353a<br>add esp, 4<br>mov dword[esp+0x50], esi<br>lea esi, [edi+0x4c]<br>mov ecx, esi<br>mov byte[esp+0x3c], bl<br>mov dword[esp+0x4c], ebx<br>mov dword[esp+0x60], 0xffffffff<br>call fcn.1000a770<br>push esi<br>mov dword[esi], vtable.std::ios_base.0<br>call fcn.100131b5<br>add esp, 4<br>mov ecx, dword[esp+0x58]<br>mov dword<br>pop ecx<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>mov ecx, dword[esp+0x40]<br>xor ecx, esp<br>call fcn.10013bd6<br>add esp, 0x50<br>ret <br><eoc> ', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push 0xffffffffffffffff
push 0x1002a988
mov eax, dword
push eax
sub esp, 0x44
mov eax, dword[0x10034390]
xor eax, esp
mov dword[esp+0x40], eax
push ebx
push ebp
push esi
push edi
mov eax, dword[0x10034390]
xor eax, esp
push eax
lea eax, [esp+0x58]
mov dword
mov esi, ecx
mov dword[esp+0x34], esi
lea edi, [esi+4]
xor ebx, ebx
push edi
mov dword[esp+0x64], ebx
call fcn.10009240
add esp, 4
lea ecx, [esp+0x38]
mov eax, edi
call fcn.1000a7e0
mov byte[esp+0x60], 1
mov eax, dword[0x100368d4]
cmp eax, ebx
je 0x10009b9a
mov edx, dword[esi+0x84]
lea ecx, [esp+0x38]
push ecx
mov ecx, dword[esi+0x8c]
push edx
mov edx, dword[esi+0x88]
push ecx
mov ecx, dword[esi]
push edx
push ecx
call eax
add esp, 0x14
test al, al
je 0x10009b9a
cmp dword[esp+0x50], 0x10
jb 0x10009b8d
mov edx, dword[esp+0x3c]
push edx
call fcn.1001353a
add esp, 4
mov dword[esp+0x50], 0xf
jmp 0x10009dec
mov eax, dword[0x100354f0]
cmp eax, 2
je 0x10009bb5
cmp eax, 3
je 0x10009bb5
cmp dword[esi], 2
jl 0x10009c05
cmp dword[esp+0x50], 0x10
jmp 0x10009bd3
mov eax, dword[esp+0x3c]
mov ebp, 0x10
cmp dword[esp+0x50], ebp
jae 0x10009bc8
lea eax, [esp+0x3c]
push eax
call dword[sym.imp.KERNEL32.dll_OutputDebugStringA]
cmp dword[esp+0x50], ebp
mov eax, dword[esp+0x3c]
jae 0x10009bdd
lea eax, [esp+0x3c]
push eax
push 0x1002ef68
call fcn.10014eaf
add eax, 0x40
push eax
call fcn.1001522a
add esp, 0xc
call fcn.10014eaf
add eax, 0x40
push eax
call fcn.100151ce
add esp, 4
mov ebp, 7
mov dword[esp+0x2c], ebp
mov dword[esp+0x28], ebx
mov word[esp+0x18], bx
lea eax, [esp+0x14]
push eax
xor ecx, ecx
mov byte[esp+0x64], 2
call fcn.100093d0
add esp, 4
mov byte[esp+0x60], 1
cmp dword[esp+0x2c], 8
jb 0x10009c44
mov ecx, dword[esp+0x18]
push ecx
call fcn.1001353a
add esp, 4
mov eax, dword[0x100354f0]
cmp eax, ebx
mov dword[esp+0x2c], ebp
mov dword[esp+0x28], ebx
mov word[esp+0x18], bx
je 0x10009d08
cmp eax, 2
je 0x10009d08
cmp dword[0x100368dc], ebx
jne 0x10009c80
mov edx, dword[0x100368e0]
push 0xffffffffffffffff
push edx
call dword[sym.imp.KERNEL32.dll_WaitForSingleObject]
jmp 0x10009c8c
mov eax, dword[0x100368d8]
push eax
call dword[sym.imp.KERNEL32.dll_EnterCriticalSection]
mov byte[esp+0x60], 3
call fcn.10009590
test al, al
je 0x10009cd9
mov ecx, dword[0x100368c4]
push 2
push ebx
push ebx
push ecx
call dword[sym.imp.KERNEL32.dll_SetFilePointer]
mov eax, dword[esp+0x3c]
mov ebp, 0x10
cmp dword[esp+0x50], ebp
jae 0x10009cbe
lea eax, [esp+0x3c]
mov ecx, dword[esp+0x4c]
push ebx
lea edx, [esp+0x34]
push edx
mov edx, dword[0x100368c4]
push ecx
push eax
push edx
call dword[sym.imp.KERNEL32.dll_WriteFile]
jmp 0x10009cde
mov ebp, 0x10
mov byte[esp+0x60], 1
cmp dword[0x100368dc], ebx
jne 0x10009cf9
mov eax, dword[0x100368e0]
push eax
call dword[sym.imp.KERNEL32.dll_ReleaseMutex]
jmp 0x10009d0d
mov ecx, dword[0x100368d8]
push ecx
call dword[sym.imp.KERNEL32.dll_LeaveCriticalSection]
jmp 0x10009d0d
mov ebp, 0x10
mov eax, dword[esi]
cmp eax, 4
mov esi, 0xf
jne 0x10009d69
call dword[sym.imp.KERNEL32.dll_IsDebuggerPresent]
test eax, eax
je 0x10009d2e
call dword[sym.imp.KERNEL32.dll_DebugBreak]
jmp 0x10009dd5
cmp dword[0x100368cc], ebx
je 0x10009dd5
lea ecx, [esp+0x14]
mov eax, edi
call fcn.1000a7e0
push eax
mov byte[esp+0x64], 4
call dword[0x100368cc]
add esp, 4
cmp dword[esp+0x2c], ebp
jb 0x10009dd5
mov edx, dword[esp+0x18]
push edx
call fcn.1001353a
add esp, 4
jmp 0x10009dd5
cmp eax, 3
jne 0x10009dd5
cmp dword[0x100368d0], ebx
lea ecx, [esp+0x14]
mov eax, edi
je 0x10009da5
call fcn.1000a7e0
push eax
mov byte[esp+0x64], 5
call dword[0x100368d0]
add esp, 4
cmp dword[esp+0x2c], ebp
jb 0x10009dd5
mov eax, dword[esp+0x18]
push eax
call fcn.1001353a
add esp, 4
jmp 0x10009dd5
call fcn.1000a7e0
mov ecx, eax
mov byte[esp+0x60], 6
call fcn.10009830
cmp dword[esp+0x2c], ebp
jb 0x10009dc9
mov ecx, dword[esp+0x18]
push ecx
call fcn.1001353a
add esp, 4
mov dword[esp+0x2c], esi
mov dword[esp+0x28], ebx
mov byte[esp+0x18], bl
cmp dword[esp+0x50], ebp
jb 0x10009de8
mov edx, dword[esp+0x3c]
push edx
call fcn.1001353a
add esp, 4
mov dword[esp+0x50], esi
lea esi, [edi+0x4c]
mov ecx, esi
mov byte[esp+0x3c], bl
mov dword[esp+0x4c], ebx
mov dword[esp+0x60], 0xffffffff
call fcn.1000a770
push esi
mov dword[esi], vtable.std::ios_base.0
call fcn.100131b5
add esp, 4
mov ecx, dword[esp+0x58]
mov dword
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx, dword[esp+0x40]
xor ecx, esp
call fcn.10013bd6
add esp, 0x50
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/4c3818fdf32d89a09257dbc9d3e142ea