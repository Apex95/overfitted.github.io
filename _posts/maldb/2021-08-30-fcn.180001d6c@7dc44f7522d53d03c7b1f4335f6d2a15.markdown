---
layout: post
title:  "fcn.180001d6c @ 7dc44f7522d53d03c7b1f4335f6d2a15"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.180001d6c
- **Origin (md5):** 7dc44f7522d53d03c7b1f4335f6d2a15
- **VirusTotal:** [virustotal.com/gui/file/7dc44f7522d53d03c7b1f4335f6d2a15][virustotal_ref]

# Code Tags
<span class="tag" id="PROCESS">PROCESS</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.180001d6c@7dc44f7522d53d03c7b1f4335f6d2a15">fcn.180001d6c</a><br>@7dc44f7522d53d03c7b1f4335f6d2a15</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

mov rax, rsp
mov qword[rax+8], rbx
mov qword[rax+0x10], rsi
mov qword[rax+0x18], rdi
mov qword[rax+0x20], r12
push r13
push r14
push r15
sub rsp, 0xc0
mov qword[rsp+0x48], rsp
mov ecx, 0xb
call fcn.1800030c4
nop
mov edi, 0x58
mov edx, edi
lea r13d, [rdi-0x38]
mov ecx, r13d
call fcn.180002cf0
mov rcx, rax
mov qword[rsp+0x28], rax
xor r12d, r12d
test rax, rax
jne off.b108
lea rdx, [off.b100]
mov rcx, rsp
call fcn.180004af0
nop
nop
or eax, 0xffffffff
jmp off.b779
mov qword[0x180014660], rax
mov dword[0x180016988], r13d
add rax, 0xb00
cmp rcx, rax
jae off.b190
mov word[rcx+8], 0xa00
or qword[rcx], 0xffffffffffffffff
mov dword[rcx+0xc], r12d
and byte[rcx+0x38], 0x80
mov al, byte[rcx+0x38]
and al, 0x7f
mov byte[rcx+0x38], al
mov word[rcx+0x39], 0xa0a
mov dword[rcx+0x50], r12d
mov byte[rcx+0x4c], r12b
add rcx, rdi
mov qword[rsp+0x28], rcx
mov rax, qword[0x180014660]
jmp off.b122
lea rcx, [rsp+0x50]
call qword[sym.imp.KERNEL32.dll_GetStartupInfoW]
cmp word[rsp+0x92], r12w
je off.b538
mov rax, qword[rsp+0x98]
test rax, rax
je off.b538
lea r14, [rax+4]
mov qword[rsp+0x38], r14
movsxd rsi, dword[rax]
add rsi, r14
mov qword[rsp+0x40], rsi
mov r15d, 0x800
cmp dword[rax], r15d
cmovl r15d, dword[rax]
mov ebx, 1
mov dword[rsp+0x30], ebx
cmp dword[0x180016988], r15d
jge off.b399
mov rdx, rdi
mov rcx, r13
call fcn.180002cf0
mov rcx, rax
mov qword[rsp+0x28], rax
test rax, rax
jne off.b317
mov r15d, dword[0x180016988]
jmp off.b399
movsxd rdx, ebx
lea r8, [0x180014660]
mov qword[r8+rdx*8], rax
add dword[0x180016988], r13d
mov rax, qword[r8+rdx*8]
add rax, 0xb00
cmp rcx, rax
jae off.b395
mov word[rcx+8], 0xa00
or qword[rcx], 0xffffffffffffffff
mov dword[rcx+0xc], r12d
and byte[rcx+0x38], 0x80
mov word[rcx+0x39], 0xa0a
mov dword[rcx+0x50], r12d
mov byte[rcx+0x4c], r12b
add rcx, rdi
mov qword[rsp+0x28], rcx
jmp off.b338
inc ebx
jmp off.b271
mov edi, r12d
mov dword[rsp+0x20], r12d
lea r13, [0x180014660]
cmp edi, r15d
jge off.b538
mov rcx, qword[rsi]
lea rax, [rcx+2]
cmp rax, 1
jbe off.b513
test byte[r14], 1
je off.b513
test byte[r14], 8
jne off.b454
call qword[sym.imp.KERNEL32.dll_GetFileType]
test eax, eax
je off.b513
movsxd rcx, edi
mov rax, rcx
sar rax, 5
and ecx, 0x1f
imul rbx, rcx, 0x58
add rbx, qword[r13+rax*8]
mov qword[rsp+0x28], rbx
mov rax, qword[rsi]
mov qword[rbx], rax
mov al, byte[r14]
mov byte[rbx+8], al
lea rcx, [rbx+0x10]
xor r8d, r8d
mov edx, 0xfa0
call fcn.180002834
inc dword[rbx+0xc]
inc edi
mov dword[rsp+0x20], edi
inc r14
mov qword[rsp+0x38], r14
add rsi, 8
mov qword[rsp+0x40], rsi
jmp off.b414
mov edi, r12d
mov dword[rsp+0x20], r12d
mov r15, 0xfffffffffffffffe
cmp edi, 3
jge off.b767
movsxd rsi, edi
imul rbx, rsi, 0x58
add rbx, qword[0x180014660]
mov qword[rsp+0x28], rbx
mov rax, qword[rbx]
add rax, 2
cmp rax, 1
jbe off.b610
movsx eax, byte[rbx+8]
bts eax, 7
mov byte[rbx+8], al
jmp off.b756
mov byte[rbx+8], 0x81
lea eax, [rdi-1]
neg eax
sbb ecx, ecx
add ecx, 0xfffffff5
mov eax, 0xfffffff6
test edi, edi
cmove ecx, eax
call qword[sym.imp.KERNEL32.dll_GetStdHandle]
mov r14, rax
lea rcx, [rax+1]
cmp rcx, 1
jbe off.b723
mov rcx, rax
call qword[sym.imp.KERNEL32.dll_GetFileType]
test eax, eax
je off.b723
mov qword[rbx], r14
movzx eax, al
cmp eax, 2
jne off.b686
movsx eax, byte[rbx+8]
or eax, 0x40
jmp off.b698
cmp eax, 3
jne off.b701
movsx eax, byte[rbx+8]
or eax, 8
mov byte[rbx+8], al
lea rcx, [rbx+0x10]
xor r8d, r8d
mov edx, 0xfa0
call fcn.180002834
inc dword[rbx+0xc]
jmp off.b756
movsx eax, byte[rbx+8]
or eax, 0x40
mov byte[rbx+8], al
mov qword[rbx], r15
mov rax, qword[0x180015838]
test rax, rax
je off.b756
mov rax, qword[rax+rsi*8]
mov dword[rax+0x1c], r15d
inc edi
mov dword[rsp+0x20], edi
jmp off.b553
mov ecx, 0xb
call fcn.1800032b4
xor eax, eax
lea r11, [rsp+0xc0]
mov rbx, qword[r11+0x20]
mov rsi, qword[r11+0x28]
mov rdi, qword[r11+0x30]
mov r12, qword[r11+0x38]
mov rsp, r11
pop r15
pop r14
pop r13
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/7dc44f7522d53d03c7b1f4335f6d2a15