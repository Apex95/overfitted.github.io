---
layout: post
title:  "fcn.00680030 @ a5905e3c253c25bbaf727a1a18fe8ed1"
date:   2021-08-30 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00680030
- **Origin (md5):** a5905e3c253c25bbaf727a1a18fe8ed1
- **VirusTotal:** [virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1][virustotal_ref]

# Code Tags
<span class="tag" id="THREAD">THREAD</span>


# Similar Functions

1. [fcn.00680c50][similar_1_ref] (sim.: 0.9721214777400398)
2. [fcn.005ba960][similar_2_ref] (sim.: 0.9663193103026981)
3. [fcn.005bd550][similar_3_ref] (sim.: 0.9651909393358774)
4. [fcn.00579b00][similar_4_ref] (sim.: 0.9643344834174206)
5. [fcn.006a0db0][similar_5_ref] (sim.: 0.9636404128748872)


# Disassembled Code

{% highlight nasm %}
push r15
push r14
push r13
push r12
push rbp
push rdi
push rsi
push rbx
sub rsp,0x88
mov rdi,qword[0x00a7d7e0]
mov rbx,rcx
mov r13,rdx
mov qword[rsp+0xe0],r8
mov qword[rsp+0xe8],r9
cmp rdi,0xffffffffffffff98
je 0x68091d
mov r12,qword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
lea rbp,[rdi+0x6c]
call r12
mov r14d,eax
xor eax,eax
lock cmpxchg dword[rbp],eax
cmp r14d,eax
je 0x680143
lea rsi,[rdi+0x70]
mov r15d,dword[rdi+0x70]
jmp 0x680098
mov r15d,eax
mov edx,r15d
mov r8d,r15d
mov rcx,rsi
or edx,0x80000000
call fcn.008eebc0
cmp r15d,eax
jne 0x680095
test r15d,r15d
js 0x6805f0
xchg dword[rbp],r14d
mov rax,qword[rdi+0x88]
sub rax,qword[rdi+0x80]
mov dword[rdi+0x68],0
sar rax,3
mov qword[rsp+0x30],rax
xor eax,eax
xchg dword[rbp],eax
mov eax,0x80000000
lock xadd dword[rsi],eax
test eax,0x40000000
jne 0x680165
cmp eax,0x80000000
je 0x680165
mov ebp,dword[rdi+0x70]
jmp 0x680102
mov ebp,eax
mov edx,ebp
mov r8d,ebp
mov rcx,rsi
or edx,0x40000000
call fcn.008eebc0
cmp ebp,eax
jne 0x680100
and ebp,0x40000000
jne 0x680165
add rdi,0x78
xor eax,eax
lock cmpxchg qword[rdi],rax
test rax,rax
mov rsi,rax
je 0x6807ad
mov rcx,rsi
call qword[sym.imp.KERNEL32.dll_SetEvent]
jmp 0x680165
mov rax,qword[rdi+0x88]
sub rax,qword[rdi+0x80]
mov edx,dword[rdi+0x68]
sar rax,3
test edx,edx
mov qword[rsp+0x30],rax
je 0x680b12
mov rax,qword[0x00a7d820]
cmp byte[rax+0x1a47],0
je 0x680393
movzx r8d,byte[rax+0xc80]
mov edx,0x18
mov ecx,0x6c
test r8b,r8b
jne 0x6803ae
cmp byte[rax+rcx+0x1938],0
jne 0x680410
mov eax,dword[rax+rdx*4+0x1728]
mov dword[rsp+0x28],eax
lea rdi,[rbx+0x14]
call r12
mov ebp,eax
xor eax,eax
lock cmpxchg dword[rdi],eax
cmp ebp,eax
je 0x680264
lea rsi,[rbx+0x18]
mov r14d,dword[rbx+0x18]
jmp 0x6801d3
mov r14d,eax
mov edx,r14d
mov r8d,r14d
mov rcx,rsi
or edx,0x80000000
call fcn.008eebc0
cmp r14d,eax
jne 0x6801d0
test r14d,r14d
js 0x680520
xchg dword[rdi],ebp
mov ebp,dword[rbx+0x58]
mov dword[rbx+0x10],0
xor eax,eax
xchg dword[rdi],eax
mov eax,0x80000000
lock xadd dword[rsi],eax
test eax,0x40000000
jne 0x680272
cmp eax,0x80000000
je 0x680272
mov edi,dword[rbx+0x18]
jmp 0x680223
mov edi,eax
mov edx,edi
mov r8d,edi
mov rcx,rsi
or edx,0x40000000
call fcn.008eebc0
cmp edi,eax
jne 0x680221
and edi,0x40000000
jne 0x680272
lea rdi,[rbx+0x20]
xor eax,eax
lock cmpxchg qword[rdi],rax
test rax,rax
mov rsi,rax
je 0x6807e8
mov rcx,rsi
call qword[sym.imp.KERNEL32.dll_SetEvent]
jmp 0x680272
mov eax,dword[rbx+0x10]
mov ebp,dword[rbx+0x58]
test eax,eax
je 0x680c41
cmp ebp,0xffffffff
je 0x680365
mov eax,dword[rsp+0x28]
test eax,eax
je 0x680365
cmp qword[rsp+0x30],0
je 0x680365
lea rdi,[rbx+0x64]
call r12
mov ebp,eax
xor eax,eax
lock cmpxchg dword[rdi],eax
cmp ebp,eax
je 0x680470
lea rsi,[rbx+0x68]
mov r12d,dword[rbx+0x68]
jmp 0x6802b7
mov r12d,eax
mov edx,r12d
mov r8d,r12d
mov rcx,rsi
or edx,0x80000000
call fcn.008eebc0
cmp r12d,eax
jne 0x6802b4
test r12d,r12d
js 0x6806d8
xchg dword[rdi],ebp
mov r8,qword[rbx+0x78]
mov eax,1
mov dword[rbx+0x60],1
test r8,r8
jle 0x680486
mov r14d,dword[rsp+0x28]
xor edx,edx
mov r9,qword[r13]
mov rcx,r13
shl r14d,0xa
movsxd rax,r14d
div qword[rsp+0x30]
cmp qword[rsp+0xe8],r8
mov rdx,qword[rsp+0xe0]
cmovle r8,qword[rsp+0xe8]
cmp rax,r8
cmovle r8,rax
call qword[r9+0x48]
movsxd rsi,eax
test rsi,rsi
jle 0x68033e
sub qword[rbx+0x78],rsi
mov eax,dword[rbx+0x60]
sub eax,1
test eax,eax
mov dword[rbx+0x60],eax
je 0x680a93
cmp rsi,0xffffffffffffffff
je 0x68079b
xor ecx,ecx
call qword[sym.imp.KERNEL32.dll_Sleep]
mov eax,esi
jmp 0x68037f
mov rax,qword[r13]
mov r8d,dword[rsp+0xe8]
mov rcx,r13
mov rdx,qword[rsp+0xe0]
call qword[rax+0x48]
add rsp,0x88
pop rbx
pop rsi
pop rdi
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
movzx r8d,byte[rax+0x18f0]
mov edx,0x18
mov ecx,0x6c
test r8b,r8b
je 0x680194
lea rsi,[rsp+0x40]
mov rcx,rsi
call qword[sym.imp.msvcrt.dll__time64]
mov rcx,rsi
call qword[sym.imp.msvcrt.dll__localtime64]
mov r9d,dword[rax+8]
mov rax,qword[0x00a7d820]
cmp byte[rax+0x19a0],0
jne 0x680420
cmp byte[rax+0x19a1],0
mov r8d,dword[rax+0x1778]
je 0x680430
mov edx,dword[rax+0xb0c]
cmp edx,r8d
jle 0x68043b
cmp r9d,r8d
jl 0x680460
cmp r9d,edx
jge 0x680460
mov edx,0x16
mov ecx,0x6a
jmp 0x680194
mov eax,dword[rax+rdx*4+0xab8]
mov dword[rsp+0x28],eax
jmp 0x6801ad
cmp byte[rax+0x19a1],0
mov r8d,dword[rax+0xb08]
jne 0x6803e9
mov edx,dword[rax+0x177c]
cmp edx,r8d
jg 0x6803f4
jge 0x680460
cmp r9d,edx
jl 0x6803fe
cmp r9d,r8d
mov edx,0x18
mov ecx,0x6c
jl 0x680194
jmp 0x6803fe
mov edx,0x18
mov ecx,0x6c
jmp 0x680194
mov eax,dword[rbx+0x60]
mov r8,qword[rbx+0x78]
add eax,1
test r8,r8
mov dword[rbx+0x60],eax
jg 0x6802f4
sub eax,1
test eax,eax
mov dword[rbx+0x60],eax
jne 0x68079b
xchg dword[rdi],eax
mov eax,0x80000000
lea rbp,[rbx+0x68]
lock xadd dword[rbp],eax
test eax,0x40000000
jne 0x68079b
cmp eax,0x80000000
je 0x68079b
mov rsi,0xffffffffffffffff
mov edi,dword[rbx+0x68]
jmp 0x6804d2
mov edi,eax
mov edx,edi
mov r8d,edi
mov rcx,rbp
or edx,0x40000000
call fcn.008eebc0
cmp edi,eax
jne 0x6804d0
and edi,0x40000000
jne 0x68034f
lea rbp,[rbx+0x70]
xor eax,eax
lock cmpxchg qword[rbp],rax
test rax,rax
mov rdi,rax
mov rcx,rax
je 0x680823
call qword[sym.imp.KERNEL32.dll_SetEvent]
jmp 0x68034f
mov edx,dword[rbx+0x18]
jmp 0x680527
mov edx,eax
lea eax,[rdx+1]
mov r14d,edx
or r14d,0x80000000
test edx,edx
cmovs r14d,eax
mov eax,edx
lock cmpxchg dword[rsi],r14d
cmp eax,edx
jne 0x680525
mov eax,r14d
shr eax,0x1f
test al,al
je 0x6801f5
shr edx,0x1f
test dl,dl
je 0x6801f5
lea r10,[rbx+0x20]
xor eax,eax
lock cmpxchg qword[r10],rax
test rax,rax
mov r15,rax
mov rcx,rax
je 0x68086a
mov r15,qword[sym.imp.KERNEL32.dll_WaitForSingleObjectEx]
mov qword[rsp+0xd0],rbx
mov rbx,rsi
mov esi,r14d
mov r14,rcx
and esi,0x7fffffff
xor r8d,r8d
mov edx,0xffffffff
mov rcx,r14
call r15
mov edx,esi
or edx,0x40000000
test edx,edx
js 0x6805d3
lea ecx,[rdx-1]
mov eax,edx
and ecx,0x3fffffff
or ecx,0x80000000
lock cmpxchg dword[rbx],ecx
cmp eax,edx
je 0x6806b6
mov edx,eax
test edx,edx
jns 0x6805b0
mov ecx,edx
mov eax,edx
and ecx,0xbfffffff
lock cmpxchg dword[rbx],ecx
cmp eax,edx
jne 0x6805cd
mov esi,eax
jmp 0x680590
mov edx,dword[rdi+0x70]
jmp 0x6805f7
mov edx,eax
lea eax,[rdx+1]
mov r10d,edx
or r10d,0x80000000
test edx,edx
cmovs r10d,eax
mov eax,edx
lock cmpxchg dword[rsi],r10d
cmp eax,edx
jne 0x6805f5
mov eax,r10d
shr eax,0x1f
test al,al
je 0x6800ba
shr edx,0x1f
test dl,dl
je 0x6800ba
lea r15,[rdi+0x78]
xor eax,eax
lock cmpxchg qword[r15],rax
test rax,rax
mov rcx,rax
je 0x6808b2
mov r15,qword[sym.imp.KERNEL32.dll_WaitForSingleObjectEx]
mov qword[rsp+0x28],rdi
mov edi,r10d
mov qword[rsp+0xd0],rbx
mov rbx,r15
mov r15,rcx
and edi,0x7fffffff
xor r8d,r8d
mov edx,0xffffffff
mov rcx,r15
call rbx
mov edx,edi
or edx,0x40000000
test edx,edx
js 0x6806a0
lea ecx,[rdx-1]
mov eax,edx
and ecx,0x3fffffff
or ecx,0x80000000
lock cmpxchg dword[rsi],ecx
cmp eax,edx
je 0x6806c6
mov edx,eax
test edx,edx
jns 0x680681
mov ecx,edx
mov eax,edx
and ecx,0xbfffffff
lock cmpxchg dword[rsi],ecx
cmp eax,edx
jne 0x68069a
mov edi,eax
jmp 0x680662
mov rsi,rbx
mov rbx,qword[rsp+0xd0]
jmp 0x6801f5
mov rdi,qword[rsp+0x28]
mov rbx,qword[rsp+0xd0]
jmp 0x6800ba
mov edx,dword[rbx+0x68]
jmp 0x6806e2
mov edx,eax
lea eax,[rdx+1]
mov r14d,edx
or r14d,0x80000000
test edx,edx
cmovs r14d,eax
mov eax,edx
lock cmpxchg dword[rsi],r14d
cmp eax,edx
jne 0x6806e0
shr edx,0x1f
test dl,dl
je 0x6802d9
mov eax,r14d
shr eax,0x1f
test al,al
je 0x6802d9
lea r10,[rbx+0x70]
xor eax,eax
lock cmpxchg qword[r10],rax
test rax,rax
mov r15,rax
mov r12,rax
je 0x680990
mov r15,qword[sym.imp.KERNEL32.dll_WaitForSingleObjectEx]
nop word[rax+rax]
xor r8d,r8d
mov edx,0xffffffff
mov rcx,r12
call r15
mov edx,r14d
and edx,0x7fffffff
or edx,0x40000000
test edx,edx
js 0x680784
lea ecx,[rdx-1]
mov eax,edx
and ecx,0x3fffffff
or ecx,0x80000000
lock cmpxchg dword[rsi],ecx
cmp eax,edx
je 0x6802d9
mov edx,eax
test edx,edx
jns 0x680761
mov ecx,edx
mov eax,edx
and ecx,0xbfffffff
lock cmpxchg dword[rsi],ecx
cmp eax,edx
jne 0x68077e
mov r14d,eax
jmp 0x680740
mov rcx,rbx
call fcn.0067e2f0
mov eax,0xffffffff
jmp 0x68037f
xor ecx,ecx
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
je 0x680b7e
mov rax,rsi
lock cmpxchg qword[rdi],rcx
test rax,rax
mov rsi,rax
je 0x680862
call qword[sym.imp.KERNEL32.dll_CloseHandle]
jmp 0x680138
xor ecx,ecx
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
je 0x680a3f
mov rax,rsi
lock cmpxchg qword[rdi],rcx
test rax,rax
mov rsi,rax
je 0x680915
call qword[sym.imp.KERNEL32.dll_CloseHandle]
jmp 0x680259
xor ecx,ecx
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
je 0x680bd2
mov rax,rdi
lock cmpxchg qword[rbp],rcx
test rax,rax
mov rdi,rax
je 0x680510
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rcx,rdi
jmp 0x680510
mov rsi,rcx
jmp 0x680138
xor ecx,ecx
mov qword[rsp+0x38],r10
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
mov r10,qword[rsp+0x38]
je 0x680abe
mov rax,r15
lock cmpxchg qword[r10],rcx
test rax,rax
mov r15,rax
je 0x680578
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rcx,r15
jmp 0x680578
xor ecx,ecx
mov dword[rsp+0x30],r10d
xor r9d,r9d
xor r8d,r8d
xor edx,edx
mov qword[rsp+0x28],rax
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
mov r11,qword[rsp+0x28]
mov r10d,dword[rsp+0x30]
je 0x680b20
mov rax,r11
lock cmpxchg qword[r15],rcx
test rax,rax
je 0x680645
mov dword[rsp+0x30],r10d
mov qword[rsp+0x28],rax
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rdx,qword[rsp+0x28]
mov r10d,dword[rsp+0x30]
mov rcx,rdx
jmp 0x680645
mov rsi,rcx
jmp 0x680259
lea rbx,[rsp+0x40]
call fcn.006ea660
lea rdx,[0x00ab75f8]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0x50],1
mov qword[rsp+0x58],rsi
mov qword[rsp+0x68],0
mov qword[rsp+0x60],rax
lea rax,[0x00b714e0]
mov byte[rsp+0x70],0
mov qword[rsp+0x40],rax
call fcn.009472d0
mov rsi,rax
lea rax,[0x00b72450]
mov rcx,rbx
mov qword[rsp+0x40],rax
call fcn.00962490
mov rcx,rsi
call fcn.008da260
mov qword[rsp+0x38],r10
xor r9d,r9d
xor r8d,r8d
xor edx,edx
xor ecx,ecx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov r12,rax
mov r10,qword[rsp+0x38]
je 0x6809eb
mov rax,r15
lock cmpxchg qword[r10],r12
test rax,rax
mov r15,rax
je 0x680733
mov rcx,r12
mov r12,r15
call qword[sym.imp.KERNEL32.dll_CloseHandle]
jmp 0x680733
lea rbx,[rsp+0x40]
call fcn.006ea660
lea rdx,[0x00ab75da]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0x50],0xb
mov qword[rsp+0x58],rsi
mov qword[rsp+0x68],0
mov qword[rsp+0x60],rax
lea rax,[0x00b72480]
mov byte[rsp+0x70],0
mov qword[rsp+0x40],rax
call fcn.00947760
lea rbx,[rsp+0x40]
call fcn.006ea660
lea rdx,[0x00ab75da]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0x50],0xb
mov qword[rsp+0x58],rsi
mov qword[rsp+0x68],0
mov qword[rsp+0x60],rax
lea rax,[0x00b72480]
mov byte[rsp+0x70],0
mov qword[rsp+0x40],rax
call fcn.00947760
xchg dword[rdi],eax
mov eax,0x80000000
lea rbp,[rbx+0x68]
lock xadd dword[rbp],eax
test eax,0x40000000
jne 0x68034f
cmp eax,0x80000000
jne 0x6804c1
jmp 0x68034f
lea rbx,[rsp+0x40]
call fcn.006ea660
lea rdx,[0x00ab75da]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0x50],0xb
mov qword[rsp+0x58],rsi
mov qword[rsp+0x68],0
mov qword[rsp+0x60],rax
lea rax,[0x00b72480]
mov byte[rsp+0x70],0
mov qword[rsp+0x40],rax
call fcn.00947760
lea rsi,[rdi+0x70]
jmp 0x6800dc
lea rbx,[rsp+0x40]
call fcn.006ea660
lea rdx,[0x00ab75da]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0x50],0xb
mov qword[rsp+0x58],rsi
mov qword[rsp+0x68],0
mov qword[rsp+0x60],rax
lea rax,[0x00b72480]
mov byte[rsp+0x70],0
mov qword[rsp+0x40],rax
call fcn.00947760
jmp 0x680971
lea rbx,[rsp+0x40]
call fcn.006ea660
lea rdx,[0x00ab75da]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0x50],0xb
mov qword[rsp+0x58],rsi
mov qword[rsp+0x68],0
mov qword[rsp+0x60],rax
lea rax,[0x00b72480]
mov byte[rsp+0x70],0
mov qword[rsp+0x40],rax
call fcn.00947760
lea rbx,[rsp+0x40]
call fcn.006ea660
lea rdx,[0x00ab75da]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0x50],0xb
mov qword[rsp+0x58],rsi
mov qword[rsp+0x68],0
mov qword[rsp+0x60],rax
lea rax,[0x00b72480]
mov byte[rsp+0x70],0
mov qword[rsp+0x40],rax
call fcn.00947760
lea rax,[0x00b72450]
mov rcx,rbx
mov qword[rsp+0x40],rax
call fcn.00962490
call fcn.00a55e20
jmp 0x680c26
lea rsi,[rbx+0x18]
jmp 0x680201
{% endhighlight %}


[similar_1_ref]: /report/fcn.00680c50@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_2_ref]: /report/fcn.005ba960@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_3_ref]: /report/fcn.005bd550@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_4_ref]: /report/fcn.00579b00@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_5_ref]: /report/fcn.006a0db0@a5905e3c253c25bbaf727a1a18fe8ed1
[virustotal_ref]: https://www.virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1