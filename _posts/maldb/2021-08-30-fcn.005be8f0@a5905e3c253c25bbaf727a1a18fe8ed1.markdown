---
layout: post
title:  "fcn.005be8f0 @ a5905e3c253c25bbaf727a1a18fe8ed1"
date:   2021-08-30 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.005be8f0
- **Origin (md5):** a5905e3c253c25bbaf727a1a18fe8ed1
- **VirusTotal:** [virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1][virustotal_ref]

# Code Tags
<span class="tag" id="THREAD">THREAD</span>


# Similar Functions

1. [fcn.00617220][similar_1_ref] (sim.: 0.9665314161355486)
2. [fcn.006bc410][similar_2_ref] (sim.: 0.9618775434217004)
3. [fcn.006a0db0][similar_3_ref] (sim.: 0.9598684171898131)
4. [fcn.0069ed20][similar_4_ref] (sim.: 0.9586154616752566)
5. [fcn.0067e2f0][similar_5_ref] (sim.: 0.9566706459432731)


# Disassembled Code

{% highlight nasm %}
push r15
push r14
push r13
push r12
push rbp
push rdi
push rsi
push rbx
sub rsp,0x108
lea rax,[rsp+0x60]
mov rsi,rcx
mov qword[rsp+0x38],rax
lea rax,[rsp+0x70]
mov qword[rsp+0x30],rax
nop word[rax+rax]
cmp dword[rsi+0x168],1
mov rcx,qword[rsi+0x80]
je 0x5bea6d
mov edx,0xffffffff
call qword[sym.imp.KERNEL32.dll_WaitForSingleObject]
test eax,eax
sete r13b
test r13b,r13b
je 0x5bea84
call qword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
lea rbp,[rsi+0x6c]
mov r12d,eax
xor eax,eax
lock cmpxchg dword[rbp],eax
cmp r12d,eax
je 0x5bec90
lea rdi,[rsi+0x70]
mov ebx,dword[rsi+0x70]
jmp 0x5be976
mov ebx,eax
mov edx,ebx
mov r8d,ebx
mov rcx,rdi
or edx,0x80000000
call fcn.008eebc0
cmp ebx,eax
jne 0x5be974
test ebx,ebx
js 0x5bee70
xchg dword[rbp],r12d
mov dword[rsi+0x68],1
mov rax,qword[rsi+0x98]
mov rdx,qword[rsi+0xb0]
lea rdi,[rsp+0xc0]
lea rcx,[rsp+0x80]
mov r8,rdi
mov rbx,qword[rax+8]
mov r14d,dword[rax]
mov qword[rax+8],0
mov qword[rsp+0xc0],rax
mov rax,qword[rdx]
mov qword[rsp+0xd8],rdx
lea rdx,[rsi+0x88]
mov qword[rsp+0xc8],rax
add rax,0x200
mov qword[rsp+0xd0],rax
call fcn.00a07860
mov eax,dword[rsi+0x68]
sub eax,1
test eax,eax
mov dword[rsi+0x68],eax
je 0x5bedd0
cmp r14d,4
je 0x5bee53
cmp r14d,6
je 0x5beca0
mov eax,dword[rsi+0x168]
test eax,eax
jne 0x5beaa1
test r14d,r14d
je 0x5beda1
cmp r14d,5
je 0x5bef2a
test rbx,rbx
je 0x5be920
mov rax,qword[rbx]
mov rcx,rbx
call qword[rax+8]
cmp dword[rsi+0x168],1
mov rcx,qword[rsi+0x80]
jne 0x5be934
xor edx,edx
call qword[sym.imp.KERNEL32.dll_WaitForSingleObject]
test eax,eax
sete r13b
test r13b,r13b
jne 0x5be94e
mov r13d,1
mov eax,r13d
add rsp,0x108
pop rbx
pop rsi
pop rdi
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
cmp eax,1
jne 0x5bea47
cmp r14d,2
je 0x5bef37
cmp r14d,3
je 0x5befe2
cmp r14d,1
jne 0x5bea47
lea rdx,[0x00aa94f0]
lea rcx,[0x00aa9454]
call fcn.007502b0
mov r12,rax
mov rax,qword[rsp+0x30]
test r12,r12
mov qword[rsp+0x60],rax
je 0x5bf0c5
mov rcx,r12
call sub.msvcrt.dll_strlen
cmp rax,0xf
mov rbp,rax
mov qword[rsp+0x58],rax
ja 0x5bef9b
cmp rax,1
je 0x5bef4d
test rax,rax
mov rdx,qword[rsp+0x30]
jne 0x5bf1f3
mov qword[rsp+0x68],rax
mov byte[rdx+rax],0
mov rcx,qword[rsi+0x160]
test rcx,rcx
je 0x5beb35
call fcn.006709c0
cmp dword[rsi+0x168],2
je 0x5bec72
lea r15,[rsi+0x3c]
mov dword[rsi+0x168],2
call qword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
mov ecx,eax
mov dword[rsp+0x4c],eax
xor eax,eax
lock cmpxchg dword[r15],eax
cmp ecx,eax
je 0x5befd9
lea r12,[rsi+0x40]
mov ebp,dword[rsi+0x40]
jmp 0x5beb76
mov ebp,eax
mov edx,ebp
mov r8d,ebp
mov rcx,r12
or edx,0x80000000
call fcn.008eebc0
cmp ebp,eax
jne 0x5beb74
test ebp,ebp
js 0x5bf12a
mov eax,dword[rsp+0x4c]
xchg dword[r15],eax
mov dword[rsi+0x38],1
lea rdx,[rsi+8]
lea rcx,[rsi+0x20]
lea r13,[0x00937200]
call fcn.00a21530
mov r12,qword[rsi+0x28]
mov rbp,qword[rsi+0x20]
mov r14,qword[rsp+0x38]
cmp rbp,r12
jne 0x5bebd9
jmp 0x5bebf9
add rbp,8
cmp r12,rbp
je 0x5bebf9
mov rcx,qword[rbp]
mov rax,qword[rcx]
mov rax,qword[rax+0x48]
cmp rax,r13
je 0x5bebd0
add rbp,8
xor edx,edx
mov r8,r14
call rax
cmp r12,rbp
jne 0x5bebd9
mov eax,dword[rsi+0x38]
sub eax,1
test eax,eax
mov dword[rsi+0x38],eax
jne 0x5bec72
xchg dword[r15],eax
mov eax,0x80000000
lea r12,[rsi+0x40]
lock xadd dword[r12],eax
test eax,0x40000000
jne 0x5bec72
cmp eax,0x80000000
je 0x5bec72
mov ebp,dword[rsi+0x40]
jmp 0x5bec32
mov ebp,eax
mov edx,ebp
mov r8d,ebp
mov rcx,r12
or edx,0x40000000
call fcn.008eebc0
cmp ebp,eax
jne 0x5bec30
and ebp,0x40000000
jne 0x5bec72
lea r12,[rsi+0x48]
xor eax,eax
lock cmpxchg qword[r12],rax
test rax,rax
mov rbp,rax
mov rcx,rax
je 0x5bf432
call qword[sym.imp.KERNEL32.dll_SetEvent]
mov rcx,qword[rsp+0x60]
cmp rcx,qword[rsp+0x30]
je 0x5bea47
call fcn.00a5af30
jmp 0x5bea47
add dword[rsi+0x68],1
jmp 0x5be9a0
movzx eax,byte[rsi+0x16c]
test al,al
jne 0x5bea47
call qword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
mov r15d,eax
xor eax,eax
lock cmpxchg dword[rbp],eax
cmp r15d,eax
je 0x5bef44
lea r14,[rsi+0x70]
mov r12d,dword[rsi+0x70]
jmp 0x5becd5
mov r12d,eax
mov edx,r12d
mov r8d,r12d
mov rcx,r14
or edx,0x80000000
call fcn.008eebc0
cmp r12d,eax
jne 0x5becd2
test r12d,r12d
js 0x5beff3
xchg dword[rbp],r15d
mov dword[rsi+0x68],1
cmp qword[rbx+0x18],0
je 0x5bf37b
lea rcx,[rbx+8]
call qword[rbx+0x20]
mov eax,dword[rsi+0x68]
sub eax,1
test eax,eax
mov dword[rsi+0x68],eax
jne 0x5bea50
xchg dword[rbp],eax
mov eax,0x80000000
lea rbp,[rsi+0x70]
lock xadd dword[rbp],eax
test eax,0x40000000
jne 0x5bea50
cmp eax,0x80000000
je 0x5bea50
mov r12d,dword[rsi+0x70]
jmp 0x5bed55
mov r12d,eax
mov edx,r12d
mov r8d,r12d
mov rcx,rbp
or edx,0x40000000
call fcn.008eebc0
cmp r12d,eax
jne 0x5bed52
and r12d,0x40000000
jne 0x5bea50
lea r12,[rsi+0x78]
xor eax,eax
lock cmpxchg qword[r12],rax
test rax,rax
mov rbp,rax
mov rcx,rax
je 0x5bf25c
call qword[sym.imp.KERNEL32.dll_SetEvent]
jmp 0x5bea50
movzx eax,byte[rbx+0x6c]
lea rdx,[rbx+8]
lea r9,[rbx+0x48]
lea r8,[rbx+0x28]
mov rcx,rsi
mov dword[rsp+0x28],eax
mov eax,dword[rbx+0x68]
mov dword[rsp+0x20],eax
call fcn.005bcbe0
jmp 0x5bea50
xchg dword[rbp],eax
mov eax,0x80000000
lea r12,[rsi+0x70]
lock xadd dword[r12],eax
test eax,0x40000000
jne 0x5bea16
cmp eax,0x80000000
je 0x5bea16
mov r15d,dword[rsi+0x70]
jmp 0x5bee03
mov r15d,eax
mov edx,r15d
mov r8d,r15d
mov rcx,r12
or edx,0x40000000
call fcn.008eebc0
cmp r15d,eax
jne 0x5bee00
and r15d,0x40000000
jne 0x5bea16
lea r15,[rsi+0x78]
xor eax,eax
lock cmpxchg qword[r15],rax
test rax,rax
mov r12,rax
je 0x5bef60
mov rcx,r12
call qword[sym.imp.KERNEL32.dll_SetEvent]
cmp r14d,4
jne 0x5bea20
xor r13d,r13d
test rbx,rbx
je 0x5bea8a
mov rax,qword[rbx]
mov rcx,rbx
call qword[rax+8]
jmp 0x5bea8a
mov edx,dword[rsi+0x70]
jmp 0x5bee77
mov edx,eax
lea eax,[rdx+1]
mov ebx,edx
or ebx,0x80000000
test edx,edx
cmovs ebx,eax
mov eax,edx
lock cmpxchg dword[rdi],ebx
cmp eax,edx
jne 0x5bee75
shr edx,0x1f
test dl,dl
je 0x5be995
mov eax,ebx
shr eax,0x1f
test al,al
je 0x5be995
lea r15,[rsi+0x78]
xor eax,eax
lock cmpxchg qword[r15],rax
test rax,rax
mov r14,rax
je 0x5bf0f0
mov r15d,0xffffffff
nop word cs:[rax+rax]
xor r8d,r8d
mov edx,r15d
mov rcx,r14
call qword[sym.imp.KERNEL32.dll_WaitForSingleObjectEx]
and ebx,0x7fffffff
or ebx,0x40000000
mov edx,ebx
test edx,edx
js 0x5bef14
lea ecx,[rdx-1]
mov eax,edx
and ecx,0x3fffffff
or ecx,0x80000000
lock cmpxchg dword[rdi],ecx
cmp eax,edx
je 0x5be995
mov edx,eax
test edx,edx
jns 0x5beef1
mov ecx,edx
mov eax,edx
and ecx,0xbfffffff
lock cmpxchg dword[rdi],ecx
cmp eax,edx
jne 0x5bef0e
mov ebx,eax
jmp 0x5beed0
mov rcx,rsi
call fcn.005ba360
jmp 0x5bea47
mov rcx,rsi
call fcn.005bc600
jmp 0x5bea47
add dword[rsi+0x68],1
jmp 0x5bed02
movzx edx,byte[r12]
mov byte[rsp+0x70],dl
mov rdx,qword[rsp+0x30]
jmp 0x5beb1b
xor ecx,ecx
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
je 0x5bf3c9
mov rax,r12
lock cmpxchg qword[r15],rcx
test rax,rax
mov r12,rax
je 0x5bf0bd
call qword[sym.imp.KERNEL32.dll_CloseHandle]
jmp 0x5bee40
mov rcx,qword[rsp+0x38]
lea rdx,[rsp+0x58]
xor r8d,r8d
call fcn.00a2dfc0
mov rdx,qword[rsp+0x58]
mov qword[rsp+0x60],rax
mov qword[rsp+0x70],rdx
mov rdx,r12
mov r8,rbp
mov rcx,rax
call sub.msvcrt.dll_memcpy
mov rax,qword[rsp+0x58]
mov rdx,qword[rsp+0x60]
jmp 0x5beb1b
add dword[rsi+0x38],1
jmp 0x5beba3
mov rdx,qword[rbx+8]
mov rcx,rsi
call fcn.005bd550
jmp 0x5bee5f
mov edx,dword[rsi+0x70]
jmp 0x5beffa
mov edx,eax
lea eax,[rdx+1]
mov r12d,edx
or r12d,0x80000000
test edx,edx
cmovs r12d,eax
mov eax,edx
lock cmpxchg dword[r14],r12d
cmp eax,edx
jne 0x5beff8
mov eax,r12d
shr eax,0x1f
test al,al
je 0x5becf7
shr edx,0x1f
test dl,dl
je 0x5becf7
lea rax,[rsi+0x78]
mov rcx,rax
mov qword[rsp+0x40],rax
xor eax,eax
lock cmpxchg qword[rcx],rax
test rax,rax
mov r13,rax
je 0x5bf380
mov rax,qword[sym.imp.KERNEL32.dll_WaitForSingleObjectEx]
mov qword[rsp+0x40],rax
xor r8d,r8d
mov edx,0xffffffff
mov rcx,r13
call rax
mov edx,r12d
and edx,0x7fffffff
or edx,0x40000000
test edx,edx
js 0x5bf0a0
lea ecx,[rdx-1]
mov eax,edx
and ecx,0x3fffffff
or ecx,0x80000000
lock cmpxchg dword[r14],ecx
cmp edx,eax
je 0x5becf7
mov edx,eax
test edx,edx
jns 0x5bf07c
mov ecx,edx
mov eax,edx
and ecx,0xbfffffff
lock cmpxchg dword[r14],ecx
cmp eax,edx
jne 0x5bf09a
mov r12d,eax
mov rax,qword[rsp+0x40]
jmp 0x5bf05c
mov r12,rcx
jmp 0x5bee40
lea rcx,[0x00aa93e0]
call fcn.00a4f4e0
mov rsi,rax
test rbx,rbx
je 0x5bf0e2
mov rdx,qword[rbx]
mov rcx,rbx
call qword[rdx+8]
mov rcx,rsi
call fcn.008da260
nop word[rax+rax]
xor r9d,r9d
xor r8d,r8d
xor edx,edx
xor ecx,ecx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
je 0x5bf557
xor eax,eax
lock cmpxchg qword[r15],rcx
test rax,rax
mov r14,rax
je 0x5bf42a
call qword[sym.imp.KERNEL32.dll_CloseHandle]
jmp 0x5beec0
mov edx,dword[rsi+0x40]
jmp 0x5bf131
mov edx,eax
lea eax,[rdx+1]
mov ebp,edx
or ebp,0x80000000
test edx,edx
cmovs ebp,eax
mov eax,edx
lock cmpxchg dword[r12],ebp
cmp eax,edx
jne 0x5bf12f
shr edx,0x1f
test dl,dl
je 0x5beb95
mov eax,ebp
shr eax,0x1f
test al,al
je 0x5beb95
lea r14,[rsi+0x48]
xor eax,eax
lock cmpxchg qword[r14],rax
test rax,rax
mov r13,rax
mov r9,rax
je 0x5bf21f
mov rax,qword[sym.imp.KERNEL32.dll_WaitForSingleObjectEx]
mov r14d,0xffffffff
mov r13,r9
mov qword[rsp+0x40],rax
mov edx,r14d
xor r8d,r8d
mov rcx,r13
call rax
mov edx,ebp
and edx,0x7fffffff
or edx,0x40000000
test edx,edx
js 0x5bf1d6
lea ecx,[rdx-1]
mov eax,edx
and ecx,0x3fffffff
or ecx,0x80000000
lock cmpxchg dword[r12],ecx
cmp edx,eax
mov ebp,eax
je 0x5beb95
mov edx,ebp
jmp 0x5bf1ad
mov ecx,edx
mov eax,edx
and ecx,0xbfffffff
lock cmpxchg dword[r12],ecx
cmp eax,edx
mov ebp,eax
jne 0x5bf1d2
mov rax,qword[rsp+0x40]
jmp 0x5bf194
mov rax,rdx
jmp 0x5befbc
xor r9d,r9d
xor r8d,r8d
xor edx,edx
xor ecx,ecx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov r9,rax
je 0x5bf29b
mov rax,r13
lock cmpxchg qword[r14],r9
test rax,rax
mov r13,rax
je 0x5bf17f
mov rcx,r9
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov r9,r13
jmp 0x5bf17f
xor ecx,ecx
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
je 0x5bf2fc
mov rax,rbp
lock cmpxchg qword[r12],rcx
test rax,rax
mov rbp,rax
je 0x5bed96
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rcx,rbp
jmp 0x5bed96
call fcn.006ea660
lea rdx,[0x00aa940a]
mov rcx,rdi
mov rbx,rax
call fcn.009de540
lea rax,[rdi+0x30]
mov rcx,rdi
mov dword[rsp+0xd0],0xb
mov qword[rsp+0xd8],rbx
mov qword[rsp+0xe8],0
mov qword[rsp+0xe0],rax
lea rax,[0x00b72480]
mov byte[rsp+0xf0],0
mov qword[rsp+0xc0],rax
call fcn.00947760
call fcn.006ea660
lea rdx,[0x00aa940a]
mov rcx,rdi
mov rbx,rax
call fcn.009de540
lea rax,[rdi+0x30]
mov rcx,rdi
mov dword[rsp+0xd0],0xb
mov qword[rsp+0xd8],rbx
mov qword[rsp+0xe8],0
mov qword[rsp+0xe0],rax
lea rax,[0x00b72480]
mov byte[rsp+0xf0],0
mov qword[rsp+0xc0],rax
call fcn.00947760
lea rax,[0x00b72450]
mov rcx,rdi
mov qword[rsp+0xc0],rax
call fcn.00962490
call fcn.00a55e20
jmp 0x5bf35d
call fcn.00a4fed0
xor r9d,r9d
xor r8d,r8d
xor edx,edx
xor ecx,ecx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov r13,rax
je 0x5bf471
mov rcx,qword[rsp+0x40]
xor eax,eax
lock cmpxchg qword[rcx],r13
test rax,rax
mov qword[rsp+0x40],rax
je 0x5bf050
mov rcx,r13
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov r13,qword[rsp+0x40]
jmp 0x5bf050
call fcn.006ea660
lea rdx,[0x00aa940a]
mov rcx,rdi
mov rbx,rax
call fcn.009de540
lea rax,[rdi+0x30]
mov rcx,rdi
mov dword[rsp+0xd0],0xb
mov qword[rsp+0xd8],rbx
mov qword[rsp+0xe8],0
mov qword[rsp+0xe0],rax
lea rax,[0x00b72480]
mov byte[rsp+0xf0],0
mov qword[rsp+0xc0],rax
call fcn.00947760
mov r14,rcx
jmp 0x5beec0
xor ecx,ecx
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
je 0x5bf4d2
mov rax,rbp
lock cmpxchg qword[r12],rcx
test rax,rax
mov rbp,rax
je 0x5bec6c
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rcx,rbp
jmp 0x5bec6c
call fcn.006ea660
lea rdx,[0x00aa940a]
mov rcx,rdi
mov rsi,rax
call fcn.009de540
lea rax,[rdi+0x30]
mov rcx,rdi
mov dword[rsp+0xd0],0xb
mov qword[rsp+0xd8],rsi
mov qword[rsp+0xe8],0
mov qword[rsp+0xe0],rax
lea rax,[0x00b72480]
mov byte[rsp+0xf0],0
mov qword[rsp+0xc0],rax
call fcn.00947760
call fcn.006ea660
lea rdx,[0x00aa940a]
mov rcx,rdi
mov rbx,rax
call fcn.009de540
lea rax,[rdi+0x30]
mov rcx,rdi
mov dword[rsp+0xd0],0xb
mov qword[rsp+0xd8],rbx
mov qword[rsp+0xe8],0
mov qword[rsp+0xe0],rax
lea rax,[0x00b72480]
mov byte[rsp+0xf0],0
mov qword[rsp+0xc0],rax
call fcn.00947760
mov rsi,rax
lea rax,[0x00b72450]
mov rcx,rdi
mov qword[rsp+0xc0],rax
call fcn.00962490
jmp 0x5bf0d4
lea rsi,[rsp+0x80]
call fcn.006ea660
lea rdx,[0x00aa940a]
mov rcx,rsi
mov rbx,rax
call fcn.009de540
lea rax,[rsi+0x30]
mov rcx,rsi
mov dword[rsp+0x90],0xb
mov qword[rsp+0x98],rbx
mov qword[rsp+0xa8],0
mov qword[rsp+0xa0],rax
lea rax,[0x00b72480]
mov byte[rsp+0xb0],0
mov qword[rsp+0x80],rax
call fcn.00947760
jmp 0x5bf35d
{% endhighlight %}


[similar_1_ref]: /report/fcn.00617220@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_2_ref]: /report/fcn.006bc410@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_3_ref]: /report/fcn.006a0db0@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_4_ref]: /report/fcn.0069ed20@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_5_ref]: /report/fcn.0067e2f0@a5905e3c253c25bbaf727a1a18fe8ed1
[virustotal_ref]: https://www.virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1