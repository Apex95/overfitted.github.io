---
layout: post
title:  "fcn.005774f6 @ c60344b51fa39a329b92557d24ff7670"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.005774f6
- **Origin (md5):** c60344b51fa39a329b92557d24ff7670
- **VirusTotal:** [virustotal.com/gui/file/c60344b51fa39a329b92557d24ff7670][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [155.38616943359375, -0.654299795627594, '<b><a href="/report/fcn.005774f6@c60344b51fa39a329b92557d24ff7670">fcn.005774f6</a><br>@c60344b51fa39a329b92557d24ff7670</b><br>', 'point { fill-color: #e0440e; }'],
[-68.52611541748047, -173.3063201904297, '<b><a href="/report/fcn.004940ab@289859175c221b107317af7727d26c17">fcn.004940ab</a><br>@289859175c221b107317af7727d26c17</b><br>', 'null'],
[93.27269744873047, -151.61949157714844, '<b><a href="/report/fcn.0058cd66@c60344b51fa39a329b92557d24ff7670">fcn.0058cd66</a><br>@c60344b51fa39a329b92557d24ff7670</b><br>', 'null'],
[-106.08806610107422, 106.9371109008789, '<b><a href="/report/fcn.004abd96@279a61b1e76da49531f1f16fd1102a2d">fcn.004abd96</a><br>@279a61b1e76da49531f1f16fd1102a2d</b><br>', 'null'],
[55.7100830078125, 128.62481689453125, '<b><a href="/report/fcn.004aabb0@279a61b1e76da49531f1f16fd1102a2d">fcn.004aabb0</a><br>@279a61b1e76da49531f1f16fd1102a2d</b><br>', 'null'],
[-6.409965991973877, -22.341676712036133, '<b><a href="/report/fcn.0048b9ff@289859175c221b107317af7727d26c17">fcn.0048b9ff</a><br>@289859175c221b107317af7727d26c17</b><br>', 'null'],
[-168.2075653076172, -44.027587890625, '<b><a href="/report/fcn.1011bd6c@89dc67d2f980e8488f97b1bf8cb24258">fcn.1011bd6c</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

mov edi, edi
push ebp
mov ebp, esp
sub esp, 0x34
push ebx
xor ebx, ebx
test byte[ebp+0x10], 0x80
push esi
push edi
mov esi, eax
mov dword[ebp-0x20], ebx
mov byte[ebp-2], bl
mov dword[ebp-0x34], 0xc
mov dword[ebp-0x30], ebx
je off.b46
mov dword[ebp-0x2c], ebx
mov byte[ebp-1], 0x10
jmp off.b56
mov dword[ebp-0x2c], 1
mov byte[ebp-1], bl
lea eax, [ebp-0x20]
push eax
call fcn.00574747
pop ecx
test eax, eax
je off.b83
push ebx
push ebx
push ebx
push ebx
push ebx
call fcn.005715f7
add esp, 0x14
mov ecx, dword[ebp+0x10]
mov eax, 0x8000
test eax, ecx
jne off.b112
test ecx, 0x74000
jne off.b108
cmp dword[ebp-0x20], eax
je off.b112
or byte[ebp-1], 0x80
mov eax, ecx
and eax, 3
sub eax, ebx
mov edx, 0xc0000000
mov edi, 0x80000000
je off.b202
dec eax
je off.b180
dec eax
je off.b175
call fcn.00575c6d
mov dword[eax], ebx
or dword[esi], 0xffffffff
call fcn.00575c5a
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov dword[eax], esi
call fcn.0057171f
add esp, 0x14
jmp off.b1456
mov dword[ebp-8], edx
jmp off.b205
test cl, 8
je off.b193
test ecx, 0x70000
jne off.b175
mov dword[ebp-8], 0x40000000
jmp off.b205
mov dword[ebp-8], edi
mov eax, dword[ebp+0x14]
push 0x10
pop ecx
sub eax, ecx
je off.b270
sub eax, ecx
je off.b261
sub eax, ecx
je off.b252
sub eax, ecx
je off.b243
sub eax, 0x40
jne off.b137
cmp dword[ebp-8], edi
sete al
mov dword[ebp-0x10], eax
jmp off.b273
mov dword[ebp-0x10], 3
jmp off.b273
mov dword[ebp-0x10], 2
jmp off.b273
mov dword[ebp-0x10], 1
jmp off.b273
mov dword[ebp-0x10], ebx
mov eax, dword[ebp+0x10]
mov edx, 0x700
and eax, edx
mov ecx, 0x400
cmp eax, ecx
mov edi, 0x100
jg off.b356
je off.b347
cmp eax, ebx
je off.b347
cmp eax, edi
je off.b338
cmp eax, 0x200
je off.b466
cmp eax, 0x300
jne off.b137
mov dword[ebp-0x14], 2
jmp off.b385
mov dword[ebp-0x14], 4
jmp off.b385
mov dword[ebp-0x14], 3
jmp off.b385
cmp eax, 0x500
je off.b378
cmp eax, 0x600
je off.b466
cmp eax, edx
jne off.b137
mov dword[ebp-0x14], 1
mov eax, dword[ebp+0x10]
mov dword[ebp-0xc], 0x80
test edi, eax
je off.b421
mov ecx, dword[0x60f7d0]
not ecx
and ecx, dword[ebp+0x18]
test cl, cl
js off.b421
mov dword[ebp-0xc], 1
test al, 0x40
je off.b443
or dword[ebp-0xc], 0x4000000
or dword[ebp-8], 0x10000
or dword[ebp-0x10], 4
test eax, 0x1000
je off.b453
or dword[ebp-0xc], edi
test al, 0x20
je off.b475
or dword[ebp-0xc], 0x8000000
jmp off.b486
mov dword[ebp-0x14], 5
jmp off.b385
test al, 0x10
je off.b486
or dword[ebp-0xc], 0x10000000
call fcn.005782cb
mov dword[esi], eax
cmp eax, 0xffffffff
jne off.b524
call fcn.00575c6d
mov dword[eax], ebx
or dword[esi], 0xffffffff
call fcn.00575c5a
mov dword[eax], 0x18
jmp off.b666
mov eax, dword[ebp+8]
mov edi, dword[sym.imp.KERNEL32.dll_CreateFileW]
push ebx
push dword[ebp-0xc]
mov dword[eax], 1
push dword[ebp-0x14]
lea eax, [ebp-0x34]
push eax
push dword[ebp-0x10]
push dword[ebp-8]
push dword[ebp+0xc]
call edi
mov dword[ebp-0x1c], eax
cmp eax, 0xffffffff
jne off.b678
mov ecx, dword[ebp-8]
mov eax, 0xc0000000
and ecx, eax
cmp ecx, eax
jne off.b626
test byte[ebp+0x10], 1
je off.b626
and dword[ebp-8], 0x7fffffff
push ebx
push dword[ebp-0xc]
lea eax, [ebp-0x34]
push dword[ebp-0x14]
push eax
push dword[ebp-0x10]
push dword[ebp-8]
push dword[ebp+0xc]
call edi
mov dword[ebp-0x1c], eax
cmp eax, 0xffffffff
jne off.b678
mov esi, dword[esi]
mov eax, esi
sar eax, 5
mov eax, dword[eax*4+0x611720]
and esi, 0x1f
shl esi, 6
lea eax, [eax+esi+4]
and byte[eax], 0xfe
call dword[sym.imp.KERNEL32.dll_GetLastError]
push eax
call fcn.00575c80
pop ecx
call fcn.00575c5a
mov eax, dword[eax]
jmp off.b1819
push dword[ebp-0x1c]
call dword[sym.imp.KERNEL32.dll_GetFileType]
cmp eax, ebx
jne off.b759
mov esi, dword[esi]
mov eax, esi
sar eax, 5
mov eax, dword[eax*4+0x611720]
and esi, 0x1f
shl esi, 6
lea eax, [eax+esi+4]
and byte[eax], 0xfe
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov esi, eax
push esi
call fcn.00575c80
pop ecx
push dword[ebp-0x1c]
call dword[sym.imp.KERNEL32.dll_CloseHandle]
cmp esi, ebx
jne off.b666
call fcn.00575c5a
mov dword[eax], 0xd
jmp off.b666
cmp eax, 2
jne off.b770
or byte[ebp-1], 0x40
jmp off.b779
cmp eax, 3
jne off.b779
or byte[ebp-1], 8
push dword[ebp-0x1c]
push dword[esi]
call fcn.00578086
mov eax, dword[esi]
mov edx, eax
and eax, 0x1f
sar edx, 5
mov edx, dword[edx*4+0x611720]
pop ecx
shl eax, 6
pop ecx
mov cl, byte[ebp-1]
or cl, 1
mov byte[edx+eax+4], cl
mov eax, dword[esi]
mov edx, eax
and eax, 0x1f
sar edx, 5
mov edx, dword[edx*4+0x611720]
shl eax, 6
lea eax, [edx+eax+0x24]
and byte[eax], 0x80
mov byte[ebp-3], cl
and byte[ebp-3], 0x48
mov byte[ebp-1], cl
jne off.b993
test cl, 0x80
je off.b1563
test byte[ebp+0x10], 2
je off.b993
push 2
or edi, 0xffffffff
push edi
push dword[esi]
call fcn.0058357f
add esp, 0xc
mov dword[ebp-0x18], eax
cmp eax, edi
jne off.b927
call fcn.00575c6d
cmp dword[eax], 0x83
je off.b993
push dword[esi]
call fcn.00576e2e
jmp off.b665
push 1
lea eax, [ebp-0x24]
push eax
push dword[esi]
mov dword[ebp-0x24], ebx
call fcn.00575f48
add esp, 0xc
test eax, eax
jne off.b977
cmp word[ebp-0x24], 0x1a
jne off.b977
mov eax, dword[ebp-0x18]
cdq
push edx
push eax
push dword[esi]
call fcn.00577d02
add esp, 0xc
cmp eax, edi
je off.b915
push ebx
push ebx
push dword[esi]
call fcn.0058357f
add esp, 0xc
cmp eax, edi
je off.b915
test byte[ebp-1], 0x80
je off.b1563
mov edi, 0x74000
mov ecx, 0x4000
test dword[ebp+0x10], edi
jne off.b1033
mov eax, dword[ebp-0x20]
and eax, edi
jne off.b1030
or dword[ebp+0x10], ecx
jmp off.b1033
or dword[ebp+0x10], eax
mov eax, dword[ebp+0x10]
and eax, edi
cmp eax, ecx
je off.b1110
cmp eax, 0x10000
je off.b1090
cmp eax, 0x14000
je off.b1090
cmp eax, 0x20000
je off.b1104
cmp eax, 0x24000
je off.b1104
cmp eax, 0x40000
je off.b1084
cmp eax, 0x44000
jne off.b1113
mov byte[ebp-2], 1
jmp off.b1113
mov ecx, dword[ebp+0x10]
mov eax, 0x301
and ecx, eax
cmp ecx, eax
jne off.b1113
mov byte[ebp-2], 2
jmp off.b1113
mov byte[ebp-2], bl
test dword[ebp+0x10], 0x70000
je off.b1563
test byte[ebp-1], 0x40
mov dword[ebp-0x18], ebx
jne off.b1563
mov eax, dword[ebp-8]
mov ecx, 0xc0000000
and eax, ecx
cmp eax, 0x40000000
je off.b1343
cmp eax, 0x80000000
je off.b1286
cmp eax, ecx
jne off.b1563
mov eax, dword[ebp-0x14]
cmp eax, ebx
jbe off.b1563
cmp eax, 2
jbe off.b1205
cmp eax, 4
jbe off.b1244
cmp eax, 5
jne off.b1563
movsx eax, byte[ebp-2]
xor edi, edi
dec eax
je off.b1512
dec eax
jne off.b1563
mov dword[ebp-0x18], 0xfeff
mov dword[ebp-0x14], 2
jmp off.b1526
push 2
push ebx
push ebx
push dword[esi]
call fcn.00575daa
add esp, 0x10
or eax, edx
je off.b1205
push ebx
push ebx
push ebx
push dword[esi]
call fcn.00575daa
and eax, edx
add esp, 0x10
cmp eax, 0xffffffff
je off.b915
push 3
lea eax, [ebp-0x18]
push eax
push dword[esi]
call fcn.00575f48
add esp, 0xc
cmp eax, 0xffffffff
je off.b915
cmp eax, 2
je off.b1423
cmp eax, 3
jne off.b1498
cmp dword[ebp-0x18], 0xbfbbef
jne off.b1423
mov byte[ebp-2], 1
jmp off.b1563
mov eax, dword[ebp-0x14]
cmp eax, ebx
jbe off.b1563
cmp eax, 2
jbe off.b1205
cmp eax, 4
ja off.b1196
push 2
push ebx
push ebx
push dword[esi]
call fcn.00575daa
add esp, 0x10
or eax, edx
je off.b1205
push ebx
push ebx
push ebx
push dword[esi]
call fcn.00575daa
add esp, 0x10
and eax, edx
cmp eax, 0xffffffff
jne off.b1563
jmp off.b915
mov eax, dword[ebp-0x18]
and eax, 0xffff
cmp eax, 0xfffe
jne off.b1463
push dword[esi]
call fcn.00576e2e
pop ecx
call fcn.00575c5a
push 0x16
pop esi
mov dword[eax], esi
mov eax, esi
jmp off.b1819
cmp eax, 0xfeff
jne off.b1498
push ebx
push 2
push dword[esi]
call fcn.0058357f
add esp, 0xc
cmp eax, 0xffffffff
je off.b915
mov byte[ebp-2], 2
jmp off.b1563
push ebx
push ebx
push dword[esi]
call fcn.0058357f
add esp, 0xc
jmp off.b1409
mov dword[ebp-0x18], 0xbfbbef
mov dword[ebp-0x14], 3
mov eax, dword[ebp-0x14]
sub eax, edi
push eax
lea eax, [ebp+edi-0x18]
push eax
push dword[esi]
call fcn.00576d52
add esp, 0xc
cmp eax, 0xffffffff
je off.b915
add edi, eax
cmp dword[ebp-0x14], edi
jg off.b1526
mov eax, dword[esi]
mov ecx, eax
sar ecx, 5
mov ecx, dword[ecx*4+0x611720]
and eax, 0x1f
shl eax, 6
lea eax, [ecx+eax+0x24]
mov cl, byte[eax]
xor cl, byte[ebp-2]
and cl, 0x7f
xor byte[eax], cl
mov eax, dword[esi]
mov ecx, eax
sar ecx, 5
mov ecx, dword[ecx*4+0x611720]
and eax, 0x1f
shl eax, 6
lea eax, [ecx+eax+0x24]
mov ecx, dword[ebp+0x10]
mov dl, byte[eax]
shr ecx, 0x10
shl cl, 7
and dl, 0x7f
or cl, dl
mov byte[eax], cl
cmp byte[ebp-3], bl
jne off.b1677
test byte[ebp+0x10], 8
je off.b1677
mov eax, dword[esi]
mov ecx, eax
and eax, 0x1f
sar ecx, 5
mov ecx, dword[ecx*4+0x611720]
shl eax, 6
lea eax, [ecx+eax+4]
or byte[eax], 0x20
mov edi, dword[ebp-8]
mov eax, 0xc0000000
mov ecx, edi
and ecx, eax
cmp ecx, eax
jne off.b1817
test byte[ebp+0x10], 1
je off.b1817
push dword[ebp-0x1c]
call dword[sym.imp.KERNEL32.dll_CloseHandle]
push ebx
push dword[ebp-0xc]
lea eax, [ebp-0x34]
push 3
push eax
push dword[ebp-0x10]
and edi, 0x7fffffff
push edi
push dword[ebp+0xc]
call dword[sym.imp.KERNEL32.dll_CreateFileW]
cmp eax, 0xffffffff
jne off.b1794
call dword[sym.imp.KERNEL32.dll_GetLastError]
push eax
call fcn.00575c80
mov eax, dword[esi]
mov ecx, eax
and eax, 0x1f
sar ecx, 5
mov ecx, dword[ecx*4+0x611720]
shl eax, 6
lea eax, [ecx+eax+4]
and byte[eax], 0xfe
push dword[esi]
call fcn.00578107
pop ecx
jmp off.b665
mov esi, dword[esi]
mov ecx, esi
sar ecx, 5
mov ecx, dword[ecx*4+0x611720]
and esi, 0x1f
shl esi, 6
mov dword[esi+ecx], eax
mov eax, ebx
pop edi
pop esi
pop ebx
leave
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/c60344b51fa39a329b92557d24ff7670