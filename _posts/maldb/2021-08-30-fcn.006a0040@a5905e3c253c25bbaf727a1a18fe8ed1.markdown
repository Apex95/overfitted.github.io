---
layout: post
title:  "fcn.006a0040 @ a5905e3c253c25bbaf727a1a18fe8ed1"
date:   2021-08-30 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.006a0040
- **Origin (md5):** a5905e3c253c25bbaf727a1a18fe8ed1
- **VirusTotal:** [virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1][virustotal_ref]

# Code Tags
<span class="tag" id="THREAD">THREAD</span>


# Similar Functions

1. [fcn.005c0130][similar_1_ref] (sim.: 0.9637845180084071)
2. [fcn.006bc410][similar_2_ref] (sim.: 0.9617583163035949)
3. [fcn.006585f0][similar_3_ref] (sim.: 0.9615548027538565)
4. [fcn.006b26e0][similar_4_ref] (sim.: 0.9581881432221206)
5. [fcn.0068a630][similar_5_ref] (sim.: 0.9561170164223612)


# Disassembled Code

{% highlight nasm %}
push r15
push r14
push r13
push r12
push rbp
push rdi
push rsi
push rbx
sub rsp,0xa8
mov rsi,rcx
mov ecx,0x170
mov r13,rdx
call fcn.00a5af70
xor r8d,r8d
xor edx,edx
mov rcx,rax
mov rbx,rax
call fcn.005bf5f0
lea rax,[rsi+0xb0]
lea rbp,[rbx+0x3c]
mov qword[rsi+0x160],rbx
mov qword[rsp+0x50],rax
call qword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
mov r12d,eax
xor eax,eax
lock cmpxchg dword[rbp],eax
cmp r12d,eax
je 0x6a0361
lea rdi,[rbx+0x40]
mov r14d,dword[rbx+0x40]
jmp 0x6a00b3
mov r14d,eax
mov edx,r14d
mov r8d,r14d
mov rcx,rdi
or edx,0x80000000
call fcn.008eebc0
cmp r14d,eax
jne 0x6a00b0
test r14d,r14d
js 0x6a049f
xchg dword[rbp],r12d
mov dword[rbx+0x38],1
mov r9,qword[rbx+0x10]
mov rcx,qword[rbx+8]
mov r8,r9
sub r8,rcx
mov rdx,r8
sar r8,5
sar rdx,3
test r8,r8
jle 0x6a057d
mov rdx,qword[rsp+0x50]
cmp qword[rcx],rdx
je 0x6a0585
cmp qword[rcx+8],rdx
je 0x6a0596
cmp qword[rcx+0x10],rdx
je 0x6a01b9
cmp qword[rcx+0x18],rdx
je 0x6a058d
shl r8,5
add r8,rcx
jmp 0x6a0167
cmp qword[rcx+0x20],rdx
je 0x6a01c0
cmp qword[rax+8],rdx
je 0x6a0382
cmp qword[rax+0x10],rdx
je 0x6a0390
cmp qword[rax+0x18],rdx
je 0x6a03a0
mov rcx,rax
lea rax,[rcx+0x20]
cmp rax,r8
jne 0x6a0140
mov rdx,r9
sub rdx,r8
sar rdx,3
cmp rdx,2
je 0x6a048b
cmp rdx,3
je 0x6a0477
cmp rdx,1
je 0x6a0464
cmp qword[rbx+0x18],r9
je 0x6a059f
test r9,r9
mov rax,qword[rsp+0x50]
je 0x6a01af
mov qword[r9],rax
add r9,8
mov qword[rbx+0x10],r9
jmp 0x6a01c5
lea rax,[rcx+0x10]
nop dword[rax]
cmp r9,rax
je 0x6a0198
mov eax,dword[rbx+0x38]
sub eax,1
test eax,eax
mov dword[rbx+0x38],eax
je 0x6a03b0
movzx r8d,byte[rsi+0x168]
mov rax,qword[0x00b3d1f0]
mov r9d,1
mov rcx,qword[rsi+0x160]
mov rdx,r13
lea rbp,[rsp+0x40]
lea rdi,[rsp+0x60]
mov qword[rsp+0x20],rax
mov rbx,rbp
call fcn.005c0130
lea r8,[0x00ab9778]
movzx r9d,ax
mov edx,8
mov rcx,rbp
call fcn.00698100
lea rax,[rdi+0x10]
mov qword[rsp+0x60],rax
mov edx,dword[rbx]
add rbx,4
lea eax,[rdx-0x1010101]
not edx
and eax,edx
and eax,0x80808080
je 0x6a022d
mov edx,eax
shr edx,0x10
test eax,0x8080
cmove eax,edx
lea rdx,[rbx+2]
mov ecx,eax
cmove rbx,rdx
add cl,al
sbb rbx,3
sub rbx,rbp
cmp rbx,0xf
mov qword[rsp+0x58],rbx
ja 0x6a0325
cmp rbx,1
je 0x6a0370
test rbx,rbx
lea rax,[rdi+0x10]
jne 0x6a0575
mov qword[rsp+0x68],rbx
mov byte[rax+rbx],0
lea r8,[rdi+0x10]
mov rdx,qword[rsp+0x60]
mov rax,qword[rsi+0x120]
lea rcx,[rsi+0x120]
lea r9,[rsi+0x130]
cmp rdx,r8
je 0x6a0452
cmp rax,r9
je 0x6a0430
movdqu xmm0,xmmword[rsp+0x68]
test rax,rax
mov rcx,qword[rsi+0x130]
mov qword[rsi+0x120],rdx
movups xmmword[rsi+0x128],xmm0
je 0x6a0444
mov qword[rsp+0x60],rax
mov qword[rsp+0x70],rcx
mov qword[rsp+0x68],0
mov byte[rax],0
add rdi,0x10
mov rcx,qword[rsp+0x60]
cmp rcx,rdi
je 0x6a0311
call fcn.00a5af30
nop
add rsp,0xa8
pop rbx
pop rsi
pop rdi
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
lea rdx,[rsp+0x58]
mov rcx,rdi
xor r8d,r8d
call fcn.00a2dfc0
mov rcx,rax
mov qword[rsp+0x60],rax
mov rax,qword[rsp+0x58]
mov qword[rsp+0x70],rax
mov r8,rbx
mov rdx,rbp
call sub.msvcrt.dll_memcpy
mov rbx,qword[rsp+0x58]
mov rax,qword[rsp+0x60]
jmp 0x6a028a
add dword[rbx+0x38],1
jmp 0x6a00e0
movzx eax,byte[rsp+0x40]
mov byte[rsp+0x70],al
lea rax,[rdi+0x10]
jmp 0x6a028a
lea rax,[rcx+0x28]
jmp 0x6a01c0
lea rax,[rcx+0x30]
jmp 0x6a01c0
lea rax,[rcx+0x38]
jmp 0x6a01c0
xchg dword[rbp],eax
mov eax,0x80000000
lea rbp,[rbx+0x40]
lock xadd dword[rbp],eax
test eax,0x40000000
jne 0x6a01d6
cmp eax,0x80000000
je 0x6a01d6
mov edi,dword[rbx+0x40]
jmp 0x6a03e2
mov edi,eax
mov edx,edi
mov r8d,edi
mov rcx,rbp
or edx,0x40000000
call fcn.008eebc0
cmp edi,eax
jne 0x6a03e0
and edi,0x40000000
jne 0x6a01d6
add rbx,0x48
xor eax,eax
lock cmpxchg qword[rbx],rax
test rax,rax
mov rdi,rax
mov rcx,rax
je 0x6a05b2
call qword[sym.imp.KERNEL32.dll_SetEvent]
jmp 0x6a01d6
movdqu xmm0,xmmword[rsp+0x68]
mov qword[rsi+0x120],rdx
movups xmmword[rsi+0x128],xmm0
lea rax,[rdi+0x10]
mov qword[rsp+0x60],rax
jmp 0x6a02f1
mov rdx,rdi
call fcn.00a2df10
mov rax,qword[rsp+0x60]
jmp 0x6a02f1
mov rdx,qword[rsp+0x50]
cmp qword[rax],rdx
jne 0x6a0198
jmp 0x6a01c0
mov rdx,qword[rsp+0x50]
cmp qword[rax],rdx
je 0x6a01c0
add rax,8
jmp 0x6a0490
mov rdx,qword[rsp+0x50]
cmp qword[rax],rdx
je 0x6a01c0
add rax,8
jmp 0x6a0469
mov edx,dword[rbx+0x40]
jmp 0x6a04a6
mov edx,eax
lea eax,[rdx+1]
mov r10d,edx
or r10d,0x80000000
test edx,edx
cmovns eax,r10d
mov r14d,eax
mov eax,edx
lock cmpxchg dword[rdi],r14d
cmp eax,edx
jne 0x6a04a4
mov eax,r14d
shr eax,0x1f
test al,al
je 0x6a00d5
shr edx,0x1f
test dl,dl
je 0x6a00d5
lea r11,[rbx+0x48]
xor eax,eax
lock cmpxchg qword[r11],rax
test rax,rax
mov r15,rax
mov qword[rsp+0x30],rax
je 0x6a05f0
mov r15,qword[sym.imp.KERNEL32.dll_WaitForSingleObjectEx]
xor r8d,r8d
mov edx,0xffffffff
mov rcx,qword[rsp+0x30]
call r15
mov r10d,r14d
and r10d,0x7fffffff
or r10d,0x40000000
jmp 0x6a0556
lea ecx,[r10-1]
mov eax,r10d
and ecx,0x3fffffff
or ecx,0x80000000
lock cmpxchg dword[rdi],ecx
cmp eax,r10d
mov r14d,eax
je 0x6a00d5
mov r10d,r14d
test r10d,r10d
jns 0x6a0530
mov ecx,r10d
mov eax,r10d
and ecx,0xbfffffff
lock cmpxchg dword[rdi],ecx
cmp eax,r10d
mov r14d,eax
jne 0x6a0553
jmp 0x6a0503
mov rcx,rax
jmp 0x6a0347
mov rax,rcx
jmp 0x6a017a
mov rax,rcx
jmp 0x6a01c0
lea rax,[rcx+0x18]
jmp 0x6a01c0
lea rax,[rcx+8]
jmp 0x6a01c0
lea rdx,[rsp+0x50]
lea rcx,[rbx+8]
call fcn.00a21450
jmp 0x6a01c5
xor ecx,ecx
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
je 0x6a06c9
mov rax,rdi
lock cmpxchg qword[rbx],rcx
test rax,rax
mov rdi,rax
je 0x6a041f
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rcx,rdi
jmp 0x6a041f
mov qword[rsp+0x38],r11
xor r9d,r9d
xor r8d,r8d
xor edx,edx
xor ecx,ecx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov qword[rsp+0x30],rax
mov r11,qword[rsp+0x38]
je 0x6a0658
mov rcx,rax
mov rax,r15
lock cmpxchg qword[r11],rcx
test rax,rax
mov r15,rax
je 0x6a04fc
mov rcx,qword[rsp+0x30]
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov qword[rsp+0x30],r15
jmp 0x6a04fc
lea rbx,[rsp+0x60]
call fcn.006ea660
lea rdx,[0x00ab95ea]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0x70],0xb
mov qword[rsp+0x78],rsi
mov qword[rsp+0x88],0
mov qword[rsp+0x80],rax
lea rax,[0x00b72480]
mov byte[rsp+0x90],0
mov qword[rsp+0x60],rax
call fcn.00947760
lea rcx,[rbx+0x38]
mov rsi,rax
call fcn.00962120
mov rcx,rsi
call fcn.008da260
lea rbx,[rsp+0x60]
call fcn.006ea660
lea rdx,[0x00ab95ea]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0x70],0xb
mov qword[rsp+0x78],rsi
mov qword[rsp+0x88],0
mov qword[rsp+0x80],rax
lea rax,[0x00b72480]
mov byte[rsp+0x90],0
mov qword[rsp+0x60],rax
call fcn.00947760
mov rsi,rax
lea rax,[0x00b72450]
mov rcx,rbx
mov qword[rsp+0x60],rax
call fcn.00962490
mov rcx,rsi
call fcn.008da260
lea rax,[0x00b72450]
mov rcx,rbx
mov qword[rsp+0x60],rax
call fcn.00962490
call fcn.00a55e20
nop
nop
{% endhighlight %}


[similar_1_ref]: /report/fcn.005c0130@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_2_ref]: /report/fcn.006bc410@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_3_ref]: /report/fcn.006585f0@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_4_ref]: /report/fcn.006b26e0@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_5_ref]: /report/fcn.0068a630@a5905e3c253c25bbaf727a1a18fe8ed1
[virustotal_ref]: https://www.virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1