---
layout: post
title:  "fcn.0048813c @ b3771987fba16f4fba07d1109ec72c76"
date:   2021-08-30 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0048813c
- **Origin (md5):** b3771987fba16f4fba07d1109ec72c76
- **VirusTotal:** [virustotal.com/gui/file/b3771987fba16f4fba07d1109ec72c76][virustotal_ref]

# Code Tags
<span class="tag" id="LINKING">LINKING</span>


# Similar Functions

1. [fcn.00408b10][similar_1_ref] (sim.: 0.9202158108815471)
2. [fcn.004086e0][similar_2_ref] (sim.: 0.8957439261043084)
3. [fcn.00431280][similar_3_ref] (sim.: 0.8516129734574898)
4. [fcn.0046b000][similar_4_ref] (sim.: 0.8485717653249247)
5. [fcn.0040d317][similar_5_ref] (sim.: 0.8485717653249247)


# Disassembled Code

{% highlight nasm %}
push ebp
mov ebp,esp
sub esp,0x80
mov eax,dword[0x507e90]
xor eax,ebp
mov dword[ebp-4],eax
test byte[0x50b5d0],1
mov eax,dword[ebp+8]
push ebx
mov ebx,dword[ebp+0x18]
mov dword[ebp-0x2c],eax
mov eax,dword[ebp+0x10]
push esi
mov esi,dword[ebp+0x1c]
mov dword[ebp-0x40],eax
mov eax,dword[ebp+0x14]
push edi
mov edi,dword[ebp+0xc]
mov dword[ebp-0x44],eax
jne 0x488199
or dword[0x50b5d0],1
push 0x4e0d58
push str.msimg32.dll
call dword[sym.imp.KERNEL32.dll_GetModuleHandleW]
push eax
call dword[sym.imp.KERNEL32.dll_GetProcAddress]
mov dword[0x50b5cc],eax
test edi,edi
je 0x48957a
cmp dword[0x50b5cc],0
je 0x48957a
push dword[ebp-0x2c]
call dword[sym.imp.GDI32.dll_CreateCompatibleDC]
push edi
push eax
mov dword[ebp-0x30],eax
call dword[sym.imp.GDI32.dll_SelectObject]
push 3
push dword[ebp-0x2c]
mov dword[ebp-0x80],eax
call dword[sym.imp.GDI32.dll_SetStretchBltMode]
mov eax,dword[ebp-0x40]
mov edx,dword[eax+8]
mov ecx,dword[eax]
and dword[ebp-0x24],0
and dword[ebp-0x14],0
mov dword[ebp-0x70],edx
sub dword[ebp-0x70],ecx
mov dword[ebp-0x48],ecx
mov ecx,dword[eax+0xc]
mov edi,ecx
sub edi,dword[eax+4]
xor eax,eax
mov dword[ebp-0x6c],edi
lea edi,[ebp-0x20]
stosd dword es:[edi],eax
stosd dword es:[edi],eax
stosd dword es:[edi],eax
xor eax,eax
cmp dword[0x50b5cc],0
lea edi,[ebp-0x10]
stosd dword es:[edi],eax
stosd dword es:[edi],eax
mov dword[ebp-0x34],edx
stosd dword es:[edi],eax
je 0x488c10
cmp byte[ebp+0x20],0
mov al,byte[ebp+0x24]
jne 0x488225
cmp al,0xff
jae 0x488c10
cmp byte[ebp+0x28],0
mov word[ebp-0x4c],0
mov byte[ebp-0x4a],al
mov byte[ebp-0x49],1
jne 0x4884d3
mov eax,dword[esi]
add eax,dword[ebp-0x48]
sub ecx,dword[esi+0xc]
mov edi,dword[ebp-0x40]
mov edi,dword[edi+4]
sub edx,dword[esi+8]
mov dword[ebp-0x28],edi
sub ecx,dword[ebp-0x28]
mov dword[ebp-0x14],eax
mov eax,dword[esi+4]
add edi,eax
mov dword[ebp-0x10],edi
mov edi,dword[esi]
sub edx,edi
sub edx,dword[ebp-0x48]
sub ecx,eax
add ecx,dword[ebp-0x10]
add edx,dword[ebp-0x14]
mov dword[ebp-8],ecx
mov ecx,dword[ebx]
mov dword[ebp-0xc],edx
lea edx,[ecx+edi]
mov dword[ebp-0x5c],edx
mov edx,dword[ebx+4]
lea edi,[edx+eax]
mov dword[ebp-0x58],edi
mov edi,dword[ebx+8]
sub edi,ecx
mov ecx,dword[ebx+0xc]
sub edi,dword[esi+8]
sub ecx,edx
sub ecx,dword[esi+0xc]
sub edi,dword[esi]
sub ecx,eax
add ecx,dword[ebp-0x58]
add edi,dword[ebp-0x5c]
lea eax,[ebp-0x14]
push eax
push dword[ebp-0x44]
lea eax,[ebp-0x24]
push eax
mov dword[ebp-0x50],ecx
call dword[sym.imp.USER32.dll_IntersectRect]
test eax,eax
je 0x4884d3
cmp byte[ebp+0x2c],0
je 0x488429
sub edi,dword[ebp-0x5c]
cmp byte[ebp+0x30],0
mov ecx,dword[ebp-0xc]
je 0x4883af
mov eax,dword[ebp-0x50]
sub eax,dword[ebp-0x58]
mov dword[ebp-0x64],edi
mov dword[ebp-0x48],eax
mov eax,edi
sub eax,dword[ebp-0x14]
lea eax,[eax+ecx-1]
cdq
idiv edi
mov ecx,dword[ebp-0x10]
mov edx,dword[ebp-8]
mov dword[ebp-0x78],eax
mov eax,dword[ebp-0x48]
sub eax,ecx
lea eax,[eax+edx-1]
cdq
idiv dword[ebp-0x48]
test eax,eax
jle 0x4884d3
xor edi,edi
mov dword[ebp-0x28],eax
mov edx,dword[ebp-0x48]
lea eax,[edx+edi]
mov dword[ebp-0x34],eax
add eax,ecx
mov dword[ebp-0x7c],edx
cmp eax,dword[ebp-8]
jle 0x48832d
sub edx,eax
add edx,dword[ebp-8]
mov eax,dword[ebp-8]
mov dword[ebp-0x7c],edx
cmp dword[ebp-0x78],0
jle 0x48839e
mov edx,dword[ebp-0x78]
mov dword[ebp-0x3c],eax
lea eax,[ecx+edi]
sub dword[ebp-0x3c],eax
xor eax,eax
mov dword[ebp-0x38],edx
mov edx,dword[ebp-0x14]
add edx,eax
add eax,dword[ebp-0x64]
mov dword[ebp-0x68],edx
mov edx,dword[ebp-0x64]
mov dword[ebp-0x60],eax
add eax,dword[ebp-0x14]
mov dword[ebp-0x74],edx
cmp eax,dword[ebp-0xc]
jle 0x48836b
sub edx,eax
add edx,dword[ebp-0xc]
mov eax,dword[ebp-0xc]
mov dword[ebp-0x74],edx
push dword[ebp-0x4c]
sub eax,dword[ebp-0x68]
push dword[ebp-0x7c]
add ecx,edi
push dword[ebp-0x74]
push dword[ebp-0x58]
push dword[ebp-0x5c]
push dword[ebp-0x30]
push dword[ebp-0x3c]
push eax
push ecx
push dword[ebp-0x68]
push dword[ebp-0x2c]
call dword[0x50b5cc]
dec dword[ebp-0x38]
mov eax,dword[ebp-0x60]
mov ecx,dword[ebp-0x10]
jne 0x488344
dec dword[ebp-0x28]
mov edi,dword[ebp-0x34]
jne 0x48830f
jmp 0x4884d3
mov eax,edi
sub eax,dword[ebp-0x14]
mov dword[ebp-0x34],edi
lea eax,[eax+ecx-1]
cdq
idiv edi
test eax,eax
jle 0x4884d3
mov ecx,dword[ebp-0x50]
sub ecx,dword[ebp-0x58]
mov dword[ebp-0x38],eax
mov dword[ebp-0x3c],ecx
xor ecx,ecx
mov eax,dword[ebp-0x14]
lea edx,[ecx+eax]
mov dword[ebp-0x28],edx
mov edx,dword[ebp-0x34]
lea edi,[ecx+edx]
add eax,edi
mov ecx,edx
cmp eax,dword[ebp-0xc]
jle 0x4883f3
sub ecx,eax
mov eax,dword[ebp-0xc]
add ecx,eax
push dword[ebp-0x4c]
sub eax,dword[ebp-0x28]
push dword[ebp-0x3c]
push ecx
push dword[ebp-0x58]
mov ecx,dword[ebp-8]
push dword[ebp-0x5c]
sub ecx,dword[ebp-0x10]
push dword[ebp-0x30]
push ecx
push eax
push dword[ebp-0x10]
push dword[ebp-0x28]
push dword[ebp-0x2c]
call dword[0x50b5cc]
dec dword[ebp-0x38]
mov ecx,edi
jne 0x4883d4
jmp 0x4884d3
mov eax,dword[ebp-0x50]
sub eax,dword[ebp-0x58]
cmp byte[ebp+0x30],0
je 0x4884a5
mov ecx,dword[ebp-8]
mov dword[ebp-0x48],eax
sub eax,dword[ebp-0x10]
lea eax,[eax+ecx-1]
cdq
idiv dword[ebp-0x48]
test eax,eax
jle 0x4884d3
sub edi,dword[ebp-0x5c]
xor ecx,ecx
mov dword[ebp-0x64],edi
mov dword[ebp-0x28],eax
mov eax,dword[ebp-0x10]
mov edi,dword[ebp-0x48]
add edi,ecx
lea edx,[ecx+eax]
mov ecx,dword[ebp-0x48]
add eax,edi
cmp eax,dword[ebp-8]
jle 0x488475
sub ecx,eax
mov eax,dword[ebp-8]
add ecx,eax
push dword[ebp-0x4c]
sub eax,edx
push ecx
push dword[ebp-0x64]
push dword[ebp-0x58]
push dword[ebp-0x5c]
push dword[ebp-0x30]
push eax
mov eax,dword[ebp-0xc]
sub eax,dword[ebp-0x14]
push eax
push edx
push dword[ebp-0x14]
push dword[ebp-0x2c]
call dword[0x50b5cc]
dec dword[ebp-0x28]
mov ecx,edi
jne 0x488459
jmp 0x4884d3
push dword[ebp-0x4c]
sub edi,dword[ebp-0x5c]
push eax
mov eax,dword[ebp-8]
sub eax,dword[ebp-0x10]
push edi
push dword[ebp-0x58]
push dword[ebp-0x5c]
push dword[ebp-0x30]
push eax
mov eax,dword[ebp-0xc]
sub eax,dword[ebp-0x14]
push eax
push dword[ebp-0x10]
push dword[ebp-0x14]
push dword[ebp-0x2c]
call dword[0x50b5cc]
mov edi,dword[esi]
test edi,edi
jle 0x4885a5
mov edx,dword[esi+4]
test edx,edx
jle 0x4885a5
mov eax,dword[ebx+4]
mov ecx,dword[ebx]
add edx,eax
add edi,ecx
mov dword[ebp-0x50],edx
mov edx,edi
mov dword[ebp-0x58],eax
mov eax,dword[ebp-0x70]
sub edx,ecx
mov dword[ebp-0x5c],ecx
cmp edx,eax
jle 0x488508
lea edi,[ecx+eax]
mov edx,dword[ebp-0x50]
mov ecx,dword[ebp-0x58]
mov eax,dword[ebp-0x6c]
sub edx,ecx
cmp edx,eax
jle 0x48851c
add ecx,eax
mov dword[ebp-0x50],ecx
mov eax,dword[ebp-0x40]
mov ecx,dword[eax]
mov edx,dword[eax+4]
mov eax,dword[esi]
add eax,ecx
mov dword[ebp-0x14],ecx
mov ecx,dword[esi+4]
add ecx,edx
mov dword[ebp-0xc],eax
sub eax,dword[ebp-0x14]
mov dword[ebp-8],ecx
mov ecx,dword[ebp-0x70]
mov dword[ebp-0x10],edx
cmp eax,ecx
jle 0x48854b
mov eax,dword[ebp-0x14]
add eax,ecx
mov dword[ebp-0xc],eax
mov eax,dword[ebp-8]
mov ecx,dword[ebp-0x6c]
sub eax,edx
cmp eax,ecx
jle 0x48855c
add edx,ecx
mov dword[ebp-8],edx
lea eax,[ebp-0x14]
push eax
push dword[ebp-0x44]
lea eax,[ebp-0x24]
push eax
call dword[sym.imp.USER32.dll_IntersectRect]
test eax,eax
je 0x4885a5
push dword[ebp-0x4c]
mov eax,dword[ebp-0x50]
sub eax,dword[ebp-0x58]
sub edi,dword[ebp-0x5c]
push eax
mov eax,dword[ebp-8]
sub eax,dword[ebp-0x10]
push edi
push dword[ebp-0x58]
push dword[ebp-0x5c]
push dword[ebp-0x30]
push eax
mov eax,dword[ebp-0xc]
sub eax,dword[ebp-0x14]
push eax
push dword[ebp-0x10]
push dword[ebp-0x14]
push dword[ebp-0x2c]
call dword[0x50b5cc]
cmp dword[esi+4],0
jle 0x4886ef
mov ecx,dword[ebx]
mov eax,dword[esi]
mov edi,dword[ebx+8]
sub edi,dword[esi+8]
lea edx,[ecx+eax]
sub edi,ecx
mov ecx,dword[esi+4]
mov dword[ebp-0x5c],edx
mov edx,dword[ebx+4]
add ecx,edx
mov dword[ebp-0x50],ecx
sub ecx,edx
sub edi,eax
add edi,dword[ebp-0x5c]
mov dword[ebp-0x34],ecx
mov ecx,dword[ebp-0x6c]
mov dword[ebp-0x58],edx
cmp dword[ebp-0x34],ecx
jle 0x4885e6
add edx,ecx
mov dword[ebp-0x50],edx
mov ecx,dword[ebp-0x40]
mov edx,dword[ecx]
mov dword[ebp-0x48],edx
add edx,eax
mov dword[ebp-0x14],edx
mov edx,dword[ecx+4]
mov ecx,dword[ecx+8]
sub ecx,dword[esi+8]
mov dword[ebp-0x10],edx
sub ecx,eax
sub ecx,dword[ebp-0x48]
mov eax,dword[esi+4]
add ecx,dword[ebp-0x14]
mov dword[ebp-0xc],ecx
mov ecx,edx
mov edx,dword[ebp-0x6c]
add eax,ecx
mov dword[ebp-8],eax
sub eax,ecx
cmp eax,edx
jle 0x488622
add ecx,edx
mov dword[ebp-8],ecx
lea eax,[ebp-0x14]
push eax
push dword[ebp-0x44]
lea eax,[ebp-0x24]
push eax
call dword[sym.imp.USER32.dll_IntersectRect]
test eax,eax
je 0x4886ef
sub edi,dword[ebp-0x5c]
cmp byte[ebp+0x2c],0
je 0x4886be
mov ecx,dword[ebp-0xc]
mov eax,edi
sub eax,dword[ebp-0x14]
mov dword[ebp-0x34],edi
lea eax,[eax+ecx-1]
cdq
idiv edi
test eax,eax
jle 0x4886ef
mov ecx,dword[ebp-0x50]
sub ecx,dword[ebp-0x58]
mov dword[ebp-0x38],eax
mov dword[ebp-0x3c],ecx
xor ecx,ecx
mov eax,dword[ebp-0x14]
lea edx,[ecx+eax]
mov dword[ebp-0x28],edx
mov edx,dword[ebp-0x34]
lea edi,[ecx+edx]
add eax,edi
mov ecx,edx
cmp eax,dword[ebp-0xc]
jle 0x48868b
sub ecx,eax
mov eax,dword[ebp-0xc]
add ecx,eax
push dword[ebp-0x4c]
sub eax,dword[ebp-0x28]
push dword[ebp-0x3c]
push ecx
push dword[ebp-0x58]
mov ecx,dword[ebp-8]
push dword[ebp-0x5c]
sub ecx,dword[ebp-0x10]
push dword[ebp-0x30]
push ecx
push eax
push dword[ebp-0x10]
push dword[ebp-0x28]
push dword[ebp-0x2c]
call dword[0x50b5cc]
dec dword[ebp-0x38]
mov ecx,edi
jne 0x48866c
jmp 0x4886ef
push dword[ebp-0x4c]
mov eax,dword[ebp-0x50]
sub eax,dword[ebp-0x58]
push eax
mov eax,dword[ebp-8]
sub eax,dword[ebp-0x10]
push edi
push dword[ebp-0x58]
push dword[ebp-0x5c]
push dword[ebp-0x30]
push eax
mov eax,dword[ebp-0xc]
sub eax,dword[ebp-0x14]
push eax
push dword[ebp-0x10]
push dword[ebp-0x14]
push dword[ebp-0x2c]
call dword[0x50b5cc]
cmp dword[esi+8],0
jle 0x488786
cmp dword[esi+4],0
jle 0x488786
mov ecx,dword[esi+8]
mov edi,dword[ebx+8]
mov edx,dword[ebx+4]
sub edi,ecx
lea eax,[ecx+edi]
mov dword[ebp-0x54],eax
mov eax,dword[esi+4]
add eax,edx
mov dword[ebp-0x50],eax
mov dword[ebp-0x58],edx
mov edx,dword[ebp-0x40]
mov eax,dword[edx+8]
mov edx,dword[edx+4]
sub eax,ecx
add ecx,eax
mov dword[ebp-0x14],eax
mov eax,dword[esi+4]
add eax,edx
mov dword[ebp-8],eax
lea eax,[ebp-0x14]
push eax
push dword[ebp-0x44]
lea eax,[ebp-0x24]
push eax
mov dword[ebp-0x10],edx
mov dword[ebp-0xc],ecx
call dword[sym.imp.USER32.dll_IntersectRect]
test eax,eax
je 0x488786
push dword[ebp-0x4c]
mov eax,dword[ebp-0x50]
sub eax,dword[ebp-0x58]
push eax
mov eax,dword[ebp-0x54]
sub eax,edi
push eax
push dword[ebp-0x58]
mov eax,dword[ebp-8]
sub eax,dword[ebp-0x10]
push edi
push dword[ebp-0x30]
push eax
mov eax,dword[ebp-0xc]
sub eax,dword[ebp-0x14]
push eax
push dword[ebp-0x10]
push dword[ebp-0x14]
push dword[ebp-0x2c]
call dword[0x50b5cc]
mov edi,dword[esi]
test edi,edi
jle 0x4888c8
mov eax,dword[ebx]
mov ecx,dword[esi+4]
mov edx,dword[ebx+4]
add edi,eax
mov dword[ebp-0x54],edi
mov edi,dword[ebx+0xc]
sub edi,dword[esi+0xc]
add edx,ecx
sub edi,dword[ebx+4]
mov dword[ebp-0x58],edx
sub edi,ecx
mov ecx,dword[ebp-0x70]
add edi,edx
mov edx,dword[ebp-0x54]
sub edx,eax
mov dword[ebp-0x5c],eax
cmp edx,ecx
jle 0x4887c3
add eax,ecx
mov dword[ebp-0x54],eax
mov ecx,dword[ebp-0x40]
mov edx,dword[ecx+4]
mov eax,dword[ecx]
mov ecx,dword[ecx+0xc]
mov dword[ebp-0x34],edx
sub ecx,dword[ebp-0x34]
add edx,dword[esi+4]
sub ecx,dword[esi+4]
mov dword[ebp-0x14],eax
sub ecx,dword[esi+0xc]
mov eax,dword[esi]
add eax,dword[ebp-0x14]
add ecx,edx
mov dword[ebp-8],ecx
mov ecx,dword[ebp-0x14]
mov dword[ebp-0x10],edx
mov edx,dword[ebp-0x70]
mov dword[ebp-0xc],eax
sub eax,ecx
cmp eax,edx
jle 0x488801
add ecx,edx
mov dword[ebp-0xc],ecx
lea eax,[ebp-0x14]
push eax
push dword[ebp-0x44]
lea eax,[ebp-0x24]
push eax
call dword[sym.imp.USER32.dll_IntersectRect]
test eax,eax
je 0x4888c8
sub edi,dword[ebp-0x58]
cmp byte[ebp+0x30],0
je 0x488897
mov ecx,dword[ebp-8]
mov eax,edi
sub eax,dword[ebp-0x10]
mov dword[ebp-0x3c],edi
lea eax,[eax+ecx-1]
cdq
idiv edi
test eax,eax
jle 0x4888c8
mov ecx,dword[ebp-0x54]
sub ecx,dword[ebp-0x5c]
mov dword[ebp-0x28],eax
mov dword[ebp-0x64],ecx
xor ecx,ecx
mov eax,dword[ebp-0x10]
mov edi,dword[ebp-0x3c]
add edi,ecx
lea edx,[ecx+eax]
mov ecx,dword[ebp-0x3c]
add eax,edi
cmp eax,dword[ebp-8]
jle 0x488867
sub ecx,eax
mov eax,dword[ebp-8]
add ecx,eax
push dword[ebp-0x4c]
sub eax,edx
push ecx
push dword[ebp-0x64]
push dword[ebp-0x58]
push dword[ebp-0x5c]
push dword[ebp-0x30]
push eax
mov eax,dword[ebp-0xc]
sub eax,dword[ebp-0x14]
push eax
push edx
push dword[ebp-0x14]
push dword[ebp-0x2c]
call dword[0x50b5cc]
dec dword[ebp-0x28]
mov ecx,edi
jne 0x48884b
jmp 0x4888c8
push dword[ebp-0x4c]
mov eax,dword[ebp-0x54]
sub eax,dword[ebp-0x5c]
push edi
push eax
push dword[ebp-0x58]
mov eax,dword[ebp-8]
push dword[ebp-0x5c]
sub eax,dword[ebp-0x10]
push dword[ebp-0x30]
push eax
mov eax,dword[ebp-0xc]
sub eax,dword[ebp-0x14]
push eax
push dword[ebp-0x10]
push dword[ebp-0x14]
push dword[ebp-0x2c]
call dword[0x50b5cc]
cmp dword[esi+8],0
jle 0x4889ef
mov eax,dword[ebp-0x40]
mov edi,dword[eax+4]
mov ecx,dword[eax+8]
mov eax,dword[eax+0xc]
mov edx,dword[esi+4]
sub ecx,dword[esi+8]
mov dword[ebp-0x34],edi
sub eax,dword[ebp-0x34]
add edi,edx
sub eax,edx
sub eax,dword[esi+0xc]
mov dword[ebp-0x10],edi
add eax,dword[ebp-0x10]
mov edi,dword[esi+8]
mov dword[ebp-8],eax
lea eax,[ebp-0x14]
push eax
push dword[ebp-0x44]
lea eax,[ebp-0x24]
mov dword[ebp-0xc],edi
add dword[ebp-0xc],ecx
push eax
mov dword[ebp-0x14],ecx
call dword[sym.imp.USER32.dll_IntersectRect]
test eax,eax
je 0x4889ef
mov eax,dword[ebp-0x14]
sub dword[ebp-0xc],eax
cmp byte[ebp+0x30],0
mov edi,dword[ebx+0xc]
je 0x4889b3
sub edi,dword[ebx+4]
mov ecx,dword[ebp-0x10]
sub edi,dword[esi+0xc]
mov edx,dword[ebp-8]
sub edi,dword[esi+4]
mov eax,edi
sub eax,ecx
lea eax,[eax+edx-1]
cdq
idiv edi
test eax,eax
jle 0x4889ef
xor edx,edx
mov dword[ebp-0x38],eax
jmp 0x48895e
mov ecx,dword[ebp-0x10]
lea eax,[edx+ecx]
mov dword[ebp-0x28],eax
lea eax,[edx+edi]
mov dword[ebp-0x34],eax
add eax,ecx
mov edx,edi
cmp eax,dword[ebp-8]
jle 0x48897b
sub edx,eax
add edx,dword[ebp-8]
mov eax,dword[ebp-8]
push dword[ebp-0x4c]
mov ecx,dword[esi+8]
sub eax,dword[ebp-0x28]
push edx
mov edx,dword[ebx+4]
add edx,dword[esi+4]
push ecx
push edx
mov edx,dword[ebx+8]
sub edx,ecx
push edx
push dword[ebp-0x30]
push eax
push dword[ebp-0xc]
push dword[ebp-0x28]
push dword[ebp-0x14]
push dword[ebp-0x2c]
call dword[0x50b5cc]
dec dword[ebp-0x38]
mov edx,dword[ebp-0x34]
jne 0x48895b
jmp 0x4889ef
push dword[ebp-0x4c]
mov eax,dword[ebp-0x10]
sub dword[ebp-8],eax
mov ecx,dword[ebx+4]
mov eax,dword[esi+4]
mov edx,dword[esi+8]
sub edi,ecx
sub edi,eax
sub edi,dword[esi+0xc]
add ecx,eax
mov eax,dword[ebx+8]
push edi
push edx
push ecx
sub eax,edx
push eax
push dword[ebp-0x30]
push dword[ebp-8]
push dword[ebp-0xc]
push dword[ebp-0x10]
push dword[ebp-0x14]
push dword[ebp-0x2c]
call dword[0x50b5cc]
mov edi,dword[esi]
test edi,edi
jle 0x488a64
cmp dword[esi+0xc],0
jle 0x488b82
mov eax,dword[ebp-0x40]
mov edx,dword[eax]
mov eax,dword[eax+0xc]
mov ecx,dword[esi+0xc]
sub eax,ecx
mov dword[ebp-0x10],eax
mov dword[ebp-8],ecx
add dword[ebp-8],eax
lea eax,[ebp-0x14]
push eax
push dword[ebp-0x44]
lea eax,[ebp-0x24]
mov dword[ebp-0xc],edi
add dword[ebp-0xc],edx
push eax
mov dword[ebp-0x14],edx
call dword[sym.imp.USER32.dll_IntersectRect]
test eax,eax
je 0x488a64
push dword[ebp-0x4c]
mov eax,dword[esi+0xc]
mov edi,dword[ebx+0xc]
mov ecx,dword[ebp-0x10]
mov edx,dword[ebp-0x14]
sub dword[ebp-8],ecx
sub dword[ebp-0xc],edx
push eax
push dword[esi]
sub edi,eax
push edi
push dword[ebx]
push dword[ebp-0x30]
push dword[ebp-8]
push dword[ebp-0xc]
push ecx
push edx
push dword[ebp-0x2c]
call dword[0x50b5cc]
cmp dword[esi+0xc],0
jle 0x488b82
mov eax,dword[ebp-0x40]
mov edx,dword[eax]
mov ecx,dword[esi]
add ecx,edx
mov dword[ebp-0x14],ecx
mov ecx,dword[eax+0xc]
mov eax,dword[eax+8]
sub eax,dword[esi+8]
sub ecx,dword[esi+0xc]
sub eax,dword[esi]
mov dword[ebp-0x10],ecx
sub eax,edx
add eax,dword[ebp-0x14]
mov edx,dword[esi+0xc]
mov dword[ebp-0xc],eax
lea eax,[ebp-0x14]
push eax
push dword[ebp-0x44]
lea eax,[ebp-0x24]
mov dword[ebp-8],edx
add dword[ebp-8],ecx
push eax
call dword[sym.imp.USER32.dll_IntersectRect]
test eax,eax
je 0x488b82
mov edi,dword[ebx+8]
sub edi,dword[esi+8]
cmp byte[ebp+0x2c],0
je 0x488b45
sub edi,dword[esi]
mov eax,dword[ebp-0x10]
sub dword[ebp-8],eax
sub edi,dword[ebx]
mov ecx,dword[ebp-0x14]
mov edx,dword[ebp-0xc]
mov eax,edi
sub eax,ecx
lea eax,[eax+edx-1]
cdq
idiv edi
test eax,eax
jle 0x488b82
xor edx,edx
mov dword[ebp-0x38],eax
jmp 0x488af2
mov ecx,dword[ebp-0x14]
lea eax,[edx+ecx]
mov dword[ebp-0x28],eax
lea eax,[edx+edi]
mov dword[ebp-0x34],eax
add eax,ecx
mov edx,edi
cmp eax,dword[ebp-0xc]
jle 0x488b0f
sub edx,eax
add edx,dword[ebp-0xc]
mov eax,dword[ebp-0xc]
push dword[ebp-0x4c]
mov ecx,dword[esi+0xc]
sub eax,dword[ebp-0x28]
push ecx
push edx
mov edx,dword[ebx+0xc]
sub edx,ecx
mov ecx,dword[esi]
add ecx,dword[ebx]
push edx
push ecx
push dword[ebp-0x30]
push dword[ebp-8]
push eax
push dword[ebp-0x10]
push dword[ebp-0x28]
push dword[ebp-0x2c]
call dword[0x50b5cc]
dec dword[ebp-0x38]
mov edx,dword[ebp-0x34]
jne 0x488aef
jmp 0x488b82
push dword[ebp-0x4c]
mov eax,dword[ebp-0x14]
sub dword[ebp-0xc],eax
mov eax,dword[ebp-0x10]
mov ecx,dword[ebx]
sub dword[ebp-8],eax
mov edx,dword[esi+0xc]
mov eax,dword[esi]
push edx
sub edi,ecx
sub edi,eax
push edi
mov edi,dword[ebx+0xc]
sub edi,edx
push edi
add ecx,eax
push ecx
push dword[ebp-0x30]
push dword[ebp-8]
push dword[ebp-0xc]
push dword[ebp-0x10]
push dword[ebp-0x14]
push dword[ebp-0x2c]
call dword[0x50b5cc]
cmp dword[esi+8],0
jle 0x489565
cmp dword[esi+0xc],0
jle 0x489565
mov ecx,dword[ebp-0x40]
mov eax,dword[ecx+8]
mov edx,dword[esi+8]
mov edi,dword[esi+0xc]
mov ecx,dword[ecx+0xc]
sub eax,edx
mov dword[ebp-0x14],eax
mov dword[ebp-0xc],edx
add dword[ebp-0xc],eax
lea eax,[ebp-0x14]
push eax
push dword[ebp-0x44]
sub ecx,edi
lea eax,[ebp-0x24]
mov dword[ebp-8],edi
add dword[ebp-8],ecx
push eax
mov dword[ebp-0x10],ecx
call dword[sym.imp.USER32.dll_IntersectRect]
test eax,eax
je 0x489565
push dword[ebp-0x4c]
mov eax,dword[esi+0xc]
mov esi,dword[esi+8]
mov edi,dword[ebx+0xc]
mov ecx,dword[ebp-0x10]
mov edx,dword[ebp-0x14]
sub dword[ebp-8],ecx
sub dword[ebp-0xc],edx
push eax
push esi
sub edi,eax
mov eax,dword[ebx+8]
push edi
sub eax,esi
push eax
push dword[ebp-0x30]
push dword[ebp-8]
push dword[ebp-0xc]
push ecx
push edx
push dword[ebp-0x2c]
call dword[0x50b5cc]
jmp 0x489565
mov eax,dword[ebx+8]
sub eax,dword[ebx]
cmp dword[ebp-0x70],eax
jne 0x488c83
mov eax,dword[ebx+0xc]
sub eax,dword[ebx+4]
cmp dword[ebp-0x6c],eax
jne 0x488c83
xor eax,eax
cmp dword[esi],eax
jne 0x488c83
cmp dword[esi+8],eax
jne 0x488c83
cmp dword[esi+4],eax
jne 0x488c83
cmp dword[esi+0xc],eax
jne 0x488c83
push dword[ebp-0x40]
lea eax,[ebp-0x24]
push dword[ebp-0x44]
push eax
call dword[sym.imp.USER32.dll_IntersectRect]
test eax,eax
je 0x489565
mov eax,dword[ebp-0x40]
mov ecx,dword[eax+4]
mov esi,dword[eax+0xc]
mov edx,dword[eax]
mov eax,dword[eax+8]
push 0xcc0020
push dword[ebx+4]
sub esi,ecx
push dword[ebx]
sub eax,edx
push dword[ebp-0x30]
push esi
push eax
push ecx
push edx
push dword[ebp-0x2c]
call dword[sym.imp.GDI32.dll_BitBlt]
jmp 0x489565
cmp byte[ebp+0x28],0
mov edi,0xcc0020
jne 0x488f2d
mov eax,dword[esi]
add eax,dword[ebp-0x48]
mov edx,dword[ebp-0x40]
mov edx,dword[edx+4]
mov dword[ebp-0x14],eax
mov eax,dword[ebp-0x34]
sub eax,dword[esi+8]
mov dword[ebp-0x60],edx
sub eax,dword[esi]
sub ecx,dword[ebp-0x60]
sub eax,dword[ebp-0x48]
sub ecx,dword[esi+4]
add eax,dword[ebp-0x14]
add edx,dword[esi+4]
sub ecx,dword[esi+0xc]
mov dword[ebp-0xc],eax
lea eax,[ebp-0x14]
push eax
push dword[ebp-0x44]
lea eax,[ebp-0x24]
add ecx,edx
push eax
mov dword[ebp-0x10],edx
mov dword[ebp-8],ecx
call dword[sym.imp.USER32.dll_IntersectRect]
test eax,eax
je 0x488f2d
cmp byte[ebp+0x2c],0
jne 0x488d42
mov eax,dword[ebp-0x14]
sub dword[ebp-0xc],eax
cmp byte[ebp+0x30],0
jne 0x488ea6
mov eax,dword[ebp-0x10]
sub dword[ebp-8],eax
mov edx,dword[ebx+0xc]
sub edx,dword[ebx+4]
mov eax,dword[esi+4]
mov ecx,dword[esi]
sub edx,eax
sub edx,dword[esi+0xc]
push edi
push edx
mov edx,dword[ebx+8]
sub edx,dword[esi+8]
sub edx,dword[ebx]
sub edx,ecx
push edx
mov edx,dword[ebx+4]
add edx,eax
mov eax,dword[ebx]
push edx
add eax,ecx
push eax
push dword[ebp-0x30]
push dword[ebp-8]
push dword[ebp-0xc]
push dword[ebp-0x10]
push dword[ebp-0x14]
push dword[ebp-0x2c]
call dword[sym.imp.GDI32.dll_StretchBlt]
jmp 0x488f2d
mov ecx,dword[ebx+8]
sub ecx,dword[esi+8]
mov edx,dword[ebp-0xc]
sub ecx,dword[esi]
sub ecx,dword[ebx]
cmp byte[ebp+0x30],0
mov dword[ebp-0x34],ecx
je 0x488e1c
mov eax,dword[ebx+0xc]
sub eax,dword[ebx+4]
sub eax,dword[esi+0xc]
sub eax,dword[esi+4]
mov dword[ebp-0x3c],eax
mov eax,ecx
sub eax,dword[ebp-0x14]
lea eax,[eax+edx-1]
cdq
idiv ecx
mov ecx,dword[ebp-8]
mov dword[ebp-0x28],eax
mov eax,dword[ebp-0x3c]
sub eax,dword[ebp-0x10]
lea eax,[eax+ecx-1]
cdq
idiv dword[ebp-0x3c]
test eax,eax
jle 0x488f2d
and dword[ebp-0x6c],0
mov dword[ebp-0x68],eax
mov eax,dword[ebp-0x6c]
mov ecx,dword[ebp-0x10]
add ecx,eax
add eax,dword[ebp-0x3c]
mov dword[ebp-0x74],eax
add eax,dword[ebp-0x10]
cmp eax,dword[ebp-8]
jle 0x488db3
mov eax,dword[ebp-8]
cmp dword[ebp-0x28],0
jle 0x488e0c
mov dword[ebp-0x64],eax
sub dword[ebp-0x64],ecx
mov ecx,dword[ebp-0x28]
xor eax,eax
mov dword[ebp-0x38],ecx
mov ecx,dword[ebp-0x14]
add ecx,eax
add eax,dword[ebp-0x34]
mov dword[ebp-0x60],eax
add eax,dword[ebp-0x14]
cmp eax,dword[ebp-0xc]
jle 0x488ddd
mov eax,dword[ebp-0xc]
mov edx,dword[ebx+4]
add edx,dword[esi+4]
push edi
push edx
mov edx,dword[esi]
add edx,dword[ebx]
sub eax,ecx
push edx
push dword[ebp-0x30]
push dword[ebp-0x64]
push eax
mov eax,dword[ebp-0x6c]
add eax,dword[ebp-0x10]
push eax
push ecx
push dword[ebp-0x2c]
call dword[sym.imp.GDI32.dll_BitBlt]
dec dword[ebp-0x38]
mov eax,dword[ebp-0x60]
jne 0x488dc7
dec dword[ebp-0x68]
mov eax,dword[ebp-0x74]
mov dword[ebp-0x6c],eax
jne 0x488d9a
jmp 0x488f2d
mov eax,dword[ebp-0x10]
sub dword[ebp-8],eax
mov eax,ecx
sub eax,dword[ebp-0x14]
lea eax,[eax+edx-1]
cdq
idiv ecx
test eax,eax
jle 0x488f2d
xor ecx,ecx
mov dword[ebp-0x68],eax
mov eax,dword[ebp-0x14]
mov edx,dword[ebp-0x34]
add eax,ecx
mov dword[ebp-0x38],eax
lea eax,[edx+ecx]
mov dword[ebp-0x60],eax
add eax,dword[ebp-0x14]
mov dword[ebp-0x28],edx
cmp eax,dword[ebp-0xc]
jle 0x488e62
sub edx,eax
add edx,dword[ebp-0xc]
mov eax,dword[ebp-0xc]
mov dword[ebp-0x28],edx
mov edx,dword[ebx+0xc]
sub edx,dword[ebx+4]
mov ecx,dword[esi+4]
sub eax,dword[ebp-0x38]
push edi
sub edx,ecx
sub edx,dword[esi+0xc]
push edx
push dword[ebp-0x28]
mov edx,dword[ebx+4]
add edx,ecx
mov ecx,dword[esi]
add ecx,dword[ebx]
push edx
push ecx
push dword[ebp-0x30]
push dword[ebp-8]
push eax
push dword[ebp-0x10]
push dword[ebp-0x38]
push dword[ebp-0x2c]
call dword[sym.imp.GDI32.dll_StretchBlt]
dec dword[ebp-0x68]
mov ecx,dword[ebp-0x60]
jne 0x488e3b
jmp 0x488f2d
mov ecx,dword[ebx+0xc]
sub ecx,dword[ebx+4]
mov edx,dword[ebp-8]
sub ecx,dword[esi+0xc]
sub ecx,dword[esi+4]
mov eax,ecx
sub eax,dword[ebp-0x10]
mov dword[ebp-0x34],ecx
lea eax,[eax+edx-1]
cdq
idiv ecx
test eax,eax
jle 0x488f2d
xor ecx,ecx
mov dword[ebp-0x38],eax
mov eax,dword[ebp-0x10]
mov edx,dword[ebp-0x34]
add eax,ecx
mov dword[ebp-0x28],eax
lea eax,[edx+ecx]
mov dword[ebp-0x68],eax
add eax,dword[ebp-0x10]
mov ecx,edx
cmp eax,dword[ebp-8]
jle 0x488eef
sub ecx,eax
mov eax,dword[ebp-8]
add ecx,eax
push edi
push ecx
mov ecx,dword[ebx+8]
sub ecx,dword[esi+8]
sub eax,dword[ebp-0x28]
sub ecx,dword[ebx]
mov edx,ecx
mov ecx,dword[esi]
sub edx,ecx
push edx
mov edx,dword[ebx+4]
add edx,dword[esi+4]
push edx
mov edx,dword[ebx]
add edx,ecx
push edx
push dword[ebp-0x30]
push eax
push dword[ebp-0xc]
push dword[ebp-0x28]
push dword[ebp-0x14]
push dword[ebp-0x2c]
call dword[sym.imp.GDI32.dll_StretchBlt]
dec dword[ebp-0x38]
mov ecx,dword[ebp-0x68]
jne 0x488ecd
mov edx,dword[esi]
test edx,edx
jle 0x488f9a
cmp dword[esi+4],0
jle 0x4890a7
mov eax,dword[ebp-0x40]
mov ecx,dword[eax]
mov eax,dword[eax+4]
mov dword[ebp-0xc],edx
mov edx,dword[esi+4]
add dword[ebp-0xc],ecx
mov dword[ebp-0x10],eax
mov dword[ebp-8],edx
add dword[ebp-8],eax
lea eax,[ebp-0x14]
push eax
push dword[ebp-0x44]
lea eax,[ebp-0x24]
push eax
mov dword[ebp-0x14],ecx
call dword[sym.imp.USER32.dll_IntersectRect]
test eax,eax
je 0x488f9a
mov eax,dword[ebp-0x10]
mov ecx,dword[ebp-0x14]
sub dword[ebp-8],eax
sub dword[ebp-0xc],ecx
push edi
push dword[esi+4]
push dword[esi]
push dword[ebx+4]
push dword[ebx]
push dword[ebp-0x30]
push dword[ebp-8]
push dword[ebp-0xc]
push eax
push ecx
push dword[ebp-0x2c]
call dword[sym.imp.GDI32.dll_StretchBlt]
cmp dword[esi+4],0
jle 0x4890a7
mov eax,dword[ebp-0x40]
mov ecx,dword[eax]
mov edx,dword[esi]
add edx,ecx
mov dword[ebp-0x14],edx
mov edx,dword[eax+4]
mov eax,dword[eax+8]
sub eax,dword[esi+8]
mov dword[ebp-0x10],edx
sub eax,dword[esi]
sub eax,ecx
add eax,dword[ebp-0x14]
mov ecx,dword[esi+4]
mov dword[ebp-0xc],eax
lea eax,[ebp-0x14]
push eax
push dword[ebp-0x44]
lea eax,[ebp-0x24]
mov dword[ebp-8],ecx
add dword[ebp-8],edx
push eax
call dword[sym.imp.USER32.dll_IntersectRect]
test eax,eax
je 0x4890a7
cmp byte[ebp+0x2c],0
je 0x48906a
mov ecx,dword[ebx+8]
sub ecx,dword[esi+8]
mov eax,dword[ebp-0x10]
sub ecx,dword[esi]
sub dword[ebp-8],eax
sub ecx,dword[ebx]
mov edx,dword[ebp-0xc]
mov eax,ecx
sub eax,dword[ebp-0x14]
mov dword[ebp-0x3c],ecx
lea eax,[eax+edx-1]
cdq
idiv ecx
test eax,eax
jle 0x4890a7
xor ecx,ecx
mov dword[ebp-0x28],eax
mov eax,dword[ebp-0x14]
lea edx,[ecx+eax]
mov eax,dword[ebp-0x3c]
add eax,ecx
mov ecx,dword[ebp-0x3c]
mov dword[ebp-0x34],eax
add eax,dword[ebp-0x14]
cmp eax,dword[ebp-0xc]
jle 0x48903d
sub ecx,eax
mov eax,dword[ebp-0xc]
add ecx,eax
push edi
push dword[esi+4]
sub eax,edx
push ecx
push dword[ebx+4]
mov ecx,dword[esi]
add ecx,dword[ebx]
push ecx
push dword[ebp-0x30]
push dword[ebp-8]
push eax
push dword[ebp-0x10]
push edx
push dword[ebp-0x2c]
call dword[sym.imp.GDI32.dll_StretchBlt]
dec dword[ebp-0x28]
mov ecx,dword[ebp-0x34]
jne 0x48901d
jmp 0x4890a7
mov eax,dword[ebp-0x14]
sub dword[ebp-0xc],eax
mov edx,dword[ebx+8]
mov eax,dword[ebp-0x10]
sub edx,dword[esi+8]
mov ecx,dword[ebx]
sub dword[ebp-8],eax
mov eax,dword[esi]
push edi
push dword[esi+4]
sub edx,ecx
sub edx,eax
push edx
push dword[ebx+4]
add ecx,eax
push ecx
push dword[ebp-0x30]
push dword[ebp-8]
push dword[ebp-0xc]
push dword[ebp-0x10]
push dword[ebp-0x14]
push dword[ebp-0x2c]
call dword[sym.imp.GDI32.dll_StretchBlt]
cmp dword[esi+8],0
jle 0x48911e
cmp dword[esi+4],0
jle 0x48911e
mov edx,dword[esi+8]
mov ecx,dword[ebp-0x40]
mov eax,dword[ecx+8]
mov ecx,dword[ecx+4]
sub eax,edx
mov dword[ebp-0xc],edx
add dword[ebp-0xc],eax
mov edx,dword[esi+4]
mov dword[ebp-0x14],eax
lea eax,[ebp-0x14]
push eax
push dword[ebp-0x44]
lea eax,[ebp-0x24]
mov dword[ebp-8],edx
add dword[ebp-8],ecx
push eax
mov dword[ebp-0x10],ecx
call dword[sym.imp.USER32.dll_IntersectRect]
test eax,eax
je 0x48911e
mov eax,dword[ebp-0x14]
sub dword[ebp-0xc],eax
mov eax,dword[esi+8]
mov edx,dword[ebx+8]
mov ecx,dword[ebp-0x10]
sub dword[ebp-8],ecx
push edi
push dword[esi+4]
sub edx,eax
push eax
push dword[ebx+4]
push edx
push dword[ebp-0x30]
push dword[ebp-8]
push dword[ebp-0xc]
push ecx
push dword[ebp-0x14]
push dword[ebp-0x2c]
call dword[sym.imp.GDI32.dll_StretchBlt]
cmp dword[esi],0
jle 0x48922a
mov eax,dword[ebp-0x40]
mov edx,dword[eax+4]
mov ecx,dword[eax]
mov eax,dword[eax+0xc]
mov dword[ebp-0x34],edx
sub eax,dword[ebp-0x34]
mov dword[ebp-0x14],ecx
mov ecx,dword[esi+4]
sub eax,ecx
sub eax,dword[esi+0xc]
add edx,ecx
mov dword[ebp-0x10],edx
add eax,dword[ebp-0x10]
mov edx,dword[esi]
add edx,dword[ebp-0x14]
mov dword[ebp-8],eax
lea eax,[ebp-0x14]
push eax
push dword[ebp-0x44]
lea eax,[ebp-0x24]
push eax
mov dword[ebp-0xc],edx
call dword[sym.imp.USER32.dll_IntersectRect]
test eax,eax
je 0x48922a
mov eax,dword[ebp-0x14]
sub dword[ebp-0xc],eax
cmp byte[ebp+0x30],0
je 0x4891f3
mov ecx,dword[ebx+0xc]
sub ecx,dword[ebx+4]
mov edx,dword[ebp-8]
sub ecx,dword[esi+0xc]
sub ecx,dword[esi+4]
mov eax,ecx
sub eax,dword[ebp-0x10]
mov dword[ebp-0x3c],ecx
lea eax,[eax+edx-1]
cdq
idiv ecx
test eax,eax
jle 0x48922a
xor ecx,ecx
mov dword[ebp-0x28],eax
mov eax,dword[ebp-0x10]
lea edx,[ecx+eax]
mov eax,dword[ebp-0x3c]
add eax,ecx
mov ecx,dword[ebp-0x3c]
mov dword[ebp-0x34],eax
add eax,dword[ebp-0x10]
cmp eax,dword[ebp-8]
jle 0x4891c6
sub ecx,eax
mov eax,dword[ebp-8]
add ecx,eax
push edi
push ecx
push dword[esi]
mov ecx,dword[ebx+4]
add ecx,dword[esi+4]
sub eax,edx
push ecx
push dword[ebx]
push dword[ebp-0x30]
push eax
push dword[ebp-0xc]
push edx
push dword[ebp-0x14]
push dword[ebp-0x2c]
call dword[sym.imp.GDI32.dll_StretchBlt]
dec dword[ebp-0x28]
mov ecx,dword[ebp-0x34]
jne 0x4891a6
jmp 0x48922a
mov eax,dword[ebp-0x10]
mov ecx,dword[ebx+4]
sub dword[ebp-8],eax
mov edx,dword[ebx+0xc]
mov eax,dword[esi+4]
push edi
sub edx,ecx
sub edx,eax
sub edx,dword[esi+0xc]
add ecx,eax
push edx
push dword[esi]
push ecx
push dword[ebx]
push dword[ebp-0x30]
push dword[ebp-8]
push dword[ebp-0xc]
push dword[ebp-0x10]
push dword[ebp-0x14]
push dword[ebp-0x2c]
call dword[sym.imp.GDI32.dll_StretchBlt]
cmp dword[esi+8],0
jle 0x48934f
mov eax,dword[ebp-0x40]
mov ecx,dword[eax+8]
mov edx,dword[eax+4]
mov eax,dword[eax+0xc]
sub ecx,dword[esi+8]
mov dword[ebp-0x34],edx
sub eax,dword[ebp-0x34]
mov dword[ebp-0x14],ecx
mov ecx,dword[esi+4]
sub eax,ecx
sub eax,dword[esi+0xc]
add edx,ecx
mov dword[ebp-0x10],edx
add eax,dword[ebp-0x10]
mov edx,dword[esi+8]
add edx,dword[ebp-0x14]
mov dword[ebp-8],eax
lea eax,[ebp-0x14]
push eax
push dword[ebp-0x44]
lea eax,[ebp-0x24]
push eax
mov dword[ebp-0xc],edx
call dword[sym.imp.USER32.dll_IntersectRect]
test eax,eax
je 0x48934f
mov eax,dword[ebp-0x14]
sub dword[ebp-0xc],eax
cmp byte[ebp+0x30],0
je 0x489312
mov ecx,dword[ebx+0xc]
sub ecx,dword[ebx+4]
mov edx,dword[ebp-8]
sub ecx,dword[esi+0xc]
sub ecx,dword[esi+4]
mov eax,ecx
sub eax,dword[ebp-0x10]
mov dword[ebp-0x34],ecx
lea eax,[eax+edx-1]
cdq
idiv ecx
test eax,eax
jle 0x48934f
xor ecx,ecx
mov dword[ebp-0x38],eax
mov eax,dword[ebp-0x10]
mov edx,dword[ebp-0x34]
add eax,ecx
mov dword[ebp-0x28],eax
lea eax,[edx+ecx]
mov dword[ebp-0x60],eax
add eax,dword[ebp-0x10]
cmp eax,dword[ebp-8]
jle 0x4892dc
sub edx,eax
mov eax,dword[ebp-8]
add edx,eax
mov ecx,dword[esi+8]
sub eax,dword[ebp-0x28]
push edi
push edx
mov edx,dword[ebx+4]
add edx,dword[esi+4]
push ecx
push edx
mov edx,dword[ebx+8]
sub edx,ecx
push edx
push dword[ebp-0x30]
push eax
push dword[ebp-0xc]
push dword[ebp-0x28]
push dword[ebp-0x14]
push dword[ebp-0x2c]
call dword[sym.imp.GDI32.dll_StretchBlt]
dec dword[ebp-0x38]
mov ecx,dword[ebp-0x60]
jne 0x4892bc
jmp 0x48934f
mov eax,dword[ebp-0x10]
sub dword[ebp-8],eax
mov ecx,dword[ebx+4]
mov eax,dword[esi+4]
mov edx,dword[ebx+0xc]
push edi
sub edx,ecx
sub edx,eax
sub edx,dword[esi+0xc]
add ecx,eax
mov eax,dword[ebx+8]
push edx
mov edx,dword[esi+8]
push edx
push ecx
sub eax,edx
push eax
push dword[ebp-0x30]
push dword[ebp-8]
push dword[ebp-0xc]
push dword[ebp-0x10]
push dword[ebp-0x14]
push dword[ebp-0x2c]
call dword[sym.imp.GDI32.dll_StretchBlt]
mov edx,dword[esi]
test edx,edx
jle 0x4893c4
cmp dword[esi+0xc],0
jle 0x4894e8
mov eax,dword[ebp-0x40]
mov ecx,dword[eax]
mov eax,dword[eax+0xc]
mov dword[ebp-0x14],ecx
mov ecx,dword[esi+0xc]
add edx,dword[ebp-0x14]
sub eax,ecx
mov dword[ebp-0x10],eax
mov dword[ebp-8],ecx
add dword[ebp-8],eax
lea eax,[ebp-0x14]
push eax
push dword[ebp-0x44]
lea eax,[ebp-0x24]
push eax
mov dword[ebp-0xc],edx
call dword[sym.imp.USER32.dll_IntersectRect]
test eax,eax
je 0x4893c4
mov eax,dword[ebp-0x14]
sub dword[ebp-0xc],eax
mov eax,dword[esi+0xc]
mov edx,dword[ebx+0xc]
mov ecx,dword[ebp-0x10]
sub dword[ebp-8],ecx
push edi
push eax
push dword[esi]
sub edx,eax
push edx
push dword[ebx]
push dword[ebp-0x30]
push dword[ebp-8]
push dword[ebp-0xc]
push ecx
push dword[ebp-0x14]
push dword[ebp-0x2c]
call dword[sym.imp.GDI32.dll_StretchBlt]
cmp dword[esi+0xc],0
jle 0x4894e8
mov eax,dword[ebp-0x40]
mov ecx,dword[eax]
mov edx,dword[esi]
add edx,ecx
mov dword[ebp-0x48],ecx
mov ecx,dword[eax+0xc]
mov eax,dword[eax+8]
sub eax,dword[esi+8]
sub ecx,dword[esi+0xc]
sub eax,dword[esi]
mov dword[ebp-0x14],edx
sub eax,dword[ebp-0x48]
mov edx,dword[esi+0xc]
add eax,dword[ebp-0x14]
mov dword[ebp-8],edx
add dword[ebp-8],ecx
mov dword[ebp-0xc],eax
lea eax,[ebp-0x14]
push eax
push dword[ebp-0x44]
lea eax,[ebp-0x24]
push eax
mov dword[ebp-0x10],ecx
call dword[sym.imp.USER32.dll_IntersectRect]
test eax,eax
je 0x4894e8
cmp byte[ebp+0x2c],0
je 0x4894a6
mov ecx,dword[ebx+8]
sub ecx,dword[esi+8]
mov eax,dword[ebp-0x10]
sub ecx,dword[esi]
sub dword[ebp-8],eax
sub ecx,dword[ebx]
mov edx,dword[ebp-0xc]
mov eax,ecx
sub eax,dword[ebp-0x14]
mov dword[ebp-0x34],ecx
lea eax,[eax+edx-1]
cdq
idiv ecx
test eax,eax
jle 0x4894e8
xor ecx,ecx
mov dword[ebp-0x38],eax
mov eax,dword[ebp-0x14]
mov edx,dword[ebp-0x34]
add eax,ecx
mov dword[ebp-0x28],eax
lea eax,[edx+ecx]
mov dword[ebp-0x60],eax
add eax,dword[ebp-0x14]
cmp eax,dword[ebp-0xc]
jle 0x489472
sub edx,eax
mov eax,dword[ebp-0xc]
add edx,eax
mov ecx,dword[esi+0xc]
sub eax,dword[ebp-0x28]
push edi
push ecx
push edx
mov edx,dword[ebx+0xc]
sub edx,ecx
mov ecx,dword[esi]
add ecx,dword[ebx]
push edx
push ecx
push dword[ebp-0x30]
push dword[ebp-8]
push eax
push dword[ebp-0x10]
push dword[ebp-0x28]
push dword[ebp-0x2c]
call dword[sym.imp.GDI32.dll_StretchBlt]
dec dword[ebp-0x38]
mov ecx,dword[ebp-0x60]
jne 0x489452
jmp 0x4894e8
mov ecx,dword[esi+0xc]
mov eax,dword[ebp-0x14]
sub dword[ebp-0xc],eax
mov eax,dword[ebp-0x10]
sub dword[ebp-8],eax
mov eax,dword[esi]
push edi
push ecx
mov ecx,dword[ebx+8]
sub ecx,dword[esi+8]
sub ecx,dword[ebx]
sub ecx,eax
push ecx
mov ecx,dword[ebx+0xc]
sub ecx,dword[esi+0xc]
push ecx
mov ecx,dword[ebx]
add ecx,eax
push ecx
push dword[ebp-0x30]
push dword[ebp-8]
push dword[ebp-0xc]
push dword[ebp-0x10]
push dword[ebp-0x14]
push dword[ebp-0x2c]
call dword[sym.imp.GDI32.dll_StretchBlt]
cmp dword[esi+8],0
jle 0x489565
cmp dword[esi+0xc],0
jle 0x489565
mov ecx,dword[ebp-0x40]
mov eax,dword[ecx+8]
sub eax,dword[esi+8]
mov edx,dword[esi+8]
mov ecx,dword[ecx+0xc]
sub ecx,dword[esi+0xc]
mov dword[ebp-0xc],edx
add dword[ebp-0xc],eax
mov edx,dword[esi+0xc]
mov dword[ebp-0x14],eax
lea eax,[ebp-0x14]
push eax
push dword[ebp-0x44]
lea eax,[ebp-0x24]
mov dword[ebp-8],edx
add dword[ebp-8],ecx
push eax
mov dword[ebp-0x10],ecx
call dword[sym.imp.USER32.dll_IntersectRect]
test eax,eax
je 0x489565
mov eax,dword[esi+0xc]
mov esi,dword[esi+8]
mov ecx,dword[ebp-0x10]
mov edx,dword[ebp-0x14]
sub dword[ebp-8],ecx
sub dword[ebp-0xc],edx
push edi
mov edi,dword[ebx+0xc]
push eax
push esi
sub edi,eax
mov eax,dword[ebx+8]
push edi
sub eax,esi
push eax
push dword[ebp-0x30]
push dword[ebp-8]
push dword[ebp-0xc]
push ecx
push edx
push dword[ebp-0x2c]
call dword[sym.imp.GDI32.dll_StretchBlt]
push dword[ebp-0x80]
push dword[ebp-0x30]
call dword[sym.imp.GDI32.dll_SelectObject]
push dword[ebp-0x30]
call dword[sym.imp.GDI32.dll_DeleteDC]
mov ecx,dword[ebp-4]
pop edi
pop esi
xor ecx,ebp
pop ebx
call fcn.0044a5c2
leave
ret
{% endhighlight %}


[similar_1_ref]: /report/fcn.00408b10@e2ba7f10eb234338a49853c34d7d9c56
[similar_2_ref]: /report/fcn.004086e0@e2ba7f10eb234338a49853c34d7d9c56
[similar_3_ref]: /report/fcn.00431280@46f6c2adf1fd4d1453ed312ca79dd9bf
[similar_4_ref]: /report/fcn.0046b000@27ac6b5c7fa1ad11790cdc733c25a701
[similar_5_ref]: /report/fcn.0040d317@065d95e046989885ac0aa05648eeda39
[virustotal_ref]: https://www.virustotal.com/gui/file/b3771987fba16f4fba07d1109ec72c76