---
layout: post
title:  "fcn.00401340 @ 4fe6510221c33bf023f6abed461fc13f"
date:   2021-08-30 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00401340
- **Origin (md5):** 4fe6510221c33bf023f6abed461fc13f
- **VirusTotal:** [virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f][virustotal_ref]

# Code Tags
<span class="tag" id="PROCESS">PROCESS</span>


# Similar Functions

1. [fcn.004061b0][similar_1_ref] (sim.: 0.9120218985527505)
2. [entry0][similar_2_ref] (sim.: 0.9008518546159809)
3. [entry0][similar_3_ref] (sim.: 0.9008518546159809)
4. [entry0][similar_4_ref] (sim.: 0.9008518546159809)
5. [fcn.00438d70][similar_5_ref] (sim.: 0.8933329641910324)


# Disassembled Code

{% highlight nasm %}
push ebp
mov ebp,esp
and esp,0xfffffff8
mov eax,0x134c
call fcn.00498540
push ebx
push esi
push edi
xor edi,edi
cmp dword[ebp+0xc],2
mov byte[esp+0x1e],0
lea ebx,[edi+1]
jne 0x401379
cmp byte[0x4c6611],0
mov dword[ebp+0xc],ebx
jne 0x401379
mov byte[0x4c6611],bl
mov byte[esp+0x1e],bl
cmp dword[0x4c85fc],edi
je 0x4013ad
cmp dword[0x4c85ec],edi
je 0x40139b
mov eax,dword[0x4c85e4]
push eax
call dword[sym.imp.KERNEL32.dll_GlobalUnlock]
mov dword[0x4c85ec],edi
call dword[sym.imp.USER32.dll_CloseClipboard]
mov dword[0x4c85fc],edi
mov dword[0x4c85e4],edi
mov esi,dword[ebp+8]
cmp esi,0x8000012f
jne 0x4013cd
mov dword[ebp+8],0xa
mov esi,dword[ebp+8]
mov byte[esp+0x58],1
mov dword[esp+0x68],edi
jmp 0x4013eb
cmp esi,5
setle al
mov byte[esp+0x58],al
test al,al
je 0x4013e1
mov dword[esp+0x68],edi
jmp 0x4013eb
call dword[sym.imp.KERNEL32.dll_GetTickCount]
mov dword[esp+0x68],eax
cmp dword[0x4c7eb0],edi
je 0x4013f8
call fcn.00403100
mov byte[esp+0x12],0
cmp dword[0x4c90d8],edi
je 0x401413
call fcn.00402f30
test al,al
je 0x401413
mov byte[esp+0x12],1
cmp esi,edi
jle 0x40164b
cmp dword[ebp+0xc],ebx
jne 0x40164b
add dword[0x4c6620],ebx
cmp byte[0x4c660b],0
mov byte[esp+0x1f],1
jne 0x401455
mov ecx,dword[0x4c64b8]
push edi
push 0xa
push 9
push ecx
call dword[sym.imp.USER32.dll_SetTimer]
test eax,eax
setne dl
mov byte[0x4c660b],dl
mov byte[esp+0x33],0
mov byte[esp+0x1d],0
mov dword[esp+0x64],edi
mov ebx,dword[sym.imp.KERNEL32.dll_GetTickCount]
call ebx
cmp dword[ebp+8],0
mov esi,eax
mov dword[esp+0x20],esi
jle 0x401655
cmp byte[esp+0x1d],0
jne 0x401655
cmp byte[0x4c6611],0
jne 0x401662
call fcn.004036d0
neg eax
sbb eax,eax
and eax,0xfffffcef
add eax,0x311
push eax
push 0
push 0
lea eax,[esp+0x40]
push eax
call dword[sym.imp.USER32.dll_GetMessageW]
cmp eax,0xffffffff
je 0x401463
call ebx
mov ecx,eax
sub ecx,esi
cmp ecx,3
jbe 0x4014cb
mov dword[0x4c9120],eax
inc dword[esp+0x64]
cmp dword[0x4c85dc],0
je 0x401507
mov ecx,dword[esp+0x40]
mov edx,dword[esp+0x3c]
mov esi,dword[esp+0x38]
lea eax,[esp+0x34]
push eax
mov eax,dword[esp+0x38]
push ecx
push edx
push eax
lea edi,[esp+0xdc]
call fcn.00403170
add esp,0x10
test al,al
jne 0x401463
mov edx,dword[0x4c6c50]
mov ebx,dword[esp+0x34]
test edx,edx
je 0x401b2c
test ebx,ebx
je 0x401b2c
cmp ebx,dword[0x4c64b8]
je 0x401b2c
mov eax,dword[esp+0x38]
cmp eax,0x414
je 0x401b2c
cmp eax,0x402
je 0x401b2c
add eax,0xffffff00
cmp eax,9
ja 0x401abd
call dword[sym.imp.USER32.dll_GetFocus]
mov esi,eax
mov dword[esp+0x18],esi
test esi,esi
je 0x401ac3
call fcn.004784d0
mov ebx,eax
test ebx,ebx
je 0x401ac3
mov eax,esi
call fcn.0045bc00
mov edi,eax
mov dword[esp+0xc],edi
test edi,edi
je 0x401ac3
mov eax,dword[edi+0x74]
test eax,eax
je 0x4015a9
lea ecx,[esp+0x34]
push ecx
push eax
push ebx
call dword[sym.imp.USER32.dll_TranslateAcceleratorW]
test eax,eax
jne 0x401463
cmp dword[esp+0x38],0x100
mov esi,dword[esp+0x3c]
jne 0x401a76
cmp byte[edi+0xb8],0
je 0x4019c4
cmp esi,0x22
je 0x4015e5
cmp esi,0x21
je 0x4015e5
cmp esi,9
je 0x4015e5
cmp esi,0x25
je 0x4015e5
cmp esi,0x27
jne 0x4019c4
mov eax,dword[esp+0x18]
mov ebx,edi
call fcn.004012c0
mov ebx,eax
mov dword[esp+0x14],ebx
test ebx,ebx
je 0x4019b2
mov al,byte[ebx+4]
cmp al,0xf
je 0x4019b2
mov esi,dword[esp+0x3c]
mov dword[esp+0x20],0
cmp al,0x13
jne 0x4018f5
mov dword[esp+0x20],ebx
cmp esi,0x25
je 0x40162f
cmp esi,0x27
jne 0x4018f5
cmp esi,0x27
sete dl
push 0
movzx eax,dl
push 0
push eax
mov eax,ebx
mov ecx,edi
call fcn.00468bc0
jmp 0x401463
mov byte[esp+0x1f],0
jmp 0x401455
cmp byte[0x4c6611],0
je 0x4017ef
call dword[sym.imp.USER32.dll_GetForegroundWindow]
mov esi,eax
test esi,esi
je 0x4017ef
push 0
push esi
call dword[sym.imp.USER32.dll_GetWindowThreadProcessId]
cmp eax,dword[0x4c85cc]
jne 0x4017ef
cmp dword[0x4c6654],0
je 0x4016e4
push 0x20
lea edx,[esp+0x164]
push edx
push esi
call dword[sym.imp.USER32.dll_GetClassNameW]
mov ecx,str.32770
lea eax,[esp+0x160]
lea ecx,[ecx]
mov dx,word[eax]
cmp dx,word[ecx]
jne 0x4016d6
test dx,dx
je 0x4016d2
mov dx,word[eax+2]
cmp dx,word[ecx+2]
jne 0x4016d6
add eax,4
add ecx,4
test dx,dx
jne 0x4016b0
xor eax,eax
jmp 0x4016db
sbb eax,eax
sbb eax,0xffffffff
test eax,eax
sete al
test al,al
jne 0x401739
call dword[sym.imp.USER32.dll_GetFocus]
test eax,eax
je 0x4017ef
push 0x20
lea ecx,[esp+0x164]
push ecx
push eax
call dword[sym.imp.USER32.dll_GetClassNameW]
lea edx,[esp+0x160]
push str.SysTreeView32
push edx
call fcn.0048cd49
add esp,8
test eax,eax
je 0x401739
lea eax,[esp+0x160]
push str.SysListView32
push eax
call fcn.0048cd49
add esp,8
test eax,eax
jne 0x4017ef
call fcn.004036d0
mov edi,dword[sym.imp.USER32.dll_PeekMessageW]
push 0
push 0x1ff
neg eax
push 0
sbb esi,esi
push 0
lea ecx,[esp+0x44]
and esi,0xfffffcee
push ecx
add esi,0x311
call edi
test eax,eax
jne 0x40177f
push 1
push esi
push 0x20e
push eax
lea edx,[esp+0x44]
push edx
call edi
jmp 0x40186a
mov ebx,dword[esp+0x44]
push 0
push esi
push 0x20e
push 0
lea eax,[esp+0x44]
push eax
call edi
push 1
test eax,eax
jne 0x4017b3
push 0x1ff
push eax
push eax
lea ecx,[esp+0x44]
push ecx
call edi
mov ebx,dword[sym.imp.KERNEL32.dll_GetTickCount]
jmp 0x40186a
mov edx,dword[esp+0x48]
sub edx,ebx
test edx,edx
jle 0x4017d8
push 0x1ff
push 0
push 0
lea eax,[esp+0x44]
push eax
call edi
mov ebx,dword[sym.imp.KERNEL32.dll_GetTickCount]
jmp 0x40186a
push esi
push 0x20e
push 0
lea ecx,[esp+0x44]
push ecx
call edi
mov ebx,dword[sym.imp.KERNEL32.dll_GetTickCount]
jmp 0x40186a
cmp dword[0x4c28b4],0
je 0x401848
cmp dword[0x4c6648],0
jne 0x401848
mov eax,dword[0x4c28ec]
cmp byte[eax+0xe8],0
jne 0x40183f
cmp byte[eax+0xea],0
jne 0x40183f
cmp dword[eax+0xdc],0xffffffff
jle 0x40183f
call ebx
mov edx,eax
mov eax,dword[0x4c28ec]
sub edx,dword[eax+0xd8]
cmp edx,dword[eax+0xdc]
jb 0x40183f
mov byte[eax+0xe8],1
movzx eax,byte[eax+0xe8]
jmp 0x40184a
xor eax,eax
neg eax
sbb eax,eax
push 1
and eax,0xfffffcef
add eax,0x311
push eax
push 0
push 0
lea eax,[esp+0x44]
push eax
call dword[sym.imp.USER32.dll_PeekMessageW]
test eax,eax
jne 0x4014cb
call ebx
mov ecx,eax
sub ecx,dword[esp+0x20]
cmp ecx,3
jbe 0x401884
mov dword[0x4c9120],eax
mov esi,dword[ebp+8]
test esi,esi
jne 0x4018a3
cmp byte[esp+0x33],0
jne 0x4018a3
push esi
call dword[sym.imp.KERNEL32.dll_Sleep]
mov byte[esp+0x33],1
jmp 0x401463
cmp dword[esp+0x64],0
jne 0x4018ca
cmp byte[esp+0x58],0
je 0x4018ca
test esi,esi
jle 0x4018bd
push 5
call dword[sym.imp.KERNEL32.dll_Sleep]
mov dword[esp+0x64],1
jmp 0x401463
call ebx
cmp byte[esp+0x58],0
jne 0x402dbd
mov edx,dword[esp+0x68]
sub edx,eax
add edx,esi
cmp edx,5
jle 0x402dbd
push 5
call dword[sym.imp.KERNEL32.dll_Sleep]
jmp 0x401463
cmp esi,0x25
je 0x4019b6
cmp esi,0x27
je 0x4019b6
push 0x11
call dword[sym.imp.USER32.dll_GetKeyState]
mov ecx,0x8000
test cx,ax
je 0x4019b2
mov esi,dword[esp+0x3c]
cmp esi,9
jne 0x40193f
cmp byte[ebx+4],0xc
jne 0x40193f
mov edx,dword[ebx]
push 0xfffffffffffffff0
push edx
call dword[sym.imp.USER32.dll_GetWindowLongW]
test al,4
jne 0x4019b2
mov esi,dword[esp+0x3c]
cmp dword[esp+0x20],0
jne 0x401967
mov bl,byte[ebx+6]
mov ecx,edi
call fcn.00468930
mov dword[esp+0x20],eax
test eax,eax
jne 0x401967
xor bl,bl
call fcn.00468930
mov dword[esp+0x20],eax
test eax,eax
je 0x4019b6
cmp esi,0x22
je 0x40199a
cmp esi,9
jne 0x401983
push 0x10
call dword[sym.imp.USER32.dll_GetKeyState]
mov ecx,0x8000
test cx,ax
je 0x40199a
xor al,al
push 1
push 1
mov ecx,edi
push eax
mov eax,dword[esp+0x2c]
call fcn.00468bc0
jmp 0x401463
mov eax,1
push eax
push eax
push eax
mov eax,dword[esp+0x2c]
mov ecx,edi
call fcn.00468bc0
jmp 0x401463
mov esi,dword[esp+0x3c]
cmp dword[esp+0x38],0x100
jne 0x401a76
cmp esi,0x1b
je 0x401a00
cmp esi,9
je 0x401a00
cmp esi,0x41
jne 0x401a76
mov esi,dword[sym.imp.USER32.dll_GetKeyState]
push 0x11
call esi
mov edx,0x8000
test dx,ax
je 0x401a72
push 0xa5
call esi
mov ecx,0x8000
test cx,ax
jne 0x401a72
mov eax,dword[esp+0x18]
mov ebx,edi
call fcn.004012c0
mov dword[esp+0x14],eax
test eax,eax
je 0x401a72
mov edx,eax
cmp byte[edx+4],0xc
jne 0x401a72
mov esi,dword[esp+0x3c]
cmp esi,0x1b
je 0x401a66
cmp esi,0x41
je 0x401a49
test byte[eax+5],0x80
je 0x401a76
mov eax,dword[eax]
push 0x4a0884
push 1
push 0xc2
push eax
call dword[sym.imp.USER32.dll_SendMessageW]
jmp 0x401463
test byte[eax+5],2
jne 0x401a76
mov ecx,dword[eax]
push 0xffffffffffffffff
push 0
push 0xb1
push ecx
call dword[sym.imp.USER32.dll_SendMessageW]
jmp 0x401463
mov eax,edi
call fcn.004650c0
jmp 0x401463
mov esi,dword[esp+0x3c]
mov eax,dword[0x4c857c]
test eax,eax
je 0x401ac7
cmp dword[esp+0x38],0x100
jne 0x401ac7
cmp esi,0xd
jne 0x401aa3
push 0
push 0
push 0x1116
push eax
call dword[sym.imp.USER32.dll_SendMessageW]
jmp 0x401463
cmp esi,0x1b
jne 0x401ac7
push 0
push 1
push 0x1116
push eax
call dword[sym.imp.USER32.dll_SendMessageW]
jmp 0x401463
mov esi,dword[esp+0x3c]
jmp 0x401ad1
mov esi,dword[esp+0x3c]
mov edx,dword[0x4c6c50]
mov ebx,dword[esp+0x34]
xor edi,edi
test edx,edx
jle 0x401b30
mov eax,dword[0x4c28ec]
lea esp,[esp]
mov ecx,dword[0x4c665c]
mov byte[eax+0xe4],1
mov edx,dword[esp+0x38]
mov dword[eax+0xe0],edx
mov edx,dword[ecx+edi*4]
lea eax,[esp+0x34]
push eax
mov eax,dword[edx+4]
push eax
call dword[sym.imp.USER32.dll_IsDialogMessageW]
test eax,eax
jne 0x402dab
mov edx,dword[0x4c6c50]
mov eax,dword[0x4c28ec]
inc edi
mov byte[eax+0xe4],0
cmp edi,edx
jl 0x401ae0
mov ebx,dword[esp+0x34]
mov esi,dword[esp+0x3c]
mov eax,dword[esp+0x38]
cmp eax,0x312
ja 0x401c8e
je 0x401cb6
cmp eax,0x100
ja 0x401baf
je 0x401b86
cmp eax,0x12
je 0x401b70
cmp eax,0x4b
jne case.0x401c9f.1027
mov dword[0x4c65f0],0
mov byte[esp+0x1d],1
jmp 0x401463
push 0
xor eax,eax
push 0x4c8640
lea edx,[eax+6]
call fcn.004160c0
jmp 0x401463
cmp ebx,dword[0x4c64bc]
jne case.0x401c9f.1027
cmp esi,0x1b
jne case.0x401c9f.1027
mov edx,dword[0x4c64b8]
push 0
push edx
call dword[sym.imp.USER32.dll_ShowWindow]
jmp 0x401463
cmp eax,0x113
jne case.0x401c9f.1027
cmp dword[esp+0x40],0
jne case.0x401c9f.1027
cmp ebx,dword[0x4c64b8]
jne case.0x401c9f.1027
cmp dword[0x4c7eb0],0
je 0x401bdf
call fcn.00403100
cmp dword[0x4c90d8],0
je 0x401bf6
call fcn.00402f30
test al,al
je 0x401bf6
mov byte[esp+0x12],1
cmp dword[ebp+0xc],0
je 0x401463
cmp dword[ebp+8],1
jl 0x401463
mov eax,dword[esp+0x58]
mov ecx,dword[esp+0x68]
mov esi,dword[ebp+8]
push eax
push ecx
call fcn.00402ef0
add esp,8
test eax,eax
je 0x401463
cmp byte[esp+0x1e],0
je 0x401c35
mov byte[0x4c6611],0
cmp byte[esp+0x1f],0
je 0x401c83
dec dword[0x4c6620]
test esi,esi
jle 0x401c83
cmp dword[0x4c6620],0
jne 0x401c83
cmp dword[0x4c90d8],0
jne 0x401c83
cmp dword[0x4c7eb0],0
jne 0x401c83
cmp byte[0x4c660b],0
je 0x401c83
mov eax,dword[0x4c64b8]
push 9
push eax
call dword[sym.imp.USER32.dll_KillTimer]
test eax,eax
je 0x401c83
mov byte[0x4c660b],0
mov al,byte[esp+0x12]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add eax,0xfffffc00
cmp eax,0x15
ja case.0x401c9f.1027
movzx eax,byte[eax+0x402e58]
jmp dword[eax*4+0x402e4c]
test ebx,ebx
je case.0x401c9f.1026
cmp ebx,dword[0x4c64b8]
jne case.0x401c9f.1027
mov eax,dword[esp+0x38]
xor ecx,ecx
add eax,0xfffffbff
mov dword[esp+0x20],ecx
cmp eax,0x14
ja case.0x401cd1.1027
movzx eax,byte[eax+0x402e84]
jmp dword[eax*4+0x402e70]
xor eax,eax
cmp edx,ecx
jle 0x401cf5
mov ecx,dword[0x4c665c]
mov edi,dword[ecx+eax*4]
cmp dword[edi+4],ebx
je 0x401d71
inc eax
cmp eax,edx
jl 0x401ce4
mov dword[esp+0xc],0
call dword[sym.imp.USER32.dll_GetForegroundWindow]
mov esi,eax
test esi,esi
je 0x402d5c
push 0
push esi
call dword[sym.imp.USER32.dll_GetWindowThreadProcessId]
cmp eax,dword[0x4c85cc]
jne 0x402d5c
push 0x20
lea edx,[esp+0x164]
push edx
push esi
call dword[sym.imp.USER32.dll_GetClassNameW]
mov ecx,str.32770
lea eax,[esp+0x160]
nop
mov dx,word[eax]
cmp dx,word[ecx]
jne 0x402cfb
test dx,dx
je 0x401d6a
mov dx,word[eax+2]
cmp dx,word[ecx+2]
jne 0x402cfb
add eax,4
add ecx,4
test dx,dx
jne 0x401d40
xor eax,eax
jmp 0x402d00
mov eax,edi
xor ebx,ebx
mov dword[esp+0xc],eax
cmp eax,ebx
je case.0x401c9f.1027
mov eax,dword[esp+0x40]
movzx ecx,si
shr esi,0x10
mov dword[esp+0x24],eax
mov dword[esp+0x2c],ecx
mov dword[esp+0x74],esi
mov dword[esp+0x28],ebx
cmp ecx,8
jne 0x401db4
mov dword[esp+0x74],0x2af8
mov dword[esp+0x24],esi
mov esi,dword[esp+0x74]
mov dword[esp+0x78],eax
mov eax,dword[esp+0xc]
cmp esi,dword[eax+0x10]
jae 0x401dcc
lea edx,[esi+esi*4]
mov esi,dword[eax+0x18]
lea edx,[esi+edx*4]
mov dword[esp+0x14],edx
jmp 0x401dd0
mov dword[esp+0x14],ebx
add ecx,0xfffffffb
mov dword[esp+0x60],ebx
mov byte[esp+0x13],bl
cmp ecx,4
ja case.default.0x401de4
jmp dword[ecx*4+0x402e9c]
mov esi,dword[eax+0x2c]
mov dword[esp+0x18],esi
cmp esi,ebx
je 0x401463
mov eax,dword[esp+0xc]
add eax,0x3a
mov dword[esp+0x60],eax
mov eax,dword[esp+0x60]
cmp eax,ebx
je 0x401e15
cmp byte[eax],bl
jne 0x401463
xor ebx,ebx
jmp 0x402152
mov esi,dword[eax+0x24]
mov dword[esp+0x18],esi
cmp esi,ebx
je 0x401463
mov ecx,dword[esp+0xc]
add ecx,0x38
mov dword[esp+0x60],ecx
jmp 0x401e05
mov esi,dword[eax+0x28]
mov dword[esp+0x18],esi
cmp esi,ebx
je 0x401463
mov edx,dword[esp+0xc]
add edx,0x39
mov dword[esp+0x60],edx
jmp 0x401e05
mov esi,dword[eax+0x34]
mov dword[esp+0x18],esi
cmp esi,ebx
je 0x401463
xor ebx,ebx
jmp 0x402152
mov esi,dword[eax+0x30]
mov edi,dword[eax+0x68]
mov dword[esp+0x20],edi
mov dword[esp+0x18],esi
cmp esi,ebx
je 0x401e9b
cmp edi,ebx
je 0x401463
push ebx
push ebx
push 0xffffffffffffffff
push edi
call dword[sym.imp.SHELL32.dll_DragQueryFileW]
mov dword[esp+0x24],eax
cmp eax,ebx
jne 0x401e15
cmp edi,ebx
je 0x401463
push edi
call dword[sym.imp.SHELL32.dll_DragFinish]
mov eax,dword[esp+0xc]
mov dword[eax+0x68],ebx
jmp 0x401463
cmp dword[esp+0x14],ebx
je 0x401463
mov eax,dword[esp+0x14]
mov esi,dword[eax+0xc]
mov dword[esp+0x18],esi
cmp esi,ebx
jne 0x401ee7
test byte[eax+5],1
je 0x401463
mov eax,dword[esp+0xc]
call fcn.00465060
jmp 0x401463
test byte[eax+5],4
jne 0x401463
mov byte[esp+0x13],1
xor ebx,ebx
jmp 0x402152
cmp esi,ecx
je 0x401f20
call fcn.0045bbd0
mov dword[esp+0xc],eax
test eax,eax
jne 0x401f24
test ebx,ebx
je 0x401f24
cmp ebx,dword[0x4c64b8]
jne case.0x401c9f.1027
jmp 0x401f24
mov dword[esp+0xc],ecx
mov edx,dword[esp+0x40]
mov eax,0x4c8640
call fcn.00401310
mov dword[esp+0x70],eax
test eax,eax
je 0x401463
mov ecx,eax
mov esi,dword[ecx+8]
test esi,esi
je 0x401463
mov edx,eax
mov ebx,dword[edx+0x18]
jmp 0x40214e
cmp esi,dword[0x4c7eb8]
jae 0x401463
mov eax,dword[0x4c7eb4]
mov esi,dword[eax+esi*4]
mov cl,byte[esi+0x24]
mov dword[esp+0x50],esi
test cl,cl
je 0x402001
mov eax,dword[esi]
test eax,eax
je 0x401f83
mov eax,dword[eax+4]
jmp 0x401f88
mov eax,0x4ab02c
mov edx,dword[esi+0x1c]
push eax
mov eax,dword[esi+0x10]
push edx
mov edx,dword[esi+0xc]
mov bl,cl
call fcn.00409920
add esp,8
mov dword[esp+0x54],eax
test eax,eax
je 0x401463
mov eax,dword[esp+0x50]
mov al,byte[eax+0x24]
cmp al,1
je 0x401fc0
cmp al,3
je 0x401fc0
mov dword[esp+0x54],0
mov esi,dword[esp+0x50]
mov ecx,dword[esp+0x40]
push ecx
push esi
call fcn.0040ca70
mov edx,dword[esi+8]
cmp word[edx],0
jne 0x401463
mov edi,dword[esp+0x50]
cmp byte[edi+0x2f],0
je 0x40200b
mov ax,word[esp+0x40]
mov word[0x4c90f0],ax
mov edx,dword[edi]
mov ebx,dword[edi+0x14]
mov dword[esp+0x18],edx
mov esi,edx
jmp 0x402156
mov dword[esp+0x54],0
jmp 0x401fc4
xor ecx,ecx
mov word[0x4c90f0],cx
mov edx,dword[edi]
mov ebx,dword[edi+0x14]
mov dword[esp+0x18],edx
mov esi,edx
jmp 0x402156
cmp byte[0x4c90c4],cl
jne 0x401463
mov esi,dword[0x4c90b8]
mov dword[esp+0x18],esi
test esi,esi
jne 0x402048
mov esi,dword[0x4c8c74]
mov dword[esp+0x18],esi
xor ebx,ebx
jmp 0x402152
mov ecx,dword[0x4c3acc]
mov eax,esi
and eax,0x3fff
cmp ax,word[ecx]
jae 0x401463
mov eax,dword[eax*4+0x4c6f00]
shr esi,0x10
mov dword[esp+0x6c],eax
test si,si
je 0x4020aa
mov ecx,eax
mov edx,dword[ecx+0x20]
add esi,0xffff
mov dword[esp+0x5c],edx
test si,si
je 0x4020a2
mov eax,dword[esp+0x5c]
mov ecx,dword[eax+0x14]
add esi,0xffff
mov dword[esp+0x5c],ecx
test si,si
jne 0x40208c
mov edi,dword[esp+0x5c]
test edi,edi
jne 0x4020c6
mov edx,dword[esp+0x6c]
push edx
lea eax,[esp+0x58]
call fcn.0040a330
mov dword[esp+0x5c],eax
test eax,eax
je 0x401463
mov edi,eax
mov esi,dword[edi]
push esi
call fcn.0046ecd0
add esp,4
sub eax,0
je 0x4020d9
dec eax
jne 0x4020e4
mov esi,dword[esi+8]
test esi,esi
je 0x4020e4
mov al,byte[esi]
jmp 0x4020e6
xor al,al
mov cl,byte[edi+0x1f]
cmp cl,byte[edi+0x20]
jb 0x402126
cmp al,0xde
je 0x402126
cmp al,0xca
je 0x402126
cmp al,0xd8
je 0x402126
cmp al,0xd9
je 0x402126
cmp al,0xd4
je 0x402126
cmp al,0xd5
je 0x402126
cmp al,0xd6
je 0x402126
cmp al,0xd7
je 0x402126
cmp byte[edi+0x23],0
je 0x402118
mov byte[edi+0x24],1
call dword[sym.imp.KERNEL32.dll_GetTickCount]
mov dword[edi+4],eax
jmp 0x401463
mov al,byte[edi+0x1e]
cmp al,2
je 0x402141
cmp al,4
je 0x402141
cmp al,5
jne 0x402149
mov edx,dword[0x4c6644]
mov dword[esp+0x54],edx
jmp 0x402149
mov dword[esp+0x54],0
mov esi,dword[edi]
mov ebx,dword[edi+0x18]
mov dword[esp+0x18],esi
mov edi,dword[esp+0x50]
push esi
call fcn.0046ecd0
add esp,4
sub eax,0
je 0x402167
dec eax
jne 0x402172
mov esi,dword[esi+8]
test esi,esi
je 0x402172
mov al,byte[esi]
jmp 0x402174
xor al,al
mov ecx,dword[0x4c6624]
mov edx,dword[0x4c28c0]
mov byte[esp+0x7c],al
cmp ecx,edx
jl 0x4021d5
add edx,2
cmp ecx,edx
jge 0x4021af
cmp al,0xde
je 0x4021d5
cmp al,0xca
je 0x4021d5
cmp al,0xd8
je 0x4021d5
cmp al,0xd9
je 0x4021d5
cmp al,0xd4
je 0x4021d5
cmp al,0xd5
je 0x4021d5
cmp al,0xd6
je 0x4021d5
cmp al,0xd7
je 0x4021d5
cmp dword[esp+0x20],0
je 0x401463
mov eax,dword[esp+0x20]
push eax
call dword[sym.imp.SHELL32.dll_DragFinish]
mov ecx,dword[esp+0xc]
mov dword[ecx+0x68],0
jmp 0x401463
mov edx,dword[0x4c28ec]
cmp ebx,dword[edx+0x2c]
jge 0x402206
cmp dword[esp+0x20],0
je 0x401463
mov eax,dword[esp+0x20]
push eax
call dword[sym.imp.SHELL32.dll_DragFinish]
mov ecx,dword[esp+0xc]
mov dword[ecx+0x68],0
jmp 0x401463
mov eax,dword[esp+0x38]
mov byte[esp+0x12],1
cmp eax,0x402
je 0x402278
cmp eax,0x413
jbe 0x402228
cmp eax,0x415
jbe 0x4022c1
mov edx,dword[0x4c9090]
mov ecx,dword[0x4c90e8]
mov dword[0x4c9094],edx
mov dword[0x4c90ec],ecx
cmp eax,0x401
jne 0x40225e
mov edx,dword[edi]
mov eax,dword[edx+4]
mov dword[0x4c9090],eax
call dword[sym.imp.KERNEL32.dll_GetTickCount]
mov dword[0x4c90e8],eax
jmp 0x4022c1
mov ecx,dword[esp+0x6c]
mov edx,dword[ecx+4]
mov dword[0x4c9090],edx
call dword[sym.imp.KERNEL32.dll_GetTickCount]
mov dword[0x4c90e8],eax
jmp 0x4022c1
mov esi,dword[esp+0x70]
mov eax,dword[esi]
push 0x104
push eax
push 0x4c8c7c
call fcn.0048fa44
xor ecx,ecx
mov word[0x4c8e84],cx
mov edx,dword[esi+0x10]
mov eax,dword[edx]
add esp,0xc
push 0x104
push eax
push 0x4c8e86
call fcn.0048fa44
add esp,0xc
xor ecx,ecx
mov word[0x4c908e],cx
mov dword[0x4c8c78],esi
mov esi,dword[0x4c6cb4]
cmp byte[esi+0x17],0
jne 0x4022d0
mov esi,dword[esi+0xc]
test byte[esi+0x15],8
je 0x4022dd
mov eax,esi
call fcn.00401160
mov al,byte[esi+0x17]
cmp al,1
jne 0x4022f6
test byte[esi+0x15],4
je 0x4022f1
mov eax,esi
call fcn.0042e780
mov eax,dword[esi+8]
jmp 0x402306
cmp al,2
jne 0x402301
call fcn.00401000
jmp 0x402306
mov eax,0x4c85b8
push 0x7f
push eax
lea edx,[esp+0x1a8]
push edx
call fcn.0048fa44
mov ecx,dword[esp+0x88]
add esp,0xc
push ecx
xor eax,eax
xor esi,esi
mov word[esp+0x2a2],ax
push esi
push ebx
mov al,1
call fcn.00403520
mov ebx,dword[0x4c28ec]
add esp,0xc
call dword[sym.imp.KERNEL32.dll_GetTickCount]
mov dword[0x4c9124],eax
mov dword[0x4c9120],eax
mov eax,dword[esp+0x38]
add eax,0xfffffbff
cmp eax,0x14
ja case.0x402368.1027
movzx edx,byte[eax+0x402ec4]
jmp dword[edx*4+0x402eb0]
mov esi,dword[esp+0x14]
xor eax,eax
mov word[esp+0x88],ax
cmp byte[esp+0x13],al
je 0x402387
mov ecx,dword[esi]
jmp 0x40238e
mov ecx,dword[esp+0xc]
mov ecx,dword[ecx+4]
mov edi,dword[esp+0x28]
mov edx,edi
add edx,edx
lea eax,[esp+edx*8+0xd0]
mov dword[eax],ecx
mov ecx,dword[esp+0x2c]
xor edx,edx
mov dword[eax+8],1
mov dword[eax+4],edx
inc edi
lea eax,[ecx-5]
mov dword[esp+0x28],edi
cmp eax,4
ja case.default.0x4023c0
jmp dword[eax*4+0x402edc]
xor eax,eax
cmp dword[esp+0x24],edx
mov dword[esp+0x24],edx
sete al
lea eax,[eax+eax+1]
mov dword[ebx+0x34],eax
mov ecx,dword[esp+0x48]
mov dword[ebx+0x3c],ecx
mov eax,dword[esp+0x4c]
mov dword[ebx+0x40],eax
cmp esi,edx
je 0x402496
cmp dword[ebx+0x34],1
jne 0x402404
mov esi,dword[esp+0x14]
lea eax,[ebx+0x3c]
push eax
call fcn.00468d30
movzx eax,byte[esi+4]
sub eax,9
je 0x40247f
dec eax
je 0x402471
dec eax
jne 0x402496
cmp dword[ebx+0x34],1
jne 0x402430
mov ecx,dword[esi]
push eax
push 9
push 0x110a
push ecx
call dword[sym.imp.USER32.dll_SendMessageW]
jmp 0x402492
mov edx,dword[esp+0x48]
mov eax,dword[esp+0x4c]
lea ecx,[esp+0xa8]
mov dword[esp+0xa8],edx
mov edx,dword[esi]
push ecx
push edx
mov dword[esp+0xb4],eax
call dword[sym.imp.USER32.dll_ScreenToClient]
mov ecx,dword[esi]
lea eax,[esp+0xa8]
push eax
push 0
push 0x1111
push ecx
call dword[sym.imp.USER32.dll_SendMessageW]
jmp 0x402492
mov edx,dword[esi]
push 1
push 0xffffffffffffffff
push 0x100c
push edx
jmp 0x40248b
mov eax,dword[esi]
push 0
push 0
push 0x19f
push eax
call dword[sym.imp.USER32.dll_SendMessageW]
inc eax
mov dword[esp+0x24],eax
mov ecx,dword[esp+0xc]
mov ecx,dword[ecx+4]
lea esi,[ebx+0x3c]
call fcn.00474c90
cmp dword[esp+0x14],0
mov ecx,1
je 0x4024d2
mov edx,edi
add edx,edx
lea eax,[esp+edx*8+0xd0]
mov edx,dword[esp+0x14]
mov edx,dword[edx]
add edi,ecx
mov dword[eax+8],ecx
mov dword[eax],edx
mov dword[eax+4],0
jmp 0x4024eb
mov eax,edi
add eax,eax
lea eax,[esp+eax*8+0xd0]
inc edi
mov dword[eax+8],0
mov dword[eax],0x4ab02c
mov edx,edi
add edx,edx
mov dword[esp+edx*8+0xd8],ecx
mov dword[esp+edx*8+0xd4],0
lea eax,[esp+edx*8+0xd0]
mov edx,dword[esp+0x24]
mov dword[eax],edx
add edi,ecx
mov eax,edi
add eax,eax
lea esi,[esp+eax*8+0xd0]
xor eax,eax
add edi,ecx
cmp dword[ebx+0x34],3
mov dword[esi+8],ecx
sete al
cdq
mov dword[esi+4],edx
mov dword[esi],eax
mov eax,dword[ebx+0x3c]
mov edx,edi
add edx,edx
lea esi,[esp+edx*8+0xd0]
cdq
mov dword[esi],eax
add edi,ecx
mov dword[esi+4],edx
mov dword[esi+8],ecx
mov eax,edi
add eax,eax
lea esi,[esp+eax*8+0xd0]
mov eax,dword[ebx+0x40]
cdq
mov dword[esi+8],ecx
mov dword[esi],eax
mov dword[esi+4],edx
mov esi,dword[esp+0x14]
add edi,ecx
jmp 0x402866
mov ecx,dword[esp+0x2c]
mov dword[ebx+0x34],ecx
mov edx,dword[esp+0x48]
mov ecx,dword[esp+0xc]
lea esi,[ebx+0x3c]
mov dword[esi],edx
mov eax,dword[esp+0x4c]
mov dword[esi+4],eax
mov ecx,dword[ecx+4]
call fcn.00474c90
mov edx,dword[esp+0xc]
mov eax,dword[edx+4]
push 0xffffffffffffffec
push eax
call dword[sym.imp.USER32.dll_GetWindowLongW]
mov ecx,dword[esp+0xc]
mov edx,dword[ecx+4]
and eax,0xffffffef
push eax
push 0xffffffffffffffec
push edx
call dword[sym.imp.USER32.dll_SetWindowLongW]
mov edx,dword[esp+0x20]
mov eax,edi
add eax,eax
lea ecx,[esp+eax*8+0xd0]
push edx
mov dword[esp+0x2c],ecx
call fcn.0045dea0
mov ecx,dword[esp+0x2c]
add esp,4
cmp dword[esp+0x14],0
mov dword[ecx+8],6
mov dword[ecx],eax
je 0x402605
mov ecx,dword[esp+0x14]
mov ecx,dword[ecx]
lea eax,[edi+1]
add eax,eax
lea eax,[esp+eax*8+0xd0]
mov dword[eax+8],1
mov dword[eax],ecx
mov dword[eax+4],0
jmp 0x40261e
lea edx,[edi+1]
add edx,edx
lea eax,[esp+edx*8+0xd0]
mov dword[eax+8],0
mov dword[eax],0x4ab02c
mov edx,dword[esp+0xc]
mov esi,dword[esi]
add edi,2
mov eax,edi
add eax,eax
cmp byte[edx+0xc0],0
lea ecx,[esp+eax*8+0xd0]
mov dword[esp+0x28],ecx
je 0x402650
mov eax,dword[0x4c85d0]
push eax
push 0x60
push esi
call dword[sym.imp.KERNEL32.dll_MulDiv]
jmp 0x402652
mov eax,esi
mov ecx,dword[esp+0x28]
cdq
mov dword[ecx+4],edx
mov edx,dword[esp+0xc]
mov dword[ecx+8],1
mov dword[ecx],eax
mov eax,dword[ebx+0x40]
lea ecx,[edi+1]
add ecx,ecx
add edi,2
cmp byte[edx+0xc0],0
lea esi,[esp+ecx*8+0xd0]
mov dword[esp+0x28],edi
je 0x402696
mov ecx,dword[0x4c85d0]
push ecx
push 0x60
push eax
call dword[sym.imp.KERNEL32.dll_MulDiv]
cdq
mov dword[esi+8],1
mov dword[esi],eax
mov dword[esi+4],edx
mov esi,dword[esp+0x14]
jmp 0x40286a
mov dword[ebx+0x34],1
cmp ecx,8
jne 0x40286e
mov ecx,dword[esp+0x78]
mov edx,edi
add edx,edx
lea eax,[esp+edx*8+0xd0]
mov edx,dword[esp+0x24]
mov dword[ebx+0x3c],ecx
mov dword[eax],edx
mov edx,dword[esp+0xc]
mov dword[eax+8],1
mov dword[eax+4],0
lea eax,[edi+1]
add eax,eax
cmp byte[edx+0xc0],0
lea esi,[esp+eax*8+0xd0]
movzx eax,cx
je 0x402712
mov ecx,dword[0x4c85d0]
push ecx
push 0x60
push eax
call dword[sym.imp.KERNEL32.dll_MulDiv]
mov ecx,dword[esp+0x78]
cdq
mov dword[esi],eax
mov dword[esi+4],edx
lea edx,[edi+2]
mov eax,ecx
mov ecx,dword[esp+0xc]
mov dword[esi+8],1
add edx,edx
add edi,3
shr eax,0x10
cmp byte[ecx+0xc0],0
lea esi,[esp+edx*8+0xd0]
mov dword[esp+0x28],edi
je 0x402696
mov edx,dword[0x4c85d0]
push edx
jmp 0x40268d
mov al,byte[esi+4]
cmp al,0xa
je 0x402788
cmp al,0x18
jne 0x402823
mov eax,dword[esp+0x48]
mov edx,dword[esp+0xc]
lea esi,[ebx+0x3c]
mov dword[esi],eax
mov ecx,dword[esp+0x4c]
mov dword[esi+4],ecx
mov ecx,dword[edx+4]
call fcn.00474c90
mov esi,dword[esp+0x14]
jmp 0x40281f
cmp cl,0x49
jne 0x402823
lea eax,[esp+0x88]
test ecx,0x100
je 0x4027af
mov eax,0x53
mov word[esp+0x88],ax
jmp 0x4027c4
test ecx,0x200
je 0x4027cb
mov edx,0x73
mov word[esp+0x88],dx
lea eax,[esp+0x8a]
test ecx,0x400
je 0x4027da
mov edx,0x46
jmp 0x4027e7
test ecx,0x800
je 0x4027ed
mov edx,0x66
mov word[eax],dx
add eax,2
test ecx,0x1000
je 0x4027ff
mov ecx,0x43
mov word[eax],cx
jmp 0x40280f
test ecx,0x2000
je 0x402812
mov edx,0x63
mov word[eax],dx
add eax,2
xor ecx,ecx
mov word[eax],cx
mov dword[esp+0x2c],0x49
mov ecx,dword[esp+0x2c]
mov eax,dword[esp+0x2c]
mov edx,edi
add edx,edx
mov dword[ebx+0x34],ecx
lea edx,[esp+edx*8+0xd0]
mov dword[edx+8],0
call fcn.0045de80
mov ecx,dword[esp+0x24]
mov dword[edx],eax
lea eax,[edi+1]
add eax,eax
lea eax,[esp+eax*8+0xd0]
add edi,2
mov dword[eax+8],1
mov dword[eax],ecx
mov dword[eax+4],0
mov dword[esp+0x28],edi
mov ecx,dword[esp+0x2c]
cmp byte[esp+0x13],0
je 0x40299c
cmp byte[esi+4],0x16
jne 0x40299c
push 0x10b8
lea edx,[esp+0x2a4]
push 0
push edx
call fcn.00495c20
mov eax,dword[esp+0x30]
mov edx,dword[esi]
add esp,0xc
lea ecx,[esp+0x2a0]
push ecx
push 0
push 0x703
dec eax
push edx
mov dword[esp+0x2b0],0xd
mov dword[esp+0x2b4],eax
call dword[sym.imp.USER32.dll_SendMessageW]
test eax,eax
je 0x402a00
cmp word[esp+0x310],0
lea eax,[esp+0x310]
jne 0x4028ea
lea eax,[esp+0x2b0]
push 1
push 0
push 0xffffffffffffffff
push eax
mov eax,dword[0x4c6cb4]
push eax
call fcn.00476680
mov esi,dword[0x4c6cb4]
mov ecx,edi
add ecx,ecx
inc edi
cmp byte[esi+0x17],0
lea edx,[esp+ecx*8+0xd0]
mov dword[esp+0x84],edx
mov dword[esp+0x28],edi
jne 0x402922
mov esi,dword[esi+0xc]
test byte[esi+0x15],8
je 0x40292f
mov eax,esi
call fcn.00401160
mov al,byte[esi+0x17]
cmp al,1
jne 0x40295f
test byte[esi+0x15],4
je 0x402943
mov eax,esi
call fcn.0042e780
mov eax,dword[esi+8]
mov ecx,dword[esp+0x84]
mov esi,dword[esp+0x14]
mov dword[ecx+8],0
mov dword[ecx],eax
jmp 0x402a00
cmp al,2
jne 0x402981
call fcn.00401000
mov ecx,dword[esp+0x84]
mov esi,dword[esp+0x14]
mov dword[ecx+8],0
mov dword[ecx],eax
jmp 0x402a00
mov ecx,dword[esp+0x84]
mov esi,dword[esp+0x14]
mov eax,0x4c85b8
mov dword[ecx+8],0
mov dword[ecx],eax
jmp 0x402a00
cmp word[esp+0x88],0
je 0x4029c7
mov eax,edi
add eax,eax
lea eax,[esp+eax*8+0xd0]
inc edi
lea edx,[esp+0x88]
mov dword[esp+0x28],edi
mov dword[eax+8],0
mov dword[eax],edx
cmp ecx,8
je 0x4029ed
cmp ecx,5
je 0x4029ed
mov ecx,dword[0x4c6cb4]
push 1
push 0
push 0xffffffffffffffff
lea eax,[esp+0x94]
push eax
push ecx
call fcn.00476680
jmp 0x402a00
mov edx,dword[esp+0x24]
mov eax,dword[0x4c6cb4]
push 0x18
push 0
push edx
call fcn.004010e0
mov eax,dword[esp+0xc]
mov ecx,dword[eax+4]
mov edx,dword[esp+0x74]
mov dword[ebx+0xc0],ecx
add dword[eax+0x20],2
mov dword[ebx+0x48],eax
mov dword[ebx+0x44],eax
mov eax,dword[esp+0x24]
mov dword[ebx+0x50],edx
mov dword[ebx+0x38],eax
mov ebx,dword[esp+0x60]
test ebx,ebx
je 0x402a32
mov byte[ebx],1
jmp 0x402a3d
cmp byte[esp+0x13],0
je 0x402a3d
or byte[esi+5],4
mov esi,dword[esp+0x18]
lea ecx,[esp+0x80]
push ecx
lea edx,[esp+0xd4]
push edx
push 0x4a0890
push esi
xor eax,eax
mov edx,edi
mov ecx,esi
call fcn.0046c000
mov eax,dword[esp+0x1c]
add esp,0x10
cmp dword[eax+4],0
je 0x402b0e
test ebx,ebx
je 0x402ab7
cmp dword[esp+0x2c],6
mov byte[ebx],0
jne 0x402ac6
cmp dword[esp+0x80],0
jne 0x402b0e
push esi
call fcn.0046ecd0
add esp,4
test eax,eax
jne 0x402aa0
test esi,esi
jne 0x402b0e
mov eax,dword[esp+0xc]
call fcn.00465060
mov esi,dword[esp+0xc]
call fcn.0045dcc0
jmp 0x402cb5
cmp byte[esp+0x13],0
je 0x402ac6
mov eax,dword[esp+0x14]
and byte[eax+5],0xfb
cmp dword[esp+0x2c],5
jne 0x402b0e
mov eax,dword[esp+0xe0]
mov ecx,dword[eax]
mov edx,dword[ecx+8]
push eax
call edx
mov eax,dword[esp+0x20]
push eax
call dword[sym.imp.SHELL32.dll_DragFinish]
mov esi,dword[esp+0xc]
mov ecx,dword[esi+4]
push 0xffffffffffffffec
push ecx
mov dword[esi+0x68],0
call dword[sym.imp.USER32.dll_GetWindowLongW]
mov edx,dword[esi+4]
or eax,0x10
push eax
push 0xffffffffffffffec
push edx
call dword[sym.imp.USER32.dll_SetWindowLongW]
mov esi,dword[esp+0xc]
call fcn.0045dcc0
jmp 0x402cb5
mov edi,dword[esp+0xc]
cmp edi,esi
je 0x402b3e
mov eax,dword[edi+4]
mov dword[ebx+0xc0],eax
mov dword[ebx+0x34],1
add dword[edi+0x20],2
mov dword[ebx+0x48],edi
mov dword[ebx+0x44],edi
mov eax,0x4c8640
mov dword[esp+0x138],esi
mov dword[esp+0x130],0x4c8c7c
call fcn.00445a30
xor ecx,ecx
mov dword[esp+0x144],ecx
push esi
inc eax
lea ecx,[esp+0x134]
push ecx
mov ecx,dword[esp+0x20]
mov dword[esp+0x148],eax
xor eax,eax
push 0x4a0890
push ecx
lea edx,[eax+3]
mov dword[esp+0x158],1
mov dword[esp+0x168],esi
mov dword[esp+0x160],0x4c8e86
call fcn.0046c000
add esp,0x10
cmp edi,esi
je 0x402cb5
mov esi,dword[esp+0xc]
call fcn.0045dcc0
jmp 0x402cb5
mov edx,dword[esp+0x54]
mov dword[ebx+0xc0],edx
mov al,byte[edi+0x25]
mov esi,edi
mov byte[ebx+0xf2],al
call fcn.0040ca00
jmp 0x402cb5
call dword[sym.imp.USER32.dll_CountClipboardFormats]
test eax,eax
je 0x402c0b
mov edi,dword[sym.imp.USER32.dll_IsClipboardFormatAvailable]
push 0xd
call edi
test eax,eax
jne 0x402c04
push 0xf
call edi
test eax,eax
jne 0x402c04
mov eax,2
jmp 0x402c0d
mov eax,1
jmp 0x402c0d
xor eax,eax
push 0x18
push esi
mov dword[ebx+0x38],eax
push eax
mov eax,dword[0x4c6cb4]
call fcn.004010e0
mov ecx,dword[ebx+0x38]
mov dword[esp+0xb8],ecx
mov ecx,dword[0x4c90b8]
mov dword[esp+0xc0],1
mov dword[esp+0xbc],esi
mov byte[0x4c90c4],1
cmp ecx,esi
je 0x402c56
call fcn.00401220
mov ecx,dword[0x4c90b8]
cmp dword[esp+0x3c],esi
jne 0x402c78
xor edx,edx
cmp ecx,esi
sete dl
lea eax,[esp+0xb8]
mov ebx,0x4c90a8
push edx
push 1
push eax
call fcn.0046edd0
mov byte[0x4c90c4],0
jmp 0x402cb5
mov esi,dword[esp+0x6c]
mov al,byte[esi+0x12]
cmp al,0x9c
jb 0x402c97
cmp al,0x9f
ja 0x402c97
mov ecx,dword[esp+0x40]
mov dword[ebx+0x38],ecx
mov eax,dword[esp+0x5c]
mov edx,dword[esp+0x54]
mov dword[ebx+0xc0],edx
mov cl,byte[eax+0x21]
push eax
push esi
mov byte[ebx+0xf2],cl
call fcn.0040a6f0
lea edx,[esp+0x1a0]
push edx
call fcn.00403620
add esp,4
cmp dword[ebp+0xc],0
je 0x401463
mov eax,dword[esp+0x58]
mov ecx,dword[esp+0x68]
mov esi,dword[ebp+8]
push eax
push ecx
call fcn.00402ef0
add esp,8
test eax,eax
je 0x401463
mov byte[esp+0x1d],1
mov byte[esp+0x58],1
jmp 0x401463
sbb eax,eax
sbb eax,0xffffffff
test eax,eax
jne 0x402d5c
mov eax,dword[0x4c28ec]
lea edx,[esp+0x34]
mov byte[eax+0xe4],1
mov ecx,dword[esp+0x38]
push edx
push esi
mov dword[eax+0xe0],ecx
call dword[sym.imp.USER32.dll_IsDialogMessageW]
test eax,eax
je 0x402d4f
cmp dword[0x4c6654],0
je 0x402d3e
push 0x4c6cb8
call dword[sym.imp.KERNEL32.dll_SetCurrentDirectoryW]
mov eax,dword[0x4c28ec]
mov byte[eax+0xe4],0
jmp 0x401463
mov ecx,dword[0x4c28ec]
mov byte[ecx+0xe4],0
mov eax,dword[0x4c64cc]
test eax,eax
je 0x402d7f
lea edx,[esp+0x34]
push edx
push eax
mov eax,dword[0x4c64b8]
push eax
call dword[sym.imp.USER32.dll_TranslateAcceleratorW]
test eax,eax
jne 0x401463
mov eax,dword[0x4c28ec]
mov byte[eax+0xe4],1
mov ecx,dword[esp+0x38]
lea edx,[esp+0x34]
push edx
mov dword[eax+0xe0],ecx
call dword[sym.imp.USER32.dll_TranslateMessage]
lea eax,[esp+0x34]
push eax
call dword[sym.imp.USER32.dll_DispatchMessageW]
mov ecx,dword[0x4c28ec]
mov byte[ecx+0xe4],0
jmp 0x401463
cmp esi,0xffffffff
jle 0x402ddb
mov dword[0x4c9110],0
mov dword[0x4c9114],0
mov dword[0x4c9120],eax
cmp byte[esp+0x1e],0
mov dword[0x4c9124],eax
je 0x402dee
mov byte[0x4c6611],0
cmp byte[esp+0x1f],0
je 0x401c83
dec dword[0x4c6620]
test esi,esi
jle 0x401c83
cmp dword[0x4c6620],0
jne 0x401c83
cmp dword[0x4c90d8],0
jne 0x401c83
cmp dword[0x4c7eb0],0
jne 0x401c83
cmp byte[0x4c660b],0
je 0x401c83
mov edx,dword[0x4c64b8]
push 9
push edx
jmp 0x401c72
{% endhighlight %}


[similar_1_ref]: /report/fcn.004061b0@7b00dd8f2abf54a73bfb09681334ff78
[similar_2_ref]: /report/entry0@57989f43bf24a9272122210a17558c3d
[similar_3_ref]: /report/entry0@3a783d6a0e3505903843983e413a529e
[similar_4_ref]: /report/entry0@d287262b3c4caae6c69c406382125319
[similar_5_ref]: /report/fcn.00438d70@4fe6510221c33bf023f6abed461fc13f
[virustotal_ref]: https://www.virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f