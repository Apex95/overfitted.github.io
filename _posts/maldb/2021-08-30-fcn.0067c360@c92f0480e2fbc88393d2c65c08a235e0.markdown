---
layout: post
title:  "fcn.0067c360 @ c92f0480e2fbc88393d2c65c08a235e0"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0067c360
- **Origin (md5):** c92f0480e2fbc88393d2c65c08a235e0
- **VirusTotal:** [virustotal.com/gui/file/c92f0480e2fbc88393d2c65c08a235e0][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.0067c360@c92f0480e2fbc88393d2c65c08a235e0">fcn.0067c360</a><br>@c92f0480e2fbc88393d2c65c08a235e0</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
push edi
push esi
push ebx
mov esi, ecx
mov ebx, edx
sub esp, 0x2cc
cmp dword[ecx+0x94], 0xffffffff
mov dword[esp+0x28], eax
mov ebp, dword[esp+0x2e8]
je 0x67a680
mov eax, dword[esp+0x2ec]
lea edi, [ebx+0x20]
mov dword[ebx+0x20], 0
mov dword[ebx+4], 3
mov dword[ebx+0x44], esi
mov dword[ebx+0x48], 0
mov dword[ebx+0x54], 0
mov dword[ebx+0x3c], eax
mov dword[ebx+0x58], 0xffffffff
mov dword[edi+4], 0
mov dword[edi+8], 0
mov dword[edi+0xc], 0
mov dword[edi+0x10], 0
mov edx, dword[esi+0x90]
test edx, edx
je 0x67a2a0
test byte[esi+0x2f], 1
jne 0x67a490
test ebp, ebp
mov dword[esp+0x38], 0
je 0x67a4bc
mov eax, dword[esi+0x100]
test eax, eax
je 0x67a790
lea edx, [esp+0x48]
mov dword[esp+4], eax
mov dword[esp], ebp
mov dword[esp+8], edx
call fcn.006845d0
test eax, eax
mov edx, eax
jne 0x67a37c
mov eax, dword[ebp+0x94]
mov edx, dword[esp+0x38]
mov dword[esp+0x2bc], eax
mov eax, edx
or eax, 2
test byte[ebp+0x2d], 0x10
mov dword[esp+0x38], eax
je 0x67a162
mov eax, edx
or eax, 6
mov dword[esp+0x38], eax
cmp dword[esp+0x2e4], 1
je 0x67a620
test al, 1
mov edx, edi
mov ebp, ebx
jne 0x67a63c
mov dword[edx], 0
mov dword[edx+4], 0
mov dword[edx+8], 0
mov dword[edx+0xc], 0
mov dword[edx+0x10], 0
mov dword[esp+0x2c], edx
mov dword[esp+0xc], 0
mov dword[esp+8], 0
mov dword[esp+4], 1
mov dword[esp], 0
call dword[sym.imp.KERNEL32.dll_CreateEventA]
sub esp, 0x10
test eax, eax
mov dword[ebp+0x30], eax
mov edx, dword[esp+0x2c]
je 0x67aa3c
mov eax, dword[esp+0x38]
mov dword[esp+0x10], edx
mov dword[esp+0xc], 0
and eax, 2
cmp eax, 1
sbb eax, eax
and eax, 0xfffffd88
add eax, 0x288
mov dword[esp+8], eax
lea eax, [esp+0x38]
mov dword[esp+4], eax
mov eax, dword[esi+0x94]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_WriteFile]
sub esp, 0x14
test eax, eax
je 0x67a7a0
mov eax, dword[ebp+0x30]
mov dword[ebp+0x34], 0
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_CloseHandle]
mov eax, dword[esi+0x40]
sub esp, 4
mov dword[ebp+0x30], 0
mov ecx, eax
lea edx, [eax+1]
test ecx, ecx
mov eax, edx
mov dword[esi+0x40], edx
jne 0x67a5ee
mov ecx, dword[esi+0x2c]
test cl, 1
jne 0x67a5b0
test cl, 0x40
je 0x67a5db
nop
lea esi, [esi]
mov ecx, dword[esp+0x28]
mov edx, dword[esp+0x38]
add ebp, 8
lea eax, [ecx+0x10]
mov dword[ebp], eax
mov eax, dword[ecx+0x14]
mov dword[ebp+4], eax
mov dword[eax], ebp
mov dword[ecx+0x14], ebp
add dword[esi+0x3c], 1
add dword[esi+0x88], 1
and edx, 1
je 0x67a37c
mov eax, dword[esi+0x2c]
mov edx, eax
and edx, 0x1200000
cmp edx, 0x1200000
je 0x67a6a1
test eax, 0x1000000
je 0x67a390
mov eax, dword[esp+0x2e0]
mov edx, dword[eax+4]
mov eax, dword[eax]
mov dword[ebx+0x38], 0
mov dword[ebx+0x4c], eax
mov dword[ebx+0x50], edx
mov eax, dword[esi+0x11c]
test eax, eax
je 0x67a5a0
mov eax, dword[eax+0x38]
mov dword[ebx+0x38], eax
mov eax, dword[esi+0x11c]
mov dword[eax+0x38], ebx
mov dword[esi+0x11c], ebx
mov eax, dword[esi+0x88]
test eax, eax
je 0x67a7f3
mov eax, dword[esp+0x2e0]
mov eax, dword[eax]
mov dword[ebx+0x34], eax
add dword[esi+0x30], eax
mov eax, dword[esi+0x40]
mov ecx, eax
lea edx, [eax+1]
test ecx, ecx
mov eax, edx
mov dword[esi+0x40], edx
jne 0x67a350
mov edx, dword[esi+0x2c]
test dl, 1
jne 0x67a821
test dl, 0x40
jne 0x67a358
mov ecx, edx
or ecx, 0x40
and edx, 0x20
mov dword[esi+0x2c], ecx
jne 0x67a860
mov edx, eax
test edx, edx
jle 0x67a800
mov ecx, dword[esp+0x28]
add ebx, 8
lea eax, [ecx+0x10]
mov dword[ebx], eax
mov eax, dword[ecx+0x14]
mov dword[ebx+4], eax
mov dword[eax], ebx
mov dword[ecx+0x14], ebx
add dword[esi+0x3c], 1
add dword[esi+0x88], 1
xor edx, edx
add esp, 0x2cc
mov eax, edx
pop ebx
pop esi
pop edi
pop ebp
ret
test eax, 0x200000
je 0x67a4d3
mov dword[esp+0xc], 0
mov dword[esp+8], 0
mov dword[esp+4], 1
mov dword[esp], 0
call dword[sym.imp.KERNEL32.dll_CreateEventA]
sub esp, 0x10
test eax, eax
mov dword[ebx+0x30], eax
je 0x67aa3c
mov eax, dword[esp+0x2e0]
mov dword[esp+0x10], edi
mov dword[esp+0xc], 0
mov eax, dword[eax]
mov dword[esp+8], eax
mov eax, dword[esp+0x2e0]
mov eax, dword[eax+4]
mov dword[esp+4], eax
mov eax, dword[esi+0x94]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_WriteFile]
sub esp, 0x14
test eax, eax
je 0x67a8f0
mov dword[ebx+0x34], 0
mov eax, dword[ebx+0x30]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_CloseHandle]
mov eax, dword[esi+0x40]
sub esp, 4
mov ecx, eax
lea edx, [eax+1]
test ecx, ecx
mov eax, edx
mov dword[esi+0x40], edx
jne 0x67a45d
mov edx, dword[esi+0x2c]
test dl, 1
jne 0x67a9d1
test dl, 0x40
jne 0x67a465
mov ecx, edx
or ecx, 0x40
and edx, 0x20
mov dword[esi+0x2c], ecx
je 0x67a45b
mov edx, dword[esi+4]
add dword[edx+4], 1
mov edx, eax
test edx, edx
jle 0x67a953
mov edi, dword[esp+0x28]
add ebx, 8
xor edx, edx
lea eax, [edi+0x10]
mov dword[ebx], eax
mov eax, dword[edi+0x14]
mov dword[ebx+4], eax
mov dword[eax], ebx
mov dword[edi+0x14], ebx
add dword[esi+0x3c], 1
add dword[esi+0x88], 1
jmp 0x67a37c
mov dword[esp+8], 0x4e5
mov dword[esp+4], str.src_win_pipe.c_
mov dword[esp], str.__handle__flags__UV_HANDLE_NON_OVERLAPPED_PIPE_
call fcn.006b2490
test ebp, ebp
mov dword[esp+0x38], 0
jne 0x67a10d
cmp dword[esp+0x2e4], 1
je 0x67a850
mov edx, edi
mov ebp, ebx
jmp 0x67a17c
mov eax, dword[esp+0x2e0]
mov dword[esp+0x10], edi
mov dword[esp+0xc], 0
mov eax, dword[eax]
mov dword[esp+8], eax
mov eax, dword[esp+0x2e0]
mov eax, dword[eax+4]
mov dword[esp+4], eax
mov eax, dword[esi+0x94]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_WriteFile]
sub esp, 0x14
test eax, eax
je 0x67a8c0
mov dword[ebx+0x34], 0
test byte[esi+0x2e], 0x10
je 0x67a31b
mov dword[esp+0xc], 0
mov dword[esp+8], 0
mov dword[esp+4], 0
mov dword[esp], 0
call dword[sym.imp.KERNEL32.dll_CreateEventA]
sub esp, 0x10
test eax, eax
mov dword[ebx+0x54], eax
je 0x67aa3c
mov dword[esp+0x14], 4
mov dword[esp+0x10], 0xffffffff
mov dword[esp+0xc], ebx
mov dword[esp+8], 0x679b40
mov eax, dword[ebx+0x30]
mov dword[esp+4], eax
lea eax, [ebx+0x58]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_RegisterWaitForSingleObject]
sub esp, 0x18
test eax, eax
jne 0x67a31b
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov edx, eax
jmp 0x67a37c
mov dword[ebx+0x38], ebx
mov dword[esi+0x11c], ebx
jmp 0x67a2fe
mov dword[esp+8], 0x543
mov dword[esp+4], str.src_win_pipe.c_
mov dword[esp], str.((((handle)))-_flags_&_UV__HANDLE_CLOSING)_==_0_
call fcn.006b2490
mov ecx, dword[esi+0x2c]
test cl, 0x40
jne 0x67a974
mov eax, dword[esi+0x40]
mov edx, ecx
or edx, 0x40
and ecx, 0x20
mov dword[esi+0x2c], edx
jne 0x67a870
mov edx, eax
test edx, edx
jg 0x67a270
mov dword[esp+8], 0x543
mov dword[esp+4], str.src_win_pipe.c_
mov dword[esp], str.((handle))-_activecnt___0_
call fcn.006b2490
jmp 0x67a270
or eax, 1
mov dword[esp+0x38], eax
mov eax, dword[esp+0x2e0]
mov dword[esp+0x44], 0
mov eax, dword[eax]
mov dword[esp+0x40], eax
cmp dword[esi+0xa8], 3
je 0x67a890
lea ebp, [esi+0xa4]
mov dword[ebp+4], 3
mov dword[ebp+0x20], 0
lea edx, [ebp+0x20]
mov dword[ebp+0x44], esi
mov dword[ebp+0x3c], 0
mov dword[ebp+0x48], 1
jmp 0x67a17c
mov dword[esp+8], 0x4da
mov dword[esp+4], str.src_win_pipe.c_
mov dword[esp], str.handle__handle___INVALID_HANDLE_VALUE
call fcn.006b2490
jmp 0x67a096
lea eax, [esp+0x34]
mov dword[esp+0x10], 0
mov dword[esp+0xc], eax
mov eax, dword[esp+0x2e0]
mov eax, dword[eax]
mov dword[esp+8], eax
mov eax, dword[esp+0x2e0]
mov eax, dword[eax+4]
mov dword[esp+4], eax
mov eax, dword[esi+0x94]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_WriteFile]
sub esp, 0x14
test eax, eax
je 0x67a592
mov eax, dword[esi+0x40]
mov dword[ebx+0x34], 0
mov ecx, eax
lea edx, [eax+1]
test ecx, ecx
mov eax, edx
mov dword[esi+0x40], edx
jne 0x67a725
mov edx, dword[esi+0x2c]
test dl, 1
jne 0x67aa00
test dl, 0x40
jne 0x67a72d
mov ecx, edx
or ecx, 0x40
and edx, 0x20
mov dword[esi+0x2c], ecx
je 0x67a723
mov edx, dword[esi+4]
add dword[edx+4], 1
mov edx, eax
test edx, edx
jle 0x67a9b0
mov ecx, dword[esp+0x28]
add ebx, 8
lea eax, [ecx+0x10]
mov dword[ebx], eax
mov eax, dword[ecx+0x14]
mov dword[ebx+4], eax
mov dword[eax], ebx
mov dword[ecx+0x14], ebx
add dword[esi+0x3c], 1
add dword[esi+0x88], 1
mov dword[esp+0xc], edi
mov dword[esp+8], 0
mov dword[esp+4], 0
mov eax, dword[ecx+0x1c]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_PostQueuedCompletionStatus]
sub esp, 0x10
test eax, eax
jne 0x67a37a
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov dword[esp+4], str.PostQueuedCompletionStatus_
mov dword[esp], eax
call fcn.0066e2e0
call fcn.0068dbf0
mov dword[esi+0x100], eax
jmp 0x67a11b
mov eax, dword[sym.imp.KERNEL32.dll_GetLastError]
mov dword[esp+0x2c], eax
call eax
cmp eax, 0x3e5
jne 0x67a7d1
mov dword[esp+4], 0xffffffff
mov eax, dword[ebp+0x30]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_WaitForSingleObject]
sub esp, 8
test eax, eax
je 0x67a221
mov eax, dword[esp+0x2c]
call eax
mov dword[esp+0x28], eax
mov eax, dword[ebp+0x30]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_CloseHandle]
sub esp, 4
mov edx, dword[esp+0x28]
jmp 0x67a37c
mov eax, esi
call fcn.00679c10
jmp 0x67a30c
mov dword[esp+8], 0x5b6
mov dword[esp+4], str.src_win_pipe.c_
mov dword[esp], str.((handle))-_activecnt___0_
call fcn.006b2490
jmp 0x67a358
mov dword[esp+8], 0x5b6
mov dword[esp+4], str.src_win_pipe.c_
mov dword[esp], str.((((handle)))-_flags_&_UV__HANDLE_CLOSING)_==_0_
call fcn.006b2490
mov edx, dword[esi+0x2c]
test dl, 0x40
je 0x67a880
mov edx, dword[esi+0x40]
jmp 0x67a350
mov eax, 1
jmp 0x67a623
mov edx, dword[esi+4]
add dword[edx+4], 1
jmp 0x67a34e
mov edx, dword[esi+4]
add dword[edx+4], 1
jmp 0x67a5ec
mov eax, dword[esi+0x40]
jmp 0x67a33d
mov dword[esp], 0x5c
call fcn.0066b490
test eax, eax
mov ebp, eax
jne 0x67a64f
mov dword[esp+4], str.uv__malloc_
mov dword[esp], 0xe
call fcn.0066e2e0
lea esi, [esi]
mov edi, dword[sym.imp.KERNEL32.dll_GetLastError]
call edi
cmp eax, 0x3e5
jne 0x67a980
mov eax, dword[esp+0x2e0]
mov eax, dword[eax]
mov dword[ebx+0x34], eax
add dword[esi+0x30], eax
jmp 0x67a51b
mov edi, dword[sym.imp.KERNEL32.dll_GetLastError]
call edi
cmp eax, 0x3e5
jne 0x67a990
mov eax, dword[esp+0x2e0]
mov eax, dword[eax]
mov dword[ebx+0x34], eax
add dword[esi+0x30], eax
mov dword[esp+4], 0xffffffff
mov eax, dword[ebx+0x30]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_WaitForSingleObject]
sub esp, 8
test eax, eax
je 0x67a416
call edi
mov esi, eax
mov eax, dword[ebx+0x30]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_CloseHandle]
sub esp, 4
mov dword[esp], esi
call fcn.0066e3a0
mov edx, eax
jmp 0x67a37c
mov dword[esp+8], 0x591
mov dword[esp+4], str.src_win_pipe.c_
mov dword[esp], str.((handle))-_activecnt___0_
call fcn.006b2490
jmp 0x67a465
mov edx, dword[esi+0x40]
jmp 0x67a5ee
call edi
mov edx, eax
jmp 0x67a37c
call edi
mov dword[esp+0x28], eax
mov eax, dword[ebx+0x30]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_CloseHandle]
sub esp, 4
mov edx, dword[esp+0x28]
jmp 0x67a37c
mov dword[esp+8], 0x55f
mov dword[esp+4], str.src_win_pipe.c_
mov dword[esp], str.((handle))-_activecnt___0_
call fcn.006b2490
jmp 0x67a72d
mov dword[esp+8], 0x591
mov dword[esp+4], str.src_win_pipe.c_
mov dword[esp], str.((((handle)))-_flags_&_UV__HANDLE_CLOSING)_==_0_
call fcn.006b2490
mov edx, dword[esi+0x2c]
test dl, 0x40
jne 0x67aa2c
mov eax, dword[esi+0x40]
jmp 0x67a447
mov dword[esp+8], 0x55f
mov dword[esp+4], str.src_win_pipe.c_
mov dword[esp], str.((((handle)))-_flags_&_UV__HANDLE_CLOSING)_==_0_
call fcn.006b2490
mov edx, dword[esi+0x2c]
test dl, 0x40
jne 0x67aa34
mov eax, dword[esi+0x40]
jmp 0x67a70f
mov edx, dword[esi+0x40]
jmp 0x67a45d
mov edx, dword[esi+0x40]
jmp 0x67a725
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov dword[esp+4], str.CreateEvent_
mov dword[esp], eax
call fcn.0066e2e0
lea esi, [esi]
lea edi, [edi]
push esi
push ebx
cmp dword[esp+0x1c], 1
mov eax, dword[esp+0xc]
mov edx, dword[esp+0x10]
mov ecx, dword[esp+0x14]
mov ebx, dword[esp+0x18]
mov esi, dword[esp+0x20]
je off.b37
mov eax, 0x32
pop ebx
pop esi
ret
mov dword[esp+0x18], esi
mov dword[esp+0x14], 0
mov dword[esp+0x10], 1
mov dword[esp+0xc], ebx
pop ebx
pop esi
jmp 0x67a070

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/c92f0480e2fbc88393d2c65c08a235e0