---
layout: post
title:  "fcn.00435870 @ 4fe6510221c33bf023f6abed461fc13f"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00435870
- **Origin (md5):** 4fe6510221c33bf023f6abed461fc13f
- **VirusTotal:** [virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f][virustotal_ref]

# Code Tags
<span class="tag" id="MEMORY">MEMORY</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.00435870@4fe6510221c33bf023f6abed461fc13f">fcn.00435870</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

mov ecx, dword[esp+8]
sub esp, 0x88
push ebx
mov ebx, dword[esp+0x98]
push ebp
mov ebp, dword[esp+0x94]
push esi
push edi
mov esi, eax
call fcn.00413110
mov edi, dword[sym.imp.USER32.dll_SendMessageTimeoutW]
lea eax, [esp+0x20]
push eax
push 0x7d0
push 2
push 0
push 0
push 0x1004
push ebx
call edi
test eax, eax
jne off.b150
mov ecx, dword[0x4c28ec]
cmp byte[ecx+0x104], al
jne off.b118
mov edx, dword[0x4c6cb4]
push 1
push eax
push 0xffffffffffffffff
push 0x4a331c
push edx
call fcn.00476680
pop edi
pop esi
pop ebp
pop ebx
add esp, 0x88
ret 0xc
push 0x4ab02c
push 0
push 0x4a331c
mov ecx, ebp
call fcn.0042dc50
pop edi
pop esi
pop ebp
pop ebx
add esp, 0x88
ret 0xc
lea eax, [esp+0x3c]
push eax
push 0x7d0
push 2
push 0
push 0
push 0x101f
push ebx
mov dword[esp+0x40], 0xffffffff
call edi
test eax, eax
je off.b218
mov eax, dword[esp+0x3c]
test eax, eax
je off.b218
lea ecx, [esp+0x24]
push ecx
push 0x7d0
push 2
push 0
push 0
push 0x1200
push eax
call edi
mov eax, str.Count
mov ecx, esi
call fcn.00473c80
test eax, eax
mov eax, str.Selected
mov ecx, esi
setne bl
call fcn.00473c80
test eax, eax
mov eax, str.Focused
mov ecx, esi
setne byte[esp+0x15]
call fcn.00473c80
test eax, eax
mov eax, 0x4a9aac
mov ecx, esi
setne byte[esp+0x17]
call fcn.00473c80
mov edi, eax
test edi, edi
je off.b345
lea esi, [edi+6]
mov eax, esi
call fcn.0040d200
test al, al
je off.b327
push 0x10
push 0
push esi
call fcn.0048e37b
lea ecx, [eax-1]
add esp, 0xc
mov dword[esp+0x18], ecx
jmp off.b357
push esi
call fcn.0048dfe6
lea ecx, [eax-1]
add esp, 4
mov dword[esp+0x18], ecx
jmp off.b357
mov dword[esp+0x18], 0xffffffff
mov ecx, dword[esp+0x18]
mov eax, dword[esp+0x24]
cmp eax, 0xffffffff
jle off.b375
cmp ecx, 0xffffffff
jle off.b375
cmp ecx, eax
jge off.b481
test bl, bl
je off.b565
cmp byte[esp+0x17], 0
je off.b435
mov eax, dword[esp+0xa4]
lea edx, [esp+0x18]
push edx
push 0x7d0
push 2
push 1
push 0xffffffffffffffff
push 0x100c
push eax
call dword[sym.imp.USER32.dll_SendMessageTimeoutW]
test eax, eax
je off.b481
inc dword[esp+0x18]
jmp off.b512
cmp byte[esp+0x15], 0
je off.b500
mov edx, dword[esp+0xa4]
lea ecx, [esp+0x18]
push ecx
push 0x7d0
push 2
push 0
push 0
push 0x1032
push edx
call dword[sym.imp.USER32.dll_SendMessageTimeoutW]
test eax, eax
jne off.b512
push ebp
call fcn.00430510
pop edi
pop esi
pop ebp
pop ebx
add esp, 0x88
ret 0xc
test edi, edi
jne off.b508
mov eax, dword[esp+0x20]
mov dword[esp+0x18], eax
mov ecx, dword[0x4c6cb4]
push 1
push 0
push 0xffffffffffffffff
push 0x4a0900
push ecx
call fcn.00476680
mov edx, dword[esp+0xa0]
mov eax, dword[esp+0x18]
push edx
call fcn.004039a0
pop edi
pop esi
pop ebp
pop ebx
add esp, 0x88
ret 0xc
cmp dword[esp+0x20], 1
jl off.b1619
test eax, eax
je off.b1619
mov esi, dword[esp+0xa4]
push 0x858
mov eax, 0x400
mov ecx, esi
lea edi, [esp+0x34]
call fcn.00474ea0
add esp, 4
mov dword[esp+0x2c], eax
test eax, eax
je off.b481
lea edi, [eax+0x58]
mov eax, dword[esp+0x30]
push eax
call fcn.00474e20
add esp, 4
test eax, eax
je off.b668
mov eax, edi
cdq
mov dword[esp+0x60], 0x3ff
mov dword[esp+0x58], eax
mov dword[esp+0x5c], edx
jmp off.b680
mov dword[esp+0x58], 0x3ff
mov dword[esp+0x54], edi
cmp byte[esp+0x17], 0
jne off.b699
cmp byte[esp+0x15], 0
mov byte[esp+0x15], 0
je off.b704
mov byte[esp+0x15], 1
or eax, 0xffffffff
cmp dword[esp+0x18], eax
jg off.b724
mov byte[esp+0x16], 0
cmp dword[esp+0x24], eax
jne off.b729
mov byte[esp+0x16], 1
xor ebx, ebx
xor ebp, ebp
mov dword[esp+0x1c], 0xffffffff
cmp dword[esp+0x20], ebx
jle off.b954
mov edi, dword[sym.imp.USER32.dll_SendMessageTimeoutW]
cmp byte[esp+0x15], 0
je off.b821
mov eax, dword[esp+0x1c]
xor edx, edx
cmp byte[esp+0x17], dl
lea ecx, [esp+0x1c]
push ecx
sete dl
push 0x7d0
push 2
inc edx
push edx
push eax
push 0x100c
push esi
call edi
test eax, eax
je off.b954
cmp dword[esp+0x1c], 0xffffffff
je off.b954
jmp off.b825
mov dword[esp+0x1c], ebp
mov eax, dword[esp+0x18]
xor ecx, ecx
cmp eax, 0xffffffff
setle cl
dec ecx
and ecx, eax
mov dword[esp+0x48], ecx
lea esp, [esp]
mov eax, dword[esp+0x24]
cmp eax, 0xffffffff
je off.b863
cmp dword[esp+0x48], eax
jge off.b943
mov eax, dword[esp+0x2c]
mov ecx, dword[esp+0x30]
push 0
push 0x58
lea edx, [esp+0x48]
push edx
push eax
push ecx
call dword[sym.imp.KERNEL32.dll_WriteProcessMemory]
test eax, eax
je off.b930
mov eax, dword[esp+0x2c]
mov ecx, dword[esp+0x1c]
lea edx, [esp+0x38]
push edx
push 0x7d0
push 2
push eax
push ecx
push 0x1073
push esi
call edi
test eax, eax
je off.b930
add ebx, dword[esp+0x38]
cmp byte[esp+0x16], 0
jne off.b943
inc dword[esp+0x48]
jmp off.b848
inc ebp
cmp ebp, dword[esp+0x20]
jl off.b757
cmp byte[esp+0x16], 0
mov eax, 1
jne off.b970
mov eax, dword[esp+0x24]
mov esi, dword[esp+0xa0]
imul eax, ebp
push 0
push 1
add eax, ebx
push eax
push 0
push esi
call fcn.00476680
cmp byte[esi+0x17], 0
mov edi, esi
jne off.b1006
mov esi, dword[edi+0xc]
test byte[esi+0x15], 8
je off.b1019
mov eax, esi
call fcn.00401160
mov al, byte[esi+0x17]
cmp al, 1
jne off.b1044
test byte[esi+0x15], 4
je off.b1039
mov eax, esi
call fcn.0042e780
mov esi, dword[esi+8]
jmp off.b1062
cmp al, 2
jne off.b1057
call fcn.00401000
mov esi, eax
jmp off.b1062
mov esi, 0x4c85b8
cmp byte[edi+0x17], 0
jne off.b1073
mov eax, dword[edi+0xc]
jmp off.b1075
mov eax, edi
cmp byte[eax+0x17], 2
jne off.b1088
mov eax, dword[0x4c85f8]
jmp off.b1091
mov eax, dword[eax+0x10]
shr eax, 1
xor edi, edi
mov dword[esp+0x34], eax
cmp eax, edi
jle off.b1108
dec eax
mov dword[esp+0x34], eax
mov ebp, dword[esp+0x2c]
mov ebx, dword[esp+0x30]
mov dword[esp+0x28], edi
mov dword[esp+0x1c], 0xffffffff
cmp dword[esp+0x20], edi
jle off.b1456
cmp byte[esp+0x15], 0
je off.b1213
mov ecx, dword[esp+0x1c]
xor eax, eax
cmp byte[esp+0x17], al
lea edx, [esp+0x1c]
push edx
mov edx, dword[esp+0xa8]
sete al
push 0x7d0
push 2
inc eax
push eax
push ecx
push 0x100c
push edx
call dword[sym.imp.USER32.dll_SendMessageTimeoutW]
test eax, eax
je off.b1456
cmp dword[esp+0x1c], 0xffffffff
je off.b1456
jmp off.b1221
mov eax, dword[esp+0x28]
mov dword[esp+0x1c], eax
cmp dword[esp+0x28], 0
je off.b1246
cmp edi, dword[esp+0x34]
jge off.b1246
mov ecx, 0xa
mov word[esi], cx
add esi, 2
inc edi
mov eax, dword[esp+0x18]
xor edx, edx
cmp eax, 0xffffffff
setle dl
dec edx
and eax, edx
mov ecx, dword[esp+0x24]
mov dword[esp+0x48], eax
cmp ecx, 0xffffffff
je off.b1282
cmp eax, ecx
jge off.b1437
cmp byte[esp+0x16], 0
jne off.b1311
test eax, eax
je off.b1311
cmp edi, dword[esp+0x34]
jge off.b1311
mov eax, 9
mov word[esi], ax
add esi, 2
inc edi
push 0
push 0x58
lea ecx, [esp+0x48]
push ecx
push ebp
push ebx
call dword[sym.imp.KERNEL32.dll_WriteProcessMemory]
test eax, eax
je off.b1427
mov eax, dword[esp+0x1c]
mov ecx, dword[esp+0xa4]
lea edx, [esp+0x38]
push edx
push 0x7d0
push 2
push ebp
push eax
push 0x1073
push ecx
call dword[sym.imp.USER32.dll_SendMessageTimeoutW]
test eax, eax
je off.b1427
mov eax, dword[esp+0x38]
test eax, eax
jle off.b1420
lea edx, [eax+edi]
cmp edx, dword[esp+0x34]
jg off.b1456
push 0
add eax, eax
push eax
push esi
lea eax, [ebp+0x58]
push eax
push ebx
call dword[sym.imp.KERNEL32.dll_ReadProcessMemory]
test eax, eax
je off.b1420
mov eax, dword[esp+0x38]
lea esi, [esi+eax*2]
add edi, eax
cmp byte[esp+0x16], 0
jne off.b1437
mov eax, dword[esp+0x48]
inc eax
jmp off.b1261
mov eax, dword[esp+0x28]
inc eax
mov dword[esp+0x28], eax
cmp eax, dword[esp+0x20]
jl off.b1138
test esi, esi
je off.b1465
xor ecx, ecx
mov word[esi], cx
push 0x8000
push 0
push ebp
push ebx
call dword[sym.imp.KERNEL32.dll_VirtualFreeEx]
push ebx
call dword[sym.imp.KERNEL32.dll_CloseHandle]
mov esi, dword[esp+0xa0]
cmp byte[esi+0x17], 0
jne off.b1505
mov eax, dword[esi+0xc]
jmp off.b1507
mov eax, esi
cmp byte[eax+0x17], 2
jne off.b1534
cmp dword[0x4c85f0], 0
je off.b1534
mov ecx, 0x4c85e4
call fcn.00404270
jmp off.b1538
and byte[eax+0x15], 0x86
cmp byte[esi+0x17], 0
jne off.b1549
mov edx, esi
mov esi, dword[edx+0xc]
cmp byte[esi+0x17], 1
jne off.b1573
test byte[esi+0x15], 8
je off.b1568
mov eax, esi
call fcn.00401160
lea eax, [esi+0xc]
jmp off.b1578
mov eax, 0x4c9308
mov edx, dword[0x4c6cb4]
push 1
push 0
push 0xffffffffffffffff
push 0x4a0900
lea ecx, [edi+edi]
push edx
mov dword[eax], ecx
call fcn.00476680
pop edi
pop esi
pop ebp
pop ebx
add esp, 0x88
ret 0xc
mov eax, dword[0x4c6cb4]
push 1
push 0
push 0xffffffffffffffff
push 0x4a0900
push eax
call fcn.00476680
pop edi
pop esi
pop ebp
pop ebx
add esp, 0x88
ret 0xc

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f