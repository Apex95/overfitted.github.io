---
layout: post
title:  "fcn.00435870 @ 4fe6510221c33bf023f6abed461fc13f"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00435870
- **Origin (md5):** 4fe6510221c33bf023f6abed461fc13f
- **VirusTotal:** [virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f][virustotal_ref]

# Code Tags
<span class="tag" id="MEMORY">MEMORY</span>


# Behaviour Tags
<span class="bhv-tag" id="SCREENSHOTS_FOREGROUND_WINDOW">SCREENSHOTS_FOREGROUND_WINDOW / 0.29803185636514284</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.00435870@4fe6510221c33bf023f6abed461fc13f">fcn.00435870</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>mov ecx, dword[esp+8]<br>sub esp, 0x88<br>push ebx<br>mov ebx, dword[esp+0x98]<br>push ebp<br>mov ebp, dword[esp+0x94]<br>push esi<br>push edi<br>mov esi, eax<br>call fcn.00413110<br>mov edi, dword[sym.imp.USER32.dll_SendMessageTimeoutW]<br>lea eax, [esp+0x20]<br>push eax<br>push 0x7d0<br>push 2<br>push 0<br>push 0<br>push 0x1004<br>push ebx<br>call edi<br>test eax, eax<br>jne 0x435906<br>mov ecx, dword[0x4c28ec]<br>cmp byte[ecx+0x104], al<br>jne 0x4358e6<br>mov edx, dword[0x4c6cb4]<br>push 1<br>push eax<br>push 0xffffffffffffffff<br>push 0x4a331c<br>push edx<br>call fcn.00476680<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0x88<br>ret 0xc<br>push 0x4ab02c<br>push 0<br>push 0x4a331c<br>mov ecx, ebp<br>call fcn.0042dc50<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0x88<br>ret 0xc<br>lea eax, [esp+0x3c]<br>push eax<br>push 0x7d0<br>push 2<br>push 0<br>push 0<br>push 0x101f<br>push ebx<br>mov dword[esp+0x40], 0xffffffff<br>call edi<br>test eax, eax<br>je 0x43594a<br>mov eax, dword[esp+0x3c]<br>test eax, eax<br>je 0x43594a<br>lea ecx, [esp+0x24]<br>push ecx<br>push 0x7d0<br>push 2<br>push 0<br>push 0<br>push 0x1200<br>push eax<br>call edi<br>mov eax, str.Count<br>mov ecx, esi<br>call fcn.00473c80<br>test eax, eax<br>mov eax, str.Selected<br>mov ecx, esi<br>setne bl<br>call fcn.00473c80<br>test eax, eax<br>mov eax, str.Focused<br>mov ecx, esi<br>setne byte[esp+0x15]<br>call fcn.00473c80<br>test eax, eax<br>mov eax, 0x4a9aac<br>mov ecx, esi<br>setne byte[esp+0x17]<br>call fcn.00473c80<br>mov edi, eax<br>test edi, edi<br>je 0x4359c9<br>lea esi, [edi+6]<br>mov eax, esi<br>call fcn.0040d200<br>test al, al<br>je 0x4359b7<br>push 0x10<br>push 0<br>push esi<br>call fcn.0048e37b<br>lea ecx, [eax-1]<br>add esp, 0xc<br>mov dword[esp+0x18], ecx<br>jmp 0x4359d5<br>push esi<br>call fcn.0048dfe6<br>lea ecx, [eax-1]<br>add esp, 4<br>mov dword[esp+0x18], ecx<br>jmp 0x4359d5<br>mov dword[esp+0x18], 0xffffffff<br>mov ecx, dword[esp+0x18]<br>mov eax, dword[esp+0x24]<br>cmp eax, 0xffffffff<br>jle 0x4359e7<br>cmp ecx, 0xffffffff<br>jle 0x4359e7<br>cmp ecx, eax<br>jge 0x435a51<br>test bl, bl<br>je 0x435aa5<br>cmp byte[esp+0x17], 0<br>je 0x435a23<br>mov eax, dword[esp+0xa4]<br>lea edx, [esp+0x18]<br>push edx<br>push 0x7d0<br>push 2<br>push 1<br>push 0xffffffffffffffff<br>push 0x100c<br>push eax<br>call dword[sym.imp.USER32.dll_SendMessageTimeoutW]<br>test eax, eax<br>je 0x435a51<br>inc dword[esp+0x18]<br>jmp 0x435a70<br>cmp byte[esp+0x15], 0<br>je 0x435a64<br>mov edx, dword[esp+0xa4]<br>lea ecx, [esp+0x18]<br>push ecx<br>push 0x7d0<br>push 2<br>push 0<br>push 0<br>push 0x1032<br>push edx<br>call dword[sym.imp.USER32.dll_SendMessageTimeoutW]<br>test eax, eax<br>jne 0x435a70<br>push ebp<br>call fcn.00430510<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0x88<br>ret 0xc<br>test edi, edi<br>jne 0x435a6c<br>mov eax, dword[esp+0x20]<br>mov dword[esp+0x18], eax<br>mov ecx, dword[0x4c6cb4]<br>push 1<br>push 0<br>push 0xffffffffffffffff<br>push 0x4a0900<br>push ecx<br>call fcn.00476680<br>mov edx, dword[esp+0xa0]<br>mov eax, dword[esp+0x18]<br>push edx<br>call fcn.004039a0<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0x88<br>ret 0xc<br>cmp dword[esp+0x20], 1<br>jl 0x435ec3<br>test eax, eax<br>je 0x435ec3<br>mov esi, dword[esp+0xa4]<br>push 0x858<br>mov eax, 0x400<br>mov ecx, esi<br>lea edi, [esp+0x34]<br>call fcn.00474ea0<br>add esp, 4<br>mov dword[esp+0x2c], eax<br>test eax, eax<br>je 0x435a51<br>lea edi, [eax+0x58]<br>mov eax, dword[esp+0x30]<br>push eax<br>call fcn.00474e20<br>add esp, 4<br>test eax, eax<br>je 0x435b0c<br>mov eax, edi<br>cdq <br>mov dword[esp+0x60], 0x3ff<br>mov dword[esp+0x58], eax<br>mov dword[esp+0x5c], edx<br>jmp 0x435b18<br>mov dword[esp+0x58], 0x3ff<br>mov dword[esp+0x54], edi<br>cmp byte[esp+0x17], 0<br>jne 0x435b2b<br>cmp byte[esp+0x15], 0<br>mov byte[esp+0x15], 0<br>je 0x435b30<br>mov byte[esp+0x15], 1<br>or eax, 0xffffffff<br>cmp dword[esp+0x18], eax<br>jg 0x435b44<br>mov byte[esp+0x16], 0<br>cmp dword[esp+0x24], eax<br>jne 0x435b49<br>mov byte[esp+0x16], 1<br>xor ebx, ebx<br>xor ebp, ebp<br>mov dword[esp+0x1c], 0xffffffff<br>cmp dword[esp+0x20], ebx<br>jle 0x435c2a<br>mov edi, dword[sym.imp.USER32.dll_SendMessageTimeoutW]<br>cmp byte[esp+0x15], 0<br>je 0x435ba5<br>mov eax, dword[esp+0x1c]<br>xor edx, edx<br>cmp byte[esp+0x17], dl<br>lea ecx, [esp+0x1c]<br>push ecx<br>sete dl<br>push 0x7d0<br>push 2<br>inc edx<br>push edx<br>push eax<br>push 0x100c<br>push esi<br>call edi<br>test eax, eax<br>je 0x435c2a<br>cmp dword[esp+0x1c], 0xffffffff<br>je 0x435c2a<br>jmp 0x435ba9<br>mov dword[esp+0x1c], ebp<br>mov eax, dword[esp+0x18]<br>xor ecx, ecx<br>cmp eax, 0xffffffff<br>setle cl<br>dec ecx<br>and ecx, eax<br>mov dword[esp+0x48], ecx<br>lea esp, [esp]<br>mov eax, dword[esp+0x24]<br>cmp eax, 0xffffffff<br>je 0x435bcf<br>cmp dword[esp+0x48], eax<br>jge 0x435c1f<br>mov eax, dword[esp+0x2c]<br>mov ecx, dword[esp+0x30]<br>push 0<br>push 0x58<br>lea edx, [esp+0x48]<br>push edx<br>push eax<br>push ecx<br>call dword[sym.imp.KERNEL32.dll_WriteProcessMemory]<br>test eax, eax<br>je 0x435c12<br>mov eax, dword[esp+0x2c]<br>mov ecx, dword[esp+0x1c]<br>lea edx, [esp+0x38]<br>push edx<br>push 0x7d0<br>push 2<br>push eax<br>push ecx<br>push 0x1073<br>push esi<br>call edi<br>test eax, eax<br>je 0x435c12<br>add ebx, dword[esp+0x38]<br>cmp byte[esp+0x16], 0<br>jne 0x435c1f<br>inc dword[esp+0x48]<br>jmp 0x435bc0<br>inc ebp<br>cmp ebp, dword[esp+0x20]<br>jl 0x435b65<br>cmp byte[esp+0x16], 0<br>mov eax, 1<br>jne 0x435c3a<br>mov eax, dword[esp+0x24]<br>mov esi, dword[esp+0xa0]<br>imul eax, ebp<br>push 0<br>push 1<br>add eax, ebx<br>push eax<br>push 0<br>push esi<br>call fcn.00476680<br>cmp byte[esi+0x17], 0<br>mov edi, esi<br>jne 0x435c5e<br>mov esi, dword[edi+0xc]<br>test byte[esi+0x15], 8<br>je 0x435c6b<br>mov eax, esi<br>call fcn.00401160<br>mov al, byte[esi+0x17]<br>cmp al, 1<br>jne 0x435c84<br>test byte[esi+0x15], 4<br>je 0x435c7f<br>mov eax, esi<br>call fcn.0042e780<br>mov esi, dword[esi+8]<br>jmp 0x435c96<br>cmp al, 2<br>jne 0x435c91<br>call fcn.00401000<br>mov esi, eax<br>jmp 0x435c96<br>mov esi, 0x4c85b8<br>cmp byte[edi+0x17], 0<br>jne 0x435ca1<br>mov eax, dword[edi+0xc]<br>jmp 0x435ca3<br>mov eax, edi<br>cmp byte[eax+0x17], 2<br>jne 0x435cb0<br>mov eax, dword[0x4c85f8]<br>jmp 0x435cb3<br>mov eax, dword[eax+0x10]<br>shr eax, 1<br>xor edi, edi<br>mov dword[esp+0x34], eax<br>cmp eax, edi<br>jle 0x435cc4<br>dec eax<br>mov dword[esp+0x34], eax<br>mov ebp, dword[esp+0x2c]<br>mov ebx, dword[esp+0x30]<br>mov dword[esp+0x28], edi<br>mov dword[esp+0x1c], 0xffffffff<br>cmp dword[esp+0x20], edi<br>jle 0x435e20<br>cmp byte[esp+0x15], 0<br>je 0x435d2d<br>mov ecx, dword[esp+0x1c]<br>xor eax, eax<br>cmp byte[esp+0x17], al<br>lea edx, [esp+0x1c]<br>push edx<br>mov edx, dword[esp+0xa8]<br>sete al<br>push 0x7d0<br>push 2<br>inc eax<br>push eax<br>push ecx<br>push 0x100c<br>push edx<br>call dword[sym.imp.USER32.dll_SendMessageTimeoutW]<br>test eax, eax<br>je 0x435e20<br>cmp dword[esp+0x1c], 0xffffffff<br>je 0x435e20<br>jmp 0x435d35<br>mov eax, dword[esp+0x28]<br>mov dword[esp+0x1c], eax<br>cmp dword[esp+0x28], 0<br>je 0x435d4e<br>cmp edi, dword[esp+0x34]<br>jge 0x435d4e<br>mov ecx, 0xa<br>mov word[esi], cx<br>add esi, 2<br>inc edi<br>mov eax, dword[esp+0x18]<br>xor edx, edx<br>cmp eax, 0xffffffff<br>setle dl<br>dec edx<br>and eax, edx<br>mov ecx, dword[esp+0x24]<br>mov dword[esp+0x48], eax<br>cmp ecx, 0xffffffff<br>je 0x435d72<br>cmp eax, ecx<br>jge 0x435e0d<br>cmp byte[esp+0x16], 0<br>jne 0x435d8f<br>test eax, eax<br>je 0x435d8f<br>cmp edi, dword[esp+0x34]<br>jge 0x435d8f<br>mov eax, 9<br>mov word[esi], ax<br>add esi, 2<br>inc edi<br>push 0<br>push 0x58<br>lea ecx, [esp+0x48]<br>push ecx<br>push ebp<br>push ebx<br>call dword[sym.imp.KERNEL32.dll_WriteProcessMemory]<br>test eax, eax<br>je 0x435e03<br>mov eax, dword[esp+0x1c]<br>mov ecx, dword[esp+0xa4]<br>lea edx, [esp+0x38]<br>push edx<br>push 0x7d0<br>push 2<br>push ebp<br>push eax<br>push 0x1073<br>push ecx<br>call dword[sym.imp.USER32.dll_SendMessageTimeoutW]<br>test eax, eax<br>je 0x435e03<br>mov eax, dword[esp+0x38]<br>test eax, eax<br>jle 0x435dfc<br>lea edx, [eax+edi]<br>cmp edx, dword[esp+0x34]<br>jg 0x435e20<br>push 0<br>add eax, eax<br>push eax<br>push esi<br>lea eax, [ebp+0x58]<br>push eax<br>push ebx<br>call dword[sym.imp.KERNEL32.dll_ReadProcessMemory]<br>test eax, eax<br>je 0x435dfc<br>mov eax, dword[esp+0x38]<br>lea esi, [esi+eax*2]<br>add edi, eax<br>cmp byte[esp+0x16], 0<br>jne 0x435e0d<br>mov eax, dword[esp+0x48]<br>inc eax<br>jmp 0x435d5d<br>mov eax, dword[esp+0x28]<br>inc eax<br>mov dword[esp+0x28], eax<br>cmp eax, dword[esp+0x20]<br>jl 0x435ce2<br>test esi, esi<br>je 0x435e29<br>xor ecx, ecx<br>mov word[esi], cx<br>push 0x8000<br>push 0<br>push ebp<br>push ebx<br>call dword[sym.imp.KERNEL32.dll_VirtualFreeEx]<br>push ebx<br>call dword[sym.imp.KERNEL32.dll_CloseHandle]<br>mov esi, dword[esp+0xa0]<br>cmp byte[esi+0x17], 0<br>jne 0x435e51<br>mov eax, dword[esi+0xc]<br>jmp 0x435e53<br>mov eax, esi<br>cmp byte[eax+0x17], 2<br>jne 0x435e6e<br>cmp dword[0x4c85f0], 0<br>je 0x435e6e<br>mov ecx, 0x4c85e4<br>call fcn.00404270<br>jmp 0x435e72<br>and byte[eax+0x15], 0x86<br>cmp byte[esi+0x17], 0<br>jne 0x435e7d<br>mov edx, esi<br>mov esi, dword[edx+0xc]<br>cmp byte[esi+0x17], 1<br>jne 0x435e95<br>test byte[esi+0x15], 8<br>je 0x435e90<br>mov eax, esi<br>call fcn.00401160<br>lea eax, [esi+0xc]<br>jmp 0x435e9a<br>mov eax, 0x4c9308<br>mov edx, dword[0x4c6cb4]<br>push 1<br>push 0<br>push 0xffffffffffffffff<br>push 0x4a0900<br>lea ecx, [edi+edi]<br>push edx<br>mov dword[eax], ecx<br>call fcn.00476680<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0x88<br>ret 0xc<br>mov eax, dword[0x4c6cb4]<br>push 1<br>push 0<br>push 0xffffffffffffffff<br>push 0x4a0900<br>push eax<br>call fcn.00476680<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0x88<br>ret 0xc<br><eoc> ', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

mov ecx, dword[esp+8]
sub esp, 0x88
push ebx
mov ebx, dword[esp+0x98]
push ebp
mov ebp, dword[esp+0x94]
push esi
push edi
mov esi, eax
call fcn.00413110
mov edi, dword[sym.imp.USER32.dll_SendMessageTimeoutW]
lea eax, [esp+0x20]
push eax
push 0x7d0
push 2
push 0
push 0
push 0x1004
push ebx
call edi
test eax, eax
jne 0x435906
mov ecx, dword[0x4c28ec]
cmp byte[ecx+0x104], al
jne 0x4358e6
mov edx, dword[0x4c6cb4]
push 1
push eax
push 0xffffffffffffffff
push 0x4a331c
push edx
call fcn.00476680
pop edi
pop esi
pop ebp
pop ebx
add esp, 0x88
ret 0xc
push 0x4ab02c
push 0
push 0x4a331c
mov ecx, ebp
call fcn.0042dc50
pop edi
pop esi
pop ebp
pop ebx
add esp, 0x88
ret 0xc
lea eax, [esp+0x3c]
push eax
push 0x7d0
push 2
push 0
push 0
push 0x101f
push ebx
mov dword[esp+0x40], 0xffffffff
call edi
test eax, eax
je 0x43594a
mov eax, dword[esp+0x3c]
test eax, eax
je 0x43594a
lea ecx, [esp+0x24]
push ecx
push 0x7d0
push 2
push 0
push 0
push 0x1200
push eax
call edi
mov eax, str.Count
mov ecx, esi
call fcn.00473c80
test eax, eax
mov eax, str.Selected
mov ecx, esi
setne bl
call fcn.00473c80
test eax, eax
mov eax, str.Focused
mov ecx, esi
setne byte[esp+0x15]
call fcn.00473c80
test eax, eax
mov eax, 0x4a9aac
mov ecx, esi
setne byte[esp+0x17]
call fcn.00473c80
mov edi, eax
test edi, edi
je 0x4359c9
lea esi, [edi+6]
mov eax, esi
call fcn.0040d200
test al, al
je 0x4359b7
push 0x10
push 0
push esi
call fcn.0048e37b
lea ecx, [eax-1]
add esp, 0xc
mov dword[esp+0x18], ecx
jmp 0x4359d5
push esi
call fcn.0048dfe6
lea ecx, [eax-1]
add esp, 4
mov dword[esp+0x18], ecx
jmp 0x4359d5
mov dword[esp+0x18], 0xffffffff
mov ecx, dword[esp+0x18]
mov eax, dword[esp+0x24]
cmp eax, 0xffffffff
jle 0x4359e7
cmp ecx, 0xffffffff
jle 0x4359e7
cmp ecx, eax
jge 0x435a51
test bl, bl
je 0x435aa5
cmp byte[esp+0x17], 0
je 0x435a23
mov eax, dword[esp+0xa4]
lea edx, [esp+0x18]
push edx
push 0x7d0
push 2
push 1
push 0xffffffffffffffff
push 0x100c
push eax
call dword[sym.imp.USER32.dll_SendMessageTimeoutW]
test eax, eax
je 0x435a51
inc dword[esp+0x18]
jmp 0x435a70
cmp byte[esp+0x15], 0
je 0x435a64
mov edx, dword[esp+0xa4]
lea ecx, [esp+0x18]
push ecx
push 0x7d0
push 2
push 0
push 0
push 0x1032
push edx
call dword[sym.imp.USER32.dll_SendMessageTimeoutW]
test eax, eax
jne 0x435a70
push ebp
call fcn.00430510
pop edi
pop esi
pop ebp
pop ebx
add esp, 0x88
ret 0xc
test edi, edi
jne 0x435a6c
mov eax, dword[esp+0x20]
mov dword[esp+0x18], eax
mov ecx, dword[0x4c6cb4]
push 1
push 0
push 0xffffffffffffffff
push 0x4a0900
push ecx
call fcn.00476680
mov edx, dword[esp+0xa0]
mov eax, dword[esp+0x18]
push edx
call fcn.004039a0
pop edi
pop esi
pop ebp
pop ebx
add esp, 0x88
ret 0xc
cmp dword[esp+0x20], 1
jl 0x435ec3
test eax, eax
je 0x435ec3
mov esi, dword[esp+0xa4]
push 0x858
mov eax, 0x400
mov ecx, esi
lea edi, [esp+0x34]
call fcn.00474ea0
add esp, 4
mov dword[esp+0x2c], eax
test eax, eax
je 0x435a51
lea edi, [eax+0x58]
mov eax, dword[esp+0x30]
push eax
call fcn.00474e20
add esp, 4
test eax, eax
je 0x435b0c
mov eax, edi
cdq
mov dword[esp+0x60], 0x3ff
mov dword[esp+0x58], eax
mov dword[esp+0x5c], edx
jmp 0x435b18
mov dword[esp+0x58], 0x3ff
mov dword[esp+0x54], edi
cmp byte[esp+0x17], 0
jne 0x435b2b
cmp byte[esp+0x15], 0
mov byte[esp+0x15], 0
je 0x435b30
mov byte[esp+0x15], 1
or eax, 0xffffffff
cmp dword[esp+0x18], eax
jg 0x435b44
mov byte[esp+0x16], 0
cmp dword[esp+0x24], eax
jne 0x435b49
mov byte[esp+0x16], 1
xor ebx, ebx
xor ebp, ebp
mov dword[esp+0x1c], 0xffffffff
cmp dword[esp+0x20], ebx
jle 0x435c2a
mov edi, dword[sym.imp.USER32.dll_SendMessageTimeoutW]
cmp byte[esp+0x15], 0
je 0x435ba5
mov eax, dword[esp+0x1c]
xor edx, edx
cmp byte[esp+0x17], dl
lea ecx, [esp+0x1c]
push ecx
sete dl
push 0x7d0
push 2
inc edx
push edx
push eax
push 0x100c
push esi
call edi
test eax, eax
je 0x435c2a
cmp dword[esp+0x1c], 0xffffffff
je 0x435c2a
jmp 0x435ba9
mov dword[esp+0x1c], ebp
mov eax, dword[esp+0x18]
xor ecx, ecx
cmp eax, 0xffffffff
setle cl
dec ecx
and ecx, eax
mov dword[esp+0x48], ecx
lea esp, [esp]
mov eax, dword[esp+0x24]
cmp eax, 0xffffffff
je 0x435bcf
cmp dword[esp+0x48], eax
jge 0x435c1f
mov eax, dword[esp+0x2c]
mov ecx, dword[esp+0x30]
push 0
push 0x58
lea edx, [esp+0x48]
push edx
push eax
push ecx
call dword[sym.imp.KERNEL32.dll_WriteProcessMemory]
test eax, eax
je 0x435c12
mov eax, dword[esp+0x2c]
mov ecx, dword[esp+0x1c]
lea edx, [esp+0x38]
push edx
push 0x7d0
push 2
push eax
push ecx
push 0x1073
push esi
call edi
test eax, eax
je 0x435c12
add ebx, dword[esp+0x38]
cmp byte[esp+0x16], 0
jne 0x435c1f
inc dword[esp+0x48]
jmp 0x435bc0
inc ebp
cmp ebp, dword[esp+0x20]
jl 0x435b65
cmp byte[esp+0x16], 0
mov eax, 1
jne 0x435c3a
mov eax, dword[esp+0x24]
mov esi, dword[esp+0xa0]
imul eax, ebp
push 0
push 1
add eax, ebx
push eax
push 0
push esi
call fcn.00476680
cmp byte[esi+0x17], 0
mov edi, esi
jne 0x435c5e
mov esi, dword[edi+0xc]
test byte[esi+0x15], 8
je 0x435c6b
mov eax, esi
call fcn.00401160
mov al, byte[esi+0x17]
cmp al, 1
jne 0x435c84
test byte[esi+0x15], 4
je 0x435c7f
mov eax, esi
call fcn.0042e780
mov esi, dword[esi+8]
jmp 0x435c96
cmp al, 2
jne 0x435c91
call fcn.00401000
mov esi, eax
jmp 0x435c96
mov esi, 0x4c85b8
cmp byte[edi+0x17], 0
jne 0x435ca1
mov eax, dword[edi+0xc]
jmp 0x435ca3
mov eax, edi
cmp byte[eax+0x17], 2
jne 0x435cb0
mov eax, dword[0x4c85f8]
jmp 0x435cb3
mov eax, dword[eax+0x10]
shr eax, 1
xor edi, edi
mov dword[esp+0x34], eax
cmp eax, edi
jle 0x435cc4
dec eax
mov dword[esp+0x34], eax
mov ebp, dword[esp+0x2c]
mov ebx, dword[esp+0x30]
mov dword[esp+0x28], edi
mov dword[esp+0x1c], 0xffffffff
cmp dword[esp+0x20], edi
jle 0x435e20
cmp byte[esp+0x15], 0
je 0x435d2d
mov ecx, dword[esp+0x1c]
xor eax, eax
cmp byte[esp+0x17], al
lea edx, [esp+0x1c]
push edx
mov edx, dword[esp+0xa8]
sete al
push 0x7d0
push 2
inc eax
push eax
push ecx
push 0x100c
push edx
call dword[sym.imp.USER32.dll_SendMessageTimeoutW]
test eax, eax
je 0x435e20
cmp dword[esp+0x1c], 0xffffffff
je 0x435e20
jmp 0x435d35
mov eax, dword[esp+0x28]
mov dword[esp+0x1c], eax
cmp dword[esp+0x28], 0
je 0x435d4e
cmp edi, dword[esp+0x34]
jge 0x435d4e
mov ecx, 0xa
mov word[esi], cx
add esi, 2
inc edi
mov eax, dword[esp+0x18]
xor edx, edx
cmp eax, 0xffffffff
setle dl
dec edx
and eax, edx
mov ecx, dword[esp+0x24]
mov dword[esp+0x48], eax
cmp ecx, 0xffffffff
je 0x435d72
cmp eax, ecx
jge 0x435e0d
cmp byte[esp+0x16], 0
jne 0x435d8f
test eax, eax
je 0x435d8f
cmp edi, dword[esp+0x34]
jge 0x435d8f
mov eax, 9
mov word[esi], ax
add esi, 2
inc edi
push 0
push 0x58
lea ecx, [esp+0x48]
push ecx
push ebp
push ebx
call dword[sym.imp.KERNEL32.dll_WriteProcessMemory]
test eax, eax
je 0x435e03
mov eax, dword[esp+0x1c]
mov ecx, dword[esp+0xa4]
lea edx, [esp+0x38]
push edx
push 0x7d0
push 2
push ebp
push eax
push 0x1073
push ecx
call dword[sym.imp.USER32.dll_SendMessageTimeoutW]
test eax, eax
je 0x435e03
mov eax, dword[esp+0x38]
test eax, eax
jle 0x435dfc
lea edx, [eax+edi]
cmp edx, dword[esp+0x34]
jg 0x435e20
push 0
add eax, eax
push eax
push esi
lea eax, [ebp+0x58]
push eax
push ebx
call dword[sym.imp.KERNEL32.dll_ReadProcessMemory]
test eax, eax
je 0x435dfc
mov eax, dword[esp+0x38]
lea esi, [esi+eax*2]
add edi, eax
cmp byte[esp+0x16], 0
jne 0x435e0d
mov eax, dword[esp+0x48]
inc eax
jmp 0x435d5d
mov eax, dword[esp+0x28]
inc eax
mov dword[esp+0x28], eax
cmp eax, dword[esp+0x20]
jl 0x435ce2
test esi, esi
je 0x435e29
xor ecx, ecx
mov word[esi], cx
push 0x8000
push 0
push ebp
push ebx
call dword[sym.imp.KERNEL32.dll_VirtualFreeEx]
push ebx
call dword[sym.imp.KERNEL32.dll_CloseHandle]
mov esi, dword[esp+0xa0]
cmp byte[esi+0x17], 0
jne 0x435e51
mov eax, dword[esi+0xc]
jmp 0x435e53
mov eax, esi
cmp byte[eax+0x17], 2
jne 0x435e6e
cmp dword[0x4c85f0], 0
je 0x435e6e
mov ecx, 0x4c85e4
call fcn.00404270
jmp 0x435e72
and byte[eax+0x15], 0x86
cmp byte[esi+0x17], 0
jne 0x435e7d
mov edx, esi
mov esi, dword[edx+0xc]
cmp byte[esi+0x17], 1
jne 0x435e95
test byte[esi+0x15], 8
je 0x435e90
mov eax, esi
call fcn.00401160
lea eax, [esi+0xc]
jmp 0x435e9a
mov eax, 0x4c9308
mov edx, dword[0x4c6cb4]
push 1
push 0
push 0xffffffffffffffff
push 0x4a0900
lea ecx, [edi+edi]
push edx
mov dword[eax], ecx
call fcn.00476680
pop edi
pop esi
pop ebp
pop ebx
add esp, 0x88
ret 0xc
mov eax, dword[0x4c6cb4]
push 1
push 0
push 0xffffffffffffffff
push 0x4a0900
push eax
call fcn.00476680
pop edi
pop esi
pop ebp
pop ebx
add esp, 0x88
ret 0xc

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f