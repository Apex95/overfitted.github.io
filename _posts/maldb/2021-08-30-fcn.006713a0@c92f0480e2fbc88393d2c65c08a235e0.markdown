---
layout: post
title:  "fcn.006713a0 @ c92f0480e2fbc88393d2c65c08a235e0"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.006713a0
- **Origin (md5):** c92f0480e2fbc88393d2c65c08a235e0
- **VirusTotal:** [virustotal.com/gui/file/c92f0480e2fbc88393d2c65c08a235e0][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Behaviour Tags
<span class="bhv-tag" id="CREATES_SOCKET_LISTENER">CREATES_SOCKET_LISTENER / 0.07248454862580915</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-16.309343338012695, 27.27622413635254, '<b><a href="/report/fcn.006713a0@c92f0480e2fbc88393d2c65c08a235e0">fcn.006713a0</a><br>@c92f0480e2fbc88393d2c65c08a235e0</b><br>', 'point { fill-color: #e0440e; }'],
[74.19633483886719, -47.34428405761719, '<b><a href="/report/fcn.0068ae70@c92f0480e2fbc88393d2c65c08a235e0">fcn.0068ae70</a><br>@c92f0480e2fbc88393d2c65c08a235e0</b><br>', 'null'],
[87.84680938720703, 12.763805389404297, '<b><a href="/report/fcn.00681ac0@c92f0480e2fbc88393d2c65c08a235e0">fcn.00681ac0</a><br>@c92f0480e2fbc88393d2c65c08a235e0</b><br>', 'null'],
[-60.646419525146484, -87.37456512451172, '<b><a href="/report/fcn.0068d130@c92f0480e2fbc88393d2c65c08a235e0">fcn.0068d130</a><br>@c92f0480e2fbc88393d2c65c08a235e0</b><br>', 'null'],
[60.694366455078125, 73.99304962158203, '<b><a href="/report/fcn.0068b9d0@c92f0480e2fbc88393d2c65c08a235e0">fcn.0068b9d0</a><br>@c92f0480e2fbc88393d2c65c08a235e0</b><br>', 'null'],
[-5.654209136962891, 129.55810546875, '<b><a href="/report/fcn.00433690@c92f0480e2fbc88393d2c65c08a235e0">fcn.00433690</a><br>@c92f0480e2fbc88393d2c65c08a235e0</b><br>', 'null'],
[-69.95843505859375, 47.51790237426758, '<b><a href="/report/fcn.00670420@c92f0480e2fbc88393d2c65c08a235e0">fcn.00670420</a><br>@c92f0480e2fbc88393d2c65c08a235e0</b><br>', 'null'],
[17.475439071655273, -27.268606185913086, '<b><a href="/report/fcn.006823d0@c92f0480e2fbc88393d2c65c08a235e0">fcn.006823d0</a><br>@c92f0480e2fbc88393d2c65c08a235e0</b><br>', 'null'],
[-62.645530700683594, -35.6541633605957, '<b><a href="/report/fcn.006833e0@c92f0480e2fbc88393d2c65c08a235e0">fcn.006833e0</a><br>@c92f0480e2fbc88393d2c65c08a235e0</b><br>', 'null'],
[21.167993545532227, -91.5447998046875, '<b><a href="/report/fcn.0067c360@c92f0480e2fbc88393d2c65c08a235e0">fcn.0067c360</a><br>@c92f0480e2fbc88393d2c65c08a235e0</b><br>', 'null'],
[-29.086204528808594, -158.59820556640625, '<b><a href="/report/fcn.00691fc0@c92f0480e2fbc88393d2c65c08a235e0">fcn.00691fc0</a><br>@c92f0480e2fbc88393d2c65c08a235e0</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
push edi
push esi
push ebx
sub esp, 0xfc
mov ebp, dword[esp+0x110]
cmp dword[ebp-0xd4], 6
lea ebx, [ebp-0xd8]
je 0x6713dc
mov dword[esp+8], 0x76e
mov dword[esp+4], str.src_win_fs.c
mov dword[esp], str.req__type__UV_FS
call fcn.006b2490
cmp dword[ebp-0x9c], 0x1d
ja case.0x6713ef.0
mov eax, dword[ebp-0x9c]
jmp dword[eax*4+0x7b5d44]
lea eax, [eax+eax+2]
mov dword[esp], eax
call fcn.0066b490
test eax, eax
mov edi, eax
je 0x6732d4
mov dword[esp+0xc], 0
mov dword[esp+8], esi
mov dword[esp+4], eax
mov dword[esp], ebx
call dword[0x83c118]
sub esp, 0x10
test eax, eax
je 0x6729d2
mov dword[esp+8], 8
mov dword[esp+4], 0x7b5e38
mov dword[esp], edi
call sub.msvcrt.dll_wcsncmp
test eax, eax
jne 0x672cd0
mov edx, 0x5c
lea eax, [edi+0xc]
mov word[edi+0xc], dx
lea edx, [esi-6]
lea ecx, [ebp-0x8c]
mov dword[esp], 0
call fcn.0066f8f0
mov dword[esp], edi
mov esi, eax
call fcn.0066b4a0
cmp esi, 0xffffffff
je 0x671646
mov dword[esp], ebx
call dword[sym.imp.KERNEL32.dll_CloseHandle]
or dword[ebp+0x14], 8
sub esp, 4
mov dword[ebp-0x90], 0
add esp, 0xfc
pop ebx
pop esi
pop edi
pop ebp
ret
mov eax, dword[ebp+0x1c]
cmp eax, 0xffffffff
je 0x6714f3
mov dword[esp], eax
call dword[sym.imp.msvcrt.dll__get_osfhandle]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_FlushFileBuffers]
sub esp, 4
test eax, eax
jne case.0x6713ef.26
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov dword[ebp+0x18], eax
mov dword[esp], eax
call fcn.0066e3a0
mov dword[ebp-0x90], eax
add esp, 0xfc
pop ebx
pop esi
pop edi
pop ebp
ret
mov dword[ebp-0x90], 0xfffff00d
mov dword[ebp+0x18], 6
jmp 0x67149e
mov dword[esp+8], 0
mov eax, dword[ebp+0x1c]
mov dword[esp+4], eax
mov eax, dword[ebp+0x24]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_CreateHardLinkW]
sub esp, 0xc
test eax, eax
jne case.0x6713ef.26
jmp 0x6714d1
mov dword[esp+0x18], 0
mov dword[esp+0x14], 0x2200000
mov dword[esp+0x10], 3
mov dword[esp+0xc], 0
mov dword[esp+8], 0
mov dword[esp+4], 0
mov eax, dword[ebp+0x1c]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_CreateFileW]
sub esp, 0x1c
cmp eax, 0xffffffff
mov ebx, eax
je 0x6714d1
lea edx, [ebp-0x8c]
xor ecx, ecx
call fcn.0066fa10
test eax, eax
jne 0x6725f5
or dword[ebp+0x14], 8
mov dword[ebp-0x90], 0
mov dword[esp], ebx
call dword[sym.imp.KERNEL32.dll_CloseHandle]
sub esp, 4
jmp 0x67149e
mov ebx, dword[0x83c118]
test ebx, ebx
je 0x672620
mov dword[esp+0x18], 0
mov dword[esp+0x14], 0x2000080
mov dword[esp+0x10], 3
mov dword[esp+0xc], 0
mov dword[esp+8], 0
mov dword[esp+4], 0
mov eax, dword[ebp+0x1c]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_CreateFileW]
sub esp, 0x1c
cmp eax, 0xffffffff
mov ebx, eax
je 0x6714d1
mov dword[esp+0xc], 0
mov dword[esp+8], 0
mov dword[esp+4], 0
mov dword[esp], eax
call dword[0x83c118]
sub esp, 0x10
test eax, eax
mov esi, eax
jne 0x6713f6
mov dword[esp], ebx
call dword[sym.imp.KERNEL32.dll_CloseHandle]
sub esp, 4
jmp 0x6714d1
mov dword[esp], ebx
call fcn.006708f0
jmp 0x67149e
mov dword[esp], ebx
call fcn.00670e00
jmp 0x67149e
mov dword[esp], ebx
call fcn.006708a0
jmp 0x67149e
mov dword[esp+8], 1
mov eax, dword[ebp+0x24]
mov dword[esp+4], eax
mov eax, dword[ebp+0x1c]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_MoveFileExW]
sub esp, 0xc
test eax, eax
jne case.0x6713ef.26
jmp 0x6714d1
mov dword[esp], ebx
call fcn.00670b40
jmp 0x67149e
mov dword[esp], ebx
call fcn.00670af0
jmp 0x67149e
mov eax, dword[ebp+0x1c]
cmp eax, 0xffffffff
je 0x6714f3
lea ebx, [esp+0x88]
lea edi, [esp+0x70]
mov dword[esp], eax
call dword[sym.imp.msvcrt.dll__get_osfhandle]
mov dword[esp+0x10], 4
mov esi, eax
mov dword[esp+0xc], 0x28
mov dword[esp+8], ebx
mov dword[esp+4], edi
mov dword[esp], eax
call dword[0x83c134]
sub esp, 0x14
test eax, eax
jns 0x67294c
mov dword[esp], eax
call dword[0x83c120]
sub esp, 4
mov dword[ebp+0x18], eax
mov dword[esp], eax
call fcn.0066e3a0
mov dword[ebp-0x90], eax
jmp 0x67149e
mov eax, dword[ebp+0x20]
mov dword[esp+4], eax
mov eax, dword[ebp+0x1c]
mov dword[esp], eax
call dword[sym.imp.msvcrt.dll__wchmod]
cmp eax, 0xffffffff
mov dword[ebp-0x90], eax
jne 0x67149e
call dword[sym.imp.msvcrt.dll___doserrno]
mov eax, dword[eax]
mov dword[ebp+0x18], eax
mov dword[esp], eax
call fcn.0066e3a0
mov dword[ebp-0x90], eax
jmp 0x67149e
mov eax, dword[ebp+0x1c]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_GetFileAttributesW]
sub esp, 4
cmp eax, 0xffffffff
je 0x6714d1
test byte[ebp+0x20], 2
je case.0x6713ef.26
and eax, 0x11
cmp eax, 1
jne case.0x6713ef.26
mov dword[ebp+0x18], 0xfffff030
mov dword[esp], 0xfffff030
call fcn.0066e3a0
mov dword[ebp-0x90], eax
jmp 0x67149e
mov eax, dword[ebp+0x1c]
cmp eax, 0xffffffff
je 0x6714f3
mov dword[esp], eax
call dword[sym.imp.msvcrt.dll__get_osfhandle]
cmp eax, 0xffffffff
je 0x6726e0
fld qword[ebp+0x28]
fld dword[0x7b5e64]
fmul qword[ebp+0x20]
fld dword[0x7b5e68]
fxch st(1)
fucomi st(1)
jae 0x672814
fstp st(1)
fnstcw word[esp+0x5e]
movzx edx, word[esp+0x5e]
mov dh, 0xc
mov word[esp+0x5c], dx
fldcw word[esp+0x5c]
fistp qword[esp+0x50]
fldcw word[esp+0x5e]
mov ecx, dword[esp+0x50]
mov ebx, dword[esp+0x54]
fmul dword[0x7b5e64]
add ecx, 0xd53e8000
adc ebx, 0x19db1de
mov dword[esp+0x70], ecx
mov dword[esp+0x74], ebx
fld dword[0x7b5e68]
fxch st(1)
fucomi st(1)
jae 0x672847
fstp st(1)
fldcw word[esp+0x5c]
fistp qword[esp+0x50]
fldcw word[esp+0x5e]
mov ecx, dword[esp+0x50]
mov ebx, dword[esp+0x54]
lea edx, [esp+0x88]
add ecx, 0xd53e8000
mov dword[esp+4], 0
adc ebx, 0x19db1de
mov dword[esp+0x88], ecx
mov dword[esp], eax
mov dword[esp+0xc], edx
lea edx, [esp+0x70]
mov dword[esp+0x8c], ebx
mov dword[esp+8], edx
call dword[sym.imp.KERNEL32.dll_SetFileTime]
sub esp, 0x10
test eax, eax
jne case.0x6713ef.26
jmp 0x6714d1
mov dword[esp+0x18], 0
mov dword[esp+0x14], 0x2000000
mov dword[esp+0x10], 3
mov dword[esp+0xc], 0
mov dword[esp+8], 7
mov dword[esp+4], 0x100
mov eax, dword[ebp+0x1c]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_CreateFileW]
sub esp, 0x1c
cmp eax, 0xffffffff
mov ebx, eax
je 0x6714d1
fld qword[ebp+0x28]
fld dword[0x7b5e64]
fmul qword[ebp+0x20]
fld dword[0x7b5e68]
fxch st(1)
fucomi st(1)
jae 0x672683
fstp st(1)
fnstcw word[esp+0x5e]
movzx eax, word[esp+0x5e]
mov ah, 0xc
mov word[esp+0x5c], ax
fldcw word[esp+0x5c]
fistp qword[esp+0x50]
fldcw word[esp+0x5e]
mov eax, dword[esp+0x50]
mov edx, dword[esp+0x54]
fmul dword[0x7b5e64]
add eax, 0xd53e8000
adc edx, 0x19db1de
mov dword[esp+0x70], eax
mov dword[esp+0x74], edx
fld dword[0x7b5e68]
fxch st(1)
fucomi st(1)
jae 0x672660
fstp st(1)
fldcw word[esp+0x5c]
fistp qword[esp+0x50]
fldcw word[esp+0x5e]
mov eax, dword[esp+0x50]
mov edx, dword[esp+0x54]
add eax, 0xd53e8000
mov dword[esp+4], 0
mov dword[esp+0x88], eax
lea eax, [esp+0x88]
adc edx, 0x19db1de
mov dword[esp+0x8c], edx
mov dword[esp], ebx
mov dword[esp+0xc], eax
lea eax, [esp+0x70]
mov dword[esp+8], eax
call dword[sym.imp.KERNEL32.dll_SetFileTime]
sub esp, 0x10
test eax, eax
je 0x6725f5
mov dword[esp], ebx
call dword[sym.imp.KERNEL32.dll_CloseHandle]
mov dword[ebp-0x90], 0
sub esp, 4
jmp 0x67149e
mov eax, dword[ebp+0x1c]
cmp eax, 0xffffffff
je 0x6714f3
mov dword[esp], eax
call dword[sym.imp.msvcrt.dll__get_osfhandle]
lea edx, [esp+0x70]
mov ecx, dword[ebp+0x38]
mov ebx, dword[ebp+0x3c]
mov dword[esp+0x10], 0x14
mov dword[esp+0xc], 8
mov dword[esp+8], edx
lea edx, [esp+0x88]
mov dword[esp], eax
mov dword[esp+0x70], ecx
mov dword[esp+0x74], ebx
mov dword[esp+4], edx
call dword[0x83c0fc]
sub esp, 0x14
test eax, eax
js 0x67172e
jmp case.0x6713ef.26
mov eax, dword[ebp+0x1c]
cmp eax, 0xffffffff
je 0x6714f3
mov dword[esp], eax
call dword[sym.imp.msvcrt.dll__get_osfhandle]
cmp eax, 0xffffffff
mov ebx, eax
je 0x6726e0
lea eax, [ebp-0x80]
lea esi, [esp+0x68]
mov dword[esp+0x10], 0x12
mov dword[esp+0xc], 0x68
mov dword[esp], ebx
mov dword[esp+0x2c], eax
lea eax, [esp+0x88]
mov dword[esp+4], esi
mov dword[esp+8], eax
call dword[0x83c134]
mov edx, eax
sub esp, 0x14
shr edx, 0x1e
cmp edx, 3
je 0x6731c3
lea eax, [esp+0x70]
mov dword[esp+0x10], 1
mov dword[esp+0xc], 0x18
mov dword[esp+4], esi
mov dword[esp], ebx
mov dword[esp+8], eax
call dword[0x83c128]
sub esp, 0x14
cmp dword[esp+0x68], 0xc0000002
je 0x6728d6
mov edx, eax
shr edx, 0x1e
cmp edx, 3
je 0x6731c3
mov eax, dword[esp+0x78]
mov dword[ebp-0x7c], 0
mov dword[ebp-0x80], eax
mov ecx, dword[esp+0xa8]
mov dword[ebp-0x78], 0
mov dword[ebp-0x74], 0
test ch, 4
jne 0x672920
test cl, 0x10
je 0x6729a4
mov dword[ebp-0x78], 0x4000
mov dword[ebp-0x74], 0
mov eax, 0x4000
mov dword[ebp-0x48], 0
mov dword[ebp-0x44], 0
xor edx, edx
and ecx, 1
je 0x672898
or eax, 0x124
mov dword[ebp-0x74], edx
mov dword[ebp-0x78], eax
mov esi, dword[esp+0x90]
mov edi, dword[esp+0x94]
mov ebx, 0x989680
mov dword[esp+8], 0x989680
mov dword[esp+0xc], 0
add esi, 0x2ac18000
adc edi, 0xfe624e21
mov dword[esp], esi
mov dword[esp+4], edi
call fcn.006ad2e0
mov dword[ebp-0x20], eax
mov edi, dword[esp+0xa4]
imul ebx
sub esi, eax
imul esi, esi, 0x64
mov dword[ebp-0x1c], esi
mov esi, dword[esp+0xa0]
mov dword[esp+8], 0x989680
mov dword[esp+0xc], 0
add esi, 0x2ac18000
adc edi, 0xfe624e21
mov dword[esp], esi
mov dword[esp+4], edi
call fcn.006ad2e0
mov dword[ebp-0x10], eax
mov edi, dword[esp+0x9c]
imul ebx
sub esi, eax
imul esi, esi, 0x64
mov dword[ebp-0xc], esi
mov esi, dword[esp+0x98]
mov dword[esp+8], 0x989680
mov dword[esp+0xc], 0
add esi, 0x2ac18000
adc edi, 0xfe624e21
mov dword[esp], esi
mov dword[esp+4], edi
call fcn.006ad2e0
mov dword[ebp-0x18], eax
mov edi, dword[esp+0x8c]
imul ebx
sub esi, eax
imul esi, esi, 0x64
mov dword[ebp-0x14], esi
mov esi, dword[esp+0x88]
mov dword[esp+8], 0x989680
mov dword[esp+0xc], 0
add esi, 0x2ac18000
adc edi, 0xfe624e21
mov dword[esp], esi
mov dword[esp+4], edi
call fcn.006ad2e0
mov dword[ebp-8], eax
imul ebx
mov edx, dword[esp+0xcc]
sub esi, eax
mov eax, dword[esp+0xc8]
mov dword[ebp-0x4c], edx
mov edx, dword[esp+0xb4]
imul esi, esi, 0x64
mov dword[ebp-0x50], eax
mov eax, dword[esp+0xb0]
mov dword[ebp-4], esi
shrd eax, edx, 9
sar edx, 9
mov dword[ebp-0x38], eax
mov eax, dword[esp+0xc0]
mov dword[ebp-0x34], edx
mov dword[ebp-0x70], eax
lea eax, [ebp-0x80]
mov dword[ebp-0x6c], 0
mov dword[ebp-0x40], 0x800
mov dword[ebp-0x3c], 0
mov dword[ebp-0x30], 0
mov dword[ebp-0x2c], 0
mov dword[ebp-0x60], 0
mov dword[ebp-0x5c], 0
mov dword[ebp-0x68], 0
mov dword[ebp-0x64], 0
mov dword[ebp-0x58], 0
mov dword[ebp-0x54], 0
mov dword[ebp-0x28], 0
mov dword[ebp-0x24], 0
mov dword[ebp-0x8c], eax
mov dword[ebp-0x90], 0
jmp 0x67149e
mov dword[esp], ebx
call fcn.006700c0
jmp 0x67149e
mov ebx, dword[ebp+0x1c]
mov dword[esp], ebx
call sub.msvcrt.dll_wcslen
cmp eax, 1
jbe 0x671d7a
add eax, 0x7ffffffe
cmp word[ebx+eax*2], 0x3a
lea edx, [eax+eax]
je 0x671d7a
lea edx, [ebx+edx+2]
movzx eax, word[edx]
cmp ax, 0x5c
je 0x6726fe
cmp ax, 0x2f
je 0x6726fe
mov dword[esp+0x18], 0
mov dword[esp+0x14], 0x2000000
mov dword[esp+0x10], 3
mov dword[esp+0xc], 0
mov dword[esp+8], 7
mov dword[esp+4], 0x80
mov eax, dword[ebp+0x1c]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_CreateFileW]
sub esp, 0x1c
cmp eax, 0xffffffff
mov ebx, eax
je 0x6714d1
lea eax, [ebp-0x80]
lea esi, [esp+0x68]
mov dword[esp+0x10], 0x12
mov dword[esp+0xc], 0x68
mov dword[esp], ebx
mov dword[esp+0x2c], eax
lea eax, [esp+0x88]
mov dword[esp+4], esi
mov dword[esp+8], eax
call dword[0x83c134]
mov edx, eax
sub esp, 0x14
shr edx, 0x1e
cmp edx, 3
je 0x672db6
lea eax, [esp+0x70]
mov dword[esp+0x10], 1
mov dword[esp+0xc], 0x18
mov dword[esp+4], esi
mov dword[esp], ebx
mov dword[esp+8], eax
call dword[0x83c128]
sub esp, 0x14
cmp dword[esp+0x68], 0xc0000002
je 0x672712
mov edx, eax
shr edx, 0x1e
cmp edx, 3
je 0x672db6
mov eax, dword[esp+0x78]
mov dword[ebp-0x7c], 0
mov dword[ebp-0x80], eax
mov ecx, dword[esp+0xa8]
mov dword[ebp-0x78], 0
mov dword[ebp-0x74], 0
test ch, 4
jne 0x672766
test cl, 0x10
je 0x67286a
mov dword[ebp-0x78], 0x4000
mov dword[ebp-0x74], 0
mov eax, 0x4000
mov dword[ebp-0x48], 0
mov dword[ebp-0x44], 0
xor edx, edx
and ecx, 1
je 0x6726c0
or eax, 0x124
mov dword[ebp-0x74], edx
mov dword[ebp-0x78], eax
mov esi, dword[esp+0x90]
mov edi, dword[esp+0x94]
mov dword[esp+8], 0x989680
mov dword[esp+0xc], 0
add esi, 0x2ac18000
adc edi, 0xfe624e21
mov dword[esp], esi
mov dword[esp+4], edi
call fcn.006ad2e0
mov ecx, 0x989680
mov dword[ebp-0x20], eax
mov edi, dword[esp+0xa4]
imul ecx
sub esi, eax
imul esi, esi, 0x64
mov dword[ebp-0x1c], esi
mov esi, dword[esp+0xa0]
mov dword[esp+8], 0x989680
mov dword[esp+0xc], 0
add esi, 0x2ac18000
adc edi, 0xfe624e21
mov dword[esp], esi
mov dword[esp+4], edi
call fcn.006ad2e0
mov ecx, 0x989680
mov dword[ebp-0x10], eax
mov edi, dword[esp+0x9c]
imul ecx
sub esi, eax
imul esi, esi, 0x64
mov dword[ebp-0xc], esi
mov esi, dword[esp+0x98]
mov dword[esp+8], 0x989680
mov dword[esp+0xc], 0
add esi, 0x2ac18000
adc edi, 0xfe624e21
mov dword[esp], esi
mov dword[esp+4], edi
call fcn.006ad2e0
mov ecx, 0x989680
mov dword[ebp-0x18], eax
mov edi, dword[esp+0x8c]
imul ecx
sub esi, eax
imul esi, esi, 0x64
mov dword[ebp-0x14], esi
mov esi, dword[esp+0x88]
mov dword[esp+8], 0x989680
mov dword[esp+0xc], 0
add esi, 0x2ac18000
adc edi, 0xfe624e21
mov dword[esp], esi
mov dword[esp+4], edi
call fcn.006ad2e0
mov ecx, 0x989680
mov dword[ebp-8], eax
imul ecx
mov edx, dword[esp+0xcc]
sub esi, eax
mov eax, dword[esp+0xc8]
mov dword[ebp-0x4c], edx
mov edx, dword[esp+0xb4]
imul esi, esi, 0x64
mov dword[ebp-0x50], eax
mov eax, dword[esp+0xb0]
mov dword[ebp-4], esi
shrd eax, edx, 9
sar edx, 9
mov dword[ebp-0x38], eax
mov eax, dword[esp+0xc0]
mov dword[ebp-0x34], edx
mov dword[ebp-0x70], eax
lea eax, [ebp-0x80]
mov dword[ebp-0x6c], 0
mov dword[ebp-0x40], 0x800
mov dword[ebp-0x3c], 0
mov dword[ebp-0x30], 0
mov dword[ebp-0x2c], 0
mov dword[ebp-0x60], 0
mov dword[ebp-0x5c], 0
mov dword[ebp-0x68], 0
mov dword[ebp-0x64], 0
mov dword[ebp-0x58], 0
mov dword[ebp-0x54], 0
mov dword[ebp-0x28], 0
mov dword[ebp-0x24], 0
mov dword[ebp-0x8c], eax
mov dword[ebp-0x90], 0
mov dword[esp], ebx
call dword[sym.imp.KERNEL32.dll_CloseHandle]
sub esp, 4
jmp 0x67149e
mov eax, dword[ebp+0x1c]
mov ebx, dword[ebp+0x40]
mov edx, dword[ebp+0x38]
mov edi, dword[ebp+0x3c]
mov dword[esp+0x2c], eax
mov eax, dword[ebp+0x2c]
cmp ebx, 0x10000
mov dword[esp+0x34], edx
mov dword[esp+0x30], eax
mov eax, 0x10000
cmovbe eax, ebx
mov dword[esp], eax
mov dword[esp+0x38], eax
call fcn.0066b490
test eax, eax
mov esi, eax
mov edx, dword[esp+0x34]
je 0x673319
mov eax, edi
and eax, edx
cmp eax, 0xffffffff
je 0x672103
mov eax, dword[esp+0x2c]
mov dword[esp+0xc], 0
mov dword[esp+4], edx
mov dword[esp+8], edi
mov dword[esp], eax
call sub.msvcrt.dll__lseeki64
and eax, edx
cmp eax, 0xffffffff
je 0x672647
test ebx, ebx
je 0x673175
mov dword[esp+0x110], ebp
xor edi, edi
mov ebp, dword[esp+0x38]
jmp 0x67214f
cmp eax, 0xffffffff
je 0x672640
sub ebx, eax
mov dword[esp+8], eax
mov eax, dword[esp+0x30]
mov dword[esp+4], esi
mov dword[esp], eax
call dword[sym.imp.msvcrt.dll__write_1]
cmp eax, 0xffffffff
je 0x672640
add edi, eax
test ebx, ebx
je 0x67216f
cmp ebp, ebx
mov eax, ebx
mov dword[esp+4], esi
cmovbe eax, ebp
mov dword[esp+8], eax
mov eax, dword[esp+0x2c]
mov dword[esp], eax
call dword[sym.imp.msvcrt.dll__read]
test eax, eax
jne 0x672120
mov ebp, dword[esp+0x110]
mov dword[esp], esi
call fcn.0066b4a0
cmp edi, 0xffffffff
mov dword[ebp-0x90], edi
jne 0x67149e
jmp 0x671772
mov dword[esp], ebx
call fcn.00670670
jmp 0x67149e
mov eax, dword[ebp+0x28]
and eax, 1
mov dword[esp+8], eax
mov eax, dword[ebp+0x24]
mov dword[esp+4], eax
mov eax, dword[ebp+0x1c]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_CopyFileW]
sub esp, 0xc
test eax, eax
jne case.0x6713ef.26
jmp 0x6714d1
mov dword[esp], ebx
call fcn.006703b0
jmp 0x67149e
mov ebx, dword[ebp+0x1c]
mov dword[esp], ebx
call sub.msvcrt.dll_wcslen
cmp eax, 1
jbe 0x67221a
add eax, 0x7ffffffe
cmp word[ebx+eax*2], 0x3a
lea edx, [eax+eax]
je 0x67221a
lea edx, [ebx+edx+2]
movzx eax, word[edx]
cmp ax, 0x5c
je 0x672708
cmp ax, 0x2f
je 0x672708
mov dword[esp+0x18], 0
mov dword[esp+0x14], 0x2200000
mov dword[esp+0x10], 3
mov dword[esp+0xc], 0
mov dword[esp+8], 7
mov dword[esp+4], 0x80
mov eax, dword[ebp+0x1c]
mov esi, dword[sym.imp.KERNEL32.dll_CreateFileW]
mov dword[esp], eax
call esi
sub esp, 0x1c
cmp eax, 0xffffffff
mov dword[esp+0x2c], eax
je 0x6714d1
lea eax, [ebp-0x80]
lea ebx, [esp+0x88]
lea edi, [esp+0x68]
mov dword[esp+0x10], 0x12
mov dword[esp+0xc], 0x68
mov dword[esp+0x30], eax
mov eax, dword[esp+0x2c]
mov dword[esp+8], ebx
mov dword[esp+4], edi
mov dword[esp], eax
call dword[0x83c134]
mov edx, eax
sub esp, 0x14
shr edx, 0x1e
cmp edx, 3
je 0x672ddd
lea eax, [esp+0x70]
mov dword[esp+0x10], 1
mov dword[esp+0xc], 0x18
mov dword[esp+4], edi
mov dword[esp+8], eax
mov eax, dword[esp+0x2c]
mov dword[esp], eax
call dword[0x83c128]
sub esp, 0x14
cmp dword[esp+0x68], 0xc0000002
je 0x672725
mov edx, eax
shr edx, 0x1e
cmp edx, 3
je 0x672ddd
mov eax, dword[esp+0x78]
mov dword[ebp-0x7c], 0
mov dword[ebp-0x80], eax
mov ecx, dword[esp+0xa8]
mov dword[ebp-0x78], 0
mov dword[ebp-0x74], 0
test ch, 4
jne 0x672738
test cl, 0x10
je 0x6728a8
mov dword[ebp-0x78], 0x4000
mov dword[ebp-0x74], 0
mov eax, 0x4000
mov dword[ebp-0x48], 0
mov dword[ebp-0x44], 0
xor edx, edx
and ecx, 1
je 0x6726d0
or eax, 0x124
mov dword[ebp-0x74], edx
mov dword[ebp-0x78], eax
mov esi, dword[esp+0x90]
mov edi, dword[esp+0x94]
mov ebx, 0x989680
mov dword[esp+8], 0x989680
mov dword[esp+0xc], 0
add esi, 0x2ac18000
adc edi, 0xfe624e21
mov dword[esp], esi
mov dword[esp+4], edi
call fcn.006ad2e0
mov dword[ebp-0x20], eax
mov edi, dword[esp+0xa4]
imul ebx
sub esi, eax
imul esi, esi, 0x64
mov dword[ebp-0x1c], esi
mov esi, dword[esp+0xa0]
mov dword[esp+8], 0x989680
mov dword[esp+0xc], 0
add esi, 0x2ac18000
adc edi, 0xfe624e21
mov dword[esp], esi
mov dword[esp+4], edi
call fcn.006ad2e0
mov dword[ebp-0x10], eax
mov edi, dword[esp+0x9c]
imul ebx
sub esi, eax
imul esi, esi, 0x64
mov dword[ebp-0xc], esi
mov esi, dword[esp+0x98]
mov dword[esp+8], 0x989680
mov dword[esp+0xc], 0
add esi, 0x2ac18000
adc edi, 0xfe624e21
mov dword[esp], esi
mov dword[esp+4], edi
call fcn.006ad2e0
mov dword[ebp-0x18], eax
mov edi, dword[esp+0x8c]
imul ebx
sub esi, eax
imul esi, esi, 0x64
mov dword[ebp-0x14], esi
mov esi, dword[esp+0x88]
mov dword[esp+8], 0x989680
mov dword[esp+0xc], 0
add esi, 0x2ac18000
adc edi, 0xfe624e21
mov dword[esp], esi
mov dword[esp+4], edi
call fcn.006ad2e0
mov dword[ebp-8], eax
imul ebx
mov edx, dword[esp+0xcc]
sub esi, eax
mov eax, dword[esp+0xc8]
mov dword[ebp-0x4c], edx
mov edx, dword[esp+0xb4]
imul esi, esi, 0x64
mov dword[ebp-0x50], eax
mov eax, dword[esp+0xb0]
mov dword[ebp-4], esi
shrd eax, edx, 9
sar edx, 9
mov dword[ebp-0x38], eax
mov eax, dword[esp+0xc0]
mov dword[ebp-0x34], edx
mov dword[ebp-0x70], eax
lea eax, [ebp-0x80]
mov dword[ebp-0x6c], 0
mov dword[ebp-0x40], 0x800
mov dword[ebp-0x3c], 0
mov dword[ebp-0x8c], eax
mov eax, dword[esp+0x2c]
mov dword[ebp-0x30], 0
mov dword[ebp-0x2c], 0
mov dword[ebp-0x60], 0
mov dword[ebp-0x5c], 0
mov dword[ebp-0x68], 0
mov dword[ebp-0x64], 0
mov dword[ebp-0x58], 0
mov dword[ebp-0x54], 0
mov dword[ebp-0x28], 0
mov dword[ebp-0x24], 0
mov dword[ebp-0x90], 0
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_CloseHandle]
sub esp, 4
jmp 0x67149e
mov dword[esp], ebx
call fcn.00670420
jmp 0x67149e
mov ebx, dword[ebp+0x28]
mov ecx, dword[ebp+0x24]
mov esi, dword[ebp+0x1c]
test bl, 2
mov dword[esp+0x2c], ecx
jne 0x672796
mov eax, dword[0x83c0f0]
test eax, eax
je 0x672620
mov edi, dword[sym.imp.KERNEL32.dll_GetLastError]
jmp 0x6725a9
call edi
cmp eax, 0x57
jne 0x6727f5
and ebx, 2
je 0x67280d
mov ebx, dword[ebp+0x28]
mov dword[0x748d04], 0
mov esi, dword[ebp+0x1c]
mov ecx, dword[ebp+0x24]
test bl, 2
jne 0x672792
mov eax, dword[0x83c0f0]
test eax, eax
je 0x672620
and ebx, 1
mov edx, 1
jne 0x6725bb
mov ebx, dword[0x748d04]
mov edx, ebx
mov dword[esp+8], edx
mov dword[esp+4], esi
mov dword[esp], ecx
call eax
sub esp, 0xc
test al, al
je 0x672570
jmp case.0x6713ef.26
mov dword[esp+8], 0x790
mov dword[esp+4], str.src_win_fs.c
mov dword[esp], str.__bad_uv_fs_type_
call fcn.006b2490
jmp 0x67149e
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov dword[ebp+0x18], eax
mov dword[esp], eax
call fcn.0066e3a0
mov dword[ebp-0x90], eax
mov dword[esp], ebx
call dword[sym.imp.KERNEL32.dll_CloseHandle]
sub esp, 4
jmp 0x67149e
mov dword[ebp-0x90], 0xfffff02a
mov dword[ebp+0x18], 0x32
jmp 0x67149e
mov ebp, dword[esp+0x110]
mov dword[esp], esi
call fcn.0066b4a0
mov dword[ebp-0x90], 0xffffffff
jmp 0x671772
fsubrp st(1)
fldcw word[esp+0x5c]
fistp qword[esp+0x50]
fldcw word[esp+0x5e]
mov edx, dword[esp+0x54]
mov eax, dword[esp+0x50]
lea ecx, [edx-0x80000000]
mov edx, ecx
jmp 0x67199b
fnstcw word[esp+0x5e]
movzx eax, word[esp+0x5e]
fsubrp st(1)
mov ah, 0xc
mov word[esp+0x5c], ax
fldcw word[esp+0x5c]
fistp qword[esp+0x50]
fldcw word[esp+0x5e]
mov edx, dword[esp+0x54]
mov eax, dword[esp+0x50]
lea ecx, [edx-0x80000000]
mov edx, ecx
jmp 0x67195c
or eax, 0x1b6
mov dword[ebp-0x74], edx
mov dword[ebp-0x78], eax
jmp 0x671eb8
or eax, 0x1b6
mov dword[ebp-0x74], edx
mov dword[ebp-0x78], eax
jmp 0x672364
mov dword[ebp+0x18], 6
mov dword[esp], 6
call fcn.0066e3a0
mov dword[ebp-0x90], eax
jmp 0x67149e
xor eax, eax
mov word[edx], ax
jmp 0x671d7a
xor esi, esi
mov word[edx], si
jmp 0x67221a
mov dword[ebp-0x80], 0
mov dword[ebp-0x7c], 0
jmp 0x671e5a
mov dword[ebp-0x80], 0
mov dword[ebp-0x7c], 0
jmp 0x672306
mov eax, dword[esp+0x2c]
lea ecx, [ebp-0x48]
xor edx, edx
call fcn.0066fa10
test eax, eax
mov eax, dword[ebp-0x78]
jne 0x6728e9
or ah, 0xa0
mov edx, dword[ebp-0x74]
mov ecx, dword[esp+0xa8]
mov dword[ebp-0x78], eax
jmp 0x672350
lea ecx, [ebp-0x48]
xor edx, edx
mov eax, ebx
call fcn.0066fa10
test eax, eax
mov eax, dword[ebp-0x78]
jne 0x672902
or ah, 0xa0
mov edx, dword[ebp-0x74]
mov ecx, dword[esp+0xa8]
mov dword[ebp-0x78], eax
jmp 0x671ea4
mov dword[esp+0x2c], ecx
mov dword[esp], esi
call sub.msvcrt.dll_wcslen
mov dword[esp+8], 4
mov dword[esp+4], str.__?_
mov ebx, eax
mov dword[esp], esi
call sub.msvcrt.dll_wcsncmp
test eax, eax
je 0x6729ef
cmp ebx, 2
jle 0x6727df
movzx eax, word[esi]
and eax, 0xffffffdf
sub eax, 0x41
cmp ax, 0x19
ja 0x6727df
cmp word[esi+2], 0x3a
je 0x673221
mov dword[ebp-0x90], 0xfffff019
mov dword[ebp+0x18], 0x32
jmp 0x67149e
mov edx, eax
mov dword[ebp+0x18], eax
mov dword[esp], edx
call fcn.0066e3a0
mov dword[ebp-0x90], eax
jmp 0x67149e
mov edx, 0x57
jmp 0x6727f7
fnstcw word[esp+0x5e]
movzx edx, word[esp+0x5e]
fsubrp st(1)
mov dh, 0xc
mov word[esp+0x5c], dx
fldcw word[esp+0x5c]
fistp qword[esp+0x50]
fldcw word[esp+0x5e]
mov ebx, dword[esp+0x54]
mov ecx, dword[esp+0x50]
lea edx, [ebx-0x80000000]
mov ebx, edx
jmp 0x671840
fsubrp st(1)
fldcw word[esp+0x5c]
fistp qword[esp+0x50]
fldcw word[esp+0x5e]
mov ebx, dword[esp+0x54]
mov ecx, dword[esp+0x50]
lea edx, [ebx-0x80000000]
mov ebx, edx
jmp 0x671880
mov eax, dword[esp+0xb8]
mov edx, dword[esp+0xbc]
mov dword[ebp-0x78], 0x8000
mov dword[ebp-0x74], 0
mov dword[ebp-0x48], eax
mov dword[ebp-0x44], edx
mov eax, 0x8000
xor edx, edx
jmp 0x671ea4
or eax, 0x1b6
mov dword[ebp-0x74], edx
mov dword[ebp-0x78], eax
jmp 0x671b74
mov eax, dword[esp+0xb8]
mov edx, dword[esp+0xbc]
mov dword[ebp-0x78], 0x8000
mov dword[ebp-0x74], 0
mov dword[ebp-0x48], eax
mov dword[ebp-0x44], edx
mov eax, 0x8000
xor edx, edx
jmp 0x672350
mov dword[ebp-0x80], 0
mov dword[ebp-0x7c], 0
jmp 0x671b16
mov edx, dword[ebp-0x74]
mov ecx, dword[esp+0xa8]
mov edi, edx
or edi, eax
jne 0x672350
jmp 0x672324
mov edx, dword[ebp-0x74]
mov ecx, dword[esp+0xa8]
mov edi, edx
or edi, eax
jne 0x671ea4
jmp 0x671e78
lea ecx, [ebp-0x48]
xor edx, edx
mov eax, ebx
call fcn.0066fa10
test eax, eax
mov eax, dword[ebp-0x78]
jne 0x672cb0
or ah, 0xa0
mov edx, dword[ebp-0x74]
mov ecx, dword[esp+0xa8]
mov dword[ebp-0x78], eax
jmp 0x671b60
mov eax, dword[esp+0xa8]
mov edx, eax
and eax, 0xfffffffe
or edx, 1
test byte[ebp+0x20], 0x80
mov dword[esp+0x10], 4
mov dword[esp+0xc], 0x28
mov dword[esp+8], ebx
mov dword[esp+4], edi
mov dword[esp], esi
cmove eax, edx
mov dword[esp+0xa8], eax
call dword[0x83c0fc]
sub esp, 0x14
test eax, eax
js 0x67172e
mov dword[ebp-0xb8], 0
jmp 0x67149e
mov eax, dword[esp+0xb8]
mov edx, dword[esp+0xbc]
mov dword[ebp-0x78], 0x8000
mov dword[ebp-0x74], 0
mov dword[ebp-0x48], eax
mov dword[ebp-0x44], edx
mov eax, 0x8000
xor edx, edx
jmp 0x671b60
mov dword[esp], edi
call fcn.0066b4a0
mov dword[esp], 6
call dword[sym.imp.KERNEL32.dll_SetLastError]
sub esp, 4
jmp 0x671646
lea eax, [ebx*4+0x20]
mov dword[esp], eax
call fcn.0066b490
test eax, eax
mov dword[esp+0x48], eax
je 0x673319
mov eax, dword[esp+0x48]
mov dword[esp+8], 4
mov dword[esp+4], str._??_
lea ebx, [eax+0x10]
mov dword[esp], ebx
call sub.msvcrt.dll_wcsncpy
mov eax, 8
mov dword[esp+0x4c], 4
add eax, esi
movzx edx, word[eax]
mov edi, eax
mov dword[esp+0x38], eax
test dx, dx
je 0x673203
mov eax, dword[esp+0x4c]
mov dword[esp+0x40], 0
mov dword[esp+0x58], esi
mov dword[esp+0x110], ebp
add eax, 1
lea ecx, [esi+eax*2]
mov eax, edi
mov edi, 4
mov dword[esp+0x3c], eax
jmp 0x672ab2
mov word[esi], 0x5c
mov esi, edx
lea edx, [ebx+eax+2]
lea eax, [ebx+eax+6]
add edi, 3
mov dword[esp+0x30], edi
mov edi, ebp
mov dword[esp+0x34], eax
mov eax, dword[esp+0x3c]
mov dword[esp+0x40], 0
movzx eax, word[eax]
mov word[edx], ax
mov dword[esp+0x3c], ecx
add ecx, 2
movzx edx, word[ecx-2]
test dx, dx
je 0x672b09
lea eax, [edi+1]
cmp dx, 0x5c
mov dword[esp+0x30], eax
lea eax, [edi+edi]
lea ebp, [ebx+eax+2]
lea esi, [ebx+eax]
mov dword[esp+0x34], ebp
je 0x672aff
cmp dx, 0x2f
je 0x672aff
lea edx, [edi+2]
cmp dword[esp+0x40], 0
mov ebp, edx
lea edx, [ebx+eax+4]
mov dword[esp+0x44], edx
jne 0x672a74
mov eax, dword[esp+0x44]
mov edx, esi
mov edi, dword[esp+0x30]
mov esi, dword[esp+0x34]
mov dword[esp+0x30], ebp
mov dword[esp+0x34], eax
jmp 0x672a90
mov dword[esp+0x40], 1
jmp 0x672aa2
mov ecx, esi
mov ebp, dword[esp+0x110]
mov esi, dword[esp+0x58]
mov edx, 0x5c
xor eax, eax
mov word[ecx], dx
mov ecx, dword[esp+0x48]
xor edx, edx
mov word[ecx+8], ax
movzx eax, word[esp+0x30]
add eax, eax
mov word[ecx+0xa], ax
lea eax, [edi+2]
mov dword[esp+0x44], eax
mov eax, dword[esp+0x34]
mov word[eax], dx
mov eax, dword[esp+0x38]
movzx ecx, word[eax]
test cx, cx
je 0x67327e
mov eax, dword[esp+0x4c]
mov dword[esp+0x3c], 0
mov dword[esp+0x110], ebp
add eax, 1
lea edx, [esi+eax*2]
mov eax, dword[esp+0x44]
jmp 0x672bb3
lea ebp, [ebx+edi]
mov esi, 0x5c
lea edi, [ebx+edi+4]
mov word[ebp], si
lea esi, [eax+3]
mov eax, dword[esp+0x40]
mov dword[esp+0x34], edi
mov dword[esp+0x30], esi
mov edi, dword[esp+0x38]
mov dword[esp+0x3c], 0
movzx edi, word[edi]
mov word[ecx], di
mov dword[esp+0x38], edx
add edx, 2
movzx ecx, word[edx-2]
test cx, cx
je 0x672c05
lea edi, [eax+eax]
lea esi, [eax+1]
cmp cx, 0x5c
lea ebp, [ebx+edi]
mov dword[esp+0x30], esi
mov dword[esp+0x34], ebp
je 0x672bfb
cmp cx, 0x2f
je 0x672bfb
lea ecx, [eax+2]
mov ebp, ecx
lea ecx, [ebx+edi+2]
mov dword[esp+0x40], ebp
mov dword[esp+0x30], ebp
mov ebp, dword[esp+0x3c]
test ebp, ebp
jne 0x672b72
mov eax, ecx
mov ecx, dword[esp+0x34]
mov dword[esp+0x34], eax
mov eax, esi
mov esi, dword[esp+0x30]
jmp 0x672b91
mov dword[esp+0x3c], 1
jmp 0x672ba3
sub eax, dword[esp+0x44]
mov ebp, dword[esp+0x110]
cmp eax, 2
jne 0x672c37
mov edi, dword[esp+0x30]
mov eax, dword[esp+0x34]
add edi, edi
mov word[eax], 0x5c
lea eax, [ebx+edi]
mov dword[esp+0x34], eax
lea eax, [esi+1]
mov dword[esp+0x30], eax
mov eax, 3
mov edi, dword[esp+0x48]
movzx edx, word[esp+0x44]
add eax, eax
xor ecx, ecx
mov word[edi+0xe], ax
mov eax, dword[esp+0x34]
add edx, edx
mov word[edi+0xc], dx
xor edx, edx
mov word[eax], dx
mov eax, dword[esp+0x30]
mov dword[edi], 0xa0000003
mov word[edi+6], cx
lea ebx, [eax+eax+0x10]
lea eax, [ebx-8]
mov word[edi+4], ax
mov eax, dword[esp+0x2c]
mov dword[esp+4], 0
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_CreateDirectoryW]
sub esp, 8
test eax, eax
jne 0x672cfb
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov dword[ebp+0x18], eax
mov dword[esp], eax
call fcn.0066e3a0
mov dword[ebp-0x90], eax
mov dword[esp], edi
call fcn.0066b4a0
jmp 0x67149e
mov edx, dword[ebp-0x74]
mov ecx, dword[esp+0xa8]
mov edi, edx
or edi, eax
jne 0x671b60
jmp 0x671b34
mov dword[esp+8], 4
mov dword[esp+4], str.__?_
mov dword[esp], edi
call sub.msvcrt.dll_wcsncmp
test eax, eax
jne 0x6729d2
lea eax, [edi+8]
lea edx, [esi-4]
jmp 0x67145f
mov eax, dword[esp+0x2c]
mov dword[esp+0x18], 0
mov dword[esp+0x14], 0x2200000
mov dword[esp+0x10], 3
mov dword[esp+0xc], 0
mov dword[esp+8], 0
mov dword[esp+4], 0x40000000
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_CreateFileW]
sub esp, 0x1c
cmp eax, 0xffffffff
mov esi, eax
je 0x673299
mov edi, dword[esp+0x48]
lea eax, [esp+0x88]
mov dword[esp+0x1c], 0
mov dword[esp+0x14], 0
mov dword[esp+0x10], 0
mov dword[esp+0x18], eax
mov dword[esp+0xc], ebx
mov dword[esp+8], edi
mov dword[esp+4], 0x900a4
mov dword[esp], esi
call dword[sym.imp.KERNEL32.dll_DeviceIoControl]
sub esp, 0x20
test eax, eax
je 0x673135
mov dword[esp], esi
call dword[sym.imp.KERNEL32.dll_CloseHandle]
push esi
mov eax, dword[esp+0x48]
mov dword[esp], eax
call fcn.0066b4a0
mov dword[ebp-0x90], 0
jmp 0x67149e
mov dword[esp], eax
call dword[0x83c120]
sub esp, 4
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_SetLastError]
mov esi, dword[sym.imp.KERNEL32.dll_GetLastError]
sub esp, 4
call esi
call esi
jmp 0x6725fb
mov dword[esp], eax
call dword[0x83c120]
sub esp, 4
mov dword[esp], eax
mov eax, dword[sym.imp.KERNEL32.dll_SetLastError]
mov dword[esp+0x38], eax
call eax
mov eax, dword[sym.imp.KERNEL32.dll_GetLastError]
sub esp, 4
mov dword[esp+0x30], eax
call eax
cmp eax, 0x5b8
je 0x672e3a
mov eax, dword[esp+0x30]
call eax
mov dword[ebp+0x18], eax
mov dword[esp], eax
call fcn.0066e3a0
mov ebx, dword[sym.imp.KERNEL32.dll_CloseHandle]
mov dword[ebp-0x90], eax
mov eax, dword[esp+0x2c]
mov dword[esp], eax
call ebx
sub esp, 4
jmp 0x67149e
mov dword[esp+0x18], 0
mov dword[esp+0x14], 0x2000000
mov dword[esp+0x10], 3
mov dword[esp+0xc], 0
mov dword[esp+8], 7
mov dword[esp+4], 0x80
mov eax, dword[ebp+0x1c]
mov dword[esp], eax
call esi
sub esp, 0x1c
cmp eax, 0xffffffff
mov dword[esp+0x34], eax
je 0x672e0c
mov eax, dword[esp+0x34]
mov dword[esp+0x10], 0x12
mov dword[esp+0xc], 0x68
mov dword[esp+8], ebx
mov dword[esp+4], edi
mov dword[esp], eax
call dword[0x83c134]
mov edx, eax
sub esp, 0x14
shr edx, 0x1e
cmp edx, 3
je 0x6732e7
lea eax, [esp+0x70]
mov dword[esp+0x10], 1
mov dword[esp+0xc], 0x18
mov dword[esp+4], edi
mov dword[esp+8], eax
mov eax, dword[esp+0x34]
mov dword[esp], eax
call dword[0x83c128]
sub esp, 0x14
cmp dword[esp+0x68], 0xc0000002
je 0x673182
mov edx, eax
shr edx, 0x1e
cmp edx, 3
je 0x6732e7
mov eax, dword[esp+0x78]
mov dword[ebp-0x7c], 0
mov dword[ebp-0x80], eax
mov ecx, dword[esp+0xa8]
mov dword[ebp-0x78], 0
mov dword[ebp-0x74], 0
test ch, 4
jne 0x673195
test cl, 0x10
je 0x6731dc
mov dword[ebp-0x78], 0x4000
mov dword[ebp-0x74], 0
mov dword[ebp-0x48], 0
mov dword[ebp-0x44], 0
mov eax, dword[ebp-0x78]
mov esi, dword[esp+0x90]
mov ebx, 0x989680
mov edi, dword[esp+0x94]
mov edx, eax
or eax, 0x124
or edx, 0x1b6
and ecx, 1
cmove eax, edx
add esi, 0x2ac18000
adc edi, 0xfe624e21
mov dword[ebp-0x78], eax
mov dword[esp], esi
mov dword[esp+4], edi
mov dword[esp+8], 0x989680
mov dword[esp+0xc], 0
call fcn.006ad2e0
mov dword[ebp-0x20], eax
mov edi, dword[esp+0xa4]
imul ebx
sub esi, eax
imul esi, esi, 0x64
mov dword[ebp-0x1c], esi
mov esi, dword[esp+0xa0]
mov dword[esp+8], 0x989680
mov dword[esp+0xc], 0
add esi, 0x2ac18000
adc edi, 0xfe624e21
mov dword[esp], esi
mov dword[esp+4], edi
call fcn.006ad2e0
mov dword[ebp-0x10], eax
mov edi, dword[esp+0x9c]
imul ebx
sub esi, eax
imul esi, esi, 0x64
mov dword[ebp-0xc], esi
mov esi, dword[esp+0x98]
mov dword[esp+8], 0x989680
mov dword[esp+0xc], 0
add esi, 0x2ac18000
adc edi, 0xfe624e21
mov dword[esp], esi
mov dword[esp+4], edi
call fcn.006ad2e0
mov dword[ebp-0x18], eax
mov edi, dword[esp+0x8c]
imul ebx
sub esi, eax
imul esi, esi, 0x64
mov dword[ebp-0x14], esi
mov esi, dword[esp+0x88]
mov dword[esp+8], 0x989680
mov dword[esp+0xc], 0
add esi, 0x2ac18000
adc edi, 0xfe624e21
mov dword[esp], esi
mov dword[esp+4], edi
call fcn.006ad2e0
mov dword[ebp-8], eax
imul ebx
mov edx, dword[esp+0xcc]
sub esi, eax
mov eax, dword[esp+0xc8]
mov dword[ebp-0x4c], edx
mov edx, dword[esp+0xb4]
imul esi, esi, 0x64
mov dword[ebp-0x50], eax
mov eax, dword[esp+0xb0]
mov dword[ebp-4], esi
shrd eax, edx, 9
sar edx, 9
mov dword[ebp-0x38], eax
mov eax, dword[esp+0xc0]
mov dword[ebp-0x34], edx
mov dword[ebp-0x70], eax
lea eax, [ebp-0x80]
mov dword[ebp-0x6c], 0
mov dword[ebp-0x40], 0x800
mov dword[ebp-0x3c], 0
mov dword[ebp-0x30], 0
mov dword[ebp-0x2c], 0
mov dword[ebp-0x60], 0
mov dword[ebp-0x5c], 0
mov dword[ebp-0x68], 0
mov dword[ebp-0x64], 0
mov dword[ebp-0x58], 0
mov dword[ebp-0x54], 0
mov dword[ebp-0x28], 0
mov dword[ebp-0x24], 0
mov dword[ebp-0x8c], eax
mov dword[ebp-0x90], 0
mov eax, dword[esp+0x34]
mov ebx, dword[sym.imp.KERNEL32.dll_CloseHandle]
mov dword[esp], eax
call ebx
sub esp, 4
jmp 0x672e29
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov dword[ebp+0x18], eax
mov dword[esp], eax
call fcn.0066e3a0
mov dword[ebp-0x90], eax
mov dword[esp], edi
call fcn.0066b4a0
mov dword[esp], esi
call dword[sym.imp.KERNEL32.dll_CloseHandle]
sub esp, 4
mov eax, dword[esp+0x2c]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_RemoveDirectoryW]
sub esp, 4
jmp 0x67149e
mov dword[esp], esi
call fcn.0066b4a0
jmp case.0x6713ef.26
mov dword[ebp-0x80], 0
mov dword[ebp-0x7c], 0
jmp 0x672f0a
mov eax, dword[esp+0x34]
lea ecx, [ebp-0x48]
xor edx, edx
call fcn.0066fa10
test eax, eax
je 0x6732c1
mov eax, dword[ebp-0x74]
or eax, dword[ebp-0x78]
mov ecx, dword[esp+0xa8]
jne 0x672f4d
jmp 0x672f28
mov dword[esp], eax
call dword[0x83c120]
push ebx
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_SetLastError]
push esi
jmp 0x6714d1
mov eax, dword[esp+0xb8]
mov edx, dword[esp+0xbc]
mov dword[ebp-0x78], 0x8000
mov dword[ebp-0x74], 0
mov dword[ebp-0x48], eax
mov dword[ebp-0x44], edx
jmp 0x672f4d
lea eax, [ebx+8]
mov dword[esp+0x30], 5
mov edi, 4
mov ecx, eax
lea eax, [ebx+0xa]
mov dword[esp+0x34], eax
jmp 0x672b16
movzx eax, word[esi+4]
cmp ax, 0x5c
je 0x673235
cmp ax, 0x2f
jne 0x6727df
lea eax, [ebx*4+0x20]
mov dword[esp], eax
call fcn.0066b490
test eax, eax
mov dword[esp+0x48], eax
je 0x673319
mov eax, dword[esp+0x48]
mov dword[esp+8], 4
mov dword[esp+4], str._??_
lea ebx, [eax+0x10]
mov dword[esp], ebx
call sub.msvcrt.dll_wcsncpy
xor eax, eax
mov dword[esp+0x4c], 0
jmp 0x672a36
lea ecx, [edi+2]
mov eax, ecx
add eax, ecx
add eax, ebx
mov dword[esp+0x34], eax
lea eax, [edi+3]
mov dword[esp+0x30], eax
xor eax, eax
jmp 0x672c37
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov dword[ebp+0x18], eax
mov dword[esp], eax
call fcn.0066e3a0
mov dword[ebp-0x90], eax
mov eax, dword[esp+0x48]
mov dword[esp], eax
call fcn.0066b4a0
jmp 0x673160
or dword[ebp-0x78], 0xa000
mov ecx, dword[esp+0xa8]
jmp 0x672f4d
mov dword[esp], 0xe
call dword[sym.imp.KERNEL32.dll_SetLastError]
push ecx
jmp 0x671646
mov dword[esp], eax
call dword[0x83c120]
push edx
mov dword[esp], eax
call dword[esp+0x38]
push ecx
mov edi, dword[esp+0x30]
mov eax, edi
call eax
call edi
mov dword[ebp+0x18], eax
mov dword[esp], eax
call fcn.0066e3a0
mov dword[ebp-0x90], eax
jmp 0x67311e
mov dword[esp+4], str.uv__malloc
mov dword[esp], 0xe
call fcn.0066e2e0
lea esi, [esi]

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/c92f0480e2fbc88393d2c65c08a235e0