---
layout: post
title:  "fcn.00656050 @ a5905e3c253c25bbaf727a1a18fe8ed1"
date:   2021-08-30 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00656050
- **Origin (md5):** a5905e3c253c25bbaf727a1a18fe8ed1
- **VirusTotal:** [virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1][virustotal_ref]

# Code Tags
<span class="tag" id="THREAD">THREAD</span>


# Similar Functions

1. [fcn.005c9510][similar_1_ref] (sim.: 0.9683539264211131)
2. [fcn.0054f1a0][similar_2_ref] (sim.: 0.9668542089784486)
3. [fcn.006b9e90][similar_3_ref] (sim.: 0.9656259915552923)
4. [fcn.005c0710][similar_4_ref] (sim.: 0.9654059479991252)
5. [fcn.005ba960][similar_5_ref] (sim.: 0.9638060829077554)


# Disassembled Code

{% highlight nasm %}
push r15
push r14
push r13
push r12
push rbp
push rdi
push rsi
push rbx
sub rsp,0x388
movaps xmmword[rsp+0x370],xmm6
movabs rax,0x4f4f525355474f42
lea rsi,[rsp+0x290]
mov rdi,rdx
mov rbx,rcx
mov qword[rsp+0x2a0],rax
lea rax,[rsp+0x2d0]
mov qword[rsp+0x2d8],0
lea rdx,[rsi+0x10]
lea r8,[rsi+0x19]
mov qword[rsp+0x2e0],0
mov r15,rax
mov qword[rsp+0x20],rax
lea rax,[rsp+0x318]
lea rcx,[r15+0x38]
mov qword[rsp+0x290],rdx
mov byte[rdx+8],0x54
mov qword[rsp+0x2e8],0
mov qword[rsp+0x298],9
mov byte[rsp+0x2a9],0
mov qword[rsp+0x2f0],0
mov qword[rsp+0x2f8],0
mov qword[rsp+0x300],0
mov qword[rsp+0x308],rax
call fcn.006528f0
mov rax,r15
lea rcx,[r15+0x58]
add rax,0x68
mov qword[rsp+0x328],rax
mov rax,qword[0x00b3d1f0]
mov rdx,qword[rax]
mov rax,qword[0x00b3d1f0]
mov r8,rdx
add r8,qword[rax+8]
call fcn.006528f0
mov rcx,qword[rsp+0x290]
lea rax,[rsi+0x10]
mov qword[rsp+0x348],0
cmp rcx,rax
je 0x656176
call fcn.00a5af30
mov rax,qword[rsp+0x20]
lea rbp,[rsp+0xd0]
mov r9d,1
mov r8d,0x80000000
mov rdx,rdi
mov byte[rsp+0x360],0
mov rcx,rbp
add rax,8
mov qword[rsp+0x350],rax
mov rax,qword[rsp+0x2d8]
mov qword[rsp+0x358],rax
call fcn.005fe7f0
lea r12,[rsp+0x170]
mov rdx,rbp
mov rcx,r12
call fcn.005ff760
mov rcx,qword[rsp+0x20]
mov rdx,r12
call fcn.0066b4f0
mov rcx,qword[rsp+0x170]
add r12,0x10
cmp rcx,r12
je 0x6561f4
call fcn.00a5af30
mov rax,qword[0x00b3dd20]
mov rcx,rbp
lea rdi,[rsi+0x10]
lea rdx,[rax+0x10]
add rax,0x88
mov qword[rsp+0xd8],rax
mov qword[rsp+0xd0],rdx
call fcn.005fe1e0
mov rax,qword[rsp+0x350]
mov rcx,qword[rsp+0x20]
mov rdx,rsi
mov byte[rsp+0x360],0
mov rax,qword[rax]
mov qword[rsp+0x358],rax
mov rax,qword[rax]
mov qword[rsp+0x350],rax
mov rax,qword[rax]
mov qword[rsp+0x290],rdi
mov qword[rsp+0x298],8
mov byte[rsp+0x2a8],0
mov qword[rsp+0x358],rax
movabs rax,0x73676e6974746553
mov qword[rsp+0x2a0],rax
call fcn.0066b440
mov rcx,qword[rsp+0x290]
mov ebp,eax
cmp rcx,rdi
je 0x6562a1
call fcn.00a5af30
test bpl,bpl
je 0x6567c5
mov rax,qword[rsp+0x358]
lea rdi,[0x00c1ae20]
lea r12,[rbx+0x1938]
lea rbp,[rbx+0x58]
lea r14,[0x00c1b880]
mov rax,qword[rax]
mov qword[rsp+0x350],rax
mov rax,qword[rax]
mov byte[rsp+0x360],0
mov qword[rsp+0x358],rax
mov rcx,qword[rsp+0x20]
mov rdx,rdi
call fcn.0066b440
test al,al
jne 0x65679f
mov rax,qword[rsp+0x350]
add rdi,0x20
add r12,1
add rbp,0x20
cmp r14,rdi
mov byte[rsp+0x360],0
mov rax,qword[rax]
mov qword[rsp+0x358],rax
jne 0x6562e9
lea rbp,[0x00c1b8a0]
mov edi,0x54
mov r12d,1
mov rcx,qword[rsp+0x20]
mov rdx,rbp
call fcn.0066b440
test al,al
jne 0x657c03
mov rax,qword[rsp+0x350]
add rdi,1
add rbp,0x20
cmp rdi,0xae
mov byte[rsp+0x360],0
mov rax,qword[rax]
mov qword[rsp+0x358],rax
jne 0x65633c
lea rbp,[0x00c1c400]
lea rdi,[rbx+0xc20]
lea r12,[0x00c1d160]
mov rcx,qword[rsp+0x20]
mov rdx,rbp
call fcn.0066b440
test al,al
je 0x6563c3
mov rax,qword[rsp+0x358]
mov rax,qword[rax]
mov rcx,qword[rax+0x50]
call sub.msvcrt.dll_atoi
test eax,eax
mov byte[rdi+0xdc7],1
setne byte[rdi]
mov rax,qword[rsp+0x350]
add rbp,0x20
add rdi,1
cmp rbp,r12
mov byte[rsp+0x360],0
mov rax,qword[rax]
mov qword[rsp+0x358],rax
jne 0x656392
lea rbp,[0x00c1d220]
movsd xmm6,qword[0x00ab4260]
mov edi,0x120
mov rcx,qword[rsp+0x20]
mov rdx,rbp
call fcn.0066b440
test al,al
je 0x656449
mov rax,qword[rsp+0x358]
mov rax,qword[rax]
mov rcx,qword[rax+0x50]
call sub.msvcrt.dll_atoi
pxor xmm0,xmm0
pxor xmm1,xmm1
cvtsi2sd xmm0,eax
divsd xmm0,xmm6
cvtsd2ss xmm1,xmm0
movss dword[rbx+rdi*4+0x830],xmm1
mov byte[rbx+rdi+0x1938],1
mov rax,qword[rsp+0x350]
add rdi,1
add rbp,0x20
cmp rdi,0x126
mov byte[rsp+0x360],0
mov rax,qword[rax]
mov qword[rsp+0x358],rax
jne 0x6563ff
mov r12,qword[sym.imp.msvcrt.dll__atoi64]
lea rbp,[0x00c1d180]
mov edi,0x11b
mov rcx,qword[rsp+0x20]
mov rdx,rbp
call fcn.0066b440
test al,al
jne 0x6584ce
mov rdx,qword[rsp+0x350]
add rdi,1
add rbp,0x20
cmp rdi,0x11f
mov byte[rsp+0x360],0
mov rax,qword[rdx]
mov qword[rsp+0x358],rax
jne 0x656488
mov rax,qword[rsp+0x20]
lea rcx,[rax+8]
call fcn.009412b0
mov rcx,rsi
cmp rdi,1
jne 0x65679a
call fcn.00a5b170
mov rdx,qword[0x00a7d820]
lea rsi,[rsp+0x130]
mov r8d,0x18
cmp byte[rdx+0x196f],0
lea rcx,[rdx+0x738]
lea rax,[rdx+0x13a8]
mov rdx,rsi
cmovne rax,rcx
mov rcx,qword[rax]
call fcn.005f3710
cmp byte[rsp+0x130],0
jne 0x65676d
cmp byte[rsp+0x131],0
jne 0x657b0e
cmp byte[rsp+0x132],0
jne 0x657b09
cmp byte[rsp+0x133],0
jne 0x657b04
cmp byte[rsp+0x134],0
jne 0x65676d
cmp byte[rsp+0x135],0
jne 0x657afe
cmp byte[rsp+0x136],0
jne 0x657af8
cmp byte[rsp+0x137],0
jne 0x657af2
cmp byte[rsp+0x138],0
jne 0x65676d
cmp byte[rsp+0x139],0
jne 0x657aec
cmp byte[rsp+0x13a],0
jne 0x657ae6
cmp byte[rsp+0x13b],0
jne 0x657ae0
cmp byte[rsp+0x13c],0
jne 0x65676d
add rsi,0x18
cmp rax,rsi
je 0x657b93
call fcn.00a5b390
nop
movaps xmm6,xmmword[rsp+0x370]
add rsp,0x388
pop rbx
pop rsi
pop rdi
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
call fcn.008da260
mov rax,qword[rsp+0x358]
mov rcx,rbp
mov r13,qword[rax]
lea rdx,[r13+0x50]
call fcn.00a2df10
cmp qword[r13+0x58],0
setne byte[r12]
jmp 0x6562fe
mov r10,qword[rsp+0x350]
mov rax,qword[r10]
lea rdi,[rsp+0x190]
lea r8,[0x00ab2d57]
lea rdx,str.SearchTypes
mov byte[rsp+0x360],0
mov rcx,rdi
mov qword[rsp+0x358],rax
lea rax,[rdi+0x10]
mov qword[rsp+0x190],rax
call fcn.006528f0
mov rcx,qword[rsp+0x20]
mov rdx,rdi
add rdi,0x10
call fcn.0066b440
mov rcx,qword[rsp+0x190]
mov ebp,eax
cmp rcx,rdi
je 0x65682f
call fcn.00a5af30
test bpl,bpl
jne 0x657e4a
mov rdx,qword[0x00a7d820]
cmp byte[rdx+0x196f],0
lea rcx,[rdx+0x13a8]
lea rax,[rdx+0x738]
cmove rax,rcx
cmp qword[rax+8],0x27
je 0x657ccb
mov rcx,rsi
call fcn.006b7740
lea r12,[rsp+0x250]
mov edx,0x18
mov rcx,rsi
mov qword[rsp+0x258],0
mov byte[rsp+0x260],0
lea rax,[r12+0x10]
mov r8,r12
mov qword[rsp+0x250],rax
call fcn.005f3590
lea rbp,[rsp+0x1b0]
lea rdx,[rbp+0x10]
mov rcx,rbp
mov qword[rsp+0x1b0],rdx
mov rdx,qword[rax]
mov r8,rdx
add r8,qword[rax+8]
call fcn.006528f0
mov rcx,qword[rsp+0x250]
add r12,0x10
cmp rcx,r12
je 0x6568e0
call fcn.00a5af30
lea rcx,[rbx+0x738]
mov rdx,rbp
call fcn.00a2df10
cmp qword[rsp+0x1b8],0
mov rcx,qword[rsp+0x1b0]
setne byte[rbx+0x196f]
add rbp,0x10
cmp rcx,rbp
je 0x656915
call fcn.00a5af30
mov rax,qword[0x00a7d820]
cmp byte[rax+0x196b],0
lea rdx,[rax+0x6b8]
lea rdi,[rax+0x1328]
cmovne rdi,rdx
call qword[sym.imp.msvcrt.dll_localeconv]
lea rdx,[0x00ab2da7]
mov r9d,2
mov r8,0xffffffffffffffff
mov rcx,rdi
mov r13,rax
call fcn.00978680
cmp rax,0xffffffffffffffff
mov r12,rax
mov rcx,qword[rdi]
je 0x65779e
mov rax,qword[r13]
movzx eax,byte[rax]
cmp byte[rcx+r12],al
je 0x65779e
lea rbp,[rsp+0x270]
lea rax,[rbp+0x10]
mov rcx,rbp
mov qword[rsp+0x270],rax
mov rdx,qword[rdi]
mov r8,rdx
add r8,qword[rdi+8]
call fcn.006528f0
mov rax,qword[r13]
add rbp,0x10
movzx edx,byte[rax]
mov rax,qword[rsp+0x270]
mov byte[rax+r12],dl
mov rcx,qword[rsp+0x270]
call sub.msvcrt.dll_atof
mov rcx,qword[rsp+0x270]
movapd xmm6,xmm0
cmp rcx,rbp
je 0x6569db
call fcn.00a5af30
movsd xmm0,qword[0x00ab4268]
mov rax,qword[0x00a7d820]
ucomisd xmm0,xmm6
jbe 0x656a0f
cmp byte[rax+0x19e5],0
je 0x6577ac
mov edx,dword[rax+0xc1c]
cmp edx,2
je 0x656a0f
mov byte[rbx+0x19e5],0
movsd xmm0,qword[0x00ab4270]
ucomisd xmm0,xmm6
jb 0x656a71
mov byte[rbx+0x1960],0
mov byte[rbx+0x1962],0
mov byte[rbx+0x1963],0
mov byte[rbx+0x1964],0
mov byte[rbx+0x1978],0
mov byte[rbx+0x1977],0
mov byte[rbx+0x1970],0
mov byte[rbx+0x1972],0
mov byte[rbx+0x1971],0
mov byte[rbx+0x1973],0
mov byte[rbx+0x1974],0
mov byte[rbx+0x1976],0
movsd xmm0,qword[0x00ab4278]
ucomisd xmm0,xmm6
jb 0x656aa5
cmp byte[rax+0x198c],0
je 0x657c89
mov edx,dword[rax+0xab8]
cmp edx,3
je 0x656aa5
mov byte[rbx+0xc27],0
mov byte[rbx+0x19ee],1
movsd xmm0,qword[0x00ab4280]
ucomisd xmm0,xmm6
jb 0x656ae9
cmp byte[rax+0x198c],0
je 0x657cc0
mov edx,dword[rax+0xab8]
cmp edx,1
je 0x657caa
cmp edx,3
jne 0x657c94
mov dword[rbx+0xab8],2
mov byte[rbx+0x198c],1
movsd xmm0,qword[0x00ab4288]
ucomisd xmm0,xmm6
jb 0x656b05
mov byte[rbx+0x195b],0
mov byte[rbx+0x195c],0
movsd xmm0,qword[0x00ab4290]
ucomisd xmm0,xmm6
jb 0x656b37
cmp byte[rax+0x196c],0
lea rcx,[rax+0x6d8]
lea rdx,[rax+0x1348]
cmovne rdx,rcx
cmp qword[rdx+8],0
je 0x657721
movsd xmm0,qword[0x00ab4298]
ucomisd xmm0,xmm6
jbe 0x656b61
mov byte[rbx+0x1957],0
mov byte[rbx+0x1958],0
mov byte[rbx+0x19c8],0
mov byte[rbx+0x197d],0
movsd xmm0,qword[0x00ab42a0]
ucomisd xmm0,xmm6
jb 0x656b76
mov byte[rbx+0x19d2],0
movsd xmm0,qword[0x00ab42a8]
ucomisd xmm0,xmm6
jbe 0x656b92
mov byte[rbx+0x1947],0
mov byte[rbx+0x1948],0
movsd xmm0,qword[0x00ab42b0]
ucomisd xmm0,xmm6
jb 0x656bae
mov byte[rbx+0x1953],0
mov byte[rbx+0x1954],0
cmp byte[rax+0x19dd],0
je 0x657716
mov edx,dword[rax+0xbfc]
cmp edx,0x1ff
jg 0x656bda
mov dword[rbx+0xbfc],0x200
mov byte[rbx+0x19dd],1
cmp byte[rax+0x19b5],0
je 0x65770b
mov edx,dword[rax+0xb5c]
test edx,edx
jg 0x656c02
mov dword[rbx+0xb5c],1
mov byte[rbx+0x19b5],1
cmp byte[rax+0x19b6],0
je 0x657700
mov edx,dword[rax+0xb60]
test edx,edx
jg 0x656c2a
mov dword[rbx+0xb60],1
mov byte[rbx+0x19b6],1
cmp byte[rax+0x19cd],0
je 0x6576f5
mov edx,dword[rax+0xbbc]
cmp edx,5
jle 0x6576d7
mov dword[rbx+0xbbc],5
mov byte[rbx+0x19cd],1
cmp byte[rax+0x19e3],0
je 0x656cdd
mov edx,dword[rax+0xc14]
cmp edx,0x77
jg 0x656c7c
mov dword[rbx+0xc14],0x78
mov byte[rbx+0x19e3],1
cmp byte[rax+0x197b],0
lea rdx,[rax+0x8b8]
lea rcx,[rax+0x1528]
lea rbp,[rbx+0x44]
cmovne rcx,rdx
call fcn.005ff410
call qword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
mov r12d,eax
xor eax,eax
lock cmpxchg dword[rbp],eax
cmp r12d,eax
je 0x656e1e
mov r13d,dword[rbx+0x48]
lea rdi,[rbx+0x48]
mov edx,r13d
mov r8d,r13d
mov rcx,rdi
or edx,0x80000000
call fcn.008eebc0
cmp r13d,eax
je 0x656ce5
mov r13d,eax
jmp 0x656cbf
mov edx,dword[rax+0x1884]
jmp 0x656c66
test r13d,r13d
js 0x656df5
xchg dword[rbp],r12d
mov dword[rbx+0x40],1
lea rdx,[rbx+0x10]
lea rcx,[rbx+0x28]
lea r13,[0x0093b560]
call fcn.00a222b0
mov r12,qword[rbx+0x30]
mov rdi,qword[rbx+0x28]
cmp rdi,r12
je 0x656d3b
mov rcx,qword[rdi]
mov rax,qword[rcx]
mov rax,qword[rax+0x10]
cmp rax,r13
je 0x656d32
mov r8,qword[rsp+0x20]
xor edx,edx
call rax
add rdi,8
cmp r12,rdi
jne 0x656d1a
mov eax,dword[rbx+0x40]
sub eax,1
test eax,eax
mov dword[rbx+0x40],eax
je 0x657888
mov rax,qword[rsp+0x20]
mov rdx,qword[rsp+0x350]
add rax,8
cmp rdx,rax
je 0x6577f3
mov r10,qword[rdx+0x70]
mov r8,qword[r10+8]
mov rax,qword[r10]
mov r9,r8
sub r9,rax
mov rcx,r9
sar r9,5
sar rcx,3
test r9,r9
jle 0x6577c9
cmp rdx,qword[rax]
je 0x6577b7
cmp rdx,qword[rax+8]
lea rcx,[rax+8]
je 0x656e2b
cmp rdx,qword[rax+0x10]
lea rcx,[rax+0x10]
je 0x656e2b
cmp rdx,qword[rax+0x18]
lea rcx,[rax+0x18]
je 0x656e2b
shl r9,5
mov rcx,rax
add r9,rax
add rax,0x20
cmp r9,rax
je 0x6577bf
cmp rdx,qword[rax]
je 0x6577b7
cmp rdx,qword[rax+8]
je 0x657979
cmp rdx,qword[rax+0x10]
je 0x6576ce
cmp rdx,qword[rax+0x18]
je 0x656e27
mov rcx,rax
jmp 0x656dc0
mov edx,dword[rbx+0x48]
lea eax,[rdx+1]
mov r15d,edx
or r15d,0x80000000
test edx,edx
cmovs r15d,eax
mov eax,edx
lock cmpxchg dword[rdi],r15d
cmp eax,edx
je 0x65763b
mov edx,eax
jmp 0x656df8
add dword[rbx+0x40],1
jmp 0x656cf9
add rcx,0x38
mov r8,rcx
mov rax,qword[rsp+0x2e0]
mov rdx,qword[rsp+0x2d8]
mov qword[rsp+0x358],r8
mov qword[rsp+0x350],r10
mov byte[rsp+0x360],1
cmp rdx,rax
mov qword[rsp+0x98],rax
mov qword[rsp+0x68],rdx
je 0x657594
mov rax,qword[rsp+0x68]
mov rax,qword[rax]
test rax,rax
mov qword[rsp+0x40],rax
je 0x65757b
mov rdx,qword[rax+8]
mov rax,qword[rax]
cmp rax,rdx
mov qword[rsp+0xa0],rdx
mov qword[rsp+0x70],rax
je 0x6574d8
mov rax,qword[rax]
test rax,rax
mov qword[rsp+0x48],rax
je 0x6574bf
mov rdx,qword[rax+8]
mov rax,qword[rax]
cmp rax,rdx
mov qword[rsp+0xa8],rdx
mov qword[rsp+0x78],rax
je 0x65741c
mov rax,qword[rax]
test rax,rax
mov qword[rsp+0x50],rax
je 0x657403
mov rdx,qword[rax+8]
mov rax,qword[rax]
cmp rax,rdx
mov qword[rsp+0xb0],rdx
mov qword[rsp+0x80],rax
je 0x657360
mov rax,qword[rax]
test rax,rax
mov qword[rsp+0x58],rax
je 0x657341
mov rdx,qword[rax+8]
mov rax,qword[rax]
cmp rax,rdx
mov qword[rsp+0xb8],rdx
mov qword[rsp+0x88],rax
je 0x65729e
mov rax,qword[rax]
test rax,rax
mov qword[rsp+0x60],rax
je 0x65727f
mov rdx,qword[rax+8]
mov rax,qword[rax]
cmp rax,rdx
mov qword[rsp+0x90],rdx
mov qword[rsp+0x30],rax
je 0x6571dc
mov rax,qword[rax]
test rax,rax
mov qword[rsp+0x38],rax
je 0x6571c3
mov rdx,qword[rax+8]
mov r13,qword[rax]
cmp r13,rdx
mov qword[rsp+0x28],rdx
je 0x657121
add qword[rsp+0x30],8
mov rax,qword[rsp+0x30]
cmp qword[rsp+0x90],rax
jne 0x656f5d
mov rax,qword[rsp+0x60]
mov rcx,qword[rax+0x50]
add rax,0x60
cmp rcx,rax
je 0x6571f3
call fcn.00a5af30
mov rax,qword[rsp+0x60]
mov rcx,qword[rax+0x30]
add rax,0x40
cmp rcx,rax
je 0x65720a
add qword[rsp+0x88],8
mov rax,qword[rsp+0x88]
cmp qword[rsp+0xb8],rax
jne 0x656f2f
mov rax,qword[rsp+0x58]
mov rcx,qword[rax+0x50]
add rax,0x60
cmp rcx,rax
je 0x6572b5
call fcn.00a5af30
mov rax,qword[rsp+0x58]
mov rcx,qword[rax+0x30]
add rax,0x40
cmp rcx,rax
je 0x6572cc
call fcn.00a5af30
mov rax,qword[rsp+0x58]
mov rsi,qword[rax+0x20]
mov rbx,qword[rax+0x18]
cmp rsi,rbx
je 0x657313
mov rcx,qword[rbx+0x20]
lea rax,[rbx+0x30]
cmp rcx,rax
je 0x6572f0
test rbx,rbx
je 0x657320
add qword[rsp+0x80],8
mov rax,qword[rsp+0x80]
cmp qword[rsp+0xb0],rax
jne 0x656efe
mov rax,qword[rsp+0x50]
mov rcx,qword[rax+0x50]
add rax,0x60
cmp rcx,rax
je 0x657377
call fcn.00a5af30
mov rax,qword[rsp+0x50]
mov rcx,qword[rax+0x30]
add rax,0x40
cmp rcx,rax
je 0x65738e
call fcn.00a5af30
mov rax,qword[rsp+0x50]
mov rsi,qword[rax+0x20]
mov rbx,qword[rax+0x18]
cmp rsi,rbx
je 0x6573d5
mov rcx,qword[rbx+0x20]
lea rax,[rbx+0x30]
cmp rcx,rax
je 0x6573b2
call fcn.00a5af30
mov rcx,qword[rbx]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x6573c3
call fcn.00a5af30
add rbx,0x40
cmp rsi,rbx
jne 0x6573a0
test rbx,rbx
je 0x6573e2
mov rcx,rbx
call fcn.00a5af30
mov rax,qword[rsp+0x50]
mov rcx,qword[rax]
test rcx,rcx
je 0x6573f4
call fcn.00a5af30
mov rcx,qword[rsp+0x50]
mov edx,0x78
call fcn.00a5af40
add qword[rsp+0x78],8
mov rax,qword[rsp+0x78]
cmp qword[rsp+0xa8],rax
jne 0x656ecd
mov rax,qword[rsp+0x48]
mov rcx,qword[rax+0x50]
add rax,0x60
cmp rcx,rax
je 0x657433
call fcn.00a5af30
mov rax,qword[rsp+0x48]
mov rcx,qword[rax+0x30]
add rax,0x40
cmp rcx,rax
je 0x65744a
call fcn.00a5af30
mov rax,qword[rsp+0x48]
mov rsi,qword[rax+0x20]
mov rbx,qword[rax+0x18]
cmp rsi,rbx
je 0x657491
mov rcx,qword[rbx+0x20]
lea rax,[rbx+0x30]
cmp rcx,rax
je 0x65746e
call fcn.00a5af30
mov rcx,qword[rbx]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x65747f
call fcn.00a5af30
add rbx,0x40
cmp rsi,rbx
jne 0x65745c
mov rax,qword[rsp+0x48]
mov rbx,qword[rax+0x18]
test rbx,rbx
je 0x65749e
mov rcx,rbx
call fcn.00a5af30
mov rax,qword[rsp+0x48]
mov rcx,qword[rax]
test rcx,rcx
je 0x6574b0
call fcn.00a5af30
mov rcx,qword[rsp+0x48]
mov edx,0x78
call fcn.00a5af40
add qword[rsp+0x70],8
mov rax,qword[rsp+0x70]
cmp qword[rsp+0xa0],rax
jne 0x656e9f
mov rax,qword[rsp+0x40]
mov rcx,qword[rax+0x50]
add rax,0x60
cmp rcx,rax
je 0x6574ef
call fcn.00a5af30
mov rax,qword[rsp+0x40]
mov rcx,qword[rax+0x30]
add rax,0x40
cmp rcx,rax
je 0x657506
call fcn.00a5af30
mov rax,qword[rsp+0x40]
mov rsi,qword[rax+0x20]
mov rbx,qword[rax+0x18]
cmp rsi,rbx
je 0x65754d
mov rcx,qword[rbx+0x20]
lea rax,[rbx+0x30]
cmp rcx,rax
je 0x65752a
call fcn.00a5af30
mov rcx,qword[rbx]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x65753b
call fcn.00a5af30
add rbx,0x40
cmp rsi,rbx
jne 0x657518
mov rax,qword[rsp+0x40]
mov rbx,qword[rax+0x18]
test rbx,rbx
je 0x65755a
mov rcx,rbx
call fcn.00a5af30
mov rax,qword[rsp+0x40]
mov rcx,qword[rax]
test rcx,rcx
je 0x65756c
call fcn.00a5af30
mov rcx,qword[rsp+0x40]
mov edx,0x78
call fcn.00a5af40
add qword[rsp+0x68],8
mov rax,qword[rsp+0x68]
cmp qword[rsp+0x98],rax
jne 0x656e6c
mov rax,qword[rsp+0x20]
mov rcx,qword[rsp+0x328]
add rax,0x68
cmp rcx,rax
je 0x6575af
call fcn.00a5af30
mov rax,qword[rsp+0x20]
mov rcx,qword[rsp+0x308]
add rax,0x48
cmp rcx,rax
je 0x6575ca
call fcn.00a5af30
mov rsi,qword[rsp+0x2f8]
mov rbx,qword[rsp+0x2f0]
cmp rsi,rbx
je 0x657613
mov rcx,qword[rbx+0x20]
lea rax,[rbx+0x30]
cmp rcx,rax
je 0x6575f1
call fcn.00a5af30
mov rcx,qword[rbx]
lea rax,[rbx+0x10]
cmp rcx,rax
je 0x657602
call fcn.00a5af30
add rbx,0x40
cmp rsi,rbx
jne 0x6575df
mov rbx,qword[rsp+0x2f0]
test rbx,rbx
je 0x657620
mov rcx,rbx
call fcn.00a5af30
mov rcx,qword[rsp+0x2d8]
test rcx,rcx
je 0x656773
call fcn.00a5af30
jmp 0x656773
shr edx,0x1f
test dl,dl
je 0x656cee
mov eax,r15d
shr eax,0x1f
test al,al
je 0x656cee
lea r14,[rbx+0x50]
xor eax,eax
lock cmpxchg qword[r14],rax
test rax,rax
mov r13,rax
mov r9,rax
je 0x65793c
mov r14,qword[sym.imp.KERNEL32.dll_WaitForSingleObjectEx]
mov r13d,0xffffffff
mov edx,r13d
mov rcx,r9
mov qword[rsp+0x28],r9
xor r8d,r8d
and r15d,0x7fffffff
call r14
mov r9,qword[rsp+0x28]
mov edx,r15d
or edx,0x40000000
test edx,edx
js 0x65791e
lea ecx,[rdx-1]
mov eax,edx
and ecx,0x3fffffff
or ecx,0x80000000
lock cmpxchg dword[rdi],ecx
cmp edx,eax
mov r15d,eax
je 0x656cee
mov edx,r15d
jmp 0x6576a1
add rcx,0x30
jmp 0x656e2b
test edx,edx
jg 0x656c57
mov dword[rbx+0xbbc],1
mov byte[rbx+0x19cd],1
jmp 0x656c57
mov edx,dword[rax+0x182c]
jmp 0x656c3d
mov edx,dword[rax+0x17d0]
jmp 0x656c15
mov edx,dword[rax+0x17cc]
jmp 0x656bed
mov edx,dword[rax+0x186c]
jmp 0x656bc1
lea rbp,[rsp+0x1d0]
lea rdx,str.Im_away._State_your_business_and_I_might_answer_later_if_youre_lucky.
mov rcx,rbp
call fcn.00652bb0
lea rcx,[rbx+0x6d8]
mov rdx,rbp
call fcn.00a2df10
cmp qword[rsp+0x1d8],0
mov rcx,qword[rsp+0x1d0]
setne byte[rbx+0x196c]
add rbp,0x10
cmp rcx,rbp
je 0x65776d
call fcn.00a5af30
mov rax,qword[0x00a7d820]
jmp 0x656b37
call sub.msvcrt.dll_atof
movapd xmm6,xmm0
jmp 0x6569db
mov edx,dword[rax+0x188c]
jmp 0x656a03
mov r8,rax
jmp 0x656e2e
mov rcx,r8
sub rcx,rax
sar rcx,3
cmp rcx,2
je 0x65790c
cmp rcx,3
je 0x6578ff
cmp rcx,1
jne 0x656e2e
cmp rdx,qword[rax]
cmove r8,rax
jmp 0x656e2e
mov ecx,0x28
call fcn.00a5b090
lea rdx,[0x00ab2c8a]
mov rcx,rsi
mov r12,rax
call fcn.00652bb0
mov rdx,rsi
mov rcx,r12
call fcn.00940160
mov rcx,qword[rsp+0x290]
lea rax,[0x00b70670]
add rsi,0x10
mov qword[r12],rax
cmp rcx,rsi
je 0x65783b
call fcn.00a5af30
lea r8,[0x00935800]
lea rdx,[0x00b4a200]
mov rcx,r12
call fcn.00a5b6d0
mov rcx,qword[rsp+0x290]
add rsi,0x10
mov rdi,rax
mov rbp,rdx
cmp rcx,rsi
je 0x65786d
call fcn.00a5af30
mov rsi,rdi
mov rdi,rbp
mov rcx,r12
call fcn.00a5b440
jmp 0x6565bb
xchg dword[rbp],eax
mov eax,0x80000000
lea rbp,[rbx+0x48]
lock xadd dword[rbp],eax
test eax,0x40000000
jne 0x656d4c
cmp eax,0x80000000
je 0x656d4c
mov edi,dword[rbx+0x48]
mov edx,edi
mov r8d,edi
mov rcx,rbp
or edx,0x40000000
call fcn.008eebc0
cmp edi,eax
je 0x6578cd
mov edi,eax
jmp 0x6578b2
and edi,0x40000000
jne 0x656d4c
lea rbp,[rbx+0x50]
xor eax,eax
lock cmpxchg qword[rbp],rax
test rax,rax
mov rdi,rax
mov rcx,rax
je 0x657982
call qword[sym.imp.KERNEL32.dll_SetEvent]
jmp 0x656d4c
cmp rdx,qword[rax]
je 0x6577b7
add rax,8
cmp rdx,qword[rax]
je 0x6577b7
add rax,8
jmp 0x6577e7
mov ecx,edx
mov eax,edx
and ecx,0xbfffffff
lock cmpxchg dword[rdi],ecx
cmp eax,edx
mov r15d,eax
jne 0x6576c9
jmp 0x65767b
xor r9d,r9d
xor r8d,r8d
xor edx,edx
xor ecx,ecx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov r9,rax
je 0x6579c1
mov rax,r13
lock cmpxchg qword[r14],r9
test rax,rax
mov r13,rax
je 0x65766e
mov rcx,r9
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov r9,r13
jmp 0x65766e
add rcx,0x28
jmp 0x656e2b
xor ecx,ecx
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
je 0x657a22
mov rax,rdi
lock cmpxchg qword[rbp],rcx
test rax,rax
mov rdi,rax
je 0x6578f4
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rcx,rdi
jmp 0x6578f4
call fcn.006ea660
lea rdx,[0x00ab2cfd]
mov rcx,rsi
mov rbx,rax
call fcn.009de540
lea rax,[rsi+0x30]
mov rcx,rsi
mov dword[rsp+0x2a0],0xb
mov qword[rsp+0x2a8],rbx
mov qword[rsp+0x2b8],0
mov qword[rsp+0x2b0],rax
lea rax,[0x00b72480]
mov byte[rsp+0x2c0],0
mov qword[rsp+0x290],rax
call fcn.00947760
call fcn.006ea660
lea rdx,[0x00ab2cfd]
mov rcx,rsi
mov rbx,rax
call fcn.009de540
lea rax,[rsi+0x30]
mov rcx,rsi
mov dword[rsp+0x2a0],0xb
mov qword[rsp+0x2a8],rbx
mov qword[rsp+0x2b8],0
mov qword[rsp+0x2b0],rax
lea rax,[0x00b72480]
mov byte[rsp+0x2c0],0
mov qword[rsp+0x290],rax
call fcn.00947760
lea rax,[0x00b72450]
mov rcx,rsi
mov qword[rsp+0x290],rax
call fcn.00962490
call fcn.00a55e20
jmp 0x657a83
add rax,1
jmp 0x656760
add rax,3
jmp 0x656760
add rax,2
jmp 0x656760
lea rax,[rsi+8]
jmp 0x657ab2
lea rax,[rsi+8]
jmp 0x657abf
lea rax,[rsi+8]
jmp 0x657aa5
lea rax,[rsi+4]
jmp 0x657ab2
lea rax,[rsi+4]
jmp 0x657abf
lea rax,[rsi+4]
jmp 0x657aa5
mov rax,rsi
jmp 0x657ab2
mov rax,rsi
jmp 0x657abf
mov rax,rsi
jmp 0x657aa5
lea rsi,[rsp+0x150]
mov rcx,rsi
call fcn.006b7740
mov rdi,qword[rsp+0x20]
mov r8d,0x18
mov rdx,rsi
mov rcx,rdi
call fcn.0093c950
lea rcx,[rbx+0x738]
mov rdx,rdi
call fcn.00a2df10
cmp qword[rsp+0x2d8],0
mov rcx,qword[rsp+0x2d0]
mov rax,rdi
setne byte[rbx+0x196f]
add rax,0x10
cmp rcx,rax
je 0x65676d
call fcn.00a5af30
jmp 0x65676d
mov rax,qword[rsp+0x358]
mov rax,qword[rax]
mov rcx,qword[rax+0x50]
call sub.msvcrt.dll_atoi
test eax,eax
jg 0x657c25
cmp edi,0xa7
cmove eax,r12d
mov dword[rbx+rdi*4+0x968],eax
mov byte[rbx+rdi+0x1938],1
jmp 0x656351
mov edx,dword[rax+0x1728]
jmp 0x656a92
mov dword[rbx+0xab8],0
mov byte[rbx+0x198c],1
jmp 0x656ae9
mov dword[rbx+0xab8],1
mov byte[rbx+0x198c],1
jmp 0x656ae9
mov edx,dword[rax+0x1728]
jmp 0x656ac6
lea rdi,[rsp+0x110]
mov rcx,qword[rax]
mov r8d,0x18
mov rdx,rdi
call fcn.005f3710
cmp byte[rsp+0x110],0
jne 0x656915
cmp byte[rsp+0x111],0
jne 0x6584a6
cmp byte[rsp+0x112],0
jne 0x65849e
cmp byte[rsp+0x113],0
jne 0x658496
cmp byte[rsp+0x114],0
jne 0x656915
cmp byte[rsp+0x115],0
jne 0x65848d
cmp byte[rsp+0x116],0
jne 0x658484
cmp byte[rsp+0x117],0
jne 0x65847b
cmp byte[rsp+0x118],0
jne 0x656915
cmp byte[rsp+0x119],0
jne 0x658472
cmp byte[rsp+0x11a],0
jne 0x658469
cmp byte[rsp+0x11b],0
jne 0x658460
cmp byte[rsp+0x11c],0
jne 0x656915
cmp byte[rsp+0x11d],0
jne 0x658457
cmp byte[rsp+0x11e],0
jne 0x65844e
cmp byte[rsp+0x11f],0
jne 0x658445
cmp byte[rsp+0x120],0
jne 0x656915
cmp byte[rsp+0x121],0
jne 0x65843c
cmp byte[rsp+0x122],0
jne 0x658433
cmp byte[rsp+0x123],0
jne 0x658102
cmp byte[rsp+0x124],0
jne 0x656915
cmp byte[rsp+0x125],0
jne 0x6580f5
cmp byte[rsp+0x126],0
jne 0x6580e8
cmp byte[rsp+0x127],0
jne 0x6580db
lea rax,[rdi+0x18]
add rdi,0x18
cmp rax,rdi
jne 0x656915
jmp 0x656863
mov rdi,qword[rbx+0x1a70]
lea rax,[rbx+0x1a60]
mov qword[rsp+0x38],rax
test rdi,rdi
je 0x657ec0
mov r12,qword[rdi+0x30]
mov rbp,qword[rdi+0x28]
mov r13,qword[rdi]
cmp r12,rbp
je 0x657e91
mov rcx,qword[rbp]
lea rax,[rbp+0x10]
cmp rcx,rax
je 0x657e84
call fcn.00a5af30
add rbp,0x20
cmp r12,rbp
jne 0x657e72
mov rbp,qword[rdi+0x28]
test rbp,rbp
je 0x657e9e
mov rcx,rbp
call fcn.00a5af30
mov rcx,qword[rdi+8]
lea rax,[rdi+0x18]
cmp rcx,rax
je 0x657eb0
call fcn.00a5af30
mov rcx,rdi
mov rdi,r13
call fcn.00a5af30
test r13,r13
jne 0x657e62
mov r8,qword[rbx+0x1a68]
mov rcx,qword[rbx+0x1a60]
xor edx,edx
lea rbp,[rsp+0x240]
lea r13,[rsp+0x220]
shl r8,3
call sub.msvcrt.dll_memset
mov rax,qword[rsp+0x358]
mov qword[rbx+0x1a78],0
mov qword[rbx+0x1a70],0
mov rax,qword[rax]
mov qword[rsp+0x350],rax
mov rax,qword[rax]
mov byte[rsp+0x360],0
mov qword[rsp+0x358],rax
lea rax,[rsp+0x230]
mov qword[rsp+0x28],rax
lea rax,[rsp+0x210]
mov qword[rsp+0x30],rax
lea rdi,[rsi+0x10]
mov ecx,0x6570
mov qword[rsp+0x290],rdi
movabs rax,0x7954686372616553
mov word[rdi+8],cx
mov rcx,qword[rsp+0x20]
mov rdx,rsi
mov qword[rdi],rax
mov qword[rsp+0x298],0xa
mov byte[rsp+0x2aa],0
call fcn.0066b440
mov rcx,qword[rsp+0x290]
mov r12d,eax
cmp rcx,rdi
je 0x657f97
call fcn.00a5af30
test r12b,r12b
je 0x6580cc
mov rax,qword[rsp+0x358]
mov r12,qword[rax]
cmp qword[r12+0x58],0
je 0x657f43
mov edx,0x6449
mov qword[rsp+0x290],rdi
xor r9d,r9d
mov word[rdi],dx
mov byte[rsp+0x2a2],0
mov r8,rsi
mov r15,qword[rax]
mov qword[rsp+0x298],2
mov rcx,qword[r15+0x18]
mov rdx,qword[r15+0x20]
call fcn.00a54d40
mov rcx,qword[rsp+0x290]
cmp qword[r15+0x20],rax
lea r14,[rax+0x20]
cmove r14,qword[0x00b3d1f0]
cmp rcx,rdi
je 0x65800f
call fcn.00a5af30
cmp qword[r14+8],0
je 0x657f43
lea rax,[r12+0x50]
lea r15,[rsp+0xf0]
mov qword[rsp+0x40],r14
mov qword[rsp+0xf0],0
mov qword[rsp+0xf8],0
xor edi,edi
mov qword[rsp+0x50],rax
lea rax,[rsp+0xc8]
mov qword[rsp+0x100],0
mov qword[rsp+0x58],rax
mov rcx,qword[rsp+0x50]
mov r8,rdi
mov edx,0x3b
call fcn.00978c80
cmp rax,0xffffffffffffffff
mov qword[rsp+0x48],rax
je 0x6582bc
mov r9,qword[r12+0x58]
sub rax,rdi
cmp rdi,r9
ja 0x6582a6
mov r14,rdi
add r14,qword[r12+0x50]
sub r9,rdi
cmp r9,rax
mov qword[rsp+0x230],rbp
cmovbe rax,r9
mov rdi,rax
mov rax,r14
add rax,rdi
je 0x65811b
test r14,r14
jne 0x65811b
lea rcx,[0x00ab2c60]
call fcn.00a4f4e0
mov rcx,qword[rsp+0x20]
call fcn.00941ad0
jmp 0x656838
lea rax,[rdi+0x14]
add rax,3
jmp 0x657e38
lea rax,[rdi+0x14]
add rax,2
jmp 0x657e38
lea rax,[rdi+0x14]
add rax,1
jmp 0x657e38
lea rax,[rdi+0x10]
jmp 0x6580df
cmp rdi,0xf
mov qword[rsp+0xc8],rdi
ja 0x6581ff
cmp rdi,1
je 0x65824c
test rdi,rdi
mov rax,rbp
jne 0x658229
mov qword[rsp+0x238],rdi
mov byte[rax+rdi],0
mov rax,qword[rsp+0xf8]
cmp rax,qword[rsp+0x100]
je 0x6581e8
test rax,rax
mov rcx,qword[rsp+0x230]
je 0x6581c4
lea rdx,[rax+0x10]
mov qword[rax],rdx
mov rdx,qword[rsp+0x230]
cmp rdx,rbp
je 0x658289
mov qword[rax],rdx
mov rdx,qword[rsp+0x240]
mov qword[rax+0x10],rdx
mov rdx,qword[rsp+0x238]
mov qword[rsp+0x230],rbp
mov rcx,rbp
mov qword[rax+8],rdx
mov qword[rsp+0x238],0
mov byte[rsp+0x240],0
add rax,0x20
mov qword[rsp+0xf8],rax
cmp rcx,rbp
je 0x6581da
call fcn.00a5af30
mov rdi,qword[rsp+0x48]
add rdi,1
jmp 0x658064
mov rdx,qword[rsp+0x28]
mov rcx,r15
call fcn.00a1d740
mov rcx,qword[rsp+0x230]
jmp 0x6581d0
mov rdx,qword[rsp+0x58]
mov rcx,qword[rsp+0x28]
xor r8d,r8d
call fcn.00a2dfc0
mov rdx,qword[rsp+0xc8]
mov qword[rsp+0x230],rax
mov qword[rsp+0x240],rdx
mov r8,rdi
mov rdx,r14
mov rcx,rax
call sub.msvcrt.dll_memcpy
mov rdi,qword[rsp+0xc8]
mov rax,qword[rsp+0x230]
jmp 0x658143
movzx eax,byte[r14]
mov byte[rsp+0x240],al
mov rax,rbp
jmp 0x658143
mov r9,qword[rsp+0x240]
mov r10,qword[rsp+0x248]
mov qword[rax+0x10],r9
mov qword[rax+0x18],r10
jmp 0x658199
lea rdx,[0x00ab2d58]
lea rcx,[0x00ab2d70]
mov r8,rdi
call fcn.00a4fe30
mov rax,qword[r12+0x58]
cmp rdi,rax
jb 0x658332
mov rdx,qword[rsp+0x40]
mov rcx,qword[rsp+0x38]
call fcn.00a487b0
mov rdx,r15
mov rcx,rax
call fcn.00a1dc90
mov r12,qword[rsp+0xf8]
mov rdi,qword[rsp+0xf0]
cmp r12,rdi
je 0x658317
mov rcx,qword[rdi]
lea rax,[rdi+0x10]
cmp rcx,rax
je 0x658306
call fcn.00a5af30
add rdi,0x20
cmp r12,rdi
jne 0x6582f5
mov rdi,qword[rsp+0xf0]
test rdi,rdi
je 0x657f3f
mov rcx,rdi
call fcn.00a5af30
jmp 0x657f3f
mov rcx,qword[r12+0x50]
mov qword[rsp+0x210],r13
lea rdx,[rcx+rdi]
lea r8,[rcx+rax]
mov rcx,qword[rsp+0x30]
call fcn.006528f0
mov rax,qword[rsp+0xf8]
cmp rax,qword[rsp+0x100]
je 0x6583dd
test rax,rax
mov rcx,qword[rsp+0x210]
je 0x6583be
lea rdx,[rax+0x10]
mov qword[rax],rdx
mov rdx,qword[rsp+0x210]
cmp rdx,r13
je 0x6583f4
mov qword[rax],rdx
mov rdx,qword[rsp+0x220]
mov qword[rax+0x10],rdx
mov rdx,qword[rsp+0x218]
mov qword[rsp+0x210],r13
mov rcx,r13
mov qword[rax+8],rdx
mov qword[rsp+0x218],0
mov byte[rsp+0x220],0
add rax,0x20
mov qword[rsp+0xf8],rax
cmp rcx,r13
je 0x6582c6
call fcn.00a5af30
jmp 0x6582c6
mov rdx,qword[rsp+0x30]
mov rcx,r15
call fcn.00a1d740
mov rcx,qword[rsp+0x210]
jmp 0x6583ca
mov r9,qword[rsp+0x220]
mov r10,qword[rsp+0x228]
mov qword[rax+0x10],r9
mov qword[rax+0x18],r10
jmp 0x658393
lea rax,[rdi+0x10]
jmp 0x6580ec
lea rax,[rdi+0x10]
jmp 0x6580f9
lea rax,[rdi+0xc]
jmp 0x6580df
lea rax,[rdi+0xc]
jmp 0x6580ec
lea rax,[rdi+0xc]
jmp 0x6580f9
lea rax,[rdi+8]
jmp 0x6580df
lea rax,[rdi+8]
jmp 0x6580ec
lea rax,[rdi+8]
jmp 0x6580f9
lea rax,[rdi+4]
jmp 0x6580df
lea rax,[rdi+4]
jmp 0x6580ec
lea rax,[rdi+4]
jmp 0x6580f9
mov rax,rdi
jmp 0x6580df
mov rax,rdi
jmp 0x6580ec
mov rax,rdi
jmp 0x6580f9
mov rax,qword[rsp+0x358]
mov rax,qword[rax]
mov rcx,qword[rax+0x50]
call r12
mov qword[rbx+rdi*8+0x3b8],rax
mov byte[rbx+rdi+0x1938],1
jmp 0x65649d
{% endhighlight %}


[similar_1_ref]: /report/fcn.005c9510@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_2_ref]: /report/fcn.0054f1a0@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_3_ref]: /report/fcn.006b9e90@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_4_ref]: /report/fcn.005c0710@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_5_ref]: /report/fcn.005ba960@a5905e3c253c25bbaf727a1a18fe8ed1
[virustotal_ref]: https://www.virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1