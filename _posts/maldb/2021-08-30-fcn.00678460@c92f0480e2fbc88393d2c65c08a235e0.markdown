---
layout: post
title:  "fcn.00678460 @ c92f0480e2fbc88393d2c65c08a235e0"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00678460
- **Origin (md5):** c92f0480e2fbc88393d2c65c08a235e0
- **VirusTotal:** [virustotal.com/gui/file/c92f0480e2fbc88393d2c65c08a235e0][virustotal_ref]

# Code Tags
<span class="tag" id="SOCKET">SOCKET</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.00678460@c92f0480e2fbc88393d2c65c08a235e0">fcn.00678460</a><br>@c92f0480e2fbc88393d2c65c08a235e0</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebx
sub esp, 0x18
mov ebx, dword[esp+0x24]
movzx edx, byte[ebx+0x70]
mov eax, dword[ebx+0x2c]
test dl, dl
jne 0x66d007
test al, 8
je 0x66d030
test al, 1
jne 0x66d047
mov edx, eax
and edx, 0x60
cmp edx, 0x60
je 0x66d01c
mov edx, dword[ebx+4]
add dword[edx+4], 1
and eax, 0xffffffbf
or eax, 1
mov dword[ebx+0x2c], eax
add esp, 0x18
pop ebx
ret
mov ecx, dword[esp+0x20]
or eax, 8
test al, 1
mov dword[ebx+0x2c], eax
mov edx, dword[ecx+0x2c]
mov dword[ebx+0x28], edx
mov dword[ecx+0x2c], ebx
je 0x66d00b
mov dword[esp+8], 0x3e
mov dword[esp+4], str.src_win_async.c_
mov dword[esp], str.!((handle)-_flags_&_UV__HANDLE_CLOSING)_
call fcn.006b2490
mov eax, dword[ebx+0x2c]
jmp 0x66d00b
push ebx
sub esp, 0x18
mov ebx, dword[esp+0x24]
mov eax, dword[ebx+0x2c]
test al, 0x40
jne 0x66f791
test al, 1
jne 0x66f770
mov edx, eax
and edx, 0x60
cmp edx, 0x60
je 0x66f734
mov edx, dword[ebx+4]
add dword[edx+4], 1
mov edx, eax
and edx, 0xffffffbf
mov ecx, edx
or ecx, 1
mov dword[ebx+0x2c], ecx
mov ecx, dword[ebx+0x74]
test ecx, ecx
jne 0x66f763
test al, 8
jne 0x66f763
mov eax, dword[esp+0x20]
or edx, 9
mov dword[ebx+0x2c], edx
mov eax, dword[eax+0x2c]
mov dword[ebx+0x28], eax
mov eax, dword[esp+0x20]
mov dword[eax+0x2c], ebx
add esp, 0x18
pop ebx
ret
mov dword[esp+8], 0x21d
mov dword[esp+4], str.src_win_fs-event.c_
mov dword[esp], str.!((handle)-_flags_&_UV__HANDLE_CLOSING)_
call fcn.006b2490
mov eax, dword[ebx+0x2c]
jmp 0x66f723
mov eax, ebx
call fcn.0066eb20
mov eax, dword[ebx+0x2c]
jmp 0x66f71f
push esi
push ebx
sub esp, 0x14
mov ebx, dword[esp+0x20]
mov eax, dword[esp+0x24]
test byte[ebx+0x2c], 1
jne 0x678490
cmp dword[ebx+8], 0x10
mov esi, dword[ebx+4]
mov dword[ebx+0xc], eax
ja case.0x678486.0
mov eax, dword[ebx+8]
jmp dword[eax*4+0x7b5fcc]
mov dword[esp+8], 0x47
mov dword[esp+4], str.src_win_handle.c_
mov dword[esp], 0x7b5fa1
call fcn.006b2490
add esp, 0x14
pop ebx
pop esi
ret
mov dword[esp+0x24], ebx
mov dword[esp+0x20], esi
add esp, 0x14
pop ebx
pop esi
jmp 0x6812a0
mov dword[esp+0x24], ebx
mov dword[esp+0x20], esi
add esp, 0x14
pop ebx
pop esi
jmp 0x66cff0
mov dword[esp], ebx
call fcn.00678a50
mov eax, dword[ebx+0x2c]
test al, 1
jne 0x6786a0
mov edx, eax
and edx, 0x60
cmp edx, 0x60
je 0x678504
mov edx, dword[ebx+4]
add dword[edx+4], 1
mov edx, eax
and edx, 0xffffffbf
test al, 8
jne 0x678692
mov eax, dword[esi+0x2c]
or edx, 9
mov dword[ebx+0x2c], edx
mov dword[ebx+0x28], eax
mov dword[esi+0x2c], ebx
add esp, 0x14
pop ebx
pop esi
ret
mov dword[esp+0x24], ebx
mov dword[esp+0x20], esi
add esp, 0x14
pop ebx
pop esi
jmp 0x66f710
mov dword[esp], ebx
call fcn.006910d0
mov eax, dword[ebx+0x2c]
test al, 1
je 0x6784f3
mov dword[esp+8], 0x8d
mov dword[esp+4], str.src_win_handle.c_
mov dword[esp], str.!((handle)-_flags_&_UV__HANDLE_CLOSING)_
call fcn.006b2490
mov eax, dword[ebx+0x2c]
jmp 0x6784f3
mov dword[esp], ebx
call fcn.00678c40
mov eax, dword[ebx+0x2c]
test al, 1
je 0x6784f3
mov dword[esp+8], 0x77
mov dword[esp+4], str.src_win_handle.c_
mov dword[esp], str.!((handle)-_flags_&_UV__HANDLE_CLOSING)_
call fcn.006b2490
mov eax, dword[ebx+0x2c]
jmp 0x6784f3
mov dword[esp+0x24], ebx
mov dword[esp+0x20], esi
add esp, 0x14
pop ebx
pop esi
jmp 0x67be60
mov dword[esp+0x24], ebx
mov dword[esp+0x20], esi
add esp, 0x14
pop ebx
pop esi
jmp 0x67e4e0
mov dword[esp], ebx
call fcn.00678860
mov eax, dword[ebx+0x2c]
test al, 1
je 0x6784f3
mov dword[esp+8], 0x6b
mov dword[esp+4], str.src_win_handle.c_
mov dword[esp], str.!((handle)-_flags_&_UV__HANDLE_CLOSING)_
call fcn.006b2490
mov eax, dword[ebx+0x2c]
jmp 0x6784f3
mov dword[esp+0x24], ebx
mov dword[esp+0x20], esi
add esp, 0x14
pop ebx
pop esi
jmp 0x67f8e0
mov dword[esp+0x24], ebx
mov dword[esp+0x20], esi
add esp, 0x14
pop ebx
pop esi
jmp 0x6846e0
mov dword[esp], ebx
call fcn.00685ed0
mov eax, dword[ebx+0x2c]
test al, 1
je 0x6784f3
mov dword[esp+8], 0x65
mov dword[esp+4], str.src_win_handle.c_
mov dword[esp], str.!((handle)-_flags_&_UV__HANDLE_CLOSING)_
call fcn.006b2490
mov eax, dword[ebx+0x2c]
jmp 0x6784f3
mov dword[esp+0x20], ebx
add esp, 0x14
pop ebx
pop esi
jmp 0x68b640
mov dword[esp+0x24], ebx
mov dword[esp+0x20], esi
add esp, 0x14
pop ebx
pop esi
jmp 0x68c130
or edx, 1
mov dword[ebx+0x2c], edx
add esp, 0x14
pop ebx
pop esi
ret
mov dword[esp+8], 0x71
mov dword[esp+4], str.src_win_handle.c_
mov dword[esp], str.!((handle)-_flags_&_UV__HANDLE_CLOSING)_
call fcn.006b2490
mov eax, dword[ebx+0x2c]
jmp 0x6784f3
call sub.msvcrt.dll_abort
lea esi, [esi]
push esi
push ebx
sub esp, 0x14
mov ebx, dword[esp+0x24]
mov esi, dword[esp+0x20]
mov eax, dword[ebx+0x2c]
test ah, 1
je 0x67beb1
mov ecx, eax
and ch, 0xfe
sub dword[ebx+0x40], 1
mov dword[ebx+0x2c], ecx
jne 0x67bfa0
test al, 1
jne 0x67bfd0
test al, 0x40
je 0x67bfd0
mov edx, eax
and eax, 0x20
mov ecx, eax
and edx, 0xfffffebf
test ecx, ecx
mov dword[ebx+0x2c], edx
mov eax, edx
jne 0x67bff0
test ah, 8
je 0x67bee3
mov edx, eax
and dh, 0xf7
sub dword[ebx+0x40], 1
mov dword[ebx+0x2c], edx
jne 0x67bf70
test al, 1
jne 0x67bee3
test al, 0x40
je 0x67bee3
mov edx, eax
and edx, 0xfffff7bf
test al, 0x20
mov dword[ebx+0x2c], edx
jne 0x67bfe0
mov dword[esp+4], ebx
mov dword[esp], esi
call fcn.0067bd90
mov eax, dword[ebx+0x3c]
mov edx, dword[ebx+0x2c]
test eax, eax
jne 0x67befe
test dl, 8
je 0x67bf30
mov eax, edx
and eax, 0xfffe7fff
and edx, 1
mov dword[ebx+0x2c], eax
jne 0x67bf4b
mov edx, eax
and edx, 0x60
cmp edx, 0x60
je 0x67bf1e
mov edx, dword[ebx+4]
add dword[edx+4], 1
and eax, 0xffffffbf
or eax, 1
mov dword[ebx+0x2c], eax
add esp, 0x14
pop ebx
pop esi
ret
mov eax, dword[esi+0x2c]
or edx, 8
mov dword[ebx+0x28], eax
mov eax, edx
mov dword[esi+0x2c], ebx
and eax, 0xfffe7fff
and edx, 1
mov dword[ebx+0x2c], eax
je 0x67bf0d
mov dword[esp+8], 0x31a
mov dword[esp+4], str.src_win_pipe.c_
mov dword[esp], str.!((handle)-_flags_&_UV__HANDLE_CLOSING)_
call fcn.006b2490
mov eax, dword[ebx+0x2c]
jmp 0x67bf0d
jns 0x67bee3
mov dword[esp+8], 0x310
mov dword[esp+4], str.src_win_pipe.c_
mov dword[esp], str.(handle)-_activecnt__=_0_
call fcn.006b2490
jmp 0x67bee3
mov eax, ecx
jns 0x67beb1
mov dword[esp+8], 0x30b
mov dword[esp+4], str.src_win_pipe.c_
mov dword[esp], str.(handle)-_activecnt__=_0_
call fcn.006b2490
mov eax, dword[ebx+0x2c]
jmp 0x67beb1
mov eax, ecx
jmp 0x67beb1
mov eax, dword[ebx+4]
sub dword[eax+4], 1
jmp 0x67bee3
mov edx, dword[ebx+4]
sub dword[edx+4], 1
jmp 0x67beb1
push ebx
sub esp, 0x38
mov ebx, dword[esp+0x44]
mov eax, dword[ebx+0x2c]
mov byte[ebx+0xfc], 0
mov edx, eax
and edx, 1
test eax, 0x2000000
je 0x67e550
test edx, edx
jne 0x67e610
mov edx, eax
and edx, 0x60
cmp edx, 0x60
je 0x67e517
mov edx, dword[ebx+4]
add dword[edx+4], 1
mov edx, eax
and edx, 0xffffffbf
mov ecx, edx
or ecx, 1
cmp word[ebx+0xf8], 0
mov dword[ebx+0x2c], ecx
jne 0x67e549
test al, 8
jne 0x67e549
mov eax, dword[esp+0x40]
or edx, 9
mov dword[ebx+0x2c], edx
mov eax, dword[eax+0x2c]
mov dword[ebx+0x28], eax
mov eax, dword[esp+0x40]
mov dword[eax+0x2c], ebx
xor eax, eax
add esp, 0x38
pop ebx
ret
test edx, edx
jne 0x67e642
mov edx, eax
and edx, 0x60
cmp edx, 0x60
je 0x67e569
mov edx, dword[ebx+4]
add dword[edx+4], 1
mov edx, eax
and edx, 0xffffffbf
mov ecx, edx
or ecx, 1
cmp word[ebx+0xf8], 0
mov dword[ebx+0x2c], ecx
je 0x67e52e
mov eax, dword[ebx+0x34]
mov dword[esp+4], 0x67dd10
mov dword[esp], 0x83a6c0
mov dword[esp+0x1c], 1
mov dword[esp+0x18], 1
mov dword[esp+0x10], 0xffffffff
mov dword[esp+0x20], eax
mov dword[esp+0x14], 0x7fffffff
mov dword[esp+0x28], 0
mov dword[esp+0x24], 0x7ff
call fcn.00685090
lea eax, [esp+0x10]
mov dword[esp+0xc], 0x83a6c8
mov dword[esp+8], 0x83a6a0
mov dword[esp+4], eax
mov eax, dword[ebx+0x34]
mov dword[esp], eax
call fcn.006907d0
sub esp, 0x10
cmp eax, 0xffffffff
jne 0x67e549
call dword[sym.imp.WS2_32.dll_WSAGetLastError]
cmp eax, 0x3e5
jne 0x67e54b
jmp 0x67e549
mov dword[esp+8], 0x1f1
mov dword[esp+4], str.src_win_poll.c_
mov dword[esp], str.!((handle)-_flags_&_UV__HANDLE_CLOSING)_
call fcn.006b2490
mov eax, dword[ebx+0x2c]
mov edx, eax
and edx, 0x60
cmp edx, 0x60
jne 0x67e510
jmp 0x67e517
mov dword[esp+8], 0xfd
mov dword[esp+4], str.src_win_poll.c_
mov dword[esp], str.!((handle)-_flags_&_UV__HANDLE_CLOSING)_
call fcn.006b2490
mov eax, dword[ebx+0x2c]
jmp 0x67e558
push ebx
sub esp, 0x18
mov ebx, dword[esp+0x24]
mov eax, dword[ebx+0x2c]
test al, 1
jne 0x67f960
mov edx, eax
and edx, 0x60
cmp edx, 0x60
je 0x67f900
mov edx, dword[ebx+4]
add dword[edx+4], 1
and eax, 0xffffffbf
or eax, 1
mov dword[ebx+0x2c], eax
mov eax, dword[ebx+0x7c]
cmp eax, 0xffffffff
je 0x67f930
mov dword[esp+4], 0xffffffff
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_UnregisterWaitEx]
sub esp, 8
test eax, eax
je 0x67f984
mov dword[ebx+0x7c], 0xffffffff
movzx eax, byte[ebx+0x84]
test al, al
jne 0x67f959
mov eax, dword[ebx+0x2c]
test al, 8
jne 0x67f959
or eax, 8
mov dword[ebx+0x2c], eax
mov eax, dword[esp+0x20]
mov eax, dword[eax+0x2c]
mov dword[ebx+0x28], eax
mov eax, dword[esp+0x20]
mov dword[eax+0x2c], ebx
add esp, 0x18
pop ebx
ret
mov dword[esp+8], 0x384
mov dword[esp+4], str.src_win_process.c_
mov dword[esp], str.!((handle)-_flags_&_UV__HANDLE_CLOSING)_
call fcn.006b2490
mov eax, dword[ebx+0x2c]
jmp 0x67f8ef
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov dword[esp+4], str.UnregisterWaitEx_
mov dword[esp], eax
call fcn.0066e2e0
lea esi, [esi]
push ebx
sub esp, 0x18
mov ebx, dword[esp+0x24]
mov dword[esp], ebx
call fcn.00680740
mov eax, dword[ebx+0x2c]
test al, 1
jne 0x681300
mov edx, eax
and edx, 0x60
cmp edx, 0x60
je 0x6812c8
mov edx, dword[ebx+4]
add dword[edx+4], 1
mov edx, eax
and edx, 0xffffffbf
mov ecx, edx
or ecx, 1
mov dword[ebx+0x2c], ecx
mov ecx, dword[ebx+0x84]
test ecx, ecx
jne 0x6812fa
test al, 8
jne 0x6812fa
mov eax, dword[esp+0x20]
or edx, 9
mov dword[ebx+0x2c], edx
mov eax, dword[eax+0x2c]
mov dword[ebx+0x28], eax
mov eax, dword[esp+0x20]
mov dword[eax+0x2c], ebx
add esp, 0x18
pop ebx
ret
mov dword[esp+8], 0x103
mov dword[esp+4], str.src_win_signal.c_
mov dword[esp], str.!((handle)-_flags_&_UV__HANDLE_CLOSING)_
call fcn.006b2490
mov eax, dword[ebx+0x2c]
jmp 0x6812b7
push ebp
push edi
push esi
push ebx
sub esp, 0x1c
mov ebx, dword[esp+0x34]
mov eax, dword[ebx+0x2c]
mov ecx, eax
mov esi, eax
and ecx, 0x40000000
and esi, 0x20000
je 0x6847f1
test ecx, ecx
mov edx, dword[ebx+0x90]
jne 0x684830
mov dword[esp+4], 1
mov dword[esp], edx
mov edi, 1
call dword[sym.imp.WS2_32.dll_shutdown]
mov eax, dword[ebx+0x2c]
sub esp, 8
test ah, 1
je 0x684770
mov ecx, eax
and ch, 0xfe
sub dword[ebx+0x40], 1
mov dword[ebx+0x2c], ecx
jne 0x684850
test al, 1
jne 0x684950
test al, 0x40
je 0x684950
mov edx, eax
and eax, 0x20
mov ecx, eax
and edx, 0xfffffebf
test ecx, ecx
mov dword[ebx+0x2c], edx
mov eax, edx
jne 0x6849a0
nop
test ah, 8
je 0x684790
mov edx, eax
and dh, 0xf7
sub dword[ebx+0x40], 1
mov dword[ebx+0x2c], edx
jne 0x684880
test al, 1
je 0x684960
nop
test edi, edi
jne 0x6848b0
mov edx, dword[ebx+0x2c]
mov eax, edx
and eax, 0xfffe7fff
and edx, 1
mov dword[ebx+0x2c], eax
jne 0x6848e8
mov edx, eax
and edx, 0x60
cmp edx, 0x60
je 0x6847bf
mov edx, dword[ebx+4]
add dword[edx+4], 1
mov edx, eax
and edx, 0xffffffbf
mov ecx, edx
or ecx, 1
mov dword[ebx+0x2c], ecx
mov ecx, dword[ebx+0x3c]
test ecx, ecx
jne 0x6847e9
test al, 8
jne 0x6847e9
mov eax, dword[ebx+4]
or edx, 9
mov dword[ebx+0x2c], edx
mov edx, dword[eax+0x2c]
mov dword[ebx+0x28], edx
mov dword[eax+0x2c], ebx
add esp, 0x1c
pop ebx
pop esi
pop edi
pop ebp
ret
test ecx, ecx
mov edi, 1
je 0x68472e
mov ebp, dword[ebx+0x98]
test ebp, ebp
je 0x68472e
mov edx, dword[ebx+0x90]
call fcn.00682600
test eax, eax
mov ebp, dword[sym.imp.WS2_32.dll_closesocket]
jne 0x68492e
mov eax, dword[ebx+0x2c]
jmp 0x68472e
call fcn.00682600
test eax, eax
setne al
movzx eax, al
mov edi, eax
mov eax, dword[ebx+0x2c]
jmp 0x68472e
mov eax, ecx
jns 0x684770
mov dword[esp+8], 0x58e
mov dword[esp+4], str.src_win_tcp.c_
mov dword[esp], str._tcp___activecnt___0
call fcn.006b2490
mov eax, dword[ebx+0x2c]
jmp 0x684770
jns 0x684790
mov dword[esp+8], 0x593
mov dword[esp+4], str.src_win_tcp.c_
mov dword[esp], str._tcp___activecnt___0
call fcn.006b2490
test edi, edi
je 0x684798
lea esi, [esi]
mov eax, dword[ebx+0x90]
mov dword[esp], eax
call dword[sym.imp.WS2_32.dll_closesocket]
mov edx, dword[ebx+0x2c]
sub esp, 4
mov dword[ebx+0x90], 0xffffffff
or edx, 0x20000000
mov eax, edx
and eax, 0xfffe7fff
and edx, 1
mov dword[ebx+0x2c], eax
je 0x6847ae
mov dword[esp+8], 0x59d
mov dword[esp+4], str.src_win_tcp.c_
mov dword[esp], str.___tcp___flags__UV__HANDLE_CLOSING_
call fcn.006b2490
mov eax, dword[ebx+0x2c]
jmp 0x6847ae
mov dword[esp], eax
call ebp
mov dword[edi+0x3c], 0xffffffff
sub esp, 4
nop
add esi, 0x16c
cmp esi, 0x2d80
je 0x684990
mov edi, dword[ebx+0x98]
add edi, esi
mov eax, dword[edi+0x3c]
cmp eax, 0xffffffff
je 0x684920
cmp dword[edi+0x20], 0x103
jne 0x684920
jmp 0x684910
mov eax, ecx
jmp 0x684770
test al, 0x40
je 0x684790
mov edx, eax
and edx, 0xfffff7bf
test al, 0x20
mov dword[ebx+0x2c], edx
je 0x684790
mov eax, dword[ebx+4]
sub dword[eax+4], 1
jmp 0x684790
mov eax, dword[ebx+0x2c]
mov edi, 1
jmp 0x68472e
mov edx, dword[ebx+4]
sub dword[edx+4], 1
jmp 0x684770
push ebx
sub esp, 0x18
mov ebx, dword[esp+0x20]
mov eax, dword[ebx+0x18]
cmp eax, 0xffffffff
je 0x68b659
cmp eax, 2
jle 0x68b6e0
cmp eax, 0xffffffff
je 0x68b708
mov dword[esp], eax
call sub.msvcrt.dll__close_1
mov edx, dword[ebx+0x2c]
test dh, 1
jne 0x68b726
mov eax, edx
mov dword[ebx+0x18], 0xffffffff
mov dword[ebx+0x90], 0xffffffff
and eax, 0xfffe7fff
and edx, 1
mov dword[ebx+0x2c], eax
jne 0x68b740
mov edx, eax
and edx, 0x60
cmp edx, 0x60
je 0x68b6ab
mov edx, dword[ebx+4]
add dword[edx+4], 1
mov edx, eax
and edx, 0xffffffbf
mov ecx, edx
or ecx, 1
mov dword[ebx+0x2c], ecx
mov ecx, dword[ebx+0x3c]
test ecx, ecx
jne 0x68b6d5
test al, 8
jne 0x68b6d5
mov eax, dword[ebx+4]
or edx, 9
mov dword[ebx+0x2c], edx
mov edx, dword[eax+0x2c]
mov dword[ebx+0x28], edx
mov dword[eax+0x2c], ebx
add esp, 0x18
pop ebx
ret
mov dword[esp+8], 0x888
mov dword[esp+4], 0x7b7660
mov dword[esp], str.handle__u.fd___1__handle__u.fd___2
call fcn.006b2490
mov eax, dword[ebx+0x18]
cmp eax, 0xffffffff
jne 0x68b662
mov eax, dword[ebx+0x90]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_CloseHandle]
mov edx, dword[ebx+0x2c]
sub esp, 4
test dh, 1
je 0x68b676
mov dword[esp], ebx
call fcn.0068ae70
mov edx, dword[ebx+0x2c]
jmp 0x68b676
mov dword[esp+8], 0x894
mov dword[esp+4], 0x7b7660
mov dword[esp], str.!((handle)-_flags_&_UV__HANDLE_CLOSING)_
call fcn.006b2490
mov eax, dword[ebx+0x2c]
jmp 0x68b69a
push ebx
sub esp, 0x18
mov ebx, dword[esp+0x24]
mov dword[esp], ebx
call fcn.0066c950
mov eax, dword[ebx+0x38]
mov dword[esp], eax
call dword[sym.imp.WS2_32.dll_closesocket]
mov eax, dword[ebx+0x2c]
sub esp, 4
mov dword[ebx+0x38], 0xffffffff
test al, 1
jne 0x68c1a2
mov edx, eax
and edx, 0x60
cmp edx, 0x60
je 0x68c16e
mov edx, dword[ebx+4]
add dword[edx+4], 1
mov edx, eax
and edx, 0xffffffbf
mov ecx, edx
or ecx, 1
mov dword[ebx+0x2c], ecx
mov ecx, dword[ebx+0x3c]
test ecx, ecx
jne 0x68c19d
test al, 8
jne 0x68c19d
mov eax, dword[esp+0x20]
or edx, 9
mov dword[ebx+0x2c], edx
mov eax, dword[eax+0x2c]
mov dword[ebx+0x28], eax
mov eax, dword[esp+0x20]
mov dword[eax+0x2c], ebx
add esp, 0x18
pop ebx
ret
mov dword[esp+8], 0xb9
mov dword[esp+4], str.src_win_udp.c_
mov dword[esp], str.___handle___flags__UV__HANDLE_CLOSING_
call fcn.006b2490
mov eax, dword[ebx+0x2c]
jmp 0x68c15d

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/c92f0480e2fbc88393d2c65c08a235e0