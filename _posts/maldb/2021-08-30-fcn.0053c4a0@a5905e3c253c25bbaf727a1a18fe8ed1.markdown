---
layout: post
title:  "fcn.0053c4a0 @ a5905e3c253c25bbaf727a1a18fe8ed1"
date:   2021-08-30 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0053c4a0
- **Origin (md5):** a5905e3c253c25bbaf727a1a18fe8ed1
- **VirusTotal:** [virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Similar Functions

1. [fcn.007197a0][similar_1_ref] (sim.: 0.9479764175145862)
2. [fcn.005c9510][similar_2_ref] (sim.: 0.9414171212361552)
3. [fcn.006b9e90][similar_3_ref] (sim.: 0.9394165161395762)
4. [fcn.005c0710][similar_4_ref] (sim.: 0.9393776172636156)
5. [fcn.004e55f0][similar_5_ref] (sim.: 0.9385405301489612)


# Disassembled Code

{% highlight nasm %}
push r15
push r14
push r13
push r12
push rbp
push rdi
push rsi
push rbx
sub rsp,0x1c8
mov rax,qword[0x00b3d530]
mov qword[rsp+0x218],rdx
mov rbx,rcx
mov qword[rsp+0x220],r8
mov rax,qword[rax]
mov rdx,qword[rax+8]
mov rax,qword[rsp+0x218]
mov rcx,qword[rax+8]
mov rax,qword[sym.imp.GDI32.dll_SelectObject]
mov rdi,rax
mov qword[rsp+0x60],rax
call rax
mov rsi,rax
mov rax,qword[rsp+0x220]
mov eax,dword[rax+8]
mov dword[rsp+0x50],eax
mov rax,qword[rsp+0x220]
mov r9d,dword[rsp+0x50]
mov eax,dword[rax+4]
mov dword[rsp+0x58],eax
mov rax,qword[rsp+0x218]
mov r8d,dword[rsp+0x58]
mov rcx,qword[rax+8]
mov rax,qword[rsp+0x220]
mov dword[rsp+0x40],0xf00021
mov dword[rsp+0x38],0
mov dword[rsp+0x30],0
mov qword[rsp+0x28],0
mov eax,dword[rax+0xc]
mov dword[rsp+0x20],eax
mov rax,qword[rsp+0x220]
mov edx,dword[rax]
call qword[sym.imp.GDI32.dll_BitBlt]
mov rax,qword[rsp+0x218]
mov rdx,rsi
lea r12,[rsp+0x1a0]
mov rcx,qword[rax+8]
mov rax,rdi
call rax
mov rax,qword[0x00b3d580]
mov rcx,qword[rsp+0x218]
mov edx,dword[rax]
call fcn.0070bac0
mov rax,qword[0x00b3d540]
mov rcx,qword[rsp+0x218]
mov edx,dword[rax]
call fcn.0070bad0
mov rax,qword[0x00b3d3c0]
mov rax,qword[rax]
mov rdx,qword[rax+8]
mov rax,qword[rsp+0x218]
mov rcx,qword[rax+8]
call rdi
lea rcx,[0x00a9d760]
mov qword[rsp+0xa0],rax
lea rax,[r12+0x10]
mov qword[rsp+0x1a0],rax
call sub.msvcrt.dll_wcslen
lea rsi,[rax+rax]
mov rdx,rsi
sar rdx,1
cmp rdx,7
mov qword[rsp+0xb8],rdx
ja 0x53d12a
cmp rdx,1
mov rcx,qword[rsp+0x1a0]
je 0x53d17c
test rdx,rdx
jne 0x53d158
lea rdi,[rsp+0x100]
xor r11d,r11d
mov qword[rsp+0x1a8],rdx
mov word[rcx+rdx*2],r11w
mov rdx,rbx
mov rcx,rdi
call fcn.0070bba0
lea rax,[0x00b6d280]
mov rcx,qword[rsp+0x110]
mov qword[rsp+0x100],rax
mov rax,qword[sym.imp.USER32.dll_GetDC]
mov qword[rsp+0x88],rax
call rax
mov rsi,qword[rbx+0x68]
mov qword[rsp+0x108],rax
test rsi,rsi
je 0x53d1e7
mov rcx,rax
mov rdx,qword[rsi+8]
mov rax,qword[rsp+0x60]
call rax
lea r8,[rsp+0xd0]
mov r9d,0xc00
mov rdx,r12
mov rcx,rdi
mov rsi,rax
mov dword[rsp+0xd4],0
mov dword[rsp+0xd0],0
mov dword[rsp+0xdc],0
mov dword[rsp+0xd8],0
call fcn.0070b9f0
mov eax,dword[rsp+0xdc]
mov rdx,rsi
mov rcx,qword[rsp+0x108]
mov dword[rsp+0x7c],eax
mov rax,qword[rsp+0x60]
call rax
lea rax,[0x00b6d280]
mov rcx,qword[rsp+0x110]
mov rdx,qword[rsp+0x108]
mov qword[rsp+0x100],rax
mov rax,qword[sym.imp.USER32.dll_ReleaseDC]
mov qword[rsp+0x80],rax
call rax
mov rcx,qword[rsp+0x1a0]
lea rax,[r12+0x10]
cmp rcx,rax
je 0x53c73e
call fcn.00a5af30
mov edi,dword[rsp+0x7c]
mov ecx,dword[rbx+0x234]
mov r10,qword[rsp+0x60]
lea r8d,[rdi+rdi*4]
mov eax,ecx
cdq
add r8d,r8d
idiv r8d
lea r8d,[rax+1]
mov dword[rsp+0x78],eax
mov r14d,eax
mov eax,ecx
mov rcx,qword[rsp+0x218]
cdq
idiv r8d
mov rcx,qword[rcx+8]
mov dword[rsp+0x68],eax
mov rax,qword[rbx+0xd8]
mov rdx,qword[rax+8]
call r10
test r14d,r14d
mov qword[rsp+0xa8],rax
jle 0x53d362
lea rax,[rsp+0x180]
add edi,2
mov esi,dword[rsp+0x68]
mov dword[rsp+0x6c],edi
mov rdi,qword[rsp+0x220]
xor ebp,ebp
mov qword[rsp+0x90],rax
lea rax,[rsp+0x190]
mov qword[rsp+0x70],rax
lea rax,[rsp+0x160]
mov edx,dword[rdi]
mov qword[rsp+0x58],rax
lea rax,[rsp+0x170]
mov qword[rsp+0x50],rax
nop dword[rax+rax]
add ebp,1
cmp esi,dword[rsp+0x6c]
jg 0x53cfa5
cmp dword[rbx+0x238],edx
jl 0x53cb22
mov edi,esi
sub edi,dword[rsp+0x7c]
mov eax,0
sub edi,2
cmovs edi,eax
mov eax,dword[rbx+0x234]
test eax,eax
movsxd rcx,eax
jne 0x53c83b
mov dword[rbx+0x234],1
mov ecx,1
mov eax,1
sub eax,edi
lea r13,[rsp+0x140]
cdqe
imul rax,qword[rbx+0x258]
cqo
idiv rcx
mov rcx,r13
mov rdx,rax
call fcn.006a6100
movabs rax,0x7fffffffffffffff
sub rax,qword[rsp+0x148]
cmp rax,1
jbe 0x53d379
lea rdx,[0x00a9d779]
mov r8d,2
mov rcx,r13
call fcn.00a2de80
mov rdx,qword[rsp+0x70]
mov qword[rsp+0x180],rdx
mov rcx,qword[rax]
lea rdx,[rax+0x10]
cmp rcx,rdx
je 0x53d062
mov qword[rsp+0x180],rcx
mov rcx,qword[rax+0x10]
mov qword[rsp+0x190],rcx
mov rcx,qword[rax+8]
xor r10d,r10d
mov qword[rsp+0x188],rcx
mov rcx,qword[rsp+0x90]
mov qword[rax],rdx
mov qword[rax+8],0
mov rdx,r12
mov byte[rax+0x10],0
lea rax,[r12+0x10]
mov qword[rsp+0x1a8],0
mov word[rsp+0x1b0],r10w
mov qword[rsp+0x1a0],rax
call fcn.0067bbe0
mov rdx,qword[rsp+0x50]
mov r15,qword[rax+8]
mov qword[rsp+0x160],rdx
mov r9,qword[rax]
add r15,r15
mov rax,r9
add rax,r15
je 0x53c941
test r9,r9
jne 0x53c941
lea rcx,[0x00a9d780]
call fcn.00a4f4e0
mov rdx,r15
sar rdx,1
cmp rdx,7
mov rax,rdx
mov qword[rsp+0x120],rdx
ja 0x53cfe1
cmp rax,1
je 0x53d044
test rdx,rdx
mov rcx,qword[rsp+0x50]
lea r14,[rsp+0x120]
jne 0x53d024
xor r9d,r9d
mov qword[rsp+0x168],rax
mov word[rcx+rax*2],r9w
mov rcx,qword[rsp+0x1a0]
lea rax,[r12+0x10]
cmp rcx,rax
je 0x53c9a3
call fcn.00a5af30
mov rcx,qword[rsp+0x180]
cmp rcx,qword[rsp+0x70]
je 0x53c9b7
call fcn.00a5af30
mov rcx,qword[rsp+0x140]
add r13,0x10
cmp rcx,r13
je 0x53c9cd
call fcn.00a5af30
mov rdx,rbx
mov rcx,r14
call fcn.0070bba0
lea rax,[0x00b6d280]
mov rcx,qword[rsp+0x130]
mov qword[rsp+0x120],rax
mov rax,qword[rsp+0x88]
call rax
mov r13,qword[rbx+0x68]
mov qword[rsp+0x128],rax
test r13,r13
je 0x53d080
mov rcx,rax
mov rdx,qword[r13+8]
mov rax,qword[rsp+0x60]
call rax
mov rdx,qword[rsp+0x58]
lea r8,[rsp+0xe0]
mov r9d,0xc00
mov rcx,r14
mov r13,rax
mov dword[rsp+0xe4],0
mov dword[rsp+0xe0],0
mov dword[rsp+0xec],0
mov dword[rsp+0xe8],0
call fcn.0070b9f0
mov r14d,dword[rsp+0xe8]
mov rdx,r13
mov rcx,qword[rsp+0x128]
mov r15d,dword[rsp+0xec]
mov rax,qword[rsp+0x60]
call rax
lea rax,[0x00b6d280]
mov rdx,qword[rsp+0x128]
mov rcx,qword[rsp+0x130]
mov qword[rsp+0x120],rax
mov rax,qword[rsp+0x80]
call rax
lea eax,[r14+1]
cmp eax,dword[rbx+0x238]
jl 0x53cac7
lea eax,[r14+2]
mov dword[rbx+0x238],eax
mov rdx,qword[rsp+0x58]
mov rcx,qword[rsp+0x218]
mov r9d,0x20
mov r8,r12
mov dword[rsp+0x1a0],1
mov dword[rsp+0x1a4],edi
mov dword[rsp+0x1a8],r14d
mov dword[rsp+0x1ac],r15d
call fcn.0070b9f0
mov rcx,qword[rsp+0x160]
cmp rcx,qword[rsp+0x50]
je 0x53cb18
call fcn.00a5af30
mov rax,qword[rsp+0x220]
mov edx,dword[rax]
add esi,dword[rsp+0x68]
cmp dword[rsp+0x78],ebp
jne 0x53c7f0
cmp dword[rbx+0x238],edx
jle 0x53ce08
lea rdi,[rsp+0x160]
mov rdx,qword[rbx+0x258]
mov rcx,rdi
call fcn.006a6100
movabs rax,0x7fffffffffffffff
sub rax,qword[rsp+0x168]
cmp rax,1
jbe 0x53d563
lea rdx,[0x00a9d779]
mov r8d,2
mov rcx,rdi
call fcn.00a2de80
lea rsi,[rsp+0x180]
lea rdx,[rsi+0x10]
mov qword[rsp+0x180],rdx
mov rcx,qword[rax]
lea rdx,[rax+0x10]
cmp rcx,rdx
je 0x53d2f7
mov qword[rsp+0x180],rcx
mov rcx,qword[rax+0x10]
mov qword[rsp+0x190],rcx
mov rcx,qword[rax+8]
lea r13,[rsp+0x140]
xor r8d,r8d
mov qword[rsp+0x188],rcx
mov qword[rax],rdx
mov rcx,rsi
mov qword[rax+8],0
mov byte[rax+0x10],0
lea rax,[r12+0x10]
mov rdx,r12
mov qword[rsp+0x1a8],0
mov word[rsp+0x1b0],r8w
mov qword[rsp+0x1a0],rax
call fcn.0067bbe0
lea rdx,[r13+0x10]
mov rbp,qword[rax+8]
mov qword[rsp+0x140],rdx
mov r14,qword[rax]
add rbp,rbp
mov rax,r14
add rax,rbp
je 0x53cc3e
test r14,r14
jne 0x53cc3e
lea rcx,[0x00a9d780]
call fcn.00a4f4e0
mov rcx,rbp
sar rcx,1
cmp rcx,7
mov rax,rcx
mov qword[rsp+0x120],rcx
ja 0x53d18b
cmp rax,1
je 0x53d242
test rcx,rcx
lea rdx,[r13+0x10]
jne 0x53d371
xor ecx,ecx
mov qword[rsp+0x148],rax
mov word[rdx+rax*2],cx
mov rcx,qword[rsp+0x1a0]
lea rax,[r12+0x10]
cmp rcx,rax
je 0x53cc95
call fcn.00a5af30
mov rcx,qword[rsp+0x180]
lea rax,[rsi+0x10]
cmp rcx,rax
je 0x53ccab
call fcn.00a5af30
mov rcx,qword[rsp+0x160]
add rdi,0x10
cmp rcx,rdi
je 0x53ccc1
call fcn.00a5af30
mov rdx,rbx
mov rcx,rsi
call fcn.0070bba0
lea rax,[0x00b6d280]
mov rcx,qword[rsp+0x190]
mov qword[rsp+0x180],rax
mov rax,qword[rsp+0x88]
call rax
mov rdi,qword[rbx+0x68]
mov qword[rsp+0x188],rax
test rdi,rdi
je 0x53d257
mov rcx,rax
mov rdx,qword[rdi+8]
mov rax,qword[rsp+0x60]
call rax
lea r8,[rsp+0xf0]
mov r9d,0xc00
mov rdx,r13
mov rcx,rsi
mov rdi,rax
mov dword[rsp+0xf4],0
mov dword[rsp+0xf0],0
mov dword[rsp+0xfc],0
mov dword[rsp+0xf8],0
call fcn.0070b9f0
mov esi,dword[rsp+0xf8]
mov rdx,rdi
mov rcx,qword[rsp+0x188]
mov ebp,dword[rsp+0xfc]
mov rax,qword[rsp+0x60]
call rax
lea rax,[0x00b6d280]
mov rdx,qword[rsp+0x188]
mov rcx,qword[rsp+0x190]
mov qword[rsp+0x180],rax
mov rax,qword[rsp+0x80]
call rax
lea eax,[rsi+1]
cmp eax,dword[rbx+0x238]
jl 0x53cdb5
lea eax,[rsi+2]
mov dword[rbx+0x238],eax
mov rcx,qword[rsp+0x218]
mov r9d,0x20
mov r8,r12
mov rdx,r13
mov dword[rsp+0x1a0],1
mov dword[rsp+0x1a4],1
mov dword[rsp+0x1a8],esi
mov dword[rsp+0x1ac],ebp
call fcn.0070b9f0
mov rcx,qword[rsp+0x140]
add r13,0x10
cmp rcx,r13
je 0x53ce08
call fcn.00a5af30
mov rax,qword[rsp+0x218]
mov r14,qword[rsp+0x60]
mov rdx,qword[rsp+0xa8]
mov rcx,qword[rax+8]
mov rax,r14
call rax
lea rdx,[rsp+0xc0]
mov rcx,qword[rbx+0x40]
call qword[sym.imp.USER32.dll_GetClientRect]
mov rax,qword[rbx+0xe0]
mov edi,dword[rsp+0xc8]
mov rdx,qword[rax+8]
mov rax,qword[rsp+0x218]
mov rcx,qword[rax+8]
call r14
movdqu xmm0,xmmword[rbx+0x130]
mov rbp,rax
mov rax,qword[rsp+0x220]
lea rsi,[rsp+0x180]
mov rdx,qword[rsp+0x218]
movdqu xmm1,xmmword[rbx+0x120]
mov r9,r12
mov r8,rsi
mov rcx,rbx
movaps xmmword[rsp+0x1a0],xmm1
movaps xmmword[rsp+0x1b0],xmm0
movdqu xmm1,xmmword[rbx+0x100]
movdqu xmm0,xmmword[rbx+0x110]
mov dword[rsp+0x28],edi
mov qword[rsp+0x20],rax
movaps xmmword[rsp+0x180],xmm1
movaps xmmword[rsp+0x190],xmm0
call fcn.0053c350
mov rdx,rbp
mov rax,qword[rsp+0x218]
mov rcx,qword[rax+8]
mov rax,r14
call rax
mov rax,qword[rbx+0xe8]
mov rdx,qword[rax+8]
mov rax,qword[rsp+0x218]
mov rcx,qword[rax+8]
call r14
movdqu xmm0,xmmword[rbx+0x180]
mov rbp,rax
mov rax,qword[rsp+0x220]
mov rdx,qword[rsp+0x218]
mov r9,r12
movdqu xmm1,xmmword[rbx+0x170]
mov r8,rsi
mov rcx,rbx
movaps xmmword[rsp+0x1a0],xmm1
movaps xmmword[rsp+0x1b0],xmm0
movdqu xmm1,xmmword[rbx+0x150]
movdqu xmm0,xmmword[rbx+0x160]
mov dword[rsp+0x28],edi
mov qword[rsp+0x20],rax
movaps xmmword[rsp+0x180],xmm1
movaps xmmword[rsp+0x190],xmm0
call fcn.0053c350
mov rdx,rbp
mov rax,qword[rsp+0x218]
mov rcx,qword[rax+8]
mov rax,r14
call rax
mov rax,qword[rsp+0x218]
mov rdx,qword[rsp+0xa0]
mov rcx,qword[rax+8]
mov rax,r14
call rax
nop
add rsp,0x1c8
pop rbx
pop rsi
pop rdi
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov rcx,qword[rsp+0x218]
mov r8d,esi
call fcn.0070b610
mov rax,qword[rsp+0x220]
mov rcx,qword[rsp+0x218]
mov r8d,esi
mov edx,dword[rax+8]
add edx,dword[rax]
call fcn.0070b640
mov rax,qword[rsp+0x220]
mov edx,dword[rax]
jmp 0x53c7fd
mov rcx,qword[rsp+0x58]
lea r14,[rsp+0x120]
xor r8d,r8d
mov qword[rsp+0x98],r9
mov rdx,r14
call fcn.00a30910
mov rcx,rax
mov qword[rsp+0x160],rax
mov rax,qword[rsp+0x120]
mov r9,qword[rsp+0x98]
mov qword[rsp+0x170],rax
mov r8,r15
mov rdx,r9
call sub.msvcrt.dll_memcpy
mov rax,qword[rsp+0x120]
mov rcx,qword[rsp+0x160]
jmp 0x53c97c
movzx edx,word[r9]
mov rcx,qword[rsp+0x50]
lea r14,[rsp+0x120]
mov word[rsp+0x170],dx
jmp 0x53c97c
mov r9,qword[rax+0x10]
mov r10,qword[rax+0x18]
mov qword[rsp+0x190],r9
mov qword[rsp+0x198],r10
jmp 0x53c8c1
mov rcx,qword[rbx+0x40]
xor r9d,r9d
xor r8d,r8d
mov edx,0x31
call qword[sym.imp.USER32.dll_SendMessageW]
mov ecx,0x18
mov r15,rax
call fcn.00a5af70
xor r8d,r8d
mov rdx,r15
mov rcx,rax
mov r13,rax
call fcn.0070deb0
mov r15,qword[rbx+0x68]
add dword[r13+0x14],1
mov qword[rbx+0x68],r13
test r15,r15
je 0x53d0cc
sub dword[r15+0x14],1
je 0x53d0e0
mov rax,qword[rsp+0x128]
jmp 0x53ca0e
mov rax,qword[r15]
lea rdx,[0x00923ea0]
mov rax,qword[rax+8]
cmp rax,rdx
jne 0x53d1d9
cmp byte[r15+0x10],0
lea rax,[0x00b6dc60]
mov qword[r15],rax
je 0x53d117
mov rcx,qword[r15+8]
test rcx,rcx
je 0x53d117
call qword[sym.imp.GDI32.dll_DeleteObject]
mov edx,0x18
mov rcx,r15
call fcn.00a5af40
mov r13,qword[rbx+0x68]
jmp 0x53d0cc
lea rdx,[rsp+0xb8]
xor r8d,r8d
mov rcx,r12
call fcn.00a30910
mov rcx,rax
mov qword[rsp+0x1a0],rax
mov rax,qword[rsp+0xb8]
mov qword[rsp+0x1b0],rax
lea rdx,[0x00a9d760]
mov r8,rsi
call sub.msvcrt.dll_memcpy
mov rdx,qword[rsp+0xb8]
mov rcx,qword[rsp+0x1a0]
jmp 0x53c624
movzx eax,word[0x00a9d760]
mov word[rcx],ax
jmp 0x53c624
lea rdx,[rsp+0x120]
mov rcx,r13
xor r8d,r8d
call fcn.00a30910
mov rcx,rax
mov qword[rsp+0x140],rax
mov rax,qword[rsp+0x120]
mov qword[rsp+0x150],rax
mov rdx,r14
mov r8,rbp
call sub.msvcrt.dll_memcpy
mov rax,qword[rsp+0x120]
mov rdx,qword[rsp+0x140]
jmp 0x53cc70
mov rcx,r15
call rax
mov r13,qword[rbx+0x68]
jmp 0x53d0cc
mov rcx,qword[rbx+0x40]
xor r9d,r9d
xor r8d,r8d
mov edx,0x31
call qword[sym.imp.USER32.dll_SendMessageW]
mov ecx,0x18
mov rbp,rax
call fcn.00a5af70
xor r8d,r8d
mov rdx,rbp
mov rcx,rax
mov rsi,rax
call fcn.0070deb0
mov rbp,qword[rbx+0x68]
add dword[rsi+0x14],1
mov qword[rbx+0x68],rsi
test rbp,rbp
je 0x53d235
sub dword[rbp+0x14],1
je 0x53d314
mov rax,qword[rsp+0x108]
jmp 0x53c684
movzx edx,word[r14]
mov word[rsp+0x150],dx
lea rdx,[r13+0x10]
jmp 0x53cc70
mov rcx,qword[rbx+0x40]
xor r9d,r9d
xor r8d,r8d
mov edx,0x31
call qword[sym.imp.USER32.dll_SendMessageW]
mov ecx,0x18
mov rbp,rax
call fcn.00a5af70
xor r8d,r8d
mov rdx,rbp
mov rcx,rax
mov rdi,rax
call fcn.0070deb0
mov rbp,qword[rbx+0x68]
add dword[rdi+0x14],1
mov qword[rbx+0x68],rdi
test rbp,rbp
je 0x53d2ea
sub dword[rbp+0x14],1
jne 0x53d2ea
mov rax,qword[rbp]
lea rdx,[0x00923ea0]
mov rax,qword[rax+8]
cmp rax,rdx
jne 0x53d451
cmp byte[rbp+0x10],0
lea rax,[0x00b6dc60]
mov qword[rbp],rax
je 0x53d2d9
mov rcx,qword[rbp+8]
test rcx,rcx
je 0x53d2d9
call qword[sym.imp.GDI32.dll_DeleteObject]
mov edx,0x18
mov rcx,rbp
call fcn.00a5af40
mov rdi,qword[rbx+0x68]
mov rax,qword[rsp+0x188]
jmp 0x53cd02
mov r9,qword[rax+0x10]
mov r10,qword[rax+0x18]
mov qword[rsp+0x190],r9
mov qword[rsp+0x198],r10
jmp 0x53cbbc
mov rax,qword[rbp]
lea rdx,[0x00923ea0]
mov rax,qword[rax+8]
cmp rax,rdx
jne 0x53d3e0
cmp byte[rbp+0x10],0
lea rax,[0x00b6dc60]
mov qword[rbp],rax
je 0x53d34c
mov rcx,qword[rbp+8]
test rcx,rcx
je 0x53d34c
call qword[sym.imp.GDI32.dll_DeleteObject]
mov edx,0x18
mov rcx,rbp
call fcn.00a5af40
mov rsi,qword[rbx+0x68]
jmp 0x53d235
mov rax,qword[rsp+0x220]
mov edx,dword[rax]
jmp 0x53cb30
mov rcx,rdx
jmp 0x53d1b9
lea rcx,[0x00a9d764]
call fcn.00a4f830
mov rbx,rax
mov rcx,qword[rsp+0x140]
add r13,0x10
cmp rcx,r13
je 0x53d39e
call fcn.00a5af30
mov rax,qword[rsp+0x218]
mov rdx,qword[rsp+0xa8]
mov rcx,qword[rax+8]
mov rax,qword[rsp+0x60]
call rax
mov rax,qword[rsp+0x218]
mov rdx,qword[rsp+0xa0]
mov rcx,qword[rax+8]
mov rax,qword[rsp+0x60]
call rax
mov rcx,rbx
call fcn.008da260
nop dword[rax]
mov rcx,rbp
call rax
mov rsi,qword[rbx+0x68]
jmp 0x53d235
mov rcx,rbp
call rax
mov rdi,qword[rbx+0x68]
jmp 0x53d2ea
lea rax,[0x00b6d280]
mov rdx,qword[rsp+0x128]
mov rcx,qword[rsp+0x130]
mov qword[rsp+0x120],rax
mov rax,qword[rsp+0x80]
call rax
mov rax,qword[rsp+0x58]
mov rcx,qword[rsp+0x160]
add rax,0x10
cmp rcx,rax
jne 0x53d399
jmp 0x53d39e
lea rcx,[0x00a9d764]
call fcn.00a4f830
mov rbx,rax
mov rax,qword[rsp+0x218]
mov rdx,rsi
mov rcx,qword[rax+8]
mov rax,qword[rsp+0x60]
call rax
mov rcx,rbx
call fcn.008da260
mov edx,0x18
mov rcx,r13
mov rbx,rax
call fcn.00a5af40
jmp 0x53d4da
{% endhighlight %}


[similar_1_ref]: /report/fcn.007197a0@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_2_ref]: /report/fcn.005c9510@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_3_ref]: /report/fcn.006b9e90@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_4_ref]: /report/fcn.005c0710@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_5_ref]: /report/fcn.004e55f0@a5905e3c253c25bbaf727a1a18fe8ed1
[virustotal_ref]: https://www.virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1