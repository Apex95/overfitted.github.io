---
layout: post
title:  "sym.MFC80D.DLL_Ordinal_5653 @ ebea46c6b17785efc2ebcb24ad99656c"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** sym.MFC80D.DLL\_Ordinal\_5653
- **Origin (md5):** ebea46c6b17785efc2ebcb24ad99656c
- **VirusTotal:** [virustotal.com/gui/file/ebea46c6b17785efc2ebcb24ad99656c][virustotal_ref]

# Code Tags
<span class="tag" id="LINKING">LINKING</span>
<span class="tag" id="SYSTEM-INFO">SYSTEM-INFO</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/sym.MFC80D.DLL_Ordinal_5653@ebea46c6b17785efc2ebcb24ad99656c">sym.MFC80D.DLL_Ordinal_5653</a><br>@ebea46c6b17785efc2ebcb24ad99656c</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
sub esp, 0x1f0
mov eax, dword[0x783e90cc]
xor eax, ebp
mov dword[ebp-8], eax
push esi
mov dword[ebp-0x1f0], ecx
cmp dword[ebp+0x10], 0
jne off.b52
push 0x8b
push 0x781d90d0
call sym.MFC80D.DLL_Ordinal_1363
test eax, eax
je off.b52
int3
call sym.MFC80D.DLL_Ordinal_1423
mov dword[ebp-0x10c], eax
call dword[sym.imp.MSVCR80D.dll__errno]
mov ecx, dword[eax]
mov dword[ebp-0x110], ecx
call dword[sym.imp.MSVCR80D.dll__errno]
mov dword[eax], 0
mov edx, dword[ebp+0xc]
push edx
mov eax, dword[ebp+8]
push eax
push 0x781d8fd0
push 0xff
push 0x100
lea ecx, [ebp-0x108]
push ecx
call dword[sym.imp.MSVCR80D.dll__snprintf_s]
add esp, 0x18
call dword[sym.imp.MSVCR80D.dll__errno]
cmp dword[eax], 0
je off.b158
call dword[sym.imp.MSVCR80D.dll__errno]
mov edx, dword[eax]
push edx
call fcn.7821eb00
add esp, 4
jmp off.b172
call dword[sym.imp.MSVCR80D.dll__errno]
mov ecx, dword[ebp-0x110]
mov dword[eax], ecx
xor edx, edx
jne off.b63
push 0
push 0x781d908c
lea eax, [ebp-0x108]
push eax
mov ecx, dword[ebp-0x10c]
call sym.MFC80D.DLL_Ordinal_4394
mov ecx, dword[ebp-0x1f0]
mov dword[ecx], eax
push 1
push 0x781d8fc8
lea edx, [ebp-0x108]
push edx
mov ecx, dword[ebp-0x10c]
call sym.MFC80D.DLL_Ordinal_4394
mov ecx, dword[ebp-0x1f0]
mov dword[ecx+4], eax
push 1
push 0x781d9094
lea edx, [ebp-0x108]
push edx
mov ecx, dword[ebp-0x10c]
call sym.MFC80D.DLL_Ordinal_4394
mov ecx, dword[ebp-0x1f0]
mov dword[ecx+0xc], eax
push 0
push 0x781d909c
lea edx, [ebp-0x108]
push edx
mov ecx, dword[ebp-0x10c]
call sym.MFC80D.DLL_Ordinal_4394
mov ecx, dword[ebp-0x1f0]
mov dword[ecx+8], eax
push 0xffffffffffffffff
push 0x781d8ff0
lea edx, [ebp-0x108]
push edx
mov ecx, dword[ebp-0x10c]
call sym.MFC80D.DLL_Ordinal_4394
push eax
push 0xffffffffffffffff
push 0x781d8fe8
lea eax, [ebp-0x108]
push eax
mov ecx, dword[ebp-0x10c]
call sym.MFC80D.DLL_Ordinal_4394
push eax
lea ecx, [ebp-0x1cc]
call fcn.783a6cc0
mov ecx, dword[eax]
mov edx, dword[eax+4]
mov eax, dword[ebp-0x1f0]
mov dword[eax+0x14], ecx
mov dword[eax+0x18], edx
mov ecx, dword[ebp-0x1f0]
add ecx, 0x14
push ecx
mov ecx, dword[ebp+0x10]
call sym.MFC80D.DLL_Ordinal_7599
mov edx, dword[ebp-0x1f0]
cmp dword[edx+8], 0
je off.b1087
push 0x94
push 0
lea eax, [ebp-0x1a8]
push eax
call sub.MSVCR80D.dll_memset
add esp, 0xc
mov dword[ebp-0x1a8], 0x94
lea ecx, [ebp-0x1a8]
push ecx
call dword[sym.imp.KERNEL32.dll_GetVersionExA]
cmp dword[ebp-0x1a4], 4
ja off.b505
cmp dword[ebp-0x1a4], 4
jne off.b989
cmp dword[ebp-0x1a0], 0
je off.b989
push 0x20
call dword[sym.imp.USER32.dll_GetSystemMetrics]
mov edx, dword[ebp-0x1f0]
mov esi, dword[edx+0x14]
sub esi, eax
push 0x4c
call dword[sym.imp.USER32.dll_GetSystemMetrics]
cmp esi, eax
jge off.b565
push 0x20
call dword[sym.imp.USER32.dll_GetSystemMetrics]
mov esi, eax
push 0x4c
call dword[sym.imp.USER32.dll_GetSystemMetrics]
add esi, eax
mov eax, dword[ebp-0x1f0]
mov dword[eax+0x14], esi
push 0x20
call dword[sym.imp.USER32.dll_GetSystemMetrics]
mov esi, eax
mov ecx, dword[ebp-0x1f0]
add esi, dword[ecx+0x14]
push 0x4e
call dword[sym.imp.USER32.dll_GetSystemMetrics]
cmp esi, eax
jle off.b627
push 0x20
call dword[sym.imp.USER32.dll_GetSystemMetrics]
mov esi, eax
neg esi
push 0x4e
call dword[sym.imp.USER32.dll_GetSystemMetrics]
add esi, eax
mov edx, dword[ebp-0x1f0]
mov dword[edx+0x14], esi
push 0x21
call dword[sym.imp.USER32.dll_GetSystemMetrics]
mov ecx, dword[ebp-0x1f0]
mov esi, dword[ecx+0x18]
sub esi, eax
push 0x33
call dword[sym.imp.USER32.dll_GetSystemMetrics]
sub esi, eax
push 0x4d
call dword[sym.imp.USER32.dll_GetSystemMetrics]
cmp esi, eax
jge off.b707
push 0x21
call dword[sym.imp.USER32.dll_GetSystemMetrics]
mov esi, eax
push 0x33
call dword[sym.imp.USER32.dll_GetSystemMetrics]
add esi, eax
push 0x4d
call dword[sym.imp.USER32.dll_GetSystemMetrics]
add esi, eax
mov edx, dword[ebp-0x1f0]
mov dword[edx+0x18], esi
push 0x21
call dword[sym.imp.USER32.dll_GetSystemMetrics]
mov ecx, dword[ebp-0x1f0]
mov esi, dword[ecx+0x18]
add esi, eax
push 0x33
call dword[sym.imp.USER32.dll_GetSystemMetrics]
add esi, eax
push 0x4f
call dword[sym.imp.USER32.dll_GetSystemMetrics]
cmp esi, eax
jle off.b789
push 0x21
call dword[sym.imp.USER32.dll_GetSystemMetrics]
mov esi, eax
neg esi
push 0x33
call dword[sym.imp.USER32.dll_GetSystemMetrics]
sub esi, eax
push 0x4f
call dword[sym.imp.USER32.dll_GetSystemMetrics]
add esi, eax
mov edx, dword[ebp-0x1f0]
mov dword[edx+0x18], esi
push 0x781d9108
call dword[sym.imp.KERNEL32.dll_GetModuleHandleA]
mov dword[ebp-0x1ac], eax
cmp dword[ebp-0x1ac], 0
jne off.b835
push 0xac
push 0x781d90d0
call sym.MFC80D.DLL_Ordinal_1363
test eax, eax
je off.b835
int3
cmp dword[ebp-0x1ac], 0
je off.b987
mov dword[ebp-0x1b0], 0
push 0x781d52a8
mov ecx, dword[ebp-0x1ac]
push ecx
call dword[sym.imp.KERNEL32.dll_GetProcAddress]
mov dword[ebp-0x1b0], eax
cmp dword[ebp-0x1b0], 0
je off.b987
mov edx, dword[ebp-0x1f0]
mov eax, dword[edx+0x14]
mov ecx, dword[edx+0x18]
mov dword[ebp-0x1d4], eax
mov dword[ebp-0x1d0], ecx
push 0
mov edx, dword[ebp-0x1d0]
push edx
mov eax, dword[ebp-0x1d4]
push eax
call dword[ebp-0x1b0]
test eax, eax
jne off.b987
push 0x20
call dword[sym.imp.USER32.dll_GetSystemMetrics]
mov ecx, dword[ebp-0x1f0]
mov dword[ecx+0x14], eax
push 0x33
call dword[sym.imp.USER32.dll_GetSystemMetrics]
mov esi, eax
push 0x21
call dword[sym.imp.USER32.dll_GetSystemMetrics]
add esi, eax
mov edx, dword[ebp-0x1f0]
mov dword[edx+0x18], esi
jmp off.b1087
push 0x20
call dword[sym.imp.USER32.dll_GetSystemMetrics]
mov ecx, dword[ebp-0x1f0]
mov edx, dword[ecx+0x14]
sub edx, eax
jns off.b1027
push 0x20
call dword[sym.imp.USER32.dll_GetSystemMetrics]
mov ecx, dword[ebp-0x1f0]
mov dword[ecx+0x14], eax
push 0x21
call dword[sym.imp.USER32.dll_GetSystemMetrics]
mov edx, dword[ebp-0x1f0]
mov esi, dword[edx+0x18]
sub esi, eax
push 0x33
call dword[sym.imp.USER32.dll_GetSystemMetrics]
sub esi, eax
jns off.b1087
push 0x21
call dword[sym.imp.USER32.dll_GetSystemMetrics]
mov esi, eax
push 0x33
call dword[sym.imp.USER32.dll_GetSystemMetrics]
add esi, eax
mov eax, dword[ebp-0x1f0]
mov dword[eax+0x18], esi
push 0x7fff
push 0x781d8ff8
lea ecx, [ebp-0x108]
push ecx
mov ecx, dword[ebp-0x10c]
call sym.MFC80D.DLL_Ordinal_4394
mov edx, dword[ebp-0x1f0]
mov dword[edx+0x1c], eax
push 0
push 0x781d9004
lea eax, [ebp-0x108]
push eax
mov ecx, dword[ebp-0x10c]
call sym.MFC80D.DLL_Ordinal_4394
mov ecx, dword[ebp-0x1f0]
mov dword[ecx+0x20], eax
mov edx, dword[ebp-0x1f0]
cmp dword[edx+0x20], 0
je off.b1504
push 0
push 0x781d900c
lea eax, [ebp-0x108]
push eax
mov ecx, dword[ebp-0x10c]
call sym.MFC80D.DLL_Ordinal_4394
mov ecx, dword[ebp-0x1f0]
mov dword[ecx+0x24], eax
push 0
push 0x781d9048
lea edx, [ebp-0x108]
push edx
mov ecx, dword[ebp-0x10c]
call sym.MFC80D.DLL_Ordinal_4394
push eax
push 0
push 0x781d9028
lea eax, [ebp-0x108]
push eax
mov ecx, dword[ebp-0x10c]
call sym.MFC80D.DLL_Ordinal_4394
push eax
push 0
push 0x781d9038
lea ecx, [ebp-0x108]
push ecx
mov ecx, dword[ebp-0x10c]
call sym.MFC80D.DLL_Ordinal_4394
push eax
push 0
push 0x781d9018
lea edx, [ebp-0x108]
push edx
mov ecx, dword[ebp-0x10c]
call sym.MFC80D.DLL_Ordinal_4394
push eax
lea ecx, [ebp-0x1e4]
call fcn.783a70d0
mov ecx, dword[ebp-0x1f0]
add ecx, 0x28
mov edx, dword[eax]
mov dword[ecx], edx
mov edx, dword[eax+4]
mov dword[ecx+4], edx
mov edx, dword[eax+8]
mov dword[ecx+8], edx
mov eax, dword[eax+0xc]
mov dword[ecx+0xc], eax
mov ecx, dword[ebp-0x1f0]
add ecx, 0x28
push ecx
mov ecx, dword[ebp+0x10]
call sym.MFC80D.DLL_Ordinal_7600
push 0
push 0x781d905c
lea edx, [ebp-0x108]
push edx
mov ecx, dword[ebp-0x10c]
call sym.MFC80D.DLL_Ordinal_4394
mov ecx, dword[ebp-0x1f0]
mov dword[ecx+0x38], eax
push 0
push 0x781d907c
lea edx, [ebp-0x108]
push edx
mov ecx, dword[ebp-0x10c]
call sym.MFC80D.DLL_Ordinal_4394
push eax
push 0
push 0x781d906c
lea eax, [ebp-0x108]
push eax
mov ecx, dword[ebp-0x10c]
call sym.MFC80D.DLL_Ordinal_4394
push eax
lea ecx, [ebp-0x1ec]
call fcn.783a6cc0
mov ecx, dword[eax]
mov edx, dword[eax+4]
mov eax, dword[ebp-0x1f0]
mov dword[eax+0x3c], ecx
mov dword[eax+0x40], edx
mov ecx, dword[ebp-0x1f0]
add ecx, 0x3c
push ecx
mov ecx, dword[ebp+0x10]
call sym.MFC80D.DLL_Ordinal_7599
push 0
push 0x781d90a8
lea edx, [ebp-0x108]
push edx
mov ecx, dword[ebp-0x10c]
call sym.MFC80D.DLL_Ordinal_4394
mov dword[ebp-4], eax
mov dword[ebp-0x1b4], 0
jmp off.b1559
mov eax, dword[ebp-0x1b4]
add eax, 1
mov dword[ebp-0x1b4], eax
mov ecx, dword[ebp-0x1b4]
cmp ecx, dword[ebp-4]
jge off.b1644
mov edx, dword[ebp-0x1b4]
push edx
push 0x781d90c8
push 0x10
lea eax, [ebp-0x1c4]
push eax
call dword[sym.imp.MSVCR80D.dll_sprintf_s]
add esp, 0x10
push 0
lea ecx, [ebp-0x1c4]
push ecx
lea edx, [ebp-0x108]
push edx
mov ecx, dword[ebp-0x10c]
call sym.MFC80D.DLL_Ordinal_4394
push eax
mov ecx, dword[ebp-0x1f0]
add ecx, 0x44
call sym.MFC80D.DLL_Ordinal_1211
jmp off.b1544
mov eax, dword[ebp-0x1f0]
xor ecx, ecx
cmp dword[eax], 0
setne cl
mov eax, ecx
pop esi
mov ecx, dword[ebp-8]
xor ecx, ebp
call fcn.783a2cd0
mov esp, ebp
pop ebp
ret 0xc

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/ebea46c6b17785efc2ebcb24ad99656c