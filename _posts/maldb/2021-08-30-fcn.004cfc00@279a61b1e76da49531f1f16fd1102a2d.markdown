---
layout: post
title:  "fcn.004cfc00 @ 279a61b1e76da49531f1f16fd1102a2d"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.004cfc00
- **Origin (md5):** 279a61b1e76da49531f1f16fd1102a2d
- **VirusTotal:** [virustotal.com/gui/file/279a61b1e76da49531f1f16fd1102a2d][virustotal_ref]

# Code Tags
<span class="tag" id="SOCKET">SOCKET</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [1033.3326416015625, -1197.7945556640625, '<b><a href="/report/fcn.004cfc00@279a61b1e76da49531f1f16fd1102a2d">fcn.004cfc00</a><br>@279a61b1e76da49531f1f16fd1102a2d</b><br>', 'point { fill-color: #e0440e; }'],
[-1033.3326416015625, 1197.7947998046875, '<b><a href="/report/fcn.004608d0@289859175c221b107317af7727d26c17">fcn.004608d0</a><br>@289859175c221b107317af7727d26c17</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

sub esp, 0x9a8
mov eax, dword[0x53ebd0]
xor eax, esp
mov dword[esp+0x9a4], eax
push ebx
push ebp
mov ebp, dword[esi]
push edi
xor ebx, ebx
push 0xff
lea eax, [esp+0xb1]
push ebx
push eax
mov dword[esp+0x1c], ebp
mov dword[esp+0x18], 0xffffffff
mov byte[esp+0xb8], bl
call fcn.00490b70
mov edi, dword[ebp+0x3b8]
mov dword[esp+0x2c], ebx
mov eax, dword[ebp+0x3b8]
add esp, 0xc
mov dword[esp+0x1c], ebx
mov dword[esp+0x18], ebx
mov dword[esp+0x24], 1
cmp eax, ebx
je off.b414
lea edx, [eax+1]
nop
mov cl, byte[eax]
inc eax
test cl, cl
jne off.b112
sub eax, edx
cmp eax, 1
jbe off.b414
mov eax, edi
lea edx, [eax+1]
mov cl, byte[eax]
inc eax
test cl, cl
jne off.b135
sub eax, edx
cmp eax, 0x16
jae off.b156
mov eax, 0x16
jmp off.b170
mov eax, edi
lea edx, [eax+1]
mov cl, byte[eax]
inc eax
test cl, cl
jne off.b161
sub eax, edx
inc eax
push 1
push eax
call dword[0x540208]
mov ebx, eax
add esp, 8
test ebx, ebx
jne off.b216
pop edi
pop ebp
lea eax, [ebx+0x1b]
pop ebx
mov ecx, dword[esp+0x9a4]
xor ecx, esp
call fcn.00490ace
add esp, 0x9a8
ret
cmp byte[edi], 0x3a
jne off.b521
mov ebp, edi
test ebp, ebp
je off.b334
push 0x3a
push ebp
call fcn.004a7160
mov edi, eax
add esp, 8
test edi, edi
je off.b334
push 0xa
lea edx, [edi+1]
push 0
push edx
call fcn.00499f5a
push eax
call fcn.004d7d80
movzx ebp, ax
push 0x2d
push edi
mov dword[esp+0x34], ebp
call fcn.004a7160
xor edi, edi
add esp, 0x18
cmp eax, edi
je off.b579
push 0xa
inc eax
push edi
push eax
call fcn.00499f5a
push eax
call fcn.004d7d80
movzx eax, ax
add esp, 0x10
mov dword[esp+0x18], eax
cmp bp, ax
jbe off.b334
mov dword[esp+0x18], edi
mov dword[esp+0x1c], edi
cmp byte[ebx], 0
je off.b414
mov edx, dword[esi+0x88]
mov eax, dword[esi+0x4c]
push 0x401
lea ecx, [esp+0x1b0]
push ecx
mov ecx, dword[eax+0x18]
push ebx
push edx
push ecx
call fcn.004b6880
mov edx, dword[esi+0x4c]
add esp, 4
push eax
mov eax, dword[edx+4]
push eax
call fcn.004b6880
add esp, 0x18
sub eax, 0
je off.b591
sub eax, 1
je off.b492
sub eax, 1
je off.b635
mov eax, dword[esi+0x154]
lea ecx, [esp+0x14]
push ecx
lea edx, [esp+0x30]
push edx
push eax
mov dword[esp+0x20], 0x80
call dword[sym.imp.WS2_32.dll_getsockname]
test eax, eax
je off.b595
call dword[sym.imp.WS2_32.dll_WSAGetLastError]
push eax
push esi
call fcn.004b5640
mov ecx, dword[esp+0x18]
push eax
push str.getsockname___failed:__s
push ecx
call fcn.004c0450
push ebx
call dword[0x5401fc]
add esp, 0x18
pop edi
pop ebp
mov eax, 0x1e
pop ebx
mov ecx, dword[esp+0x9a4]
xor ecx, esp
call fcn.00490ace
add esp, 0x9a8
ret
push 0x3a
push edi
call fcn.004a7160
mov ebp, eax
add esp, 8
test ebp, ebp
je off.b558
mov ecx, ebp
sub ecx, edi
push ecx
push edi
push ebx
call fcn.00498420
add esp, 0xc
jmp off.b227
mov edx, ebx
mov eax, edi
sub edx, edi
mov cl, byte[eax]
mov byte[edx+eax], cl
inc eax
test cl, cl
jne off.b564
jmp off.b334
movzx eax, bp
mov dword[esp+0x18], eax
jmp off.b334
mov edi, ebx
jmp off.b642
movzx ecx, word[esp+0x2c]
push 0x401
lea edx, [esp+0x1b0]
push edx
lea eax, [esp+0x38]
push eax
push ecx
call fcn.004c59b0
add esp, 0x10
mov dword[esp+0x24], 0
lea edi, [esp+0x1ac]
lea edx, [esp+0x20]
push edx
push 0
push edi
push esi
call fcn.004b7230
add esp, 0x10
cmp eax, 1
jne off.b678
lea eax, [esp+0x20]
push eax
push esi
call fcn.004b6c00
add esp, 8
mov eax, dword[esp+0x20]
test eax, eax
je off.b706
mov ecx, dword[esp+0x10]
mov ebp, dword[eax]
push eax
push ecx
call fcn.004b7700
add esp, 8
test ebp, ebp
jne off.b761
mov edx, dword[esp+0x10]
push edi
push str.failed_to_resolve_the_address_provided_to_PORT:__s
push edx
call fcn.004c0450
push ebx
call dword[0x5401fc]
add esp, 0x10
pop edi
pop ebp
mov eax, 0x1e
pop ebx
mov ecx, dword[esp+0x9a4]
xor ecx, esp
call fcn.00490ace
add esp, 0x9a8
ret
push ebx
call dword[0x5401fc]
mov ebx, dword[sym.imp.WS2_32.dll_WSAGetLastError]
add esp, 4
mov dword[esp+0xc], 0xffffffff
xor edi, edi
lea eax, [esp+0xc]
push eax
push 0
push ebp
push esi
call fcn.004c2e90
add esp, 0x10
mov dword[esp+0x28], eax
test eax, eax
je off.b825
call ebx
mov ebp, dword[ebp+0x1c]
mov edi, eax
test ebp, ebp
jne off.b787
jmp off.b829
test ebp, ebp
jne off.b884
push edi
push esi
call fcn.004b5640
mov ecx, dword[esp+0x18]
push eax
push str.socket_failure:__s
push ecx
call fcn.004c0450
add esp, 0x14
pop edi
pop ebp
mov eax, 0x1e
pop ebx
mov ecx, dword[esp+0x9a4]
xor ecx, esp
call fcn.00490ace
add esp, 0x9a8
ret
mov edx, dword[ebp+0x10]
mov eax, dword[ebp+0x18]
push edx
push eax
lea ecx, [esp+0x34]
push ecx
call fcn.004962d0
mov eax, dword[esp+0x28]
mov edx, dword[ebp+0x10]
add esp, 0xc
mov dword[esp+0x14], edx
movzx edi, ax
cmp ax, word[esp+0x18]
ja off.b1248
mov ebx, dword[esp+0x24]
cmp word[esp+0x2c], 2
jne off.b954
push edi
call dword[sym.imp.WS2_32.dll_htons]
mov word[esp+0x2e], ax
mov eax, dword[esp+0x14]
mov edx, dword[esp+0xc]
push eax
lea ecx, [esp+0x30]
push ecx
push edx
call dword[sym.imp.WS2_32.dll_bind]
test eax, eax
je off.b1241
call dword[sym.imp.WS2_32.dll_WSAGetLastError]
test ebx, ebx
je off.b1074
cmp eax, 0x2741
jne off.b1074
push eax
push esi
call fcn.004b5640
push eax
movzx eax, di
mov edi, dword[esp+0x1c]
push eax
push str.bind_port_hu__on_non_local_address_failed:__s_n
push edi
call fcn.004c03c0
mov eax, dword[esi+0x154]
add esp, 0x18
lea ecx, [esp+0x14]
push ecx
lea edx, [esp+0x30]
push edx
push eax
mov dword[esp+0x20], 0x80
call dword[sym.imp.WS2_32.dll_getsockname]
test eax, eax
jne off.b1103
movzx edi, word[esp+0x1c]
xor ebx, ebx
jmp off.b1087
cmp eax, 0x2740
je off.b1086
cmp eax, 0xd
jne off.b1171
inc edi
cmp di, word[esp+0x18]
jbe off.b934
jmp off.b1248
call dword[sym.imp.WS2_32.dll_WSAGetLastError]
push eax
push esi
call fcn.004b5640
push eax
push str.getsockname___failed:__s
push edi
call fcn.004c0450
mov ecx, dword[esp+0x20]
push ecx
push esi
call fcn.004c2e30
add esp, 0x1c
pop edi
pop ebp
mov eax, 0x1e
pop ebx
mov ecx, dword[esp+0x9a4]
xor ecx, esp
call fcn.00490ace
add esp, 0x9a8
ret
push eax
push esi
call fcn.004b5640
push eax
mov eax, dword[esp+0x1c]
movzx edx, di
push edx
push str.bind_port_hu__failed:__s
push eax
call fcn.004c0450
mov ecx, dword[esp+0x24]
push ecx
push esi
call fcn.004c2e30
add esp, 0x20
pop edi
pop ebp
mov eax, 0x1e
pop ebx
mov ecx, dword[esp+0x9a4]
xor ecx, esp
call fcn.00490ace
add esp, 0x9a8
ret
cmp di, word[esp+0x18]
jbe off.b1306
mov edx, dword[esp+0x10]
push str.bind___failed__we_ran_out_of_ports_
push edx
call fcn.004c0450
mov eax, dword[esp+0x14]
push eax
push esi
call fcn.004c2e30
add esp, 0x10
pop edi
pop ebp
mov eax, 0x1e
pop ebx
mov ecx, dword[esp+0x9a4]
xor ecx, esp
call fcn.00490ace
add esp, 0x9a8
ret
mov eax, dword[esp+0xc]
lea ecx, [esp+0x14]
push ecx
lea edx, [esp+0x30]
push edx
push eax
mov dword[esp+0x20], 0x80
call dword[sym.imp.WS2_32.dll_getsockname]
test eax, eax
je off.b1411
call dword[sym.imp.WS2_32.dll_WSAGetLastError]
push eax
push esi
call fcn.004b5640
push eax
push str.getsockname___failed:__s
mov ecx, dword[esp+0x20]
push ecx
call fcn.004c0450
mov edx, dword[esp+0x20]
push edx
push esi
call fcn.004c2e30
add esp, 0x1c
pop edi
pop ebp
mov eax, 0x1e
pop ebx
mov ecx, dword[esp+0x9a4]
xor ecx, esp
call fcn.00490ace
add esp, 0x9a8
ret
mov eax, dword[esp+0xc]
push 1
push eax
call dword[sym.imp.WS2_32.dll_listen]
test eax, eax
je off.b1449
call dword[sym.imp.WS2_32.dll_WSAGetLastError]
push eax
push esi
call fcn.004b5640
push eax
push str.socket_failure:__s
jmp off.b1358
push 0x100
lea eax, [esp+0xb0]
push eax
push ebp
call fcn.004b6f30
mov ebp, dword[esp+0x9c4]
add esp, 0xc
cmp ebp, 2
je off.b1560
mov ebx, dword[sym.imp.WS2_32.dll_ntohs]
mov cx, word[esp+0x2c]
cmp dword[esi+0x218], 0
jne off.b1507
test ebp, ebp
je off.b1554
cmp ebp, 1
jne off.b1518
cmp cx, 2
jne off.b1554
movzx eax, cx
sub eax, 2
jne off.b1554
mov ecx, dword[esp+0x2e]
push ecx
call ebx
movzx edi, ax
test ebp, ebp
je off.b1649
cmp ebp, 1
je off.b1759
mov cx, word[esp+0x2c]
inc ebp
cmp ebp, 2
jne off.b1494
mov ebx, dword[esp+0x28]
mov dword[esi+0x468], ebp
mov eax, dword[esi+0x158]
cmp eax, 0xffffffff
je off.b1591
push eax
push esi
call fcn.004c2e30
add esp, 8
mov eax, dword[esp+0xc]
mov dword[esi+0x158], eax
mov dword[esi+0x1fc], 1
mov eax, 0x1c
mov ecx, esi
call fcn.004cfac0
mov ecx, dword[esp+0x9b0]
pop edi
pop ebp
mov eax, ebx
pop ebx
xor ecx, esp
call fcn.00490ace
add esp, 0x9a8
ret
xor ecx, ecx
cmp word[esp+0x2c], 2
movzx edx, di
setne cl
push edx
lea eax, [esp+0xb0]
push eax
lea edi, [esi+0x400]
inc ecx
push ecx
push str.EPRT
push str._s__d_s_hu
push edi
call fcn.004de890
mov ebx, eax
add esp, 0x18
test ebx, ebx
je off.b1564
push ebx
call fcn.004b4ca0
mov edx, dword[esp+0x14]
push eax
push str.Failure_sending_EPRT_command:__s
push edx
call fcn.004c0450
mov eax, dword[esp+0x1c]
push eax
push esi
call fcn.004c2e30
add esp, 0x18
mov dword[edi+0x68], 1
xor eax, eax
jmp off.b1616
lea ecx, [esp+0x5b0]
lea edx, [esp+0xac]
lea ecx, [ecx]
mov al, byte[edx]
test al, al
je off.b1799
cmp al, 0x2e
jne off.b1791
mov byte[ecx], 0x2c
jmp off.b1793
mov byte[ecx], al
inc ecx
add edx, 1
jne off.b1776
movzx eax, di
mov edx, eax
and edx, 0xff
push edx
shr eax, 8
push eax
push str.__d__d
push 0x14
push ecx
mov byte[ecx], 0
call fcn.004c3f20
lea eax, [esp+0x5c4]
push eax
push str.PORT
lea eax, [esi+0x400]
push str._s__s_
push eax
call fcn.004de890
mov ebx, eax
add esp, 0x24
test ebx, ebx
je off.b1564
push ebx
call fcn.004b4ca0
mov ecx, dword[esp+0x14]
push eax
push str.Failure_sending_PORT_command:__s
push ecx
call fcn.004c0450
mov edx, dword[esp+0x1c]
push edx
push esi
call fcn.004c2e30
add esp, 0x18
xor eax, eax
jmp off.b1616

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/279a61b1e76da49531f1f16fd1102a2d