---
layout: post
title:  "fcn.1060e28c @ 89dc67d2f980e8488f97b1bf8cb24258"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.1060e28c
- **Origin (md5):** 89dc67d2f980e8488f97b1bf8cb24258
- **VirusTotal:** [virustotal.com/gui/file/89dc67d2f980e8488f97b1bf8cb24258][virustotal_ref]

# Code Tags
<span class="tag" id="PROCESS">PROCESS</span>


# Behaviour Tags
<span class="bhv-tag" id="SCREENSHOTS_FOREGROUND_WINDOW">SCREENSHOTS_FOREGROUND_WINDOW / 0.056455981693152885</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-371.5606689453125, 15.04399585723877, '<b><a href="/report/fcn.1060e28c@89dc67d2f980e8488f97b1bf8cb24258">fcn.1060e28c</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>push eax<br>call fcn.1001041e<br>jmp 0x10679ea5<br>mov esp, 0x824<br>add byte[ecx-0x75], dl<br>mov word[esp+eax], fs<br>add byte[eax], al<br>add byte[ecx-0x75], dl<br>mov word[esp+eax], fs<br>add byte[eax], al<br>add byte[ebx-0x18], dl<br>add dword[eax], eax<br>add byte[eax], al<br>jne 0x1060e2de<br>lea ebx, [ebx-0x2c212]<br>jmp ebx<br>lea esp, [esp+4]<br>push ebx<br>push eax<br>push esi<br>call fcn.105d2593<br>jae 0x1060e2f4<br>inc edx<br>cld <br>push dword[ebx+0x5a]<br>pop edx<br>cmp eax, ebx<br>je 0x10639289<br>jmp 0x105e5970<br>std <br>push dword[edi+0x1d]<br>jo 0x1060e295<br>mov edx, 0xdd310d17<br>mov edx, 0x354bc720<br>rcr byte[eax+0x1d69a87e], cl<br>loope 0x1060e265<br>out dx, eax<br>out dx, al<br>out dx, al<br>jo 0x1060e2b0<br>daa <br>dec ebp<br>fdivr dword[edx-0x209fdae9]<br>mov edx, 0x2e44f620<br>fistp qword[edx+0x2e44f620]<br>shl byte[esi+0x2b69a87e], cl<br>fdivr qword[edx]<br>out dx, eax<br>out dx, al<br>imul ebp, dword[ebx], 0x65ef3adc<br>out dx, al<br>jo 0x1060e2ca<br>ret 0xdf15<br>lea ebx, [ecx+0x68]<br>jmp 0x1060e331<br>push 0xa2f03aeb<br>into <br>mov ah, byte[edx+ebp+0x32f03ae6]<br>cwde <br>popal <br>in eax, 0x2d<br>xor dword[edx-0x36], ebp<br>xor cl, byte[ebx+ebp*8]<br>mov ebp, 0x87cb2e1f<br>movsb byte<br>mov dword[0xeb2ae207], esp<br>sbb byte[esi-0x5b7e5f72], ah<br>mov ch, 0xdc<br>cmp al, 0xf0<br>cmp edx, dword[edi-0x50011aa3]<br>das <br>shl bl, cl<br>jne 0x1060e2d4<br>pop es<br>loop 0x1060e340<br>jmp 0x1060e330<br>imul eax, esi, 0x69e5589e<br>in eax, 0x69<br>imul esp, ebx, 0xa21fbadf<br>into <br>mov ah, byte[ecx+0x7bf0407f]<br>jnp 0x1060e3a1<br>jecxz 0x1060e313<br>mov edx, 0x8acea21f<br>movsb byte<br>and dword[edi+0x40], edi<br>pushal <br>in eax, 0xfe<br>scasd eax, dword<br>das <br>sal cl, cl<br>test dword[eax+0x5fd26169], ebp<br>in eax, 0xc0<br>jno 0x1060e2f2<br>out dx, eax<br>pop edi<br>shl cl, cl<br>mov ebp, 0x64d58a1f<br>test byte[ebx], cl<br>inc ebx<br>cmp eax, 0x68750cd1<br>fnstsw word[edx-0x9704ce1]<br>fld xword[ebx]<br>cmp esp, dword[ebx]<br>movsb byte<br>and dword[edi+0x40], edi<br>mov ebp, 0x83274e34<br>lcall 0x34be, 0x871c434<br>cld <br>inc eax<br>cmp al, 0xd1<br>aam 0x69<br>leave <br>sbb dword[edx-0x157711cc], 0xc0ba34bd<br>sub eax, 0x8e593d2<br>push 0x35<br>sahf <br>xor al, 0xd2<br>dec edx<br>and ebp, dword[edx+0x33e90da5]<br>ror byte[edx+0x516a08d3], cl<br>push 0x51<br>insb byte<br>xor al, 0xd2<br>mov ch, 0xeb<br>mov byte[0x899785a5], al<br>movsb byte<br>add dword[esi+0x44], esp<br>shl dword[edx], 1<br>aad 0x57<br>fstp xword[edx-0xb9f95cc]<br>or eax, 0xffffffb3<br>mov al, byte[0x805c61ef]<br>movsb byte<br>dec ecx<br>mov edi, dword[ebx-0x24]<br>mov esi, esi<br>mov dh, 0x97<br>out dx, eax<br>out 0x82, eax<br>ja 0x1060e3c2<br>pushal <br>hlt <br>jle 0x1060e3b9<br>insb byte<br>mov eax, dword[0xa32284dc]<br>xchg edx, eax<br>or byte[eax], al<br>add byte[eax], al<br>add byte[eax], al<br>jl 0x1060e384<br>and al, 4<br>pop esi<br>pop ebp<br>pop eax<br>call dword[sym.imp.USER32.dll_GetWindowThreadProcessId]<br>call dword[sym.imp.KERNEL32.dll_GetCurrentProcessId]<br>push eax<br>mov eax, dword[esp]<br>push edi<br>push ebp<br>pushfd <br>xor edi, edi<br>add edi, dword[esp+4]<br>mov ebp, 0x5f761d58<br>lea ebp, [ebp+0x2bb44424]<br>add edi, ebp<br>mov ebp, 0x2490c010<br>pushfd <br>call 0x1060e434<br>je 0x1060e3b6<br>add al, 0x24<br>loopne 0x1060e43d<br>push es<br>add bl, al<br>jnp 0x1060e3ce<br>nop <br>xor eax, eax<br>mov al, byte[esi+4]<br>nop <br>rol eax, 2<br>add eax, edi<br>mov al, byte[eax]<br>and eax, 0xff<br>jmp 0x106473ee<br>push edx<br>mov edx, dword[esp+4]<br>lea esp, [esp-4]<br>push eax<br>push edx<br>mov edx, dword[esp+0xc]<br>ret 0x10<br>xor eax, eax<br>jmp 0x10679ea5<br>push ax<br>mov edx, dword[esi]<br>add edx, dword[edi]<br>add edx, 0x75e3d117<br>lea esi, [esi+5]<br>push 0x6b1a724a<br>mov dword[esp], edx<br>jmp 0x106105bb<br>mov byte[ebp-4], 0<br>push 0x20<br>mov dword[esi+4], eax<br>call fcn.100ff54d<br>pop ecx<br>mov dword[ebp-0x10], eax<br>mov byte[ebp-4], 2<br>cmp eax, ebx<br>pushfd <br>call 0x10679ec4<br>jecxz 0x10679e46<br>add al, 0x24<br>mov esp, dword[ebx]<br>idiv bh<br>ret <br><eoc> ', 'point { fill-color: #e0440e; }'],
[313.3982238769531, -356.290771484375, '<b><a href="/report/fcn.10a6c13a@89dc67d2f980e8488f97b1bf8cb24258">fcn.10a6c13a</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>push 0x5c50d058<br>push ebp<br>lea ebp, [esp-0x78]<br>sub esp, 0x11c<br>push edi<br>call fcn.10a74e29<br>call fcn.10abade6<br>jge 0x10a6c1ad<br>je 0x10a909f8<br>jmp 0x10ac1f01<br>sub eax, 0xf2f606be<br>and edi, dword[ebx+0x251a4306]<br>mov ebx, 0x772ef71b<br>shl byte[ebx], cl<br>lahf <br>bound ebp, qword[ecx+0x4d]<br>out dx, al<br>and bh, byte[ebx+0x269fa80a]<br>mov ebx, 0xc900b30a<br>movsb byte<br>out dx, al<br>mov byte[0xbdfdf080], al<br>into <br>movsb byte<br>dec edx<br>cmpsb byte[esi], byte<br>xor al, 0xd6<br>add eax, 0x8736e5a7<br>retf 0xeba4<br>mov eax, dword[ebp-4]<br>jmp 0x1006df79<br>pop eax<br>push ss<br>arpl word[esi-0x41d245a0], sp<br>sbb al, 0x6f<br>dec edi<br>sub bh, byte[esi+0x787bde38]<br>sar byte[edi+edx*2+0x60], cl<br>imul ebx, dword[ecx], 0x38bb26a1<br>jne 0x10a909db<br>lodsb al, byte[esi]<br>retf 0xe6d5<br>push ecx<br>or eax, 0xbb81efe7<br>mov ebp, 0x79a32be3<br>shl byte[edi+0x39695edf], cl<br>sbb esi, dword[edx+edx*8-0x71]<br>push edi<br>call fcn.10acfbf5<br>mov esi, eax<br>pop ecx<br>test esi, esi<br>je 0x10a6eff1<br>call[eax+ebp*8+1] <br>pushfd <br>call 0x10a90a10<br>je 0x10a90992<br>add al, 0x24<br>loope 0x10a90a2d<br>add byte[eax], al<br>ret <br>inc ebx<br>sbb ah, byte[0xaf8e38bb]<br>jae 0x10a90a08<br>popfd <br>push edx<br>pushal <br>imul ebx, dword[0x40d279ff], 0x25696047<br>mov esp, 0xc1e9c252<br>mov bl, 0x58<br>push eax<br>mov eax, 0x39c024e9<br>lea eax, [eax-0x39c023e5]<br>xchg dword[esp], eax<br>lea ecx, [ebp-0x110]<br>push ecx<br>push eax<br>call dword[sym.imp.KERNEL32.dll_GetModuleFileNameA]<br>push edx<br>call 0x10ac1f26<br>jecxz 0x10ac1f81<br>add bl, ah<br>pop edx<br>lea edx, [edx-0x5adca]<br>jmp edx<br>and al, 0xc<br>add byte[eax], al<br>add byte[edi-0x48], bl<br>sub eax, 0x24bc8b3b<br>adc byte[eax], al<br>add byte[eax], al<br>mov dword[esp+8], edi<br>pop edi<br>pop ebx<br>pop ebp<br>pushfd <br>call 0x10ac1fa2<br>jne 0x10ac1f24<br>add al, 0x24<br>jp 0x10ac1f81<br>pop esp<br>inc ebx<br>jo 0x10ac2008<br>mov ebx, dword[esi]<br>add ebx, 0x62416ffd<br>add ebx, dword[edi]<br>add esi, 4<br>jmp 0x10a5665a<br>jae 0x10ac206d<br>cmpsb byte[esi], byte<br>cmp dword[esi+0x2c], ebx<br>mov esi, 0xa3988b1a<br>test dl, bl<br>call 0x61fff1a2<br>pop es<br>cmp byte[edx+0x3e540c1a], 0xdc<br>std <br>mov ebp, 0x4b73a4ce<br>xor eax, 0x12<br>mov dword[ebp+0x737993e5], esp<br>sal cl, cl<br>inc eax<br>pop ebp<br>imul esp, dword[0xd4e5a3c7], 0x1cbe2cdc<br>pushal <br>sahf <br>ret 0x1c9a<br>jns 0x10ac20cf<br>imul edx, dword[eax-0x352d84d8], 0x5ea51831<br>sub al, 0x2b<br>movsb byte<br>xor esp, esp<br>xchg ecx, edx<br>imul eax, edi, 0x1cbb1ef0<br>push eax<br>hlt <br>add edi, edx<br>rcr dword[ecx+0x43], 1<br>pop ebp<br>imul esi, esi, 0xbfefe361<br>sbb ebp, dword[edi]<br>mov esi, 0x23f2f631<br>mov ebx, 0x81ae1131<br>mov edx, 0xd701d508<br>aad 1<br>xlatb <br>shl dword[edx+0x40], 1<br>pop ebp<br>imul edx, dword[edx-0x1d1019e8], 0xf4f086cf<br>inc esi<br>js 0x10ac20b5<br>iretd <br>in eax, dx<br>jl 0x10ac2142<br>imul edi, dword[edi+0x7be2f1b], 0xbb1f26a6<br>or ah, bl<br>fdiv dword[ebx-0x2e]<br>push esp<br>inc eax<br>pop ebp<br>imul ebp, dword[ecx+0x15], 0xa895efe4<br>test eax, esi<br>in al, 0x22<br>and eax, 0xb26908bb<br>js 0x10ac20dc<br>imul esi, dword[edx+0x4033d278], 0x5b48695d<br>loopne 0x10ac2101<br>xor eax, dword[eax+0x5d]<br>imul ecx, dword[eax+0x5b], 0x5baeefe0<br>scasb al, byte<br>pop ebx<br>test al, dh<br>adc dword[esi+0x6908ba81], ebp<br>mov dl, 0x78<br>shl byte[esi], cl<br>inc eax<br>pop ebp<br>imul ebp, dword[ecx+0x15], 0xa3ecefe4<br>test al, dh<br>inc ebx<br>sbb ah, byte[0xff1d07bb]<br>jns 0x10ac2106<br>sar dword[ebx], 0x5d<br>imul edi, dword[edx], 0xebc25319<br>xchg edi, eax<br>mov al, 0x58<br>xor byte[esi+0x52013d30], bh<br>ret 0x7663<br><eoc> ', 'null'],
[-214.6971893310547, -513.0079956054688, '<b><a href="/report/fcn.10be08e9@89dc67d2f980e8488f97b1bf8cb24258">fcn.10be08e9</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>pop edi<br>pop esi<br>pop ebp<br>mov al, bl<br>push edx<br>call 0x100cbe31<br>jmp 0x389f4b8f<br>lea ecx, [esp+0x14]<br>push ecx<br>push eax<br>call dword[sym.imp.KERNEL32.dll_GetModuleFileNameA]<br>lea edx, [esp+0x10]<br>push 0x5c<br>push edx<br>call fcn.100ff7e0<br>add esp, 8<br>test eax, eax<br>je 0x10be46f0<br>call fcn.10bd88f1<br>jg 0x10bd813f<br>mov ebp, esp<br>and esp, 0xfffffff8<br>sub esp, 0xc<br>push ebx<br>mov ebx, dword[ebp+0x10]<br>push esi<br>push edi<br>mov esi, ebx<br>mov edi, eax<br>imul esi, esi, 0x130<br>call fcn.100bdd6d<br>cmp dword[ebp+0x14], 0<br>jmp loc.100bdea9<br>and al, 0x20<br>fmul qword[ecx]<br>add byte[eax], al<br>call fcn.10bdc2ad<br>cmp dword[ebp], 0xea15ac99<br>mov ecx, 0x203bc85f<br>lea ecx, [ecx-0x203bc843]<br>mov ecx, ecx<br>pushfd <br>call 0x10bd8166<br>loope 0x10bd80e8<br>add al, 0x24<br>outsd dx, dword[esi]<br>inc ebx<br>add byte[eax], al<br>ret <br>test byte[ebx+0x49], bh<br>cmp byte[ebx+0x37de2f0b], bh<br>mov ebx, 0x8bc63a13<br>shr byte[ebx-0x47], cl<br>dec ebx<br>imul esi, dword[edx-0x1b], 0x7f6def46<br>shl bl, 1<br>pop ss<br>mov edx, ss<br>fst dword[edi+0x553d694a]<br>mov edx, ss<br>mov al, byte[0xa4ed80]<br>add byte[eax], al<br>add al, ah<br>push 0xf4299e45<br>push ecx<br>push edx<br>push ebx<br>push eax<br>push esi<br>call fcn.10be857e<br>jnp 0x10bd9bb2<br>pop edx<br>jmp fcn.100bd0f5<br>push edx<br>push ebx<br>call fcn.100c0ea4<br>jo 0x10bd9b17<br>and al, 4<br>push edx<br>push eax<br>lea esp, [esp-2]<br>mov dword[esp+6], ebx<br>dec dword[ecx+0x6249c]<br>add byte[eax], al<br>lea esp, [esp+2]<br>pop eax<br>pushfd <br>push ebx<br>lea esp, [esp-8]<br>mov dword[esp+0xc], eax<br>lea esp, [esp+8]<br>pop ebx<br>mov eax, 0x369e741b<br>lea eax, [eax-0x26887ce7]<br>xchg dword[esp], eax<br>lea ecx, [esi+0x7c]<br>call fcn.10001bca<br>lea esp, [esp-4]<br>pushfd <br>call 0x10bd9bff<br>jle 0x10bd9b81<br>add al, 0x24<br>aaa <br>add ecx, dword[esi-1]<br>ret <br>call 0x95cd0f51<br>enter 0x4e56, 0xffffffffffffffff<br>jmp 0x10bd80c0<br>cmp dword[esp+0x14], 0x21565344<br>push 0x30787ea3<br>lea esp, [esp-4]<br>lea esp, [esp-0xc]<br>mov edi, dword[esp+0x14]<br>lea esp, [esp+0x18]<br>mov esi, dword[esp]<br>lea esp, [esp+4]<br>sete al<br>call fcn.10be6014<br>jbe 0x10bdb5f3<br>and al, 4<br>jmp fcn.10be7313<br>mov eax, 0x747d263f<br>lea eax, [eax-0x747cedff]<br>cmp ebx, eax<br>push ebx<br>call 0x10bdbdc4<br>jl 0x10bdbe20<br>lea ebx, [ebx+0x43e1]<br>jmp ebx<br>add byte[eax], al<br>xor ecx, esp<br>or eax, 0xffffffff<br>call fcn.10103a83<br>add esp, 0x804<br>push esi<br>mov esi, dword[esp+4]<br>lea esp, [esp-4]<br>push edx<br>push eax<br>call 0x10bdbe49<br>jp 0x10bdbea2<br>lea eax, [eax-0xb1b861]<br>call eax<br>jne 0x10bdbeaf<br>pop ebx<br>lea esp, [esp+4]<br>ret <br>jmp 0x73f5a7fe<br>movsb byte<br>and al, 4<br>add byte[eax], al<br>add byte[ebx-0x5b72dbcc], cl<br>and al, 4<br>add byte[eax], al<br>add byte[ebp-0x74f3db9c], cl<br>push ss<br>add esi, 4<br>add edx, dword[edi]<br>add edx, 0x33bd4316<br>jmp edx<br>mov dword[edi+8], ecx<br>mov dword[edi+0xc], edx<br>popal <br>jmp 0x10bdb629<br>push ebx<br>push ebp<br>mov ebp, dword[esp+0x14]<br>push esi<br>push edi<br>lea edi, [ebp+0x553]<br>shr edi, 5<br>shl edi, 5<br>push edi<br>xor ebx, ebx<br>call fcn.100fe24c<br>mov esi, eax<br>add esp, 4<br>cmp esi, ebx<br>je 0x100cbe25<br>push eax<br>call 0x10be0919<br>jne 0x10be0972<br>pop eax<br>lea eax, [eax-0xb26557]<br>call eax<br>jb 0x10be08b1<br>and al, 4<br>lea esi, [esi+4]<br>add edx, dword[edi]<br>call fcn.100c0a6e<br>jb 0x10be098c<br>pop ecx<br>jmp 0x10be574b<br>movsb byte<br>and al, 0xfc<br>add byte[eax], al<br>jns 0x10be0919<br>mov esp, 0x14824<br>add byte[ecx+0x144249c], cl<br>add byte[eax], al<br>mov byte[esp+0x134], bl<br>cmp dword[esp+0x19c], esi<br>call fcn.10be44e1<br>ljmp 0x24a4<br>test byte[eax+ebx*2], ah<br>add dword[eax], eax<br>add byte[eax], al<br>push eax<br>call 0x10be1a06<br>jb 0x10be1a5f<br>lea eax, [eax+0x3226]<br>jmp eax<br>mov byte[esp+0x1c], bl<br>jb 0x10bea410<br>call fcn.10bded3c<br>jbe 0x10be1a45<br>mov dh, 0xc0<br>neg eax<br>sbb eax, eax<br>mov ecx, 0x4f80d50c<br>lea ecx, [ecx-0x4f809be4]<br>jg 0x10be19f8<br>and eax, ecx<br>mov ecx, 0x3aff4474<br>lea ecx, [ecx-0x3aff3ff0]<br>add eax, ecx<br>mov dword[esi+0x3818], eax<br>push eax<br>call 0x10be1a65<br>jnp 0x10be1abe<br>lea eax, [eax-0xb2627e]<br>jmp eax<br>mov dword[eax], edx<br>mov edi, 0x217be1d2<br>lea edi, [edi-0x217be1d1]<br>mov edi, edi<br>call fcn.100ffe83<br>add esp, 4<br>test edi, edi<br>setne al<br>pop edi<br>pop esi<br>push eax<br>call 0x10be1ae4<br>loope 0x10be1b3d<br>lea eax, [eax-0xb23127]<br>jmp eax<br>cmp byte[ebx+0x3823af3d], bh<br>mov ebx, 0x38497b10<br>mov ebx, 0x36e55a2e<br>mov ebx, 0x38497b23<br>mov ebx, 0x36e55a0a<br>mov ebx, 0x37dc642d<br>mov ebx, 0x6d03e814<br>add byte[eax], ah<br>mov ch, 0xf1<br>jmp 0x10be574b<br>mov eax, 0x415e639e<br>lea eax, [eax-0x31480956]<br>mov eax, eax<br>jmp 0x10be574b<br>pop edi<br>pop esi<br>pop ebp<br>mov eax, 0x4a71887c<br>lea eax, [eax-0x4a71887e]<br>mov eax, eax<br>pop ebx<br>add esp, 0x24<br>jmp loc.10023a89<br>pop esi<br>inc eax<br>call fcn.10001bca<br>push 0x897650a7<br>push edi<br>lea esp, [esp-6]<br>mov dword[esp+0xa], ebx<br>lea esp, [esp+6]<br>pop edi<br>lea esp, [esp-4]<br>mov dword[esp], eax<br>mov eax, 0x5391fd7f<br>lea eax, [eax-0x437c064b]<br>xchg dword[esp], eax<br>lea ecx, [esi+0x60]<br>call fcn.10001bca<br>jmp 0x10bd9baa<br>push 0<br>push eax<br>mov eax, 0x4d6eb409<br>lea eax, [eax-0x4d6eb389]<br>xchg dword[esp], eax<br>push 3<br>push 0<br>push 3<br>push eax<br>mov eax, 0x3d8feedf<br>pushfd <br>call 0x10be4716<br>jmp 0x10be4698<br>mov ecx, dword[esi+0xc]<br>mov edx, dword[esi+8]<br>push eax<br>mov eax, 0x35b8f5f4<br>lea eax, [eax-0x35b8cee4]<br>xchg dword[esp], eax<br>push ecx<br>mov ecx, dword[esi+4]<br>push edx<br>mov edx, dword[esi]<br>push ecx<br>push edx<br>push eax<br>push edx<br>call 0x10be5772<br>jecxz 0x10be57cd<br>retf 0x487<br>lea edx, [edx+0x3d22]<br>call edx<br>jle 0x10be5708<br>add al, 0x24<br>call fcn.10bd85b8<br>jbe 0x10be57db<br>push edi<br>jmp fcn.100c0606<br>push eax<br>call fcn.10bd9746<br>loopne 0x10be575d<br>pushfd <br>and al, 0xb0<br>add byte[eax], al<br>add byte[ebx+0x1068247c], al<br>cmp dword[esp+0x68], 0x10<br>mov dword[esp+0x30], 0xf<br>mov dword[esp+0x2c], ebx<br>jmp 0x10be1a25<br>fisttp dword[ebx-0x763bcd00]<br>inc esp<br>and al, 0x3c<br>mov eax, 0x47a1943e<br>lea eax, [eax+0x8460c5c]<br>push eax<br>pushfd <br>mov dword[esp+4], ebp<br>popfd <br>push edx<br>pushfd <br>mov dword[esp+4], edi<br>popfd <br>push ecx<br>call 0x10bea332<br>and al, 4<br>add byte[eax], al<br>add byte[ebp-0x437663ae], bl<br>and al, 4<br>add byte[eax], al<br>add byte[ebp+0x1e851], bl<br>add byte[eax], al<br>loopne 0x10bea38c<br>lea ecx, [ecx-0x20bc]<br>jmp ecx<br>pop esi<br>pushal <br>mov dword[esi+0x64], ebx<br>mov dword[esi+0x68], ebx<br>call fcn.100ff459<br>mov eax, dword[esi+0x48]<br>pushfd <br>call 0x10bea380<br>jecxz 0x10bea302<br>add al, 0x24<br>daa <br>movsb byte<br>out dx, al<br>jns 0x10bea31b<br>sar byte[ebp+edi*4+0x4a], cl<br>imul eax, dword[esi+0x7ef465b], 0x44f09908<br>jb 0x10bea3e3<br>mov esi, 0x38497b26<br>mov ebx, 0x38497b26<br>mov ebx, 0x37446d31<br>mov ebx, 0x8bcd550e<br>sar cl, cl<br>add byte[eax], al<br>add byte[edx-0x73], dl<br>inc esp<br>and al, 0x70<br>push eax<br>push ebp<br>call fcn.101099d0<br>mov eax, dword[esp+0x34]<br>add esp, 0xc<br>pushfd <br>call 0x10bea3e7<br>jg 0x10bea369<br>add byte[eax], al<br>add byte[edi-0x7f], bh<br>add al, 0x24<br>test dword[eax], edx<br>mov ecx, dword[ebp+0x1e0]<br>sub ecx, dword[ebp+0x1dc]<br>mov eax, 0x62baa8fa<br>lea eax, [eax-0x29d71ac1]<br>mov eax, eax<br>imul ecx<br>sar edx, 3<br>mov eax, edx<br>shr eax, 0x1f<br>inc esi<br>push eax<br>call 0x10bea43c<br>loop 0x10bea495<br>lea eax, [eax+0xded]<br>call eax<br>jnp 0x10bea3ca<br>stc <br>pop es<br>jae 0x10be31f2<br>jmp 0x10be1e49<br>push ds<br>mov bl, 0xff<br>push dword[ecx+0x3b]<br>bnd je<br>jmp 0x10be372c<br><eoc> ', 'null'],
[156.53518676757812, 171.76268005371094, '<b><a href="/report/fcn.10bf3034@89dc67d2f980e8488f97b1bf8cb24258">fcn.10bf3034</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>push edx<br>mov edx, dword[esp+0x14]<br>push edx<br>lea eax, [esp+8]<br>push eax<br>mov dword[esp+0xc], 0x122ff<br>pushfd <br>call 0x100f9e36<br>ljmp 0xaf3b<br>mov eax, dword[ecx+0xc]<br>mov dword[eax], 0xffffffff<br>jmp 0x100f9e1c<br>add al, byte[eax]<br>add byte[ebp-0x75], dl<br>lodsb al, byte[esi]<br>and al, 0x18<br>add al, byte[eax]<br>add byte[eax-0x39], dl<br>rcr byte[esi-0x7286cfda], 0x80<br>fcmove st(0), st(7)<br>xchg byte[edi-0x7b72dbfc], al<br>and al, 0x11<br>add dword[eax], eax<br>add byte[edx], ch<br>jmp 0x10bfd57f<br>mov edi, eax<br>and esi, 0xf<br>shl edi, 8<br>sar edi, 0x1c<br>mov ebx, esi<br>shr eax, 0x10<br>sub ebx, edi<br>and eax, 0xf<br>mov ebp, esi<br>jbe 0x10bfac53<br>call fcn.10bf7f42<br>jne 0x10bf2fe5<br>and al, 4<br>cmp al, 0x20<br>je 0x10bedf7d<br>jmp 0x10bf7c00<br>cmp al, 0x28<br>jne 0x100f9e1c<br>jmp 0x10bedf7d<br>movsb byte<br>and al, 0xfc<br>mov ecx, dword[esp+0x20]<br>mov edx, dword[esp+0x1c]<br>push ebp<br>push ecx<br>push edx<br>call fcn.101099d0<br>add esp, 0xc<br>push ebx<br>call 0x10bfac6d<br>loopne 0x10bfacc9<br>lea ebx, [ebx-0xd716]<br>call ebx<br>loopne 0x10bfac03<br>sub bh, bh<br>sub eax, sym.imp.KERNEL32.dll_VirtualQuery<br>mov eax, esi<br>and eax, 0xffff<br>sub esi, eax<br>cmp esi, ebx<br>mov ebx, dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>mov edi, esi<br>call fcn.10bf2608<br>ja 0x10bfad03<br>cwde <br>js 0x10bfac71<br>jns 0x10bfacdb<br>xor byte[esp+ebp*8-0x5d0f653b], ah<br>mov edi, 0x81b1e5b8<br>xor dword[ecx+ecx*2+0x983f369], ebp<br>in eax, 0xbd<br>pop eax<br>cmp byte[ebx-0x1e0d95ed], bh<br>movsb byte<br>pop edx<br>salc <br>lcall 0xdbe5, 0xb8bfa2f0<br>cmp dword[ebp+0x49bc3fd2], ecx<br>imul ecx, edx, 0x5e5b9bc<br>imul edi, ecx, 0x43aefeef<br>mov esi, 0xbdfe7a13<br>test byte[eax+0x5ad19d4e], al<br>retf 0x38f3<br>out dx, eax<br>adc byte[edi+edi*8-0x7f111601], cl<br>mov byte[esp+0x10], 0<br>call fcn.10109950<br>add esp, 0xc<br>test esi, esi<br>call fcn.10bf9baa<br>jae 0x10bfd4ab<br>pop esi<br>pop ebp<br>ret 0x10<br>pop esi<br>push 0x30b6c88c<br>push ecx<br>lea esp, [esp-2]<br>mov dword[esp+6], edx<br>lea esp, [esp+2]<br>pop ecx<br>lea esp, [esp-4]<br>pushfd <br>mov dword[esp+4], eax<br>pushfd <br>call 0x10bfd576<br>jo 0x10bfd4f8<br>add al, 0x24<br>int3 <br>push eax<br>mov byte[esp+0x118], 0<br>call fcn.10109950<br>add esp, 0xc<br>push eax<br>mov eax, 0x4f15c3f7<br>lea eax, [eax-0x4f15c2f3]<br>xchg dword[esp], eax<br>lea ecx, [esp+0x110]<br>push ecx<br>push 0<br>call dword[sym.imp.KERNEL32.dll_GetModuleFileNameA]<br>lea edx, [esp+0x10c]<br>push 0x5c<br>push edx<br>pushfd <br>call 0x10bfd5c1<br>je 0x10bfd543<br>add al, 0x24<br>stosb byte<br>ud0 <br><eoc> ', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push eax
call fcn.1001041e
jmp 0x10679ea5
mov esp, 0x824
add byte[ecx-0x75], dl
mov word[esp+eax], fs
add byte[eax], al
add byte[ecx-0x75], dl
mov word[esp+eax], fs
add byte[eax], al
add byte[ebx-0x18], dl
add dword[eax], eax
add byte[eax], al
jne 0x1060e2de
lea ebx, [ebx-0x2c212]
jmp ebx
lea esp, [esp+4]
push ebx
push eax
push esi
call fcn.105d2593
jae 0x1060e2f4
inc edx
cld
push dword[ebx+0x5a]
pop edx
cmp eax, ebx
je 0x10639289
jmp 0x105e5970
std
push dword[edi+0x1d]
jo 0x1060e295
mov edx, 0xdd310d17
mov edx, 0x354bc720
rcr byte[eax+0x1d69a87e], cl
loope 0x1060e265
out dx, eax
out dx, al
out dx, al
jo 0x1060e2b0
daa
dec ebp
fdivr dword[edx-0x209fdae9]
mov edx, 0x2e44f620
fistp qword[edx+0x2e44f620]
shl byte[esi+0x2b69a87e], cl
fdivr qword[edx]
out dx, eax
out dx, al
imul ebp, dword[ebx], 0x65ef3adc
out dx, al
jo 0x1060e2ca
ret 0xdf15
lea ebx, [ecx+0x68]
jmp 0x1060e331
push 0xa2f03aeb
into
mov ah, byte[edx+ebp+0x32f03ae6]
cwde
popal
in eax, 0x2d
xor dword[edx-0x36], ebp
xor cl, byte[ebx+ebp*8]
mov ebp, 0x87cb2e1f
movsb byte
mov dword[0xeb2ae207], esp
sbb byte[esi-0x5b7e5f72], ah
mov ch, 0xdc
cmp al, 0xf0
cmp edx, dword[edi-0x50011aa3]
das
shl bl, cl
jne 0x1060e2d4
pop es
loop 0x1060e340
jmp 0x1060e330
imul eax, esi, 0x69e5589e
in eax, 0x69
imul esp, ebx, 0xa21fbadf
into
mov ah, byte[ecx+0x7bf0407f]
jnp 0x1060e3a1
jecxz 0x1060e313
mov edx, 0x8acea21f
movsb byte
and dword[edi+0x40], edi
pushal
in eax, 0xfe
scasd eax, dword
das
sal cl, cl
test dword[eax+0x5fd26169], ebp
in eax, 0xc0
jno 0x1060e2f2
out dx, eax
pop edi
shl cl, cl
mov ebp, 0x64d58a1f
test byte[ebx], cl
inc ebx
cmp eax, 0x68750cd1
fnstsw word[edx-0x9704ce1]
fld xword[ebx]
cmp esp, dword[ebx]
movsb byte
and dword[edi+0x40], edi
mov ebp, 0x83274e34
lcall 0x34be, 0x871c434
cld
inc eax
cmp al, 0xd1
aam 0x69
leave
sbb dword[edx-0x157711cc], 0xc0ba34bd
sub eax, 0x8e593d2
push 0x35
sahf
xor al, 0xd2
dec edx
and ebp, dword[edx+0x33e90da5]
ror byte[edx+0x516a08d3], cl
push 0x51
insb byte
xor al, 0xd2
mov ch, 0xeb
mov byte[0x899785a5], al
movsb byte
add dword[esi+0x44], esp
shl dword[edx], 1
aad 0x57
fstp xword[edx-0xb9f95cc]
or eax, 0xffffffb3
mov al, byte[0x805c61ef]
movsb byte
dec ecx
mov edi, dword[ebx-0x24]
mov esi, esi
mov dh, 0x97
out dx, eax
out 0x82, eax
ja 0x1060e3c2
pushal
hlt
jle 0x1060e3b9
insb byte
mov eax, dword[0xa32284dc]
xchg edx, eax
or byte[eax], al
add byte[eax], al
add byte[eax], al
jl 0x1060e384
and al, 4
pop esi
pop ebp
pop eax
call dword[sym.imp.USER32.dll_GetWindowThreadProcessId]
call dword[sym.imp.KERNEL32.dll_GetCurrentProcessId]
push eax
mov eax, dword[esp]
push edi
push ebp
pushfd
xor edi, edi
add edi, dword[esp+4]
mov ebp, 0x5f761d58
lea ebp, [ebp+0x2bb44424]
add edi, ebp
mov ebp, 0x2490c010
pushfd
call 0x1060e434
je 0x1060e3b6
add al, 0x24
loopne 0x1060e43d
push es
add bl, al
jnp 0x1060e3ce
nop
xor eax, eax
mov al, byte[esi+4]
nop
rol eax, 2
add eax, edi
mov al, byte[eax]
and eax, 0xff
jmp 0x106473ee
push edx
mov edx, dword[esp+4]
lea esp, [esp-4]
push eax
push edx
mov edx, dword[esp+0xc]
ret 0x10
xor eax, eax
jmp 0x10679ea5
push ax
mov edx, dword[esi]
add edx, dword[edi]
add edx, 0x75e3d117
lea esi, [esi+5]
push 0x6b1a724a
mov dword[esp], edx
jmp 0x106105bb
mov byte[ebp-4], 0
push 0x20
mov dword[esi+4], eax
call fcn.100ff54d
pop ecx
mov dword[ebp-0x10], eax
mov byte[ebp-4], 2
cmp eax, ebx
pushfd
call 0x10679ec4
jecxz 0x10679e46
add al, 0x24
mov esp, dword[ebx]
idiv bh
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/89dc67d2f980e8488f97b1bf8cb24258