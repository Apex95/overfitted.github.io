---
layout: post
title:  "fcn.1060e28c @ 89dc67d2f980e8488f97b1bf8cb24258"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.1060e28c
- **Origin (md5):** 89dc67d2f980e8488f97b1bf8cb24258
- **VirusTotal:** [virustotal.com/gui/file/89dc67d2f980e8488f97b1bf8cb24258][virustotal_ref]

# Code Tags
<span class="tag" id="PROCESS">PROCESS</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.1060e28c@89dc67d2f980e8488f97b1bf8cb24258">fcn.1060e28c</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push eax
call fcn.1001041e
jmp 0x10679ea5
mov esp, 0x824
add byte[ecx-0x75], dl
mov word[esp+eax], fs
add byte[eax], al
add byte[ecx-0x75], dl
mov word[esp+eax], fs
add byte[eax], al
add byte[ebx-0x18], dl
add dword[eax], eax
add byte[eax], al
jne off.b82
lea ebx, [ebx-0x2c212]
jmp ebx
lea esp, [esp+4]
push ebx
push eax
push esi
call fcn.105d2593
jae off.b104
inc edx
cld
push dword[ebx+0x5a]
pop edx
cmp eax, ebx
je 0x10639289
jmp 0x105e5970
std
push dword[edi+0x1d]
jo off.b9
mov edx, 0xdd310d17
mov edx, 0x354bc720
rcr byte[eax+0x1d69a87e], cl
loope 0x1060e265
out dx, eax
out dx, al
out dx, al
jo off.b36
daa
dec ebp
fdivr dword[edx-0x209fdae9]
mov edx, 0x2e44f620
fistp qword[edx+0x2e44f620]
shl byte[esi+0x2b69a87e], cl
fdivr qword[edx]
out dx, eax
out dx, al
imul ebp, dword[ebx], 0x65ef3adc
out dx, al
jo off.b62
ret 0xdf15
lea ebx, [ecx+0x68]
jmp off.b165
push 0xa2f03aeb
into
mov ah, byte[edx+ebp+0x32f03ae6]
cwde
popal
in eax, 0x2d
xor dword[edx-0x36], ebp
xor cl, byte[ebx+ebp*8]
mov ebp, 0x87cb2e1f
movsb byte
mov dword[0xeb2ae207], esp
sbb byte[esi-0x5b7e5f72], ah
mov ch, 0xdc
cmp al, 0xf0
cmp edx, dword[edi-0x50011aa3]
das
shl bl, cl
jne off.b72
pop es
loop off.b180
jmp off.b164
imul eax, esi, 0x69e5589e
in eax, 0x69
imul esp, ebx, 0xa21fbadf
into
mov ah, byte[ecx+0x7bf0407f]
jnp off.b277
jecxz off.b135
mov edx, 0x8acea21f
movsb byte
and dword[edi+0x40], edi
pushal
in eax, 0xfe
scasd eax, dword
das
sal cl, cl
test dword[eax+0x5fd26169], ebp
in eax, 0xc0
jno off.b102
out dx, eax
pop edi
shl cl, cl
mov ebp, 0x64d58a1f
test byte[ebx], cl
inc ebx
cmp eax, 0x68750cd1
fnstsw word[edx-0x9704ce1]
fld xword[ebx]
cmp esp, dword[ebx]
movsb byte
and dword[edi+0x40], edi
mov ebp, 0x83274e34
lcall 0x34be, 0x871c434
cld
inc eax
cmp al, 0xd1
aam 0x69
leave
sbb dword[edx-0x157711cc], 0xc0ba34bd
sub eax, 0x8e593d2
push 0x35
sahf
xor al, 0xd2
dec edx
and ebp, dword[edx+0x33e90da5]
ror byte[edx+0x516a08d3], cl
push 0x51
insb byte
xor al, 0xd2
mov ch, 0xeb
mov byte[0x899785a5], al
movsb byte
add dword[esi+0x44], esp
shl dword[edx], 1
aad 0x57
fstp xword[edx-0xb9f95cc]
or eax, 0xffffffb3
mov al, byte[0x805c61ef]
movsb byte
dec ecx
mov edi, dword[ebx-0x24]
mov esi, esi
mov dh, 0x97
out dx, eax
out 0x82, eax
ja off.b310
pushal
hlt
jle off.b301
insb byte
mov eax, dword[0xa32284dc]
xchg edx, eax
or byte[eax], al
add byte[eax], al
add byte[eax], al
jl off.b248
and al, 4
pop esi
pop ebp
pop eax
call dword[sym.imp.USER32.dll_GetWindowThreadProcessId]
call dword[sym.imp.KERNEL32.dll_GetCurrentProcessId]
push eax
mov eax, dword[esp]
push edi
push ebp
pushfd
xor edi, edi
add edi, dword[esp+4]
mov ebp, 0x5f761d58
lea ebp, [ebp+0x2bb44424]
add edi, ebp
mov ebp, 0x2490c010
pushfd
call 0x1060e434
je off.b298
add al, 0x24
loopne 0x1060e43d
push es
add bl, al
jnp off.b322
nop
xor eax, eax
mov al, byte[esi+4]
nop
rol eax, 2
add eax, edi
mov al, byte[eax]
and eax, 0xff
jmp 0x106473ee
push edx
mov edx, dword[esp+4]
lea esp, [esp-4]
push eax
push edx
mov edx, dword[esp+0xc]
ret 0x10
xor eax, eax
jmp 0x10679ea5
push ax
mov edx, dword[esi]
add edx, dword[edi]
add edx, 0x75e3d117
lea esi, [esi+5]
push 0x6b1a724a
mov dword[esp], edx
jmp 0x106105bb
mov byte[ebp-4], 0
push 0x20
mov dword[esi+4], eax
call fcn.100ff54d
pop ecx
mov dword[ebp-0x10], eax
mov byte[ebp-4], 2
cmp eax, ebx
pushfd
call 0x10679ec4
jecxz 0x10679e46
add al, 0x24
mov esp, dword[ebx]
idiv bh
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/89dc67d2f980e8488f97b1bf8cb24258