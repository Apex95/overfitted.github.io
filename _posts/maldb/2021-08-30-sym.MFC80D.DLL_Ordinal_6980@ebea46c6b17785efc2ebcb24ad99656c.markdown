---
layout: post
title:  "sym.MFC80D.DLL_Ordinal_6980 @ ebea46c6b17785efc2ebcb24ad99656c"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** sym.MFC80D.DLL\_Ordinal\_6980
- **Origin (md5):** ebea46c6b17785efc2ebcb24ad99656c
- **VirusTotal:** [virustotal.com/gui/file/ebea46c6b17785efc2ebcb24ad99656c][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/sym.MFC80D.DLL_Ordinal_6980@ebea46c6b17785efc2ebcb24ad99656c">sym.MFC80D.DLL_Ordinal_6980</a><br>@ebea46c6b17785efc2ebcb24ad99656c</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
push 0xffffffffffffffff
push 0x783b1cb2
mov eax, dword
push eax
sub esp, 0x7c
mov eax, dword[0x783e90cc]
xor eax, ebp
push eax
lea eax, [ebp-0xc]
mov dword
mov dword[ebp-0x80], ecx
mov ecx, 0x783eb27c
call fcn.78286c70
mov dword[ebp-0x10], eax
lea ecx, [ebp-0x20]
call sym.MFC80D.DLL_Ordinal_379
mov dword[ebp-4], 0
mov eax, dword[ebp+8]
push eax
lea ecx, [ebp-0x20]
call sym.MFC80D.DLL_Ordinal_2177
test eax, eax
je off.b770
lea ecx, [ebp-0x20]
call sym.MFC80D.DLL_Ordinal_4068
mov dword[ebp-0x48], eax
push 0
lea ecx, [ebp-0x20]
call sym.MFC80D.DLL_Ordinal_8053
mov ecx, dword[ebp-0x10]
mov edx, dword[ecx+4]
push edx
mov eax, dword[ebp-0x1c]
push eax
call dword[sym.imp.GDI32.dll_SelectObject]
mov dword[ebp-0x60], eax
mov ecx, dword[ebp+0xc]
add ecx, 0x1c
push ecx
lea ecx, [ebp-0x34]
call fcn.783a7110
mov edx, dword[ebp-0x34]
add edx, 1
mov dword[ebp-0x34], edx
mov eax, dword[ebp-0x10]
mov ecx, dword[ebp+0x14]
sub ecx, dword[eax+0xc]
mov eax, ecx
cdq
sub eax, edx
sar eax, 1
jns off.b183
mov dword[ebp-0x84], 0
jmp off.b203
mov edx, dword[ebp-0x10]
mov eax, dword[ebp+0x14]
sub eax, dword[edx+0xc]
cdq
sub eax, edx
sar eax, 1
mov dword[ebp-0x84], eax
mov eax, dword[ebp-0x84]
mov ecx, dword[ebp-0x30]
lea edx, [ecx+eax+1]
mov dword[ebp-0x30], edx
mov eax, dword[ebp-0x10]
mov ecx, dword[ebp-0x34]
add ecx, dword[eax+8]
mov dword[ebp-0x2c], ecx
mov edx, dword[ebp-0x10]
mov eax, dword[ebp-0x30]
add eax, dword[edx+0xc]
mov dword[ebp-0x28], eax
mov ecx, dword[ebp+0xc]
add ecx, 0x1c
push ecx
lea ecx, [ebp-0x44]
call fcn.783a7110
mov edx, dword[ebp-0x10]
mov eax, dword[edx+8]
mov ecx, dword[ebp-0x44]
lea edx, [ecx+eax+2]
mov dword[ebp-0x3c], edx
sub esp, 0x10
mov eax, esp
mov ecx, dword[ebp-0x34]
mov dword[eax], ecx
mov edx, dword[ebp-0x30]
mov dword[eax+4], edx
mov ecx, dword[ebp-0x2c]
mov dword[eax+8], ecx
mov edx, dword[ebp-0x28]
mov dword[eax+0xc], edx
sub esp, 0x10
mov eax, esp
mov ecx, dword[ebp-0x44]
mov dword[eax], ecx
mov edx, dword[ebp-0x40]
mov dword[eax+4], edx
mov ecx, dword[ebp-0x3c]
mov dword[eax+8], ecx
mov edx, dword[ebp-0x38]
mov dword[eax+0xc], edx
lea eax, [ebp-0x58]
push eax
mov ecx, dword[ebp-0x80]
mov edx, dword[ecx]
mov ecx, dword[ebp-0x80]
mov eax, dword[edx+0x158]
call eax
lea ecx, [ebp-0x58]
call fcn.783a7340
push eax
lea ecx, [ebp-0x44]
call fcn.783a7340
push eax
lea ecx, [ebp-0x34]
call fcn.783a7670
test eax, eax
jne off.b400
push 0x1a3
push 0x781db180
call sym.MFC80D.DLL_Ordinal_1363
test eax, eax
je off.b400
int3
lea edx, [ebp-0x58]
push edx
lea ecx, [ebp-0x34]
call fcn.783a76d0
test eax, eax
je off.b462
mov eax, dword[ebp-0x10]
mov ecx, dword[eax+8]
mov edx, dword[eax+0xc]
mov dword[ebp-0x7c], ecx
mov dword[ebp-0x78], edx
mov eax, dword[ebp-0x78]
push eax
mov ecx, dword[ebp-0x7c]
push ecx
lea edx, [ebp-0x74]
push edx
lea ecx, [ebp-0x58]
call fcn.783a7210
mov ecx, eax
call fcn.783a6a40
test eax, eax
jne off.b482
push 0x1a4
push 0x781db180
call sym.MFC80D.DLL_Ordinal_1363
test eax, eax
je off.b482
int3
push 5
call dword[sym.imp.USER32.dll_GetSysColor]
mov dword[ebp-0x5c], eax
mov ecx, dword[ebp-0x80]
call sym.MFC80D.DLL_Ordinal_5580
test eax, eax
je off.b536
mov ecx, dword[ebp+0xc]
mov edx, dword[ecx+8]
push edx
mov ecx, dword[ebp-0x80]
call sym.MFC80D.DLL_Ordinal_5495
test eax, eax
je off.b536
mov dword[ebp-0x88], 0
jmp off.b546
mov dword[ebp-0x88], 1
mov eax, dword[ebp-0x88]
mov dword[ebp-0x6c], eax
mov ecx, dword[ebp+0xc]
mov edx, dword[ecx+0x10]
and edx, 1
je off.b583
cmp dword[ebp-0x6c], 0
jne off.b583
push 0xd
call dword[sym.imp.USER32.dll_GetSysColor]
mov dword[ebp-0x5c], eax
mov eax, dword[ebp-0x5c]
push eax
lea ecx, [ebp-0x68]
call sym.MFC80D.DLL_Ordinal_345
mov byte[ebp-4], 1
lea ecx, [ebp-0x68]
push ecx
lea ecx, [ebp-0x44]
call fcn.783a7340
push eax
mov ecx, dword[ebp+8]
call sym.MFC80D.DLL_Ordinal_3113
mov ecx, dword[ebp+8]
call sym.MFC80D.DLL_Ordinal_4068
mov dword[ebp-0x24], eax
mov edx, dword[ebp-0x24]
or edx, 8
push edx
mov ecx, dword[ebp+8]
call sym.MFC80D.DLL_Ordinal_8053
push 0xcc0020
push 0
mov eax, dword[ebp-0x10]
mov ecx, dword[eax+8]
imul ecx, dword[ebp+0x10]
push ecx
lea edx, [ebp-0x20]
push edx
mov eax, dword[ebp-0x10]
mov ecx, dword[eax+0xc]
push ecx
mov edx, dword[ebp-0x10]
mov eax, dword[edx+8]
push eax
mov ecx, dword[ebp-0x54]
push ecx
mov edx, dword[ebp-0x58]
push edx
mov ecx, dword[ebp+8]
call sym.MFC80D.DLL_Ordinal_1832
mov eax, dword[ebp-0x24]
push eax
mov ecx, dword[ebp+8]
call sym.MFC80D.DLL_Ordinal_8053
mov ecx, dword[ebp-0x48]
push ecx
lea ecx, [ebp-0x20]
call sym.MFC80D.DLL_Ordinal_8053
mov edx, dword[ebp-0x60]
push edx
mov eax, dword[ebp-0x1c]
push eax
call dword[sym.imp.GDI32.dll_SelectObject]
mov ecx, dword[ebp+0xc]
mov edx, dword[ecx+0x1c]
mov eax, dword[ebp-0x10]
mov ecx, dword[eax+8]
lea edx, [edx+ecx+2]
mov eax, dword[ebp+0xc]
mov dword[eax+0x1c], edx
mov byte[ebp-4], 0
lea ecx, [ebp-0x68]
call sym.MFC80D.DLL_Ordinal_694
mov dword[ebp-4], 0xffffffff
lea ecx, [ebp-0x20]
call sym.MFC80D.DLL_Ordinal_711
mov ecx, dword[ebp-0xc]
mov dword
pop ecx
mov esp, ebp
pop ebp
ret 0x10

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/ebea46c6b17785efc2ebcb24ad99656c