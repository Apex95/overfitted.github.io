---
layout: post
title:  "fcn.64028910 @ 07e4412910bcf0f5969ef64c44eecb2d"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.64028910
- **Origin (md5):** 07e4412910bcf0f5969ef64c44eecb2d
- **VirusTotal:** [virustotal.com/gui/file/07e4412910bcf0f5969ef64c44eecb2d][virustotal_ref]

# Code Tags
<span class="tag" id="SOCKET">SOCKET</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.64028910@07e4412910bcf0f5969ef64c44eecb2d">fcn.64028910</a><br>@07e4412910bcf0f5969ef64c44eecb2d</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

sub esp, 0x34
push ebx
push ebp
push esi
lea esi, [ecx+0x88]
mov dword[esp+0x20], ecx
push edi
mov ecx, esi
mov dword[esp+0x40], 0
call dword[sym.imp.Qt5Core.dll_public:_bool___thiscall_QByteArray::isEmpty_void_const]
test al, al
je off.b50
push 0x200
mov ecx, esi
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QByteArray::reserve_int_]
mov edi, dword[sym.imp.Qt5Core.dll_public:_bool___thiscall_QByteArray::endsWith_char_const__const]
xor eax, eax
xor edx, edx
mov dword[esp+0x18], eax
mov dword[esp+0x1c], edx
mov byte[esp+0x14], al
mov byte[esp+0x13], al
lea esp, [esp]
mov ecx, dword[esp+0x48]
lea eax, [esp+0x14]
push 0
push 1
push eax
call dword[sym.imp.Qt5Core.dll_public:_long_long___int64____thiscall_QIODevice::read_char___long_long___int64__]
mov ebx, edx
mov ebp, eax
or eax, ebx
je off.b987
mov eax, ebp
and eax, ebx
cmp eax, 0xffffffff
je off.b962
push dword[esp+0x14]
mov ecx, esi
call dword[sym.imp.Qt5Core.dll_public:_class_QByteArray____thiscall_QByteArray::append_char_]
add dword[esp+0x18], 1
adc dword[esp+0x1c], 0
cmp byte[esp+0x14], 0xa
jne off.b243
push 0x6414656c
mov ecx, esi
call edi
test al, al
jne off.b179
push 0x64146570
mov ecx, esi
call edi
test al, al
je off.b184
mov byte[esp+0x13], 1
mov ecx, esi
call dword[sym.imp.Qt5Core.dll_public:_int___thiscall_QByteArray::length_void_const]
cmp eax, 2
jne off.b210
push 0x64145ec8
mov ecx, esi
call edi
test al, al
jne off.b270
mov ecx, esi
call dword[sym.imp.Qt5Core.dll_public:_int___thiscall_QByteArray::length_void_const]
cmp eax, 1
jne off.b236
push 0x64146574
mov ecx, esi
call edi
test al, al
jne off.b270
cmp byte[esp+0x13], 0
jne off.b270
test ebx, ebx
jl off.b987
jg off.b80
test ebp, ebp
je off.b987
jmp off.b80
mov ebp, dword[esp+0x24]
mov ecx, ebp
push esi
call fcn.64027ee0
mov ecx, esi
mov dword[ebp+0x4c], 3
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QByteArray::clear_void_]
lea ecx, [ebp+0x40]
call fcn.64025320
mov edi, dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QByteArray::constructor_char_const___int_]
lea ecx, [esp+0x20]
push 0xffffffffffffffff
push str.transfer-encoding_
mov dword[ebp+0x70], eax
mov dword[ebp+0x74], edx
call edi
push str.chunked
lea eax, [esp+0x28]
push eax
lea ecx, [esp+0x34]
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QByteArray::constructor_void_]
push eax
lea eax, [esp+0x2c]
push eax
lea eax, [esp+0x38]
push eax
lea ecx, [ebp+0x40]
call fcn.640256c0
mov ecx, eax
call dword[sym.imp.Qt5Core.dll_public:_class_QByteArray___thiscall_QByteArray::toLower_void_]
mov ecx, eax
call dword[sym.imp.Qt5Core.dll_public:_bool___thiscall_QByteArray::contains_char_const__const]
lea ecx, [esp+0x24]
mov byte[ebp+0x8c], al
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QByteArray::destructor_void_]
lea ecx, [esp+0x28]
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QByteArray::destructor_void_]
lea ecx, [esp+0x2c]
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QByteArray::destructor_void_]
lea ecx, [esp+0x20]
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QByteArray::destructor_void_]
push 0xffffffffffffffff
push str.connection
lea ecx, [esp+0x28]
call edi
lea ecx, [esp+0x2c]
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QByteArray::constructor_void_]
push eax
lea eax, [esp+0x24]
push eax
lea eax, [esp+0x50]
push eax
lea ecx, [ebp+0x40]
call fcn.640256c0
lea ecx, [esp+0x2c]
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QByteArray::destructor_void_]
lea ecx, [esp+0x20]
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QByteArray::destructor_void_]
push str.close_
lea eax, [esp+0x44]
mov ebx, 1
push eax
lea ecx, [esp+0x50]
call dword[sym.imp.Qt5Core.dll_public:_class_QByteArray___thiscall_QByteArray::toLower_void_]
mov ecx, eax
call dword[sym.imp.Qt5Core.dll_public:_bool___thiscall_QByteArray::contains_char_const__const]
test al, al
jne off.b718
push 0xffffffffffffffff
push str.proxy_connection
lea ecx, [esp+0x2c]
call edi
push str.close_
lea eax, [esp+0x38]
mov ebx, 0x1f
push eax
lea ecx, [esp+0x44]
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QByteArray::constructor_void_]
push eax
lea eax, [esp+0x30]
push eax
lea eax, [esp+0x48]
push eax
lea ecx, [ebp+0x40]
call fcn.640256c0
mov ecx, eax
call dword[sym.imp.Qt5Core.dll_public:_class_QByteArray___thiscall_QByteArray::toLower_void_]
mov ecx, eax
call dword[sym.imp.Qt5Core.dll_public:_bool___thiscall_QByteArray::contains_char_const__const]
test al, al
jne off.b718
cmp dword[ebp+0x60], 1
jne off.b714
cmp dword[ebp+0x64], 0
jne off.b714
lea ecx, [esp+0x48]
call dword[sym.imp.Qt5Core.dll_public:_bool___thiscall_QByteArray::isEmpty_void_const]
test al, al
je off.b714
push 0xffffffffffffffff
push str.proxy_connection
lea ecx, [esp+0x28]
call edi
push str.keep_alive
lea eax, [esp+0x30]
mov ebx, 0x1ff
push eax
lea ecx, [esp+0x38]
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QByteArray::constructor_void_]
push eax
lea eax, [esp+0x2c]
push eax
lea eax, [esp+0x38]
push eax
lea ecx, [ebp+0x40]
call fcn.640256c0
mov ecx, eax
call dword[sym.imp.Qt5Core.dll_public:_class_QByteArray___thiscall_QByteArray::toLower_void_]
mov ecx, eax
call dword[sym.imp.Qt5Core.dll_public:_bool___thiscall_QByteArray::contains_char_const__const]
test al, al
je off.b718
xor eax, eax
jmp off.b723
mov eax, 1
mov byte[ebp+0x8d], al
test ebx, 0x100
je off.b753
lea ecx, [esp+0x2c]
and ebx, 0xfffffeff
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QByteArray::destructor_void_]
test bl, bl
jns off.b773
lea ecx, [esp+0x28]
and ebx, 0xffffff7f
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QByteArray::destructor_void_]
test bl, 0x40
je off.b791
lea ecx, [esp+0x30]
and ebx, 0xffffffbf
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QByteArray::destructor_void_]
test bl, 0x20
je off.b809
lea ecx, [esp+0x20]
and ebx, 0xffffffdf
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QByteArray::destructor_void_]
test bl, 0x10
je off.b827
lea ecx, [esp+0x34]
and ebx, 0xffffffef
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QByteArray::destructor_void_]
test bl, 8
je off.b845
lea ecx, [esp+0x38]
and ebx, 0xfffffff7
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QByteArray::destructor_void_]
test bl, 4
je off.b863
lea ecx, [esp+0x3c]
and ebx, 0xfffffffb
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QByteArray::destructor_void_]
test bl, 2
je off.b881
lea ecx, [esp+0x24]
and ebx, 0xfffffffd
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QByteArray::destructor_void_]
test bl, 1
je off.b896
lea ecx, [esp+0x40]
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QByteArray::destructor_void_]
cmp byte[ebp+0xd0], 0
je off.b977
mov ecx, ebp
call fcn.64027c40
test al, al
je off.b977
cmp dword[ebp+0x100], 0
jne off.b941
push 0x38
call sub.MSVCR120.dll_void____cdecl_operator_new_unsigned_int_
add esp, 4
mov dword[ebp+0x100], eax
mov ecx, ebp
call fcn.64027bc0
test eax, eax
je off.b977
lea ecx, [esp+0x48]
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QByteArray::destructor_void_]
pop edi
pop esi
or eax, 0xffffffff
pop ebp
or edx, eax
pop ebx
add esp, 0x34
ret 4
lea ecx, [esp+0x48]
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QByteArray::destructor_void_]
mov eax, dword[esp+0x18]
mov edx, dword[esp+0x1c]
pop edi
pop esi
pop ebp
pop ebx
add esp, 0x34
ret 4

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/07e4412910bcf0f5969ef64c44eecb2d