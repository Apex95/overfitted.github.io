---
layout: post
title:  "fcn.00698340 @ c92f0480e2fbc88393d2c65c08a235e0"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00698340
- **Origin (md5):** c92f0480e2fbc88393d2c65c08a235e0
- **VirusTotal:** [virustotal.com/gui/file/c92f0480e2fbc88393d2c65c08a235e0][virustotal_ref]

# Code Tags
<span class="tag" id="SOCKET">SOCKET</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-2412.983154296875, 7032.681640625, '<b><a href="/report/fcn.00698340@c92f0480e2fbc88393d2c65c08a235e0">fcn.00698340</a><br>@c92f0480e2fbc88393d2c65c08a235e0</b><br>', 'point { fill-color: #e0440e; }'],
[2412.983154296875, -7032.681640625, '<b><a href="/report/sym.xmrig.exe_MHD_add_connection@c92f0480e2fbc88393d2c65c08a235e0">sym.xmrig.exe_MHD_add_connection</a><br>@c92f0480e2fbc88393d2c65c08a235e0</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
push edi
mov ebp, edx
push esi
push ebx
mov ebx, eax
sub esp, 0x3c
mov eax, dword[esp+0x50]
mov edi, dword[esp+0x54]
mov dword[esp+0x20], ecx
mov dword[esp+0x1c], eax
mov eax, dword[esp+0x58]
mov dword[esp+0x18], edi
mov dword[esp+0x24], eax
mov eax, edi
test al, al
je off.b212
mov esi, dword[ebx+0x64]
test esi, esi
je off.b212
mov ebx, dword[ebx+0x78]
test ebx, ebx
je off.b152
mov eax, edx
xor edx, edx
div ebx
imul eax, edx, 0x114
add eax, esi
mov edi, dword[eax+0xd0]
cmp dword[eax+0xcc], edi
jb off.b880
lea ecx, [ebp+1]
lea edi, [ebp+ebx]
jmp off.b148
mov eax, ecx
xor edx, edx
add ecx, 1
div ebx
imul edx, edx, 0x114
lea eax, [esi+edx]
mov edx, dword[eax+0xd0]
cmp dword[eax+0xcc], edx
jb off.b880
cmp edi, ecx
jne off.b112
mov dword[esp], ebp
call dword[sym.imp.WS2_32.dll_closesocket]
sub esp, 4
test eax, eax
mov esi, eax
je off.b806
mov eax, dword[0x83a8a0]
mov dword[esp+0xc], str.Close_socket_failed._n_
mov dword[esp+8], 0x897
mov dword[esp+4], str.T:_Bin-prep_mhd_src_libmicrohttpd-0.9.58_src_microhttpd_daemon.c_
mov dword[esp], eax
call dword[0x83a8a4]
mov eax, dword[ebx+0xd0]
cmp dword[ebx+0xcc], eax
je off.b768
mov esi, ebx
mov edx, dword[esp+0x18]
jmp off.b242
mov esi, eax
mov eax, dword[esi+0x60]
test eax, eax
jne off.b240
mov edi, dword[esi+0xd8]
mov dword[esp+0x18], edx
test edi, edi
jne off.b928
mov eax, dword[ebx+0x30]
test eax, eax
je off.b306
mov edi, dword[esp+0x1c]
mov dword[esp+8], edi
mov edi, dword[esp+0x20]
mov dword[esp+4], edi
mov ecx, dword[ebx+0x34]
mov dword[esp], ecx
call eax
test eax, eax
je off.b832
mov dword[esp+4], 0xe0
mov dword[esp], 1
call sub.msvcrt.dll_calloc
test eax, eax
mov edi, eax
je off.b1376
mov eax, dword[ebx+0x6c]
mov dword[esp], eax
call fcn.0069e360
test eax, eax
mov dword[edi+0x20], eax
je off.b1472
mov eax, dword[ebx+0xd4]
mov dword[edi+0x8c], eax
mov eax, dword[esp+0x1c]
mov dword[esp], eax
call sub.msvcrt.dll_malloc
test eax, eax
mov dword[edi+0x4c], eax
je off.b1596
mov esi, dword[esp+0x1c]
mov ecx, dword[esp+0x20]
mov dword[esp], eax
mov dword[esp+8], esi
mov dword[esp+4], ecx
call sub.msvcrt.dll_memcpy
movzx eax, byte[esp+0x24]
mov dword[edi+0x84], esi
mov esi, 0x16
mov dword[edi+0x98], ebp
mov dword[edi+0x10], ebx
mov byte[edi+0x9c], al
call fcn.0069e6e0
test byte[ebx+0xdc], 2
mov dword[edi+0x88], eax
je off.b993
mov eax, dword[ebx+0x40]
test eax, eax
je off.b506
lea edx, [edi+0x28]
mov dword[esp+0xc], 1
mov dword[esp+4], edi
mov dword[esp+8], edx
mov edx, dword[ebx+0x44]
mov dword[esp], edx
call eax
mov dword[esp], ebp
call dword[sym.imp.WS2_32.dll_closesocket]
sub esp, 4
test eax, eax
jne off.b2073
mov ecx, dword[esp+0x1c]
mov edx, dword[esp+0x20]
lea ebp, [ebx+0x9c]
mov eax, ebx
call fcn.006981f0
mov dword[esp], ebp
call dword[sym.imp.KERNEL32.dll_EnterCriticalSection]
sub esp, 4
test byte[ebx+0xdc], 4
jne off.b616
mov edx, dword[edi+0xc]
mov eax, dword[edi+8]
test edx, edx
je off.b1779
mov dword[edx+8], eax
mov eax, dword[edi+8]
mov edx, dword[edi+0xc]
test eax, eax
je off.b1771
mov dword[eax+0xc], edx
mov dword[edi+8], 0
mov dword[edi+0xc], 0
mov edx, dword[edi+4]
mov eax, dword[edi]
test edx, edx
je off.b1763
mov dword[edx], eax
mov eax, dword[edi]
mov edx, dword[edi+4]
test eax, eax
je off.b1755
mov dword[eax+4], edx
mov dword[edi], 0
mov dword[edi+4], 0
mov dword[esp], ebp
call dword[sym.imp.KERNEL32.dll_LeaveCriticalSection]
mov eax, dword[edi+0x20]
sub esp, 4
mov dword[esp], eax
call fcn.0069e400
mov eax, dword[edi+0x4c]
mov dword[esp], eax
call sub.msvcrt.dll_free
mov dword[esp], edi
call sub.msvcrt.dll_free
test esi, esi
jne off.b1740
call dword[sym.imp.msvcrt.dll__errno]
mov dword[eax], 0x16
jmp off.b818
mov dword[esp+4], str.Failed_to_add_IP_connection_count_node_n
mov dword[esp], esi
call fcn.0069df20
mov eax, dword[esp+0x28]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_LeaveCriticalSection]
sub esp, 4
mov dword[esp], edi
call sub.msvcrt.dll_free
lea esi, [esi]
mov dword[esp+4], str.Server_reached_connection_limit._Closing_inbound_connection._n
mov dword[esp], ebx
call fcn.0069df20
mov dword[esp], ebp
call dword[sym.imp.WS2_32.dll_closesocket]
sub esp, 4
test eax, eax
mov esi, eax
jne off.b2035
call dword[sym.imp.msvcrt.dll__errno]
mov dword[eax], 0x17
add esp, 0x3c
mov eax, esi
pop ebx
pop esi
pop edi
pop ebp
ret
mov dword[esp], ebp
call dword[sym.imp.WS2_32.dll_closesocket]
sub esp, 4
test eax, eax
mov esi, eax
jne off.b2111
mov ecx, dword[esp+0x1c]
mov edx, dword[esp+0x20]
mov eax, ebx
call fcn.006981f0
jmp off.b818
movzx edx, byte[esp+0x24]
mov edi, dword[esp+0x1c]
mov dword[esp+0x54], 1
mov ecx, dword[esp+0x20]
mov dword[esp+0x50], edi
mov dword[esp+0x58], edx
add esp, 0x3c
mov edx, ebp
pop ebx
pop esi
pop edi
pop ebp
jmp fcn.00698340
mov dword[esp+4], 1
mov dword[esp], 0x18
call sub.msvcrt.dll_calloc
test eax, eax
mov edi, eax
je off.b768
cmp dword[esp+0x1c], 0x10
je off.b1575
cmp dword[esp+0x1c], 0x1c
je off.b1215
mov dword[esp], eax
call sub.msvcrt.dll_free
jmp off.b267
lea esi, [ebx+0x9c]
mov dword[esp], edi
call fcn.00694970
mov dword[esp], esi
call dword[sym.imp.KERNEL32.dll_EnterCriticalSection]
mov eax, dword[ebx+0xcc]
sub esp, 4
cmp eax, dword[ebx+0xd0]
jae off.b1787
add eax, 1
test byte[ebx+0xdc], 4
mov dword[ebx+0xcc], eax
jne off.b1085
mov ecx, dword[ebx+0x24]
mov eax, dword[ebx+0x20]
mov dword[edi+0xc], 0
test ecx, ecx
mov dword[edi+8], eax
je off.b1986
mov dword[eax+0xc], edi
mov dword[ebx+0x20], edi
mov edx, dword[ebx+0xc]
mov eax, dword[ebx+8]
mov dword[edi+4], 0
test edx, edx
mov dword[edi], eax
je off.b1877
mov dword[eax+4], edi
mov dword[ebx+8], edi
mov dword[esp], esi
call dword[sym.imp.KERNEL32.dll_LeaveCriticalSection]
mov eax, dword[ebx+0x40]
sub esp, 4
test eax, eax
je off.b1160
lea ecx, [edi+0x28]
mov dword[esp+0xc], 0
mov dword[esp+4], edi
mov dword[esp+8], ecx
mov ecx, dword[ebx+0x44]
mov dword[esp], ecx
call eax
mov eax, dword[ebx+0xdc]
and eax, 4
jne off.b1825
mov edx, dword[ebx+0x7c]
mov ecx, dword[ebx+0x80]
mov dword[edi+0x50], edx
mov dword[edi+0x54], ecx
test eax, eax
jne off.b1205
cmp byte[esp+0x18], 0
jne off.b1885
mov esi, 1
jmp off.b818
mov edx, dword[esp+0x20]
mov dword[eax], 0x17
lea eax, [edx+8]
mov edx, dword[edx+8]
mov dword[edi+4], edx
mov edx, dword[eax+4]
mov dword[edi+8], edx
mov edx, dword[eax+8]
mov eax, dword[eax+0xc]
mov dword[edi+0xc], edx
mov dword[edi+0x10], eax
lea eax, [esi+0x84]
mov dword[esp+0x28], eax
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_EnterCriticalSection]
lea eax, [esi+0x68]
sub esp, 4
mov dword[esp+8], 0x697f10
mov dword[esp], edi
mov dword[esp+4], eax
call fcn.006b22c0
test eax, eax
je off.b724
mov ecx, dword[eax]
cmp edi, ecx
je off.b1327
mov dword[esp], edi
mov dword[esp+0x2c], ecx
call sub.msvcrt.dll_free
mov ecx, dword[esp+0x2c]
mov eax, dword[ecx+0x14]
cmp eax, dword[esi+0xd8]
jae off.b1719
add eax, 1
mov dword[ecx+0x14], eax
mov eax, dword[esp+0x28]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_LeaveCriticalSection]
sub esp, 4
jmp off.b267
mov edi, dword[sym.imp.msvcrt.dll__errno]
call edi
mov eax, dword[eax]
mov dword[esp+0x18], eax
call edi
mov eax, dword[eax]
mov dword[esp], eax
call sub.msvcrt.dll_strerror
mov dword[esp+4], str.Error_allocating_memory:__s_n_
mov dword[esp+8], eax
mov dword[esp], ebx
call fcn.0069df20
mov dword[esp], ebp
call dword[sym.imp.WS2_32.dll_closesocket]
sub esp, 4
test eax, eax
mov esi, eax
jne off.b2187
mov ecx, dword[esp+0x1c]
mov edx, dword[esp+0x20]
mov eax, ebx
call fcn.006981f0
call edi
mov edi, dword[esp+0x18]
mov dword[eax], edi
jmp off.b818
mov eax, dword[sym.imp.msvcrt.dll__errno]
mov dword[esp+0x18], eax
call eax
mov eax, dword[eax]
mov dword[esp], eax
call sub.msvcrt.dll_strerror
mov dword[esp+4], str.Error_allocating_memory:__s_n_
mov dword[esp+8], eax
mov dword[esp], ebx
call fcn.0069df20
mov dword[esp], ebp
call dword[sym.imp.WS2_32.dll_closesocket]
sub esp, 4
test eax, eax
mov esi, eax
jne off.b2149
mov ecx, dword[esp+0x1c]
mov edx, dword[esp+0x20]
mov eax, ebx
call fcn.006981f0
mov dword[esp], edi
call sub.msvcrt.dll_free
mov eax, dword[esp+0x18]
call eax
mov dword[eax], 0xc
jmp off.b818
mov dword[eax], 2
mov eax, dword[esp+0x20]
mov eax, dword[eax+4]
mov dword[edi+4], eax
jmp off.b1252
mov esi, dword[sym.imp.msvcrt.dll__errno]
mov dword[esp+0x24], esi
call esi
mov eax, dword[eax]
mov dword[esp+0x18], eax
call esi
mov eax, dword[eax]
mov dword[esp], eax
call sub.msvcrt.dll_strerror
mov dword[esp+4], str.Error_allocating_memory:__s_n_
mov dword[esp+8], eax
mov dword[esp], ebx
call fcn.0069df20
mov dword[esp], ebp
call dword[sym.imp.WS2_32.dll_closesocket]
sub esp, 4
test eax, eax
mov esi, eax
jne off.b2225
mov ecx, dword[esp+0x1c]
mov edx, dword[esp+0x20]
mov eax, ebx
call fcn.006981f0
mov eax, dword[edi+0x20]
mov dword[esp], eax
call fcn.0069e400
mov dword[esp], edi
call sub.msvcrt.dll_free
mov eax, dword[esp+0x24]
call eax
mov edi, dword[esp+0x18]
mov dword[eax], edi
jmp off.b818
mov eax, dword[esp+0x28]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_LeaveCriticalSection]
sub esp, 4
jmp off.b768
call dword[sym.imp.msvcrt.dll__errno]
mov dword[eax], esi
xor esi, esi
jmp off.b818
mov dword[ebx+0xc], edx
jmp off.b647
mov dword[ebx+8], eax
jmp off.b636
mov dword[ebx+0x24], edx
jmp off.b602
mov dword[ebx+0x20], eax
jmp off.b591
mov dword[esp], esi
mov esi, 0x17
call dword[sym.imp.KERNEL32.dll_LeaveCriticalSection]
sub esp, 4
mov dword[esp+4], str.Server_reached_connection_limit._Closing_inbound_connection._n_
mov dword[esp], ebx
call fcn.0069df20
jmp off.b472
mov dword[esp+0xc], edi
mov dword[esp+8], 0x699730
mov eax, dword[ebx+0x74]
mov dword[esp+4], eax
lea eax, [edi+0x50]
mov dword[esp], eax
call fcn.0069edf0
test eax, eax
je off.b1994
mov eax, dword[ebx+0xdc]
and eax, 4
jmp off.b1190
mov dword[ebx+0xc], edi
jmp off.b1111
cmp dword[ebx+0xbc], 0xffffffff
je off.b1205
mov dword[esp+0xc], 0
mov dword[esp+8], 1
mov dword[esp+4], 0x7b9c93
mov eax, dword[ebx+0xc0]
mov dword[esp], eax
call dword[sym.imp.WS2_32.dll_send]
sub esp, 0x10
test eax, eax
jg off.b1205
call dword[sym.imp.WS2_32.dll_WSAGetLastError]
cmp eax, 0x2733
je off.b1205
mov dword[esp+4], str.Failed_to_signal_new_connection_via_inter_thread_communication_channel.
mov dword[esp], ebx
call fcn.0069df20
jmp off.b1205
mov dword[ebx+0x24], edi
jmp off.b1082
call dword[sym.imp.msvcrt.dll__errno]
mov esi, dword[eax]
mov dword[esp], esi
call sub.msvcrt.dll_strerror
mov dword[esp+4], str.Failed_to_create_a_thread:__s_n_
mov dword[esp+8], eax
mov dword[esp], ebx
call fcn.0069df20
jmp off.b472
mov eax, dword[0x83a8a0]
mov dword[esp+0xc], str.Close_socket_failed._n_
mov dword[esp+8], 0x8d3
mov dword[esp+4], str.T:_Bin-prep_mhd_src_libmicrohttpd-0.9.58_src_microhttpd_daemon.c_
mov dword[esp], eax
call dword[0x83a8a4]
mov eax, dword[0x83a8a0]
mov dword[esp+0xc], str.Close_socket_failed._n_
mov dword[esp+8], 0x9db
mov dword[esp+4], str.T:_Bin-prep_mhd_src_libmicrohttpd-0.9.58_src_microhttpd_daemon.c_
mov dword[esp], eax
call dword[0x83a8a4]
mov eax, dword[0x83a8a0]
mov dword[esp+0xc], str.Close_socket_failed._n_
mov dword[esp+8], 0x8e6
mov dword[esp+4], str.T:_Bin-prep_mhd_src_libmicrohttpd-0.9.58_src_microhttpd_daemon.c_
mov dword[esp], eax
call dword[0x83a8a4]
mov eax, dword[0x83a8a0]
mov dword[esp+0xc], str.Close_socket_failed._n_
mov dword[esp+8], 0x907
mov dword[esp+4], str.T:_Bin-prep_mhd_src_libmicrohttpd-0.9.58_src_microhttpd_daemon.c_
mov dword[esp], eax
call dword[0x83a8a4]
mov eax, dword[0x83a8a0]
mov dword[esp+0xc], str.Close_socket_failed._n_
mov dword[esp+8], 0x8f8
mov dword[esp+4], str.T:_Bin-prep_mhd_src_libmicrohttpd-0.9.58_src_microhttpd_daemon.c_
mov dword[esp], eax
call dword[0x83a8a4]
mov eax, dword[0x83a8a0]
mov dword[esp+0xc], str.Close_socket_failed._n_
mov dword[esp+8], 0x91b
mov dword[esp+4], str.T:_Bin-prep_mhd_src_libmicrohttpd-0.9.58_src_microhttpd_daemon.c_
mov dword[esp], eax
call dword[0x83a8a4]
mov esi, esi
lea edi, [edi]

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/c92f0480e2fbc88393d2c65c08a235e0