---
layout: post
title:  "fcn.00691fc0 @ c92f0480e2fbc88393d2c65c08a235e0"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00691fc0
- **Origin (md5):** c92f0480e2fbc88393d2c65c08a235e0
- **VirusTotal:** [virustotal.com/gui/file/c92f0480e2fbc88393d2c65c08a235e0][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.00691fc0@c92f0480e2fbc88393d2c65c08a235e0">fcn.00691fc0</a><br>@c92f0480e2fbc88393d2c65c08a235e0</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
push edi
mov edi, 0x32
push esi
push ebx
sub esp, 0x9c
mov eax, dword[esp+0xb4]
mov eax, dword[eax+0x18]
cmp eax, 0xff
ja off.b151
mov edx, 3
cmp eax, 3
mov esi, edx
cmovge esi, eax
lea eax, [esi+esi*4+4]
mov dword[esp], eax
call fcn.0066b490
test eax, eax
mov ebx, eax
je off.b1296
mov dword[eax], esi
xor eax, eax
mov esi, esi
lea edi, [edi]
mov byte[ebx+eax+4], 0
lea edx, [ebx+eax*4]
add edx, dword[ebx]
add eax, 1
cmp eax, esi
mov dword[edx+4], 0xffffffff
jl off.b80
mov edi, dword[esp+0xb4]
xor ebp, ebp
mov dword[esp+0x2c], esi
cmp dword[edi+0x18], ebp
jg off.b164
cmp ebp, 2
jle off.b1578
add ebp, 1
cmp ebp, dword[esp+0x2c]
jl off.b117
mov eax, dword[esp+0xb8]
xor edi, edi
mov dword[eax], ebx
add esp, 0x9c
mov eax, edi
pop ebx
pop esi
pop edi
pop ebp
ret
mov eax, dword[edi+0x1c]
lea edx, [eax+ebp*8]
mov eax, dword[edx]
mov esi, dword[edx+4]
mov edx, eax
and edx, 7
cmp edx, 1
je off.b400
jb off.b122
cmp edx, 2
je off.b288
cmp edx, 4
jne off.b240
mov eax, dword[esi+8]
cmp eax, 0xe
je off.b1120
cmp eax, 7
je off.b964
mov edi, 0x32
mov dword[esp], ebx
call fcn.00691f70
jmp off.b151
mov dword[esp+8], 0x1b6
mov dword[esp+4], str.src_win_process-stdio.c_
mov edi, 0xffffffff
mov dword[esp], 0x7b87dd
call fcn.006b2490
add esp, 0x9c
mov eax, edi
pop ebx
pop esi
pop edi
pop ebp
ret
cmp esi, 0xffffffff
je off.b360
mov dword[esp], esi
call dword[sym.imp.msvcrt.dll__get_osfhandle]
lea edx, [eax-1]
cmp edx, 0xfffffffd
ja off.b1057
cmp eax, 0xfffffffe
je off.b1057
lea edx, [esp+0x50]
call fcn.00691e80
test eax, eax
mov edx, eax
je off.b1136
cmp eax, 6
jne off.b1632
cmp esi, 2
jg off.b1632
mov byte[ebx+ebp+4], 0
lea eax, [ebx+ebp*4]
add ebp, 1
add eax, dword[ebx]
cmp ebp, dword[esp+0x2c]
mov dword[eax+4], 0xffffffff
jl off.b117
jmp off.b140
cmp dword[esi+8], 7
je off.b442
mov dword[esp+8], 0x14e
mov dword[esp+4], str.src_win_process-stdio.c_
mov dword[esp], str.fdopt.data.stream__type__UV_NAMED_PIPE
mov dword[esp+0x30], eax
call fcn.006b2490
mov eax, dword[esp+0x30]
mov edx, dword[esi+0x2c]
test dh, 0x10
jne off.b1248
and edx, 0x2000000
jne off.b1200
mov edx, eax
and edx, 0x10
cmp edx, 1
mov dword[esp+0x34], edx
sbb ecx, ecx
not ecx
and ecx, 0x80000100
cmp edx, 1
sbb edx, edx
not edx
and edx, 3
and eax, 0x20
mov dword[esp+0x38], eax
je off.b516
or edx, 1
or ecx, 0x40000080
lea eax, [esp+0x50]
mov dword[esp+8], edx
mov dword[esp+0x10], 0x40
mov dword[esp+4], esi
mov dword[esp+0x30], ecx
mov dword[esp+0xc], eax
mov eax, dword[esp+0xb0]
mov dword[esp], eax
call fcn.0067aed0
test eax, eax
mov edx, eax
jne off.b880
mov edx, dword[esi+0x90]
xor eax, eax
mov ecx, dword[esp+0x30]
mov dword[esp+0x44], 0xc
mov dword[esp+0x48], 0
mov dword[esp+0x4c], 1
mov dword[esp+0x18], 0
test edx, edx
mov dword[esp+4], ecx
mov dword[esp+0x10], 3
setne al
mov dword[esp+8], 0
shl eax, 0x1e
mov dword[esp+0x14], eax
lea eax, [esp+0x44]
mov dword[esp+0xc], eax
lea eax, [esp+0x50]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_CreateFileA]
sub esp, 0x1c
cmp eax, 0xffffffff
mov ecx, eax
je off.b1088
lea eax, [esp+0x40]
mov dword[esp], ecx
mov dword[esp+0x30], ecx
mov dword[esp+0x18], 0
mov dword[esp+0x14], 0
mov dword[esp+0x10], 0
mov dword[esp+0xc], 0
mov dword[esp+8], 0
mov dword[esp+4], eax
call dword[sym.imp.KERNEL32.dll_GetNamedPipeHandleStateA]
sub esp, 0x1c
cmp eax, 1
mov ecx, dword[esp+0x30]
je off.b785
mov dword[esp+8], 0x9d
mov dword[esp+4], str.src_win_process-stdio.c_
mov dword[esp], str.r__TRUE
call fcn.006b2490
mov ecx, dword[esp+0x30]
mov eax, dword[esp+0x40]
test eax, eax
jne off.b1488
mov dword[esp+4], 0
mov eax, dword[esi+0x94]
mov dword[esp+0x30], ecx
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_ConnectNamedPipe]
sub esp, 8
test eax, eax
mov ecx, dword[esp+0x30]
je off.b1411
mov eax, dword[esp+0x34]
test eax, eax
je off.b854
or dword[esi+0x2c], 0x10000
mov edx, dword[esp+0x38]
test edx, edx
je off.b933
or dword[esi+0x2c], 0x8000
jmp off.b933
cmp dword[esi+0x94], 0xffffffff
je off.b1632
mov eax, dword[esp+0xb0]
mov dword[esp+4], esi
mov dword[esp+0x30], edx
mov dword[esp], eax
call fcn.0067bd90
mov edx, dword[esp+0x30]
test edx, edx
jne off.b1632
mov ecx, 0xffffffff
lea eax, [ebx+ebp*4]
add eax, dword[ebx]
mov dword[eax+4], ecx
mov byte[ebx+ebp+4], 9
add ebp, 1
cmp ebp, dword[esp+0x2c]
jl off.b117
jmp off.b140
test byte[esi+0x2d], 0x10
je off.b222
mov eax, dword[esi+0x94]
mov esi, 9
lea edx, [eax-1]
cmp edx, 0xfffffffd
ja off.b222
cmp eax, 0xfffffffe
je off.b1074
lea edx, [esp+0x50]
call fcn.00691e80
test eax, eax
mov edx, eax
jne off.b1632
lea eax, [ebx+ebp*4]
add eax, dword[ebx]
mov edx, dword[esp+0x50]
mov dword[eax+4], edx
mov eax, esi
mov byte[ebx+ebp+4], al
add ebp, 1
cmp ebp, dword[esp+0x2c]
jl off.b117
jmp off.b140
cmp esi, 2
mov dword[esp+0x50], 0xffffffff
jle off.b360
mov edi, 6
jmp off.b227
call dword[sym.imp.KERNEL32.dll_GetLastError]
cmp dword[esi+0x94], 0xffffffff
mov edx, eax
je off.b920
jmp off.b893
mov eax, dword[esi+0x90]
mov esi, 0x41
jmp off.b985
mov eax, dword[esp+0x50]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_GetFileType]
sub esp, 4
cmp eax, 2
je off.b1376
ja off.b1314
test eax, eax
je off.b1529
cmp eax, 1
jne off.b1330
mov byte[ebx+ebp+4], 1
jmp off.b1381
mov dword[esp+8], 0x150
mov dword[esp+4], str.src_win_process-stdio.c_
mov dword[esp], str.__fdopt.data.stream__flags__UV_HANDLE_PIPESERVER_
mov dword[esp+0x30], eax
call fcn.006b2490
mov eax, dword[esp+0x30]
jmp off.b466
mov dword[esp+8], 0x14f
mov dword[esp+4], str.src_win_process-stdio.c_
mov dword[esp], str.__fdopt.data.stream__flags__UV_HANDLE_CONNECTION_
mov dword[esp+0x30], eax
call fcn.006b2490
mov edx, dword[esi+0x2c]
mov eax, dword[esp+0x30]
jmp off.b454
add esp, 0x9c
mov edi, 0xe
pop ebx
mov eax, edi
pop esi
pop edi
pop ebp
ret
cmp eax, 3
je off.b1568
cmp eax, 0x8000
je off.b1376
mov dword[esp+8], 0x188
mov dword[esp+4], str.src_win_process-stdio.c_
mov edi, 0xffffffff
mov dword[esp], 0x7b87dd
call fcn.006b2490
jmp off.b151
mov byte[ebx+ebp+4], 0x41
lea eax, [ebx+ebp*4]
add ebp, 1
add eax, dword[ebx]
cmp ebp, dword[esp+0x2c]
mov edx, dword[esp+0x50]
mov dword[eax+4], edx
jl off.b117
jmp off.b140
mov edx, dword[sym.imp.KERNEL32.dll_GetLastError]
mov dword[esp+0x3c], edx
call edx
cmp eax, 0x217
mov ecx, dword[esp+0x30]
je off.b839
mov edx, dword[esp+0x3c]
call edx
cmp dword[esi+0x94], 0xffffffff
mov edx, eax
mov ecx, dword[esp+0x30]
jne off.b1639
mov dword[esp+0x30], edx
mov dword[esp], ecx
call dword[sym.imp.KERNEL32.dll_CloseHandle]
sub esp, 4
mov edx, dword[esp+0x30]
jmp off.b920
mov dword[esp+8], 0x9e
mov dword[esp+4], str.src_win_process-stdio.c_
mov dword[esp], str.mode___PIPE_READMODE_BYTE__PIPE_WAIT_
mov dword[esp+0x30], ecx
call fcn.006b2490
mov ecx, dword[esp+0x30]
jmp off.b797
mov esi, dword[sym.imp.KERNEL32.dll_GetLastError]
call esi
test eax, eax
je off.b1376
call esi
mov edi, eax
mov eax, dword[esp+0x50]
mov dword[esp], eax
call dword[sym.imp.KERNEL32.dll_CloseHandle]
push eax
jmp off.b227
mov byte[ebx+ebp+4], 9
jmp off.b1381
cmp ebp, 1
sbb eax, eax
and eax, 0xfffffef3
add eax, 0x120196
mov dword[esp+4], eax
mov eax, dword[ebx]
lea eax, [eax+ebp*4+4]
add eax, ebx
mov dword[esp], eax
call fcn.00691ef0
test eax, eax
mov edx, eax
jne off.b1632
mov byte[ebx+ebp+4], 0x41
jmp off.b131
mov edi, edx
jmp off.b227
mov dword[esp+0x34], eax
mov eax, dword[esp+0xb0]
mov dword[esp+4], esi
mov dword[esp+0x30], ecx
mov dword[esp], eax
call fcn.0067bd90
mov edx, dword[esp+0x34]
mov ecx, dword[esp+0x30]
jmp off.b1463

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/c92f0480e2fbc88393d2c65c08a235e0