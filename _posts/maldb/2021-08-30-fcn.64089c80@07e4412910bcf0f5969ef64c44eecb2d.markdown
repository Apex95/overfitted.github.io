---
layout: post
title:  "fcn.64089c80 @ 07e4412910bcf0f5969ef64c44eecb2d"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.64089c80
- **Origin (md5):** 07e4412910bcf0f5969ef64c44eecb2d
- **VirusTotal:** [virustotal.com/gui/file/07e4412910bcf0f5969ef64c44eecb2d][virustotal_ref]

# Code Tags
<span class="tag" id="SOCKET">SOCKET</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.64089c80@07e4412910bcf0f5969ef64c44eecb2d">fcn.64089c80</a><br>@07e4412910bcf0f5969ef64c44eecb2d</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

sub esp, 0x9c
mov eax, dword[0x641b8950]
xor eax, esp
mov dword[esp+0x98], eax
mov edx, dword[esp+0xa4]
xor eax, eax
push ebx
mov ebx, dword[esp+0xb0]
push ebp
mov dword[esp+0x28], eax
mov ebp, ecx
mov ecx, dword[esp+0xa8]
mov dword[esp+0x2c], eax
mov dword[esp+0x30], eax
mov dword[esp+0x34], eax
mov dword[esp+0x38], eax
mov dword[esp+0x3c], eax
mov dword[esp+0x40], eax
mov dword[esp+0x54], eax
mov dword[esp+0x58], eax
mov dword[esp+0x5c], eax
mov dword[esp+0x60], eax
mov dword[esp+0x64], eax
mov dword[esp+0x68], eax
mov dword[esp+0x6c], eax
mov eax, edx
push esi
mov esi, dword[esp+0xb4]
or eax, esi
mov dword[esp+0xc], edx
mov dword[esp+0x10], esi
je off.b135
mov dword[esp+0x24], ecx
mov dword[esp+0x20], edx
jmp off.b151
lea eax, [esp+0x1b]
mov dword[esp+0x20], 1
mov dword[esp+0x24], eax
test byte[esp+0xbc], 6
lea eax, [esp+0x20]
mov dword[esp+0x34], eax
lea eax, [esp+0x58]
mov dword[esp+0x38], 1
mov dword[esp+0x2c], eax
mov dword[esp+0x30], 0x1c
je off.b209
lea eax, [esp+0x74]
mov dword[esp+0x3c], 0x30
mov dword[esp+0x40], eax
mov eax, dword[ebp+0x80]
mov dword[esp+0x48], 0
mov dword[esp+0x14], 0
push 0
push 0
test eax, eax
je off.b256
lea ecx, [esp+0x1c]
push ecx
lea ecx, [esp+0x38]
push ecx
push dword[ebp+0x6c]
call eax
jmp off.b292
lea eax, [esp+0x38]
push eax
lea eax, [esp+0x64]
push eax
lea eax, [esp+0x58]
push eax
lea eax, [esp+0x28]
push eax
push 1
lea eax, [esp+0x3c]
push eax
push dword[ebp+0x6c]
call dword[sym.imp.WS2_32.dll_WSARecvFrom]
cdq
and eax, edx
cmp eax, 0xffffffff
jne off.b447
call dword[sym.imp.WS2_32.dll_WSAGetLastError]
cmp eax, 0x2738
jne off.b369
mov eax, dword[esp+0x14]
xor ecx, ecx
cmp ecx, esi
jl off.b357
jg off.b338
cmp eax, dword[esp+0xb0]
jbe off.b357
mov eax, dword[esp+0xb0]
mov esi, dword[esp+0xb4]
jmp off.b496
mov esi, ecx
mov dword[esp+0xc], eax
mov dword[esp+0x10], esi
jmp off.b496
mov ecx, ebp
sub eax, 0x2744
je off.b393
sub eax, 2
je off.b387
push 0x13
jmp off.b395
push 0x1b
push 0
jmp off.b397
push 0x1a
push 7
call fcn.64087a40
or esi, 0xffffffff
mov dword[esp+0x10], esi
test ebx, ebx
je off.b812
mov ecx, ebx
call sym
lea ecx, [ebx+4]
call sym
mov dword[ebx+8], 0
mov dword[ebx+0xc], esi
jmp off.b812
mov eax, dword[esp+0x14]
xor esi, esi
test byte[esp+0xbc], 1
mov dword[esp+0xc], eax
mov dword[esp+0x10], esi
je off.b496
push ebx
lea eax, [ebx+0x10]
push eax
lea eax, [esp+0x60]
push eax
push dword[ebp+0x6c]
call fcn.6408a880
mov eax, dword[esp+0x1c]
add esp, 0x10
and eax, esi
cmp eax, 0xffffffff
je off.b808
cmp dword[ebp+0x80], 0
je off.b808
xor esi, esi
cmp dword[esp+0x3c], 0xc
cmovae esi, dword[esp+0x40]
test esi, esi
je off.b808
push edi
mov edi, dword[sym.imp.Qt5Core.dll_public:_static_class_QString___cdecl_QString::number_unsigned_long_int__int_]
cmp dword[esi+4], 0x29
jne off.b632
cmp dword[esi+8], 0x13
jne off.b632
cmp dword[esi], 0x20
jb off.b632
lea edi, [esi+0xc]
push edi
lea ecx, [esp+0x24]
call sym
mov eax, dword[edi+0x10]
mov edi, dword[sym.imp.Qt5Core.dll_public:_static_class_QString___cdecl_QString::number_unsigned_long_int__int_]
test eax, eax
je off.b623
push 0xa
push eax
lea eax, [esp+0x60]
push eax
call edi
add esp, 0xc
lea ecx, [esp+0x20]
push eax
call sym
lea ecx, [esp+0x58]
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QString::destructor_void_]
lea ecx, [esp+0x20]
call sym
cmp dword[esi+4], 0
jne off.b728
cmp dword[esi+8], 0x13
jne off.b728
cmp dword[esi], 0x14
jb off.b728
lea eax, [esp+0x50]
push eax
push dword[esi+0xc]
push dword[ebp+0x6c]
call dword[sym.imp.WS2_32.dll_WSANtohl]
push dword[esp+0x50]
lea ecx, [esp+0x30]
call sym
mov eax, dword[esi+0x10]
test eax, eax
je off.b719
push 0xa
push eax
lea eax, [esp+0x5c]
push eax
call edi
add esp, 0xc
lea ecx, [esp+0x2c]
push eax
call sym
lea ecx, [esp+0x54]
call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QString::destructor_void_]
lea ecx, [esp+0x2c]
call sym
cmp dword[esi], 0x10
jne off.b763
mov eax, dword[esi+4]
cmp eax, 0x29
jne off.b747
cmp dword[esi+8], 0x15
je off.b757
test eax, eax
jne off.b763
cmp dword[esi+8], 4
jne off.b763
mov eax, dword[esi+0xc]
mov dword[ebx+0xc], eax
mov edi, dword[esi]
mov eax, dword[esp+0x40]
add edi, 3
add eax, dword[esp+0x44]
mov edx, edi
and edx, 0xfffffffc
add edx, 0xc
add edx, esi
cmp edx, eax
ja off.b807
and edi, 0xfffffffc
add esi, edi
mov edi, dword[sym.imp.Qt5Core.dll_public:_static_class_QString___cdecl_QString::number_unsigned_long_int__int_]
jne off.b547
pop edi
mov esi, dword[esp+0xc]
mov ecx, dword[esp+0xa4]
mov eax, esi
mov edx, dword[esp+0x10]
pop esi
pop ebp
pop ebx
xor ecx, esp
call fcn.641429ea
add esp, 0x9c
ret 0x14

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/07e4412910bcf0f5969ef64c44eecb2d