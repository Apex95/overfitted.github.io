---
layout: post
title:  "fcn.00445170 @ 3dfcfb1d918b690c00de324bcfcdc082"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00445170
- **Origin (md5):** 3dfcfb1d918b690c00de324bcfcdc082
- **VirusTotal:** [virustotal.com/gui/file/3dfcfb1d918b690c00de324bcfcdc082][virustotal_ref]

# Code Tags
<span class="tag" id="SOCKET">SOCKET</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.00445170@3dfcfb1d918b690c00de324bcfcdc082">fcn.00445170</a><br>@3dfcfb1d918b690c00de324bcfcdc082</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
mov eax, 0x5dc4
call fcn.00450750
mov eax, dword[0x48800c]
xor eax, ebp
mov dword[ebp-4], eax
push ebx
push esi
push edi
push 0xff
lea eax, [ebp-0x107]
mov byte[ebp-0x108], 0
push 0
push eax
mov ebx, ecx
call sub.MSVCR120.dll_memset
add esp, 0xc
mov byte[ebp-0x380], 0
lea eax, [ebp-0x37f]
push 0x1f4
push 0
push eax
call sub.MSVCR120.dll_memset
add esp, 0xc
mov byte[ebp-0x580], 0
lea eax, [ebp-0x57f]
push 0x1ff
push 0
push eax
call sub.MSVCR120.dll_memset
mov eax, dword[ebx+0x1414]
add esp, 0xc
mov dword[ebx+0x1410], 0x12d
push 0xc9
push 0x65
push ebx
call eax
add esp, 0xc
mov byte[ebp-0xd80], 0
lea eax, [ebp-0xd7f]
push 0x7ff
push 0
push eax
call sub.MSVCR120.dll_memset
add esp, 0xc
lea esi, [ebx+0x126c]
push 0x80
push 0
push esi
call sub.MSVCR120.dll_memset
add esp, 0xc
lea eax, [ebp-0xd80]
push eax
push esi
lea eax, [ebx+0x26c]
push eax
call fcn.00445040
test al, al
mov eax, 2
je off.b1590
push esi
mov word[ebp-0x5d90], ax
lea eax, [ebp-0x580]
push 0x200
push eax
call dword[sym.imp.MSVCR120.dll_strcpy_s]
add esp, 0xc
cmp byte[ebx+0x1418], 0
jne off.b333
push 0x50
call dword[sym.imp.WS2_32.dll_htons]
mov edi, dword[sym.imp.WS2_32.dll_inet_addr]
push esi
mov word[ebp-0x5d8e], ax
call edi
mov dword[ebp-0x5d8c], eax
cmp eax, 0xffffffff
jne off.b418
cmp byte[ebx+0x140c], 0
jne off.b1536
push esi
call fcn.00445110
test al, al
je off.b1536
push esi
call edi
jmp off.b412
movzx eax, word[ebx+0x149a]
push eax
call dword[sym.imp.WS2_32.dll_htons]
lea edi, [ebx+0x1419]
mov word[ebp-0x5d8e], ax
push edi
call dword[sym.imp.WS2_32.dll_inet_addr]
mov dword[ebp-0x5d8c], eax
cmp eax, 0xffffffff
jne off.b418
cmp byte[ebx+0x140c], 0
jne off.b1536
push edi
call fcn.00445110
test al, al
je off.b1536
push edi
call dword[sym.imp.WS2_32.dll_inet_addr]
mov dword[ebp-0x5d8c], eax
mov ecx, ebx
call fcn.004443a0
test al, al
je off.b1536
cmp byte[ebx+0x140c], 0
jne off.b1536
mov eax, dword[ebx+0x1414]
push 0xca
push 0x65
push ebx
mov dword[ebx+0x1410], 0x12e
call eax
add esp, 0xc
lea eax, [ebp-0x5d90]
push dword[ebx+0x28]
push dword[ebx+0x24]
push ecx
push eax
push dword[ebx+0x248]
mov ecx, ebx
call fcn.004458a0
cmp eax, 0xffffffff
je off.b1536
cmp byte[ebx+0x140c], 0
jne off.b1536
cmp byte[ebx+0x1418], 0
lea eax, [ebp-0xd80]
push eax
lea eax, [ebp-0x3580]
jne off.b563
push str.GET__s_HTTP_1.1_r_n
push eax
call dword[sym.imp.MSVCR120.dll_sprintf]
add esp, 0xc
jmp off.b579
push esi
push str.GET_http:___s_s_HTTP_1.1_r_n
push eax
call dword[sym.imp.MSVCR120.dll_sprintf]
add esp, 0x10
lea ecx, [ebp-0x3580]
dec ecx
lea ebx, [ebx]
mov al, byte[ecx+1]
lea ecx, [ecx+1]
test al, al
jne off.b592
mov eax, dword[str.Host:_]
lea edx, [ebp-0x580]
mov dword[ecx], eax
mov esi, edx
mov ax, word[0x45c760]
mov word[ecx+4], ax
mov al, byte[0x45c762]
mov byte[ecx+6], al
jmp off.b640
mov al, byte[edx]
inc edx
test al, al
jne off.b640
lea edi, [ebp-0x3580]
sub edx, esi
dec edi
mov al, byte[edi+1]
inc edi
test al, al
jne off.b656
mov ecx, edx
shr ecx, 2
rep movsd
mov ecx, edx
and ecx, 3
rep movsb
lea ecx, [ebp-0x3580]
dec ecx
lea ecx, [ecx]
mov al, byte[ecx+1]
lea ecx, [ecx+1]
test al, al
jne off.b688
mov ax, word[0x45c758]
mov word[ecx], ax
mov al, byte[0x45c75a]
mov byte[ecx+2], al
lea ecx, [ebp-0x3580]
dec ecx
mov al, byte[ecx+1]
lea ecx, [ecx+1]
test al, al
jne off.b722
mov eax, dword[str.Accept:___r_n]
lea edi, [ebp-0x3580]
mov dword[ecx], eax
dec edi
mov eax, dword[0x45c784]
mov dword[ecx+4], eax
mov eax, dword[0x45c788]
mov dword[ecx+8], eax
mov ax, word[0x45c78c]
mov word[ecx+0xc], ax
mov al, byte[edi+1]
inc edi
test al, al
jne off.b772
mov ecx, 6
lea eax, [ebx+0x24c]
mov esi, str.Cache_Control:_no_cache_r_n
rep movsd
push eax
lea eax, [ebp-0x3580]
push str.User_Agent:__s_r_n
push eax
movsw word
call fcn.00445b60
mov edi, dword[sym.imp.MSVCR120.dll_sprintf]
add esp, 0xc
cmp byte[ebx+0x149c], 0
je off.b1057
lea eax, [ebx+0x151d]
push eax
lea eax, [ebx+0x149d]
push eax
lea eax, [ebp-0x108]
push str._s:_s
push eax
call edi
add esp, 0xc
lea edx, [ebp-0x380]
lea ecx, [ebp-0x108]
call fcn.004440a0
add esp, 4
test eax, eax
jle off.b1057
lea ecx, [ebp-0x3580]
dec ecx
lea ebx, [ebx]
mov al, byte[ecx+1]
lea ecx, [ecx+1]
test al, al
jne off.b912
mov eax, dword[str.Authorization:_Basic_]
lea edx, [ebp-0x380]
mov dword[ecx], eax
mov esi, edx
mov eax, dword[0x45c7b4]
mov dword[ecx+4], eax
mov eax, dword[0x45c7b8]
mov dword[ecx+8], eax
mov eax, dword[0x45c7bc]
mov dword[ecx+0xc], eax
mov eax, dword[0x45c7c0]
mov dword[ecx+0x10], eax
mov ax, word[0x45c7c4]
mov word[ecx+0x14], ax
mov al, byte[edx]
inc edx
test al, al
jne off.b979
lea edi, [ebp-0x3580]
sub edx, esi
dec edi
mov al, byte[edi+1]
inc edi
test al, al
jne off.b995
mov ecx, edx
shr ecx, 2
rep movsd
mov ecx, edx
and ecx, 3
rep movsb
lea ecx, [ebp-0x3580]
dec ecx
mov al, byte[ecx+1]
lea ecx, [ecx+1]
test al, al
jne off.b1024
mov ax, word[0x45c7ac]
mov edi, dword[sym.imp.MSVCR120.dll_sprintf]
mov word[ecx], ax
mov al, byte[0x45c7ae]
mov byte[ecx+2], al
lea ecx, [ebp-0x3580]
dec ecx
mov al, byte[ecx+1]
lea ecx, [ecx+1]
test al, al
jne off.b1064
mov eax, dword[str.Connection:_close_r_n]
mov dword[ecx], eax
mov eax, dword[0x45c7e0]
mov dword[ecx+4], eax
mov eax, dword[0x45c7e4]
mov dword[ecx+8], eax
mov eax, dword[0x45c7e8]
mov dword[ecx+0xc], eax
mov eax, dword[0x45c7ec]
mov dword[ecx+0x10], eax
lea eax, [ebp-0x5dc0]
push eax
lea eax, [ebx+0x12ec]
mov dword[ebp-0x5dc4], 0
push eax
call dword[sym.imp.MSVCR120.dll__stat64i32]
add esp, 8
test eax, eax
jne off.b1230
mov esi, dword[ebp-0x5dac]
mov dword[ebp-0x5dc4], esi
test esi, esi
jle off.b1230
push esi
lea eax, [ebp-0x188]
push str.Range:_bytes_d__r_n
push eax
call edi
lea edx, [ebp-0x188]
add esp, 0xc
mov esi, edx
mov al, byte[edx]
inc edx
test al, al
jne off.b1192
lea edi, [ebp-0x3580]
sub edx, esi
dec edi
mov al, byte[edi+1]
inc edi
test al, al
jne off.b1208
mov ecx, edx
shr ecx, 2
rep movsd
mov ecx, edx
and ecx, 3
rep movsb
lea ecx, [ebp-0x3580]
dec ecx
mov al, byte[ecx+1]
lea ecx, [ecx+1]
test al, al
jne off.b1237
mov ax, word[0x45c7f4]
mov word[ecx], ax
mov al, byte[0x45c7f6]
push 0xcb
mov byte[ecx+2], al
mov eax, dword[ebx+0x1414]
push 0x65
push ebx
mov dword[ebx+0x1410], 0x12f
call eax
lea ecx, [ebp-0x3580]
add esp, 0xc
lea edx, [ecx+1]
mov al, byte[ecx]
inc ecx
test al, al
jne off.b1302
push 0
sub ecx, edx
lea eax, [ebp-0x3580]
push ecx
push eax
push dword[ebx+0x248]
call dword[sym.imp.WS2_32.dll_send]
cmp eax, 0xffffffff
je off.b1536
cmp byte[ebx+0x140c], 0
jne off.b1536
mov eax, dword[ebx+0x1414]
push 0xcc
push 0x65
push ebx
mov dword[ebx+0x1410], 0x130
call eax
add esp, 0xc
lea eax, [ebp-0x5d80]
push 0x2800
push 0
push eax
call sub.MSVCR120.dll_memset
add esp, 0xc
lea eax, [ebp-0x5d80]
push dword[ebx+0x28]
push dword[ebx+0x24]
push 2
push ecx
push eax
push dword[ebx+0x248]
mov ecx, ebx
call fcn.004457c0
cmp eax, 0xffffffff
je off.b1536
lea eax, [ebx+0x1400]
mov ecx, ebx
push eax
lea edi, [ebx+0x13f4]
push edi
lea esi, [ebx+0x13f0]
push esi
lea eax, [ebp-0x5d80]
push eax
call fcn.004448e0
mov ecx, eax
cmp ecx, 2
je off.b1536
test ecx, ecx
je off.b1558
cmp ecx, 1
je off.b1558
cmp byte[ebx+0x140c], 0
jne off.b1536
cmp ecx, 3
jne off.b1536
mov eax, dword[ebx+0x1414]
push 0xcd
push 0x65
push ebx
call eax
add esp, 0xc
mov ecx, ebx
call fcn.00445170
cmp eax, 3
jne off.b1590
mov eax, 2
pop edi
pop esi
pop ebx
mov ecx, dword[ebp-4]
xor ecx, ebp
call fcn.0044e61f
mov esp, ebp
pop ebp
ret
cmp dword[esi], 0
je off.b1536
mov eax, dword[edi]
mov dword[ebx+0x13f8], eax
cmp ecx, 1
jne off.b1588
add eax, dword[ebp-0x5dc4]
mov dword[ebx+0x13f8], eax
mov eax, ecx
mov ecx, dword[ebp-4]
pop edi
pop esi
xor ecx, ebp
pop ebx
call fcn.0044e61f
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/3dfcfb1d918b690c00de324bcfcdc082