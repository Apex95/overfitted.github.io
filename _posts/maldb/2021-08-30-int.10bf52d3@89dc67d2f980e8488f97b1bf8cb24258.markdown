---
layout: post
title:  "int.10bf52d3 @ 89dc67d2f980e8488f97b1bf8cb24258"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** int.10bf52d3
- **Origin (md5):** 89dc67d2f980e8488f97b1bf8cb24258
- **VirusTotal:** [virustotal.com/gui/file/89dc67d2f980e8488f97b1bf8cb24258][virustotal_ref]

# Code Tags
<span class="tag" id="THREAD">THREAD</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/int.10bf52d3@89dc67d2f980e8488f97b1bf8cb24258">int.10bf52d3</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>ret 0xc<br>pop edi<br>mov eax, 0x10dd<br>pop ebx<br>add esp, 0xc<br>jmp 0x100aeb4c<br>mov ecx, dword[edi+0x11c]<br>pushfd <br>pushfd <br>mov dword[esp+4], ecx<br>popfd <br>push ebx<br>call 0x100d0455<br>jo 0x100d04b1<br>lea ebx, [ebx-0x1f53]<br>jmp ebx<br>and al, 0x10<br>call fcn.100b2d40<br>cmp eax, ebx<br>je 0x100d051a<br>mov edi, dword[edi]<br>mov eax, dword[eax+8]<br>cmp edi, ebx<br>je 0x100d051a<br>cmp eax, ebx<br>je 0x100d051a<br>mov ecx, dword[edi+0x14]<br>cmp eax, ecx<br>jae 0x100d051a<br>mov edi, dword[edi+8]<br>add eax, edi<br>cmp eax, ebx<br>je 0x100d051a<br>mov eax, dword[eax]<br>cmp eax, ebx<br>je 0x100d04e8<br>cmp eax, ecx<br>jae 0x100d04e8<br>lea ecx, [edi+eax]<br>jmp 0x100d04ea<br>xor ecx, ecx<br>cmp ecx, ebx<br>je 0x100d051a<br>mov eax, ecx<br>mov dword[esi+0x18], 0xf<br>mov dword[esi+0x14], ebx<br>mov byte[esi+4], bl<br>lea edi, [eax+1]<br>mov dl, byte[eax]<br>inc eax<br>cmp dl, bl<br>jne 0x100d0500<br>sub eax, edi<br>push eax<br>push ecx<br>mov ecx, esi<br>call fcn.10001bca<br>pop edi<br>mov eax, esi<br>pop ebx<br>pop ecx<br>ret 4<br>push ebx<br>mov dword[esi+0x18], 0xf<br>mov dword[esi+0x14], ebx<br>push 0x1015f734<br>mov ecx, esi<br>mov byte[esi+4], bl<br>call fcn.10001bca<br>pop edi<br>mov eax, esi<br>pop ebx<br>pop ecx<br>ret 4<br>call dword[sym.imp.KERNEL32.dll_GetCurrentThreadId]<br>cmp dword[0x101e1264], eax<br>je 0x10bfb9f0<br>jmp 0x100cf6d5<br>push esi<br>mov esi, dword[eax]<br>cmp esi, edi<br>push eax<br>call 0x10bedbfc<br>call 0x3b3f6958<br>scasb al, byte<br>add byte[eax], al<br>jmp eax<br>shr al, 0xda<br>push esi<br>push eax<br>push dword[ecx+0x5e]<br>mov eax, dword[edi+0x120]<br>lea esp, [esp-4]<br>push ebp<br>lea esp, [esp-8]<br>mov dword[esp+0xc], eax<br>pushfd <br>call fcn.10bf0987<br>je 0x10bf0909<br>add al, 0x24<br>iretd <br>push ebp<br>pushfd <br>mov dword[esp+4], edi<br>popfd <br>call fcn.100d0e80<br>push edx<br>call 0x10bf48ef<br>js 0x10bf494a<br>lea edx, [edx+0x1c4]<br>call edx<br>loopne 0x10bf4953<br>pop ecx<br>dec eax<br>or eax, 0xfffffff8<br>inc eax<br>call fcn.100cf122<br>jecxz 0x10bf48ee<br>mov ecx, eax<br>add byte[eax], al<br>jmp 0x10bf0964<br>pop eax<br>mov dword[ebx], edi<br>jmp 0x10bfda03<br>jns 0x10bf7e0c<br>rcr ebx, 0x9a<br>sbb edi, dword[0x1bbe4382]<br>xchg ebp, eax<br>pop edx<br>mov edx, ss<br>jge 0x10bf7e4a<br>dec edx<br>imul esp, dword[ebp-0x652d731f], 0xc7a4eb5a<br>mov esi, dword[edx]<br>movsb byte<br>test eax, 0xc7d0ee13<br>popfd <br>cwde <br>xchg byte[edx+0x536abc1b], bh<br>test byte[edi+esi], bh<br>stc <br>out dx, eax<br>adc cl, byte[edx-0x1e]<br>movsb byte<br>retf 0xd38e<br>or byte[eax], al<br>add byte[eax], al<br>add byte[eax], al<br>jno 0x10bf7eb1<br>pop edi<br>mov eax, 6<br>pop ebx<br>add esp, 0xc<br>call fcn.10bf7940<br>jns 0x10bf7def<br>and al, 4<br>call dword[sym.imp.KERNEL32.dll_WaitForSingleObject]<br>cmp byte[edi], 0<br>jne 0x100d043e<br>jmp 0x10bf48d9<br>mov dword[eax], edi<br>jmp 0x100d3445<br>mov eax, dword[0x101e1268]<br>cmp eax, edi<br>jne 0x10bfc6f4<br>jmp 0x10bfeba0<br>mov eax, dword[esp+0x20]<br>cmp eax, edi<br>je 0x100d3445<br>jmp 0x10bfb5e8<br>mov eax, dword[esp+0x18]<br>cmp eax, edi<br>jne 0x10bedbf0<br>jmp 0x10bf7e51<br><eoc> ', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

ret 0xc
pop edi
mov eax, 0x10dd
pop ebx
add esp, 0xc
jmp 0x100aeb4c
mov ecx, dword[edi+0x11c]
pushfd
pushfd
mov dword[esp+4], ecx
popfd
push ebx
call 0x100d0455
jo 0x100d04b1
lea ebx, [ebx-0x1f53]
jmp ebx
and al, 0x10
call fcn.100b2d40
cmp eax, ebx
je 0x100d051a
mov edi, dword[edi]
mov eax, dword[eax+8]
cmp edi, ebx
je 0x100d051a
cmp eax, ebx
je 0x100d051a
mov ecx, dword[edi+0x14]
cmp eax, ecx
jae 0x100d051a
mov edi, dword[edi+8]
add eax, edi
cmp eax, ebx
je 0x100d051a
mov eax, dword[eax]
cmp eax, ebx
je 0x100d04e8
cmp eax, ecx
jae 0x100d04e8
lea ecx, [edi+eax]
jmp 0x100d04ea
xor ecx, ecx
cmp ecx, ebx
je 0x100d051a
mov eax, ecx
mov dword[esi+0x18], 0xf
mov dword[esi+0x14], ebx
mov byte[esi+4], bl
lea edi, [eax+1]
mov dl, byte[eax]
inc eax
cmp dl, bl
jne 0x100d0500
sub eax, edi
push eax
push ecx
mov ecx, esi
call fcn.10001bca
pop edi
mov eax, esi
pop ebx
pop ecx
ret 4
push ebx
mov dword[esi+0x18], 0xf
mov dword[esi+0x14], ebx
push 0x1015f734
mov ecx, esi
mov byte[esi+4], bl
call fcn.10001bca
pop edi
mov eax, esi
pop ebx
pop ecx
ret 4
call dword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
cmp dword[0x101e1264], eax
je 0x10bfb9f0
jmp 0x100cf6d5
push esi
mov esi, dword[eax]
cmp esi, edi
push eax
call 0x10bedbfc
call 0x3b3f6958
scasb al, byte
add byte[eax], al
jmp eax
shr al, 0xda
push esi
push eax
push dword[ecx+0x5e]
mov eax, dword[edi+0x120]
lea esp, [esp-4]
push ebp
lea esp, [esp-8]
mov dword[esp+0xc], eax
pushfd
call fcn.10bf0987
je 0x10bf0909
add al, 0x24
iretd
push ebp
pushfd
mov dword[esp+4], edi
popfd
call fcn.100d0e80
push edx
call 0x10bf48ef
js 0x10bf494a
lea edx, [edx+0x1c4]
call edx
loopne 0x10bf4953
pop ecx
dec eax
or eax, 0xfffffff8
inc eax
call fcn.100cf122
jecxz 0x10bf48ee
mov ecx, eax
add byte[eax], al
jmp 0x10bf0964
pop eax
mov dword[ebx], edi
jmp 0x10bfda03
jns 0x10bf7e0c
rcr ebx, 0x9a
sbb edi, dword[0x1bbe4382]
xchg ebp, eax
pop edx
mov edx, ss
jge 0x10bf7e4a
dec edx
imul esp, dword[ebp-0x652d731f], 0xc7a4eb5a
mov esi, dword[edx]
movsb byte
test eax, 0xc7d0ee13
popfd
cwde
xchg byte[edx+0x536abc1b], bh
test byte[edi+esi], bh
stc
out dx, eax
adc cl, byte[edx-0x1e]
movsb byte
retf 0xd38e
or byte[eax], al
add byte[eax], al
add byte[eax], al
jno 0x10bf7eb1
pop edi
mov eax, 6
pop ebx
add esp, 0xc
call fcn.10bf7940
jns 0x10bf7def
and al, 4
call dword[sym.imp.KERNEL32.dll_WaitForSingleObject]
cmp byte[edi], 0
jne 0x100d043e
jmp 0x10bf48d9
mov dword[eax], edi
jmp 0x100d3445
mov eax, dword[0x101e1268]
cmp eax, edi
jne 0x10bfc6f4
jmp 0x10bfeba0
mov eax, dword[esp+0x20]
cmp eax, edi
je 0x100d3445
jmp 0x10bfb5e8
mov eax, dword[esp+0x18]
cmp eax, edi
jne 0x10bedbf0
jmp 0x10bf7e51

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/89dc67d2f980e8488f97b1bf8cb24258