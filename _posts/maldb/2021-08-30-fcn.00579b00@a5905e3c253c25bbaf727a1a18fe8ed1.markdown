---
layout: post
title:  "fcn.00579b00 @ a5905e3c253c25bbaf727a1a18fe8ed1"
date:   2021-08-30 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00579b00
- **Origin (md5):** a5905e3c253c25bbaf727a1a18fe8ed1
- **VirusTotal:** [virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1][virustotal_ref]

# Code Tags
<span class="tag" id="THREAD">THREAD</span>


# Similar Functions

1. [fcn.006a0db0][similar_1_ref] (sim.: 0.9755090120374265)
2. [fcn.005c8fa0][similar_2_ref] (sim.: 0.9693671375526152)
3. [fcn.0062fa00][similar_3_ref] (sim.: 0.9686693625810945)
4. [fcn.005ba5e0][similar_4_ref] (sim.: 0.9675850605639812)
5. [fcn.005c8390][similar_5_ref] (sim.: 0.9667883782871357)


# Disassembled Code

{% highlight nasm %}
push r15
push r14
push r13
push r12
push rbp
push rdi
push rsi
push rbx
sub rsp,0xc8
mov rbp,qword[rdx+8]
mov r12,rcx
mov qword[rsp+0x118],rdx
test byte[rbp+4],4
je 0x579b2b
and dword[rcx],0xfffffffd
lock add dword[rbp],1
mov rdi,qword[0x00a7d7f0]
cmp rdi,0xfffffffffffffed0
je 0x57a43f
mov rax,qword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
mov qword[rsp+0x28],rax
call rax
mov r14d,eax
lea rax,[rdi+0x134]
mov rsi,rax
mov qword[rsp+0x38],rax
xor eax,eax
lock cmpxchg dword[rsi],eax
cmp r14d,eax
je 0x579bf0
lea r13,[rdi+0x138]
mov ebx,dword[rdi+0x138]
jmp 0x579b84
mov ebx,eax
mov edx,ebx
mov r8d,ebx
mov rcx,r13
or edx,0x80000000
call fcn.008eebc0
cmp ebx,eax
jne 0x579b82
test ebx,ebx
js 0x57a049
mov rax,qword[rsp+0x38]
xchg dword[rax],r14d
mov rsi,qword[rdi+0x100]
xor edx,edx
mov dword[rdi+0x130],1
mov r15,qword[rbp+8]
mov rax,r15
div rsi
mov rax,qword[rdi+0xf8]
mov rax,qword[rax+rdx*8]
mov r14,rdx
test rax,rax
je 0x57a111
mov dword[rsp+0x30],0
jmp 0x579c29
mov eax,dword[rdi+0x130]
mov rsi,qword[rdi+0x100]
xor edx,edx
mov dword[rsp+0x30],eax
add eax,1
mov dword[rdi+0x130],eax
mov r15,qword[rbp+8]
mov rax,r15
div rsi
mov rax,qword[rdi+0xf8]
mov rax,qword[rax+rdx*8]
mov r14,rdx
test rax,rax
je 0x579c5c
mov rbx,qword[rax]
lea r13,[rbp+8]
mov rcx,qword[rbx+0x98]
cmp r15,rcx
je 0x579dd5
mov rbx,qword[rbx]
test rbx,rbx
je 0x579c5c
mov rcx,qword[rbx+0x98]
xor edx,edx
mov rax,rcx
div rsi
cmp rdx,r14
je 0x579c37
mov eax,dword[rsp+0x30]
xor ebx,ebx
test eax,eax
mov dword[rdi+0x130],eax
je 0x579e01
mov eax,1
mov esi,0xffffffff
lock xadd dword[rbp],esi
sub esi,eax
jne 0x579ce9
mov r15,qword[sym.imp.KERNEL32.dll_Sleep]
mov r14,qword[0x00b3d090]
mov edi,1
mov r13,r15
jmp 0x579ca3
add esi,1
mov eax,edi
xchg dword[r14],eax
test eax,eax
je 0x579cd0
cmp esi,3
jbe 0x579ca0
cmp esi,0xf
jbe 0x579ea0
cmp esi,0x1f
jbe 0x579ee0
mov ecx,1
call r15
jmp 0x579ca0
mov rax,qword[0x00a7d6e0]
mov qword[rbp],rax
mov qword[0x00a7d6e0],rbp
mov dword[r14],0
test rbx,rbx
mov eax,dword[r12]
je 0x579e90
and eax,0xfffffff7
mov rbx,qword[0x00a7d770]
mov dword[r12],eax
mov r13,rbx
add r13,0xa0
je 0x57a3be
lea rbp,[rbx+0xa4]
mov rax,qword[rsp+0x28]
call rax
mov r14d,eax
xor eax,eax
lock cmpxchg dword[rbp],eax
cmp r14d,eax
je 0x579ed0
lea rdi,[rbx+0xa8]
mov esi,dword[rbx+0xa8]
jmp 0x579d46
mov esi,eax
mov edx,esi
mov r8d,esi
mov rcx,rdi
or edx,0x80000000
call fcn.008eebc0
cmp esi,eax
jne 0x579d44
test esi,esi
js 0x579f6e
xchg dword[rbp],r14d
mov dword[rbx+0xa0],1
mov rax,qword[rsp+0x118]
mov rcx,qword[0x00a7d770]
lea rdx,[rax+8]
call fcn.005ce6d0
test rax,rax
je 0x579ec0
lea rcx,[rax+0x68]
call fcn.00693630
test al,al
je 0x579eb0
and dword[r12],0xffffffdf
mov eax,dword[rbx+0xa0]
sub eax,1
test eax,eax
mov dword[rbx+0xa0],eax
je 0x579ef0
add rsp,0xc8
pop rbx
pop rsi
pop rdi
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
lea rdx,[rbx+8]
mov r8d,0x18
mov rcx,r13
call sub.msvcrt.dll_memcmp
test eax,eax
jne 0x579c40
mov eax,dword[rsp+0x30]
test eax,eax
mov dword[rdi+0x130],eax
jne 0x579c70
lea r13,[rdi+0x138]
mov rsi,qword[rsp+0x38]
xor eax,eax
xchg dword[rsi],eax
mov eax,0x80000000
lock xadd dword[r13],eax
test eax,0x40000000
jne 0x579c70
cmp eax,0x80000000
je 0x579c70
mov esi,dword[rdi+0x138]
jmp 0x579e42
mov esi,eax
mov edx,esi
mov r8d,esi
mov rcx,r13
or edx,0x40000000
call fcn.008eebc0
cmp esi,eax
jne 0x579e40
and esi,0x40000000
jne 0x579c70
add rdi,0x140
xor eax,eax
lock cmpxchg qword[rdi],rax
test rax,rax
mov rsi,rax
mov rcx,rax
je 0x57a160
call qword[sym.imp.KERNEL32.dll_SetEvent]
jmp 0x579c70
and eax,0xfffffffb
jmp 0x579cf9
pause
jmp 0x579ca0
and dword[r12],0xffffffef
jmp 0x579daa
and dword[r12],0xffffffcf
jmp 0x579daa
add dword[rbx+0xa0],1
jmp 0x579d73
xor ecx,ecx
call r13
jmp 0x579ca0
xchg dword[rbp],eax
mov eax,0x80000000
lea rdi,[rbx+0xa8]
lock xadd dword[rdi],eax
test eax,0x40000000
jne 0x579dc1
cmp eax,0x80000000
je 0x579dc1
mov esi,dword[rbx+0xa8]
jmp 0x579f23
mov esi,eax
mov edx,esi
mov r8d,esi
mov rcx,rdi
or edx,0x40000000
call fcn.008eebc0
cmp esi,eax
jne 0x579f21
and esi,0x40000000
jne 0x579dc1
add rbx,0xb0
xor eax,eax
lock cmpxchg qword[rbx],rax
test rax,rax
mov rsi,rax
mov rcx,rax
je 0x57a122
call qword[sym.imp.KERNEL32.dll_SetEvent]
jmp 0x579dc1
mov edx,dword[rbx+0xa8]
jmp 0x579f82
mov edx,eax
lea eax,[rdx+1]
mov r10d,edx
or r10d,0x80000000
test edx,edx
cmovns eax,r10d
mov r15d,eax
mov eax,edx
lock cmpxchg dword[rdi],r15d
cmp eax,edx
jne 0x579f80
shr edx,0x1f
test dl,dl
je 0x579d65
mov eax,r15d
shr eax,0x1f
test al,al
je 0x579d65
lea r11,[rbx+0xb0]
xor eax,eax
lock cmpxchg qword[r11],rax
test rax,rax
mov rsi,rax
mov qword[rsp+0x28],rax
je 0x57a1de
mov rsi,qword[sym.imp.KERNEL32.dll_WaitForSingleObjectEx]
xor r8d,r8d
mov edx,0xffffffff
mov rcx,qword[rsp+0x28]
call rsi
mov r10d,r15d
and r10d,0x7fffffff
or r10d,0x40000000
jmp 0x57a02a
lea ecx,[r10-1]
mov eax,r10d
and ecx,0x3fffffff
or ecx,0x80000000
lock cmpxchg dword[rdi],ecx
cmp eax,r10d
mov r15d,eax
je 0x579d65
mov r10d,r15d
test r10d,r10d
jns 0x57a004
mov ecx,r10d
mov eax,r10d
and ecx,0xbfffffff
lock cmpxchg dword[rdi],ecx
cmp eax,r10d
mov r15d,eax
jne 0x57a027
jmp 0x579fe2
mov edx,dword[rdi+0x138]
jmp 0x57a053
mov edx,eax
lea eax,[rdx+1]
mov ebx,edx
or ebx,0x80000000
test edx,edx
cmovs ebx,eax
mov eax,edx
lock cmpxchg dword[r13],ebx
cmp eax,edx
jne 0x57a051
mov eax,ebx
shr eax,0x1f
test al,al
je 0x579ba3
shr edx,0x1f
test dl,dl
je 0x579ba3
lea rsi,[rdi+0x140]
xor eax,eax
lock cmpxchg qword[rsi],rax
test rax,rax
mov r15,rax
je 0x57a19e
mov rsi,qword[sym.imp.KERNEL32.dll_WaitForSingleObjectEx]
xor r8d,r8d
mov edx,0xffffffff
mov rcx,r15
call rsi
and ebx,0x7fffffff
or ebx,0x40000000
mov edx,ebx
test edx,edx
js 0x57a0f7
nop word[rax+rax]
lea ecx,[rdx-1]
mov eax,edx
and ecx,0x3fffffff
or ecx,0x80000000
lock cmpxchg dword[r13],ecx
cmp eax,edx
mov ebx,eax
je 0x579ba3
mov edx,ebx
test edx,edx
jns 0x57a0d0
mov ecx,edx
mov eax,edx
and ecx,0xbfffffff
lock cmpxchg dword[r13],ecx
cmp eax,edx
mov ebx,eax
je 0x57a0a8
mov edx,ebx
jmp 0x57a0f3
mov dword[rdi+0x130],0
xor ebx,ebx
jmp 0x579e08
xor ecx,ecx
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
je 0x57a2ac
mov rax,rsi
lock cmpxchg qword[rbx],rcx
test rax,rax
mov rsi,rax
je 0x579f63
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rcx,rsi
jmp 0x579f63
xor ecx,ecx
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
je 0x57a315
mov rax,rsi
lock cmpxchg qword[rdi],rcx
test rax,rax
mov rsi,rax
je 0x579e82
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rcx,rsi
jmp 0x579e82
xor r9d,r9d
xor r8d,r8d
xor edx,edx
xor ecx,ecx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov r15,rax
je 0x57a493
xor eax,eax
lock cmpxchg qword[rsi],r15
test rax,rax
mov rsi,rax
je 0x57a0a1
mov rcx,r15
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov r15,rsi
jmp 0x57a0a1
mov qword[rsp+0x30],r11
xor r9d,r9d
xor r8d,r8d
xor edx,edx
xor ecx,ecx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov qword[rsp+0x28],rax
mov r11,qword[rsp+0x30]
je 0x57a243
mov rax,rsi
mov rsi,qword[rsp+0x28]
lock cmpxchg qword[r11],rsi
test rax,rax
mov rsi,rax
je 0x579fdb
mov rcx,qword[rsp+0x28]
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov qword[rsp+0x28],rsi
jmp 0x579fdb
lea rbx,[rsp+0x80]
call fcn.006ea660
lea rdx,[0x00aa1352]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0x90],0xb
mov qword[rsp+0x98],rsi
mov qword[rsp+0xa8],0
mov qword[rsp+0xa0],rax
lea rax,[0x00b72480]
mov byte[rsp+0xb0],0
mov qword[rsp+0x80],rax
call fcn.00947760
lea rbx,[rsp+0x80]
call fcn.006ea660
lea rdx,[0x00aa1352]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0x90],0xb
mov qword[rsp+0x98],rsi
mov qword[rsp+0xa8],0
mov qword[rsp+0xa0],rax
lea rax,[0x00b72480]
mov byte[rsp+0xb0],0
mov qword[rsp+0x80],rax
call fcn.00947760
lea rbx,[rsp+0x80]
call fcn.006ea660
lea rdx,[0x00aa1352]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0x90],0xb
mov qword[rsp+0x98],rsi
mov qword[rsp+0xa8],0
mov qword[rsp+0xa0],rax
lea rax,[0x00b72480]
mov byte[rsp+0xb0],0
mov qword[rsp+0x80],rax
call fcn.00947760
mov rsi,rax
lea rax,[0x00b72450]
mov rcx,rbx
mov qword[rsp+0x80],rax
call fcn.00962490
mov rcx,rsi
call fcn.008da260
lea rax,[0x00b72450]
mov rcx,rbx
mov qword[rsp+0x80],rax
call fcn.00962490
call fcn.00a55e20
jmp 0x57a3a0
lea rbx,[rsp+0x80]
call fcn.006ea660
lea rdx,[0x00aa1370]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0x90],1
mov qword[rsp+0x98],rsi
mov qword[rsp+0xa8],0
mov qword[rsp+0xa0],rax
lea rax,[0x00b714e0]
mov byte[rsp+0xb0],0
mov qword[rsp+0x80],rax
call fcn.009472d0
mov rbx,rax
mov rcx,rbp
call fcn.009370a0
mov rcx,rbx
call fcn.008da260
jmp 0x57a37e
lea rsi,[rsp+0x40]
call fcn.006ea660
lea rdx,[0x00aa1370]
mov rcx,rsi
mov rbx,rax
call fcn.009de540
lea rax,[rsi+0x30]
mov rcx,rsi
mov dword[rsp+0x50],1
mov qword[rsp+0x58],rbx
mov qword[rsp+0x68],0
mov qword[rsp+0x60],rax
lea rax,[0x00b714e0]
mov byte[rsp+0x70],0
mov qword[rsp+0x40],rax
call fcn.009472d0
lea rsi,[rsp+0x80]
call fcn.006ea660
lea rdx,[0x00aa1352]
mov rcx,rsi
mov rbx,rax
call fcn.009de540
lea rax,[rsi+0x30]
mov rcx,rsi
mov dword[rsp+0x90],0xb
mov qword[rsp+0x98],rbx
mov qword[rsp+0xa8],0
mov qword[rsp+0xa0],rax
lea rax,[0x00b72480]
mov byte[rsp+0xb0],0
mov qword[rsp+0x80],rax
call fcn.00947760
mov rbx,rax
lea rax,[0x00b72450]
mov rcx,rsi
mov qword[rsp+0x40],rax
call fcn.00962490
jmp 0x57a42a
{% endhighlight %}


[similar_1_ref]: /report/fcn.006a0db0@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_2_ref]: /report/fcn.005c8fa0@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_3_ref]: /report/fcn.0062fa00@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_4_ref]: /report/fcn.005ba5e0@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_5_ref]: /report/fcn.005c8390@a5905e3c253c25bbaf727a1a18fe8ed1
[virustotal_ref]: https://www.virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1