---
layout: post
title:  "fcn.00442a56 @ e16f74a2849182d98050864255e902f8"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00442a56
- **Origin (md5):** e16f74a2849182d98050864255e902f8
- **VirusTotal:** [virustotal.com/gui/file/e16f74a2849182d98050864255e902f8][virustotal_ref]

# Code Tags
<span class="tag" id="THREAD">THREAD</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-242.88067626953125, -246.12245178222656, '<b><a href="/report/fcn.00442a56@e16f74a2849182d98050864255e902f8">fcn.00442a56</a><br>@e16f74a2849182d98050864255e902f8</b><br>', 'point { fill-color: #e0440e; }'],
[-372.3554382324219, -171.1976318359375, '<b><a href="/report/fcn.00448079@c077742bdc6d4f2c0ca7d0e2a6a94acf">fcn.00448079</a><br>@c077742bdc6d4f2c0ca7d0e2a6a94acf</b><br>', 'null'],
[-271.70465087890625, -101.44261169433594, '<b><a href="/report/fcn.00448079@96a869ae624ddb4834a1d5a829f85469">fcn.00448079</a><br>@96a869ae624ddb4834a1d5a829f85469</b><br>', 'null'],
[150.4534912109375, 120.49996948242188, '<b><a href="/report/fcn.00441880@e83552e81a6f265fd7baa50402d3d47d">fcn.00441880</a><br>@e83552e81a6f265fd7baa50402d3d47d</b><br>', 'null'],
[-46.157230377197266, 7.884306907653809, '<b><a href="/report/fcn.00441880@b8b9cf6862b0d68d10750002e5baaf97">fcn.00441880</a><br>@b8b9cf6862b0d68d10750002e5baaf97</b><br>', 'null'],
[15.549089431762695, 125.77539825439453, '<b><a href="/report/fcn.00441880@3aa98225e51cbcae2d334c8b6b4ed9fd">fcn.00441880</a><br>@3aa98225e51cbcae2d334c8b6b4ed9fd</b><br>', 'null'],
[-375.7038879394531, -54.2476806640625, '<b><a href="/report/fcn.00448079@505be53c36227b94e2fcc406f247f6e5">fcn.00448079</a><br>@505be53c36227b94e2fcc406f247f6e5</b><br>', 'null'],
[84.29470825195312, 3.7427241802215576, '<b><a href="/report/fcn.00441880@146b14fc12cf789043a79d4f548a23bf">fcn.00441880</a><br>@146b14fc12cf789043a79d4f548a23bf</b><br>', 'null'],
[217.5813446044922, 1.601191520690918, '<b><a href="/report/fcn.00441880@7307643b343733b7fbd7b4b4fb482515">fcn.00441880</a><br>@7307643b343733b7fbd7b4b4fb482515</b><br>', 'null'],
[16.573745727539062, -113.81645965576172, '<b><a href="/report/fcn.00441880@9571c7458fae91969aaed3955e433f49">fcn.00441880</a><br>@9571c7458fae91969aaed3955e433f49</b><br>', 'null'],
[150.2967071533203, -116.58172607421875, '<b><a href="/report/fcn.00441880@3d7f25d788af3e7f7707a736ac852465">fcn.00441880</a><br>@3d7f25d788af3e7f7707a736ac852465</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
and esp, 0xfffffff8
push 0xffffffffffffffff
push 0x45221b
mov eax, dword
push eax
sub esp, 0x64
push esi
push edi
mov eax, dword[0x476084]
xor eax, esp
push eax
lea eax, [esp+0x70]
mov dword
push dword[0x477120]
call fcn.00412e2a
pop ecx
mov dword[esp+0x18], eax
and dword[esp+0x78], 0
push dword[0x477120]
push dword[0x477208]
push 0
call fcn.0043b050
mov eax, dword[ebx+0xcc]
add esp, 0xc
test eax, eax
je off.b102
push eax
call fcn.0043c21f
lea edi, [ebx+0x10]
call dword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
push eax
call fcn.004041d3
mov esi, eax
mov eax, dword[esi+0x14]
xor ecx, ecx
test eax, eax
jle off.b143
mov edx, dword[esi+0x10]
cmp dword[edx], edi
je off.b146
inc ecx
add edx, 4
cmp ecx, eax
jl off.b131
or ecx, 0xffffffff
cmp ecx, 0xffffffff
je off.b198
test ecx, ecx
js off.b198
cmp ecx, eax
jge off.b198
lea edx, [eax-1]
cmp ecx, edx
je off.b195
mov edx, dword[esi+0x10]
sub eax, ecx
shl eax, 2
lea ecx, [edx+ecx*4]
lea edx, [eax-4]
push edx
lea edx, [ecx+4]
push edx
push eax
push ecx
call fcn.00403e35
add esp, 0x10
dec dword[esi+0x14]
mov eax, dword[ebx+0x54]
sub eax, dword[ebx+0x50]
sar eax, 2
test eax, eax
jne off.b228
mov ecx, dword[ebx+0x64]
sub ecx, dword[ebx+0x60]
sar ecx, 2
test ecx, ecx
je off.b666
mov ecx, dword[ebx+0x64]
sub ecx, dword[ebx+0x60]
sar ecx, 2
push ecx
push eax
push dword[0x477124]
push 0
call fcn.0043b050
add esp, 0x10
lea eax, [esp+0x34]
push eax
lea ecx, [ebx+0x50]
call fcn.004026a1
mov byte[esp+0x78], 1
mov eax, dword[ebx+0x64]
mov edi, dword[ebx+0x60]
mov dword[esp+0x14], eax
cmp edi, eax
je off.b307
mov eax, edi
lea esi, [esp+0x34]
call fcn.0040272e
add edi, 4
cmp edi, dword[esp+0x14]
jne off.b287
fldz
fst qword[esp+0xc]
fld qword[0x4708e0]
fstp qword[esp+0x2c]
fld qword[0x4708d8]
fst qword[esp+0x1c]
fld qword[0x4708d0]
fstp qword[esp+0x24]
fld qword[0x4708c8]
fstp qword[esp+0x24]
fld qword[0x4708c0]
fst qword[esp+0x24]
fld qword[esp+0xc]
fcomp qword[esp+0x24]
fnstsw ax
test ah, 0x41
jp off.b482
fld qword[esp+0x24]
fld qword[esp+0x2c]
fmul qword[0x4708b8]
fsubp st(1)
fsub qword[esp+0xc]
fld qword[esp+0x1c]
fmul qword[esp+0xc]
fmulp st(2)
fsubrp st(1)
fadd qword[esp+0xc]
fsub qword[0x4708b0]
fstp qword[esp+0x1c]
fld qword[esp+0x1c]
fsubrp st(2)
fld qword[esp+0x2c]
faddp st(2)
fld qword[esp+0x24]
faddp st(2)
fmul qword[esp+0x1c]
fmul qword[0x4708a8]
fdiv qword[0x4708f0]
fsubp st(1)
fld qword[esp+0x1c]
fmul qword[0x4708a0]
faddp st(1)
fsub qword[esp+0xc]
fstp qword[esp+0xc]
jmp off.b488
fstp st(2)
fstp st(0)
fstp st(0)
mov esi, dword[esp+0x34]
jmp off.b505
mov eax, dword[esi]
mov ecx, dword[eax]
push eax
call dword[ecx+0xc]
add esi, 4
cmp esi, dword[esp+0x38]
jne off.b494
fld qword[0x470918]
fstp qword[esp+0x2c]
fld qword[0x470910]
fstp qword[esp+0x2c]
fld qword[0x470908]
fstp qword[esp+0x2c]
fld qword[0x470900]
fstp qword[esp+0x24]
fld qword[0x4708f8]
fstp qword[esp+0x24]
fld qword[esp+0x2c]
mov esi, dword[esp+0x34]
fdiv qword[0x4708f0]
fstp qword[esp+0x24]
jmp off.b592
mov eax, dword[esi]
mov ecx, dword[eax]
push eax
call dword[ecx+0x10]
add esi, 4
cmp esi, dword[esp+0x38]
jne off.b581
mov ecx, dword[ebx+0x64]
mov eax, dword[ebx+0x60]
cmp eax, ecx
je off.b652
push ecx
call fcn.0040365e
mov esi, dword[ebx+0x64]
mov edi, eax
pop ecx
mov dword[esp+0xc], edi
jmp off.b641
mov eax, dword[edi]
test eax, eax
je off.b638
mov ecx, dword[eax]
push eax
call dword[ecx+8]
add edi, 4
cmp edi, esi
jne off.b626
mov eax, dword[esp+0xc]
mov dword[ebx+0x64], eax
lea esi, [esp+0x34]
mov byte[esp+0x78], 0
call fcn.00402c37
mov eax, dword[ebx+0xa8]
test eax, eax
je off.b689
mov ecx, dword[eax]
push eax
call dword[ecx+8]
and dword[ebx+0xa8], 0
lea eax, [ebx+0xac]
xor ecx, ecx
cmp dword[eax], ecx
je off.b708
push ecx
push ecx
call fcn.00403da3
mov dword[esp+0xc], 0x15
mov eax, dword[esp+0xc]
add eax, dword[esp+0xc]
push 0x5d
mov dword[esp+0x10], eax
mov eax, dword[esp+0x10]
cdq
pop ecx
idiv ecx
push 0x4a
pop esi
push 0x34
mov ecx, eax
mov eax, dword[esp+0x10]
cdq
idiv esi
pop esi
push 0x2c
add ecx, eax
mov eax, dword[esp+0x10]
cdq
idiv esi
add ecx, eax
mov eax, dword[esp+0x10]
imul eax, eax, 0x3f
sub ecx, eax
mov eax, dword[esp+0x10]
mov edx, dword[esp+0x10]
imul eax, edx
imul eax, eax, 0x38
add ecx, eax
add ecx, dword[esp+0x10]
mov dword[esp+0x10], ecx
mov eax, dword[esp+0x10]
cdq
pop ecx
idiv ecx
mov ecx, dword[esp+0xc]
imul eax, ecx
mov ecx, dword[esp+0xc]
sub eax, ecx
mov ecx, dword[esp+0xc]
mov esi, dword[ebx+0x20]
lea eax, [eax+ecx+0xf]
mov dword[esp+0xc], eax
test esi, esi
je off.b844
call fcn.0042fa77
mov eax, dword[ebx+0x20]
test eax, eax
je off.b861
mov ecx, dword[eax]
push eax
call dword[ecx+8]
and dword[ebx+0x20], 0
mov eax, dword[ebx+0xe0]
test eax, eax
je off.b1040
push eax
push dword[0x477128]
push 0
call fcn.0043b050
fld qword[0x470918]
fstp qword[esp+0x38]
add esp, 0xc
fld qword[0x470910]
fstp qword[esp+0x2c]
fld qword[0x470908]
fstp qword[esp+0x2c]
fld qword[0x470900]
fstp qword[esp+0x24]
fld qword[0x4708f8]
fstp qword[esp+0x24]
fld qword[esp+0x2c]
mov eax, dword[ebx+0xdc]
fdiv qword[0x4708f0]
mov ecx, dword[eax]
mov dword[esp+0x14], ecx
fstp qword[esp+0x24]
cmp ecx, eax
je off.b1029
mov esi, dword[ecx+0x10]
test esi, esi
je off.b1008
lea eax, [esi+8]
push eax
call dword[sym.imp.OLEAUT32.dll_VariantCopy]
mov eax, dword[esi]
test eax, eax
je off.b1001
mov ecx, dword[eax]
push eax
call dword[ecx+8]
push esi
call fcn.00410ccc
pop ecx
lea eax, [esp+0x14]
call fcn.00402fe9
mov ecx, dword[esp+0x14]
cmp ecx, dword[ebx+0xdc]
jne off.b972
lea edi, [ebx+0xd8]
call fcn.00402a26
and dword[0x478f94], 0
fld qword[0x470918]
fstp qword[esp+0x2c]
fld qword[0x470910]
fstp qword[esp+0x2c]
fld qword[0x470908]
fstp qword[esp+0x2c]
fld qword[0x470900]
fstp qword[esp+0x24]
fld qword[0x4708f8]
fstp qword[esp+0x24]
fld qword[esp+0x2c]
push dword[ebx+0x2c]
fdiv qword[0x4708f0]
fstp qword[esp+0x28]
call dword[sym.imp.USER32.dll_DestroyWindow]
push 0
lea eax, [esp+0x48]
call fcn.0043e376
mov eax, dword[esp+0x48]
mov dword[ebx+0x2c], eax
mov eax, dword[esp+0x5c]
lea edi, [ebx+0x30]
lea esi, [esp+0x4c]
movsd dword
mov dword[ebx+0x40], eax
mov eax, dword[esp+0x60]
movsd dword
mov dword[ebx+0x44], eax
mov eax, dword[esp+0x64]
mov dword[ebx+0x48], eax
mov eax, dword[esp+0x68]
movsd dword
mov dword[ebx+0x4c], eax
lea eax, [esp+0x44]
movsd dword
call fcn.0043e3a0
fld qword[0x4708c8]
fstp qword[esp+0x2c]
fld qword[0x470930]
fstp qword[esp+0x2c]
fld qword[0x470928]
fstp qword[esp+0x2c]
fld qword[0x470960]
fstp qword[esp+0x2c]
fld qword[esp+0x2c]
mov esi, dword[ebx+0x24]
fsub qword[0x470920]
fstp qword[esp+0x2c]
test esi, esi
je off.b1260
push esi
call fcn.0043a42b
push esi
call fcn.00410ccc
pop ecx
and dword[ebx+0x24], 0
or dword[esp+0x78], 0xffffffff
lea esi, [esp+0x18]
call fcn.0040469d
mov ecx, dword[esp+0x70]
mov dword
pop ecx
pop edi
pop esi
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/e16f74a2849182d98050864255e902f8