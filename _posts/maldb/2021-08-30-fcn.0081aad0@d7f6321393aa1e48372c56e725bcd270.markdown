---
layout: post
title:  "fcn.0081aad0 @ d7f6321393aa1e48372c56e725bcd270"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0081aad0
- **Origin (md5):** d7f6321393aa1e48372c56e725bcd270
- **VirusTotal:** [virustotal.com/gui/file/d7f6321393aa1e48372c56e725bcd270][virustotal_ref]

# Code Tags
<span class="tag" id="LINKING">LINKING</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-56.33481979370117, 136.20542907714844, '<b><a href="/report/fcn.0081aad0@d7f6321393aa1e48372c56e725bcd270">fcn.0081aad0</a><br>@d7f6321393aa1e48372c56e725bcd270</b><br>je 0x87b3e7<br>mov edx, dword[edx+0x7c]<br>push ebx<br>cmc <br>push esi<br>or esi, 0xffffffff<br>stc <br>test edi, ebx<br>jmp 0x8944cb<br>pop esi<br>cwde <br>nop <br>pop ebx<br>lea eax, [ecx+edi]<br>xchg edi, edi<br>pop edi<br>jmp 0x7cd717<br>mov esp, ebp<br>pop ebp<br>jmp 0x60838f<br>mov byte[esi], al<br>jmp 0x805c1a<br>je 0x84bea1<br>push 0<br>jmp 0x8ad736<br>jne 0x8229dd<br>cmp byte[ebp+0x10], 0<br>jmp 0x614615<br>jae 0x5b460c<br>lea eax, [ecx+edi]<br>bts esi, esi<br>shrd esi, ebp, 0x80<br>mov cl, byte[eax]<br>stc <br>movsx esi, di<br>mov esi, eax<br>jmp 0x8a3c15<br>jl 0x8219f0<br>jmp 0x67bdbd<br>ret <br>jae 0x853a39<br>mov ecx, dword[eax+edi+0x1c]<br>mov dx, 0x5eb6<br>btc edx, esi<br>lea edx, [ecx+esi*4]<br>add ecx, 0x18ed459c<br>xchg ch, ch<br>cmp bx, ax<br>mov ecx, dword[edx+edi]<br>test ecx, ecx<br>jmp 0x7d0c06<br>test ecx, ecx<br>jne 0x7d0c0c<br>pop esi<br>pop ebx<br>xor eax, eax<br>mov di, bx<br>pop edi<br>jmp 0x823b09<br>ret <br>mov esp, ebp<br>pop ebp<br>ret <br>je 0x83c027<br>mov ebx, dword[ebp+0xc]<br>lea eax, [ebp-0x114]<br>shld si, si, 0x62<br>sub edx, edx<br>cmp bl, 0xac<br>sub ebx, eax<br>mov edi, edi<br>movsx ax, dh<br>mov eax, 0x1b5e4ab9<br>mov cl, dl<br>rol eax, cl<br>or si, 0x47dc<br>lea esi, [ebp+edx-0x114]<br>stc <br>add al, dl<br>cmc <br>jmp 0x61470d<br>xor al, byte[ebx+esi]<br>jmp 0x5d70b1<br>mov ecx, esi<br>sub ecx, eax<br>test ebx, esi<br>cmp ecx, 0x104<br>jmp 0x8a0105<br>mov dword[ebp-0xc], edx<br>test edx, esp<br>test ebx, ebx<br>jmp 0x603d57<br>lea edx, [edx+edx*4]<br>cmc <br>stc <br>lea edx, [ecx+edx*2-0x30]<br>test ebp, ebx<br>xchg cl, cl<br>mov cl, byte[esi]<br>test cl, cl<br>jne 0x868402<br>push 0<br>jmp 0x859d79<br>je 0x8219f0<br>mov edx, dword[eax+edi+0x20]<br>jmp 0x8b1a58<br>ja 0x625c9b<br>movsx ecx, cl<br>jmp 0x625c84<br>pop esi<br>pop ebx<br>mov di, 0x22fd<br>mov edi, esi<br>pop edi<br>jmp 0x6110e0<br>call fcn.00667da5<br>add esp, 4<br>cmp eax, 0xffffffff<br>jmp 0x86ade9<br>mov ecx, dword[ebp-4]<br>lahf <br>movsx dx, bh<br>mov edx, dword[ecx+edi+0x24]<br>movsx ecx, di<br>movzx cx, ch<br>cmovl cx, ax<br>lea eax, [edx+esi*2]<br>movsx ecx, dx<br>not cl<br>movsx dx, cl<br>movzx ecx, word[eax+edi]<br>lea edx, [ebx+1]<br>jmp 0x65ad71<br>sub bl, 0x30<br>inc esi<br>test si, 0x70ef<br>jmp 0x89ed93<br>jb 0x5b460c<br>mov edx, dword[ebp-0x10]<br>add edx, eax<br>jmp 0x8983f6<br>mov dword[ebp-8], ecx<br>mov dword[ebp+8], edx<br>jmp 0x8219e1<br>mov dword[ebp+8], 0<br>stc <br>jmp 0x622d00<br>jne 0x8219e1<br>inc esi<br>jmp 0x87a1b7<br>call fcn.0081aad0<br>add esp, 0xc<br>cmovl si, cx<br>pop esi<br>cmovnp edi, edi<br>movzx bx, cl<br>pop ebx<br>movzx edi, bx<br>mov di, bp<br>pop edi<br>jmp 0x8ab3e5<br>je 0x87b3e7<br>mov ecx, dword[ebp+0xc]<br>test bp, dx<br>test ecx, ecx<br>je 0x87b3e7<br>mov eax, 0x5a4d<br>cmp word[edi], ax<br>jmp 0x87b3e1<br>mov ecx, dword[ebp+0xc]<br>sbb si, 0x4c14<br>and si, 0x3c2c<br>mov edx, dword[ebp-0xc]<br>mov si, 0x790c<br>cmc <br>mov eax, dword[ebp+8]<br>test bl, al<br>jmp 0x7d4259<br>lea edx, [edx+edi]<br>clc <br>cmp dword[edx], 0x4550<br>jne 0x87b3e7<br>mov eax, dword[edx+0x78]<br>jmp 0x7fbffd<br>call fcn.0081aad0<br>add esp, 0xc<br>jmp 0x62c782<br>jb 0x8a0129<br>mov eax, dword[ebp+8]<br>lea ecx, [ebp-0x114]<br>jmp 0x7d8ab9<br>mov esp, ebp<br>pop ebp<br>ret <br>push eax<br>jmp 0x66acc8<br>mov esp, ebp<br>cmovo bp, ax<br>movzx ebp, si<br>pop ebp<br>jmp 0x842c97<br>je 0x853a39<br>cmp ecx, eax<br>jmp 0x64a43b<br>ret <br>lea esi, [ebx+eax]<br>jmp 0x851387<br>push ecx<br>mov byte[ebp+eax-0x114], 0<br>mov eax, dword[sym.imp.KERNEL32.dll_GetModuleHandleA]<br>jmp 0x876ac0<br>je 0x853a39<br>mov edi, edi<br>cmp cl, 0x2e<br>je 0x618344<br>mov cl, byte[esi+1]<br>jmp 0x853a30<br>mov dword[ebp-4], eax<br>test eax, eax<br>jmp 0x5a5dd3<br>je 0x80fe82<br>inc edx<br>cmp edx, 0x104<br>jmp 0x80fe7c<br>xor edx, edx<br>jmp 0x8683fa<br>jb 0x614636<br>lea eax, [ebp-0x114]<br>jmp 0x897383<br>inc edx<br>jmp 0x8960f3<br>push ebp<br>movsx ebp, bx<br>or ebp, ecx<br>mov ebp, esp<br>sub esp, 0x114<br>test si, 0x286c<br>push edi<br>cmovb edi, ebx<br>mov edi, dword[ebp+8]<br>stc <br>test di, di<br>test edi, edi<br>jmp 0x67ba53<br>mov dword[ebp-8], esi<br>stc <br>jmp 0x8a0139<br>ret <br>lea ebx, [esi-1]<br>cmp dword[ebp+8], ebx<br>jle 0x67bda8<br>mov eax, dword[ebp-4]<br>mov esi, dword[ebp-8]<br>cmp esi, dword[eax+edi+0x14]<br>jmp 0x6054d5<br>cmp byte[esi+1], 0x23<br>lea ecx, [esi+1]<br>jmp 0x5d8e63<br>mov esp, ebp<br>mov bp, 0x6060<br>pop ebp<br>jmp 0x7d1e5b<br>jmp 0x8219e1<br>mov eax, dword[ebp+0xc]<br>push eax<br>mov eax, 0x35ac057a<br>push edi<br>mov eax, 0x41885357<br>mov eax, dword[sym.imp.KERNEL32.dll_GetProcAddress_1]<br>call eax<br>pop esi<br>cmove ebx, esp<br>pop ebx<br>mov di, sp<br>not edi<br>xchg edi, edi<br>pop edi<br>jmp 0x8b9888<br>ret <br>mov cl, byte[esi+2]<br>lea esi, [esi+2]<br>jmp 0x80746a<br>mov eax, dword[ebp+0x10]<br>cmp di, bx<br>cmc <br>push eax<br>xor al, cl<br>sar esi, 1<br>sub ah, 0x2e<br>bts eax, ecx<br>mov eax, dword[edx+esi*4]<br>clc <br>test esp, 0x24d3fdf<br>stc <br>add eax, edi<br>jmp 0x631e13<br>cmp edx, ecx<br>jmp 0x7c5c82<br>inc esi<br>test cl, cl<br>jne 0x7dde21<br>pop esi<br>bt di, 0xe4<br>pop ebx<br>shrd di, sp, 0xfa<br>xor eax, eax<br>pop edi<br>jmp 0x7cf81f<br>mov ebx, dword[eax+edi+0x18]<br>test ebp, 0x1da125d9<br>test ebx, ebx<br>jmp 0x625ca7<br>push edx<br>jmp 0x8a9b65<br>test cl, cl<br>je 0x625c9b<br>mov bl, cl<br>jmp 0x649864<br>je 0x8219de<br>test eax, eax<br>je 0x64870a<br>cmp eax, 1<br>jmp 0x665b46<br>mov edx, dword[edi+0x3c]<br>test bp, di<br>test dh, 0x39<br>jmp 0x67cdd6<br>call eax<br>test eax, eax<br>jmp 0x8a6eca<br>mov dword[ebp+8], esi<br>jmp 0x8320b4<br>je 0x87666c<br>sub eax, eax<br>mov edi, 0x4e0e536e<br>not edi<br>pop edi<br>jmp 0x88cc3a<br>jae 0x853a39<br>mov edx, dword[eax+edi+0x1c]<br>lea ecx, [edx+ecx*4]<br>mov ecx, dword[ecx+edi]<br>jmp 0x605af4<br>mov esp, ebp<br>pop ebp<br>jmp 0x82133f<br>mov dword[ebp-0x10], edx<br>jmp 0x81c1cf<br>inc eax<br>jmp 0x8970fc<br>je 0x7c5c88<br>mov byte[ebx+eax], dl<br>mov dh, cl<br>setl dl<br>xchg dx, dx<br>mov edx, dword[ebp+8]<br>jmp 0x815f89<br>mov dword[ebp+8], edx<br>jmp 0x8533c7<br>push eax<br>lahf <br>nop <br>push edi<br>mov eax, dword[sym.imp.KERNEL32.dll_GetProcAddress_1]<br>call eax<br>pop esi<br>pop ebx<br>pop edi<br>jmp 0x5b7515<br>cmp ecx, edx<br>jmp 0x5f01af<br>cmp bl, 9<br>jmp 0x6289cd<br>jae 0x853a39<br>mov dword[ebp+8], 0<br>test ecx, ecx<br>jbe 0x7c5c88<br>lea ebx, [ebp-0x114]<br>sub ebx, eax<br>sar dl, 0xf<br>rcl dl, cl<br>mov dl, 0xc<br>mov dl, byte[eax]<br>test ecx, 0x7649251f<br>stc <br>test dl, dl<br>jmp 0x89618c<br>cmp ecx, 0xffff<br>ja 0x855dbb<br>sub ecx, dword[eax+edi+0x10]<br>cmp ecx, dword[eax+edi+0x14]<br>jmp 0x88ac4e<br>test cl, cl<br>jmp 0x7dde19<br>jne 0x8b8141<br>lea edx, [ebp-0x114]<br>nop <br>push edx<br>bswap ax<br>mov eax, dword[sym.imp.KERNEL32.dll_LoadLibraryA]<br>call eax<br>test eax, eax<br>jmp 0x8b813b<br>push eax<br>jmp 0x7c56a7<br>mov esp, ebp<br>pop ebp<br>ret <br>push ecx<br>jmp 0x7cf606<br>dec ebx<br>test ecx, esi<br>stc <br>lea edx, [edx+edi]<br>jmp 0x663371<br>je 0x853a39<br>cmp eax, edi<br>jmp 0x5da537<br>mov esp, ebp<br>pop ebp<br>jmp 0x604c1b<br><eoc> ', 'point { fill-color: #e0440e; }'],
[56.33469772338867, -136.20542907714844, '<b><a href="/report/fcn.0084dff8@085f1a610e220ffc4b39ada4d2760547">fcn.0084dff8</a><br>@085f1a610e220ffc4b39ada4d2760547</b><br>ret <br>inc esi<br>test cl, cl<br>jmp 0x6ac51e<br>push ecx<br>push eax<br>jmp 0x6ae3be<br>mov dword[ebp-8], ecx<br>jmp 0x68c364<br>je 0x83f648<br>mov ebx, dword[ebp+0xc]<br>neg ah<br>lea eax, [ebp-0x114]<br>sub cl, 0x79<br>xor edx, edx<br>sub ebx, eax<br>mov si, bx<br>mov edi, edi<br>cwde <br>cbw <br>mov eax, 0x1a39646b<br>mov cl, dl<br>btc si, si<br>rol eax, cl<br>lea esi, [ebp+edx-0x114]<br>stc <br>add al, dl<br>xor al, byte[ebx+esi]<br>jmp 0x68c9ed<br>jae 0x6ac524<br>mov ecx, dword[eax+edi+0x1c]<br>lea edx, [ecx+esi*4]<br>bt cx, dx<br>mov ecx, dword[edx+edi]<br>cmp si, 0x2712<br>jmp 0x82c66c<br>jl 0x83e7b0<br>jmp 0x694d17<br>ret <br>test ebx, ebx<br>jmp 0x68914f<br>ja 0x68c324<br>movsx ecx, cl<br>lea edx, [edx+edx*4]<br>cmp esi, esp<br>test di, bx<br>cmc <br>lea edx, [ecx+edx*2-0x30]<br>xchg cl, cl<br>mov cl, byte[esi]<br>test cl, cl<br>jne 0x834686<br>push 0<br>jmp 0x836ec1<br>call fcn.0084dff8<br>add esp, 0xc<br>movzx esi, di<br>pop esi<br>xchg bx, bx<br>pop ebx<br>not edi<br>pop edi<br>mov esp, ebp<br>not ebp<br>movsx ebp, cx<br>movzx ebp, di<br>pop ebp<br>ret <br>mov dword[ebp+8], edx<br>jmp 0x6a2396<br>mov byte[ebp+eax-0x114], 0<br>cmovs eax, ebp<br>mov eax, dword[sym.imp.KERNEL32.dll_GetModuleHandleA]<br>jmp 0x849137<br>mov byte[esi], al<br>jmp 0x84b93d<br>ret <br>mov cl, byte[esi+2]<br>add esi, 2<br>clc <br>sub edx, edx<br>test cl, cl<br>jmp 0x834680<br>jne 0x8301f7<br>lea edx, [ebp-0x114]<br>push edx<br>mov eax, dword[sym.imp.KERNEL32.dll_LoadLibraryA]<br>jmp 0x6a78c2<br>je 0x6ac524<br>cmp ecx, eax<br>jmp 0x8397ec<br>mov ecx, dword[ebp+0xc]<br>mov edx, dword[ebp-0xc]<br>rol esi, 0xd3<br>or si, sp<br>sub si, 0x67df<br>mov eax, dword[ebp+8]<br>mov si, 0x59c4<br>shld si, di, 0x34<br>lea esi, [ebx+eax]<br>btc ax, di<br>adc ax, cx<br>cbw <br>mov eax, dword[ebp+0x10]<br>cmp ax, 0x12a7<br>push eax<br>sar esi, 1<br>and eax, esi<br>movsx eax, si<br>cmp dl, al<br>mov eax, dword[edx+esi*4]<br>add eax, edi<br>call fcn.006ae5c0<br>add esp, 4<br>cmp eax, 0xffffffff<br>jmp 0x6a33fd<br>ret <br>mov edx, dword[edi+0x3c]<br>stc <br>add edx, edi<br>test si, bp<br>cmc <br>cmp dword[edx], 0x4550<br>jne 0x8322e8<br>mov eax, dword[edx+0x78]<br>clc <br>cmp ebp, 0x569d13c1<br>test cl, 0xeb<br>mov dword[ebp-4], eax<br>test esi, 0x5ef17789<br>cmc <br>stc <br>test eax, eax<br>je 0x8322e8<br>mov edx, dword[edx+0x7c]<br>push ebx<br>test bp, dx<br>push esi<br>or esi, 0xffffffff<br>cmp dh, ah<br>stc <br>mov dword[ebp-0x10], edx<br>jmp 0x824d5c<br>mov esp, ebp<br>mov ebp, 0xb1d075e<br>pop ebp<br>jmp 0x6897e2<br>cmp ecx, dword[eax+edi+0x14]<br>jmp 0x83723b<br>mov ecx, dword[ebp-4]<br>mov al, al<br>xchg dh, ah<br>movzx edx, di<br>mov edx, dword[ecx+edi+0x24]<br>mov cl, 0x1d<br>cmovo cx, ax<br>cwde <br>lea eax, [edx+esi*2]<br>movzx ecx, word[eax+edi]<br>movsx edx, dx<br>not dl<br>lea edx, [ebx+1]<br>jmp 0x646df4<br>mov esp, ebp<br>xchg ebp, ebp<br>pop ebp<br>jmp 0x643b93<br>pop esi<br>mov bx, 0x143a<br>pop ebx<br>sets ah<br>not ah<br>lea eax, [ecx+edi]<br>mov edi, 0x233330c1<br>pop edi<br>jmp 0x6a77fd<br>jmp 0x81c1f9<br>je 0x81c1f2<br>test eax, eax<br>jmp 0x8383af<br>mov esp, ebp<br>cmovge ebp, esp<br>pop ebp<br>jmp 0x6952db<br>call eax<br>test eax, eax<br>jmp 0x8301f1<br>jne 0x8478bd<br>pop esi<br>test bh, ah<br>shl bl, cl<br>rcr ebx, cl<br>pop ebx<br>sub eax, eax<br>mov edi, 0x6f2a724a<br>pop edi<br>jmp 0x697d49<br>call fcn.0084dff8<br>add esp, 0xc<br>pop esi<br>movzx bx, bl<br>mov bx, ax<br>pop ebx<br>mov edi, 0xa906b0d<br>movzx edi, cx<br>pop edi<br>jmp 0x69aeb1<br>push eax<br>push edi<br>mov ax, 0x638d<br>jmp 0x847f4f<br>jae 0x69dab6<br>lea eax, [ecx+edi]<br>mov cl, byte[eax]<br>or esi, esi<br>and esi, ebp<br>mov esi, eax<br>test cl, cl<br>je 0x6ac524<br>mov edi, edi<br>clc <br>jmp 0x8478bd<br>jne 0x69044b<br>pop esi<br>pop ebx<br>bts di, bp<br>ror di, 0xef<br>sub eax, eax<br>mov di, 0x2934<br>pop edi<br>jmp 0x83b9f3<br>lea ebx, [esi-1]<br>stc <br>cmp di, dx<br>cmp dword[ebp+8], ebx<br>jmp 0x83e7a4<br>jb 0x82bc5c<br>mov eax, dword[ebp+8]<br>movsx ecx, cx<br>not cx<br>lea ecx, [ebp-0x114]<br>push ecx<br>jmp 0x68c38a<br>cmp ecx, 0x104<br>jae 0x6ac524<br>mov dword[ebp+8], 0<br>jmp 0x82bc40<br>je 0x81d381<br>mov byte[ebx+eax], dl<br>xchg dx, dx<br>mov edx, dword[ebp+8]<br>jmp 0x84bc3f<br>mov dword[ebp-8], esi<br>test si, dx<br>stc <br>cmp ecx, 0xffff<br>ja 0x82e34f<br>sub ecx, dword[eax+edi+0x10]<br>test eax, 0x2b434964<br>cmc <br>jmp 0x698bb7<br>dec ebx<br>cmp esi, 0x14d77cbc<br>stc <br>add edx, edi<br>clc <br>cmc <br>test bp, 0x3260<br>mov dword[ebp+8], 0<br>stc <br>cmp sp, bx<br>mov dword[ebp-0xc], edx<br>cmp ecx, 0x50a25e0d<br>stc <br>jmp 0x68b9ff<br>je 0x8310ab<br>mov cl, byte[esi+1]<br>jmp 0x643d44<br>mov esp, ebp<br>pop ebp<br>ret <br>jne 0x82f132<br>cmp byte[ebp+0x10], 0<br>jmp 0x646ec1<br>test ecx, ecx<br>jbe 0x81d381<br>lea ebx, [ebp-0x114]<br>cmp dx, 0x3629<br>sal dl, cl<br>rcl dl, cl<br>sub ebx, eax<br>or dl, 0xc4<br>mov dl, byte[eax]<br>cmp si, dx<br>test dl, dl<br>jmp 0x821934<br>test ecx, ecx<br>jmp 0x690445<br>mov esp, ebp<br>xchg ebp, ebp<br>pop ebp<br>jmp 0x68da31<br>pop edi<br>jmp 0x82d4f7<br>mov ebx, dword[eax+edi+0x18]<br>test ebx, ebx<br>je 0x83e7b0<br>mov edx, dword[eax+edi+0x20]<br>jmp 0x8260a8<br>cmp byte[esi+1], 0x23<br>jmp 0x8340cb<br>je 0x6ac524<br>cmp eax, edi<br>jmp 0x82babd<br>mov esp, ebp<br>mov ebp, edx<br>cmovle bp, di<br>movzx ebp, ax<br>pop ebp<br>ret <br>mov ecx, esi<br>cmp dx, 0x52c2<br>sub ecx, eax<br>test edi, 0x13424fb8<br>stc <br>jmp 0x81d396<br>je 0x8322e8<br>mov eax, 0x5a4d<br>cmp word[edi], ax<br>je 0x695f9b<br>sub eax, eax<br>pop edi<br>jmp 0x827bce<br>lea ecx, [esi+1]<br>je 0x68ddd1<br>push 0<br>jmp 0x6444bd<br>je 0x68c324<br>mov bl, cl<br>sub bl, 0x30<br>inc esi<br>jmp 0x83b760<br>push edx<br>push eax<br>jmp 0x68c345<br>jae 0x6ac524<br>mov edx, dword[eax+edi+0x1c]<br>cmp cx, 0x7459<br>test ax, si<br>lea ecx, [edx+ecx*4]<br>stc <br>test di, 0x4cdd<br>mov ecx, dword[ecx+edi]<br>cmp ecx, esi<br>cmc <br>test ecx, ecx<br>jmp 0x81c076<br>je 0x699880<br>cmp eax, 1<br>jmp 0x8399fc<br>jb 0x69dab6<br>mov edx, dword[ebp-0x10]<br>lea edx, [edx+eax]<br>cmp edi, 0x235a18c7<br>cmp ecx, edx<br>jmp 0x81bf7d<br>jne 0x81c1f9<br>inc esi<br>mov dword[ebp+8], esi<br>jmp 0x81c1f9<br>cmp bl, 9<br>jmp 0x68c302<br>mov esp, ebp<br>jmp 0x84e82a<br>jle 0x694d06<br>mov eax, dword[ebp-4]<br>mov esi, dword[ebp-8]<br>cmp esi, dword[eax+edi+0x14]<br>jmp 0x686352<br>mov eax, dword[ebp+0xc]<br>jmp 0x818cbc<br>cmp cl, 0x2e<br>jmp 0x826f7a<br>mov eax, dword[sym.imp.KERNEL32.dll_GetProcAddress]<br>call eax<br>pop esi<br>pop ebx<br>movzx edi, ax<br>jmp 0x82e267<br>call eax<br>test eax, eax<br>jmp 0x68f42e<br>call eax<br>pop esi<br>pop ebx<br>jmp 0x84e1a6<br>je 0x84e54c<br>inc edx<br>stc <br>cmp edx, 0x104<br>jmp 0x84e546<br>inc edx<br>inc eax<br>cmc <br>test bp, bp<br>mov dword[ebp+8], edx<br>stc <br>cmp bx, bx<br>cmp edx, ecx<br>jmp 0x81d37b<br>je 0x8322e8<br>mov ecx, dword[ebp+0xc]<br>test ecx, ecx<br>jmp 0x8322d4<br>push ebp<br>add ebp, 0x5b295248<br>not ebp<br>sbb ebp, 0x44af22c5<br>mov ebp, esp<br>sub esp, 0x114<br>push edi<br>rcl edi, 0xce<br>btc di, cx<br>test ebx, edi<br>mov edi, dword[ebp+8]<br>cmp bp, 0x19ef<br>test edi, edi<br>jmp 0x84c4ca<br>pop edi<br>jmp 0x830c86<br>jb 0x646ee1<br>lea eax, [ebp-0x114]<br>push eax<br>movsx eax, bx<br>lahf <br>push edi<br>movzx eax, bp<br>movsx eax, si<br>mov eax, dword[sym.imp.KERNEL32.dll_GetProcAddress]<br>jmp 0x8491dc<br>pop ebp<br>ret <br><eoc> ', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

je 0x87b3e7
mov edx, dword[edx+0x7c]
push ebx
cmc
push esi
or esi, 0xffffffff
stc
test edi, ebx
jmp 0x8944cb
pop esi
cwde
nop
pop ebx
lea eax, [ecx+edi]
xchg edi, edi
pop edi
jmp 0x7cd717
mov esp, ebp
pop ebp
jmp 0x60838f
mov byte[esi], al
jmp 0x805c1a
je 0x84bea1
push 0
jmp 0x8ad736
jne 0x8229dd
cmp byte[ebp+0x10], 0
jmp 0x614615
jae 0x5b460c
lea eax, [ecx+edi]
bts esi, esi
shrd esi, ebp, 0x80
mov cl, byte[eax]
stc
movsx esi, di
mov esi, eax
jmp 0x8a3c15
jl 0x8219f0
jmp 0x67bdbd
ret
jae 0x853a39
mov ecx, dword[eax+edi+0x1c]
mov dx, 0x5eb6
btc edx, esi
lea edx, [ecx+esi*4]
add ecx, 0x18ed459c
xchg ch, ch
cmp bx, ax
mov ecx, dword[edx+edi]
test ecx, ecx
jmp 0x7d0c06
test ecx, ecx
jne 0x7d0c0c
pop esi
pop ebx
xor eax, eax
mov di, bx
pop edi
jmp 0x823b09
ret
mov esp, ebp
pop ebp
ret
je 0x83c027
mov ebx, dword[ebp+0xc]
lea eax, [ebp-0x114]
shld si, si, 0x62
sub edx, edx
cmp bl, 0xac
sub ebx, eax
mov edi, edi
movsx ax, dh
mov eax, 0x1b5e4ab9
mov cl, dl
rol eax, cl
or si, 0x47dc
lea esi, [ebp+edx-0x114]
stc
add al, dl
cmc
jmp 0x61470d
xor al, byte[ebx+esi]
jmp 0x5d70b1
mov ecx, esi
sub ecx, eax
test ebx, esi
cmp ecx, 0x104
jmp 0x8a0105
mov dword[ebp-0xc], edx
test edx, esp
test ebx, ebx
jmp 0x603d57
lea edx, [edx+edx*4]
cmc
stc
lea edx, [ecx+edx*2-0x30]
test ebp, ebx
xchg cl, cl
mov cl, byte[esi]
test cl, cl
jne 0x868402
push 0
jmp 0x859d79
je 0x8219f0
mov edx, dword[eax+edi+0x20]
jmp 0x8b1a58
ja 0x625c9b
movsx ecx, cl
jmp 0x625c84
pop esi
pop ebx
mov di, 0x22fd
mov edi, esi
pop edi
jmp 0x6110e0
call fcn.00667da5
add esp, 4
cmp eax, 0xffffffff
jmp 0x86ade9
mov ecx, dword[ebp-4]
lahf
movsx dx, bh
mov edx, dword[ecx+edi+0x24]
movsx ecx, di
movzx cx, ch
cmovl cx, ax
lea eax, [edx+esi*2]
movsx ecx, dx
not cl
movsx dx, cl
movzx ecx, word[eax+edi]
lea edx, [ebx+1]
jmp 0x65ad71
sub bl, 0x30
inc esi
test si, 0x70ef
jmp 0x89ed93
jb 0x5b460c
mov edx, dword[ebp-0x10]
add edx, eax
jmp 0x8983f6
mov dword[ebp-8], ecx
mov dword[ebp+8], edx
jmp 0x8219e1
mov dword[ebp+8], 0
stc
jmp 0x622d00
jne 0x8219e1
inc esi
jmp 0x87a1b7
call fcn.0081aad0
add esp, 0xc
cmovl si, cx
pop esi
cmovnp edi, edi
movzx bx, cl
pop ebx
movzx edi, bx
mov di, bp
pop edi
jmp 0x8ab3e5
je 0x87b3e7
mov ecx, dword[ebp+0xc]
test bp, dx
test ecx, ecx
je 0x87b3e7
mov eax, 0x5a4d
cmp word[edi], ax
jmp 0x87b3e1
mov ecx, dword[ebp+0xc]
sbb si, 0x4c14
and si, 0x3c2c
mov edx, dword[ebp-0xc]
mov si, 0x790c
cmc
mov eax, dword[ebp+8]
test bl, al
jmp 0x7d4259
lea edx, [edx+edi]
clc
cmp dword[edx], 0x4550
jne 0x87b3e7
mov eax, dword[edx+0x78]
jmp 0x7fbffd
call fcn.0081aad0
add esp, 0xc
jmp 0x62c782
jb 0x8a0129
mov eax, dword[ebp+8]
lea ecx, [ebp-0x114]
jmp 0x7d8ab9
mov esp, ebp
pop ebp
ret
push eax
jmp 0x66acc8
mov esp, ebp
cmovo bp, ax
movzx ebp, si
pop ebp
jmp 0x842c97
je 0x853a39
cmp ecx, eax
jmp 0x64a43b
ret
lea esi, [ebx+eax]
jmp 0x851387
push ecx
mov byte[ebp+eax-0x114], 0
mov eax, dword[sym.imp.KERNEL32.dll_GetModuleHandleA]
jmp 0x876ac0
je 0x853a39
mov edi, edi
cmp cl, 0x2e
je 0x618344
mov cl, byte[esi+1]
jmp 0x853a30
mov dword[ebp-4], eax
test eax, eax
jmp 0x5a5dd3
je 0x80fe82
inc edx
cmp edx, 0x104
jmp 0x80fe7c
xor edx, edx
jmp 0x8683fa
jb 0x614636
lea eax, [ebp-0x114]
jmp 0x897383
inc edx
jmp 0x8960f3
push ebp
movsx ebp, bx
or ebp, ecx
mov ebp, esp
sub esp, 0x114
test si, 0x286c
push edi
cmovb edi, ebx
mov edi, dword[ebp+8]
stc
test di, di
test edi, edi
jmp 0x67ba53
mov dword[ebp-8], esi
stc
jmp 0x8a0139
ret
lea ebx, [esi-1]
cmp dword[ebp+8], ebx
jle 0x67bda8
mov eax, dword[ebp-4]
mov esi, dword[ebp-8]
cmp esi, dword[eax+edi+0x14]
jmp 0x6054d5
cmp byte[esi+1], 0x23
lea ecx, [esi+1]
jmp 0x5d8e63
mov esp, ebp
mov bp, 0x6060
pop ebp
jmp 0x7d1e5b
jmp 0x8219e1
mov eax, dword[ebp+0xc]
push eax
mov eax, 0x35ac057a
push edi
mov eax, 0x41885357
mov eax, dword[sym.imp.KERNEL32.dll_GetProcAddress_1]
call eax
pop esi
cmove ebx, esp
pop ebx
mov di, sp
not edi
xchg edi, edi
pop edi
jmp 0x8b9888
ret
mov cl, byte[esi+2]
lea esi, [esi+2]
jmp 0x80746a
mov eax, dword[ebp+0x10]
cmp di, bx
cmc
push eax
xor al, cl
sar esi, 1
sub ah, 0x2e
bts eax, ecx
mov eax, dword[edx+esi*4]
clc
test esp, 0x24d3fdf
stc
add eax, edi
jmp 0x631e13
cmp edx, ecx
jmp 0x7c5c82
inc esi
test cl, cl
jne 0x7dde21
pop esi
bt di, 0xe4
pop ebx
shrd di, sp, 0xfa
xor eax, eax
pop edi
jmp 0x7cf81f
mov ebx, dword[eax+edi+0x18]
test ebp, 0x1da125d9
test ebx, ebx
jmp 0x625ca7
push edx
jmp 0x8a9b65
test cl, cl
je 0x625c9b
mov bl, cl
jmp 0x649864
je 0x8219de
test eax, eax
je 0x64870a
cmp eax, 1
jmp 0x665b46
mov edx, dword[edi+0x3c]
test bp, di
test dh, 0x39
jmp 0x67cdd6
call eax
test eax, eax
jmp 0x8a6eca
mov dword[ebp+8], esi
jmp 0x8320b4
je 0x87666c
sub eax, eax
mov edi, 0x4e0e536e
not edi
pop edi
jmp 0x88cc3a
jae 0x853a39
mov edx, dword[eax+edi+0x1c]
lea ecx, [edx+ecx*4]
mov ecx, dword[ecx+edi]
jmp 0x605af4
mov esp, ebp
pop ebp
jmp 0x82133f
mov dword[ebp-0x10], edx
jmp 0x81c1cf
inc eax
jmp 0x8970fc
je 0x7c5c88
mov byte[ebx+eax], dl
mov dh, cl
setl dl
xchg dx, dx
mov edx, dword[ebp+8]
jmp 0x815f89
mov dword[ebp+8], edx
jmp 0x8533c7
push eax
lahf
nop
push edi
mov eax, dword[sym.imp.KERNEL32.dll_GetProcAddress_1]
call eax
pop esi
pop ebx
pop edi
jmp 0x5b7515
cmp ecx, edx
jmp 0x5f01af
cmp bl, 9
jmp 0x6289cd
jae 0x853a39
mov dword[ebp+8], 0
test ecx, ecx
jbe 0x7c5c88
lea ebx, [ebp-0x114]
sub ebx, eax
sar dl, 0xf
rcl dl, cl
mov dl, 0xc
mov dl, byte[eax]
test ecx, 0x7649251f
stc
test dl, dl
jmp 0x89618c
cmp ecx, 0xffff
ja 0x855dbb
sub ecx, dword[eax+edi+0x10]
cmp ecx, dword[eax+edi+0x14]
jmp 0x88ac4e
test cl, cl
jmp 0x7dde19
jne 0x8b8141
lea edx, [ebp-0x114]
nop
push edx
bswap ax
mov eax, dword[sym.imp.KERNEL32.dll_LoadLibraryA]
call eax
test eax, eax
jmp 0x8b813b
push eax
jmp 0x7c56a7
mov esp, ebp
pop ebp
ret
push ecx
jmp 0x7cf606
dec ebx
test ecx, esi
stc
lea edx, [edx+edi]
jmp 0x663371
je 0x853a39
cmp eax, edi
jmp 0x5da537
mov esp, ebp
pop ebp
jmp 0x604c1b

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/d7f6321393aa1e48372c56e725bcd270