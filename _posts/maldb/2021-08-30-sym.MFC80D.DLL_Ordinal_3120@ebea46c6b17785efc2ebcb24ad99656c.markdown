---
layout: post
title:  "sym.MFC80D.DLL_Ordinal_3120 @ ebea46c6b17785efc2ebcb24ad99656c"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** sym.MFC80D.DLL\_Ordinal\_3120
- **Origin (md5):** ebea46c6b17785efc2ebcb24ad99656c
- **VirusTotal:** [virustotal.com/gui/file/ebea46c6b17785efc2ebcb24ad99656c][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/sym.MFC80D.DLL_Ordinal_3120@ebea46c6b17785efc2ebcb24ad99656c">sym.MFC80D.DLL_Ordinal_3120</a><br>@ebea46c6b17785efc2ebcb24ad99656c</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
push 0xffffffffffffffff
push 0x783b101b
mov eax, dword
push eax
sub esp, 0xc4
push esi
push edi
mov eax, dword[0x783e90cc]
xor eax, ebp
push eax
lea eax, [ebp-0xc]
mov dword
mov dword[ebp-0xc0], ecx
mov eax, dword[ebp+8]
mov ecx, dword[eax+4]
mov dword[ebp-0x10], ecx
cmp dword[ebp-0x10], 0x200
je off.b106
cmp dword[ebp-0x10], 0xa0
je off.b106
cmp dword[ebp-0x10], 0x202
je off.b106
cmp dword[ebp-0x10], 0x205
je off.b106
cmp dword[ebp-0x10], 0x208
jne off.b1436
push 1
call dword[sym.imp.USER32.dll_GetKeyState]
movsx edx, ax
test edx, edx
jl off.b1436
push 2
call dword[sym.imp.USER32.dll_GetKeyState]
movsx eax, ax
test eax, eax
jl off.b1436
push 4
call dword[sym.imp.USER32.dll_GetKeyState]
movsx ecx, ax
test ecx, ecx
jl off.b1436
call sym.MFC80D.DLL_Ordinal_1443
mov dword[ebp-0x60], eax
mov edx, dword[ebp+8]
mov eax, dword[edx]
push eax
call sym.MFC80D.DLL_Ordinal_3261
mov dword[ebp-0x5c], eax
cmp dword[ebp-0x5c], 0
je off.b218
mov ecx, dword[ebp-0x5c]
mov edx, dword[ecx+0x3c]
and edx, 0x401
jne off.b218
mov ecx, dword[ebp-0x5c]
call sym.MFC80D.DLL_Ordinal_4340
mov dword[ebp-0x5c], eax
jmp off.b185
mov eax, dword[ebp-0x5c]
cmp eax, dword[ebp-0xc0]
je off.b266
cmp dword[ebp-0x5c], 0
jne off.b261
mov ecx, dword[ebp-0x60]
mov dword[ecx+0x88], 0
mov edx, dword[ebp-0x60]
mov dword[edx+0x8c], 0xffffffff
jmp off.b1771
mov eax, dword[ebp-0x60]
mov ecx, dword[eax+0x84]
mov dword[ebp-0x58], ecx
mov ecx, dword[ebp-0xc0]
call sym.MFC80D.DLL_Ordinal_4344
mov dword[ebp-0x24], eax
cmp dword[ebp-0x58], 0
je off.b413
mov ecx, dword[ebp-0x58]
call sym.MFC80D.DLL_Ordinal_4317
cmp eax, dword[ebp-0x24]
je off.b413
mov edx, dword[ebp-0x58]
mov eax, dword[edx]
mov ecx, dword[ebp-0x58]
mov edx, dword[eax+0x68]
call edx
mov eax, dword[ebp-0x58]
mov dword[ebp-0xa8], eax
mov ecx, dword[ebp-0xa8]
mov dword[ebp-0xa4], ecx
cmp dword[ebp-0xa4], 0
je off.b383
push 1
mov edx, dword[ebp-0xa4]
mov eax, dword[edx]
mov ecx, dword[ebp-0xa4]
mov edx, dword[eax+4]
call edx
mov dword[ebp-0xc4], eax
jmp off.b393
mov dword[ebp-0xc4], 0
mov eax, dword[ebp-0x60]
mov dword[eax+0x84], 0
mov dword[ebp-0x58], 0
cmp dword[ebp-0x58], 0
jne off.b648
push 0x19c
push 0x781d780c
push 0x70
call sym.MFC80D.DLL_Ordinal_900
mov dword[ebp-0xb0], eax
mov dword[ebp-4], 0
cmp dword[ebp-0xb0], 0
je off.b481
mov ecx, dword[ebp-0xb0]
call sym.MFC80D.DLL_Ordinal_654
mov dword[ebp-0xc8], eax
jmp off.b491
mov dword[ebp-0xc8], 0
mov ecx, dword[ebp-0xc8]
mov dword[ebp-0xac], ecx
mov dword[ebp-4], 0xffffffff
mov edx, dword[ebp-0xac]
mov dword[ebp-0x58], edx
push 1
mov eax, dword[ebp-0x24]
push eax
mov ecx, dword[ebp-0x58]
mov edx, dword[ecx]
mov ecx, dword[ebp-0x58]
mov eax, dword[edx+0x13c]
call eax
test eax, eax
jne off.b619
mov ecx, dword[ebp-0x58]
mov dword[ebp-0xb8], ecx
mov edx, dword[ebp-0xb8]
mov dword[ebp-0xb4], edx
cmp dword[ebp-0xb4], 0
je off.b604
push 1
mov eax, dword[ebp-0xb4]
mov edx, dword[eax]
mov ecx, dword[ebp-0xb4]
mov eax, dword[edx+4]
call eax
mov dword[ebp-0xcc], eax
jmp off.b614
mov dword[ebp-0xcc], 0
jmp off.b1771
push 0
push 0
push 0x401
mov ecx, dword[ebp-0x58]
call sym.MFC80D.DLL_Ordinal_7668
mov ecx, dword[ebp-0x60]
mov edx, dword[ebp-0x58]
mov dword[ecx+0x84], edx
push 0x1a6
push 0x781d780c
mov eax, dword[ebp-0x58]
push eax
call sym.MFC80D.DLL_Ordinal_1364
mov ecx, dword[ebp-0x58]
mov edx, dword[ecx+0x20]
push edx
call dword[sym.imp.USER32.dll_IsWindow]
test eax, eax
jne off.b704
push 0x1a7
push 0x781d780c
call sym.MFC80D.DLL_Ordinal_1363
test eax, eax
je off.b704
int3
push 0x30
push 0
lea ecx, [ebp-0x90]
push ecx
call sub.MSVCR80D.dll_memset
add esp, 0xc
mov edx, dword[ebp+8]
mov eax, dword[edx+0x18]
push eax
mov ecx, dword[edx+0x14]
push ecx
lea ecx, [ebp-0x18]
call fcn.783a6cf0
lea edx, [ebp-0x18]
push edx
mov eax, dword[ebp-0xc0]
mov ecx, dword[eax+0x20]
push ecx
call dword[sym.imp.USER32.dll_ScreenToClient]
push 0x30
push 0
lea edx, [ebp-0x54]
push edx
call sub.MSVCR80D.dll_memset
add esp, 0xc
mov dword[ebp-0x54], 0x28
lea eax, [ebp-0x54]
push eax
mov ecx, dword[ebp-0x14]
push ecx
mov edx, dword[ebp-0x18]
push edx
mov eax, dword[ebp-0xc0]
mov edx, dword[eax]
mov ecx, dword[ebp-0xc0]
mov eax, dword[edx+0x74]
call eax
mov dword[ebp-0x20], eax
mov ecx, dword[ebp-0x20]
sub ecx, 0xffffffff
neg ecx
sbb ecx, ecx
and ecx, dword[ebp-0xc0]
mov dword[ebp-0x1c], ecx
mov edx, dword[ebp-0x60]
mov eax, dword[edx+0x8c]
cmp eax, dword[ebp-0x20]
jne off.b870
mov ecx, dword[ebp-0x60]
mov edx, dword[ecx+0x88]
cmp edx, dword[ebp-0x1c]
je off.b1303
cmp dword[ebp-0x20], 0xffffffff
je off.b1102
mov ecx, 0xc
lea esi, [ebp-0x54]
lea edi, [ebp-0x90]
rep movsd
mov eax, dword[ebp-0x8c]
and eax, 0x3fffffff
mov dword[ebp-0x8c], eax
mov ecx, dword[ebp-0xc0]
mov edx, dword[ecx+0x3c]
and edx, 0x400
je off.b945
mov eax, dword[ebp-0x8c]
or eax, 0x20
mov dword[ebp-0x8c], eax
lea ecx, [ebp-0x90]
push ecx
push 0
push 0x404
mov ecx, dword[ebp-0x58]
call sym.MFC80D.DLL_Ordinal_7668
test eax, eax
jne off.b991
push 0x1bd
push 0x781d780c
call sym.MFC80D.DLL_Ordinal_1363
test eax, eax
je off.b991
int3
mov eax, dword[ebp-0x50]
and eax, 0x40000000
jne off.b1016
mov ecx, dword[ebp-0xc0]
call sym.MFC80D.DLL_Ordinal_5569
test eax, eax
je off.b1100
push 0
push 1
push 0x401
mov ecx, dword[ebp-0x58]
call sym.MFC80D.DLL_Ordinal_7668
mov ecx, dword[ebp-0xc0]
mov edx, dword[ecx+0x3c]
and edx, 0x400
je off.b1072
lea eax, [ebp-0x90]
push eax
push 1
push 0x411
mov ecx, dword[ebp-0x58]
call sym.MFC80D.DLL_Ordinal_7668
push 0x213
push 0
push 0
push 0
push 0
push 0
mov ecx, dword[ebp-0x58]
mov edx, dword[ecx+0x20]
push edx
call dword[sym.imp.USER32.dll_SetWindowPos]
jmp off.b1119
push 0
push 0
push 0x401
mov ecx, dword[ebp-0x58]
call sym.MFC80D.DLL_Ordinal_7668
mov eax, dword[ebp+8]
push eax
mov ecx, dword[ebp-0x58]
push ecx
call fcn.7825f060
mov edx, dword[ebp-0x60]
cmp dword[edx+0x90], 0
je off.b1183
mov eax, dword[ebp-0x60]
mov ecx, dword[eax+0x90]
cmp dword[ecx], 0x28
jb off.b1183
mov edx, dword[ebp-0x60]
mov eax, dword[edx+0x90]
push eax
push 0
push 0x405
mov ecx, dword[ebp-0x58]
call sym.MFC80D.DLL_Ordinal_7668
mov ecx, dword[ebp-0x60]
mov edx, dword[ebp-0x1c]
mov dword[ecx+0x88], edx
mov eax, dword[ebp-0x60]
mov ecx, dword[ebp-0x20]
mov dword[eax+0x8c], ecx
mov edx, dword[ebp-0x60]
cmp dword[edx+0x90], 0
jne off.b1282
push 0x1db
push 0x781d780c
push 0x30
call sym.MFC80D.DLL_Ordinal_895
add esp, 0xc
mov dword[ebp-0xbc], eax
mov eax, dword[ebp-0x60]
mov ecx, dword[ebp-0xbc]
mov dword[eax+0x90], ecx
push 0x30
push 0
mov edx, dword[ebp-0x60]
mov eax, dword[edx+0x90]
push eax
call sub.MSVCR80D.dll_memset
add esp, 0xc
mov ecx, dword[ebp-0x60]
mov edi, dword[ecx+0x90]
mov ecx, 0xc
lea esi, [ebp-0x54]
rep movsd
jmp off.b1404
mov edx, dword[ebp-0xc0]
mov eax, dword[edx+0x3c]
and eax, 0x400
je off.b1385
lea ecx, [ebp-0x98]
push ecx
call dword[sym.imp.USER32.dll_GetCursorPos]
mov edx, dword[ebp-0x98]
and edx, 0xffff
movzx eax, dx
mov ecx, dword[ebp-0x94]
and ecx, 0xffff
movzx edx, cx
shl edx, 0x10
or eax, edx
push eax
push 0
push 0x412
mov ecx, dword[ebp-0x58]
call sym.MFC80D.DLL_Ordinal_7668
jmp off.b1404
cmp dword[ebp-0x20], 0xffffffff
je off.b1404
mov eax, dword[ebp+8]
push eax
mov ecx, dword[ebp-0x58]
push ecx
call fcn.7825f060
cmp dword[ebp-0x30], 0xffffffff
je off.b1431
cmp dword[ebp-0x34], 0
jne off.b1431
push 1
mov edx, dword[ebp-0x30]
push edx
call dword[sym.imp.MSVCR80D.dll__free_dbg]
add esp, 8
jmp off.b1771
mov eax, dword[ebp-0xc0]
mov ecx, dword[eax+0x3c]
and ecx, 0x401
je off.b1771
mov edx, dword[ebp+8]
mov eax, dword[edx]
push eax
call sym.MFC80D.DLL_Ordinal_3261
mov dword[ebp-0x9c], eax
cmp dword[ebp-0x9c], 0
je off.b1532
mov ecx, dword[ebp-0x9c]
cmp ecx, dword[ebp-0xc0]
je off.b1532
mov edx, dword[ebp-0x9c]
mov eax, dword[edx+0x3c]
and eax, 0x401
jne off.b1532
mov ecx, dword[ebp-0x9c]
call sym.MFC80D.DLL_Ordinal_4340
mov dword[ebp-0x9c], eax
jmp off.b1474
mov ecx, dword[ebp-0x9c]
cmp ecx, dword[ebp-0xc0]
je off.b1551
jmp off.b1771
cmp dword[ebp-0x10], 0x100
jb off.b1569
cmp dword[ebp-0x10], 0x109
jbe off.b1599
cmp dword[ebp-0x10], 0x104
jb off.b1587
cmp dword[ebp-0x10], 0x107
jbe off.b1599
mov dword[ebp-0xd0], 0
jmp off.b1609
mov dword[ebp-0xd0], 1
mov edx, dword[ebp-0xd0]
mov dword[ebp-0xa0], edx
mov eax, dword[ebp-0xc0]
mov ecx, dword[eax+0x3c]
and ecx, 0x400
jne off.b1771
cmp dword[ebp-0xa0], 0
jne off.b1759
cmp dword[ebp-0x10], 0x201
je off.b1759
cmp dword[ebp-0x10], 0x203
je off.b1759
cmp dword[ebp-0x10], 0x204
je off.b1759
cmp dword[ebp-0x10], 0x206
je off.b1759
cmp dword[ebp-0x10], 0x207
je off.b1759
cmp dword[ebp-0x10], 0x209
je off.b1759
cmp dword[ebp-0x10], 0xa1
je off.b1759
cmp dword[ebp-0x10], 0xa3
je off.b1759
cmp dword[ebp-0x10], 0xa4
je off.b1759
cmp dword[ebp-0x10], 0xa6
je off.b1759
cmp dword[ebp-0x10], 0xa7
je off.b1759
cmp dword[ebp-0x10], 0xa9
jne off.b1771
mov edx, dword[ebp-0xa0]
push edx
call sym.MFC80D.DLL_Ordinal_1891
mov ecx, dword[ebp-0xc]
mov dword
pop ecx
pop edi
pop esi
mov esp, ebp
pop ebp
ret 4

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/ebea46c6b17785efc2ebcb24ad99656c