---
layout: post
title:  "fcn.00445306 @ 418e0921f3a9bd4f5bc0dcc59623b5a1"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00445306
- **Origin (md5):** 418e0921f3a9bd4f5bc0dcc59623b5a1
- **VirusTotal:** [virustotal.com/gui/file/418e0921f3a9bd4f5bc0dcc59623b5a1][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-91.21941375732422, 78.98818969726562, '<b><a href="/report/fcn.00445306@418e0921f3a9bd4f5bc0dcc59623b5a1">fcn.00445306</a><br>@418e0921f3a9bd4f5bc0dcc59623b5a1</b><br>', 'point { fill-color: #e0440e; }'],
[-6.2819623947143555, -80.99082946777344, '<b><a href="/report/fcn.004fb462@e2ba7f10eb234338a49853c34d7d9c56">fcn.004fb462</a><br>@e2ba7f10eb234338a49853c34d7d9c56</b><br>', 'null'],
[81.20713806152344, 77.6069107055664, '<b><a href="/report/fcn.0041c4e3@505be53c36227b94e2fcc406f247f6e5">fcn.0041c4e3</a><br>@505be53c36227b94e2fcc406f247f6e5</b><br>', 'null'],
[33.808773040771484, -1.2699804306030273, '<b><a href="/report/fcn.0041ce11@20a93604f17ee6f3c2aa7b1f7a497fcf">fcn.0041ce11</a><br>@20a93604f17ee6f3c2aa7b1f7a497fcf</b><br>', 'null'],
[-131.9044647216797, -7.112117767333984, '<b><a href="/report/fcn.004948d2@4fe6510221c33bf023f6abed461fc13f">fcn.004948d2</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>', 'null'],
[77.60774230957031, -91.27227020263672, '<b><a href="/report/fcn.0041c184@9571c7458fae91969aaed3955e433f49">fcn.0041c184</a><br>@9571c7458fae91969aaed3955e433f49</b><br>', 'null'],
[120.50786590576172, -9.133755683898926, '<b><a href="/report/fcn.0041c184@3aa98225e51cbcae2d334c8b6b4ed9fd">fcn.0041c184</a><br>@3aa98225e51cbcae2d334c8b6b4ed9fd</b><br>', 'null'],
[-4.940784454345703, 86.45403289794922, '<b><a href="/report/fcn.0041c2c1@e16f74a2849182d98050864255e902f8">fcn.0041c2c1</a><br>@e16f74a2849182d98050864255e902f8</b><br>', 'null'],
[-7.327209949493408, -211.7048797607422, '<b><a href="/report/fcn.0047e540@289859175c221b107317af7727d26c17">fcn.0047e540</a><br>@289859175c221b107317af7727d26c17</b><br>', 'null'],
[-90.32553100585938, -89.92750549316406, '<b><a href="/report/fcn.0041c184@44a756939733df3681808b122b91651f">fcn.0041c184</a><br>@44a756939733df3681808b122b91651f</b><br>', 'null'],
[-45.090736389160156, -0.6380185484886169, '<b><a href="/report/fcn.0041c4e3@96a869ae624ddb4834a1d5a829f85469">fcn.0041c4e3</a><br>@96a869ae624ddb4834a1d5a829f85469</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

mov edi, edi
push ebp
mov ebp, esp
mov eax, 0x1ae4
call fcn.004406a0
mov eax, dword[0x4a83f0]
xor eax, ebp
mov dword[ebp-4], eax
mov eax, dword[ebp+0xc]
push esi
mov esi, dword[ebp+8]
push edi
xor edi, edi
mov dword[ebp-0x1acc], eax
mov dword[ebp-0x1ac8], edi
mov dword[ebp-0x1ad0], edi
cmp dword[ebp+0x10], edi
jne off.b65
xor eax, eax
jmp off.b1775
cmp eax, edi
jne off.b100
call fcn.004409d3
mov dword[eax], edi
call fcn.004409c0
mov dword[eax], 0x16
call fcn.0044141c
or eax, 0xffffffff
jmp off.b1775
mov eax, esi
sar eax, 5
mov edi, esi
push ebx
lea ebx, [eax*4+0x4b6060]
mov eax, dword[ebx]
and edi, 0x1f
shl edi, 6
mov cl, byte[eax+edi+0x24]
add cl, cl
sar cl, 1
mov dword[ebp-0x1adc], ebx
mov byte[ebp-0x1ac1], cl
cmp cl, 2
je off.b153
cmp cl, 1
jne off.b192
mov ecx, dword[ebp+0x10]
not ecx
test cl, 1
jne off.b192
call fcn.004409d3
and dword[eax], 0
call fcn.004409c0
mov dword[eax], 0x16
call fcn.0044141c
jmp off.b1757
test byte[eax+edi+4], 0x20
je off.b214
push 2
push 0
push 0
push esi
call fcn.0044dcc7
add esp, 0x10
push esi
call fcn.00448574
pop ecx
test eax, eax
je off.b894
mov eax, dword[ebx]
test byte[edi+eax+4], 0x80
je off.b894
call fcn.004438a2
mov eax, dword[eax+0x6c]
xor ecx, ecx
cmp dword[eax+0x14], ecx
lea eax, [ebp-0x1ae0]
sete cl
push eax
mov eax, dword[ebx]
push dword[edi+eax]
mov esi, ecx
call dword[sym.imp.KERNEL32.dll_GetConsoleMode]
xor ecx, ecx
cmp eax, ecx
je off.b896
cmp esi, ecx
je off.b304
cmp byte[ebp-0x1ac1], cl
je off.b896
call dword[sym.imp.KERNEL32.dll_GetConsoleCP]
mov ebx, dword[ebp-0x1acc]
mov dword[ebp-0x1ae0], eax
xor eax, eax
mov dword[ebp-0x1ad4], eax
cmp dword[ebp+0x10], eax
jbe off.b1654
mov dword[ebp-0x1ac0], eax
mov al, byte[ebp-0x1ac1]
test al, al
jne off.b718
mov cl, byte[ebx]
mov esi, dword[ebp-0x1adc]
xor eax, eax
cmp cl, 0xa
sete al
mov dword[ebp-0x1ae4], eax
mov eax, dword[esi]
add eax, edi
cmp dword[eax+0x38], 0
je off.b412
mov dl, byte[eax+0x34]
mov byte[ebp-0xc], dl
mov byte[ebp-0xb], cl
and dword[eax+0x38], 0
push 2
lea eax, [ebp-0xc]
push eax
jmp off.b487
movsx eax, cl
push eax
call fcn.00448911
pop ecx
test eax, eax
je off.b484
mov ecx, dword[ebp-0x1acc]
sub ecx, ebx
add ecx, dword[ebp+0x10]
xor eax, eax
inc eax
cmp ecx, eax
jbe off.b869
push 2
lea eax, [ebp-0x1abc]
push ebx
push eax
call fcn.0044dfd7
add esp, 0xc
cmp eax, 0xffffffff
je off.b1645
inc ebx
inc dword[ebp-0x1ac0]
jmp off.b511
push 1
push ebx
lea eax, [ebp-0x1abc]
push eax
call fcn.0044dfd7
add esp, 0xc
cmp eax, 0xffffffff
je off.b1645
xor eax, eax
push eax
push eax
push 5
lea ecx, [ebp-0xc]
push ecx
push 1
lea ecx, [ebp-0x1abc]
push ecx
push eax
push dword[ebp-0x1ae0]
inc ebx
inc dword[ebp-0x1ac0]
call dword[sym.imp.KERNEL32.dll_WideCharToMultiByte]
mov esi, eax
test esi, esi
je off.b1645
push 0
lea eax, [ebp-0x1ad4]
push eax
push esi
lea eax, [ebp-0xc]
push eax
mov eax, dword[ebp-0x1adc]
mov eax, dword[eax]
push dword[edi+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je off.b1633
mov eax, dword[ebp-0x1ac0]
mov ecx, dword[ebp-0x1ad0]
add eax, ecx
mov dword[ebp-0x1ac8], eax
cmp dword[ebp-0x1ad4], esi
jl off.b1645
cmp dword[ebp-0x1ae4], 0
je off.b849
push 0
lea eax, [ebp-0x1ad4]
push eax
push 1
lea eax, [ebp-0xc]
push eax
mov eax, dword[ebp-0x1adc]
mov eax, dword[eax]
mov byte[ebp-0xc], 0xd
push dword[edi+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je off.b1633
cmp dword[ebp-0x1ad4], 1
jl off.b1645
inc dword[ebp-0x1ad0]
inc dword[ebp-0x1ac8]
jmp off.b849
cmp al, 1
je off.b726
cmp al, 2
jne off.b759
movzx esi, word[ebx]
xor ecx, ecx
cmp esi, 0xa
sete cl
add ebx, 2
add dword[ebp-0x1ac0], 2
mov dword[ebp-0x1abc], esi
mov dword[ebp-0x1ae4], ecx
cmp al, 1
je off.b767
cmp al, 2
jne off.b849
push dword[ebp-0x1abc]
call fcn.0044de7f
pop ecx
cmp ax, word[ebp-0x1abc]
jne off.b1633
add dword[ebp-0x1ac8], 2
cmp dword[ebp-0x1ae4], 0
je off.b849
push 0xd
pop eax
push eax
mov dword[ebp-0x1abc], eax
call fcn.0044de7f
pop ecx
cmp ax, word[ebp-0x1abc]
jne off.b1633
inc dword[ebp-0x1ac8]
inc dword[ebp-0x1ad0]
mov eax, dword[ebp+0x10]
cmp dword[ebp-0x1ac0], eax
jb off.b345
jmp off.b1645
mov ecx, dword[esi]
mov dl, byte[ebx]
inc dword[ebp-0x1ac8]
mov byte[edi+ecx+0x34], dl
mov ecx, dword[esi]
mov dword[edi+ecx+0x38], eax
jmp off.b1645
xor ecx, ecx
mov eax, dword[ebx]
test byte[eax+edi+4], 0x80
je off.b1582
cmp byte[ebp-0x1ac1], 0
mov dword[ebp-0x1abc], ecx
jne off.b1096
mov ebx, dword[ebp-0x1acc]
cmp dword[ebp+0x10], ecx
jbe off.b1708
mov ecx, ebx
xor esi, esi
sub ecx, dword[ebp-0x1acc]
lea eax, [ebp-0x1ab8]
cmp ecx, dword[ebp+0x10]
jae off.b1002
mov dl, byte[ebx]
inc ebx
inc ecx
mov dword[ebp-0x1ae0], ebx
cmp dl, 0xa
jne off.b990
inc dword[ebp-0x1ad0]
mov byte[eax], 0xd
inc eax
inc esi
mov byte[eax], dl
inc eax
inc esi
cmp esi, 0x13ff
jb off.b959
mov esi, eax
lea eax, [ebp-0x1ab8]
sub esi, eax
push 0
lea eax, [ebp-0x1ad8]
push eax
push esi
lea eax, [ebp-0x1ab8]
push eax
mov eax, dword[ebp-0x1adc]
mov eax, dword[eax]
push dword[edi+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je off.b1633
mov eax, dword[ebp-0x1ad8]
add dword[ebp-0x1ac8], eax
cmp eax, esi
jl off.b1645
mov eax, ebx
sub eax, dword[ebp-0x1acc]
cmp eax, dword[ebp+0x10]
jb off.b943
jmp off.b1645
cmp byte[ebp-0x1ac1], 2
jne off.b1314
mov ebx, dword[ebp-0x1acc]
cmp dword[ebp+0x10], ecx
jbe off.b1708
and dword[ebp-0x1ac0], 0
mov ecx, ebx
sub ecx, dword[ebp-0x1acc]
push 2
lea eax, [ebp-0x1ab8]
pop esi
cmp ecx, dword[ebp+0x10]
jae off.b1220
movzx edx, word[ebx]
add ebx, esi
add ecx, esi
mov dword[ebp-0x1ae0], ebx
cmp edx, 0xa
jne off.b1197
add dword[ebp-0x1ad0], esi
push 0xd
pop ebx
mov word[eax], bx
mov ebx, dword[ebp-0x1ae0]
add eax, esi
add dword[ebp-0x1ac0], esi
add dword[ebp-0x1ac0], esi
mov word[eax], dx
add eax, esi
cmp dword[ebp-0x1ac0], 0x13fe
jb off.b1148
mov esi, eax
lea eax, [ebp-0x1ab8]
sub esi, eax
push 0
lea eax, [ebp-0x1ad8]
push eax
push esi
lea eax, [ebp-0x1ab8]
push eax
mov eax, dword[ebp-0x1adc]
mov eax, dword[eax]
push dword[edi+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je off.b1633
mov eax, dword[ebp-0x1ad8]
add dword[ebp-0x1ac8], eax
cmp eax, esi
jl off.b1645
mov eax, ebx
sub eax, dword[ebp-0x1acc]
cmp eax, dword[ebp+0x10]
jb off.b1124
jmp off.b1645
mov eax, dword[ebp-0x1acc]
mov dword[ebp-0x1ad4], eax
cmp dword[ebp+0x10], ecx
jbe off.b1708
mov ecx, dword[ebp-0x1ad4]
and dword[ebp-0x1ac0], 0
sub ecx, dword[ebp-0x1acc]
push 2
lea eax, [ebp-0x6b8]
pop esi
cmp ecx, dword[ebp+0x10]
jae off.b1427
mov edx, dword[ebp-0x1ad4]
movzx edx, word[edx]
add dword[ebp-0x1ad4], esi
add ecx, esi
cmp edx, 0xa
jne off.b1404
push 0xd
pop ebx
mov word[eax], bx
add eax, esi
add dword[ebp-0x1ac0], esi
add dword[ebp-0x1ac0], esi
mov word[eax], dx
add eax, esi
cmp dword[ebp-0x1ac0], 0x6a8
jb off.b1363
xor esi, esi
push esi
push esi
push 0xd55
lea ecx, [ebp-0x1410]
push ecx
lea ecx, [ebp-0x6b8]
sub eax, ecx
cdq
sub eax, edx
sar eax, 1
push eax
mov eax, ecx
push eax
push esi
push 0xfde9
call dword[sym.imp.KERNEL32.dll_WideCharToMultiByte]
mov ebx, eax
cmp ebx, esi
je off.b1633
push 0
lea eax, [ebp-0x1ad8]
push eax
mov eax, ebx
sub eax, esi
push eax
lea eax, [ebp+esi-0x1410]
push eax
mov eax, dword[ebp-0x1adc]
mov eax, dword[eax]
push dword[edi+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je off.b1537
add esi, dword[ebp-0x1ad8]
cmp ebx, esi
jg off.b1482
jmp off.b1549
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov dword[ebp-0x1abc], eax
cmp ebx, esi
jg off.b1645
mov eax, dword[ebp-0x1ad4]
sub eax, dword[ebp-0x1acc]
mov dword[ebp-0x1ac8], eax
cmp eax, dword[ebp+0x10]
jb off.b1335
jmp off.b1645
push ecx
lea ecx, [ebp-0x1ad8]
push ecx
push dword[ebp+0x10]
push dword[ebp-0x1acc]
push dword[eax+edi]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je off.b1633
mov eax, dword[ebp-0x1ad8]
and dword[ebp-0x1abc], 0
mov dword[ebp-0x1ac8], eax
jmp off.b1645
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov dword[ebp-0x1abc], eax
cmp dword[ebp-0x1ac8], 0
jne off.b1762
cmp dword[ebp-0x1abc], 0
je off.b1708
push 5
pop esi
cmp dword[ebp-0x1abc], esi
jne off.b1694
call fcn.004409c0
mov dword[eax], 9
call fcn.004409d3
mov dword[eax], esi
jmp off.b1757
push dword[ebp-0x1abc]
call fcn.004409e6
pop ecx
jmp off.b1757
mov eax, dword[ebp-0x1adc]
mov eax, dword[eax]
test byte[edi+eax+4], 0x40
je off.b1738
mov eax, dword[ebp-0x1acc]
cmp byte[eax], 0x1a
jne off.b1738
xor eax, eax
jmp off.b1774
call fcn.004409c0
mov dword[eax], 0x1c
call fcn.004409d3
and dword[eax], 0
or eax, 0xffffffff
jmp off.b1774
mov eax, dword[ebp-0x1ac8]
sub eax, dword[ebp-0x1ad0]
pop ebx
mov ecx, dword[ebp-4]
pop edi
xor ecx, ebp
pop esi
call fcn.0043e257
leave
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/418e0921f3a9bd4f5bc0dcc59623b5a1