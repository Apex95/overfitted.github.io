---
layout: post
title:  "fcn.004290be @ de21a548b66aa6c0b17491b6a31e14fa"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.004290be
- **Origin (md5):** de21a548b66aa6c0b17491b6a31e14fa
- **VirusTotal:** [virustotal.com/gui/file/de21a548b66aa6c0b17491b6a31e14fa][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [84.64389038085938, 352.4113464355469, '<b><a href="/report/fcn.004290be@de21a548b66aa6c0b17491b6a31e14fa">fcn.004290be</a><br>@de21a548b66aa6c0b17491b6a31e14fa</b><br>', 'point { fill-color: #e0440e; }'],
[-69.33870697021484, 294.4364013671875, '<b><a href="/report/fcn.004139a7@6c5b0418e4a4c57d99cda47d2717045d">fcn.004139a7</a><br>@6c5b0418e4a4c57d99cda47d2717045d</b><br>', 'null'],
[-42.55500411987305, 456.7767028808594, '<b><a href="/report/fcn.004141ea@6c5b0418e4a4c57d99cda47d2717045d">fcn.004141ea</a><br>@6c5b0418e4a4c57d99cda47d2717045d</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
sub esp, 0x38
push ebx
xor ebx, ebx
test byte[ebp+0x10], 0x80
push esi
push edi
mov esi, eax
mov dword[ebp-0x24], ebx
mov dword[ebp-0x28], ebx
mov byte[ebp-2], bl
mov dword[ebp-0x38], 0xc
mov dword[ebp-0x34], ebx
je off.b47
mov dword[ebp-0x30], ebx
mov byte[ebp-1], 0x10
jmp off.b57
mov dword[ebp-0x30], 1
mov byte[ebp-1], bl
lea eax, [ebp-0x24]
push eax
call fcn.0042e510
test eax, eax
pop ecx
je off.b84
push ebx
push ebx
push ebx
push ebx
push ebx
call fcn.0040e8ca
add esp, 0x14
lea eax, [ebp-0x28]
push eax
call fcn.00419f5b
test eax, eax
pop ecx
je off.b111
push ebx
push ebx
push ebx
push ebx
push ebx
call fcn.0040e8ca
add esp, 0x14
mov ecx, dword[ebp+0x10]
mov eax, 0x8000
test eax, ecx
jne off.b140
test ecx, 0x74000
jne off.b136
cmp dword[ebp-0x24], eax
je off.b140
or byte[ebp-1], 0x80
mov eax, ecx
and eax, 3
sub eax, ebx
mov edx, 0xc0000000
mov edi, 0x80000000
je off.b230
dec eax
je off.b208
dec eax
je off.b203
call fcn.00410ca2
mov dword[eax], ebx
or dword[esi], 0xffffffff
call fcn.00410c8f
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov dword[eax], esi
call fcn.0040e9fe
add esp, 0x14
jmp off.b1689
mov dword[ebp-8], edx
jmp off.b233
test cl, 8
je off.b221
test ecx, 0x70000
jne off.b203
mov dword[ebp-8], 0x40000000
jmp off.b233
mov dword[ebp-8], edi
mov eax, dword[ebp+0x14]
push 0x10
pop ecx
sub eax, ecx
je off.b298
sub eax, ecx
je off.b289
sub eax, ecx
je off.b280
sub eax, ecx
je off.b271
sub eax, 0x40
jne off.b165
cmp dword[ebp-8], edi
sete al
mov dword[ebp-0x10], eax
jmp off.b301
mov dword[ebp-0x10], 3
jmp off.b301
mov dword[ebp-0x10], 2
jmp off.b301
mov dword[ebp-0x10], 1
jmp off.b301
mov dword[ebp-0x10], ebx
mov eax, dword[ebp+0x10]
mov edx, 0x700
and eax, edx
mov ecx, 0x400
cmp eax, ecx
mov edi, 0x100
jg off.b384
je off.b375
cmp eax, ebx
je off.b375
cmp eax, edi
je off.b366
cmp eax, 0x200
je off.b499
cmp eax, 0x300
jne off.b165
mov dword[ebp-0x14], 2
jmp off.b413
mov dword[ebp-0x14], 4
jmp off.b413
mov dword[ebp-0x14], 3
jmp off.b413
cmp eax, 0x500
je off.b406
cmp eax, 0x600
je off.b499
cmp eax, edx
jne off.b165
mov dword[ebp-0x14], 1
mov eax, dword[ebp+0x10]
test edi, eax
mov dword[ebp-0xc], 0x80
je off.b449
mov ecx, dword[0x449ddc]
not ecx
and ecx, dword[ebp+0x18]
test cl, cl
js off.b449
mov dword[ebp-0xc], 1
test al, 0x40
je off.b477
or dword[ebp-0xc], 0x4000000
or dword[ebp-8], 0x10000
cmp dword[ebp-0x28], 2
jne off.b477
or dword[ebp-0x10], 4
test ax, 0x1000
je off.b486
or dword[ebp-0xc], edi
test al, 0x20
je off.b508
or dword[ebp-0xc], 0x8000000
jmp off.b519
mov dword[ebp-0x14], 5
jmp off.b413
test al, 0x10
je off.b519
or dword[ebp-0xc], 0x10000000
call fcn.00428b86
cmp eax, 0xffffffff
mov dword[esi], eax
jne off.b557
call fcn.00410ca2
mov dword[eax], ebx
or dword[esi], 0xffffffff
call fcn.00410c8f
mov dword[eax], 0x18
jmp off.b699
mov eax, dword[ebp+8]
mov edi, dword[sym.imp.KERNEL32.dll_CreateFileW]
push ebx
push dword[ebp-0xc]
mov dword[eax], 1
push dword[ebp-0x14]
lea eax, [ebp-0x38]
push eax
push dword[ebp-0x10]
push dword[ebp-8]
push dword[ebp+0xc]
call edi
cmp eax, 0xffffffff
mov dword[ebp-0x1c], eax
jne off.b711
mov ecx, dword[ebp-8]
mov eax, 0xc0000000
and ecx, eax
cmp ecx, eax
jne off.b659
test byte[ebp+0x10], 1
je off.b659
and dword[ebp-8], 0x7fffffff
push ebx
push dword[ebp-0xc]
lea eax, [ebp-0x38]
push dword[ebp-0x14]
push eax
push dword[ebp-0x10]
push dword[ebp-8]
push dword[ebp+0xc]
call edi
cmp eax, 0xffffffff
mov dword[ebp-0x1c], eax
jne off.b711
mov esi, dword[esi]
mov eax, esi
and esi, 0x1f
imul esi, esi, 0x38
sar eax, 5
mov eax, dword[eax*4+0x44a400]
lea eax, [eax+esi+4]
and byte[eax], 0xfe
call dword[sym.imp.KERNEL32.dll_GetLastError]
push eax
call fcn.00410cb5
pop ecx
call fcn.00410c8f
mov eax, dword[eax]
jmp off.b1877
push dword[ebp-0x1c]
call dword[sym.imp.KERNEL32.dll_GetFileType]
cmp eax, ebx
jne off.b792
mov esi, dword[esi]
mov eax, esi
and esi, 0x1f
imul esi, esi, 0x38
sar eax, 5
mov eax, dword[eax*4+0x44a400]
lea eax, [eax+esi+4]
and byte[eax], 0xfe
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov esi, eax
push esi
call fcn.00410cb5
pop ecx
push dword[ebp-0x1c]
call dword[sym.imp.KERNEL32.dll_CloseHandle]
cmp esi, ebx
jne off.b699
call fcn.00410c8f
mov dword[eax], 0xd
jmp off.b699
cmp eax, 2
jne off.b803
or byte[ebp-1], 0x40
jmp off.b812
cmp eax, 3
jne off.b812
or byte[ebp-1], 8
push dword[ebp-0x1c]
push dword[esi]
call fcn.00428955
mov eax, dword[esi]
mov edx, eax
and eax, 0x1f
imul eax, eax, 0x38
sar edx, 5
mov edx, dword[edx*4+0x44a400]
pop ecx
pop ecx
mov cl, byte[ebp-1]
or cl, 1
mov byte[edx+eax+4], cl
mov eax, dword[esi]
mov edx, eax
and eax, 0x1f
imul eax, eax, 0x38
sar edx, 5
mov edx, dword[edx*4+0x44a400]
lea eax, [edx+eax+0x24]
and byte[eax], 0x80
mov byte[ebp-3], cl
and byte[ebp-3], 0x48
mov byte[ebp-1], cl
jne off.b1026
test cl, 0x80
je off.b1234
test byte[ebp+0x10], 2
je off.b1026
push 2
or edi, 0xffffffff
push edi
push dword[esi]
call fcn.0042e2c0
add esp, 0xc
cmp eax, edi
mov dword[ebp-0x18], eax
jne off.b960
call fcn.00410ca2
cmp dword[eax], 0x83
je off.b1026
push dword[esi]
call fcn.0041699c
jmp off.b698
push 1
lea eax, [ebp-0x2c]
push eax
push dword[esi]
mov dword[ebp-0x2c], ebx
call fcn.0042dc02
add esp, 0xc
test eax, eax
jne off.b1010
cmp word[ebp-0x2c], 0x1a
jne off.b1010
mov eax, dword[ebp-0x18]
cdq
push edx
push eax
push dword[esi]
call fcn.0042d949
add esp, 0xc
cmp eax, edi
je off.b948
push ebx
push ebx
push dword[esi]
call fcn.0042e2c0
add esp, 0xc
cmp eax, edi
je off.b948
test byte[ebp-1], 0x80
je off.b1234
mov ecx, 0x74000
test dword[ebp+0x10], ecx
mov edi, 0x4000
jne off.b1066
mov eax, dword[ebp-0x24]
and eax, ecx
jne off.b1063
or dword[ebp+0x10], edi
jmp off.b1066
or dword[ebp+0x10], eax
mov eax, dword[ebp+0x10]
and eax, ecx
cmp eax, edi
je off.b1143
cmp eax, 0x10000
je off.b1123
cmp eax, 0x14000
je off.b1123
cmp eax, 0x20000
je off.b1137
cmp eax, 0x24000
je off.b1137
cmp eax, 0x40000
je off.b1117
cmp eax, 0x44000
jne off.b1146
mov byte[ebp-2], 1
jmp off.b1146
mov ecx, dword[ebp+0x10]
mov eax, 0x301
and ecx, eax
cmp ecx, eax
jne off.b1146
mov byte[ebp-2], 2
jmp off.b1146
mov byte[ebp-2], bl
test dword[ebp+0x10], 0x70000
je off.b1234
test byte[ebp-1], 0x40
mov dword[ebp-0x18], ebx
jne off.b1234
mov eax, dword[ebp-8]
mov ecx, 0xc0000000
and eax, ecx
cmp eax, 0x40000000
je off.b1580
cmp eax, 0x80000000
je off.b1523
cmp eax, ecx
jne off.b1234
mov eax, dword[ebp-0x14]
cmp eax, ebx
jbe off.b1234
cmp eax, 2
jbe off.b1748
cmp eax, 4
jbe off.b1477
cmp eax, 5
je off.b1748
mov eax, dword[esi]
mov ecx, eax
and eax, 0x1f
imul eax, eax, 0x38
sar ecx, 5
mov ecx, dword[ecx*4+0x44a400]
lea eax, [ecx+eax+0x24]
mov cl, byte[eax]
xor cl, byte[ebp-2]
and cl, 0x7f
xor byte[eax], cl
mov eax, dword[esi]
mov ecx, eax
and eax, 0x1f
imul eax, eax, 0x38
sar ecx, 5
mov ecx, dword[ecx*4+0x44a400]
lea eax, [ecx+eax+0x24]
mov ecx, dword[ebp+0x10]
mov dl, byte[eax]
shr ecx, 0x10
shl cl, 7
and dl, 0x7f
or cl, dl
cmp byte[ebp-3], bl
mov byte[eax], cl
jne off.b1348
test byte[ebp+0x10], 8
je off.b1348
mov eax, dword[esi]
mov ecx, eax
and eax, 0x1f
imul eax, eax, 0x38
sar ecx, 5
mov ecx, dword[ecx*4+0x44a400]
lea eax, [ecx+eax+4]
or byte[eax], 0x20
mov edi, dword[ebp-8]
mov eax, 0xc0000000
mov ecx, edi
and ecx, eax
cmp ecx, eax
jne off.b1875
test byte[ebp+0x10], 1
je off.b1875
push dword[ebp-0x1c]
call dword[sym.imp.KERNEL32.dll_CloseHandle]
push ebx
push dword[ebp-0xc]
lea eax, [ebp-0x38]
push 3
push eax
push dword[ebp-0x10]
and edi, 0x7fffffff
push edi
push dword[ebp+0xc]
call dword[sym.imp.KERNEL32.dll_CreateFileW]
cmp eax, 0xffffffff
jne off.b1852
call dword[sym.imp.KERNEL32.dll_GetLastError]
push eax
call fcn.00410cb5
mov eax, dword[esi]
mov ecx, eax
and eax, 0x1f
imul eax, eax, 0x38
sar ecx, 5
mov ecx, dword[ecx*4+0x44a400]
lea eax, [ecx+eax+4]
and byte[eax], 0xfe
push dword[esi]
call fcn.004289d2
pop ecx
jmp off.b698
push 2
push ebx
push ebx
push dword[esi]
call fcn.00426b3b
add esp, 0x10
or eax, edx
je off.b1748
push ebx
push ebx
push ebx
push dword[esi]
call fcn.00426b3b
and eax, edx
add esp, 0x10
cmp eax, 0xffffffff
je off.b948
push 3
lea eax, [ebp-0x18]
push eax
push dword[esi]
call fcn.0042dc02
add esp, 0xc
cmp eax, 0xffffffff
je off.b948
cmp eax, 2
je off.b1656
cmp eax, 3
jne off.b1734
cmp dword[ebp-0x18], 0xbfbbef
jne off.b1656
mov byte[ebp-2], 1
jmp off.b1234
mov eax, dword[ebp-0x14]
cmp eax, ebx
jbe off.b1234
cmp eax, 2
jbe off.b1748
cmp eax, 4
ja off.b1225
push 2
push ebx
push ebx
push dword[esi]
call fcn.00426b3b
add esp, 0x10
or eax, edx
je off.b1748
push ebx
push ebx
push ebx
push dword[esi]
call fcn.00426b3b
add esp, 0x10
and eax, edx
cmp eax, 0xffffffff
jne off.b1234
jmp off.b948
mov eax, dword[ebp-0x18]
and eax, 0xffff
cmp eax, 0xfffe
jne off.b1696
push dword[esi]
call fcn.0041699c
pop ecx
call fcn.00410c8f
push 0x16
pop esi
mov dword[eax], esi
mov eax, esi
jmp off.b1877
cmp eax, 0xfeff
jne off.b1734
push ebx
push 2
push dword[esi]
call fcn.0042e2c0
add esp, 0xc
cmp eax, 0xffffffff
je off.b948
mov byte[ebp-2], 2
jmp off.b1234
push ebx
push ebx
push dword[esi]
call fcn.0042e2c0
add esp, 0xc
jmp off.b1642
movsx eax, byte[ebp-2]
xor edi, edi
dec eax
je off.b1780
dec eax
jne off.b1234
mov dword[ebp-0x18], 0xfeff
mov dword[ebp-0x14], 2
jmp off.b1794
mov dword[ebp-0x18], 0xbfbbef
mov dword[ebp-0x14], 3
mov eax, dword[ebp-0x14]
sub eax, edi
push eax
lea eax, [ebp+edi-0x18]
push eax
push dword[esi]
call fcn.004172f6
add esp, 0xc
cmp eax, 0xffffffff
je off.b1832
add edi, eax
cmp dword[ebp-0x14], edi
jg off.b1794
jmp off.b1234
push dword[esi]
call fcn.0041699c
pop ecx
call fcn.00410c8f
mov eax, dword[eax]
mov dword[ebp-0x20], eax
jmp off.b1877
mov esi, dword[esi]
mov ecx, esi
sar ecx, 5
mov ecx, dword[ecx*4+0x44a400]
and esi, 0x1f
imul esi, esi, 0x38
mov dword[esi+ecx], eax
mov eax, ebx
pop edi
pop esi
pop ebx
leave
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/de21a548b66aa6c0b17491b6a31e14fa