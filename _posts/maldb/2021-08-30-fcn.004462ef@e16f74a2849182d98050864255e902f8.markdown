---
layout: post
title:  "fcn.004462ef @ e16f74a2849182d98050864255e902f8"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.004462ef
- **Origin (md5):** e16f74a2849182d98050864255e902f8
- **VirusTotal:** [virustotal.com/gui/file/e16f74a2849182d98050864255e902f8][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.004462ef@e16f74a2849182d98050864255e902f8">fcn.004462ef</a><br>@e16f74a2849182d98050864255e902f8</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push 0xbc
mov eax, 0x451f0a
call fcn.0044cc59
mov dword[ebp-0xc8], ebx
mov dword[ebx], 0x46fec0
call fcn.0043c8c0
mov dword[ebx+4], eax
mov eax, dword[ebp+8]
xor edi, edi
mov dword[ebx+8], eax
mov dword[ebx+0xc], edi
mov dword[ebx+0x10], edi
mov dword[ebx+0x14], edi
mov dword[ebp-4], edi
lea esi, [ebx+0x1c]
call fcn.0043b5b1
push esi
call dword[eax+0x24]
or dword[esi+0x18], 0xffffffff
mov byte[ebp-4], 1
push 0x20
mov dword[ebx+0x38], edi
mov dword[ebx+0x3c], edi
call fcn.004124f7
pop ecx
mov dword[ebp-0xb8], eax
mov byte[ebp-4], 2
cmp eax, edi
je off.b116
mov edi, ebx
mov esi, eax
call fcn.00434b80
xor edi, edi
jmp off.b118
xor eax, eax
mov byte[ebp-4], 1
mov dword[ebp-0xc4], eax
lea eax, [ebp-0xc4]
lea esi, [ebx+0xc]
call fcn.0040a482
push 0x20
call fcn.004124f7
pop ecx
mov dword[ebp-0xb8], eax
mov byte[ebp-4], 3
cmp eax, edi
je off.b177
mov edi, ebx
mov esi, eax
call fcn.00434b80
xor edi, edi
jmp off.b179
xor eax, eax
mov byte[ebp-4], 1
mov dword[ebp-0xb8], eax
lea eax, [ebp-0xb8]
lea esi, [ebx+0xc]
call fcn.0040a482
mov ecx, dword[ebp+8]
call fcn.00435f8a
test al, al
jne off.b655
mov dword[ebp-0xa4], 6
mov eax, dword[ebp-0xa4]
mov ecx, dword[ebp-0xa4]
imul eax, ecx
mov ecx, dword[ebp-0xa4]
imul eax, eax, 0x37
imul ecx, ecx, 0x48
add eax, ecx
add eax, dword[ebp-0xa4]
mov dword[ebp-0xa4], eax
mov eax, dword[ebp-0xa4]
mov dword[ebp-0xa4], eax
mov eax, dword[ebp-0xa4]
add eax, dword[ebp-0xa4]
mov dword[ebp-0xa4], eax
mov eax, dword[ebx+8]
add eax, 0x120
call fcn.00436458
mov eax, dword[ebx+8]
cmp dword[eax+0xa8], edi
je off.b356
cmp dword[eax+0xac], 8
jb off.b341
mov esi, dword[eax+0x98]
jmp off.b347
lea esi, [eax+0x98]
call fcn.0043b5b1
push esi
call dword[eax+0x44]
mov dword[ebp-0x9c], 0x48
mov eax, dword[ebp-0x9c]
shl eax, 6
cdq
push 0x28
pop ecx
idiv ecx
mov ecx, dword[ebp-0x9c]
push 0xffffffffffffff9f
sub eax, ecx
mov ecx, dword[ebp-0x9c]
lea eax, [eax+ecx-0x51]
add eax, dword[ebp-0x9c]
add eax, dword[ebp-0x9c]
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0x9c]
mov ecx, dword[ebp-0x9c]
sub eax, ecx
add eax, dword[ebp-0x9c]
mov dword[ebp-0x9c], eax
add dword[ebp-0x9c], 0x54
mov eax, dword[ebp-0x9c]
mov ecx, dword[ebp-0x9c]
imul eax, ecx
pop ecx
sub ecx, eax
mov eax, dword[ebp-0x9c]
sub ecx, eax
add ecx, dword[ebp-0x9c]
push 0xffffffffffffffb8
mov dword[ebp-0x9c], ecx
add dword[ebp-0x9c], 0xfffffffe
mov eax, dword[ebp-0x9c]
mov ecx, dword[ebp-0x9c]
imul eax, ecx
mov ecx, dword[ebp-0x9c]
imul eax, eax, 0x18
imul ecx, ecx, 0x56
sub eax, ecx
add eax, dword[ebp-0x9c]
pop ecx
add eax, dword[ebp-0x9c]
push 0x38
add eax, dword[ebp-0x9c]
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0x9c]
sub ecx, eax
add ecx, dword[ebp-0x9c]
add ecx, dword[ebp-0x9c]
mov dword[ebp-0x9c], ecx
mov eax, dword[ebp-0x9c]
cdq
pop ecx
idiv ecx
mov ecx, dword[ebp-0x9c]
imul ecx, ecx, 0xffffffd4
sub ecx, eax
mov eax, dword[ebp-0x9c]
shl eax, 5
add ecx, eax
mov eax, dword[ebp-0x9c]
sub ecx, eax
add ecx, dword[ebp-0x9c]
add ecx, dword[ebp-0x9c]
mov eax, dword[ebx+8]
cmp byte[eax+0xc0], 0
mov dword[ebp-0x9c], ecx
jne off.b1873
mov eax, dword[ebx+8]
cmp dword[eax+0xa8], edi
je off.b1873
lea eax, [ebx+0x1c]
mov dword[ebp-0xb4], eax
call fcn.0043b5b1
push dword[ebp-0xb4]
call dword[eax+0x28]
mov byte[ebp-4], 4
push 0x4e
pop esi
mov dword[ebp-0x9c], esi
mov dword[ebp-0xa4], 0xd
add dword[ebp-0x9c], 0xffffffcb
mov eax, dword[ebp-0xa4]
add eax, dword[ebp-0x9c]
push 6
mov dword[ebp-0xa4], eax
mov eax, dword[ebp-0xa4]
mov ecx, dword[ebp-0x9c]
sub eax, ecx
mov dword[ebp-0xa4], eax
mov eax, dword[ebp-0xa4]
cdq
pop ecx
idiv ecx
mov ecx, dword[ebp-0x9c]
imul eax, ecx
mov ecx, dword[ebp-0xa4]
mov edx, dword[ebp-0x9c]
imul ecx, edx
imul ecx, ecx, 0x14
add eax, ecx
mov ecx, dword[ebp-0xa4]
sub eax, ecx
mov ecx, dword[ebp-0x9c]
sub eax, ecx
mov ecx, dword[ebp-0xa4]
lea eax, [eax+ecx+0x25]
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0xa4]
mov ecx, dword[ebp-0x9c]
add eax, eax
sub eax, ecx
mov ecx, dword[ebp-0xa4]
sub eax, ecx
add eax, dword[ebp-0x9c]
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0xa4]
add eax, dword[ebp-0x9c]
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0xa4]
add eax, dword[ebp-0x9c]
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0xa4]
push dword[0x477654]
imul eax, eax, 0x52
mov dword[ebp-0xa4], eax
lea eax, [ebp-0x2c]
call fcn.004045d8
mov byte[ebp-4], 5
fld qword[0x4708c8]
fstp qword[ebp-0xb0]
fld qword[0x470930]
fstp qword[ebp-0xb0]
fld qword[0x470928]
fstp qword[ebp-0xb0]
fld qword[0x470960]
fstp qword[ebp-0xb0]
fld qword[ebp-0xb0]
mov eax, dword[ebx+8]
fsub qword[0x470920]
add eax, 0x98
cmp dword[eax+0x14], 8
fstp qword[ebp-0xb0]
jb off.b1021
mov eax, dword[eax]
push edi
push 0x80
push 4
push edi
push edi
push 0xc0000000
push eax
call dword[sym.imp.KERNEL32.dll_CreateFileW]
mov edi, dword[ebp-0xb4]
mov dword[edi+0x18], eax
mov dword[ebp-0x9c], esi
mov dword[ebp-0xa4], 0xd
add dword[ebp-0x9c], 0xffffffcb
mov eax, dword[ebp-0xa4]
add eax, dword[ebp-0x9c]
push 6
mov dword[ebp-0xa4], eax
mov eax, dword[ebp-0xa4]
mov ecx, dword[ebp-0x9c]
sub eax, ecx
mov dword[ebp-0xa4], eax
mov eax, dword[ebp-0xa4]
cdq
pop ecx
idiv ecx
mov ecx, dword[ebp-0x9c]
imul eax, ecx
mov ecx, dword[ebp-0xa4]
mov edx, dword[ebp-0x9c]
imul ecx, edx
imul ecx, ecx, 0x14
add eax, ecx
mov ecx, dword[ebp-0xa4]
sub eax, ecx
mov ecx, dword[ebp-0x9c]
sub eax, ecx
mov ecx, dword[ebp-0xa4]
lea eax, [eax+ecx+0x25]
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0xa4]
mov ecx, dword[ebp-0x9c]
add eax, eax
sub eax, ecx
mov ecx, dword[ebp-0xa4]
sub eax, ecx
add eax, dword[ebp-0x9c]
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0xa4]
add eax, dword[ebp-0x9c]
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0xa4]
add eax, dword[ebp-0x9c]
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0xa4]
imul eax, eax, 0x52
cmp dword[edi+0x18], 0xffffffff
mov dword[ebp-0xa4], eax
setne al
test al, al
je off.b1883
mov eax, dword[0x477758]
push eax
mov esi, eax
call fcn.00412ec0
pop ecx
mov ecx, esi
lea esi, [ebp-0x2c]
call fcn.0040456f
fldz
mov dword[ebp-0x9c], 0x4e
mov dword[ebp-0xa4], 0xd
add dword[ebp-0x9c], 0xffffffcb
mov eax, dword[ebp-0xa4]
add eax, dword[ebp-0x9c]
push 6
mov dword[ebp-0xa4], eax
mov eax, dword[ebp-0xa4]
mov ecx, dword[ebp-0x9c]
sub eax, ecx
mov dword[ebp-0xa4], eax
mov eax, dword[ebp-0xa4]
cdq
pop ecx
idiv ecx
mov ecx, dword[ebp-0x9c]
imul eax, ecx
mov ecx, dword[ebp-0xa4]
mov edx, dword[ebp-0x9c]
imul ecx, edx
imul ecx, ecx, 0x14
add eax, ecx
mov ecx, dword[ebp-0xa4]
sub eax, ecx
mov ecx, dword[ebp-0x9c]
sub eax, ecx
mov ecx, dword[ebp-0xa4]
lea eax, [eax+ecx+0x25]
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0xa4]
mov ecx, dword[ebp-0x9c]
add eax, eax
sub eax, ecx
mov ecx, dword[ebp-0xa4]
sub eax, ecx
add eax, dword[ebp-0x9c]
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0xa4]
add eax, dword[ebp-0x9c]
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0xa4]
add eax, dword[ebp-0x9c]
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0xa4]
imul eax, eax, 0x52
mov dword[ebp-0xa4], eax
fst qword[ebp-0xa8]
fld qword[0x4708e0]
fstp qword[ebp-0xb0]
fld qword[0x4708d8]
fst qword[ebp-0xa0]
fld qword[0x4708d0]
fstp qword[ebp-0xc0]
fld qword[0x4708c8]
fstp qword[ebp-0xc0]
fld qword[0x4708c0]
fst qword[ebp-0xc0]
fld qword[ebp-0xa8]
fcomp qword[ebp-0xc0]
fnstsw ax
test ah, 0x41
jp off.b1760
fld qword[ebp-0xc0]
fld qword[ebp-0xb0]
fmul qword[0x4708b8]
fsubp st(1)
fsub qword[ebp-0xa8]
fld qword[ebp-0xa0]
fmul qword[ebp-0xa8]
fmulp st(2)
fsubrp st(1)
fadd qword[ebp-0xa8]
fsub qword[0x4708b0]
fstp qword[ebp-0xa0]
fld qword[ebp-0xa0]
fsubrp st(2)
fld qword[ebp-0xb0]
faddp st(2)
fld qword[ebp-0xc0]
faddp st(2)
fmul qword[ebp-0xa0]
fmul qword[0x4708a8]
fdiv qword[0x4708f0]
fsubp st(1)
fld qword[ebp-0xa0]
fmul qword[0x4708a0]
faddp st(1)
fsub qword[ebp-0xa8]
fstp qword[ebp-0xa8]
jmp off.b1766
fstp st(2)
fstp st(0)
fstp st(0)
mov edi, dword[edi+0x18]
lea eax, [ebp-0x7c]
push eax
push edi
call dword[sym.imp.KERNEL32.dll_GetFileInformationByHandle]
test eax, eax
setne al
test al, al
je off.b1883
mov eax, dword[ebx+8]
mov ecx, dword[ebp-0x64]
cmp ecx, dword[eax+0x148]
jne off.b1836
mov ecx, dword[ebp-0x68]
cmp ecx, dword[eax+0x14c]
jne off.b1836
mov ecx, dword[ebp-0x5c]
cmp ecx, dword[eax+0x150]
jne off.b1836
mov ecx, dword[ebp-0x58]
cmp ecx, dword[eax+0x154]
je off.b1843
mov ecx, ebx
call fcn.0044544e
push 1
xor edi, edi
lea esi, [ebp-0x2c]
call fcn.00404af1
mov byte[ebp-4], 1
call fcn.0043b5b1
push dword[ebp-0xb4]
call dword[eax+0x2c]
mov eax, ebx
call fcn.0044ccdc
ret 4
call fcn.0043b5b1
call dword[eax+0x48]
test eax, eax
jle off.b1905
and eax, 0xffff
or eax, 0x80070000
mov ecx, dword[ebx+8]
fld qword[0x4708c8]
mov dword[ecx+0x15c], eax
fstp qword[ebp-0xb0]
fld qword[0x470930]
fstp qword[ebp-0xb0]
fld qword[0x470928]
fstp qword[ebp-0xb0]
fld qword[0x470960]
fstp qword[ebp-0xb0]
fld qword[ebp-0xb0]
mov ecx, dword[ebx+8]
fsub qword[0x470920]
lea eax, [ecx+0x98]
cmp dword[eax+0x14], 8
fstp qword[ebp-0xb0]
jb off.b1997
mov eax, dword[eax]
test eax, eax
je off.b2017
lea eax, [ecx+0x98]
cmp dword[eax+0x14], 8
jb off.b2022
mov eax, dword[eax]
jmp off.b2022
mov eax, dword[0x4778b0]
push eax
lea eax, [ebp-0x48]
call fcn.00404f5c
lea eax, [ebp-0x48]
push eax
mov ecx, 0xfde9
lea edx, [ebp-0x98]
mov byte[ebp-4], 6
call fcn.00447e00
pop ecx
mov byte[ebp-4], 7
cmp dword[eax+0x14], 0x10
jb off.b2070
mov edx, dword[eax]
jmp off.b2072
mov edx, eax
cmp dword[ebp-0x18], 0x10
mov ecx, dword[ebp-0x2c]
jae off.b2084
lea ecx, [ebp-0x2c]
mov eax, dword[ebx+8]
push edx
push dword[eax+0x15c]
mov eax, dword[eax+0xb8]
push ecx
push dword[0x4775c0]
or eax, 1
push eax
call fcn.0043b050
add esp, 0x14
push 1
xor edi, edi
lea esi, [ebp-0x98]
call fcn.00404af1
push 1
lea esi, [ebp-0x48]
call fcn.00404e35
mov dword[ebp-0xa4], 6
mov eax, dword[ebp-0xa4]
mov ecx, dword[ebp-0xa4]
imul eax, ecx
mov ecx, dword[ebp-0xa4]
imul eax, eax, 0x37
imul ecx, ecx, 0x48
add eax, ecx
add eax, dword[ebp-0xa4]
mov dword[ebp-0xa4], eax
mov eax, dword[ebp-0xa4]
mov dword[ebp-0xa4], eax
mov eax, dword[ebp-0xa4]
add eax, dword[ebp-0xa4]
mov dword[ebp-0xa4], eax
jmp off.b1843

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/e16f74a2849182d98050864255e902f8