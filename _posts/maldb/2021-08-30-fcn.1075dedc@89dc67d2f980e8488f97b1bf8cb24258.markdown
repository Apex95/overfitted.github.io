---
layout: post
title:  "fcn.1075dedc @ 89dc67d2f980e8488f97b1bf8cb24258"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.1075dedc
- **Origin (md5):** 89dc67d2f980e8488f97b1bf8cb24258
- **VirusTotal:** [virustotal.com/gui/file/89dc67d2f980e8488f97b1bf8cb24258][virustotal_ref]

# Code Tags
<span class="tag" id="MEMORY">MEMORY</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-393.2454528808594, 428.8645935058594, '<b><a href="/report/fcn.1075dedc@89dc67d2f980e8488f97b1bf8cb24258">fcn.1075dedc</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>sahf <br>nop <br>imul edx, ebp, 0x83d2445f<br>sbb byte[edx+0xa5], al<br>add byte[esi+0x68], dh<br>adc edi, dword[edx-0x57]<br>pop ebp<br>push ecx<br>push edx<br>push ebx<br>push eax<br>call fcn.1073bace<br>loope 0x1073dd9a<br>pop ebx<br>fild dword[esp+0x14]<br>jmp 0x1078441e<br>xor eax, eax<br>push esi<br>mov esi, dword[esp+4]<br>push edi<br>push esi<br>push ecx<br>push 0x6f8b11b4<br>push ecx<br>call fcn.107371f3<br>jne 0x1073ddc3<br>pop eax<br>mov ebx, dword[esp+0x18]<br>lea esp, [esp+0x1c]<br>push esi<br>mov esi, ebx<br>mov ecx, 0x2fda63e0<br>mov ecx, esi<br>pop esi<br>call fcn.100d3780<br>call int.1074ed56<br>jle 0x1073dd1f<br>and al, 4<br>push ebx<br>push eax<br>push esi<br>pushfd <br>jmp 0x1073e27a<br>fadd qword[eax+eax]<br>add cl, ch<br>adc byte[eax+esi*8+0x10a710ba], bl<br>out dx, al<br>mov edx, 0xf09c1024<br>mov edx, 0xf14ec817<br>mov edx, 0x42340210<br>rol byte[esp+esi*4-0x6c], cl<br>imul edx, dword[eax], 0x35baf09c<br>push esp<br>sub bh, ch<br>mov edx, 0x1f4ba204<br>ret 0xee66<br>push ebp<br>push edi<br>jmp fcn.10767749<br>movsb byte<br>and eax, 0x16efddff<br>bound ebp, qword[edi-0x1b]<br>xchg esi, eax<br>mov ecx, 0x82f5d242<br>xchg ebx, eax<br>imul ebx, dword[esi-0x341a8e31], 0xabdfaaf<br>aam 0xe1<br>xchg edx, eax<br>lcall 0xacbd, 0xd2ccdc0a<br>aaa <br>xchg edi, eax<br>movsb byte<br>jge 0x1075dea0<br>pop edx<br>int 0x9b<br>out dx, eax<br>out 0xec, al<br>rcl esi, 1<br>inc ebx<br>jge 0x1075de21<br>rol byte[ebx+eax*2-0x6b15622e], 1<br>imul ebx, dword[eax+0x71], 0xc4f5d241<br>jl 0x1075de31<br>mov al, byte[0xfea496d3]<br>mov al, byte[0x655d152]<br>shr ebp, 0xba<br>or ah, byte[ebp+edx*8-0x12617bf8]<br>mov al, 0xef<br>cdq <br>xchg esi, eax<br>movsb byte<br>dec eax<br>pop esi<br>mov esp, ebx<br>mov esp, 0xef3caf31<br>std <br>cdq <br>mov ah, bl<br>mov cl, 0x98<br>or al, 0xb7<br>fsub st(5), st(0)<br>div dword[edx+0x892]<br>add byte[eax], al<br>add byte[ecx+0x59], dh<br>pop ecx<br>lea eax, [eax-0xbbe3aca]<br>mov eax, dword[eax]<br>xchg dword[esp], eax<br>call dword[sym.imp.KERNEL32.dll_HeapFree]<br>jmp 0x1073dd51<br>lea esp, [esp+4]<br>push edx<br>push ebx<br>push eax<br>call fcn.10796eea<br>jp 0x1075de77<br>and al, 4<br>mov ecx, 0x2aed31f8<br>lea ecx, [ecx-0x1ded41e8]<br>mov edx, 0x40be6dc2<br>lea edx, [edx-0x3fc292ab]<br>add dword[eax+ecx], edx<br>pop edx<br>pop ecx<br>push ecx<br>push edx<br>mov ecx, 0x6ca5a818<br>lea ecx, [ecx-0x6940c92c]<br>mov edx, 0x2ebc8430<br>lea edx, [edx-0x1bd62246]<br>add dword[eax+ecx], edx<br>pop edx<br>pop ecx<br>push ecx<br>push edx<br>mov ecx, 0x301300ca<br>lea ecx, [ecx-0x11cd7616]<br>push ebx<br>call 0x1075df3e<br>jg 0x1075df9a<br>lea ebx, [ebx+0x371e0]<br>jmp ebx<br>out dx, eax<br>push ss<br>bound ebp, qword[edi-0x1b]<br>pop ds<br>dec esp<br>inc edx<br>shr byte[ecx+0x79], cl<br>xchg ebx, eax<br>imul ebp, dword[edx-0x4d], 0x1d3fe572<br><eoc> ', 'point { fill-color: #e0440e; }'],
[-79.3433609008789, 159.52784729003906, '<b><a href="/report/fcn.1077081c@89dc67d2f980e8488f97b1bf8cb24258">fcn.1077081c</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>mov ebp, 0x94fe011f<br>lcall 0x1fbe, 0x1be8511f<br>mov dh, dh<br>push ecx<br>shr dword[esi-0x656be623], 1<br>pop ds<br>mov cl, 0x24<br>cli <br>mov ebp, 0xd061861f<br>shl dword[ebp-0x4f966f7c], 1<br>xlatb <br>inc ebp<br>shr byte[ebx+ebx*4-0x284f5a85], cl<br>inc ebp<br>sar byte[edi+5], cl<br>xchg ebx, eax<br>imul ebx, dword[eax+0x71], 0x5f0ed241<br>jne 0x107707aa<br>lea esp, [esp+4]<br>and al, 4<br>push eax<br>mov eax, 0x74f54d0b<br>lea eax, [eax-0x64df434f]<br>xchg dword[esp], eax<br>lea esp, [esp-4]<br>xchg dword[esp], eax<br>mov eax, dword[esp]<br>call dword[sym.imp.KERNEL32.dll_GetProcAddress]<br>push eax<br>pop esi<br>push edx<br>push esi<br>pop edx<br>cmp edx, ebx<br>call fcn.10777054<br>ja 0x107708a6<br>imul ebp, ebp, 0xffffffba<br>sbb eax, dword[0x34bdfd76]<br>push ebp<br>imul ebp, ebp, 0xffffffba<br>sbb esi, dword[eax+0x39]<br>stc <br>mov ebp, 0xeff07434<br>mov edx, 0xf8d3e31b<br>mov ebp, 0xed49e434<br>mov edx, 0x8701671b<br>mov ebp, 0x4384d034<br>rcl byte[edx+0x2e], cl<br>xchg ebx, eax<br>imul ecx, esi, 0x62d2426c<br>jle 0x1077082d<br>add byte[eax], al<br>add byte[eax], al<br>jg 0x1077081b<br>and al, 4<br>push esi<br>in al, 0x6d<br>mov word[edi-0x5b72dbfc], es<br>and al, 0xfa<br><eoc> ', 'null'],
[-3.0397837162017822, 566.0457153320312, '<b><a href="/report/fcn.10a5987f@89dc67d2f980e8488f97b1bf8cb24258">fcn.10a5987f</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>ror byte[eax+eax*8+0x547b6963], cl<br>mov dword[0x2356e1e5], eax<br>mov ebx, 0xc900b31a<br>movsb byte<br>in al, 0xed<br>xchg al, dh<br>aam 0x8c<br>lahf <br>in eax, 0x93<br>jns 0x10a5990f<br>rcr byte[edx+0x1b6963d0], cl<br>fild word[edx]<br>in eax, 0xf6<br>popal <br>jecxz 0x10a59898<br>cmp dword[esi+0x2c], ebx<br>mov esi, 0xa5f0d71a<br>test byte[ecx], dh<br>in al, 0x87<br>sal dword[ebp-0x457df8af], 1<br>sbb al, byte[ebp+0xb]<br>cmp ebx, esp<br>std <br>mov ebp, 0xede4a4ce<br>xchg al, dh<br>aam 0x8c<br>lahf <br>in eax, 0x93<br>jns 0x10a59942<br>rcl byte[ebx-0x38], cl<br>arpl word[ecx+0x3a], bp<br>and al, 0xa4<br>in eax, 0xd4<br>fsubr qword[esi+edi*4]<br>aam 0xdc<br>sub al, 0xbe<br>sbb al, 0xba<br>rol ecx, 1<br>lcall 0x7ad5, 0x69dc1f1c<br>lea ecx, [ebx-0x42]<br>sbb al, 0xcd<br>add eax, 0x479d184<br>inc edx<br>lds ebx, [edx+0x2a4f6f1c]<br>mov esi, 0x73af8e1c<br>ror byte[edi-0x3395ff43], cl<br>stosd dword<br>jns 0x10a598d8<br>js 0x10a59908<br>sbb esp, dword[ebp-0x2d865434]<br>imul edi<br>out dx, eax<br>bound ebp, qword[ecx+0x37]<br>jbe 0x10a59988<br>sar dh, cl<br>and al, 0x17<br>movsd dword<br>rol dword[ecx], 1<br>in al, dx<br>fadd st(3), st(0)<br>dec esi<br>call fcn.10a5a1df<br>add byte[eax], al<br>add byte[ebx+0x53], bh<br>xchg edx, eax<br>or byte[eax], al<br>add byte[eax], al<br>add byte[eax], al<br>jnp 0x10a599a5<br>lea esi, [ebp-0x30]<br>mov dword[ebp-0x14], edi<br>call fcn.100038eb<br>mov edi, dword[eax+0x14]<br>push 4<br>push eax<br>mov eax, 0x4efb96ee<br>lea eax, [eax-0x4efb66ee]<br>xchg dword[esp], eax<br>inc edi<br>jmp 0x10a921bf<br>mov dword[esp+8], ecx<br>pop ecx<br>pop dword[esp+8]<br>push edx<br>mov edx, dword[esp]<br>push edx<br>mov dword[esp+4], 0x38a7bea6<br>push eax<br>mov eax, dword[esp+0xc]<br>mov dword[esp], eax<br>pop eax<br>pop edx<br>cmpsd dword[esi], dword<br>cmp byte[eax-0x75], dl<br>test byte[esp+ecx], ah<br>add byte[eax], al<br>add byte[ecx+0x5a582404], cl<br>pushfd <br>lea esp, [esp+0xc]<br>push ebx<br>mov ebx, dword[esp]<br>pushfd <br>call 0x10a599c7<br>jns 0x10a59949<br>add al, 0x24<br>hlt <br>push edi<br>push 0<br>push eax<br>call fcn.10109950<br>add esp, 0xc<br>push ebx<br>push ebx<br>call 0x10a81741<br>js 0x10a8179d<br>lea ebx, [ebx-0x1a43]<br>jmp ebx<br>pop ds<br>mov ebx, 0x73d8dc1c<br>sal byte[ecx+ecx*2+0x61], cl<br>imul edx, dword[edx+0x36efe618], 0x16f08447<br>pop ss<br>mov esi, 0x20240308<br>mov ebx, 0x6a736e08<br>cli <br>out 0x76, eax<br>out 0xea, eax<br>add edi, esi<br>sub al, 0xbe<br>and ch, bl<br>imul ebp, ebp, 0x76e722f0<br>out 0xea, eax<br>push ss<br>pop ss<br>mov esi, 0x251a431f<br>mov ebx, 0x78b2691c<br>sal byte[esi], cl<br>dec ecx<br>popal <br>imul edx, dword[edx+0x36efe618], 0xd8f08447<br>into <br>sub eax, 0xee4d22be<br>and bh, byte[ebx+0x2356e11f]<br>mov ebx, 0xcebdfd22<br>movsb byte<br>jae 0x10a8184b<br>xor eax, 0x47<br>pop es<br>cmpsd dword[esi], dword<br>in eax, 0x75<br>sub al, 0xac<br>retf 0xc871<br>in eax, 0x2d<br>sar dword[ecx-0x2e], 0xef<br>push eax<br>popal <br>imul ebx, dword[edi+0x14], 0x61f6e5a6<br>jecxz 0x10a81843<br>cmp dword[0x8b37be2f], edi<br>cwde <br>mov dword[0x879bf384], eax<br>rol dword[edi], 1<br>mov dh, 5<br>cmp byte[edx+0x3b0b4537], 0xdc<br>mov bl, 0<br>leave <br>movsb byte<br>dec edx<br>cmpsb byte[esi], byte<br>xor al, 0x71<br>and byte[ebp+0x737993e5], 0xd2<br>test al, 0x48<br>popal <br>imul esp, dword[0xd4e5a3c7], 0x1bbe2cdc<br>xor eax, 0x1b9ac2ad<br>push es<br>pop es<br>lodsb al, byte[esi]<br>mov ebp, 0x86a9ef1b<br>rcl edx, 1<br>add al, 0x42<br>lds ebx, [edx+0x30430c1b]<br>mov esi, 0x79abcc1b<br>rol byte[eax+0x2b6961a1], cl<br>mov dword[0x3893d279], eax<br>sbb byte[ebp-0x2e29c907], ah<br>sub ch, bh<br>popal <br>imul edx, dword[eax-0x252d84d8], 0x86a51733<br>pop edx<br>enter 0x31a4, 0xffffffffffffffe4<br>xchg ecx, edx<br>and byte[0x1bbb22fb], bl<br>push eax<br>hlt <br>push edi<br>push 0<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>mov dword[ebp-0x10], eax<br>test eax, eax<br>je fcn.10a77406<br>jmp 0x10a8172d<br><eoc> ', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

sahf
nop
imul edx, ebp, 0x83d2445f
sbb byte[edx+0xa5], al
add byte[esi+0x68], dh
adc edi, dword[edx-0x57]
pop ebp
push ecx
push edx
push ebx
push eax
call fcn.1073bace
loope 0x1073dd9a
pop ebx
fild dword[esp+0x14]
jmp 0x1078441e
xor eax, eax
push esi
mov esi, dword[esp+4]
push edi
push esi
push ecx
push 0x6f8b11b4
push ecx
call fcn.107371f3
jne 0x1073ddc3
pop eax
mov ebx, dword[esp+0x18]
lea esp, [esp+0x1c]
push esi
mov esi, ebx
mov ecx, 0x2fda63e0
mov ecx, esi
pop esi
call fcn.100d3780
call int.1074ed56
jle 0x1073dd1f
and al, 4
push ebx
push eax
push esi
pushfd
jmp 0x1073e27a
fadd qword[eax+eax]
add cl, ch
adc byte[eax+esi*8+0x10a710ba], bl
out dx, al
mov edx, 0xf09c1024
mov edx, 0xf14ec817
mov edx, 0x42340210
rol byte[esp+esi*4-0x6c], cl
imul edx, dword[eax], 0x35baf09c
push esp
sub bh, ch
mov edx, 0x1f4ba204
ret 0xee66
push ebp
push edi
jmp fcn.10767749
movsb byte
and eax, 0x16efddff
bound ebp, qword[edi-0x1b]
xchg esi, eax
mov ecx, 0x82f5d242
xchg ebx, eax
imul ebx, dword[esi-0x341a8e31], 0xabdfaaf
aam 0xe1
xchg edx, eax
lcall 0xacbd, 0xd2ccdc0a
aaa
xchg edi, eax
movsb byte
jge 0x1075dea0
pop edx
int 0x9b
out dx, eax
out 0xec, al
rcl esi, 1
inc ebx
jge 0x1075de21
rol byte[ebx+eax*2-0x6b15622e], 1
imul ebx, dword[eax+0x71], 0xc4f5d241
jl 0x1075de31
mov al, byte[0xfea496d3]
mov al, byte[0x655d152]
shr ebp, 0xba
or ah, byte[ebp+edx*8-0x12617bf8]
mov al, 0xef
cdq
xchg esi, eax
movsb byte
dec eax
pop esi
mov esp, ebx
mov esp, 0xef3caf31
std
cdq
mov ah, bl
mov cl, 0x98
or al, 0xb7
fsub st(5), st(0)
div dword[edx+0x892]
add byte[eax], al
add byte[ecx+0x59], dh
pop ecx
lea eax, [eax-0xbbe3aca]
mov eax, dword[eax]
xchg dword[esp], eax
call dword[sym.imp.KERNEL32.dll_HeapFree]
jmp 0x1073dd51
lea esp, [esp+4]
push edx
push ebx
push eax
call fcn.10796eea
jp 0x1075de77
and al, 4
mov ecx, 0x2aed31f8
lea ecx, [ecx-0x1ded41e8]
mov edx, 0x40be6dc2
lea edx, [edx-0x3fc292ab]
add dword[eax+ecx], edx
pop edx
pop ecx
push ecx
push edx
mov ecx, 0x6ca5a818
lea ecx, [ecx-0x6940c92c]
mov edx, 0x2ebc8430
lea edx, [edx-0x1bd62246]
add dword[eax+ecx], edx
pop edx
pop ecx
push ecx
push edx
mov ecx, 0x301300ca
lea ecx, [ecx-0x11cd7616]
push ebx
call 0x1075df3e
jg 0x1075df9a
lea ebx, [ebx+0x371e0]
jmp ebx
out dx, eax
push ss
bound ebp, qword[edi-0x1b]
pop ds
dec esp
inc edx
shr byte[ecx+0x79], cl
xchg ebx, eax
imul ebp, dword[edx-0x4d], 0x1d3fe572

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/89dc67d2f980e8488f97b1bf8cb24258