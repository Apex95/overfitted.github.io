---
layout: post
title:  "fcn.004f9a79 @ 9c2b894b84f59672d8be2e984066f76f"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.004f9a79
- **Origin (md5):** 9c2b894b84f59672d8be2e984066f76f
- **VirusTotal:** [virustotal.com/gui/file/9c2b894b84f59672d8be2e984066f76f][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Behaviour Tags
<span class="bhv-tag" id="CREATES_SOCKET_LISTENER">CREATES_SOCKET_LISTENER / 0.0075589110731022514</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-5.6065874099731445, -134.98239135742188, '<b><a href="/report/fcn.004f9a79@9c2b894b84f59672d8be2e984066f76f">fcn.004f9a79</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'point { fill-color: #e0440e; }'],
[117.88273620605469, -199.32711791992188, '<b><a href="/report/fcn.004de230@9c2b894b84f59672d8be2e984066f76f">fcn.004de230</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'null'],
[80.0563735961914, -137.85223388671875, '<b><a href="/report/fcn.100fd824@e5d49e0823e602f2ee948ac39d32c1eb">fcn.100fd824</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],
[-1.0254464149475098, -280.7974853515625, '<b><a href="/report/fcn.0051f8c6@9c2b894b84f59672d8be2e984066f76f">fcn.0051f8c6</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'null'],
[-24.063703536987305, 53.567535400390625, '<b><a href="/report/fcn.004a254c@9c2b894b84f59672d8be2e984066f76f">fcn.004a254c</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'null'],
[66.09072875976562, -254.35595703125, '<b><a href="/report/fcn.004dc17d@9c2b894b84f59672d8be2e984066f76f">fcn.004dc17d</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'null'],
[-18.617416381835938, -35.55027389526367, '<b><a href="/report/fcn.100f19bc@e5d49e0823e602f2ee948ac39d32c1eb">fcn.100f19bc</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],
[-63.91398620605469, -201.90660095214844, '<b><a href="/report/fcn.1007fdf4@e5d49e0823e602f2ee948ac39d32c1eb">fcn.1007fdf4</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],
[29.024700164794922, -207.32110595703125, '<b><a href="/report/fcn.100c8626@e5d49e0823e602f2ee948ac39d32c1eb">fcn.100c8626</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],
[-59.55011749267578, -79.9416275024414, '<b><a href="/report/fcn.004f8e89@9c2b894b84f59672d8be2e984066f76f">fcn.004f8e89</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'null'],
[-79.9854965209961, 18.259536743164062, '<b><a href="/report/fcn.1007ef34@e5d49e0823e602f2ee948ac39d32c1eb">fcn.1007ef34</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
sub esp, 0x84
mov eax, dword[0x5d9004]
xor eax, ebp
mov dword[ebp-4], eax
mov eax, dword[ebp+8]
push ebx
mov ebx, ecx
mov dword[ebp-0x60], eax
push esi
push edi
mov dword[ebp-0x74], ebx
mov edi, dword[ebx+0x1c]
mov eax, dword[edi]
mov esi, dword[eax+0x74]
mov ecx, esi
call fcn.00553897
mov ecx, edi
call esi
push 0x5d8694
mov ecx, eax
mov dword[ebp-0x6c], eax
call fcn.00431851
xor edx, edx
test eax, eax
mov eax, dword[ebp-0x60]
sete dl
add eax, 0x1e4
push edx
mov ecx, eax
mov dword[ebp-0x70], edx
mov dword[ebp-0x58], eax
call fcn.00508e33
mov esi, eax
lea edi, [ebp-0x24]
lea eax, [ebp-0x14]
push eax
movsd dword
movsd dword
movsd dword
movsd dword
xor esi, esi
mov dword[ebp-0x14], esi
mov dword[ebp-0x10], esi
mov dword[ebp-0xc], esi
mov dword[ebp-8], esi
call dword[sym.imp.USER32.dll_SetRectEmpty]
mov eax, dword[ebx]
lea ecx, [ebp-0x14]
push esi
push ecx
mov esi, dword[eax+0xc]
mov ecx, esi
call fcn.00553897
mov ecx, ebx
call esi
mov ecx, dword[ebp-0x6c]
lea eax, [ebp-0x14]
push eax
call fcn.0041288e
mov ecx, ebx
call fcn.004fb6db
mov edi, dword[ebx+0x18]
mov dword[ebp-0x7c], eax
mov dword[ebp-0x78], edi
test edi, edi
je 0x4f9b44
mov ecx, edi
call fcn.004fb6db
test eax, eax
je 0x4f9b41
mov edi, dword[edi+0x18]
test edi, edi
jne 0x4f9b2f
mov dword[ebp-0x78], edi
xor esi, esi
lea eax, [ebp-0x54]
push eax
mov dword[ebp-0x54], esi
mov dword[ebp-0x50], esi
mov dword[ebp-0x4c], esi
mov dword[ebp-0x48], esi
call dword[sym.imp.USER32.dll_SetRectEmpty]
test edi, edi
je 0x4f9b83
mov eax, dword[edi]
lea ecx, [ebp-0x54]
push esi
push ecx
mov esi, dword[eax+0xc]
mov ecx, esi
call fcn.00553897
mov ecx, edi
call esi
mov ecx, dword[ebp-0x6c]
lea eax, [ebp-0x54]
push eax
call fcn.0041288e
xor esi, esi
mov eax, dword[ebp-0xc]
sub eax, dword[ebp-0x14]
mov dword[ebp-0x68], eax
test eax, eax
jg 0x4f9b99
mov eax, dword[ebp-0x4c]
sub eax, dword[ebp-0x54]
mov dword[ebp-0x68], eax
mov edi, dword[ebp-8]
sub edi, dword[ebp-0x10]
mov dword[ebp-0x64], edi
test edi, edi
jg 0x4f9baf
mov edi, dword[ebp-0x48]
sub edi, dword[ebp-0x50]
mov dword[ebp-0x64], edi
test eax, eax
jne 0x4f9bbc
mov eax, dword[ebp-0x1c]
sub eax, dword[ebp-0x24]
mov dword[ebp-0x68], eax
test edi, edi
jne 0x4f9bc9
mov edi, dword[ebp-0x18]
sub edi, dword[ebp-0x20]
mov dword[ebp-0x64], edi
lea eax, [ebp-0x14]
push eax
call dword[sym.imp.USER32.dll_IsRectEmpty]
test eax, eax
jne 0x4f9be2
mov eax, dword[ebp-0x14]
mov dword[ebp-0x24], eax
mov eax, dword[ebp-0x10]
jmp 0x4f9bf9
lea eax, [ebp-0x54]
push eax
call dword[sym.imp.USER32.dll_IsRectEmpty]
test eax, eax
jne 0x4f9bfc
mov eax, dword[ebp-0x54]
mov dword[ebp-0x24], eax
mov eax, dword[ebp-0x50]
mov dword[ebp-0x20], eax
mov eax, dword[ebp-0x60]
lea ecx, [ebp-0x84]
mov dword[ebp-0x84], esi
mov dword[ebp-0x80], esi
push ecx
mov eax, dword[eax]
mov esi, dword[eax+0x270]
mov ecx, esi
call fcn.00553897
mov ecx, dword[ebp-0x60]
call esi
mov eax, dword[ebp-0x84]
cmp dword[ebp-0x68], eax
jge 0x4f9c31
mov dword[ebp-0x68], eax
mov eax, dword[ebp-0x80]
cmp edi, eax
jge 0x4f9c3b
mov dword[ebp-0x64], eax
mov esi, dword[ebp-0x70]
mov ecx, dword[ebp-0x58]
push esi
call fcn.00508e1b
mov edi, eax
push 0x64
pop eax
cmp edi, eax
je 0x4f9c54
test edi, edi
jne 0x4f9c57
push 0x32
pop edi
mov ecx, ebx
call fcn.004fb6db
test eax, eax
jne 0x4f9d1e
cmp dword[ebx+0xc], eax
je 0x4f9d1e
mov ecx, ebx
call fcn.004fb776
mov ecx, dword[ebp-0x58]
push esi
test eax, eax
je 0x4f9cd0
call fcn.00508ef2
push 0x64
test eax, eax
je 0x4f9ca2
mov eax, dword[ebp-8]
mov ecx, dword[ebp-0x10]
sub eax, ecx
imul eax, edi
pop esi
mov dword[ebp-0x20], ecx
cdq
idiv esi
mov edx, eax
mov dword[ebp-0x64], edx
jmp 0x4f9d21
mov esi, dword[ebp-8]
mov eax, esi
sub eax, dword[ebp-0x10]
pop ecx
sub ecx, edi
imul eax, ecx
push 0x64
pop ecx
cdq
idiv ecx
mov edx, esi
sub edx, eax
mov eax, dword[ebx+0xc]
sub edx, dword[eax+0x118]
sub edx, dword[ebp-0x10]
sub esi, edx
mov dword[ebp-0x64], edx
mov dword[ebp-0x20], esi
jmp 0x4f9d21
call fcn.00508ef2
push 0x64
test eax, eax
je 0x4f9cf2
mov eax, dword[ebp-0xc]
mov ecx, dword[ebp-0x14]
sub eax, ecx
imul eax, edi
pop esi
mov dword[ebp-0x24], ecx
cdq
idiv esi
mov dword[ebp-0x68], eax
jmp 0x4f9d1e
mov esi, dword[ebp-0xc]
mov eax, esi
sub eax, dword[ebp-0x14]
pop ecx
sub ecx, edi
imul eax, ecx
push 0x64
pop ecx
cdq
idiv ecx
mov edx, esi
sub edx, eax
mov eax, dword[ebx+0xc]
sub edx, dword[eax+0x118]
sub edx, dword[ebp-0x14]
sub esi, edx
mov dword[ebp-0x68], edx
mov dword[ebp-0x24], esi
mov edx, dword[ebp-0x64]
mov eax, dword[ebp-0x20]
add eax, edx
mov dword[ebp-0x18], eax
mov eax, dword[ebp-0x24]
add eax, dword[ebp-0x68]
push 0xa
mov dword[ebp-0x1c], eax
call dword[sym.imp.USER32.dll_BeginDeferWindowPos]
mov edi, dword[ebp-0x60]
push eax
mov dword[ebp-0x5c], eax
lea eax, [ebp-0x24]
push 0
mov ecx, dword[edi]
push eax
mov esi, dword[ecx+0x234]
mov ecx, esi
call fcn.00553897
mov ecx, edi
call esi
push dword[ebp-0x70]
mov ecx, dword[ebp-0x58]
lea esi, [ebp-0x24]
lea edi, [ebp-0x34]
mov dword[ebp-0x5c], eax
movsd dword
movsd dword
movsd dword
movsd dword
xor esi, esi
mov dword[ebp-0x44], esi
mov dword[ebp-0x40], esi
mov dword[ebp-0x3c], esi
mov dword[ebp-0x38], esi
call fcn.00508ef2
test eax, eax
je 0x4f9ef4
mov ecx, dword[ebx+0x10]
test ecx, ecx
je 0x4f9d9c
push dword[ebp-0x60]
call fcn.004f9a79
jmp 0x4fa1d2
cmp dword[ebx+4], esi
je 0x4f9e03
mov edi, dword[ebp-0x60]
lea eax, [ebp-0x58]
push eax
mov dword[ebp-0x58], esi
push 1
mov esi, dword[edi]
push 2
push dword[ebx+4]
mov esi, dword[esi+0x34c]
mov ecx, esi
call fcn.00553897
mov ecx, edi
call esi
mov ecx, dword[ebp-0x58]
test ecx, ecx
je 0x4f9dfc
cmp dword[ebx+4], 0
push ecx
je 0x4f9dee
push dword[ebx+4]
mov edi, dword[ebx+0x1c]
mov eax, dword[edi]
mov esi, dword[eax+0x40]
mov ecx, esi
call fcn.00553897
mov ecx, edi
call esi
mov ecx, dword[ebp-0x58]
jmp 0x4f9dfc
mov ecx, dword[ebx+0x1c]
call fcn.004f01c7
mov ecx, dword[ebp-0x58]
mov dword[ebx+4], ecx
mov eax, ecx
jmp 0x4fa1d2
mov eax, dword[ebp-0x60]
mov dword[ebx+4], eax
mov eax, dword[ebx+8]
test eax, eax
jne 0x4f9e18
mov dword[ebp-0x58], esi
cmp dword[ebx+0x14], esi
je 0x4f9e1f
mov dword[ebp-0x58], 1
test eax, eax
je 0x4f9e32
lea ecx, [ebp-0x44]
push ecx
push dword[eax+0x20]
call dword[sym.imp.USER32.dll_GetWindowRect]
jmp 0x4f9e50
mov edi, dword[ebx+0x14]
test edi, edi
je 0x4f9e50
mov eax, dword[edi]
lea ecx, [ebp-0x44]
push esi
push ecx
mov esi, dword[eax+0xc]
mov ecx, esi
call fcn.00553897
mov ecx, edi
call esi
xor esi, esi
mov ecx, dword[ebp-0x6c]
lea eax, [ebp-0x44]
push eax
call fcn.0041288e
cmp dword[ebx+0xc], esi
je 0x4f9e99
mov ecx, ebx
call fcn.004fb776
test eax, eax
mov eax, dword[ebx+0xc]
je 0x4f9e85
mov ecx, dword[ebp-0x18]
mov dword[ebp-0x30], ecx
mov eax, dword[eax+0x118]
add eax, ecx
mov dword[ebp-0x28], eax
mov dword[ebp-0x40], eax
jmp 0x4f9e99
mov ecx, dword[ebp-0x1c]
mov dword[ebp-0x34], ecx
mov eax, dword[eax+0x118]
add eax, ecx
mov dword[ebp-0x2c], eax
mov dword[ebp-0x44], eax
mov edi, dword[ebx+8]
test edi, edi
je 0x4f9ec3
push dword[ebp-0x5c]
mov eax, dword[edi]
lea ecx, [ebp-0x44]
push esi
push ecx
mov esi, dword[eax+0x234]
mov ecx, esi
call fcn.00553897
mov ecx, edi
call esi
mov dword[ebp-0x5c], eax
jmp 0x4fa023
mov eax, dword[ebx+0x14]
mov dword[ebp-0x70], eax
test eax, eax
je 0x4fa025
mov ebx, dword[eax]
lea eax, [ebp-0x5c]
push esi
push eax
sub esp, 0x10
lea esi, [ebp-0x44]
mov ecx, dword[ebx+0x48]
mov edi, esp
movsd dword
movsd dword
movsd dword
movsd dword
call fcn.00553897
mov ecx, dword[ebp-0x70]
jmp 0x4fa01d
mov eax, dword[ebx+0x14]
test eax, eax
je 0x4f9f02
mov ecx, eax
jmp 0x4f9d8f
cmp dword[ebx+8], esi
je 0x4f9f58
mov edi, dword[ebp-0x60]
lea eax, [ebp-0x58]
push eax
mov dword[ebp-0x58], esi
push 1
mov esi, dword[edi]
push 2
push dword[ebx+8]
mov esi, dword[esi+0x34c]
mov ecx, esi
call fcn.00553897
mov ecx, edi
call esi
mov ecx, dword[ebp-0x58]
test ecx, ecx
je 0x4f9dfc
cmp dword[ebx+8], 0
push ecx
je 0x4f9f45
push dword[ebx+8]
jmp 0x4f9dd6
mov ecx, dword[ebx+0x1c]
call fcn.004f01c7
mov ecx, dword[ebp-0x58]
mov dword[ebx+8], ecx
jmp 0x4f9dfc
mov eax, dword[ebp-0x60]
mov dword[ebx+8], eax
mov eax, dword[ebx+4]
test eax, eax
jne 0x4f9f6d
mov dword[ebp-0x58], esi
cmp dword[ebx+0x10], esi
je 0x4f9f74
mov dword[ebp-0x58], 1
test eax, eax
je 0x4f9f87
lea ecx, [ebp-0x44]
push ecx
push dword[eax+0x20]
call dword[sym.imp.USER32.dll_GetWindowRect]
jmp 0x4f9fa5
mov edi, dword[ebx+0x10]
test edi, edi
je 0x4f9fa5
mov eax, dword[edi]
lea ecx, [ebp-0x44]
push esi
push ecx
mov esi, dword[eax+0xc]
mov ecx, esi
call fcn.00553897
mov ecx, edi
call esi
xor esi, esi
mov ecx, dword[ebp-0x6c]
lea eax, [ebp-0x44]
push eax
call fcn.0041288e
cmp dword[ebx+0xc], esi
je 0x4f9fea
mov ecx, ebx
call fcn.004fb776
test eax, eax
mov eax, dword[ebx+0xc]
je 0x4f9fd8
mov ecx, dword[ebp-0x20]
mov dword[ebp-0x28], ecx
sub ecx, dword[eax+0x118]
mov dword[ebp-0x30], ecx
mov dword[ebp-0x38], ecx
jmp 0x4f9fea
mov ecx, dword[ebp-0x24]
mov dword[ebp-0x2c], ecx
sub ecx, dword[eax+0x118]
mov dword[ebp-0x34], ecx
mov dword[ebp-0x3c], ecx
mov edi, dword[ebx+4]
test edi, edi
jne 0x4f9ea0
mov eax, dword[ebx+0x10]
mov dword[ebp-0x70], eax
test eax, eax
je 0x4fa025
mov ebx, dword[eax]
lea eax, [ebp-0x5c]
push esi
push eax
sub esp, 0x10
lea esi, [ebp-0x44]
mov ecx, dword[ebx+0x48]
mov edi, esp
movsd dword
movsd dword
movsd dword
movsd dword
call fcn.00553897
mov ecx, dword[ebp-0x70]
call dword[ebx+0x48]
mov ebx, dword[ebp-0x74]
xor esi, esi
mov edi, dword[ebx+0xc]
test edi, edi
je 0x4fa05a
cmp dword[ebp-0x58], 0
je 0x4fa052
push dword[ebp-0x5c]
mov eax, dword[edi]
lea ecx, [ebp-0x34]
push esi
push ecx
mov esi, dword[eax+0x234]
mov ecx, esi
call fcn.00553897
mov ecx, edi
call esi
mov dword[ebp-0x5c], eax
jmp 0x4fa05a
push esi
mov ecx, edi
call fcn.004f2e3c
lea eax, [ebp-0x44]
push eax
lea eax, [ebp-0x24]
push eax
lea eax, [ebp-0x14]
push eax
call dword[sym.imp.USER32.dll_UnionRect]
mov ecx, dword[ebp-0x6c]
lea eax, [ebp-0x14]
push eax
call fcn.0041231c
cmp dword[ebp-0x7c], 0
je 0x4fa1c6
mov eax, dword[ebp-0x78]
test eax, eax
je 0x4fa1c6
mov edi, dword[eax+0xc]
test edi, edi
je 0x4fa1c6
mov ecx, dword[eax+0x10]
mov esi, dword[eax+0x14]
test ecx, ecx
je 0x4fa0b3
push 3
push ebx
call fcn.004fadf4
test eax, eax
je 0x4fa0b3
xor esi, esi
inc esi
jmp 0x4fa0cf
test esi, esi
je 0x4fa1cf
push 3
push ebx
mov ecx, esi
call fcn.004fadf4
test eax, eax
je 0x4fa1cf
xor esi, esi
lea eax, [ebp-0x34]
mov dword[ebp-0x74], esi
push eax
push dword[edi+0x20]
call dword[sym.imp.USER32.dll_GetWindowRect]
mov eax, dword[edi+0x118]
test esi, esi
mov dword[ebp-0x7c], eax
mov eax, dword[edi]
mov esi, dword[eax+0x164]
mov ecx, esi
je 0x4fa134
call fcn.00553897
mov ecx, edi
call esi
test eax, eax
je 0x4fa119
mov ecx, dword[ebp-8]
mov dword[ebp-0x30], ecx
mov eax, dword[edi+0x118]
add eax, ecx
mov dword[ebp-0x28], eax
mov eax, dword[ebp-0x64]
jmp 0x4fa12d
mov ecx, dword[ebp-0xc]
mov dword[ebp-0x34], ecx
mov eax, dword[edi+0x118]
add eax, ecx
mov dword[ebp-0x2c], eax
mov eax, dword[ebp-0x68]
mov edi, dword[ebp-0x7c]
add edi, eax
jmp 0x4fa176
call fcn.00553897
mov ecx, edi
call esi
mov esi, dword[edi+0x118]
test eax, eax
je 0x4fa15d
add esi, dword[ebp-0x64]
mov eax, dword[ebp-0x10]
neg esi
mov dword[ebp-0x28], eax
sub eax, dword[edi+0x118]
mov dword[ebp-0x30], eax
jmp 0x4fa171
add esi, dword[ebp-0x68]
mov eax, dword[ebp-0x14]
neg esi
mov dword[ebp-0x2c], eax
sub eax, dword[edi+0x118]
mov dword[ebp-0x34], eax
mov dword[ebp-0x58], esi
mov edi, esi
mov ecx, dword[ebp-0x6c]
lea eax, [ebp-0x34]
push eax
call fcn.0041288e
mov ebx, dword[ebx+0xc]
test ebx, ebx
je 0x4fa1a8
push dword[ebp-0x5c]
mov eax, dword[ebx]
lea ecx, [ebp-0x34]
push 0
push ecx
mov esi, dword[eax+0x234]
mov ecx, esi
call fcn.00553897
mov ecx, ebx
call esi
mov dword[ebp-0x5c], eax
mov ebx, dword[ebp-0x78]
lea eax, [ebp-0x5c]
push eax
mov eax, dword[ebp-0x74]
xor eax, 1
mov esi, dword[ebx]
push eax
push edi
mov ecx, dword[esi+0x4c]
call fcn.00553897
mov ecx, ebx
call dword[esi+0x4c]
push dword[ebp-0x5c]
call dword[sym.imp.USER32.dll_EndDeferWindowPos]
mov eax, dword[ebp-0x60]
mov ecx, dword[ebp-4]
pop edi
pop esi
xor ecx, ebp
pop ebx
call fcn.00553199
mov esp, ebp
pop ebp
ret 4

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/9c2b894b84f59672d8be2e984066f76f