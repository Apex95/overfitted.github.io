---
layout: post
title:  "fcn.004069e0 @ 4fe6510221c33bf023f6abed461fc13f"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.004069e0
- **Origin (md5):** 4fe6510221c33bf023f6abed461fc13f
- **VirusTotal:** [virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Behaviour Tags
<span class="bhv-tag" id="SCREENSHOTS_FOREGROUND_WINDOW">SCREENSHOTS_FOREGROUND_WINDOW / 0.2150830122119891</span><span class="bhv-tag" id="CREATES_SOCKET_LISTENER">CREATES_SOCKET_LISTENER / 0.119638662011197</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [257.9285888671875, -64.20443725585938, '<b><a href="/report/fcn.004069e0@4fe6510221c33bf023f6abed461fc13f">fcn.004069e0</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>', 'point { fill-color: #e0440e; }'],
[21.72039031982422, -110.43749237060547, '<b><a href="/report/fcn.00406ed0@4fe6510221c33bf023f6abed461fc13f">fcn.00406ed0</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>', 'null'],
[-24.513107299804688, 125.77062225341797, '<b><a href="/report/fcn.004102e0@4fe6510221c33bf023f6abed461fc13f">fcn.004102e0</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>', 'null'],
[211.69508361816406, 172.00369262695312, '<b><a href="/report/fcn.0040f3b0@4fe6510221c33bf023f6abed461fc13f">fcn.0040f3b0</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

sub esp, 0xc
push ebx
push ebp
push esi
mov ebx, ecx
mov ecx, dword[esp+0x1c]
push edi
mov esi, eax
mov edi, edx
mov dword[esp+0x14], 0x7fffffff
cmp ecx, dword[0x4c65ec]
je 0x406e03
mov eax, dword[edi+0x10]
cmp eax, 0xffc3d44f
je 0x406a64
cmp eax, 0xffc3d44e
je 0x406a64
cmp eax, 0xffc3d44d
je 0x406a64
mov ebp, dword[0x4c6eec]
movzx eax, bl
lea eax, [eax+eax*8]
shl eax, 5
mov eax, dword[eax+ebp]
xor ebp, ebp
xor dl, dl
cmp eax, ebp
je 0x406a68
cmp dword[eax], 7
je 0x406a68
mov edx, dword[esp+0x34]
mov eax, dword[esp+0x2c]
push ebp
push 0x7fffffff
push edx
push eax
push esi
push ebx
mov ebx, dword[esp+0x48]
mov eax, edi
call fcn.004068b0
add esp, 0x18
pop edi
pop esi
pop ebp
pop ebx
add esp, 0xc
ret
mov dl, 1
xor ebp, ebp
cmp byte[0x4c6efe], 0
je 0x406a75
test dl, dl
je 0x406a8b
cmp dword[0x4c8600], 1
jne 0x406ade
cmp byte[0x4c862e], 0
je 0x406a8b
test dl, dl
jne 0x406ade
lea ecx, [esp+0x18]
push ecx
mov ecx, dword[esp+0x34]
lea eax, [esp+0x18]
push eax
mov eax, dword[esp+0x34]
push ecx
push eax
push esi
push ebx
push edi
call fcn.00406ed0
add esp, 0x1c
test al, al
jne 0x406ade
mov ecx, dword[esp+0x18]
mov edx, dword[esp+0x14]
mov eax, dword[esp+0x34]
push ecx
mov ecx, dword[esp+0x30]
push edx
push eax
push ecx
mov ecx, dword[esp+0x30]
push esi
push ebx
mov ebx, dword[esp+0x48]
mov eax, edi
call fcn.004068b0
add esp, 0x18
pop edi
pop esi
pop ebp
pop ebx
add esp, 0xc
ret
mov edx, dword[esp+0x2c]
push ebp
push edx
push esi
push ebx
call fcn.004079c0
add esp, 0x10
cmp bl, 0x4c
jne 0x406c00
cmp byte[esp+0x2c], 0
jne 0x406d39
mov al, byte[0x4c64b5]
cmp al, 0x40
je 0x406b17
cmp al, 0x80
je 0x406b17
cmp al, 0xc0
jne 0x406d39
cmp byte[0x4c92ca], 0
je 0x406d39
push 0x100
push ebp
push 0x4c64d8
mov dword[0x4c53c8], ebp
mov byte[0x4c64b7], 0
mov byte[0x4c64b6], 0
mov byte[0x4c64b5], 0
call fcn.00495c20
add esp, 0xc
push ebp
push str.32771
mov byte[0x4c53ce], 0
mov byte[0x4c53cd], 0
mov byte[0x4c53cc], 0
mov byte[0x4c53c7], 0
call dword[sym.imp.USER32.dll_FindWindowW]
test eax, eax
setne al
mov byte[0x4c53c6], al
xor eax, eax
xor ecx, ecx
mov dword[0x4c53a4], eax
mov dword[0x4c53a8], eax
mov dword[0x4c53ac], eax
mov dword[0x4c53b0], eax
mov dword[0x4c53b4], eax
mov word[0x4c53b8], ax
mov word[0x4c5208], cx
mov dword[0x4c5204], ebp
call dword[sym.imp.USER32.dll_GetForegroundWindow]
xor edx, edx
mov dword[0x4c5200], eax
mov byte[0x4c53c3], 0
mov byte[0x4c53c2], 0
mov word[0x4c53c4], dx
mov byte[0x4c53c1], dl
mov byte[0x4c53c0], dl
mov dword[0x4c53bc], ebp
mov byte[0x4c53bb], dl
mov byte[0x4c53ba], dl
mov byte[0x4c52c7], dl
jmp 0x406d39
cmp bl, 0x2e
je 0x406c0e
cmp bl, 0x6e
jne 0x406d10
cmp byte[esp+0x2c], 0
jne 0x406d10
mov al, byte[0x4c64b7]
test al, 3
je 0x406d10
test al, 0xc
je 0x406d10
test al, 0x30
jne 0x406d10
push 0x100
push ebp
push 0x4c64d8
mov dword[0x4c53c8], ebp
mov byte[0x4c64b7], 0
mov byte[0x4c64b6], 0
mov byte[0x4c64b5], 0
call fcn.00495c20
add esp, 0xc
push ebp
push str.32771
mov byte[0x4c53ce], 0
mov byte[0x4c53cd], 0
mov byte[0x4c53cc], 0
mov byte[0x4c53c7], 0
call dword[sym.imp.USER32.dll_FindWindowW]
test eax, eax
setne al
mov byte[0x4c53c6], al
xor eax, eax
xor ecx, ecx
mov dword[0x4c53a4], eax
mov dword[0x4c53a8], eax
mov dword[0x4c53ac], eax
mov dword[0x4c53b0], eax
mov dword[0x4c53b4], eax
mov word[0x4c53b8], ax
mov word[0x4c5208], cx
mov dword[0x4c5204], ebp
call dword[sym.imp.USER32.dll_GetForegroundWindow]
xor edx, edx
mov dword[0x4c5200], eax
mov byte[0x4c53c3], 0
mov byte[0x4c53c2], 0
mov word[0x4c53c4], dx
mov byte[0x4c53c1], dl
mov byte[0x4c53c0], dl
mov dword[0x4c53bc], ebp
mov byte[0x4c53bb], dl
mov byte[0x4c53ba], dl
mov byte[0x4c52c7], dl
lea esp, [esp]
cmp bl, 9
jne 0x406d39
cmp byte[esp+0x2c], 0
jne 0x406d39
cmp byte[0x4c53c6], 0
jne 0x406d39
mov al, byte[0x4c64b5]
test al, 0xc
je 0x406d39
test al, 3
jne 0x406d39
mov byte[0x4c53c6], 1
mov ecx, dword[0x4c6eec]
movzx eax, bl
lea eax, [eax+eax*8]
shl eax, 5
cmp byte[eax+ecx+4], 0
je 0x406e05
cmp byte[0x4c53c6], 0
je 0x406d92
cmp byte[esp+0x2c], 0
je 0x406d74
cmp bl, 0xa4
je 0x406d79
cmp bl, 0xa5
je 0x406d79
cmp bl, 0x12
je 0x406d79
jmp 0x406d92
cmp bl, 0x1b
jne 0x406d92
mov edx, dword[esp+0x30]
movzx eax, word[edx+4]
cmp eax, 0x68
je 0x406d92
cmp eax, 0x73
je 0x406d92
mov byte[0x4c53c6], 0
cmp bl, 0x5b
je 0x406da1
mov byte[esp+0x13], 0
cmp bl, 0x5c
jne 0x406da6
mov byte[esp+0x13], 1
cmp byte[esp+0x38], 0
je 0x406e05
cmp byte[esp+0x2c], 0
je 0x406e05
cmp byte[esp+0x13], 0
jne 0x406dd3
cmp bl, 0x12
je 0x406dd3
cmp bl, 0xa4
je 0x406dd3
cmp bl, 0xa5
jne 0x406e05
call fcn.00411ed0
test al, al
jne 0x406e05
mov al, byte[0x4c64b5]
test al, 3
jne 0x406e05
cmp byte[esp+0x13], 0
je 0x406de7
test al, 0x3c
jne 0x406e05
movzx eax, byte[0x4c2385]
push 0xffc3d44d
push ebp
push ebp
push ebp
push eax
push 2
call fcn.0040f3b0
add esp, 0x18
jmp 0x406e05
xor ebp, ebp
cmp byte[0x4c28e2], 0
je 0x406e27
cmp bl, 1
je 0x406e18
cmp bl, 2
jne 0x406e27
xor ecx, ecx
mov word[0x4c5208], cx
mov dword[0x4c5204], ebp
mov edx, dword[esp+0x28]
mov eax, dword[esp+0x24]
mov ecx, dword[esp+0x20]
push edi
push edx
push eax
push ecx
call dword[sym.imp.USER32.dll_CallNextHookEx]
mov ebx, dword[esp+0x34]
mov esi, dword[sym.imp.USER32.dll_PostMessageW]
mov edi, eax
cmp ebx, 0x3fff
je 0x406e9c
mov ebp, dword[esp+0x30]
movzx edx, word[ebp+2]
mov eax, dword[0x4c64b8]
push edx
push ebx
push 0x400
push eax
call esi
cmp byte[esp+0x2c], 0
je 0x406e9c
mov ecx, dword[0x4c6ee8]
and ebx, 0x3fff
movzx eax, word[ecx+ebx*2]
mov edx, 0x3fff
cmp ax, dx
je 0x406e9c
movzx ecx, word[ebp+2]
push ecx
push eax
mov eax, dword[0x4c64b8]
push 0x400
push eax
call esi
mov eax, dword[esp+0x14]
cmp eax, 0x7fffffff
je 0x406ebb
mov ecx, dword[esp+0x18]
mov edx, dword[0x4c64b8]
push ecx
push eax
push 0x401
push edx
call esi
mov eax, edi
pop edi
pop esi
pop ebp
pop ebx
add esp, 0xc
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f