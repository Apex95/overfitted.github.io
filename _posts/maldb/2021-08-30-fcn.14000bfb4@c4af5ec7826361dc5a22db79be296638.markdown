---
layout: post
title:  "fcn.14000bfb4 @ c4af5ec7826361dc5a22db79be296638"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.14000bfb4
- **Origin (md5):** c4af5ec7826361dc5a22db79be296638
- **VirusTotal:** [virustotal.com/gui/file/c4af5ec7826361dc5a22db79be296638][virustotal_ref]

# Code Tags
<span class="tag" id="MEMORY">MEMORY</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [238.16195678710938, -230.36849975585938, '<b><a href="/report/fcn.14000bfb4@c4af5ec7826361dc5a22db79be296638">fcn.14000bfb4</a><br>@c4af5ec7826361dc5a22db79be296638</b><br>mov rax, rsp<br>mov qword[rax+8], rbx<br>mov qword[rax+0x10], rbp<br>mov qword[rax+0x18], rsi<br>mov qword[rax+0x20], rdi<br>push r14<br>sub rsp, 0x20<br>mov rsi, rdx<br>xor edx, edx<br>mov rbx, rcx<br>mov rcx, qword[0x14001e444]<br>mov rbp, r8<br>lea r8d, [rdx+0x60]<br>mov r14d, r9d<br>call qword[sym.imp.KERNEL32.dll_HeapAlloc]<br>mov rdi, rax<br>test rsi, rsi<br>jne 0x14000c010<br>mov rcx, qword[0x14001e444]<br>lea r8d, [rsi+0x10]<br>xor edx, edx<br>call qword[sym.imp.KERNEL32.dll_HeapAlloc]<br>mov byte[rdi+0x5e], 1<br>mov rsi, rax<br>jmp 0x14000c014<br>mov byte[rax+0x5e], 0<br>and qword[rdi+0x10], 0<br>and qword[rdi], 0<br>and qword[rdi+8], 0<br>and qword[rdi+0x20], 0<br>lea rax, [rsi+8]<br>add rbx, 0x10<br>mov rcx, rbp<br>mov qword[rdi+0x50], rbx<br>mov qword[rdi+0x30], rbp<br>mov qword[rdi+0x18], rax<br>mov byte[rdi+0x5c], 1<br>mov dword[rdi+0x58], r14d<br>call fcn.1400150e0<br>and qword[rdi+0x40], 0<br>mov edx, 0x10<br>mov qword[rdi+0x48], rsi<br>mov byte[rdi+0x5d], al<br>lea r9d, [rdx-0xc]<br>mov r8d, 0x10000<br>mov rcx, rbx<br>mov qword[rsi], rdi<br>call fcn.14001040c<br>mov rbx, qword[rsp+0x30]<br>mov rbp, qword[rsp+0x38]<br>mov rsi, qword[rsp+0x40]<br>mov qword[rdi+0x38], rax<br>mov rax, rdi<br>mov rdi, qword[rsp+0x48]<br>add rsp, 0x20<br>pop r14<br>ret <br><eoc> ', 'point { fill-color: #e0440e; }'],
[-353.46044921875, -287.1221008300781, '<b><a href="/report/fcn.14000b848@c4af5ec7826361dc5a22db79be296638">fcn.14000b848</a><br>@c4af5ec7826361dc5a22db79be296638</b><br>mov qword[rsp+8], rbx<br>mov qword[rsp+0x10], rbp<br>mov qword[rsp+0x18], rsi<br>push rdi<br>push r14<br>push r15<br>sub rsp, 0x20<br>mov r14, rcx<br>mov rcx, qword[r9]<br>mov rsi, r9<br>mov rbp, r8<br>mov r15d, edx<br>call fcn.14000b9a0<br>mov rcx, qword[0x14001e444]<br>xor edx, edx<br>lea r8d, [rdx+0x60]<br>call qword[sym.imp.KERNEL32.dll_HeapAlloc]<br>mov rdi, rax<br>test rax, rax<br>je 0x14000b950<br>mov ebx, dword[rsp+0x60]<br>mov rcx, qword[0x14001e444]<br>mov eax, 1<br>test ebx, ebx<br>lea edx, [rax+7]<br>cmovle ebx, eax<br>movsxd r8, ebx<br>shl r8, 3<br>call qword[sym.imp.KERNEL32.dll_HeapAlloc]<br>mov qword[rdi+8], rax<br>test rax, rax<br>je 0x14000b93c<br>and qword[rdi], 0<br>and dword[rdi+0x40], 0<br>and dword[rdi+0x44], 0<br>and qword[rdi+0x50], 0<br>mov rcx, rbp<br>mov dword[rdi+0x3c], ebx<br>mov qword[rdi+0x30], r14<br>mov dword[rdi+0x38], r15d<br>mov qword[rdi+0x20], rbp<br>mov qword[rdi+0x48], rsi<br>call fcn.1400150e0<br>test rax, rax<br>je 0x14000b8f6<br>or dword[rdi+0x44], 2<br>mov edx, 0x10<br>lea rcx, [r14+0x10]<br>mov r8d, 0x10000<br>lea r9d, [rdx-0xc]<br>call fcn.14001040c<br>lea r8, [r14+0x10]<br>mov edx, 8<br>mov qword[rdi+0x58], rax<br>mov rcx, qword[0x14001e444]<br>call qword[sym.imp.KERNEL32.dll_HeapAlloc]<br>lea rcx, [0x1400175f4]<br>mov qword[rdi+0x18], rax<br>mov qword[rax+8], rcx<br>mov qword[rsi], rdi<br>jmp 0x14000b950<br>mov rcx, qword[0x14001e444]<br>mov r8, rdi<br>xor edx, edx<br>call qword[sym.imp.KERNEL32.dll_HeapFree]<br>xor edi, edi<br>mov rbx, qword[rsp+0x40]<br>mov rbp, qword[rsp+0x48]<br>mov rsi, qword[rsp+0x50]<br>mov rax, rdi<br>add rsp, 0x20<br>pop r15<br>pop r14<br>pop rdi<br>ret <br><eoc> ', 'null'],
[-29.274600982666016, -554.5347290039062, '<b><a href="/report/fcn.14000b9a0@c4af5ec7826361dc5a22db79be296638">fcn.14000b9a0</a><br>@c4af5ec7826361dc5a22db79be296638</b><br>test rcx, rcx<br>je 0x14000ba31<br>mov qword[rsp+8], rbx<br>push rdi<br>sub rsp, 0x20<br>mov rdi, rcx<br>call fcn.14000bcb0<br>mov rcx, qword[rdi+0x58]<br>call fcn.140010578<br>mov r8, qword[rdi+8]<br>mov rcx, qword[0x14001e444]<br>xor edx, edx<br>call qword[sym.imp.KERNEL32.dll_HeapFree]<br>mov r8, qword[rdi+0x18]<br>mov rcx, qword[0x14001e444]<br>xor edx, edx<br>call qword[sym.imp.KERNEL32.dll_HeapFree]<br>mov r8, qword[rdi+0x50]<br>test r8, r8<br>je 0x14000ba0d<br>mov rcx, qword[0x14001e444]<br>mov rbx, qword[r8]<br>xor edx, edx<br>call qword[sym.imp.KERNEL32.dll_HeapFree]<br>mov r8, rbx<br>test rbx, rbx<br>jne 0x14000b9f3<br>mov rax, qword[rdi+0x48]<br>mov r8, rdi<br>xor edx, edx<br>and qword[rax], 0<br>mov rcx, qword[0x14001e444]<br>call qword[sym.imp.KERNEL32.dll_HeapFree]<br>mov rbx, qword[rsp+0x30]<br>add rsp, 0x20<br>pop rdi<br>ret <br><eoc> ', 'null'],
[-86.02397155761719, 37.044368743896484, '<b><a href="/report/fcn.140010e20@c4af5ec7826361dc5a22db79be296638">fcn.140010e20</a><br>@c4af5ec7826361dc5a22db79be296638</b><br>mov dword[rsp+0x10], edx<br>mov qword[rsp+8], rcx<br>sub rsp, 0x38<br>mov ecx, dword[0x14001d1d0]<br>call qword[sym.imp.KERNEL32.dll_TlsGetValue]<br>mov qword[rsp+0x28], rax<br>movsxd rax, dword[rsp+0x48]<br>mov rcx, qword[rsp+0x28]<br>mov rcx, qword[rcx+0x10]<br>sub rcx, rax<br>mov rax, rcx<br>mov dword[rsp+0x20], eax<br>mov rax, qword[rsp+0x40]<br>cmp qword[rax], 0<br>jne 0x140010e86<br>movsxd rax, dword[rsp+0x20]<br>add rax, 0xa<br>mov r8, rax<br>xor edx, edx<br>mov rcx, qword[0x14001f300]<br>call qword[sym.imp.KERNEL32.dll_HeapAlloc]<br>mov rcx, qword[rsp+0x40]<br>mov qword[rcx], rax<br>jmp 0x140010eb1<br>movsxd rax, dword[rsp+0x20]<br>add rax, 0xa<br>mov r9, rax<br>mov rax, qword[rsp+0x40]<br>mov r8, qword[rax]<br>xor edx, edx<br>mov rcx, qword[0x14001f300]<br>call qword[sym.imp.KERNEL32.dll_HeapReAlloc]<br>mov rcx, qword[rsp+0x40]<br>mov qword[rcx], rax<br>movsxd rax, dword[rsp+0x20]<br>xor edx, edx<br>mov ecx, 2<br>div rcx<br>movsxd rcx, dword[rsp+0x48]<br>mov rdx, qword[rsp+0x28]<br>add rcx, qword[rdx]<br>mov r8d, eax<br>mov rdx, rcx<br>mov rax, qword[rsp+0x40]<br>mov rcx, qword[rax]<br>call fcn.140011430<br>movsxd rax, dword[rsp+0x48]<br>mov rcx, qword[rsp+0x28]<br>mov qword[rcx+0x10], rax<br>add rsp, 0x38<br>ret <br><eoc> ', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

mov rax, rsp
mov qword[rax+8], rbx
mov qword[rax+0x10], rbp
mov qword[rax+0x18], rsi
mov qword[rax+0x20], rdi
push r14
sub rsp, 0x20
mov rsi, rdx
xor edx, edx
mov rbx, rcx
mov rcx, qword[0x14001e444]
mov rbp, r8
lea r8d, [rdx+0x60]
mov r14d, r9d
call qword[sym.imp.KERNEL32.dll_HeapAlloc]
mov rdi, rax
test rsi, rsi
jne 0x14000c010
mov rcx, qword[0x14001e444]
lea r8d, [rsi+0x10]
xor edx, edx
call qword[sym.imp.KERNEL32.dll_HeapAlloc]
mov byte[rdi+0x5e], 1
mov rsi, rax
jmp 0x14000c014
mov byte[rax+0x5e], 0
and qword[rdi+0x10], 0
and qword[rdi], 0
and qword[rdi+8], 0
and qword[rdi+0x20], 0
lea rax, [rsi+8]
add rbx, 0x10
mov rcx, rbp
mov qword[rdi+0x50], rbx
mov qword[rdi+0x30], rbp
mov qword[rdi+0x18], rax
mov byte[rdi+0x5c], 1
mov dword[rdi+0x58], r14d
call fcn.1400150e0
and qword[rdi+0x40], 0
mov edx, 0x10
mov qword[rdi+0x48], rsi
mov byte[rdi+0x5d], al
lea r9d, [rdx-0xc]
mov r8d, 0x10000
mov rcx, rbx
mov qword[rsi], rdi
call fcn.14001040c
mov rbx, qword[rsp+0x30]
mov rbp, qword[rsp+0x38]
mov rsi, qword[rsp+0x40]
mov qword[rdi+0x38], rax
mov rax, rdi
mov rdi, qword[rsp+0x48]
add rsp, 0x20
pop r14
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/c4af5ec7826361dc5a22db79be296638