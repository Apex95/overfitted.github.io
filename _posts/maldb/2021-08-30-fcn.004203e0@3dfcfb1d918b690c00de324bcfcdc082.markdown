---
layout: post
title:  "fcn.004203e0 @ 3dfcfb1d918b690c00de324bcfcdc082"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.004203e0
- **Origin (md5):** 3dfcfb1d918b690c00de324bcfcdc082
- **VirusTotal:** [virustotal.com/gui/file/3dfcfb1d918b690c00de324bcfcdc082][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Behaviour Tags
<span class="bhv-tag" id="CREATES_SOCKET_LISTENER">CREATES_SOCKET_LISTENER / 0.10389889575900124</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [87.03409576416016, -7.806265830993652, '<b><a href="/report/fcn.004203e0@3dfcfb1d918b690c00de324bcfcdc082">fcn.004203e0</a><br>@3dfcfb1d918b690c00de324bcfcdc082</b><br>push ebp<br>mov ebp, esp<br>and esp, 0xfffffff8<br>push 0xffffffffffffffff<br>push 0x453da8<br>mov eax, dword<br>push eax<br>sub esp, 0x9c<br>mov eax, dword[0x48800c]<br>xor eax, esp<br>mov dword[esp+0x94], eax<br>push esi<br>push edi<br>mov eax, dword[0x48800c]<br>xor eax, esp<br>push eax<br>lea eax, [esp+0xa8]<br>mov dword<br>mov edi, ecx<br>mov dword[esp+0x14], edi<br>mov edx, dword[0x48d9d0]<br>test edx, edx<br>je 0x420442<br>cmp dword[0x48d9d4], 0<br>je 0x420442<br>cmp word[edx], 0<br>jne 0x4204e0<br>lea ecx, [esp+0xc]<br>call dword[sym.imp.mfc120u.dll_Ordinal_296]<br>mov dword[esp+0xb0], 0<br>lea eax, [esp+0xc]<br>mov ecx, dword[0x48c060]<br>push dword[ecx+0xa3e4]<br>add ecx, 0xa220<br>push eax<br>call dword[sym.imp.FFUILib.dll_public:_int___thiscall_CFFShellTree::GetItemPath_class_ATL::CStringT_wchar_t__class_StrTraitMFC_DLL_wchar_t__class_ATL::ChTraitsCRT_wchar_t______struct__TREEITEM__const]<br>mov eax, dword[esp+0xc]<br>cmp dword[edi+0x3870], eax<br>je 0x4204b7<br>test eax, eax<br>je 0x4204a8<br>mov esi, eax<br>mov cx, word[esi]<br>add esi, 2<br>test cx, cx<br>jne 0x420486<br>mov edx, dword[edi+0x386c]<br>lea ecx, [edi+0x386c]<br>sub esi, eax<br>sar esi, 1<br>push eax<br>push esi<br>call dword[edx+4]<br>jmp 0x4204b7<br>mov eax, dword[edi+0x386c]<br>lea ecx, [edi+0x386c]<br>call dword[eax+8]<br>mov edi, dword[esp+0x14]<br>lea ecx, [esp+0xc]<br>mov dword[esp+0xb0], 0xffffffff<br>mov dword[edi+0x3868], 0<br>call dword[sym.imp.mfc120u.dll_Ordinal_1042]<br>mov edx, dword[0x48d9d0]<br>xor eax, eax<br>mov ecx, 0x48da2c<br>mov word[0x489f40], ax<br>test edx, edx<br>mov eax, 0x489f40<br>cmovne eax, edx<br>push eax<br>call fcn.00440450<br>test al, al<br>jne 0x42063a<br>mov dword[esp+0x18], vtable.ALT::TString_wchar_t__0__8_.0<br>mov dword[esp+0x1c], 0<br>mov dword[esp+0x20], 0<br>mov dword[esp+0x24], 0<br>mov dword[esp+0xb0], 1<br>mov ecx, dword[sym.imp.FTMod.dll_class_CMultiLanguage__gpMultiLanguage]<br>mov esi, dword[0x48d9d0]<br>push str.Do_you_want_to_create<br>mov ecx, dword[ecx]<br>call dword[sym.imp.FTMod.dll_public:_wchar_t_const____thiscall_CMultiLanguage::TranslateString_wchar_t_const__]<br>push eax<br>push esi<br>lea eax, [esp+0x20]<br>push str._s_n_s<br>push eax<br>call fcn.00402890<br>mov ecx, dword[sym.imp.FTMod.dll_class_CMultiLanguage__gpMultiLanguage]<br>add esp, 0x10<br>xor eax, eax<br>mov esi, 0x489f40<br>mov word[0x489f40], ax<br>mov eax, dword[esp+0x1c]<br>test eax, eax<br>mov ecx, dword[ecx]<br>push 0<br>push 0<br>push 0<br>push 4<br>push str.This_folder_isnt_exist<br>cmovne esi, eax<br>call dword[sym.imp.FTMod.dll_public:_wchar_t_const____thiscall_CMultiLanguage::TranslateString_wchar_t_const__]<br>push eax<br>mov eax, dword[0x48c060]<br>push esi<br>push dword[eax+0x20]<br>call dword[sym.imp.BCGCBPRO2500u120.dll_int___cdecl_BCGPMessageBox_struct_HWND_____wchar_t_const___wchar_t_const___unsigned_int__wchar_t_const___int___wchar_t_const__]<br>add esp, 0x1c<br>cmp eax, 6<br>je 0x4205d4<br>mov eax, dword[esp+0x1c]<br>mov dword[esp+0x18], 0x45928c<br>test eax, eax<br>je 0x421110<br>cmp dword[esp+0x24], 0<br>je 0x421110<br>push eax<br>call dword[sym.imp.mfc120u.dll_Ordinal_1508]<br>add esp, 4<br>jmp 0x421110<br>xor eax, eax<br>mov edx, 0x489f40<br>mov word[0x489f40], ax<br>mov ecx, 0x48da2c<br>mov eax, dword[0x48d9d0]<br>test eax, eax<br>cmovne edx, eax<br>push edx<br>call fcn.00445e90<br>mov dword[esp+0xb0], 0xffffffff<br>mov eax, dword[esp+0x1c]<br>mov dword[esp+0x18], 0x45928c<br>test eax, eax<br>je 0x42062a<br>cmp dword[esp+0x24], 0<br>je 0x420622<br>push eax<br>call dword[sym.imp.mfc120u.dll_Ordinal_1508]<br>add esp, 4<br>mov dword[esp+0x1c], 0<br>mov dword[esp+0x20], 0<br>mov dword[esp+0x24], 0<br>mov esi, dword[0x48a01c]<br>mov ecx, dword[0x48d9d0]<br>mov edx, dword[esi+0x16e4]<br>call fcn.0040aed0<br>test eax, eax<br>je 0x421110<br>cmp byte[edi+0x389c], 0<br>je 0x4208d1<br>cmp dword[0x48c058], 0<br>je 0x4208d1<br>mov esi, dword[0x48a018]<br>xor edx, edx<br>cmp dword[0x48d9c8], 1<br>sete dl<br>mov eax, dword[esi+0x335c]<br>mov dword[esp+0x14], edx<br>test eax, eax<br>je 0x420746<br>cmp dword[eax+0xb0], 0<br>jne 0x4206ad<br>cmp dword[eax+0xb4], 0<br>je 0x420746<br>lea ecx, [esp+0x40]<br>call fcn.00410d10<br>push ecx<br>lea eax, [esi+0x18f0]<br>mov dword[esp+0xb4], 2<br>push eax<br>lea eax, [esp+0x14]<br>push eax<br>lea ecx, [esp+0x4c]<br>call fcn.00422d30<br>mov eax, dword[0x48a018]<br>mov ecx, dword[esp+0xc]<br>mov eax, dword[eax+0x335c]<br>add eax, 0xb0<br>lea ecx, [ecx+0x24]<br>push eax<br>call fcn.004235e0<br>mov ecx, dword[0x48a01c]<br>xor eax, eax<br>mov word[0x489f40], ax<br>mov edx, 0x489f40<br>mov eax, dword[0x48d9d0]<br>test eax, eax<br>cmovne edx, eax<br>mov eax, dword[ecx+0x15b0]<br>add ecx, 0x15b0<br>push edx<br>lea edx, [esp+0x44]<br>mov eax, dword[eax+0x44]<br>push edx<br>call eax<br>lea ecx, [esp+0x40]<br>mov byte[esp+0x2b], al<br>mov dword[esp+0xb0], 0xffffffff<br>call fcn.00410d40<br>mov al, byte[esp+0x2b]<br>jmp 0x420788<br>lea ecx, [esp+0x60]<br>call fcn.00443040<br>xor eax, eax<br>mov word[0x489f40], ax<br>mov eax, dword[esi+0x18f4]<br>test eax, eax<br>mov esi, 0x489f40<br>mov ecx, esi<br>cmovne ecx, eax<br>xor eax, eax<br>push ecx<br>mov word[0x489f40], ax<br>mov eax, dword[0x48d9d0]<br>test eax, eax<br>push edx<br>push ecx<br>cmovne esi, eax<br>lea ecx, [esp+0x6c]<br>push esi<br>call fcn.00443570<br>test al, al<br>je 0x4208c5<br>mov esi, dword[esp+0x14]<br>test esi, esi<br>je 0x4207a9<br>mov eax, dword[0x48a018]<br>push ecx<br>push dword[eax+0x18ec]<br>call fcn.0042c9c0<br>mov eax, dword[0x48c058]<br>lea ecx, [esp+0x80]<br>xorps xmm0, xmm0<br>push ecx<br>movdqu xmmword[esp+0x84], xmm0<br>push dword[eax+0x2410]<br>call dword[sym.imp.USER32.dll_GetWindowRect]<br>mov eax, dword[0x48c058]<br>mov eax, dword[eax+0x36a0]<br>movdqu xmm1, xmmword[eax+0x34]<br>movdqa xmm0, xmm1<br>psrldq xmm0, 4<br>movd eax, xmm0<br>push eax<br>movd eax, xmm1<br>push eax<br>lea eax, [esp+0x88]<br>push eax<br>call dword[sym.imp.USER32.dll_OffsetRect]<br>lea ecx, [esp+0x10]<br>call dword[sym.imp.mfc120u.dll_Ordinal_296]<br>lea ecx, [esp+0xc]<br>mov dword[esp+0xb0], 3<br>call dword[sym.imp.mfc120u.dll_Ordinal_296]<br>mov byte[esp+0xb0], 4<br>mov ecx, dword[sym.imp.FTMod.dll_class_CMultiLanguage__gpMultiLanguage]<br>mov ecx, dword[ecx]<br>test esi, esi<br>je 0x420839<br>push str.Move_to<br>jmp 0x42083e<br>push str.Copy_to<br>call dword[sym.imp.FTMod.dll_public:_wchar_t_const____thiscall_CMultiLanguage::TranslateString_wchar_t_const__]<br>push eax<br>lea ecx, [esp+0x10]<br>call dword[sym.imp.mfc120u.dll_Ordinal_1520]<br>mov ecx, dword[0x48a018]<br>push dword[0x48d9d0]<br>push dword[esp+0x10]<br>mov ecx, dword[ecx+0x18f4]<br>call fcn.00408100<br>push eax<br>lea eax, [esp+0x1c]<br>push str._s_r_n_s__s<br>push eax<br>call dword[sym.imp.mfc120u.dll_Ordinal_4772]<br>mov eax, dword[esp+0x94]<br>add esp, 0x14<br>mov dword[esp+0x2c], eax<br>mov eax, dword[esp+0x84]<br>add eax, 0xffffffb0<br>mov dword[esp+0x30], eax<br>lea eax, [esp+0x2c]<br>push eax<br>push dword[0x48c044]<br>push 1<br>push dword[esp+0x1c]<br>call dword[sym.imp.FFUILib.dll_void___cdecl_PopupNotifyWnd_wchar_t_const___int__struct_HICON_____class_CPoint__]<br>add esp, 0x10<br>lea ecx, [esp+0xc]<br>call dword[sym.imp.mfc120u.dll_Ordinal_1042]<br>lea ecx, [esp+0x10]<br>call dword[sym.imp.mfc120u.dll_Ordinal_1042]<br>mov byte[edi+0x389c], 0<br>jmp 0x421110<br>xor eax, eax<br>mov dword[esp+0x10], 0<br>xor edi, edi<br>cmp dword[0x48d9c8], 1<br>sete al<br>cmp byte[esi+0x9b62], 0<br>mov dword[esp+0xc], eax<br>je 0x420cba<br>lea eax, [esp+0x60]<br>mov dword[esp+0x6c], edi<br>mov byte[esp+0x70], 0<br>mov dword[esp+0x78], eax<br>mov dword[esp+0x64], eax<br>mov dword[esp+0x60], eax<br>mov dword[esp+0x68], eax<br>mov dword[esp+0x74], eax<br>mov dword[esp+0x7c], edi<br>lea eax, [esi+0xe4]<br>mov dword[esp+0xb0], 5<br>push eax<br>call dword[sym.imp.MSVCP120.dll__Mtx_lock]<br>add esp, 4<br>test eax, eax<br>je 0x420946<br>push eax<br>call dword[sym.imp.MSVCP120.dll_void___cdecl_std::_Throw_C_error_int_]<br>add esp, 4<br>mov ecx, dword[0x48a01c]<br>mov esi, dword[ecx+0x15d0]<br>mov esi, dword[esi+4]<br>cmp esi, dword[ecx+0x15d0]<br>je 0x420a09<br>test byte[esi+0x2c], 1<br>je 0x4209f9<br>mov eax, dword[ecx]<br>lea edx, [esp+0x18]<br>push edi<br>push edx<br>call dword[eax+0x194]<br>push ecx<br>lea eax, [esp+0x1c]<br>mov byte[esp+0xb4], 6<br>push eax<br>lea eax, [esp+0x1c]<br>push eax<br>lea ecx, [esp+0x6c]<br>call fcn.00422d30<br>lea ecx, [esi+0x3c]<br>push ecx<br>mov eax, dword[eax]<br>lea ecx, [eax+0x24]<br>call fcn.004235e0<br>cmp dword[esp+0xc], 0<br>jne 0x4209ae<br>and dword[esi+0x2c], 0xfffffffe<br>inc dword[esp+0x10]<br>mov byte[esp+0xb0], 5<br>mov eax, dword[esp+0x1c]<br>mov dword[esp+0x18], 0x45928c<br>test eax, eax<br>je 0x4209e3<br>cmp dword[esp+0x24], 0<br>je 0x4209db<br>push eax<br>call dword[sym.imp.mfc120u.dll_Ordinal_1508]<br>add esp, 4<br>mov dword[esp+0x1c], 0<br>mov ecx, dword[0x48a01c]<br>mov dword[esp+0x20], 0<br>mov dword[esp+0x24], 0<br>mov esi, dword[esi+4]<br>inc edi<br>cmp esi, dword[ecx+0x15d0]<br>jne 0x420961<br>mov esi, dword[ecx+0x15e8]<br>mov esi, dword[esi+4]<br>cmp esi, dword[ecx+0x15e8]<br>je 0x420acb<br>mov edi, edi<br>test byte[esi+0x58], 1<br>je 0x420abb<br>mov eax, dword[ecx]<br>lea edx, [esp+0x2c]<br>push edi<br>push edx<br>call dword[eax+0x194]<br>push ecx<br>lea eax, [esp+0x30]<br>mov byte[esp+0xb4], 7<br>push eax<br>lea eax, [esp+0x1c]<br>push eax<br>lea ecx, [esp+0x6c]<br>call fcn.00422d30<br>lea ecx, [esi+0xb8]<br>push ecx<br>mov eax, dword[eax]<br>lea ecx, [eax+0x24]<br>call fcn.004235e0<br>cmp dword[esp+0xc], 0<br>jne 0x420a70<br>and dword[esi+0x58], 0xfffffffe<br>inc dword[esp+0x10]<br>mov byte[esp+0xb0], 5<br>mov eax, dword[esp+0x30]<br>mov dword[esp+0x2c], 0x45928c<br>test eax, eax<br>je 0x420aa5<br>cmp dword[esp+0x38], 0<br>je 0x420a9d<br>push eax<br>call dword[sym.imp.mfc120u.dll_Ordinal_1508]<br>add esp, 4<br>mov dword[esp+0x30], 0<br>mov ecx, dword[0x48a01c]<br>mov dword[esp+0x34], 0<br>mov dword[esp+0x38], 0<br>mov esi, dword[esi+4]<br>inc edi<br>cmp esi, dword[ecx+0x15e8]<br>jne 0x420a20<br>cmp dword[esp+0x7c], 0<br>jne 0x420bc9<br>mov eax, dword[ecx]<br>push 0<br>push 0<br>push 1<br>mov eax, dword[eax+0x19c]<br>push 0<br>call eax<br>mov edi, eax<br>test edi, edi<br>jns 0x420b16<br>mov dword[esp+0xb0], 0xffffffff<br>cmp dword[esp+0x7c], 0<br>je 0x421110<br>push dword[esp+0x74]<br>lea ecx, [esp+0x64]<br>call fcn.00410d80<br>jmp 0x421110<br>mov ecx, dword[0x48a01c]<br>lea edx, [esp+0x80]<br>push edi<br>push edx<br>mov eax, dword[ecx]<br>call dword[eax+0x194]<br>push ecx<br>lea eax, [esp+0x84]<br>mov byte[esp+0xb4], 8<br>push eax<br>lea eax, [esp+0x1c]<br>push eax<br>lea ecx, [esp+0x6c]<br>call fcn.00422d30<br>mov ecx, dword[0x48a01c]<br>push edi<br>mov esi, dword[eax]<br>mov eax, dword[ecx]<br>mov eax, dword[eax+0x300]<br>call eax<br>test eax, eax<br>je 0x420b70<br>push eax<br>lea ecx, [esi+0x24]<br>call fcn.004235e0<br>inc dword[esp+0x10]<br>mov byte[esp+0xb0], 5<br>mov eax, dword[esp+0x84]<br>mov dword[esp+0x80], 0x45928c<br>test eax, eax<br>je 0x420bad<br>cmp dword[esp+0x8c], 0<br>je 0x420ba2<br>push eax<br>call dword[sym.imp.mfc120u.dll_Ordinal_1508]<br>add esp, 4<br>mov dword[esp+0x84], 0<br>mov ecx, dword[0x48a01c]<br>mov dword[esp+0x88], 0<br>mov dword[esp+0x8c], 0<br>mov eax, dword[ecx]<br>call dword[eax+0x2c4]<br>mov eax, dword[0x48a01c]<br>add eax, 0xe4<br>push eax<br>call dword[sym.imp.MSVCP120.dll__Mtx_unlock]<br>add esp, 4<br>test eax, eax<br>je 0x420bf3<br>push eax<br>call dword[sym.imp.MSVCP120.dll_void___cdecl_std::_Throw_C_error_int_]<br>add esp, 4<br>mov ecx, dword[0x48a01c]<br>xor eax, eax<br>mov word[0x489f40], ax<br>mov edx, 0x489f40<br>mov eax, dword[0x48d9d0]<br>test eax, eax<br>cmovne edx, eax<br>mov eax, dword[ecx+0x15b0]<br>add ecx, 0x15b0<br>push edx<br>lea edx, [esp+0x64]<br>push edx<br>call dword[eax+0x44]<br>mov dword[esp+0xb0], 0xffffffff<br>cmp dword[esp+0x7c], 0<br>je 0x420c44<br>push dword[esp+0x74]<br>lea ecx, [esp+0x64]<br>call fcn.00410d80<br>mov edi, dword[esp+0xc]<br>mov esi, dword[esp+0x10]<br>test esi, esi<br>jle 0x421110<br>mov eax, dword[0x48c060]<br>lea ecx, [esp+0x90]<br>xorps xmm0, xmm0<br>push ecx<br>movdqu xmmword[esp+0x94], xmm0<br>push dword[eax+0x141f0]<br>call dword[sym.imp.USER32.dll_GetWindowRect]<br>lea ecx, [esp+0x14]<br>call dword[sym.imp.mfc120u.dll_Ordinal_296]<br>lea ecx, [esp+0x3c]<br>mov dword[esp+0xb0], 0xd<br>call dword[sym.imp.mfc120u.dll_Ordinal_296]<br>mov byte[esp+0xb0], 0xe<br>mov ecx, dword[sym.imp.FTMod.dll_class_CMultiLanguage__gpMultiLanguage]<br>mov ecx, dword[ecx]<br>test edi, edi<br>je 0x421004<br>push str.Move_to<br>jmp 0x421009<br>lea eax, [esp+0x40]<br>mov dword[esp+0x4c], edi<br>mov byte[esp+0x50], 0<br>mov dword[esp+0x58], eax<br>mov dword[esp+0x44], eax<br>mov dword[esp+0x40], eax<br>mov dword[esp+0x48], eax<br>mov dword[esp+0x54], eax<br>mov dword[esp+0x5c], edi<br>lea ecx, [esp+0x60]<br>mov dword[esp+0xb0], 9<br>call fcn.00443040<br>lea eax, [esi+0xe4]<br>push eax<br>call dword[sym.imp.MSVCP120.dll__Mtx_lock]<br>add esp, 4<br>test eax, eax<br>je 0x420d11<br>push eax<br>call dword[sym.imp.MSVCP120.dll_void___cdecl_std::_Throw_C_error_int_]<br>add esp, 4<br>mov ecx, dword[0x48a01c]<br>mov esi, dword[ecx+0x15d0]<br>mov esi, dword[esi+4]<br>cmp esi, dword[ecx+0x15d0]<br>je 0x420de2<br>lea esp, [esp]<br>test byte[esi+0x2c], 1<br>je 0x420dd2<br>mov eax, dword[ecx]<br>lea edx, [esp+0x80]<br>push edi<br>push edx<br>call dword[eax+0x194]<br>push ecx<br>lea eax, [esp+0x84]<br>mov byte[esp+0xb4], 0xa<br>push eax<br>lea eax, [esp+0x1c]<br>push eax<br>lea ecx, [esp+0x4c]<br>call fcn.00422e50<br>cmp dword[esp+0xc], 0<br>jne 0x420d75<br>and dword[esi+0x2c], 0xfffffffe<br>inc dword[esp+0x10]<br>mov byte[esp+0xb0], 9<br>mov eax, dword[esp+0x84]<br>mov dword[esp+0x80], 0x45928c<br>test eax, eax<br>je 0x420db6<br>cmp dword[esp+0x8c], 0<br>je 0x420dab<br>push eax<br>call dword[sym.imp.mfc120u.dll_Ordinal_1508]<br>add esp, 4<br>mov dword[esp+0x84], 0<br>mov ecx, dword[0x48a01c]<br>mov dword[esp+0x88], 0<br>mov dword[esp+0x8c], 0<br>mov esi, dword[esi+4]<br>inc edi<br>cmp esi, dword[ecx+0x15d0]<br>jne 0x420d30<br>mov esi, dword[ecx+0x15e8]<br>mov esi, dword[esi+4]<br>cmp esi, dword[ecx+0x15e8]<br>je 0x420e9a<br>jmp 0x420e00<br>test byte[esi+0x58], 1<br>je 0x420e8a<br>mov eax, dword[ecx]<br>lea edx, [esp+0x18]<br>push edi<br>push edx<br>call dword[eax+0x194]<br>push ecx<br>lea eax, [esp+0x1c]<br>mov byte[esp+0xb4], 0xb<br>push eax<br>lea eax, [esp+0x1c]<br>push eax<br>lea ecx, [esp+0x4c]<br>call fcn.00422e50<br>cmp dword[esp+0xc], 0<br>jne 0x420e3f<br>and dword[esi+0x58], 0xfffffffe<br>inc dword[esp+0x10]<br>mov byte[esp+0xb0], 9<br>mov eax, dword[esp+0x1c]<br>mov dword[esp+0x18], 0x45928c<br>test eax, eax<br>je 0x420e74<br>cmp dword[esp+0x24], 0<br>je 0x420e6c<br>push eax<br>call dword[sym.imp.mfc120u.dll_Ordinal_1508]<br>add esp, 4<br>mov dword[esp+0x1c], 0<br>mov ecx, dword[0x48a01c]<br>mov dword[esp+0x20], 0<br>mov dword[esp+0x24], 0<br>mov esi, dword[esi+4]<br>inc edi<br>cmp esi, dword[ecx+0x15e8]<br>jne 0x420e00<br>cmp dword[esp+0x5c], 0<br>jne 0x420f60<br>mov eax, dword[ecx]<br>push 0<br>push 0<br>push 1<br>mov eax, dword[eax+0x19c]<br>push 0<br>call eax<br>mov edx, eax<br>test edx, edx<br>jns 0x420ee5<br>mov dword[esp+0xb0], 0xffffffff<br>cmp dword[esp+0x5c], 0<br>je 0x421110<br>push dword[esp+0x54]<br>lea ecx, [esp+0x44]<br>call fcn.0040acb0<br>jmp 0x421110<br>mov ecx, dword[0x48a01c]<br>push edx<br>lea edx, [esp+0x30]<br>push edx<br>mov eax, dword[ecx]<br>call dword[eax+0x194]<br>push ecx<br>lea eax, [esp+0x30]<br>mov byte[esp+0xb4], 0xc<br>push eax<br>lea eax, [esp+0x1c]<br>push eax<br>lea ecx, [esp+0x4c]<br>call fcn.00422e50<br>inc dword[esp+0x10]<br>mov byte[esp+0xb0], 9<br>mov eax, dword[esp+0x30]<br>mov dword[esp+0x2c], 0x45928c<br>test eax, eax<br>je 0x420f4a<br>cmp dword[esp+0x38], 0<br>je 0x420f42<br>push eax<br>call dword[sym.imp.mfc120u.dll_Ordinal_1508]<br>add esp, 4<br>mov dword[esp+0x30], 0<br>mov ecx, dword[0x48a01c]<br>mov dword[esp+0x34], 0<br>mov dword[esp+0x38], 0<br>mov eax, dword[ecx]<br>call dword[eax+0x2c4]<br>mov eax, dword[0x48a01c]<br>add eax, 0xe4<br>push eax<br>call dword[sym.imp.MSVCP120.dll__Mtx_unlock]<br>add esp, 4<br>test eax, eax<br>je 0x420f8a<br>push eax<br>call dword[sym.imp.MSVCP120.dll_void___cdecl_std::_Throw_C_error_int_]<br>add esp, 4<br>mov edi, dword[esp+0xc]<br>xor eax, eax<br>mov word[0x489f40], ax<br>mov esi, 0x489f40<br>mov eax, dword[0x48d9d0]<br>mov ecx, esi<br>test eax, eax<br>push 1<br>cmovne ecx, eax<br>lea eax, [esp+0x44]<br>push edi<br>push eax<br>push ecx<br>lea ecx, [esp+0x70]<br>call fcn.00443310<br>mov ecx, dword[0x48a01c]<br>xor eax, eax<br>mov word[0x489f40], ax<br>mov eax, dword[0x48d9d0]<br>test eax, eax<br>push 1<br>cmovne esi, eax<br>mov eax, dword[ecx]<br>push esi<br>call dword[eax+0x270]<br>mov dword[esp+0xb0], 0xffffffff<br>cmp dword[esp+0x5c], 0<br>je 0x420c48<br>push dword[esp+0x54]<br>lea ecx, [esp+0x44]<br>call fcn.0040acb0<br>jmp 0x420c48<br>push str.Copy_to<br>call dword[sym.imp.FTMod.dll_public:_wchar_t_const____thiscall_CMultiLanguage::TranslateString_wchar_t_const__]<br>push eax<br>lea ecx, [esp+0x40]<br>call dword[sym.imp.mfc120u.dll_Ordinal_1520]<br>push dword[0x48d9d0]<br>mov ecx, dword[sym.imp.FTMod.dll_class_CMultiLanguage__gpMultiLanguage]<br>push dword[esp+0x40]<br>push str.Files_Folders_<br>mov ecx, dword[ecx]<br>call dword[sym.imp.FTMod.dll_public:_wchar_t_const____thiscall_CMultiLanguage::TranslateString_wchar_t_const__]<br>push eax<br>push esi<br>lea eax, [esp+0x24]<br>push str._d__s_r_n_s__s<br>push eax<br>call dword[sym.imp.mfc120u.dll_Ordinal_4772]<br>mov eax, dword[esp+0xa8]<br>mov dword[esp+0x30], eax<br>mov eax, dword[esp+0xb4]<br>mov dword[esp+0x34], eax<br>lea eax, [esp+0x30]<br>push eax<br>push dword[0x48c044]<br>push 1<br>push dword[esp+0x38]<br>call dword[sym.imp.FFUILib.dll_void___cdecl_PopupNotifyWnd_wchar_t_const___int__struct_HICON_____class_CPoint__]<br>add esp, 0x28<br>test edi, edi<br>je 0x4210e5<br>mov ecx, dword[0x48a01c]<br>push 1<br>mov eax, dword[ecx]<br>mov eax, dword[eax+0x2c0]<br>call eax<br>test eax, eax<br>jne 0x4210c2<br>mov ecx, dword[0x48a01c]<br>push 0<br>push 0<br>push 1<br>mov eax, dword[ecx]<br>push 0<br>mov eax, dword[eax+0x19c]<br>call eax<br>test eax, eax<br>js 0x4210c2<br>mov ecx, dword[0x48a01c]<br>push 1<br>push 0<br>push eax<br>mov edx, dword[ecx]<br>call dword[edx+0x2bc]<br>mov ecx, dword[0x48a01c]<br>mov eax, dword[ecx]<br>call dword[eax+0x1b0]<br>mov ecx, dword[0x48c060]<br>push 0<br>lea ecx, [ecx+0xa598]<br>call fcn.00423bc0<br>jmp 0x4210fc<br>mov eax, dword[0x48a01c]<br>push 0<br>push 0<br>push 0xc00<br>push dword[eax+0x20]<br>call dword[sym.imp.USER32.dll_PostMessageW]<br>lea ecx, [esp+0x3c]<br>call dword[sym.imp.mfc120u.dll_Ordinal_1042]<br>lea ecx, [esp+0x14]<br>call dword[sym.imp.mfc120u.dll_Ordinal_1042]<br>mov ecx, dword[esp+0xa8]<br>mov dword<br>pop ecx<br>pop edi<br>pop esi<br>mov ecx, dword[esp+0x94]<br>xor ecx, esp<br>call fcn.0044e61f<br>mov esp, ebp<br>pop ebp<br>ret <br><eoc> ', 'point { fill-color: #e0440e; }'],
[-38.85612487792969, -14.388212203979492, '<b><a href="/report/fcn.00424a90@1123b7aa5760238fe93045e585b8234c">fcn.00424a90</a><br>@1123b7aa5760238fe93045e585b8234c</b><br>push ebp<br>mov ebp, esp<br>and esp, 0xfffffff8<br>sub esp, 0x118<br>mov eax, dword[0x437388]<br>push esi<br>push edi<br>mov dword[esp+0x11c], eax<br>mov esi, ecx<br>xor eax, eax<br>mov byte[esp+0x10], 0<br>mov ecx, 0x40<br>lea edi, [esp+0x11]<br>rep stosd<br>stosw word<br>stosb byte<br>mov eax, dword[ebp+0x14]<br>shr eax, 0x10<br>movzx ecx, ah<br>push ecx<br>movzx edx, al<br>mov eax, dword[ebp+0x14]<br>push edx<br>movzx ecx, ah<br>push ecx<br>mov ecx, dword[ebp+0x10]<br>movzx edx, al<br>mov eax, dword[ebp+0x10]<br>push edx<br>mov edx, dword[ebp+0x10]<br>shr ecx, 0x10<br>movzx ecx, cl<br>shr eax, 0x18<br>push eax<br>movzx eax, byte[ebp+0x10]<br>push ecx<br>mov ecx, dword[ebp+0xc]<br>shr edx, 8<br>movzx edx, dl<br>push edx<br>movzx edx, word[ebp+0xc]<br>push eax<br>mov eax, dword[ebp+8]<br>shr ecx, 0x10<br>push ecx<br>push edx<br>push eax<br>push str.{_08X-_04X-_04X-_02X_02X-_02X_02X_02X_02X_02X_02X}<br>lea ecx, [esp+0x40]<br>push 0x104<br>push ecx<br>call fcn.0042a725<br>add esp, 0x38<br>lea edx, [esp+0xc]<br>push edx<br>push str.CLSID_{CAA2D3B1-4BB5-4a45-A17A-122773379D99}<br>push 0x80000000<br>call dword[sym.imp.ADVAPI32.dll_RegOpenKeyA]<br>test eax, eax<br>je 0x424b69<br>lea eax, [esp+0xc]<br>push eax<br>push str.CLSID_{CAA2D3B1-4BB5-4a45-A17A-122773379D99}<br>push 0x80000000<br>call dword[sym.imp.ADVAPI32.dll_RegCreateKeyA]<br>test eax, eax<br>je 0x424b69<br>xor eax, eax<br>mov ecx, dword[esp+0x11c]<br>call fcn.0041e6b7<br>pop edi<br>pop esi<br>mov esp, ebp<br>pop ebp<br>ret 0x10<br>lea eax, [esp+0x10]<br>mov edi, 1<br>lea edx, [eax+1]<br>mov cl, byte[eax]<br>inc eax<br>test cl, cl<br>jne 0x424b75<br>sub eax, edx<br>mov edx, dword[esi+0x10]<br>inc eax<br>push eax<br>mov eax, dword[esp+0x10]<br>lea ecx, [esp+0x14]<br>push ecx<br>push 1<br>push 0<br>push edx<br>push eax<br>call dword[sym.imp.ADVAPI32.dll_RegSetValueExA]<br>test eax, eax<br>je 0x424b9e<br>xor edi, edi<br>mov ecx, dword[esp+0xc]<br>push ecx<br>call dword[sym.imp.ADVAPI32.dll_RegCloseKey]<br>mov ecx, dword[esp+0x11c]<br>mov eax, edi<br>call fcn.0041e6b7<br>pop edi<br>pop esi<br>mov esp, ebp<br>pop ebp<br>ret 0x10<br><eoc> ', 'null'],
[52.948543548583984, 113.5977783203125, '<b><a href="/report/fcn.004e0c20@279a61b1e76da49531f1f16fd1102a2d">fcn.004e0c20</a><br>@279a61b1e76da49531f1f16fd1102a2d</b><br>sub esp, 0x24<br>mov eax, dword[0x53ebd0]<br>xor eax, esp<br>mov dword[esp+0x20], eax<br>push ebp<br>mov ebp, dword[esp+0x30]<br>push 0xf0000000<br>push 1<br>push 0<br>push 0<br>lea eax, [esp+0x14]<br>push eax<br>mov dword[esp+0x1c], 8<br>call dword[sym.imp.ADVAPI32.dll_CryptAcquireContextA]<br>test eax, eax<br>je 0x4e0cca<br>xor eax, eax<br>mov dword[esp+0x10], eax<br>mov dword[esp+0x14], eax<br>mov dword[esp+0x18], eax<br>push esi<br>mov dword[esp+0x20], eax<br>mov dword[esp+0x24], eax<br>lea esi, [esp+0x20]<br>mov eax, ebp<br>mov byte[esp+0x14], 8<br>mov byte[esp+0x15], 2<br>mov dword[esp+0x18], 0x6601<br>mov dword[esp+0x1c], 8<br>call fcn.004e0b90<br>mov ecx, esi<br>push 8<br>push ecx<br>call fcn.004e3550<br>mov ecx, dword[esp+0x10]<br>add esp, 8<br>lea edx, [esp+0x10]<br>push edx<br>push 0<br>push 0<br>push 0x14<br>lea eax, [esp+0x24]<br>push eax<br>push ecx<br>call dword[sym.imp.ADVAPI32.dll_CryptImportKey]<br>pop esi<br>test eax, eax<br>jne 0x4e0cdc<br>mov edx, dword[esp+4]<br>push eax<br>push edx<br>call dword[sym.imp.ADVAPI32.dll_CryptReleaseContext]<br>xor eax, eax<br>pop ebp<br>mov ecx, dword[esp+0x20]<br>xor ecx, esp<br>call fcn.00490ace<br>add esp, 0x24<br>ret <br>mov eax, dword[esp+0x2c]<br>mov ecx, dword[eax]<br>mov dword[edi], ecx<br>mov edx, dword[eax+4]<br>mov eax, dword[esp+8]<br>push eax<br>lea ecx, [esp+0xc]<br>push ecx<br>push edi<br>push 0<br>push 0<br>mov dword[edi+4], edx<br>mov edx, dword[esp+0x20]<br>push 0<br>push edx<br>call dword[sym.imp.ADVAPI32.dll_CryptEncrypt]<br>mov eax, dword[esp+0xc]<br>push eax<br>call dword[sym.imp.ADVAPI32.dll_CryptDestroyKey]<br>mov ecx, dword[esp+4]<br>push 0<br>push ecx<br>call dword[sym.imp.ADVAPI32.dll_CryptReleaseContext]<br>mov ecx, dword[esp+0x24]<br>pop ebp<br>xor ecx, esp<br>mov eax, 1<br>call fcn.00490ace<br>add esp, 0x24<br>ret <br><eoc> ', 'null'],
[21.717660903930664, 39.12822723388672, '<b><a href="/report/fcn.004059f0@d59f9c4f445b9f980173dec064f55091">fcn.004059f0</a><br>@d59f9c4f445b9f980173dec064f55091</b><br>sub esp, 0x134<br>mov eax, dword[0x436210]<br>xor eax, esp<br>mov dword[esp+0x130], eax<br>push esi<br>push edi<br>mov edi, ecx<br>mov eax, dword[edi]<br>mov edx, dword[eax+8]<br>call edx<br>cmp dword[edi+8], 0<br>jne 0x405a21<br>push str.dxgi.dll<br>mov ecx, edi<br>call fcn.00405630<br>mov esi, dword[edi+8]<br>test esi, esi<br>je 0x405b53<br>push 0xfe<br>lea eax, [esp+0x16]<br>push 0<br>push eax<br>mov dword[esp+0x18], 0<br>mov dword[esp+0x14], 0<br>mov word[esp+0x1c], 0<br>call fcn.0040a970<br>xor eax, eax<br>add esp, 0xc<br>push str.CreateDXGIFactory1<br>push esi<br>mov dword[esp+0x118], eax<br>mov dword[esp+0x11c], eax<br>mov dword[esp+0x120], eax<br>mov dword[esp+0x124], eax<br>mov dword[esp+0x128], eax<br>mov dword[esp+0x12c], eax<br>mov dword[esp+0x130], eax<br>mov dword[esp+0x134], eax<br>mov dword[esp+0x138], eax<br>mov dword[esp+0x13c], eax<br>call dword[sym.imp.KERNEL32.dll_GetProcAddress]<br>test eax, eax<br>jne 0x405ab6<br>xor al, al<br>jmp 0x405b55<br>lea ecx, [esp+0xc]<br>push ecx<br>push 0x42c400<br>call eax<br>test eax, eax<br>jl 0x405aaf<br>mov eax, dword[esp+0xc]<br>push ebp<br>mov ebp, dword[esp+0x144]<br>mov dword[edi+0x28], eax<br>xor esi, esi<br>mov edx, dword[eax]<br>mov edx, dword[edx+0x30]<br>lea ecx, [esp+0xc]<br>push ecx<br>push esi<br>push eax<br>call edx<br>test eax, eax<br>jl 0x405b0e<br>cmp esi, ebp<br>mov eax, dword[esp+0xc]<br>jne 0x405afd<br>mov dword[edi+0x2c], eax<br>mov eax, dword[esp+0x10]<br>add esi, 1<br>jmp 0x405ad7<br>mov ecx, dword[eax]<br>mov edx, dword[ecx+8]<br>push eax<br>call edx<br>mov eax, dword[esp+0x10]<br>add esi, 1<br>jmp 0x405ad7<br>cmp ebp, esi<br>pop ebp<br>jae 0x405aaf<br>mov eax, dword[edi+0x2c]<br>lea edx, [esp+0x10]<br>mov dword[esp+8], eax<br>mov ecx, dword[eax]<br>push edx<br>push eax<br>mov eax, dword[ecx+0x28]<br>call eax<br>test eax, eax<br>jl 0x405aaf<br>mov ecx, dword[esp+0x110]<br>mov edx, dword[esp+0x114]<br>mov eax, dword[esp+0x12c]<br>mov dword[edi+0x10], ecx<br>mov ecx, dword[esp+0x130]<br>mov dword[edi+0x14], edx<br>mov dword[edi+0x20], eax<br>mov dword[edi+0x24], ecx<br>mov al, 1<br>mov ecx, dword[esp+0x138]<br>pop edi<br>pop esi<br>xor ecx, esp<br>call fcn.00408c53<br>add esp, 0x134<br>ret 4<br><eoc> ', 'null'],
[-17.142728805541992, 110.29340362548828, '<b><a href="/report/fcn.00471be0@289859175c221b107317af7727d26c17">fcn.00471be0</a><br>@289859175c221b107317af7727d26c17</b><br>sub esp, 0x24<br>mov eax, dword[0x4cfec0]<br>xor eax, esp<br>mov dword[esp+0x20], eax<br>push ebp<br>mov ebp, dword[esp+0x30]<br>push 0xf0000000<br>push 1<br>push 0<br>push 0<br>lea eax, [esp+0x14]<br>push eax<br>mov dword[esp+0x1c], 8<br>call dword[sym.imp.ADVAPI32.dll_CryptAcquireContextA]<br>test eax, eax<br>je 0x471c8a<br>xor eax, eax<br>mov dword[esp+0x10], eax<br>mov dword[esp+0x14], eax<br>mov dword[esp+0x18], eax<br>push esi<br>mov dword[esp+0x20], eax<br>mov dword[esp+0x24], eax<br>lea esi, [esp+0x20]<br>mov eax, ebp<br>mov byte[esp+0x14], 8<br>mov byte[esp+0x15], 2<br>mov dword[esp+0x18], 0x6601<br>mov dword[esp+0x1c], 8<br>call fcn.00471b50<br>mov ecx, esi<br>push 8<br>push ecx<br>call fcn.00474ef0<br>mov ecx, dword[esp+0x10]<br>add esp, 8<br>lea edx, [esp+0x10]<br>push edx<br>push 0<br>push 0<br>push 0x14<br>lea eax, [esp+0x24]<br>push eax<br>push ecx<br>call dword[sym.imp.ADVAPI32.dll_CryptImportKey]<br>pop esi<br>test eax, eax<br>jne 0x471c9c<br>mov edx, dword[esp+4]<br>push eax<br>push edx<br>call dword[sym.imp.ADVAPI32.dll_CryptReleaseContext]<br>xor eax, eax<br>pop ebp<br>mov ecx, dword[esp+0x20]<br>xor ecx, esp<br>call fcn.0047641d<br>add esp, 0x24<br>ret <br>mov eax, dword[esp+0x2c]<br>mov ecx, dword[eax]<br>mov dword[edi], ecx<br>mov edx, dword[eax+4]<br>mov eax, dword[esp+8]<br>push eax<br>lea ecx, [esp+0xc]<br>push ecx<br>push edi<br>push 0<br>push 0<br>mov dword[edi+4], edx<br>mov edx, dword[esp+0x20]<br>push 0<br>push edx<br>call dword[sym.imp.ADVAPI32.dll_CryptEncrypt]<br>mov eax, dword[esp+0xc]<br>push eax<br>call dword[sym.imp.ADVAPI32.dll_CryptDestroyKey]<br>mov ecx, dword[esp+4]<br>push 0<br>push ecx<br>call dword[sym.imp.ADVAPI32.dll_CryptReleaseContext]<br>mov ecx, dword[esp+0x24]<br>pop ebp<br>xor ecx, esp<br>mov eax, 1<br>call fcn.0047641d<br>add esp, 0x24<br>ret <br><eoc> ', 'null'],
[-58.07880783081055, 53.17287063598633, '<b><a href="/report/fcn.307834f0@e0efd357fccc8f4e2c059b0b54118ba8">fcn.307834f0</a><br>@e0efd357fccc8f4e2c059b0b54118ba8</b><br>sub esp, 0x40<br>push ebx<br>push esi<br>mov esi, dword[esp+0x4c]<br>push edi<br>push ebp<br>xor ebx, ebx<br>mov eax, dword[esi]<br>push eax<br>call dword[sym.imp.USER32.dll_GetDC]<br>mov edi, eax<br>test edi, edi<br>je 0x307838e7<br>mov ax, word[esi+0x5c]<br>push eax<br>call fcn.307839e0<br>add esp, 4<br>test eax, eax<br>jne 0x3078354c<br>mov eax, dword[esi+0x40]<br>mov ecx, dword[esi+0x44]<br>mov edx, dword[esi+0x30]<br>mov dword[esp+0x40], ebx<br>mov dword[esp+0x44], ebx<br>push edx<br>mov dword[esp+0x4c], eax<br>mov dword[esp+0x50], ecx<br>lea eax, [esp+0x44]<br>push eax<br>push edi<br>call dword[sym.imp.USER32.dll_FillRect]<br>jmp 0x307838dd<br>mov ecx, dword[esi+0x64]<br>mov eax, dword[esi+0x48]<br>mov edx, dword[esi+0x4c]<br>mov dword[esp+0x18], ecx<br>mov ecx, dword[esi+0x54]<br>mov dword[esp+0x1c], eax<br>mov eax, dword[esi+0x50]<br>xor ebx, ebx<br>mov dword[esp+0x20], edx<br>mov dword[esp+0x28], ecx<br>mov edx, dword[esi+0x58]<br>mov dword[esp+0x24], eax<br>mov dword[esp+0x2c], edx<br>cmp edx, ebx<br>jle 0x307835f1<br>mov ebp, dword[esp+0x18]<br>xor eax, eax<br>mov edx, 1<br>mov ax, word[esi+0x5c]<br>mov cl, bl<br>shl edx, cl<br>test edx, eax<br>je 0x307835e7<br>cmp dword[ebp], 0<br>jne 0x307835e7<br>lea eax, [esp+0x38]<br>lea ecx, [esp+0x30]<br>push eax<br>push ecx<br>push ebx<br>push esi<br>call fcn.30784fc0<br>add esp, 0x10<br>test eax, eax<br>je 0x307835e7<br>mov eax, dword[esp+0x30]<br>mov ecx, dword[esp+0x34]<br>lea edx, [esp+0x40]<br>mov dword[esp+0x40], eax<br>mov eax, dword[esp+0x38]<br>mov dword[esp+0x44], ecx<br>add eax, dword[esp+0x30]<br>mov dword[esp+0x48], eax<br>mov eax, dword[esp+0x3c]<br>add eax, ecx<br>mov ecx, dword[esi+0x30]<br>mov dword[esp+0x4c], eax<br>push ecx<br>push edx<br>push edi<br>call dword[sym.imp.USER32.dll_FillRect]<br>add ebp, 0x10<br>inc ebx<br>cmp ebx, dword[esp+0x2c]<br>jl 0x30783580<br>mov eax, dword[esi+8]<br>test al, 1<br>je 0x30783795<br>mov dword[esp+0x14], 0xffffffff<br>mov dword[esp+0x2c], 0<br>cmp dword[esp+0x28], 0<br>jle 0x307838dd<br>mov eax, dword[esp+0x2c]<br>push eax<br>push esi<br>call fcn.30783af0<br>add esp, 8<br>mov ebx, eax<br>test ebx, ebx<br>jl 0x3078377e<br>mov ecx, dword[esi+0x68]<br>mov eax, dword[esp+0x2c]<br>mov edx, dword[ecx+eax*4+4]<br>mov dword[esp+0x24], edx<br>cmp edx, dword[esp+0x14]<br>jle 0x3078377e<br>push eax<br>push esi<br>call fcn.30783d90<br>add esp, 8<br>test eax, eax<br>jle 0x30783698<br>mov eax, dword[esi+0x40]<br>mov ecx, dword[esp+0x24]<br>inc eax<br>mov dword[esp+0x44], ecx<br>mov dword[esp+0x40], 0xffffffff<br>lea edx, [esp+0x40]<br>mov dword[esp+0x48], eax<br>mov eax, dword[esp+0x20]<br>add eax, ecx<br>mov ecx, dword[esi+0x28]<br>mov dword[esp+0x4c], eax<br>push ecx<br>push edx<br>push edi<br>call dword[sym.imp.USER32.dll_FillRect]<br>mov ecx, dword[esi+0x2c]<br>lea edx, [esp+0x40]<br>push ecx<br>push edx<br>push edi<br>call dword[sym.imp.USER32.dll_FrameRect]<br>mov dword[esp+0x10], 0<br>test ebx, ebx<br>jl 0x3078376e<br>mov eax, ebx<br>mov ecx, dword[esp+0x18]<br>shl eax, 4<br>mov ebp, dword[eax+ecx+8]<br>cmp ebp, dword[esp+0x10]<br>jle 0x3078375a<br>mov eax, dword[esp+0x1c]<br>mov ecx, dword[esp+0x14]<br>add eax, ebp<br>lea edx, [esp+0x40]<br>mov dword[esp+0x40], ebp<br>mov dword[esp+0x48], eax<br>mov eax, dword[esp+0x24]<br>mov dword[esp+0x44], ecx<br>inc eax<br>mov ecx, dword[esi+0x28]<br>mov dword[esp+0x4c], eax<br>push ecx<br>push edx<br>push edi<br>call dword[sym.imp.USER32.dll_FillRect]<br>test byte[esi+8], 2<br>je 0x30783746<br>lea eax, [esp+0x30]<br>mov ecx, dword[esp+0x44]<br>mov edx, dword[esp+0x40]<br>push eax<br>push ecx<br>push edx<br>push edi<br>call dword[sym.imp.GDI32.dll_MoveToEx]<br>mov ecx, dword[esp+0x4c]<br>mov edx, dword[esp+0x40]<br>push ecx<br>push edx<br>push edi<br>call dword[sym.imp.GDI32.dll_LineTo]<br>lea ecx, [esp+0x30]<br>mov edx, dword[esp+0x44]<br>mov eax, dword[esp+0x48]<br>push ecx<br>push edx<br>dec eax<br>push eax<br>push edi<br>call dword[sym.imp.GDI32.dll_MoveToEx]<br>mov ecx, dword[esp+0x4c]<br>mov eax, dword[esp+0x48]<br>push ecx<br>dec eax<br>push eax<br>push edi<br>call dword[sym.imp.GDI32.dll_LineTo]<br>jmp 0x30783756<br>mov eax, dword[esi+0x2c]<br>lea ecx, [esp+0x40]<br>push eax<br>push ecx<br>push edi<br>call dword[sym.imp.USER32.dll_FrameRect]<br>mov dword[esp+0x10], ebp<br>push ebx<br>push esi<br>call fcn.30783b70<br>add esp, 8<br>mov ebx, eax<br>test ebx, ebx<br>jge 0x307836a8<br>mov eax, dword[esp+0x20]<br>mov ecx, dword[esp+0x24]<br>lea edx, [eax+ecx-1]<br>mov dword[esp+0x14], edx<br>inc dword[esp+0x2c]<br>mov eax, dword[esp+0x2c]<br>cmp eax, dword[esp+0x28]<br>jl 0x30783617<br>jmp 0x307838dd<br>test al, 2<br>je 0x307838dd<br>mov dword[esp+0x10], 0xffffffff<br>mov dword[esp+0x2c], 0<br>cmp dword[esp+0x24], 0<br>jle 0x307838dd<br>mov eax, dword[esp+0x2c]<br>push eax<br>push esi<br>call fcn.30783b30<br>add esp, 8<br>mov ebx, eax<br>test ebx, ebx<br>jl 0x307838cb<br>mov eax, ebx<br>mov ecx, dword[esp+0x18]<br>shl eax, 4<br>mov edx, dword[eax+ecx+8]<br>mov dword[esp+0x28], edx<br>cmp edx, dword[esp+0x10]<br>jle 0x307838cb<br>mov eax, dword[esp+0x2c]<br>push eax<br>push esi<br>call fcn.30783db0<br>add esp, 8<br>test eax, eax<br>jle 0x3078383f<br>mov ecx, dword[esp+0x28]<br>mov eax, dword[esp+0x1c]<br>add eax, ecx<br>mov dword[esp+0x40], ecx<br>mov ecx, dword[esi+0x28]<br>mov dword[esp+0x48], eax<br>mov eax, dword[esi+0x44]<br>push ecx<br>inc eax<br>lea edx, [esp+0x44]<br>mov dword[esp+0x50], eax<br>push edx<br>mov dword[esp+0x4c], 0xffffffff<br>push edi<br>call dword[sym.imp.USER32.dll_FillRect]<br>mov ecx, dword[esi+0x2c]<br>lea edx, [esp+0x40]<br>push ecx<br>push edx<br>push edi<br>call dword[sym.imp.USER32.dll_FrameRect]<br>test byte[esi+8], 1<br>jne 0x307838cb<br>mov dword[esp+0x14], 0<br>test ebx, ebx<br>jl 0x307838bb<br>mov eax, ebx<br>mov ecx, dword[esp+0x18]<br>shl eax, 4<br>mov ebp, dword[eax+ecx+0xc]<br>cmp ebp, dword[esp+0x14]<br>jle 0x307838ab<br>mov eax, dword[esp+0x20]<br>mov ecx, dword[esp+0x10]<br>add eax, ebp<br>lea edx, [esp+0x40]<br>mov dword[esp+0x44], ebp<br>mov dword[esp+0x4c], eax<br>mov eax, dword[esp+0x28]<br>mov dword[esp+0x40], ecx<br>inc eax<br>mov ecx, dword[esi+0x28]<br>mov dword[esp+0x48], eax<br>push ecx<br>push edx<br>push edi<br>call dword[sym.imp.USER32.dll_FillRect]<br>mov ecx, dword[esi+0x2c]<br>lea edx, [esp+0x40]<br>push ecx<br>push edx<br>push edi<br>call dword[sym.imp.USER32.dll_FrameRect]<br>mov dword[esp+0x14], ebp<br>push ebx<br>push esi<br>call fcn.30783bb0<br>add esp, 8<br>mov ebx, eax<br>test ebx, ebx<br>jge 0x30783855<br>mov eax, dword[esp+0x1c]<br>mov ecx, dword[esp+0x28]<br>lea edx, [eax+ecx-1]<br>mov dword[esp+0x10], edx<br>inc dword[esp+0x2c]<br>mov eax, dword[esp+0x2c]<br>cmp eax, dword[esp+0x24]<br>jl 0x307837b8<br>push edi<br>mov eax, dword[esi]<br>push eax<br>call dword[sym.imp.USER32.dll_ReleaseDC]<br>pop ebp<br>pop edi<br>pop esi<br>pop ebx<br>add esp, 0x40<br>ret <br><eoc> ', 'null'],
[99.94019317626953, 61.23568344116211, '<b><a href="/report/fcn.00428a50@1123b7aa5760238fe93045e585b8234c">fcn.00428a50</a><br>@1123b7aa5760238fe93045e585b8234c</b><br>push ebp<br>mov ebp, esp<br>and esp, 0xfffffff8<br>sub esp, 0xa8<br>mov eax, dword[0x437388]<br>push esi<br>mov esi, dword[sym.imp.KERNEL32.dll_GetVersionExA]<br>push edi<br>mov dword[esp+0xac], eax<br>xor eax, eax<br>mov ecx, 0x27<br>lea edi, [esp+8]<br>rep stosd<br>lea eax, [esp+8]<br>push eax<br>mov dword[esp+0xc], 0x9c<br>call esi<br>test eax, eax<br>jne 0x428aba<br>lea ecx, [esp+8]<br>push ecx<br>mov dword[esp+0xc], 0x94<br>call esi<br>test eax, eax<br>jne 0x428aba<br>mov edx, dword[ebp+8]<br>mov byte[edx], al<br>mov ecx, dword[esp+0xac]<br>call fcn.0041e6b7<br>pop edi<br>pop esi<br>mov esp, ebp<br>pop ebp<br>ret <br>mov eax, dword[esp+0x18]<br>sub eax, 0<br>je 0x428b5c<br>dec eax<br>je 0x428b04<br>dec eax<br>jne 0x428b6e<br>mov eax, dword[esp+0x10]<br>mov ecx, dword[esp+0xc]<br>mov edx, dword[ebp+8]<br>push eax<br>push ecx<br>push str.Windows_NT__d._d<br>push edx<br>call dword[sym.imp.USER32.dll_wsprintfA]<br>add esp, 0x10<br>mov eax, 1<br>mov ecx, dword[esp+0xac]<br>call fcn.0041e6b7<br>pop edi<br>pop esi<br>mov esp, ebp<br>pop ebp<br>ret <br>cmp dword[esp+0xc], 4<br>jne 0x428b6e<br>mov eax, dword[esp+0x10]<br>test eax, eax<br>mov esi, dword[ebp+8]<br>mov edi, dword[sym.imp.USER32.dll_wsprintfA]<br>jne 0x428b30<br>push str.Windows_95<br>push esi<br>call edi<br>mov eax, dword[esp+0x14]<br>add esp, 8<br>cmp eax, 4<br>jne 0x428b6e<br>cmp dword[esp+0x10], 0xa<br>jne 0x428b4b<br>push str.Windows_98<br>push esi<br>call edi<br>mov eax, dword[esp+0x14]<br>add esp, 8<br>cmp eax, 4<br>jne 0x428b6e<br>cmp dword[esp+0x10], 0x5a<br>jne 0x428b6e<br>push str.Windows_Me<br>push esi<br>call edi<br>jmp 0x428b6b<br>mov eax, dword[ebp+8]<br>push str.Windows<br>push eax<br>call dword[sym.imp.USER32.dll_wsprintfA]<br>add esp, 8<br>mov ecx, dword[esp+0xac]<br>mov eax, 1<br>call fcn.0041e6b7<br>pop edi<br>pop esi<br>mov esp, ebp<br>pop ebp<br>ret <br><eoc> ', 'null'],
[25.66424560546875, -42.2310905456543, '<b><a href="/report/fcn.0043d0a0@3dfcfb1d918b690c00de324bcfcdc082">fcn.0043d0a0</a><br>@3dfcfb1d918b690c00de324bcfcdc082</b><br>push ebp<br>mov ebp, esp<br>and esp, 0xfffffff8<br>sub esp, 0x18<br>mov eax, dword[0x48800c]<br>xor eax, esp<br>mov dword[esp+0x14], eax<br>mov eax, ecx<br>push esi<br>mov esi, dword[sym.imp.mfc120u.dll_Ordinal_14094]<br>push edi<br>lea edi, [eax+0x2f50]<br>mov dword[esp+8], eax<br>push 0<br>mov ecx, edi<br>mov byte[eax+0xb8cc], 0<br>mov byte[eax+0xb8b4], 1<br>call esi<br>mov ecx, dword[esp+8]<br>push 5<br>add ecx, 0x3920<br>call esi<br>mov esi, dword[esp+8]<br>lea eax, [esp+0xc]<br>push eax<br>xorps xmm0, xmm0<br>movdqu xmmword[esp+0x10], xmm0<br>push dword[esi+0x20]<br>call dword[sym.imp.USER32.dll_GetWindowRect]<br>mov ecx, dword[esi+0xb8b8]<br>mov eax, dword[esp+0x10]<br>push 0xa9<br>push edi<br>lea eax, [eax+ecx*2]<br>mov dword[esp+0x20], eax<br>call dword[sym.imp.FTMod.dll_void___cdecl_SetBmpFlatBTStyle_class_CBCGPButton___unsigned_int_]<br>mov eax, dword[0x48c060]<br>add esp, 8<br>mov esi, dword[sym.imp.USER32.dll_LockWindowUpdate]<br>push dword[eax+0x20]<br>call esi<br>mov eax, dword[esp+0x18]<br>sub eax, dword[esp+0x10]<br>mov edi, dword[esp+8]<br>mov ecx, edi<br>push 0<br>push 0x16<br>push eax<br>mov eax, dword[esp+0x20]<br>sub eax, dword[esp+0x18]<br>mov edx, dword[edi]<br>push eax<br>push 0<br>push 0<br>push 0<br>call dword[edx+0x250]<br>mov ecx, dword[0x48c060]<br>push 0<br>push 0<br>lea eax, [ecx+0xb060]<br>push eax<br>call dword[sym.imp.BCGCBPRO2500u120.dll_public:_void___thiscall_CBCGPFrameWnd::DockControlBar_class_CBCGPBaseControlBar___unsigned_int__struct_tagRECT_const__]<br>mov eax, dword[edi]<br>mov ecx, edi<br>call dword[eax+0x3e4]<br>push 0<br>call esi<br>push 0x105<br>push 0<br>push 0<br>push dword[edi+0x20]<br>call dword[sym.imp.USER32.dll_RedrawWindow]<br>mov ecx, dword[0x48a01c]<br>test ecx, ecx<br>je 0x43d1a6<br>call dword[sym.imp.mfc120u.dll_Ordinal_13404]<br>mov ecx, dword[esp+0x1c]<br>pop edi<br>pop esi<br>xor ecx, esp<br>call fcn.0044e61f<br>mov esp, ebp<br>pop ebp<br>ret <br><eoc> ', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
and esp, 0xfffffff8
push 0xffffffffffffffff
push 0x453da8
mov eax, dword
push eax
sub esp, 0x9c
mov eax, dword[0x48800c]
xor eax, esp
mov dword[esp+0x94], eax
push esi
push edi
mov eax, dword[0x48800c]
xor eax, esp
push eax
lea eax, [esp+0xa8]
mov dword
mov edi, ecx
mov dword[esp+0x14], edi
mov edx, dword[0x48d9d0]
test edx, edx
je 0x420442
cmp dword[0x48d9d4], 0
je 0x420442
cmp word[edx], 0
jne 0x4204e0
lea ecx, [esp+0xc]
call dword[sym.imp.mfc120u.dll_Ordinal_296]
mov dword[esp+0xb0], 0
lea eax, [esp+0xc]
mov ecx, dword[0x48c060]
push dword[ecx+0xa3e4]
add ecx, 0xa220
push eax
call dword[sym.imp.FFUILib.dll_public:_int___thiscall_CFFShellTree::GetItemPath_class_ATL::CStringT_wchar_t__class_StrTraitMFC_DLL_wchar_t__class_ATL::ChTraitsCRT_wchar_t______struct__TREEITEM__const]
mov eax, dword[esp+0xc]
cmp dword[edi+0x3870], eax
je 0x4204b7
test eax, eax
je 0x4204a8
mov esi, eax
mov cx, word[esi]
add esi, 2
test cx, cx
jne 0x420486
mov edx, dword[edi+0x386c]
lea ecx, [edi+0x386c]
sub esi, eax
sar esi, 1
push eax
push esi
call dword[edx+4]
jmp 0x4204b7
mov eax, dword[edi+0x386c]
lea ecx, [edi+0x386c]
call dword[eax+8]
mov edi, dword[esp+0x14]
lea ecx, [esp+0xc]
mov dword[esp+0xb0], 0xffffffff
mov dword[edi+0x3868], 0
call dword[sym.imp.mfc120u.dll_Ordinal_1042]
mov edx, dword[0x48d9d0]
xor eax, eax
mov ecx, 0x48da2c
mov word[0x489f40], ax
test edx, edx
mov eax, 0x489f40
cmovne eax, edx
push eax
call fcn.00440450
test al, al
jne 0x42063a
mov dword[esp+0x18], vtable.ALT::TString_wchar_t__0__8_.0
mov dword[esp+0x1c], 0
mov dword[esp+0x20], 0
mov dword[esp+0x24], 0
mov dword[esp+0xb0], 1
mov ecx, dword[sym.imp.FTMod.dll_class_CMultiLanguage__gpMultiLanguage]
mov esi, dword[0x48d9d0]
push str.Do_you_want_to_create
mov ecx, dword[ecx]
call dword[sym.imp.FTMod.dll_public:_wchar_t_const____thiscall_CMultiLanguage::TranslateString_wchar_t_const__]
push eax
push esi
lea eax, [esp+0x20]
push str._s_n_s
push eax
call fcn.00402890
mov ecx, dword[sym.imp.FTMod.dll_class_CMultiLanguage__gpMultiLanguage]
add esp, 0x10
xor eax, eax
mov esi, 0x489f40
mov word[0x489f40], ax
mov eax, dword[esp+0x1c]
test eax, eax
mov ecx, dword[ecx]
push 0
push 0
push 0
push 4
push str.This_folder_isnt_exist
cmovne esi, eax
call dword[sym.imp.FTMod.dll_public:_wchar_t_const____thiscall_CMultiLanguage::TranslateString_wchar_t_const__]
push eax
mov eax, dword[0x48c060]
push esi
push dword[eax+0x20]
call dword[sym.imp.BCGCBPRO2500u120.dll_int___cdecl_BCGPMessageBox_struct_HWND_____wchar_t_const___wchar_t_const___unsigned_int__wchar_t_const___int___wchar_t_const__]
add esp, 0x1c
cmp eax, 6
je 0x4205d4
mov eax, dword[esp+0x1c]
mov dword[esp+0x18], 0x45928c
test eax, eax
je 0x421110
cmp dword[esp+0x24], 0
je 0x421110
push eax
call dword[sym.imp.mfc120u.dll_Ordinal_1508]
add esp, 4
jmp 0x421110
xor eax, eax
mov edx, 0x489f40
mov word[0x489f40], ax
mov ecx, 0x48da2c
mov eax, dword[0x48d9d0]
test eax, eax
cmovne edx, eax
push edx
call fcn.00445e90
mov dword[esp+0xb0], 0xffffffff
mov eax, dword[esp+0x1c]
mov dword[esp+0x18], 0x45928c
test eax, eax
je 0x42062a
cmp dword[esp+0x24], 0
je 0x420622
push eax
call dword[sym.imp.mfc120u.dll_Ordinal_1508]
add esp, 4
mov dword[esp+0x1c], 0
mov dword[esp+0x20], 0
mov dword[esp+0x24], 0
mov esi, dword[0x48a01c]
mov ecx, dword[0x48d9d0]
mov edx, dword[esi+0x16e4]
call fcn.0040aed0
test eax, eax
je 0x421110
cmp byte[edi+0x389c], 0
je 0x4208d1
cmp dword[0x48c058], 0
je 0x4208d1
mov esi, dword[0x48a018]
xor edx, edx
cmp dword[0x48d9c8], 1
sete dl
mov eax, dword[esi+0x335c]
mov dword[esp+0x14], edx
test eax, eax
je 0x420746
cmp dword[eax+0xb0], 0
jne 0x4206ad
cmp dword[eax+0xb4], 0
je 0x420746
lea ecx, [esp+0x40]
call fcn.00410d10
push ecx
lea eax, [esi+0x18f0]
mov dword[esp+0xb4], 2
push eax
lea eax, [esp+0x14]
push eax
lea ecx, [esp+0x4c]
call fcn.00422d30
mov eax, dword[0x48a018]
mov ecx, dword[esp+0xc]
mov eax, dword[eax+0x335c]
add eax, 0xb0
lea ecx, [ecx+0x24]
push eax
call fcn.004235e0
mov ecx, dword[0x48a01c]
xor eax, eax
mov word[0x489f40], ax
mov edx, 0x489f40
mov eax, dword[0x48d9d0]
test eax, eax
cmovne edx, eax
mov eax, dword[ecx+0x15b0]
add ecx, 0x15b0
push edx
lea edx, [esp+0x44]
mov eax, dword[eax+0x44]
push edx
call eax
lea ecx, [esp+0x40]
mov byte[esp+0x2b], al
mov dword[esp+0xb0], 0xffffffff
call fcn.00410d40
mov al, byte[esp+0x2b]
jmp 0x420788
lea ecx, [esp+0x60]
call fcn.00443040
xor eax, eax
mov word[0x489f40], ax
mov eax, dword[esi+0x18f4]
test eax, eax
mov esi, 0x489f40
mov ecx, esi
cmovne ecx, eax
xor eax, eax
push ecx
mov word[0x489f40], ax
mov eax, dword[0x48d9d0]
test eax, eax
push edx
push ecx
cmovne esi, eax
lea ecx, [esp+0x6c]
push esi
call fcn.00443570
test al, al
je 0x4208c5
mov esi, dword[esp+0x14]
test esi, esi
je 0x4207a9
mov eax, dword[0x48a018]
push ecx
push dword[eax+0x18ec]
call fcn.0042c9c0
mov eax, dword[0x48c058]
lea ecx, [esp+0x80]
xorps xmm0, xmm0
push ecx
movdqu xmmword[esp+0x84], xmm0
push dword[eax+0x2410]
call dword[sym.imp.USER32.dll_GetWindowRect]
mov eax, dword[0x48c058]
mov eax, dword[eax+0x36a0]
movdqu xmm1, xmmword[eax+0x34]
movdqa xmm0, xmm1
psrldq xmm0, 4
movd eax, xmm0
push eax
movd eax, xmm1
push eax
lea eax, [esp+0x88]
push eax
call dword[sym.imp.USER32.dll_OffsetRect]
lea ecx, [esp+0x10]
call dword[sym.imp.mfc120u.dll_Ordinal_296]
lea ecx, [esp+0xc]
mov dword[esp+0xb0], 3
call dword[sym.imp.mfc120u.dll_Ordinal_296]
mov byte[esp+0xb0], 4
mov ecx, dword[sym.imp.FTMod.dll_class_CMultiLanguage__gpMultiLanguage]
mov ecx, dword[ecx]
test esi, esi
je 0x420839
push str.Move_to
jmp 0x42083e
push str.Copy_to
call dword[sym.imp.FTMod.dll_public:_wchar_t_const____thiscall_CMultiLanguage::TranslateString_wchar_t_const__]
push eax
lea ecx, [esp+0x10]
call dword[sym.imp.mfc120u.dll_Ordinal_1520]
mov ecx, dword[0x48a018]
push dword[0x48d9d0]
push dword[esp+0x10]
mov ecx, dword[ecx+0x18f4]
call fcn.00408100
push eax
lea eax, [esp+0x1c]
push str._s_r_n_s__s
push eax
call dword[sym.imp.mfc120u.dll_Ordinal_4772]
mov eax, dword[esp+0x94]
add esp, 0x14
mov dword[esp+0x2c], eax
mov eax, dword[esp+0x84]
add eax, 0xffffffb0
mov dword[esp+0x30], eax
lea eax, [esp+0x2c]
push eax
push dword[0x48c044]
push 1
push dword[esp+0x1c]
call dword[sym.imp.FFUILib.dll_void___cdecl_PopupNotifyWnd_wchar_t_const___int__struct_HICON_____class_CPoint__]
add esp, 0x10
lea ecx, [esp+0xc]
call dword[sym.imp.mfc120u.dll_Ordinal_1042]
lea ecx, [esp+0x10]
call dword[sym.imp.mfc120u.dll_Ordinal_1042]
mov byte[edi+0x389c], 0
jmp 0x421110
xor eax, eax
mov dword[esp+0x10], 0
xor edi, edi
cmp dword[0x48d9c8], 1
sete al
cmp byte[esi+0x9b62], 0
mov dword[esp+0xc], eax
je 0x420cba
lea eax, [esp+0x60]
mov dword[esp+0x6c], edi
mov byte[esp+0x70], 0
mov dword[esp+0x78], eax
mov dword[esp+0x64], eax
mov dword[esp+0x60], eax
mov dword[esp+0x68], eax
mov dword[esp+0x74], eax
mov dword[esp+0x7c], edi
lea eax, [esi+0xe4]
mov dword[esp+0xb0], 5
push eax
call dword[sym.imp.MSVCP120.dll__Mtx_lock]
add esp, 4
test eax, eax
je 0x420946
push eax
call dword[sym.imp.MSVCP120.dll_void___cdecl_std::_Throw_C_error_int_]
add esp, 4
mov ecx, dword[0x48a01c]
mov esi, dword[ecx+0x15d0]
mov esi, dword[esi+4]
cmp esi, dword[ecx+0x15d0]
je 0x420a09
test byte[esi+0x2c], 1
je 0x4209f9
mov eax, dword[ecx]
lea edx, [esp+0x18]
push edi
push edx
call dword[eax+0x194]
push ecx
lea eax, [esp+0x1c]
mov byte[esp+0xb4], 6
push eax
lea eax, [esp+0x1c]
push eax
lea ecx, [esp+0x6c]
call fcn.00422d30
lea ecx, [esi+0x3c]
push ecx
mov eax, dword[eax]
lea ecx, [eax+0x24]
call fcn.004235e0
cmp dword[esp+0xc], 0
jne 0x4209ae
and dword[esi+0x2c], 0xfffffffe
inc dword[esp+0x10]
mov byte[esp+0xb0], 5
mov eax, dword[esp+0x1c]
mov dword[esp+0x18], 0x45928c
test eax, eax
je 0x4209e3
cmp dword[esp+0x24], 0
je 0x4209db
push eax
call dword[sym.imp.mfc120u.dll_Ordinal_1508]
add esp, 4
mov dword[esp+0x1c], 0
mov ecx, dword[0x48a01c]
mov dword[esp+0x20], 0
mov dword[esp+0x24], 0
mov esi, dword[esi+4]
inc edi
cmp esi, dword[ecx+0x15d0]
jne 0x420961
mov esi, dword[ecx+0x15e8]
mov esi, dword[esi+4]
cmp esi, dword[ecx+0x15e8]
je 0x420acb
mov edi, edi
test byte[esi+0x58], 1
je 0x420abb
mov eax, dword[ecx]
lea edx, [esp+0x2c]
push edi
push edx
call dword[eax+0x194]
push ecx
lea eax, [esp+0x30]
mov byte[esp+0xb4], 7
push eax
lea eax, [esp+0x1c]
push eax
lea ecx, [esp+0x6c]
call fcn.00422d30
lea ecx, [esi+0xb8]
push ecx
mov eax, dword[eax]
lea ecx, [eax+0x24]
call fcn.004235e0
cmp dword[esp+0xc], 0
jne 0x420a70
and dword[esi+0x58], 0xfffffffe
inc dword[esp+0x10]
mov byte[esp+0xb0], 5
mov eax, dword[esp+0x30]
mov dword[esp+0x2c], 0x45928c
test eax, eax
je 0x420aa5
cmp dword[esp+0x38], 0
je 0x420a9d
push eax
call dword[sym.imp.mfc120u.dll_Ordinal_1508]
add esp, 4
mov dword[esp+0x30], 0
mov ecx, dword[0x48a01c]
mov dword[esp+0x34], 0
mov dword[esp+0x38], 0
mov esi, dword[esi+4]
inc edi
cmp esi, dword[ecx+0x15e8]
jne 0x420a20
cmp dword[esp+0x7c], 0
jne 0x420bc9
mov eax, dword[ecx]
push 0
push 0
push 1
mov eax, dword[eax+0x19c]
push 0
call eax
mov edi, eax
test edi, edi
jns 0x420b16
mov dword[esp+0xb0], 0xffffffff
cmp dword[esp+0x7c], 0
je 0x421110
push dword[esp+0x74]
lea ecx, [esp+0x64]
call fcn.00410d80
jmp 0x421110
mov ecx, dword[0x48a01c]
lea edx, [esp+0x80]
push edi
push edx
mov eax, dword[ecx]
call dword[eax+0x194]
push ecx
lea eax, [esp+0x84]
mov byte[esp+0xb4], 8
push eax
lea eax, [esp+0x1c]
push eax
lea ecx, [esp+0x6c]
call fcn.00422d30
mov ecx, dword[0x48a01c]
push edi
mov esi, dword[eax]
mov eax, dword[ecx]
mov eax, dword[eax+0x300]
call eax
test eax, eax
je 0x420b70
push eax
lea ecx, [esi+0x24]
call fcn.004235e0
inc dword[esp+0x10]
mov byte[esp+0xb0], 5
mov eax, dword[esp+0x84]
mov dword[esp+0x80], 0x45928c
test eax, eax
je 0x420bad
cmp dword[esp+0x8c], 0
je 0x420ba2
push eax
call dword[sym.imp.mfc120u.dll_Ordinal_1508]
add esp, 4
mov dword[esp+0x84], 0
mov ecx, dword[0x48a01c]
mov dword[esp+0x88], 0
mov dword[esp+0x8c], 0
mov eax, dword[ecx]
call dword[eax+0x2c4]
mov eax, dword[0x48a01c]
add eax, 0xe4
push eax
call dword[sym.imp.MSVCP120.dll__Mtx_unlock]
add esp, 4
test eax, eax
je 0x420bf3
push eax
call dword[sym.imp.MSVCP120.dll_void___cdecl_std::_Throw_C_error_int_]
add esp, 4
mov ecx, dword[0x48a01c]
xor eax, eax
mov word[0x489f40], ax
mov edx, 0x489f40
mov eax, dword[0x48d9d0]
test eax, eax
cmovne edx, eax
mov eax, dword[ecx+0x15b0]
add ecx, 0x15b0
push edx
lea edx, [esp+0x64]
push edx
call dword[eax+0x44]
mov dword[esp+0xb0], 0xffffffff
cmp dword[esp+0x7c], 0
je 0x420c44
push dword[esp+0x74]
lea ecx, [esp+0x64]
call fcn.00410d80
mov edi, dword[esp+0xc]
mov esi, dword[esp+0x10]
test esi, esi
jle 0x421110
mov eax, dword[0x48c060]
lea ecx, [esp+0x90]
xorps xmm0, xmm0
push ecx
movdqu xmmword[esp+0x94], xmm0
push dword[eax+0x141f0]
call dword[sym.imp.USER32.dll_GetWindowRect]
lea ecx, [esp+0x14]
call dword[sym.imp.mfc120u.dll_Ordinal_296]
lea ecx, [esp+0x3c]
mov dword[esp+0xb0], 0xd
call dword[sym.imp.mfc120u.dll_Ordinal_296]
mov byte[esp+0xb0], 0xe
mov ecx, dword[sym.imp.FTMod.dll_class_CMultiLanguage__gpMultiLanguage]
mov ecx, dword[ecx]
test edi, edi
je 0x421004
push str.Move_to
jmp 0x421009
lea eax, [esp+0x40]
mov dword[esp+0x4c], edi
mov byte[esp+0x50], 0
mov dword[esp+0x58], eax
mov dword[esp+0x44], eax
mov dword[esp+0x40], eax
mov dword[esp+0x48], eax
mov dword[esp+0x54], eax
mov dword[esp+0x5c], edi
lea ecx, [esp+0x60]
mov dword[esp+0xb0], 9
call fcn.00443040
lea eax, [esi+0xe4]
push eax
call dword[sym.imp.MSVCP120.dll__Mtx_lock]
add esp, 4
test eax, eax
je 0x420d11
push eax
call dword[sym.imp.MSVCP120.dll_void___cdecl_std::_Throw_C_error_int_]
add esp, 4
mov ecx, dword[0x48a01c]
mov esi, dword[ecx+0x15d0]
mov esi, dword[esi+4]
cmp esi, dword[ecx+0x15d0]
je 0x420de2
lea esp, [esp]
test byte[esi+0x2c], 1
je 0x420dd2
mov eax, dword[ecx]
lea edx, [esp+0x80]
push edi
push edx
call dword[eax+0x194]
push ecx
lea eax, [esp+0x84]
mov byte[esp+0xb4], 0xa
push eax
lea eax, [esp+0x1c]
push eax
lea ecx, [esp+0x4c]
call fcn.00422e50
cmp dword[esp+0xc], 0
jne 0x420d75
and dword[esi+0x2c], 0xfffffffe
inc dword[esp+0x10]
mov byte[esp+0xb0], 9
mov eax, dword[esp+0x84]
mov dword[esp+0x80], 0x45928c
test eax, eax
je 0x420db6
cmp dword[esp+0x8c], 0
je 0x420dab
push eax
call dword[sym.imp.mfc120u.dll_Ordinal_1508]
add esp, 4
mov dword[esp+0x84], 0
mov ecx, dword[0x48a01c]
mov dword[esp+0x88], 0
mov dword[esp+0x8c], 0
mov esi, dword[esi+4]
inc edi
cmp esi, dword[ecx+0x15d0]
jne 0x420d30
mov esi, dword[ecx+0x15e8]
mov esi, dword[esi+4]
cmp esi, dword[ecx+0x15e8]
je 0x420e9a
jmp 0x420e00
test byte[esi+0x58], 1
je 0x420e8a
mov eax, dword[ecx]
lea edx, [esp+0x18]
push edi
push edx
call dword[eax+0x194]
push ecx
lea eax, [esp+0x1c]
mov byte[esp+0xb4], 0xb
push eax
lea eax, [esp+0x1c]
push eax
lea ecx, [esp+0x4c]
call fcn.00422e50
cmp dword[esp+0xc], 0
jne 0x420e3f
and dword[esi+0x58], 0xfffffffe
inc dword[esp+0x10]
mov byte[esp+0xb0], 9
mov eax, dword[esp+0x1c]
mov dword[esp+0x18], 0x45928c
test eax, eax
je 0x420e74
cmp dword[esp+0x24], 0
je 0x420e6c
push eax
call dword[sym.imp.mfc120u.dll_Ordinal_1508]
add esp, 4
mov dword[esp+0x1c], 0
mov ecx, dword[0x48a01c]
mov dword[esp+0x20], 0
mov dword[esp+0x24], 0
mov esi, dword[esi+4]
inc edi
cmp esi, dword[ecx+0x15e8]
jne 0x420e00
cmp dword[esp+0x5c], 0
jne 0x420f60
mov eax, dword[ecx]
push 0
push 0
push 1
mov eax, dword[eax+0x19c]
push 0
call eax
mov edx, eax
test edx, edx
jns 0x420ee5
mov dword[esp+0xb0], 0xffffffff
cmp dword[esp+0x5c], 0
je 0x421110
push dword[esp+0x54]
lea ecx, [esp+0x44]
call fcn.0040acb0
jmp 0x421110
mov ecx, dword[0x48a01c]
push edx
lea edx, [esp+0x30]
push edx
mov eax, dword[ecx]
call dword[eax+0x194]
push ecx
lea eax, [esp+0x30]
mov byte[esp+0xb4], 0xc
push eax
lea eax, [esp+0x1c]
push eax
lea ecx, [esp+0x4c]
call fcn.00422e50
inc dword[esp+0x10]
mov byte[esp+0xb0], 9
mov eax, dword[esp+0x30]
mov dword[esp+0x2c], 0x45928c
test eax, eax
je 0x420f4a
cmp dword[esp+0x38], 0
je 0x420f42
push eax
call dword[sym.imp.mfc120u.dll_Ordinal_1508]
add esp, 4
mov dword[esp+0x30], 0
mov ecx, dword[0x48a01c]
mov dword[esp+0x34], 0
mov dword[esp+0x38], 0
mov eax, dword[ecx]
call dword[eax+0x2c4]
mov eax, dword[0x48a01c]
add eax, 0xe4
push eax
call dword[sym.imp.MSVCP120.dll__Mtx_unlock]
add esp, 4
test eax, eax
je 0x420f8a
push eax
call dword[sym.imp.MSVCP120.dll_void___cdecl_std::_Throw_C_error_int_]
add esp, 4
mov edi, dword[esp+0xc]
xor eax, eax
mov word[0x489f40], ax
mov esi, 0x489f40
mov eax, dword[0x48d9d0]
mov ecx, esi
test eax, eax
push 1
cmovne ecx, eax
lea eax, [esp+0x44]
push edi
push eax
push ecx
lea ecx, [esp+0x70]
call fcn.00443310
mov ecx, dword[0x48a01c]
xor eax, eax
mov word[0x489f40], ax
mov eax, dword[0x48d9d0]
test eax, eax
push 1
cmovne esi, eax
mov eax, dword[ecx]
push esi
call dword[eax+0x270]
mov dword[esp+0xb0], 0xffffffff
cmp dword[esp+0x5c], 0
je 0x420c48
push dword[esp+0x54]
lea ecx, [esp+0x44]
call fcn.0040acb0
jmp 0x420c48
push str.Copy_to
call dword[sym.imp.FTMod.dll_public:_wchar_t_const____thiscall_CMultiLanguage::TranslateString_wchar_t_const__]
push eax
lea ecx, [esp+0x40]
call dword[sym.imp.mfc120u.dll_Ordinal_1520]
push dword[0x48d9d0]
mov ecx, dword[sym.imp.FTMod.dll_class_CMultiLanguage__gpMultiLanguage]
push dword[esp+0x40]
push str.Files_Folders_
mov ecx, dword[ecx]
call dword[sym.imp.FTMod.dll_public:_wchar_t_const____thiscall_CMultiLanguage::TranslateString_wchar_t_const__]
push eax
push esi
lea eax, [esp+0x24]
push str._d__s_r_n_s__s
push eax
call dword[sym.imp.mfc120u.dll_Ordinal_4772]
mov eax, dword[esp+0xa8]
mov dword[esp+0x30], eax
mov eax, dword[esp+0xb4]
mov dword[esp+0x34], eax
lea eax, [esp+0x30]
push eax
push dword[0x48c044]
push 1
push dword[esp+0x38]
call dword[sym.imp.FFUILib.dll_void___cdecl_PopupNotifyWnd_wchar_t_const___int__struct_HICON_____class_CPoint__]
add esp, 0x28
test edi, edi
je 0x4210e5
mov ecx, dword[0x48a01c]
push 1
mov eax, dword[ecx]
mov eax, dword[eax+0x2c0]
call eax
test eax, eax
jne 0x4210c2
mov ecx, dword[0x48a01c]
push 0
push 0
push 1
mov eax, dword[ecx]
push 0
mov eax, dword[eax+0x19c]
call eax
test eax, eax
js 0x4210c2
mov ecx, dword[0x48a01c]
push 1
push 0
push eax
mov edx, dword[ecx]
call dword[edx+0x2bc]
mov ecx, dword[0x48a01c]
mov eax, dword[ecx]
call dword[eax+0x1b0]
mov ecx, dword[0x48c060]
push 0
lea ecx, [ecx+0xa598]
call fcn.00423bc0
jmp 0x4210fc
mov eax, dword[0x48a01c]
push 0
push 0
push 0xc00
push dword[eax+0x20]
call dword[sym.imp.USER32.dll_PostMessageW]
lea ecx, [esp+0x3c]
call dword[sym.imp.mfc120u.dll_Ordinal_1042]
lea ecx, [esp+0x14]
call dword[sym.imp.mfc120u.dll_Ordinal_1042]
mov ecx, dword[esp+0xa8]
mov dword
pop ecx
pop edi
pop esi
mov ecx, dword[esp+0x94]
xor ecx, esp
call fcn.0044e61f
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/3dfcfb1d918b690c00de324bcfcdc082