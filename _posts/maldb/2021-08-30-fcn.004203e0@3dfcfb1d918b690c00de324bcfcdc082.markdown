---
layout: post
title:  "fcn.004203e0 @ 3dfcfb1d918b690c00de324bcfcdc082"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.004203e0
- **Origin (md5):** 3dfcfb1d918b690c00de324bcfcdc082
- **VirusTotal:** [virustotal.com/gui/file/3dfcfb1d918b690c00de324bcfcdc082][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.004203e0@3dfcfb1d918b690c00de324bcfcdc082">fcn.004203e0</a><br>@3dfcfb1d918b690c00de324bcfcdc082</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
and esp, 0xfffffff8
push 0xffffffffffffffff
push 0x453da8
mov eax, dword
push eax
sub esp, 0x9c
mov eax, dword[0x48800c]
xor eax, esp
mov dword[esp+0x94], eax
push esi
push edi
mov eax, dword[0x48800c]
xor eax, esp
push eax
lea eax, [esp+0xa8]
mov dword
mov edi, ecx
mov dword[esp+0x14], edi
mov edx, dword[0x48d9d0]
test edx, edx
je off.b98
cmp dword[0x48d9d4], 0
je off.b98
cmp word[edx], 0
jne off.b256
lea ecx, [esp+0xc]
call dword[sym.imp.mfc120u.dll_Ordinal_296]
mov dword[esp+0xb0], 0
lea eax, [esp+0xc]
mov ecx, dword[0x48c060]
push dword[ecx+0xa3e4]
add ecx, 0xa220
push eax
call dword[sym.imp.FFUILib.dll_public:_int___thiscall_CFFShellTree::GetItemPath_class_ATL::CStringT_wchar_t__class_StrTraitMFC_DLL_wchar_t__class_ATL::ChTraitsCRT_wchar_t______struct__TREEITEM__const]
mov eax, dword[esp+0xc]
cmp dword[edi+0x3870], eax
je off.b215
test eax, eax
je off.b200
mov esi, eax
mov cx, word[esi]
add esi, 2
test cx, cx
jne off.b166
mov edx, dword[edi+0x386c]
lea ecx, [edi+0x386c]
sub esi, eax
sar esi, 1
push eax
push esi
call dword[edx+4]
jmp off.b215
mov eax, dword[edi+0x386c]
lea ecx, [edi+0x386c]
call dword[eax+8]
mov edi, dword[esp+0x14]
lea ecx, [esp+0xc]
mov dword[esp+0xb0], 0xffffffff
mov dword[edi+0x3868], 0
call dword[sym.imp.mfc120u.dll_Ordinal_1042]
mov edx, dword[0x48d9d0]
xor eax, eax
mov ecx, 0x48da2c
mov word[0x489f40], ax
test edx, edx
mov eax, 0x489f40
cmovne eax, edx
push eax
call fcn.00440450
test al, al
jne off.b602
mov dword[esp+0x18], vtable.ALT::TString_wchar_t__0__8_.0
mov dword[esp+0x1c], 0
mov dword[esp+0x20], 0
mov dword[esp+0x24], 0
mov dword[esp+0xb0], 1
mov ecx, dword[sym.imp.FTMod.dll_class_CMultiLanguage__gpMultiLanguage]
mov esi, dword[0x48d9d0]
push str.Do_you_want_to_create
mov ecx, dword[ecx]
call dword[sym.imp.FTMod.dll_public:_wchar_t_const____thiscall_CMultiLanguage::TranslateString_wchar_t_const__]
push eax
push esi
lea eax, [esp+0x20]
push str._s_n_s
push eax
call fcn.00402890
mov ecx, dword[sym.imp.FTMod.dll_class_CMultiLanguage__gpMultiLanguage]
add esp, 0x10
xor eax, eax
mov esi, 0x489f40
mov word[0x489f40], ax
mov eax, dword[esp+0x1c]
test eax, eax
mov ecx, dword[ecx]
push 0
push 0
push 0
push 4
push str.This_folder_isnt_exist
cmovne esi, eax
call dword[sym.imp.FTMod.dll_public:_wchar_t_const____thiscall_CMultiLanguage::TranslateString_wchar_t_const__]
push eax
mov eax, dword[0x48c060]
push esi
push dword[eax+0x20]
call dword[sym.imp.BCGCBPRO2500u120.dll_int___cdecl_BCGPMessageBox_struct_HWND_____wchar_t_const___wchar_t_const___unsigned_int__wchar_t_const___int___wchar_t_const__]
add esp, 0x1c
cmp eax, 6
je off.b500
mov eax, dword[esp+0x1c]
mov dword[esp+0x18], 0x45928c
test eax, eax
je off.b3376
cmp dword[esp+0x24], 0
je off.b3376
push eax
call dword[sym.imp.mfc120u.dll_Ordinal_1508]
add esp, 4
jmp off.b3376
xor eax, eax
mov edx, 0x489f40
mov word[0x489f40], ax
mov ecx, 0x48da2c
mov eax, dword[0x48d9d0]
test eax, eax
cmovne edx, eax
push edx
call fcn.00445e90
mov dword[esp+0xb0], 0xffffffff
mov eax, dword[esp+0x1c]
mov dword[esp+0x18], 0x45928c
test eax, eax
je off.b586
cmp dword[esp+0x24], 0
je off.b578
push eax
call dword[sym.imp.mfc120u.dll_Ordinal_1508]
add esp, 4
mov dword[esp+0x1c], 0
mov dword[esp+0x20], 0
mov dword[esp+0x24], 0
mov esi, dword[0x48a01c]
mov ecx, dword[0x48d9d0]
mov edx, dword[esi+0x16e4]
call fcn.0040aed0
test eax, eax
je off.b3376
cmp byte[edi+0x389c], 0
je off.b1265
cmp dword[0x48c058], 0
je off.b1265
mov esi, dword[0x48a018]
xor edx, edx
cmp dword[0x48d9c8], 1
sete dl
mov eax, dword[esi+0x335c]
mov dword[esp+0x14], edx
test eax, eax
je off.b870
cmp dword[eax+0xb0], 0
jne off.b717
cmp dword[eax+0xb4], 0
je off.b870
lea ecx, [esp+0x40]
call fcn.00410d10
push ecx
lea eax, [esi+0x18f0]
mov dword[esp+0xb4], 2
push eax
lea eax, [esp+0x14]
push eax
lea ecx, [esp+0x4c]
call fcn.00422d30
mov eax, dword[0x48a018]
mov ecx, dword[esp+0xc]
mov eax, dword[eax+0x335c]
add eax, 0xb0
lea ecx, [ecx+0x24]
push eax
call fcn.004235e0
mov ecx, dword[0x48a01c]
xor eax, eax
mov word[0x489f40], ax
mov edx, 0x489f40
mov eax, dword[0x48d9d0]
test eax, eax
cmovne edx, eax
mov eax, dword[ecx+0x15b0]
add ecx, 0x15b0
push edx
lea edx, [esp+0x44]
mov eax, dword[eax+0x44]
push edx
call eax
lea ecx, [esp+0x40]
mov byte[esp+0x2b], al
mov dword[esp+0xb0], 0xffffffff
call fcn.00410d40
mov al, byte[esp+0x2b]
jmp off.b936
lea ecx, [esp+0x60]
call fcn.00443040
xor eax, eax
mov word[0x489f40], ax
mov eax, dword[esi+0x18f4]
test eax, eax
mov esi, 0x489f40
mov ecx, esi
cmovne ecx, eax
xor eax, eax
push ecx
mov word[0x489f40], ax
mov eax, dword[0x48d9d0]
test eax, eax
push edx
push ecx
cmovne esi, eax
lea ecx, [esp+0x6c]
push esi
call fcn.00443570
test al, al
je off.b1253
mov esi, dword[esp+0x14]
test esi, esi
je off.b969
mov eax, dword[0x48a018]
push ecx
push dword[eax+0x18ec]
call fcn.0042c9c0
mov eax, dword[0x48c058]
lea ecx, [esp+0x80]
xorps xmm0, xmm0
push ecx
movdqu xmmword[esp+0x84], xmm0
push dword[eax+0x2410]
call dword[sym.imp.USER32.dll_GetWindowRect]
mov eax, dword[0x48c058]
mov eax, dword[eax+0x36a0]
movdqu xmm1, xmmword[eax+0x34]
movdqa xmm0, xmm1
psrldq xmm0, 4
movd eax, xmm0
push eax
movd eax, xmm1
push eax
lea eax, [esp+0x88]
push eax
call dword[sym.imp.USER32.dll_OffsetRect]
lea ecx, [esp+0x10]
call dword[sym.imp.mfc120u.dll_Ordinal_296]
lea ecx, [esp+0xc]
mov dword[esp+0xb0], 3
call dword[sym.imp.mfc120u.dll_Ordinal_296]
mov byte[esp+0xb0], 4
mov ecx, dword[sym.imp.FTMod.dll_class_CMultiLanguage__gpMultiLanguage]
mov ecx, dword[ecx]
test esi, esi
je off.b1113
push str.Move_to_
jmp off.b1118
push str.Copy_to_
call dword[sym.imp.FTMod.dll_public:_wchar_t_const____thiscall_CMultiLanguage::TranslateString_wchar_t_const__]
push eax
lea ecx, [esp+0x10]
call dword[sym.imp.mfc120u.dll_Ordinal_1520]
mov ecx, dword[0x48a018]
push dword[0x48d9d0]
push dword[esp+0x10]
mov ecx, dword[ecx+0x18f4]
call fcn.00408100
push eax
lea eax, [esp+0x1c]
push str._s_r_n_s__s
push eax
call dword[sym.imp.mfc120u.dll_Ordinal_4772]
mov eax, dword[esp+0x94]
add esp, 0x14
mov dword[esp+0x2c], eax
mov eax, dword[esp+0x84]
add eax, 0xffffffb0
mov dword[esp+0x30], eax
lea eax, [esp+0x2c]
push eax
push dword[0x48c044]
push 1
push dword[esp+0x1c]
call dword[sym.imp.FFUILib.dll_void___cdecl_PopupNotifyWnd_wchar_t_const___int__struct_HICON_____class_CPoint__]
add esp, 0x10
lea ecx, [esp+0xc]
call dword[sym.imp.mfc120u.dll_Ordinal_1042]
lea ecx, [esp+0x10]
call dword[sym.imp.mfc120u.dll_Ordinal_1042]
mov byte[edi+0x389c], 0
jmp off.b3376
xor eax, eax
mov dword[esp+0x10], 0
xor edi, edi
cmp dword[0x48d9c8], 1
sete al
cmp byte[esi+0x9b62], 0
mov dword[esp+0xc], eax
je off.b2266
lea eax, [esp+0x60]
mov dword[esp+0x6c], edi
mov byte[esp+0x70], 0
mov dword[esp+0x78], eax
mov dword[esp+0x64], eax
mov dword[esp+0x60], eax
mov dword[esp+0x68], eax
mov dword[esp+0x74], eax
mov dword[esp+0x7c], edi
lea eax, [esi+0xe4]
mov dword[esp+0xb0], 5
push eax
call dword[sym.imp.MSVCP120.dll__Mtx_lock]
add esp, 4
test eax, eax
je off.b1382
push eax
call dword[sym.imp.MSVCP120.dll_void___cdecl_std::_Throw_C_error_int_]
add esp, 4
mov ecx, dword[0x48a01c]
mov esi, dword[ecx+0x15d0]
mov esi, dword[esi+4]
cmp esi, dword[ecx+0x15d0]
je off.b1577
test byte[esi+0x2c], 1
je off.b1561
mov eax, dword[ecx]
lea edx, [esp+0x18]
push edi
push edx
call dword[eax+0x194]
push ecx
lea eax, [esp+0x1c]
mov byte[esp+0xb4], 6
push eax
lea eax, [esp+0x1c]
push eax
lea ecx, [esp+0x6c]
call fcn.00422d30
lea ecx, [esi+0x3c]
push ecx
mov eax, dword[eax]
lea ecx, [eax+0x24]
call fcn.004235e0
cmp dword[esp+0xc], 0
jne off.b1486
and dword[esi+0x2c], 0xfffffffe
inc dword[esp+0x10]
mov byte[esp+0xb0], 5
mov eax, dword[esp+0x1c]
mov dword[esp+0x18], 0x45928c
test eax, eax
je off.b1539
cmp dword[esp+0x24], 0
je off.b1531
push eax
call dword[sym.imp.mfc120u.dll_Ordinal_1508]
add esp, 4
mov dword[esp+0x1c], 0
mov ecx, dword[0x48a01c]
mov dword[esp+0x20], 0
mov dword[esp+0x24], 0
mov esi, dword[esi+4]
inc edi
cmp esi, dword[ecx+0x15d0]
jne off.b1409
mov esi, dword[ecx+0x15e8]
mov esi, dword[esi+4]
cmp esi, dword[ecx+0x15e8]
je off.b1771
mov edi, edi
test byte[esi+0x58], 1
je off.b1755
mov eax, dword[ecx]
lea edx, [esp+0x2c]
push edi
push edx
call dword[eax+0x194]
push ecx
lea eax, [esp+0x30]
mov byte[esp+0xb4], 7
push eax
lea eax, [esp+0x1c]
push eax
lea ecx, [esp+0x6c]
call fcn.00422d30
lea ecx, [esi+0xb8]
push ecx
mov eax, dword[eax]
lea ecx, [eax+0x24]
call fcn.004235e0
cmp dword[esp+0xc], 0
jne off.b1680
and dword[esi+0x58], 0xfffffffe
inc dword[esp+0x10]
mov byte[esp+0xb0], 5
mov eax, dword[esp+0x30]
mov dword[esp+0x2c], 0x45928c
test eax, eax
je off.b1733
cmp dword[esp+0x38], 0
je off.b1725
push eax
call dword[sym.imp.mfc120u.dll_Ordinal_1508]
add esp, 4
mov dword[esp+0x30], 0
mov ecx, dword[0x48a01c]
mov dword[esp+0x34], 0
mov dword[esp+0x38], 0
mov esi, dword[esi+4]
inc edi
cmp esi, dword[ecx+0x15e8]
jne off.b1600
cmp dword[esp+0x7c], 0
jne off.b2025
mov eax, dword[ecx]
push 0
push 0
push 1
mov eax, dword[eax+0x19c]
push 0
call eax
mov edi, eax
test edi, edi
jns off.b1846
mov dword[esp+0xb0], 0xffffffff
cmp dword[esp+0x7c], 0
je off.b3376
push dword[esp+0x74]
lea ecx, [esp+0x64]
call fcn.00410d80
jmp off.b3376
mov ecx, dword[0x48a01c]
lea edx, [esp+0x80]
push edi
push edx
mov eax, dword[ecx]
call dword[eax+0x194]
push ecx
lea eax, [esp+0x84]
mov byte[esp+0xb4], 8
push eax
lea eax, [esp+0x1c]
push eax
lea ecx, [esp+0x6c]
call fcn.00422d30
mov ecx, dword[0x48a01c]
push edi
mov esi, dword[eax]
mov eax, dword[ecx]
mov eax, dword[eax+0x300]
call eax
test eax, eax
je off.b1936
push eax
lea ecx, [esi+0x24]
call fcn.004235e0
inc dword[esp+0x10]
mov byte[esp+0xb0], 5
mov eax, dword[esp+0x84]
mov dword[esp+0x80], 0x45928c
test eax, eax
je off.b1997
cmp dword[esp+0x8c], 0
je off.b1986
push eax
call dword[sym.imp.mfc120u.dll_Ordinal_1508]
add esp, 4
mov dword[esp+0x84], 0
mov ecx, dword[0x48a01c]
mov dword[esp+0x88], 0
mov dword[esp+0x8c], 0
mov eax, dword[ecx]
call dword[eax+0x2c4]
mov eax, dword[0x48a01c]
add eax, 0xe4
push eax
call dword[sym.imp.MSVCP120.dll__Mtx_unlock]
add esp, 4
test eax, eax
je off.b2067
push eax
call dword[sym.imp.MSVCP120.dll_void___cdecl_std::_Throw_C_error_int_]
add esp, 4
mov ecx, dword[0x48a01c]
xor eax, eax
mov word[0x489f40], ax
mov edx, 0x489f40
mov eax, dword[0x48d9d0]
test eax, eax
cmovne edx, eax
mov eax, dword[ecx+0x15b0]
add ecx, 0x15b0
push edx
lea edx, [esp+0x64]
push edx
call dword[eax+0x44]
mov dword[esp+0xb0], 0xffffffff
cmp dword[esp+0x7c], 0
je off.b2148
push dword[esp+0x74]
lea ecx, [esp+0x64]
call fcn.00410d80
mov edi, dword[esp+0xc]
mov esi, dword[esp+0x10]
test esi, esi
jle off.b3376
mov eax, dword[0x48c060]
lea ecx, [esp+0x90]
xorps xmm0, xmm0
push ecx
movdqu xmmword[esp+0x94], xmm0
push dword[eax+0x141f0]
call dword[sym.imp.USER32.dll_GetWindowRect]
lea ecx, [esp+0x14]
call dword[sym.imp.mfc120u.dll_Ordinal_296]
lea ecx, [esp+0x3c]
mov dword[esp+0xb0], 0xd
call dword[sym.imp.mfc120u.dll_Ordinal_296]
mov byte[esp+0xb0], 0xe
mov ecx, dword[sym.imp.FTMod.dll_class_CMultiLanguage__gpMultiLanguage]
mov ecx, dword[ecx]
test edi, edi
je off.b3108
push str.Move_to_
jmp off.b3113
lea eax, [esp+0x40]
mov dword[esp+0x4c], edi
mov byte[esp+0x50], 0
mov dword[esp+0x58], eax
mov dword[esp+0x44], eax
mov dword[esp+0x40], eax
mov dword[esp+0x48], eax
mov dword[esp+0x54], eax
mov dword[esp+0x5c], edi
lea ecx, [esp+0x60]
mov dword[esp+0xb0], 9
call fcn.00443040
lea eax, [esi+0xe4]
push eax
call dword[sym.imp.MSVCP120.dll__Mtx_lock]
add esp, 4
test eax, eax
je off.b2353
push eax
call dword[sym.imp.MSVCP120.dll_void___cdecl_std::_Throw_C_error_int_]
add esp, 4
mov ecx, dword[0x48a01c]
mov esi, dword[ecx+0x15d0]
mov esi, dword[esi+4]
cmp esi, dword[ecx+0x15d0]
je off.b2562
lea esp, [esp]
test byte[esi+0x2c], 1
je off.b2546
mov eax, dword[ecx]
lea edx, [esp+0x80]
push edi
push edx
call dword[eax+0x194]
push ecx
lea eax, [esp+0x84]
mov byte[esp+0xb4], 0xa
push eax
lea eax, [esp+0x1c]
push eax
lea ecx, [esp+0x4c]
call fcn.00422e50
cmp dword[esp+0xc], 0
jne off.b2453
and dword[esi+0x2c], 0xfffffffe
inc dword[esp+0x10]
mov byte[esp+0xb0], 9
mov eax, dword[esp+0x84]
mov dword[esp+0x80], 0x45928c
test eax, eax
je off.b2518
cmp dword[esp+0x8c], 0
je off.b2507
push eax
call dword[sym.imp.mfc120u.dll_Ordinal_1508]
add esp, 4
mov dword[esp+0x84], 0
mov ecx, dword[0x48a01c]
mov dword[esp+0x88], 0
mov dword[esp+0x8c], 0
mov esi, dword[esi+4]
inc edi
cmp esi, dword[ecx+0x15d0]
jne off.b2384
mov esi, dword[ecx+0x15e8]
mov esi, dword[esi+4]
cmp esi, dword[ecx+0x15e8]
je off.b2746
jmp off.b2592
test byte[esi+0x58], 1
je off.b2730
mov eax, dword[ecx]
lea edx, [esp+0x18]
push edi
push edx
call dword[eax+0x194]
push ecx
lea eax, [esp+0x1c]
mov byte[esp+0xb4], 0xb
push eax
lea eax, [esp+0x1c]
push eax
lea ecx, [esp+0x4c]
call fcn.00422e50
cmp dword[esp+0xc], 0
jne off.b2655
and dword[esi+0x58], 0xfffffffe
inc dword[esp+0x10]
mov byte[esp+0xb0], 9
mov eax, dword[esp+0x1c]
mov dword[esp+0x18], 0x45928c
test eax, eax
je off.b2708
cmp dword[esp+0x24], 0
je off.b2700
push eax
call dword[sym.imp.mfc120u.dll_Ordinal_1508]
add esp, 4
mov dword[esp+0x1c], 0
mov ecx, dword[0x48a01c]
mov dword[esp+0x20], 0
mov dword[esp+0x24], 0
mov esi, dword[esi+4]
inc edi
cmp esi, dword[ecx+0x15e8]
jne off.b2592
cmp dword[esp+0x5c], 0
jne off.b2944
mov eax, dword[ecx]
push 0
push 0
push 1
mov eax, dword[eax+0x19c]
push 0
call eax
mov edx, eax
test edx, edx
jns off.b2821
mov dword[esp+0xb0], 0xffffffff
cmp dword[esp+0x5c], 0
je off.b3376
push dword[esp+0x54]
lea ecx, [esp+0x44]
call fcn.0040acb0
jmp off.b3376
mov ecx, dword[0x48a01c]
push edx
lea edx, [esp+0x30]
push edx
mov eax, dword[ecx]
call dword[eax+0x194]
push ecx
lea eax, [esp+0x30]
mov byte[esp+0xb4], 0xc
push eax
lea eax, [esp+0x1c]
push eax
lea ecx, [esp+0x4c]
call fcn.00422e50
inc dword[esp+0x10]
mov byte[esp+0xb0], 9
mov eax, dword[esp+0x30]
mov dword[esp+0x2c], 0x45928c
test eax, eax
je off.b2922
cmp dword[esp+0x38], 0
je off.b2914
push eax
call dword[sym.imp.mfc120u.dll_Ordinal_1508]
add esp, 4
mov dword[esp+0x30], 0
mov ecx, dword[0x48a01c]
mov dword[esp+0x34], 0
mov dword[esp+0x38], 0
mov eax, dword[ecx]
call dword[eax+0x2c4]
mov eax, dword[0x48a01c]
add eax, 0xe4
push eax
call dword[sym.imp.MSVCP120.dll__Mtx_unlock]
add esp, 4
test eax, eax
je off.b2986
push eax
call dword[sym.imp.MSVCP120.dll_void___cdecl_std::_Throw_C_error_int_]
add esp, 4
mov edi, dword[esp+0xc]
xor eax, eax
mov word[0x489f40], ax
mov esi, 0x489f40
mov eax, dword[0x48d9d0]
mov ecx, esi
test eax, eax
push 1
cmovne ecx, eax
lea eax, [esp+0x44]
push edi
push eax
push ecx
lea ecx, [esp+0x70]
call fcn.00443310
mov ecx, dword[0x48a01c]
xor eax, eax
mov word[0x489f40], ax
mov eax, dword[0x48d9d0]
test eax, eax
push 1
cmovne esi, eax
mov eax, dword[ecx]
push esi
call dword[eax+0x270]
mov dword[esp+0xb0], 0xffffffff
cmp dword[esp+0x5c], 0
je off.b2152
push dword[esp+0x54]
lea ecx, [esp+0x44]
call fcn.0040acb0
jmp off.b2152
push str.Copy_to_
call dword[sym.imp.FTMod.dll_public:_wchar_t_const____thiscall_CMultiLanguage::TranslateString_wchar_t_const__]
push eax
lea ecx, [esp+0x40]
call dword[sym.imp.mfc120u.dll_Ordinal_1520]
push dword[0x48d9d0]
mov ecx, dword[sym.imp.FTMod.dll_class_CMultiLanguage__gpMultiLanguage]
push dword[esp+0x40]
push str.Files_Folders_
mov ecx, dword[ecx]
call dword[sym.imp.FTMod.dll_public:_wchar_t_const____thiscall_CMultiLanguage::TranslateString_wchar_t_const__]
push eax
push esi
lea eax, [esp+0x24]
push str._d__s_r_n_s__s
push eax
call dword[sym.imp.mfc120u.dll_Ordinal_4772]
mov eax, dword[esp+0xa8]
mov dword[esp+0x30], eax
mov eax, dword[esp+0xb4]
mov dword[esp+0x34], eax
lea eax, [esp+0x30]
push eax
push dword[0x48c044]
push 1
push dword[esp+0x38]
call dword[sym.imp.FFUILib.dll_void___cdecl_PopupNotifyWnd_wchar_t_const___int__struct_HICON_____class_CPoint__]
add esp, 0x28
test edi, edi
je off.b3333
mov ecx, dword[0x48a01c]
push 1
mov eax, dword[ecx]
mov eax, dword[eax+0x2c0]
call eax
test eax, eax
jne off.b3298
mov ecx, dword[0x48a01c]
push 0
push 0
push 1
mov eax, dword[ecx]
push 0
mov eax, dword[eax+0x19c]
call eax
test eax, eax
js off.b3298
mov ecx, dword[0x48a01c]
push 1
push 0
push eax
mov edx, dword[ecx]
call dword[edx+0x2bc]
mov ecx, dword[0x48a01c]
mov eax, dword[ecx]
call dword[eax+0x1b0]
mov ecx, dword[0x48c060]
push 0
lea ecx, [ecx+0xa598]
call fcn.00423bc0
jmp off.b3356
mov eax, dword[0x48a01c]
push 0
push 0
push 0xc00
push dword[eax+0x20]
call dword[sym.imp.USER32.dll_PostMessageW]
lea ecx, [esp+0x3c]
call dword[sym.imp.mfc120u.dll_Ordinal_1042]
lea ecx, [esp+0x14]
call dword[sym.imp.mfc120u.dll_Ordinal_1042]
mov ecx, dword[esp+0xa8]
mov dword
pop ecx
pop edi
pop esi
mov ecx, dword[esp+0x94]
xor ecx, esp
call fcn.0044e61f
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/3dfcfb1d918b690c00de324bcfcdc082