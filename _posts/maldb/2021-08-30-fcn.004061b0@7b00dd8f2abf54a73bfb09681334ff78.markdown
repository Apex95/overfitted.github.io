---
layout: post
title:  "fcn.004061b0 @ 7b00dd8f2abf54a73bfb09681334ff78"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.004061b0
- **Origin (md5):** 7b00dd8f2abf54a73bfb09681334ff78
- **VirusTotal:** [virustotal.com/gui/file/7b00dd8f2abf54a73bfb09681334ff78][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>
<span class="tag" id="SCREEN">SCREEN</span>


# Behaviour Tags
<span class="bhv-tag" id="SCREENSHOTS_FOREGROUND_WINDOW">SCREENSHOTS_FOREGROUND_WINDOW / 0.0017209407437115973</span><span class="bhv-tag" id="CREATES_SOCKET_LISTENER">CREATES_SOCKET_LISTENER / 0.14209896828094323</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [134.89102172851562, 70.80707550048828, '<b><a href="/report/fcn.004061b0@7b00dd8f2abf54a73bfb09681334ff78">fcn.004061b0</a><br>@7b00dd8f2abf54a73bfb09681334ff78</b><br>push ebp<br>mov ebp, esp<br>and esp, 0xffffffc0<br>mov eax, 0x14ef4<br>call fcn.00437170<br>mov ecx, dword[ebp+8]<br>xor eax, eax<br>push ebx<br>push esi<br>mov esi, dword[0x468a84]<br>movzx edx, si<br>mov dword[esp+0x48], eax<br>mov dword[esp+0x38], eax<br>mov dword[esp+0x4c], eax<br>mov dword[esp+0x3a0], eax<br>mov dword[esp+0x3a4], eax<br>mov dword[esp+0x80], eax<br>mov dword[esp+0x84], eax<br>mov dword[esp+0x2f8], eax<br>mov dword[esp+0x2fc], eax<br>mov dword[esp+0x300], eax<br>or eax, 0xffffffff<br>mov dword[0x468a88], ecx<br>sub eax, edx<br>lea ecx, [esp+0x13bc]<br>movzx edx, cl<br>cmp eax, edx<br>push edi<br>jbe 0x406234<br>mov eax, 1<br>sub eax, ecx<br>mov dword[esp+0x4c], eax<br>jmp 0x40623a<br>add dword[0x468a80], esi<br>fld1 <br>mov dword[esp+0x38], 0x1a<br>call fcn.00437440<br>fstp qword[esp+0x40]<br>fild dword[esp+0x3c]<br>mov ebx, dword[esp+0x3c]<br>xor edi, edi<br>fstp qword[esp+0x70]<br>jmp 0x406266<br>mov esi, dword[0x468a84]<br>movzx edx, word[0x468a80]<br>sub dword[esp+0x38], 1<br>imul edx, esi<br>lea eax, [esp+0x63f8]<br>imul edx, eax<br>test ebx, ebx<br>mov dword[esp+0x30], edx<br>mov dword[esp+0x18], ebx<br>fild dword[esp+0x30]<br>fadd qword[esp+0x40]<br>fadd qword[esp+0x70]<br>fild dword[esp+0x18]<br>jge 0x4062a1<br>fadd qword[0x453428]<br>fnstcw word[esp+0x2c]<br>push edi<br>movzx eax, word[esp+0x30]<br>faddp st(1)<br>or eax, 0xc00<br>mov dword[esp+0x34], eax<br>push edi<br>fldcw word[esp+0x38]<br>xor esi, esi<br>fistp qword[esp+0x20]<br>mov ebx, dword[esp+0x20]<br>fldcw word[esp+0x34]<br>call dword[sym.imp.GDI32.dll_SelectObject]<br>push esi<br>push esi<br>push esi<br>xor eax, eax<br>push eax<br>push edi<br>call dword[sym.imp.GDI32.dll_Rectangle]<br>cmp dword[esp+0x38], edi<br>jne 0x406260<br>xor eax, eax<br>cmp eax, edi<br>mov dword[esp+0x3c], ebx<br>jne 0x4062f7<br>mov dword[esp+0x88], edi<br>push 1<br>push edi<br>call dword[sym.imp.KERNEL32.dll_SetConsoleCtrlHandler]<br>push 4<br>call fcn.0040e657<br>add esp, 4<br>cmp eax, edi<br>je 0x406320<br>lea ecx, [esp+0x180]<br>mov dword[eax], ecx<br>mov dword[esp+0x180], eax<br>jmp 0x406327<br>mov dword[esp+0x180], edi<br>lea ecx, [esp+0x180]<br>call fcn.00405070<br>mov dword[esp+0x198], eax<br>mov byte[eax+0x15], 1<br>mov eax, dword[esp+0x198]<br>mov dword[eax+4], eax<br>mov eax, dword[esp+0x198]<br>mov dword[eax], eax<br>mov eax, dword[esp+0x198]<br>mov dword[eax+8], eax<br>lea edx, [esp+0x18]<br>push edx<br>lea eax, [esp+0x724]<br>push eax<br>lea ecx, [esp+0x188]<br>mov dword[esp+0x1a4], edi<br>mov word[esp+0x20], 0x60<br>mov dword[esp+0x24], 0x47<br>call fcn.00405f10<br>lea ecx, [esp+0x18]<br>push ecx<br>lea edx, [esp+0x718]<br>push edx<br>lea ecx, [esp+0x188]<br>mov word[esp+0x20], bx<br>mov dword[esp+0x24], ebx<br>call fcn.00405f10<br>mov ax, word[0x468a94]<br>mov esi, dword[esp+0x4c]<br>lea ecx, [esp+0x18]<br>push ecx<br>lea edx, [esp+0x70c]<br>push edx<br>lea ecx, [esp+0x188]<br>mov word[esp+0x20], ax<br>mov dword[esp+0x24], esi<br>call fcn.00405f10<br>mov ecx, dword[0x468a94]<br>movzx edx, word[esp+0x88]<br>xor eax, eax<br>movzx eax, al<br>sub ecx, eax<br>mov eax, dword[esp+0x198]<br>sub ecx, edx<br>add dword[0x468a80], ecx<br>mov ecx, dword[eax+4]<br>push ecx<br>lea ecx, [esp+0x184]<br>call fcn.00404c60<br>mov eax, dword[esp+0x198]<br>mov dword[eax+4], eax<br>mov eax, dword[esp+0x198]<br>push edi<br>push edi<br>mov dword[esp+0x1a4], edi<br>mov dword[eax], eax<br>mov eax, dword[esp+0x1a0]<br>push 0x130b<br>push edi<br>mov dword[eax+8], eax<br>call dword[sym.imp.USER32.dll_SendMessageA]<br>mov ecx, dword[esp+0x1449]<br>sub ecx, dword[0x468a84]<br>mov dword[0x468a8c], eax<br>add ecx, eax<br>cmp byte[esp+0x88], 0<br>mov dword[esp+0x2c], ecx<br>jne 0x406462<br>xor esi, esi<br>mov eax, dword[esp+0x198]<br>mov ecx, dword[esp+0x180]<br>mov edx, dword[eax]<br>push eax<br>push ecx<br>push edx<br>push ecx<br>lea edx, [esp+0x28]<br>push edx<br>lea ecx, [esp+0x194]<br>call fcn.00405f80<br>mov eax, dword[esp+0x198]<br>push eax<br>call fcn.0040e682<br>mov ecx, dword[esp+0x184]<br>push ecx<br>mov dword[esp+0x1a0], edi<br>mov dword[esp+0x1a4], edi<br>call fcn.0040e682<br>add esp, 8<br>push edi<br>call dword[sym.imp.GDI32.dll_CreateCompatibleDC]<br>lea edx, [esp+0x11e0]<br>push edx<br>mov dword[esp+0x90], eax<br>call fcn.00437168<br>mov word[esp+0x34], ax<br>lea eax, [esp+0x11e4]<br>push eax<br>call fcn.00437168<br>push 0x206<br>lea ecx, [esp+0x2ec6]<br>push edi<br>push ecx<br>mov word[esp+0x46], ax<br>mov word[esp+0x2ecc], di<br>call fcn.00436280<br>lea eax, [esp+0x2ecc]<br>add esp, 0x14<br>mov dword[esp+0x320], 7<br>mov dword[esp+0x31c], edi<br>mov word[esp+0x30c], di<br>lea ecx, [eax+2]<br>mov dx, word[eax]<br>add eax, 2<br>cmp dx, di<br>jne 0x406526<br>sub eax, ecx<br>sar eax, 1<br>push eax<br>lea edx, [esp+0x2ebc]<br>push edx<br>lea ecx, [esp+0x310]<br>call fcn.00405660<br>push 0xffffffffffffffff<br>push edi<br>lea eax, [esp+0x310]<br>push eax<br>lea ecx, [esp+0x224]<br>mov dword[esp+0x23c], 7<br>mov dword[esp+0x238], edi<br>mov word[esp+0x228], di<br>call fcn.00405380<br>push 0x1fe<br>lea ecx, [esp+0x48c6]<br>push edi<br>push ecx<br>mov word[esp+0x184], di<br>mov dword[esp+0x186], edi<br>mov word[esp+0x48cc], di<br>call fcn.00436280<br>push 0x1fe<br>lea edx, [esp+0x5172]<br>push edi<br>push edx<br>mov word[esp+0x5178], di<br>call fcn.00436280<br>push 0x1fe<br>lea eax, [esp+0x537e]<br>push edi<br>push eax<br>mov word[esp+0x5384], di<br>call fcn.00436280<br>push 0x1fe<br>lea ecx, [esp+0x4cf2]<br>push edi<br>push ecx<br>mov word[esp+0x4cf8], di<br>call fcn.00436280<br>mov edx, dword[esp+0xbc]<br>add esp, 0x30<br>push edi<br>push edx<br>call dword[sym.imp.GDI32.dll_SelectObject]<br>mov ecx, dword[0x468a94]<br>movzx edx, byte[0x468a8c]<br>mov dword[esp+0x40], eax<br>movzx eax, byte[esp+0x161e]<br>imul eax, eax, 0x9b<br>push edi<br>sub ecx, eax<br>push edi<br>sub ecx, edx<br>sub ecx, dword[esp+0x38]<br>push 3<br>push edi<br>sub ecx, 0x220<br>push 3<br>shl esi, cl<br>push 0xc0000000<br>push str.CONOUT$<br>mov dword[esp+0x68], esi<br>call dword[sym.imp.KERNEL32.dll_CreateFileW]<br>mov esi, dword[esp+0xf4]<br>imul esi, esi, 0xec<br>mov dword[esp+0x6c], eax<br>movsx eax, byte[esp+0x127e]<br>lea ecx, [esp+0x2eb8]<br>push ecx<br>push 0x104<br>add esi, eax<br>call dword[sym.imp.KERNEL32.dll_GetTempPathW]<br>cmp dword[esp+0x58], edi<br>je 0x406699<br>movsx edx, byte[esp+0x15fa]<br>lea eax, [ebx+edx-0xcd]<br>mov dword[esp+0x3c], eax<br>movsx ebx, byte[esp+0x176f]<br>imul ebx, dword[esp+0xbc]<br>imul ebx, dword[esp+0xf4]<br>push edi<br>push edi<br>push 3<br>push edi<br>push 1<br>push 0x80000000<br>lea ecx, [esp+0x13d8]<br>push ecx<br>call dword[sym.imp.KERNEL32.dll_CreateFileW]<br>mov edx, dword[0x468a80]<br>cmp edx, dword[0x468a94]<br>jg 0x406721<br>mov eax, dword[esp+0x38]<br>mov ecx, dword[esp+0x3c]<br>shr ecx, 0x10<br>imul ecx, ecx, 0xd6<br>mov edx, eax<br>imul edx, eax<br>add ecx, ebx<br>lea ecx, [edx+ecx+0x7d]<br>mov edx, ebx<br>shr edx, 8<br>mov dword[esp+0x1e0], ecx<br>movzx ecx, dl<br>movzx edx, byte[esp+0x58]<br>imul ecx, eax<br>imul ecx, ebx<br>add edx, dword[esp+0x1e4]<br>lea eax, [edx+ecx+0x20]<br>mov dword[esp+0x1e4], eax<br>lea ecx, [esp+0x104]<br>push ecx<br>lea edx, [esp+0x13c4]<br>push edx<br>call dword[sym.imp.KERNEL32.dll_GetCompressedFileSizeW]<br>mov eax, dword[esp+0x104]<br>mov ecx, dword[esp+0x1dc]<br>sub ecx, eax<br>add ecx, 0xb<br>and ecx, 0x29<br>imul ecx, ecx, 0xd3<br>push edi<br>mov dword[0x468a84], ecx<br>call dword[sym.imp.KERNEL32.dll_SetLastError]<br>lea edx, [esp+0x13c0]<br>test edx, edx<br>jne 0x406794<br>mov ecx, dword[esp+0x58]<br>mov edx, dword[esp+0x3c]<br>lea eax, [esi+0x23]<br>add ebx, ecx<br>mov ecx, dword[ebp+0xc]<br>mov dword[esp+0x4c], eax<br>lea eax, [ebx+edx+0x25]<br>shl eax, cl<br>imul eax, dword[esp+0x1e4]<br>mov dword[esp+0x1e4], eax<br>mov edx, dword[esp+0x30]<br>cmp edx, edi<br>mov ecx, dword[esp+0x2c]<br>mov dword[esp+0x78], ecx<br>je 0x4067cd<br>mov eax, dword[esp+0x38]<br>movsx ebx, byte[esp+0x1254]<br>add eax, 0x48<br>sub ebx, eax<br>add ebx, 0x157<br>and ecx, ebx<br>mov dword[esp+0x38], eax<br>mov dword[esp+0x2c], 4<br>mov dword[esp+0x78], ecx<br>lea eax, [esp+0x5778]<br>lea ebx, [esp+0x1718]<br>cmp eax, ebx<br>jg 0x40680b<br>movsx eax, byte[esp+0x1693]<br>imul ecx, ecx, 0x54<br>movsx ebx, byte[esp+0x2ce5]<br>imul ebx, dword[esp+0x1e0]<br>movzx eax, ax<br>imul eax, eax, 0x68<br>sub eax, ebx<br>sub eax, ecx<br>add eax, 0x5f<br>mov dword[esp+0x4c], eax<br>lea ecx, [esp+0x5778]<br>cmp ecx, dword[esp+0x7c]<br>jle 0x406840<br>movsx ecx, byte[esp+0x1227]<br>mov esi, dword[esp+0x114]<br>mov eax, edx<br>sub eax, ecx<br>sub eax, 0xdd<br>add esi, 0x4e42<br>imul eax, eax, 0x3d<br>mov dword[esp+0xf4], eax<br>push 1<br>push edi<br>push edi<br>call dword[sym.imp.USER32.dll_InvalidateRect]<br>movzx edx, byte[0x468a8c]<br>mov eax, dword[esp+0x8c]<br>mov ecx, 0x220<br>sub ecx, edx<br>sar dword[0x468a80], cl<br>push eax<br>call dword[sym.imp.GDI32.dll_BeginPath]<br>mov ecx, dword[esp+0xf4]<br>push edi<br>push edi<br>push edi<br>push edi<br>push 0xffffffffffffffff<br>lea edx, [esp+0x4cdc]<br>push edx<br>push edi<br>add ecx, 0x13<br>push 0xfde9<br>mov dword[esp+0x90], eax<br>mov dword[esp+0x11c], ecx<br>call dword[sym.imp.KERNEL32.dll_WideCharToMultiByte]<br>movzx ebx, word[esp+0x30]<br>imul ebx, dword[0x468a8c]<br>add ebx, dword[esp+0x4c]<br>mov dword[esp+0x5c], eax<br>imul ebx, dword[esp+0x3c]<br>cmp esi, dword[esp+0x2c]<br>mov dword[esp+0x3c], ebx<br>jl 0x4068dc<br>mov eax, dword[esp+0x30]<br>mov ecx, dword[0x468a98]<br>shr eax, 8<br>sub ecx, eax<br>sub ecx, dword[esp+0x4c]<br>xor eax, eax<br>shl eax, cl<br>mov dword[esp+0x2c], eax<br>mov eax, dword[0x468a80]<br>mov ecx, dword[0x468a84]<br>mov edx, dword[esp+0x40]<br>push 0xcc0020<br>push edi<br>push edi<br>push eax<br>push ecx<br>push eax<br>push edi<br>push edi<br>push edx<br>call dword[sym.imp.GDI32.dll_BitBlt]<br>mov esi, dword[esp+0x1e8]<br>cmp dword[0x468a84], esi<br>jne 0x406953<br>mov ecx, dword[esp+0x2c]<br>mov eax, dword[esp+0x80]<br>lea edx, [ecx+eax+0x16c]<br>movzx eax, word[esp+0x598a]<br>mov ecx, dword[esp+0xfc]<br>sub ecx, eax<br>sub ecx, dword[esp+0x1e4]<br>mov eax, dword[esp+0x58]<br>sub ecx, eax<br>imul ecx, eax<br>mov dword[esp+0x2c], edx<br>mov dword[esp+0x58], ecx<br>mov dword[esp+0xf4], 0xde<br>mov eax, dword[esp+0x4c]<br>lea edx, [esp+0x13c0]<br>cmp edx, eax<br>je 0x40696c<br>imul eax, eax, 0x220<br>mov dword[esp+0x4c], eax<br>cmp dword[esp+0x70], edi<br>je 0x40697e<br>mov eax, dword[0x468a80]<br>add dword[esp+0xf4], eax<br>mov ecx, dword[esp+0x5c]<br>mov edx, dword[esp+0x6c]<br>mov eax, 0x220<br>sar eax, cl<br>mov ecx, dword[esp+0x30]<br>push ecx<br>push edx<br>mov dword[esp+0x84], eax<br>call dword[sym.imp.KERNEL32.dll_SetConsoleScreenBufferSize]<br>cmp esi, dword[esp+0x7c]<br>jl 0x4069f5<br>mov ecx, dword[esp+0x38]<br>mov eax, ecx<br>imul ecx, dword[esp+0x30]<br>shr eax, 0x10<br>lea eax, [eax+eax*8]<br>add eax, eax<br>add eax, eax<br>mov edx, 0x20<br>sub edx, eax<br>movzx eax, word[esp+0x4c]<br>sub edx, esi<br>and edx, 0xe2<br>mov dword[0x468a80], edx<br>movsx edx, byte[esp+0x1647]<br>imul eax, edx<br>imul eax, dword[esp+0x30]<br>mov edx, dword[esp+0x78]<br>shr edx, 8<br>movzx ebx, dl<br>sub ebx, eax<br>add ebx, ecx<br>jmp 0x406a08<br>cmp ebx, edi<br>mov ebx, dword[esp+0x50]<br>jg 0x406a08<br>movzx eax, word[esp+0x78]<br>sub dword[0x468a80], eax<br>cmp dword[esp+0x230], 8<br>mov eax, dword[esp+0x21c]<br>jae 0x406a20<br>lea eax, [esp+0x21c]<br>lea ecx, [esp+0x5360]<br>push ecx<br>lea edx, [esp+0x5164]<br>push edx<br>lea ecx, [esp+0x48c8]<br>push ecx<br>lea edx, [esp+0x184]<br>push edx<br>push eax<br>call fcn.0043710d<br>lea eax, [esp+0x18c]<br>add esp, 0x14<br>mov dword[esp+0x37c], 7<br>mov dword[esp+0x378], edi<br>mov word[esp+0x368], di<br>lea edx, [eax+2]<br>lea ecx, [ecx]<br>mov cx, word[eax]<br>add eax, 2<br>cmp cx, di<br>jne 0x406a70<br>sub eax, edx<br>sar eax, 1<br>push eax<br>lea eax, [esp+0x17c]<br>push eax<br>lea ecx, [esp+0x36c]<br>call fcn.00405660<br>mov ecx, dword[esp+0x100]<br>mov eax, dword[esp+0x7c]<br>mov esi, 0x5f<br>mov edx, eax<br>shr edx, 8<br>movzx edx, dl<br>imul edx, edx, 0xffffff56<br>add ecx, 0x19<br>add eax, edx<br>sub esi, 1<br>jne 0x406aa4<br>mov dword[esp+0x7c], eax<br>lea eax, [esp+0x48c0]<br>mov dword[esp+0x100], ecx<br>lea edx, [eax+2]<br>mov cx, word[eax]<br>add eax, 2<br>cmp cx, di<br>jne 0x406ad1<br>sub eax, edx<br>sar eax, 1<br>push eax<br>lea eax, [esp+0x48c4]<br>push eax<br>lea ecx, [esp+0x36c]<br>call fcn.00405750<br>cmp dword[esp+0x37c], 8<br>jb 0x406b0f<br>mov ecx, dword[esp+0x368]<br>push ecx<br>call fcn.0040e682<br>add esp, 4<br>mov ecx, dword[0x468a84]<br>mov eax, dword[0x468a80]<br>push 0x14<br>push ecx<br>push eax<br>push ecx<br>push eax<br>push 1<br>lea edx, [esp+0x13d8]<br>push edx<br>push ebx<br>push eax<br>push ecx<br>push eax<br>mov eax, dword[esp+0x58]<br>push eax<br>push edi<br>mov dword[esp+0x3b0], 7<br>mov dword[esp+0x3ac], edi<br>mov word[esp+0x39c], di<br>call dword[sym.imp.COMCTL32.dll_CreateToolbarEx]<br>cmp eax, edi<br>je 0x406b66<br>mov ecx, dword[0x468a80]<br>mov dword[0x468a84], ecx<br>jmp 0x406b74<br>push edi<br>call dword[sym.imp.USER32.dll_GetParent]<br>push eax<br>call dword[sym.imp.USER32.dll_GetDC]<br>mov eax, dword[esp+0x5c]<br>cmp eax, edi<br>jne 0x406b82<br>mov dword[0x468a80], edi<br>push edi<br>push edi<br>push eax<br>lea edx, [esp+0x4864]<br>push edx<br>push 0xffffffffffffffff<br>lea eax, [esp+0x4cdc]<br>push eax<br>push edi<br>push 0xfde9<br>call dword[sym.imp.KERNEL32.dll_WideCharToMultiByte]<br>mov ecx, dword[esp+0x40]<br>mov edx, dword[esp+0x8c]<br>push ecx<br>push edx<br>call dword[sym.imp.GDI32.dll_SelectObject]<br>call dword[sym.imp.KERNEL32.dll_GetLastError]<br>mov esi, eax<br>lea eax, [esp+0x1d4]<br>push eax<br>mov dword[esp+0x1d8], edi<br>call dword[sym.imp.ole32.dll_CreateAntiMoniker]<br>mov ecx, dword[esp+0x1d4]<br>cmp ecx, edi<br>mov dword[esp+0x11e0], 1<br>mov dword[esp+0x5c], ecx<br>jne 0x406bf1<br>mov dword[esp+0x5c], esi<br>cmp dword[0x468a80], edi<br>jne 0x406c03<br>movzx ecx, bl<br>add ecx, 1<br>mov dword[esp+0x2c], ecx<br>cmp eax, edi<br>jne 0x406c16<br>mov byte[esp+0x5c], 0<br>mov ecx, dword[esp+0x5c]<br>mov dword[0x468a98], ecx<br>mov eax, dword[esp+0x8c]<br>lea edx, [eax+1]<br>push eax<br>mov dword[esp+0x34], edx<br>call dword[sym.imp.GDI32.dll_GetTextColor]<br>test eax, eax<br>jne 0x406c3f<br>mov eax, dword[esp+0x30]<br>push 0xff<br>push eax<br>call dword[sym.imp.GDI32.dll_SetTextColor]<br>mov ecx, dword[esp+0x2c]<br>mov edx, dword[esp+0x30]<br>push ecx<br>push edx<br>call dword[sym.imp.GDI32.dll_SetTextColor]<br>cmp dword[0x468a98], edi<br>je 0x40e5c4<br>movzx eax, si<br>add ebx, 1<br>cmp eax, edi<br>mov dword[esp+0x50], ebx<br>jle 0x406c75<br>lea esp, [esp]<br>sub eax, 1<br>jne 0x406c70<br>add esi, 0x220<br>mov dword[esp+0x60], esi<br>mov dword[0x468a90], esi<br>add esi, 0xfffffde0<br>cmp dword[esp+0x230], 8<br>mov dword[0x468a80], esi<br>jb 0x406cab<br>mov edx, dword[esp+0x21c]<br>push edx<br>call fcn.0040e682<br>add esp, 4<br>cmp dword[esp+0x320], 8<br>mov dword[esp+0x230], 7<br>mov dword[esp+0x22c], edi<br>mov word[esp+0x21c], di<br>jb 0x406cdf<br>mov eax, dword[esp+0x30c]<br>push eax<br>call fcn.0040e682<br>add esp, 4<br>cmp dword[0x468a90], edi<br>mov dword[esp+0x320], 7<br>mov dword[esp+0x31c], edi<br>mov word[esp+0x30c], di<br>mov ebx, 0x100<br>je 0x406d10<br>cmp dword[esp+0x5c], edi<br>jne 0x406dfe<br>push edi<br>call dword[sym.imp.GDI32.dll_CreateCompatibleDC]<br>mov esi, eax<br>mov dword[esp+0x2c4], edi<br>call sub.AVIFIL32.dll_AVIFileInit<br>push edi<br>push edi<br>push edi<br>push 0x73646976<br>lea ecx, [esp+0x11f0]<br>push ecx<br>lea edx, [esp+0xdc]<br>push edx<br>call sub.AVIFIL32.dll_AVIStreamOpenFromFileA<br>test eax, eax<br>je 0x406d59<br>push 0x30<br>push str.Error<br>push str.Failed_To_Open_The_AVI_Stream<br>push edi<br>call dword[sym.imp.USER32.dll_MessageBoxA]<br>mov ecx, dword[esp+0xc8]<br>push 0x8c<br>lea eax, [esp+0x50d4]<br>push eax<br>push ecx<br>call sub.AVIFIL32.dll_AVIStreamInfoA<br>mov edx, dword[esp+0xc8]<br>push edx<br>call sub.AVIFIL32.dll_AVIStreamLength<br>push eax<br>mov eax, dword[esp+0xcc]<br>push eax<br>call sub.AVIFIL32.dll_AVIStreamSampleToTime<br>push edi<br>push edi<br>lea ecx, [esp+0x2cc]<br>push ecx<br>push edi<br>lea edx, [esp+0x680]<br>push edx<br>push esi<br>mov word[esp+0x694], 1<br>mov word[esp+0x696], 0x18<br>mov dword[esp+0x68c], ebx<br>mov dword[esp+0x690], ebx<br>mov dword[esp+0x698], edi<br>call dword[sym.imp.GDI32.dll_CreateDIBSection]<br>push eax<br>push esi<br>call dword[sym.imp.GDI32.dll_SelectObject]<br>mov eax, dword[esp+0xc8]<br>push edi<br>push eax<br>call sub.AVIFIL32.dll_AVIStreamGetFrameOpen<br>test eax, eax<br>jne 0x406dfe<br>push 0x30<br>push str.Error<br>push str.Failed_To_Open_The_AVI_Frame<br>push edi<br>call dword[sym.imp.USER32.dll_MessageBoxA]<br>cmp dword[0x468a8c], edi<br>je 0x407285<br>mov dword[esp+0x94], edi<br>call sub.AVIFIL32.dll_AVIFileInit<br>push edi<br>push 0x40<br>push edi<br>push 0x73647561<br>push str.TESTX.AVI<br>lea ecx, [esp+0xcc]<br>push ecx<br>call sub.AVIFIL32.dll_AVIStreamOpenFromFileA<br>test eax, eax<br>je 0x406e3b<br>mov dword[0x468a80], edi<br>mov edx, dword[esp+0xb8]<br>push edx<br>call sub.AVIFIL32.dll_AVIStreamStart<br>mov ecx, dword[esp+0xb8]<br>mov ebx, eax<br>lea eax, [esp+0x68]<br>push eax<br>push edi<br>push ebx<br>push ecx<br>call sub.AVIFIL32.dll_AVIStreamReadFormat<br>test eax, eax<br>je 0x406e68<br>mov dword[0x468a80], edi<br>mov edx, dword[esp+0x68]<br>push edx<br>call fcn.00434f57<br>mov esi, eax<br>add esp, 4<br>cmp esi, edi<br>jne 0x406e81<br>mov dword[0x468a80], edi<br>mov ecx, dword[esp+0xb8]<br>lea eax, [esp+0x68]<br>push eax<br>push esi<br>push ebx<br>push ecx<br>call sub.AVIFIL32.dll_AVIStreamReadFormat<br>test eax, eax<br>je 0x406e9f<br>mov dword[0x468a80], edi<br>mov edx, dword[esi]<br>mov dword[esp+0x1ec], edx<br>mov ebx, dword[esi+4]<br>mov dword[esp+0x1f0], ebx<br>mov eax, dword[esi+8]<br>mov dword[esp+0x1f4], eax<br>mov eax, dword[esi+0xc]<br>mov dword[esp+0x1f8], eax<br>movzx ecx, word[esi+0x10]<br>shr eax, 0x10<br>cmp eax, 0xc<br>movzx eax, word[esp+0x1ee]<br>mov word[esp+0x1fc], cx<br>sbb ecx, ecx<br>and ecx, 0xfffffff8<br>add ecx, 0x10<br>movzx edx, cx<br>imul eax, edx<br>cdq <br>and edx, 7<br>add eax, edx<br>sar eax, 3<br>mov word[esp+0x1f8], ax<br>movzx eax, ax<br>imul eax, ebx<br>push 0x2c<br>mov word[esp+0x1fe], cx<br>lea ecx, [esp+0x4b8]<br>push edi<br>push ecx<br>mov word[esp+0x1f8], 1<br>mov dword[esp+0x200], eax<br>mov word[esp+0x208], di<br>call fcn.00436280<br>mov ecx, dword[esp+0xc4]<br>add esp, 0xc<br>push edi<br>lea eax, [esp+0x4b8]<br>lea edx, [esp+0x1f0]<br>push eax<br>mov dword[esp+0x4d4], edx<br>push ecx<br>lea edx, [esp+0xa4]<br>push edx<br>mov dword[esp+0x4c4], 0x73647561<br>mov dword[esp+0x4e0], 0x10<br>call sub.AVIFIL32.dll_AVIMakeCompressedStream<br>test eax, eax<br>je 0x406f85<br>mov dword[0x468a80], edi<br>mov eax, dword[esp+0x98]<br>push eax<br>call sub.AVIFIL32.dll_AVIStreamStart<br>mov ecx, dword[esp+0x98]<br>mov ebx, eax<br>push ecx<br>mov dword[esp+0x3c], ebx<br>call sub.AVIFIL32.dll_AVIStreamLength<br>lea edx, [eax+ebx-1]<br>push 0x453994<br>push str.TESTP.WAV<br>mov dword[esp+0x48], edx<br>call fcn.00436eec<br>mov ebx, eax<br>add esp, 8<br>cmp ebx, edi<br>mov dword[esp+0x70], ebx<br>jne 0x406fcf<br>mov dword[0x468a80], edi<br>push ebx<br>push 4<br>push 1<br>push str.RIFF<br>call fcn.00436da6<br>add esp, 0x10<br>cmp eax, 4<br>je 0x406fec<br>mov dword[0x468a80], edi<br>mov dword[esp+0x30], 4<br>push ebx<br>push edi<br>call fcn.00436b08<br>add esp, 8<br>cmp eax, 0xffffffff<br>jne 0x407009<br>mov dword[0x468a80], edi<br>sub dword[esp+0x30], 1<br>jne 0x406ff4<br>push ebx<br>push 4<br>push 1<br>push str.WAVE<br>call fcn.00436da6<br>add esp, 0x10<br>cmp eax, 4<br>je 0x40702d<br>mov dword[0x468a80], edi<br>push ebx<br>push 4<br>push 1<br>push str.fmt_<br>call fcn.00436da6<br>add esp, 0x10<br>cmp eax, 4<br>je 0x40704a<br>mov dword[0x468a80], edi<br>push ebx<br>push 1<br>lea eax, [esp+0x4d8]<br>push 4<br>push eax<br>call fcn.00436da6<br>add esp, 0x10<br>cmp eax, 1<br>je 0x40706a<br>mov dword[0x468a80], edi<br>mov ecx, dword[esp+0x4d0]<br>mov edx, dword[esp+0x4cc]<br>push ebx<br>push 1<br>push ecx<br>push edx<br>call fcn.00436da6<br>add esp, 0x10<br>cmp eax, 1<br>je 0x407090<br>mov dword[0x468a80], edi<br>push ebx<br>push 4<br>push 1<br>push str.data<br>call fcn.00436da6<br>add esp, 0x10<br>cmp eax, 4<br>je 0x4070ad<br>mov dword[0x468a80], edi<br>mov dword[esp+0x30], 4<br>push ebx<br>push edi<br>call fcn.00436b08<br>add esp, 8<br>cmp eax, 0xffffffff<br>jne 0x4070ca<br>mov dword[0x468a80], edi<br>sub dword[esp+0x30], 1<br>jne 0x4070b5<br>mov ebx, dword[esp+0x38]<br>cmp ebx, dword[esp+0x40]<br>jg 0x4071cd<br>nop <br>mov edx, dword[esp+0x98]<br>lea eax, [esp+0xac]<br>push eax<br>lea ecx, [esp+0x6c]<br>push ecx<br>push edi<br>push edi<br>push 0xffffffffffffffff<br>push ebx<br>push edx<br>call sub.AVIFIL32.dll_AVIStreamRead<br>test eax, eax<br>je 0x407109<br>mov dword[0x468a80], edi<br>cmp dword[esp+0x68], edi<br>jle 0x407118<br>cmp dword[esp+0xac], edi<br>jg 0x407144<br>mov edx, dword[esp+0x98]<br>lea eax, [esp+0xac]<br>push eax<br>lea ecx, [esp+0x6c]<br>push ecx<br>push edi<br>push edi<br>push 0x1000<br>push ebx<br>push edx<br>call sub.AVIFIL32.dll_AVIStreamRead<br>test eax, eax<br>je 0x407144<br>mov dword[0x468a80], edi<br>mov eax, dword[esp+0x68]<br>push eax<br>push esi<br>call fcn.00435205<br>mov esi, eax<br>add esp, 8<br>cmp esi, edi<br>jne 0x40715e<br>mov dword[0x468a80], edi<br>mov eax, dword[esp+0x68]<br>lea ecx, [esp+0xac]<br>push ecx<br>mov ecx, dword[esp+0xb0]<br>lea edx, [esp+0x6c]<br>push edx<br>mov edx, dword[esp+0xa0]<br>push eax<br>push esi<br>push ecx<br>push ebx<br>push edx<br>call sub.AVIFIL32.dll_AVIStreamRead<br>test eax, eax<br>je 0x407191<br>mov esi, dword[esp+0x70]<br>mov eax, 0xfffffffc<br>sub eax, dword[esp+0x94]<br>push 2<br>push eax<br>push esi<br>call fcn.00436a83<br>add esp, 0xc<br>test eax, eax<br>je 0x4071f3<br>mov dword[0x468a80], edi<br>push esi<br>push 1<br>lea ecx, [esp+0x9c]<br>push 4<br>push ecx<br>call fcn.00436da6<br>add esp, 0x10<br>cmp eax, 1<br>je 0x407213<br>mov dword[0x468a80], edi<br>push edi<br>push 4<br>push esi<br>call fcn.00436a83<br>add esp, 0xc<br>test eax, eax<br>je 0x407229<br>mov dword[0x468a80], edi<br>mov edx, dword[esp+0x94]<br>mov eax, dword[esp+0x4d0]<br>push esi<br>lea ecx, [edx+eax+0x14]<br>push 1<br>lea edx, [esp+0x9c]<br>push 4<br>push edx<br>mov dword[esp+0xa4], ecx<br>call fcn.00436da6<br>add esp, 0x10<br>cmp eax, 1<br>je 0x407262<br>mov dword[0x468a80], edi<br>push esi<br>call fcn.00436980<br>mov eax, dword[esp+0x9c]<br>add esp, 4<br>push eax<br>call sub.AVIFIL32.dll_AVIStreamRelease<br>mov ecx, dword[esp+0xb8]<br>push ecx<br>call sub.AVIFIL32.dll_AVIStreamRelease<br>mov edx, dword[str.Video_1]<br>mov eax, dword[0x453960]<br>mov cl, byte[0x453964]<br>push 0x37<br>mov dword[esp+0x630], edx<br>lea edx, [esp+0x639]<br>push edi<br>mov ebx, 0xa0<br>mov esi, 0x78<br>push edx<br>mov dword[esp+0x5ec], 0x73646976<br>mov dword[esp+0x5f0], 0x20424944<br>mov dword[esp+0x5f4], edi<br>mov dword[esp+0x5f8], edi<br>mov word[esp+0x5fc], di<br>mov word[esp+0x5fe], di<br>mov dword[esp+0x600], 1<br>mov dword[esp+0x604], 0x1e<br>mov dword[esp+0x608], edi<br>mov dword[esp+0x60c], 0xa<br>mov dword[esp+0x610], edi<br>mov dword[esp+0x614], edi<br>mov dword[esp+0x618], 0xffffffff<br>mov dword[esp+0x61c], edi<br>mov dword[esp+0x620], edi<br>mov dword[esp+0x624], edi<br>mov dword[esp+0x628], ebx<br>mov dword[esp+0x62c], esi<br>mov dword[esp+0x630], edi<br>mov dword[esp+0x634], edi<br>mov dword[esp+0x63c], eax<br>mov byte[esp+0x640], cl<br>call fcn.00436280<br>add esp, 0xc<br>mov dword[esp+0x3dc], 0x28<br>mov dword[esp+0x3e0], ebx<br>mov dword[esp+0x3e4], esi<br>mov word[esp+0x3e8], 1<br>mov word[esp+0x3ea], 0x18<br>mov dword[esp+0x3ec], edi<br>mov dword[esp+0x3f0], 0xe100<br>mov dword[esp+0x3f4], edi<br>mov dword[esp+0x3f8], edi<br>mov dword[esp+0x3fc], edi<br>mov dword[esp+0x400], edi<br>call sub.AVIFIL32.dll_AVIFileInit<br>push edi<br>push 0x1041<br>push 0x453958<br>lea eax, [esp+0x2e8]<br>push eax<br>call sub.AVIFIL32.dll_AVIFileOpenA<br>test eax, eax<br>je 0x4073f0<br>mov dword[0x468a80], edi<br>cmp dword[esp+0x60], edi<br>jne 0x40741d<br>mov eax, dword[esp+0x2dc]<br>lea ecx, [esp+0x5e0]<br>push ecx<br>lea edx, [esp+0x118]<br>push edx<br>push eax<br>call sub.AVIFIL32.dll_AVIFileCreateStreamA<br>test eax, eax<br>je 0x40741d<br>mov dword[0x468a80], edi<br>cmp dword[esp+0x5c], edi<br>jne 0x407449<br>mov edx, dword[esp+0x114]<br>push 0x28<br>lea ecx, [esp+0x3e0]<br>push ecx<br>push edi<br>push edx<br>call sub.AVIFIL32.dll_AVIStreamSetFormat<br>test eax, eax<br>je 0x407449<br>mov eax, dword[0x468a84]<br>mov dword[0x468a80], eax<br>xor ebx, ebx<br>xor edi, edi<br>mov dword[esp+0x30], edi<br>mov dword[esp+0x38], ebx<br>fild dword[esp+0x30]<br>fmul qword[0x453950]<br>fdiv qword[0x453948]<br>fst qword[esp+0x30]<br>fild dword[esp+0x38]<br>fstp qword[esp+0x18]<br>call fcn.00437310<br>fmul qword[0x453940]<br>fmul qword[esp+0x18]<br>fdiv qword[0x453938]<br>fadd qword[0x453930]<br>call fcn.004364a0<br>fld qword[esp+0x30]<br>lea esi, [eax+eax*4]<br>shl esi, 5<br>call fcn.004371e0<br>fmul qword[0x453940]<br>fmul qword[esp+0x18]<br>fdiv qword[0x453938]<br>fadd qword[0x453928]<br>call fcn.004364a0<br>add dword[esp+0x38], 1<br>add esi, eax<br>lea eax, [esi+esi*2]<br>add edi, 1<br>cmp edi, 2<br>mov byte[esp+eax+0x6e02], 0xff<br>mov byte[esp+eax+0x6e01], 0xff<br>mov byte[esp+eax+0x6e00], 0xff<br>mov dword[esp+0x30], edi<br>jl 0x407455<br>add ebx, 0x64<br>cmp ebx, 0xc8<br>jl 0x40744b<br>call sub.AVIFIL32.dll_AVIFileExit<br>cmp dword[0x468a94], 0<br>je 0x4076e4<br>mov ebx, dword[0x468a8c]<br>push ebx<br>call sub.AVIFIL32.dll_AVIStreamStart<br>push ebx<br>mov esi, eax<br>call sub.AVIFIL32.dll_AVIStreamLength<br>push 0x8c<br>lea edx, [esp+0x2e2c]<br>push edx<br>lea ecx, [eax+esi-1]<br>push ebx<br>mov dword[esp+0x3c], ecx<br>call sub.AVIFIL32.dll_AVIStreamInfoA<br>xor edi, edi<br>test eax, eax<br>je 0x407549<br>mov dword[0x468a80], edi<br>lea eax, [esp+0x2e28]<br>push eax<br>lea ecx, [esp+0x160]<br>push ecx<br>push edi<br>call sub.AVIFIL32.dll_AVIFileCreateStreamA<br>test eax, eax<br>je 0x407569<br>mov dword[0x468a80], edi<br>lea edx, [esp+0x64]<br>push edx<br>push edi<br>push esi<br>push ebx<br>call sub.AVIFIL32.dll_AVIStreamReadFormat<br>test eax, eax<br>je 0x407580<br>mov dword[0x468a80], edi<br>mov eax, dword[esp+0x64]<br>push eax<br>call fcn.00434f57<br>mov edi, eax<br>add esp, 4<br>test edi, edi<br>jne 0x407598<br>mov dword[0x468a80], eax<br>lea ecx, [esp+0x64]<br>push ecx<br>push edi<br>push esi<br>push ebx<br>call sub.AVIFIL32.dll_AVIStreamReadFormat<br>test eax, eax<br>je 0x4075b3<br>mov dword[0x468a80], 0<br>mov edx, dword[esp+0x64]<br>mov eax, dword[esp+0x15c]<br>push edx<br>push edi<br>push esi<br>push eax<br>call sub.AVIFIL32.dll_AVIStreamSetFormat<br>test eax, eax<br>je 0x4075d5<br>mov dword[0x468a80], 0<br>cmp esi, dword[esp+0x30]<br>jg 0x4076ce<br>nop <br>lea ecx, [esp+0x9c]<br>push ecx<br>lea edx, [esp+0x68]<br>push edx<br>push 0<br>push 0<br>push 0xffffffffffffffff<br>push esi<br>push ebx<br>call sub.AVIFIL32.dll_AVIStreamRead<br>test eax, eax<br>je 0x407608<br>mov dword[0x468a80], 0<br>cmp dword[esp+0x64], 0<br>jle 0x407619<br>cmp dword[esp+0x9c], 0<br>jg 0x407644<br>lea eax, [esp+0x9c]<br>push eax<br>lea ecx, [esp+0x68]<br>push ecx<br>push 0<br>push 0<br>push 0x1000<br>push esi<br>push ebx<br>call sub.AVIFIL32.dll_AVIStreamRead<br>test eax, eax<br>je 0x407644<br>mov dword[0x468a80], 0<br>mov edx, dword[esp+0x64]<br>push edx<br>push edi<br>call fcn.00435205<br>mov edi, eax<br>add esp, 8<br>test edi, edi<br>jne 0x40765d<br>mov dword[0x468a80], eax<br>mov edx, dword[esp+0x64]<br>lea eax, [esp+0x9c]<br>push eax<br>mov eax, dword[esp+0xa0]<br>lea ecx, [esp+0x68]<br>push ecx<br>push edx<br>push edi<br>push eax<br>push esi<br>push ebx<br>call sub.AVIFIL32.dll_AVIStreamRead<br>test eax, eax<br>je 0x40768d<br>mov dword[0x468a80], 0<br>mov ecx, dword[esp+0x64]<br>mov edx, dword[esp+0x9c]<br>mov eax, dword[esp+0x15c]<br>push 0<br>push 0<br>push 0x10<br>push ecx<br>push edi<br>push edx<br>push esi<br>push eax<br>call sub.AVIFIL32.dll_AVIStreamWrite<br>test eax, eax<br>je 0x4076bd<br>mov dword[0x468a80], 0<br>add esi, dword[esp+0x9c]<br>cmp esi, dword[esp+0x30]<br>jle 0x4075e0<br>mov ecx, dword[esp+0x15c]<br>push ecx<br>call sub.AVIFIL32.dll_AVIStreamRelease<br>push edi<br>call fcn.0043501a<br>add esp, 4<br>mov edx, dword[0x468a90]<br>mov edi, dword[0x468a98]<br>lea eax, [esp+0x39c]<br>push eax<br>push 0xba2<br>mov dword[esp+0x48], edx<br>call dword[sym.imp.OPENGL32.dll_glGetIntegerv]<br>lea ecx, [esp+0x5bf8]<br>push ecx<br>push 0x200<br>call dword[sym.imp.OPENGL32.dll_glSelectBuffer]<br>mov ebx, dword[sym.imp.OPENGL32.dll_glRenderMode]<br>push 0x1c02<br>call ebx<br>call dword[sym.imp.OPENGL32.dll_glInitNames]<br>push 0<br>call dword[sym.imp.OPENGL32.dll_glPushName]<br>mov esi, dword[sym.imp.OPENGL32.dll_glMatrixMode]<br>push 0x1701<br>call esi<br>call dword[sym.imp.OPENGL32.dll_glPushMatrix]<br>call dword[sym.imp.OPENGL32.dll_glLoadIdentity]<br>fld1 <br>mov eax, dword[esp+0x3a8]<br>lea edx, [esp+0x39c]<br>push edx<br>sub esp, 0x20<br>fst qword[esp+0x18]<br>sub eax, edi<br>fstp qword[esp+0x10]<br>mov dword[esp+0x54], eax<br>fild dword[esp+0x54]<br>fstp qword[esp+8]<br>fild dword[esp+0x64]<br>fstp qword[esp]<br>call sub.GLU32.dll_gluPickMatrix<br>fld1 <br>sub esp, 0x30<br>fst qword[esp+0x28]<br>fldz <br>fstp qword[esp+0x20]<br>fild dword[0x468a84]<br>fstp qword[esp+0x18]<br>fst qword[esp+0x10]<br>fild dword[0x468a80]<br>fstp qword[esp+8]<br>fstp qword[esp]<br>call dword[sym.imp.OPENGL32.dll_glOrtho]<br>push 0x1700<br>call esi<br>push 0x1701<br>call esi<br>call dword[sym.imp.OPENGL32.dll_glPopMatrix]<br>push 0x1700<br>call esi<br>push 0x1c00<br>call ebx<br>test eax, eax<br>jle 0x407800<br>cmp eax, 1<br>mov esi, dword[esp+0x5bfc]<br>jle 0x407800<br>lea edx, [esp+0x5c0c]<br>add eax, 0xffffffff<br>mov ecx, dword[edx]<br>cmp ecx, esi<br>jae 0x4077f8<br>mov esi, ecx<br>add edx, 0x10<br>sub eax, 1<br>jne 0x4077f0<br>mov ecx, dword[0x468a94]<br>xor eax, eax<br>mov dword[esp+0xbc], eax<br>mov dword[esp+0x30], eax<br>mov eax, dword[0x468a8c]<br>lea edx, [eax+8]<br>imul edx, dword[esp+0x60]<br>test edx, edx<br>mov dword[esp+0x40], ecx<br>jle 0x40799a<br>mov ebx, 1<br>xor edi, edi<br>mov eax, dword[esp+0xbc]<br>push edi<br>push edi<br>push edi<br>push edi<br>push eax<br>push edi<br>push edi<br>call dword[sym.imp.WS2_32.dll_WSAConnect]<br>lea ecx, [esp+0xbc]<br>push ecx<br>push edi<br>push edi<br>push edi<br>push edi<br>call dword[sym.imp.WS2_32.dll_WSAAddressToStringW]<br>push edi<br>push edi<br>push edi<br>push edi<br>push edi<br>call dword[sym.imp.WS2_32.dll_WSAAccept]<br>mov ecx, dword[0x468a8c]<br>imul eax, ecx<br>cmp eax, edi<br>jne 0x407885<br>cmp ecx, edi<br>jne 0x407885<br>cmp dword[0x468a94], edi<br>jne 0x407885<br>mov esi, dword[0x468a98]<br>jmp 0x407887<br>xor esi, esi<br>mov edx, dword[esp+0x40]<br>push 3<br>push edi<br>push edi<br>push edi<br>push edi<br>push 0xffffffffffffffff<br>push edx<br>call dword[sym.imp.USER32.dll_SetWindowPos]<br>cmp esi, edi<br>je 0x4078f2<br>lea eax, [esp+0x12e8]<br>push eax<br>push edi<br>call dword[sym.imp.USER32.dll_BeginPaint]<br>mov esi, eax<br>push ebx<br>push esi<br>call dword[sym.imp.GDI32.dll_SetBkMode]<br>lea eax, [esp+0x4bc0]<br>lea edx, [eax+1]<br>mov cl, byte[eax]<br>add eax, 1<br>test cl, cl<br>jne 0x4078c1<br>sub eax, edx<br>push eax<br>lea ecx, [esp+0x4bc4]<br>push ecx<br>push edi<br>push edi<br>push esi<br>call dword[sym.imp.GDI32.dll_TextOutA]<br>lea edx, [esp+0x12e8]<br>push edx<br>push edi<br>call dword[sym.imp.USER32.dll_EndPaint]<br>jmp 0x40797b<br>push 0x58<br>lea eax, [esp+0x69c]<br>push edi<br>push eax<br>call fcn.00436280<br>add esp, 0xc<br>lea eax, [esp+0x698]<br>lea ecx, [esp+0x2c20]<br>lea edx, [esp+0x15c8]<br>push eax<br>mov dword[esp+0x69c], 0x58<br>mov dword[esp+0x6a0], edi<br>mov dword[esp+0x6b8], ecx<br>mov byte[esp+0x2c24], 0<br>mov dword[esp+0x6bc], 0x104<br>mov dword[esp+0x6a8], edx<br>mov dword[esp+0x6b4], ebx<br>mov dword[esp+0x6c0], edi<br>mov dword[esp+0x6c4], edi<br>mov dword[esp+0x6c8], edi<br>mov dword[esp+0x6d0], 0x1800<br>call dword[sym.imp.comdlg32.dll_GetOpenFileNameA]<br>mov eax, dword[0x468a8c]<br>mov ecx, dword[esp+0x30]<br>lea edx, [eax+8]<br>imul edx, dword[esp+0x60]<br>add ecx, ebx<br>cmp ecx, edx<br>mov dword[esp+0x30], ecx<br>jl 0x407833<br>imul eax, dword[0x468a84]<br>mov ecx, dword[0x45cabc]<br>mov edx, dword[0x45cac0]<br>add eax, 2<br>mov edi, eax<br>mov eax, dword[0x45cab8]<br>mov dword[esp+0x330], ecx<br>lea ecx, [esp+0x32c]<br>mov dword[esp+0x32c], eax<br>mov eax, dword[0x45cac4]<br>push ecx<br>push str.36FC9E60_C465_11CF_8056_444553540000<br>mov dword[esp+0x38], edi<br>mov dword[esp+0x33c], edx<br>mov dword[esp+0x340], eax<br>call dword[sym.imp.ole32.dll_CLSIDFromString]<br>push 2<br>push 0<br>push 0<br>lea edx, [esp+0x338]<br>push edx<br>call dword[sym.imp.SETUPAPI.dll_SetupDiGetClassDevsA]<br>push 0<br>push 0<br>push 0<br>mov esi, eax<br>call sub.MSACM32.dll_acmStreamUnprepareHeader<br>mov eax, dword[0x468a84]<br>mov ecx, dword[esp+0x3c]<br>lea edx, [esp+0x72c]<br>push edx<br>push 0<br>sub eax, edi<br>push 0<br>mov dword[0x468a94], 0<br>mov dword[esp+0x738], 0x1c<br>lea ebx, [eax+ecx+1]<br>call dword[sym.imp.SETUPAPI.dll_SetupDiEnumDeviceInfo]<br>push esi<br>mov dword[esp+0x58], eax<br>call dword[sym.imp.SETUPAPI.dll_SetupDiDestroyDeviceInfoList]<br>mov edx, dword[esp+0x60]<br>movzx eax, dl<br>imul eax, eax, 0xca<br>movzx esi, word[esp+0x140e]<br>mov ecx, 0x7b<br>sub ecx, dword[esp+0x100]<br>mov dword[esp+0x78], 0<br>shl eax, cl<br>mov ecx, dword[esp+0x114]<br>shr ecx, 8<br>movzx ecx, cl<br>and eax, ecx<br>movzx ecx, byte[esp+0x1e4]<br>add dword[esp+0xfc], eax<br>imul ecx, ecx, 0xdd<br>mov eax, dword[ebp+8]<br>mov dword[esp+0x6c], eax<br>add ecx, esi<br>movzx esi, byte[esp+0xbc]<br>mov eax, 0x1f<br>sub eax, dword[0x468a8c]<br>cmp edx, dword[esp+0x58]<br>mov dword[esp+0x70], 1<br>mov dword[0x468a80], eax<br>lea ecx, [ecx+esi-0x67]<br>jge 0x407af7<br>movzx esi, byte[0x468a91]<br>add ecx, 0xfffffff8<br>shl dword[esp+0x4c], cl<br>mov ecx, dword[esp+0x7c]<br>mov edx, ecx<br>shr edx, 0x10<br>add edx, ecx<br>lea ecx, [esi+edx-0x85]<br>mov dword[esp+0x70], ecx<br>movsx esi, byte[esp+0x16b0]<br>mov edx, dword[ebp+0xc]<br>imul esi, esi, 0x18ec<br>cmp edi, edx<br>jle 0x407b3c<br>movzx ecx, byte[esp+0x4c]<br>mov edi, dword[0x468a98]<br>imul ecx, ebx<br>sub edi, ecx<br>mov ecx, dword[esp+0x4c]<br>lea ecx, [edi+ecx+0x5f]<br>mov dword[esp+0x78], ecx<br>mov ecx, dword[esp+0x50]<br>shr ecx, 0x10<br>sub ecx, 0x57e4<br>sar eax, cl<br>mov dword[0x468a80], eax<br>cmp edx, dword[esp+0x54]<br>jl 0x407b6b<br>mov edx, dword[esp+0x1e4]<br>mov ecx, dword[esp+0xbc]<br>add edx, ecx<br>imul edx, dword[esp+0xfc]<br>mov dword[esp+0xfc], edx<br>mov edx, dword[esp+0x50]<br>mov dword[0x468a84], edx<br>lea ecx, [esp+0x144]<br>push ecx<br>lea edx, [esp+0x110]<br>push edx<br>lea ecx, [esp+0x16c]<br>push ecx<br>push eax<br>call dword[sym.imp.SHLWAPI.dll_ColorRGBToHLS]<br>cmp dword[0x468a80], esi<br>jge 0x407bac<br>movsx edx, byte[esp+0x2c69]<br>movzx ecx, dx<br>mov eax, 0x3b<br>sub eax, ecx<br>sub eax, dword[esp+0x3c]<br>mov dword[esp+0x70], eax<br>mov edi, dword[0x468a94]<br>mov eax, dword[esp+0xf4]<br>mov dword[esp+0x58], 0<br>mov dword[esp+0x40], 0x44<br>lea esp, [esp]<br>lea edx, [esp+0x1718]<br>cmp edx, dword[0x468a98]<br>jg 0x407c19<br>mov ecx, dword[0x468a80]<br>mov edx, dword[ebp+0xc]<br>add eax, 0x44<br>sub ecx, esi<br>sub ecx, dword[esp+0x4c]<br>mov dword[esp+0x78], eax<br>mov eax, dword[esp+0x100]<br>add ecx, dword[esp+0x54]<br>imul eax, edi<br>shr edx, 0x10<br>shl edx, cl<br>mov ecx, dword[esp+0xfc]<br>sub ecx, eax<br>sub dword[esp+0x3c], edx<br>sub ecx, ebx<br>mov eax, ecx<br>cmp dword[0x468a90], edi<br>jne 0x407c32<br>movsx esi, byte[esp+0x12c5]<br>shr esi, 0x10<br>and esi, 0x220<br>mov edx, dword[esp+0x6c]<br>imul edx, edx, 0x32e7a6<br>sub dword[esp+0x40], 1<br>mov dword[esp+0x6c], edx<br>jne 0x407bd0<br>push 0xff<br>xor ebx, ebx<br>lea eax, [esp+0x4e5]<br>push ebx<br>push eax<br>call fcn.00436280<br>mov edi, dword[esp+0x68]<br>xor eax, eax<br>imul edi, edi, 0xc8<br>mov edx, eax<br>mov dword[esp+0x8c], eax<br>mov dword[esp+0x94], ebx<br>mov dword[esp+0x94], eax<br>movzx eax, byte[0x468a94]<br>xor ecx, ecx<br>mov esi, 0xf8<br>sub esi, eax<br>mov dword[esp+0x90], ebx<br>mov eax, ecx<br>add esp, 0xc<br>mov dword[esp+0x84], ecx<br>mov dword[0x468a84], esi<br>add edi, 0x1b2<br>mov dword[esp+0x40], ecx<br>mov dword[esp+0x84], edx<br>mov dword[esp+0x38], ebx<br>shr eax, 0x10<br>mov esi, 0x84<br>mov ecx, dword[esp+0x58]<br>imul ecx, edi<br>mov dword[esp+0x58], ecx<br>movzx ecx, ax<br>and ecx, edx<br>sub esi, 1<br>mov dword[esp+0x2c], ecx<br>jne 0x407cc5<br>movzx eax, byte[esp+0x54]<br>imul eax, dword[esp+0x60]<br>cmp eax, dword[0x468a80]<br>mov ecx, dword[0x468a8c]<br>jg 0x407cfe<br>test ecx, ecx<br>je 0x407cfe<br>mov dword[esp+0x38], ecx<br>lea eax, [esp+0x1718]<br>xor esi, esi<br>cmp esi, eax<br>jg 0x407d45<br>movzx eax, word[esp+0x316a]<br>add eax, 0xfb<br>mov dword[esp+0x78], eax<br>mov eax, dword[esp+0x50]<br>shr eax, 0x10<br>sub edx, eax<br>mov eax, dword[0x468a94]<br>lea ecx, [eax+ecx-0x88]<br>mov eax, dword[esp+0x70]<br>sar edx, cl<br>and eax, dword[0x468a90]<br>mov dword[esp+0x6c], eax<br>mov dword[esp+0x4c], edx<br>mov ecx, dword[esp+0x50]<br>mov edx, dword[0x468a94]<br>push 0<br>push ecx<br>push 1<br>push edx<br>call dword[sym.imp.USER32.dll_SetScrollPos]<br>cmp esi, dword[0x468a84]<br>jle 0x407d91<br>mov ecx, dword[0x468a90]<br>mov eax, dword[ebp+0xc]<br>imul ecx, ecx, 0x62<br>movsx edx, byte[esp+0x55d]<br>shr eax, 8<br>movzx eax, al<br>sub ecx, 0x12<br>shr edx, 8<br>and eax, ecx<br>movzx ecx, dl<br>add eax, ecx<br>mov dword[esp+0x84], eax<br>movzx edx, byte[esp+0x4c]<br>movzx eax, byte[esp+0x40]<br>mov edi, dword[esp+0x3c]<br>sub edi, dword[esp+0x54]<br>mov dword[esp+0x4c], edx<br>mov dword[esp+0x18], eax<br>mov dword[esp+0x70], 0x29<br>mov ecx, dword[esp+0x54]<br>push 0<br>push ecx<br>call dword[sym.imp.USER32.dll_SetMenu]<br>movsx eax, byte[esp+0x173a]<br>movzx esi, byte[esp+0x31f2]<br>mov ecx, dword[esp+0x18]<br>movzx edx, ax<br>imul edx, dword[esp+0x4c]<br>sub esi, edx<br>add esi, dword[0x468a98]<br>mov eax, 0xd3bf7ba9<br>shl esi, cl<br>mov ecx, dword[0x468a84]<br>imul ecx<br>add edx, ecx<br>sar edx, 9<br>mov eax, edx<br>shr eax, 0x1f<br>add edx, eax<br>movzx eax, word[esp+0x84]<br>imul edx, eax<br>sub edx, ebx<br>cmp edx, edi<br>jbe 0x407e30<br>cmp dword[0x468a94], 0x23<br>jl 0x407e30<br>mov ecx, dword[esp+0x40]<br>xor eax, eax<br>movzx eax, ax<br>sub eax, ecx<br>sub eax, dword[esp+0x3c]<br>add eax, ecx<br>mov dword[esp+0x38], eax<br>jmp 0x407e38<br>lea eax, [ebx+ecx*2]<br>mov dword[0x468a84], eax<br>sub dword[esp+0x70], 1<br>jne 0x407db3<br>mov ecx, dword[0x468a90]<br>mov edx, dword[esp+0x8c]<br>push ecx<br>push edx<br>call dword[sym.imp.GDI32.dll_SelectObject]<br>test eax, eax<br>je 0x407ee0<br>mov esi, 8<br>cmp dword[esp+0x230], esi<br>jb 0x40e5e2<br>mov eax, dword[esp+0x21c]<br>push eax<br>call fcn.0040e682<br>add esp, 4<br>cmp dword[esp+0x320], esi<br>mov dword[esp+0x230], 7<br>mov dword[esp+0x22c], edi<br>mov word[esp+0x21c], di<br>jb 0x40e615<br>mov ecx, dword[esp+0x30c]<br>push ecx<br>call fcn.0040e682<br>add esp, 4<br>pop edi<br>pop esi<br>xor eax, eax<br>pop ebx<br>mov esp, ebp<br>pop ebp<br>ret <br><eoc> ', 'point { fill-color: #e0440e; }'],
[22.473102569580078, -127.80690002441406, '<b><a href="/report/fcn.00437fb0@3e981d1767f44f5fe2446a49ffe52f4e">fcn.00437fb0</a><br>@3e981d1767f44f5fe2446a49ffe52f4e</b><br>push 0xffffffffffffffff<br>push 0x4c0ae8<br>mov eax, dword<br>push eax<br>mov dword<br>sub esp, 0x40<br>push ebx<br>push esi<br>mov esi, ecx<br>xor ebx, ebx<br>mov dword[esp+8], esi<br>cmp dword[esi+0xc0], ebx<br>jne 0x438003<br>mov eax, dword[esi+0x1c]<br>push 1<br>push ebx<br>push eax<br>call dword[sym.imp.USER32.dll_SetWindowRgn]<br>lea ecx, [esi+0x1d4]<br>call fcn.004ba97d<br>pop esi<br>pop ebx<br>mov ecx, dword[esp+0x40]<br>mov dword<br>add esp, 0x4c<br>ret <br>mov edx, dword[esi+0x1c]<br>push ebp<br>lea ecx, [esp+0x28]<br>push edi<br>push ecx<br>push edx<br>call dword[sym.imp.USER32.dll_GetWindowRect]<br>mov edi, dword[esp+0x34]<br>mov ecx, dword[esp+0x2c]<br>mov ebp, dword[esp+0x38]<br>mov eax, dword[esp+0x30]<br>mov edx, vtable.CRgn.0<br>sub edi, ecx<br>sub ebp, eax<br>mov dword[esp+0x18], ebx<br>mov dword[esp+0x14], edx<br>mov eax, dword[esi+0xc0]<br>mov dword[esp+0x58], ebx<br>mov ecx, eax<br>dec ecx<br>je 0x438210<br>dec ecx<br>je 0x4381da<br>dec ecx<br>je 0x438143<br>add eax, 0xfffffffc<br>mov esi, 0x4ea2d4<br>cmp eax, ebx<br>jle 0x43807f<br>mov cx, word[esi]<br>add esi, 2<br>cmp cx, 0xffff<br>je 0x43807c<br>mov dx, word[esi]<br>add esi, 2<br>cmp dx, 0xffff<br>jne 0x43806f<br>dec eax<br>jne 0x438062<br>mov eax, dword[esp+0x10]<br>lea ecx, [esp+0x3c]<br>push eax<br>call fcn.004ba67e<br>mov ecx, dword[esp+0x40]<br>mov byte[esp+0x58], 3<br>push ecx<br>call dword[sym.imp.GDI32.dll_BeginPath]<br>mov ebx, dword[sym.imp.KERNEL32.dll_MulDiv]<br>xor edx, edx<br>mov dx, word[esi+2]<br>push 0x7fff<br>push ebp<br>push edx<br>call ebx<br>push eax<br>xor eax, eax<br>mov ax, word[esi]<br>push 0x7fff<br>push edi<br>push eax<br>call ebx<br>lea ecx, [esp+0x28]<br>push eax<br>push ecx<br>lea ecx, [esp+0x48]<br>call fcn.004ba46b<br>add esi, 4<br>cmp word[esi], 0xffff<br>je 0x43810c<br>xor edx, edx<br>push 0x7fff<br>mov dx, word[esi+2]<br>push ebp<br>push edx<br>call ebx<br>push eax<br>xor eax, eax<br>mov ax, word[esi]<br>push 0x7fff<br>push edi<br>push eax<br>call ebx<br>push eax<br>lea ecx, [esp+0x44]<br>call fcn.004ba4b7<br>add esi, 4<br>cmp word[esi], 0xffff<br>jne 0x4380da<br>mov ecx, dword[esp+0x40]<br>push ecx<br>call dword[sym.imp.GDI32.dll_EndPath]<br>mov edx, dword[esp+0x40]<br>push edx<br>call dword[sym.imp.GDI32.dll_PathToRegion]<br>push eax<br>lea ecx, [esp+0x18]<br>call fcn.004ba926<br>lea ecx, [esp+0x3c]<br>mov byte[esp+0x58], 0<br>call fcn.004ba6f0<br>mov esi, dword[esp+0x10]<br>jmp 0x438224<br>mov dword[esp+0x20], ebx<br>mov dword[esp+0x1c], edx<br>mov esi, dword[sym.imp.GDI32.dll_CreateEllipticRgn]<br>push ebp<br>push edi<br>push ebx<br>push ebx<br>mov byte[esp+0x68], 1<br>call esi<br>push eax<br>lea ecx, [esp+0x18]<br>call fcn.004ba926<br>mov eax, ebp<br>cdq <br>and edx, 3<br>add eax, edx<br>mov ecx, eax<br>mov eax, edi<br>cdq <br>and edx, 3<br>add eax, edx<br>sar ecx, 2<br>sar eax, 2<br>sub ebp, ecx<br>sub edi, eax<br>push ebp<br>push edi<br>push ecx<br>push eax<br>call esi<br>push eax<br>lea ecx, [esp+0x20]<br>call fcn.004ba926<br>mov esi, dword[esp+0x20]<br>lea eax, [esp+0x1c]<br>mov edx, dword[esp+0x18]<br>lea ecx, [esp+0x14]<br>neg eax<br>sbb eax, eax<br>push 4<br>and eax, esi<br>neg ecx<br>sbb ecx, ecx<br>push eax<br>and ecx, edx<br>push ecx<br>push edx<br>call dword[sym.imp.GDI32.dll_CombineRgn]<br>mov dword[esp+0x1c], 0x4d6ac8<br>lea ecx, [esp+0x1c]<br>mov byte[esp+0x58], 2<br>call fcn.004ba97d<br>mov esi, dword[esp+0x10]<br>mov byte[esp+0x58], 0<br>jmp 0x438224<br>mov eax, 0x66666667<br>imul ebp<br>sar edx, 1<br>mov eax, edx<br>shr eax, 0x1f<br>add edx, eax<br>mov eax, 0x66666667<br>mov ecx, edx<br>imul edi<br>sar edx, 1<br>mov eax, edx<br>shr eax, 0x1f<br>add edx, eax<br>cmp edx, ecx<br>jge 0x438202<br>mov ecx, edx<br>push ecx<br>push ecx<br>push ebp<br>push edi<br>push ebx<br>push ebx<br>call dword[sym.imp.GDI32.dll_CreateRoundRectRgn]<br>jmp 0x43821a<br>push ebp<br>push edi<br>push ebx<br>push ebx<br>call dword[sym.imp.GDI32.dll_CreateEllipticRgn]<br>push eax<br>lea ecx, [esp+0x18]<br>call fcn.004ba926<br>mov ebp, dword[esp+0x18]<br>mov ecx, dword[esi+0x1c]<br>lea eax, [esp+0x14]<br>push 1<br>neg eax<br>sbb eax, eax<br>and eax, ebp<br>push eax<br>push ecx<br>call dword[sym.imp.USER32.dll_SetWindowRgn]<br>add esi, 0x1d4<br>mov ecx, esi<br>call fcn.004ba97d<br>lea ecx, [esp+0x14]<br>call fcn.004ba953<br>push eax<br>mov ecx, esi<br>call fcn.004ba926<br>mov dword[esp+0x14], 0x4d6ac8<br>lea ecx, [esp+0x14]<br>mov dword[esp+0x58], 4<br>call fcn.004ba97d<br>mov ecx, dword[esp+0x50]<br>pop edi<br>pop ebp<br>pop esi<br>pop ebx<br>mov dword<br>add esp, 0x4c<br>ret <br><eoc> ', 'null'],
[-28.911252975463867, 393.5085144042969, '<b><a href="/report/fcn.00670420@c92f0480e2fbc88393d2c65c08a235e0">fcn.00670420</a><br>@c92f0480e2fbc88393d2c65c08a235e0</b><br>push ebp<br>push edi<br>push esi<br>push ebx<br>sub esp, 0x7c<br>mov esi, dword[esp+0x90]<br>mov eax, dword[esi+0xf4]<br>cmp eax, 0xffffffff<br>jne 0x670452<br>mov dword[esi+0x48], 0xfffff00d<br>mov dword[esi+0xf0], 6<br>add esp, 0x7c<br>pop ebx<br>pop esi<br>pop edi<br>pop ebp<br>ret <br>mov edx, dword[esi+0x110]<br>mov ecx, dword[esi+0x114]<br>mov dword[esp], eax<br>mov dword[esp+0x30], edx<br>mov dword[esp+0x34], ecx<br>call dword[sym.imp.msvcrt.dll__get_osfhandle]<br>cmp eax, 0xffffffff<br>mov ebp, eax<br>je 0x670631<br>mov ecx, dword[esp+0x30]<br>mov ebx, dword[esp+0x34]<br>mov edx, ecx<br>mov ecx, ebx<br>not ecx<br>not edx<br>mov eax, ecx<br>or eax, edx<br>jne 0x670553<br>mov dword[esp+0x38], 0<br>mov dword[esp+0x2c], 0<br>or ecx, edx<br>xor ebx, ebx<br>xor edi, edi<br>mov dword[esp+0x28], ecx<br>jmp 0x6704b8<br>cmp dword[esi+0x108], ebx<br>jbe 0x670513<br>mov edx, dword[esp+0x28]<br>test edx, edx<br>je 0x6704d4<br>xor edx, edx<br>mov eax, edi<br>add eax, dword[esp+0x30]<br>adc edx, dword[esp+0x34]<br>mov dword[esp+0x64], eax<br>mov dword[esp+0x68], edx<br>mov eax, dword[esi+0x10c]<br>mov ecx, dword[esp+0x2c]<br>lea eax, [eax+ebx*8]<br>mov dword[esp+0x10], ecx<br>lea ecx, [esp+0x4c]<br>add ebx, 1<br>mov dword[esp+0xc], ecx<br>mov edx, dword[eax]<br>mov dword[esp+8], edx<br>mov eax, dword[eax+4]<br>mov dword[esp], ebp<br>mov dword[esp+4], eax<br>call dword[sym.imp.KERNEL32.dll_ReadFile]<br>sub esp, 0x14<br>add edi, dword[esp+0x4c]<br>test eax, eax<br>mov edx, edi<br>jne 0x6704b0<br>mov ecx, eax<br>mov eax, dword[esp+0x38]<br>test eax, eax<br>jne 0x6705f0<br>or ecx, edx<br>je 0x6705d0<br>cmp edx, 0xffffffff<br>mov dword[esi+0x48], edx<br>jne 0x67044a<br>call dword[sym.imp.msvcrt.dll___doserrno]<br>mov eax, dword[eax]<br>mov dword[esi+0xf0], eax<br>mov dword[esp], eax<br>call fcn.0066e3a0<br>mov dword[esi+0x48], eax<br>jmp 0x67044a<br>lea eax, [esp+0x50]<br>mov dword[esp+0x3c], ecx<br>mov dword[esp+0x28], edx<br>mov dword[esp+0x5c], 0<br>mov dword[esp+0x60], 0<br>mov dword[esp+0x64], 0<br>mov dword[esp+0x68], 0<br>mov dword[esp+0x6c], 0<br>mov dword[esp+0x10], 1<br>mov dword[esp+0xc], eax<br>mov dword[esp+4], 0<br>mov dword[esp+8], 0<br>mov dword[esp], ebp<br>call dword[sym.imp.KERNEL32.dll_SetFilePointerEx]<br>sub esp, 0x14<br>test eax, eax<br>setne al<br>mov edx, dword[esp+0x28]<br>mov ecx, dword[esp+0x3c]<br>movzx eax, al<br>mov dword[esp+0x38], eax<br>lea eax, [esp+0x5c]<br>mov dword[esp+0x2c], eax<br>jmp 0x6704a4<br>call dword[sym.imp.KERNEL32.dll_GetLastError]<br>cmp eax, 0x26<br>jne 0x670650<br>mov dword[esi+0x48], 0<br>jmp 0x67044a<br>mov dword[esp+0x2c], edx<br>mov eax, dword[esp+0x50]<br>mov edx, dword[esp+0x54]<br>mov dword[esp+0x28], ecx<br>mov dword[esp+0x10], 0<br>mov dword[esp+0xc], 0<br>mov dword[esp+4], eax<br>mov dword[esp], ebp<br>mov dword[esp+8], edx<br>call dword[sym.imp.KERNEL32.dll_SetFilePointerEx]<br>sub esp, 0x14<br>mov edx, dword[esp+0x2c]<br>mov ecx, dword[esp+0x28]<br>jmp 0x670521<br>mov dword[esi+0xf0], 6<br>mov dword[esp], 6<br>call fcn.0066e3a0<br>mov dword[esi+0x48], eax<br>jmp 0x67044a<br>mov dword[esi+0xf0], eax<br>mov dword[esp], eax<br>call fcn.0066e3a0<br>mov dword[esi+0x48], eax<br>jmp 0x67044a<br><eoc> ', 'null'],
[368.70379638671875, -199.8379669189453, '<b><a href="/report/fcn.00408b10@e2ba7f10eb234338a49853c34d7d9c56">fcn.00408b10</a><br>@e2ba7f10eb234338a49853c34d7d9c56</b><br>push ebp<br>mov ebp, esp<br>sub esp, 0x34c<br>mov eax, dword[0x55bdf4]<br>xor eax, ebp<br>mov dword[ebp-4], eax<br>mov edx, dword[ebp+0x10]<br>push ebx<br>mov ebx, dword[ebp+8]<br>push esi<br>xor esi, esi<br>push edi<br>mov dword[ebp-0x320], ebx<br>mov dword[ebp-0x318], edx<br>mov dword[ebp-0x334], esi<br>mov dword[ebp-0x330], esi<br>mov dword[ebp-0x32c], esi<br>mov dword[ebp-0x324], esi<br>cmp ebx, esi<br>je 0x408b6b<br>mov ecx, dword[ebp+0xc]<br>xor eax, eax<br>cmp ecx, esi<br>jbe 0x408b6b<br>nop <br>cmp dword[ebx+eax*8], 0xffffffff<br>jne 0x408b85<br>inc eax<br>cmp eax, ecx<br>jb 0x408b60<br>push edx<br>call fcn.004086b0<br>add esp, 4<br>pop edi<br>pop esi<br>pop ebx<br>mov ecx, dword[ebp-4]<br>xor ecx, ebp<br>call fcn.004f166b<br>mov esp, ebp<br>pop ebp<br>ret <br>cmp edx, esi<br>jle 0x408bc1<br>lea eax, [ebp-0x34c]<br>push eax<br>mov dword[ebp-0x324], edx<br>call fcn.00413660<br>mov ecx, dword[eax]<br>mov edx, dword[eax+4]<br>mov dword[ebp-0x334], ecx<br>mov ecx, dword[eax+8]<br>mov dword[ebp-0x330], edx<br>mov edx, dword[eax+0xc]<br>add esp, 4<br>mov dword[ebp-0x32c], ecx<br>mov dword[ebp-0x328], edx<br>xor ecx, ecx<br>xor edi, edi<br>xor eax, eax<br>mov dword[ebp-0x20c], ecx<br>mov dword[ebp-0x108], esi<br>mov dword[ebp-0x310], edi<br>mov dword[ebp-0x314], 0xffffffff<br>mov dword[ebp-0x31c], eax<br>lea esp, [esp]<br>xor edx, edx<br>mov word[ebx+eax*8+6], dx<br>mov edx, dword[ebx+eax*8]<br>cmp edx, 0xffffffff<br>je 0x408cd7<br>movzx ebx, word[ebx+eax*8+4]<br>test bl, 7<br>je 0x408ccb<br>cmp edx, dword[ebp-0x314]<br>jbe 0x408c1f<br>mov dword[ebp-0x314], edx<br>test bl, 1<br>je 0x408c5b<br>xor eax, eax<br>test ecx, ecx<br>je 0x408c3e<br>lea ebx, [ebx]<br>cmp dword[ebp+eax*4-0x208], edx<br>je 0x408c3e<br>inc eax<br>cmp eax, ecx<br>jb 0x408c30<br>cmp eax, ecx<br>jne 0x408c5b<br>cmp ecx, 0x40<br>jae 0x408c5b<br>mov dword[ebp+eax*4-0x208], edx<br>mov ecx, dword[ebp-0x20c]<br>inc ecx<br>mov dword[ebp-0x20c], ecx<br>test bl, 4<br>je 0x408c91<br>xor eax, eax<br>test esi, esi<br>je 0x408c74<br>cmp dword[ebp+eax*4-0x104], edx<br>je 0x408c74<br>inc eax<br>cmp eax, esi<br>jb 0x408c66<br>cmp eax, esi<br>jne 0x408c91<br>cmp esi, 0x40<br>jae 0x408c91<br>mov dword[ebp+eax*4-0x104], edx<br>mov esi, dword[ebp-0x108]<br>inc esi<br>mov dword[ebp-0x108], esi<br>test bl, 2<br>je 0x408ccb<br>xor eax, eax<br>test edi, edi<br>je 0x408cae<br>lea esp, [esp]<br>cmp dword[ebp+eax*4-0x30c], edx<br>je 0x408cae<br>inc eax<br>cmp eax, edi<br>jb 0x408ca0<br>cmp eax, edi<br>jne 0x408ccb<br>cmp edi, 0x40<br>jae 0x408ccb<br>mov dword[ebp+eax*4-0x30c], edx<br>mov edi, dword[ebp-0x310]<br>inc edi<br>mov dword[ebp-0x310], edi<br>mov ebx, dword[ebp-0x320]<br>mov eax, dword[ebp-0x31c]<br>inc eax<br>mov dword[ebp-0x31c], eax<br>cmp eax, dword[ebp+0xc]<br>jb 0x408bf0<br>test ecx, ecx<br>jne 0x408d13<br>test esi, esi<br>jne 0x408d13<br>test edi, edi<br>jne 0x408d13<br>mov eax, dword[ebp-0x318]<br>push eax<br>call fcn.004086b0<br>add esp, 4<br>pop edi<br>pop esi<br>pop ebx<br>mov ecx, dword[ebp-4]<br>xor ecx, ebp<br>call fcn.004f166b<br>mov esp, ebp<br>pop ebp<br>ret <br>mov ebx, dword[ebp-0x324]<br>xor edx, edx<br>cmp dword[ebp-0x318], edx<br>lea eax, [ebp-0x33c]<br>setl dl<br>dec edx<br>and edx, eax<br>mov dword[ebp-0x31c], edx<br>mov edx, dword[ebp-0x314]<br>inc edx<br>mov dword[ebp-0x314], edx<br>jmp 0x408d54<br>mov edi, dword[ebp-0x310]<br>mov esi, dword[ebp-0x108]<br>mov ecx, dword[ebp-0x20c]<br>mov edx, dword[ebp-0x318]<br>xor eax, eax<br>cmp edx, eax<br>jle 0x408d8f<br>mov eax, 0x10624dd3<br>imul ebx<br>sar edx, 6<br>mov eax, edx<br>shr eax, 0x1f<br>add eax, edx<br>mov dword[ebp-0x33c], eax<br>imul eax, eax, 0x3e8<br>mov edx, ebx<br>sub edx, eax<br>imul edx, edx, 0x3e8<br>mov dword[ebp-0x338], edx<br>jmp 0x408d9d<br>jne 0x408d9d<br>mov dword[ebp-0x33c], eax<br>mov dword[ebp-0x338], eax<br>mov eax, dword[ebp-0x31c]<br>neg edi<br>sbb edi, edi<br>push eax<br>lea edx, [ebp-0x310]<br>and edi, edx<br>neg esi<br>sbb esi, esi<br>lea eax, [ebp-0x108]<br>and esi, eax<br>mov eax, dword[ebp-0x314]<br>neg ecx<br>push edi<br>sbb ecx, ecx<br>lea edx, [ebp-0x20c]<br>push esi<br>and ecx, edx<br>push ecx<br>push eax<br>call dword[sym.imp.WS2_32.dll_select]<br>cmp eax, 0xffffffff<br>jne 0x408e74<br>call dword[sym.imp.WS2_32.dll_WSAGetLastError]<br>test eax, eax<br>je 0x408dff<br>cmp dword[0x5620a8], 0<br>jne 0x408e78<br>cmp eax, 0x2714<br>jne 0x408e78<br>cmp dword[ebp-0x318], 0<br>jle 0x408d42<br>lea ecx, [ebp-0x34c]<br>push ecx<br>call fcn.00413660<br>mov edx, dword[ebp-0x334]<br>sub esp, 0xc<br>mov ecx, esp<br>mov dword[ecx], edx<br>mov edx, dword[ebp-0x330]<br>mov dword[ecx+4], edx<br>mov edx, dword[ebp-0x32c]<br>mov dword[ecx+8], edx<br>mov edx, dword[ebp-0x328]<br>mov dword[ecx+0xc], edx<br>mov edx, dword[eax]<br>sub esp, 0x10<br>mov ecx, esp<br>mov dword[ecx], edx<br>mov edx, dword[eax+4]<br>mov dword[ecx+4], edx<br>mov edx, dword[eax+8]<br>mov eax, dword[eax+0xc]<br>mov dword[ecx+8], edx<br>mov dword[ecx+0xc], eax<br>call fcn.004136a0<br>mov ebx, dword[ebp-0x318]<br>sub ebx, eax<br>add esp, 0x20<br>test ebx, ebx<br>jle 0x408e8e<br>jmp 0x408d42<br>test eax, eax<br>jns 0x408e8c<br>or eax, 0xffffffff<br>pop edi<br>pop esi<br>pop ebx<br>mov ecx, dword[ebp-4]<br>xor ecx, ebp<br>call fcn.004f166b<br>mov esp, ebp<br>pop ebp<br>ret <br>jne 0x408ea1<br>xor eax, eax<br>pop edi<br>pop esi<br>pop ebx<br>mov ecx, dword[ebp-4]<br>xor ecx, ebp<br>call fcn.004f166b<br>mov esp, ebp<br>pop ebp<br>ret <br>mov esi, dword[ebp-0x320]<br>mov edi, dword[ebp+0xc]<br>xor ebx, ebx<br>add esi, 6<br>nop <br>mov eax, dword[esi-6]<br>xor ecx, ecx<br>mov word[esi], cx<br>cmp eax, 0xffffffff<br>je 0x408f09<br>lea edx, [ebp-0x20c]<br>push edx<br>push eax<br>call sub.WS2_32.dll___WSAFDIsSet<br>test eax, eax<br>je 0x408ed2<br>or word[esi], 1<br>mov ecx, dword[esi-6]<br>lea eax, [ebp-0x108]<br>push eax<br>push ecx<br>call sub.WS2_32.dll___WSAFDIsSet<br>test eax, eax<br>je 0x408eea<br>or word[esi], 4<br>mov eax, dword[esi-6]<br>lea edx, [ebp-0x310]<br>push edx<br>push eax<br>call sub.WS2_32.dll___WSAFDIsSet<br>test eax, eax<br>je 0x408f02<br>or word[esi], 2<br>cmp word[esi], 0<br>je 0x408f09<br>inc ebx<br>add esi, 8<br>dec edi<br>jne 0x408eb0<br>mov ecx, dword[ebp-4]<br>pop edi<br>pop esi<br>mov eax, ebx<br>xor ecx, ebp<br>pop ebx<br>call fcn.004f166b<br>mov esp, ebp<br>pop ebp<br>ret <br><eoc> ', 'null'],
[248.74832153320312, -272.7470703125, '<b><a href="/report/fcn.1000bb80@4c3818fdf32d89a09257dbc9d3e142ea">fcn.1000bb80</a><br>@4c3818fdf32d89a09257dbc9d3e142ea</b><br>push 0xffffffffffffffff<br>push 0x1002ad7f<br>mov eax, dword<br>push eax<br>sub esp, 0x78c<br>mov eax, dword[0x10034390]<br>xor eax, esp<br>mov dword[esp+0x788], eax<br>push ebx<br>push ebp<br>push esi<br>push edi<br>mov eax, dword[0x10034390]<br>xor eax, esp<br>push eax<br>lea eax, [esp+0x7a0]<br>mov dword<br>lea eax, [esp+0x28]<br>push eax<br>xor ebp, ebp<br>push 0xf01ff<br>mov edi, ecx<br>mov dword[esp+0x20], ebp<br>call dword[sym.imp.KERNEL32.dll_GetCurrentProcess]<br>push eax<br>call dword[sym.imp.ADVAPI32.dll_OpenProcessToken]<br>test eax, eax<br>je 0x1000bcb0<br>lea ecx, [esp+0x20]<br>push ecx<br>push str.SeDebugPrivilege<br>push ebp<br>call dword[sym.imp.ADVAPI32.dll_LookupPrivilegeValueW]<br>test eax, eax<br>je 0x1000bcb0<br>mov edx, dword[esp+0x20]<br>mov eax, dword[esp+0x24]<br>push ebp<br>push ebp<br>push 0x10<br>lea ecx, [esp+0x38]<br>push ecx<br>mov dword[esp+0x40], edx<br>mov edx, dword[esp+0x38]<br>push ebp<br>push edx<br>mov dword[esp+0x44], 1<br>mov dword[esp+0x4c], eax<br>mov dword[esp+0x50], 2<br>call dword[sym.imp.ADVAPI32.dll_AdjustTokenPrivileges]<br>test eax, eax<br>jne 0x1000bcb0<br>call dword[sym.imp.KERNEL32.dll_GetLastError]<br>cmp eax, 0x514<br>jne 0x1000bcb0<br>cmp dword[0x100368c0], ebp<br>jg 0x1000bc7e<br>lea eax, [esp+0xcc]<br>push eax<br>lea edi, [ebp+0x25]<br>mov ebx, str...installincludeProcessOperation.cpp<br>call fcn.10009a80<br>add eax, 4<br>push str.The_token_does_not_have_the_specified_privilege.__n<br>mov dword[esp+0x7ac], ebp<br>push eax<br>mov dword[esp+0x20], 1<br>call fcn.10003ac0<br>add esp, 8<br>mov dword[esp+0x7a8], 0xffffffff<br>test byte[esp+0x18], 1<br>je 0x1000bc9c<br>lea ecx, [esp+0xcc]<br>call fcn.10009af0<br>push str.The_token_does_not_have_the_specified_privilege.__n<br>call fcn.10015379<br>add esp, 4<br>xor eax, eax<br>jmp 0x1000bf62<br>mov edx, dword[0x10035a8c]<br>mov eax, dword[edx+0xc]<br>mov ecx, 0x10035a8c<br>call eax<br>lea esi, [eax+0x10]<br>mov dword[esp+0x1c], esi<br>push 0x206<br>lea ecx, [esp+0x59a]<br>push ebp<br>mov dword[esp+0x7b0], 1<br>push ecx<br>mov word[esp+0x5a0], bp<br>call fcn.100157d0<br>add esp, 0xc<br>push 0x206<br>lea edx, [esp+0x392]<br>push ebp<br>push edx<br>mov word[esp+0x398], bp<br>call fcn.100157d0<br>add esp, 0xc<br>push 2<br>lea eax, [esp+0x598]<br>push edi<br>push eax<br>call fcn.10013d4f<br>add esp, 0xc<br>push 0x104<br>lea ecx, [esp+0x390]<br>push ecx<br>lea edx, [esp+0x59c]<br>push edx<br>call dword[sym.imp.KERNEL32.dll_QueryDosDeviceW]<br>mov eax, edi<br>lea edx, [eax+2]<br>mov cx, word[eax]<br>add eax, 2<br>cmp cx, bp<br>jne 0x1000bd41<br>sub eax, edx<br>sar eax, 1<br>add eax, 0xfffffffe<br>push eax<br>add edi, 4<br>lea eax, [esp+0x390]<br>push edi<br>push eax<br>call fcn.1001543e<br>add esp, 0xc<br>push ebp<br>push 2<br>call sub.KERNEL32.dll_CreateToolhelp32Snapshot<br>mov edi, eax<br>or ebx, 0xffffffff<br>cmp edi, ebx<br>mov dword[esp+0x20], edi<br>jne 0x1000bda4<br>lea eax, [esi-0x10]<br>mov dword[esp+0x7a8], ebx<br>lea ecx, [eax+0xc]<br>lock xadd<br>dec ebx<br>test ebx, ebx<br>jg 0x1000bd9d<br>mov ecx, dword[eax]<br>mov edx, dword[ecx]<br>push eax<br>mov eax, dword[edx+4]<br>call eax<br>xor eax, eax<br>jmp 0x1000bf62<br>lea ecx, [esp+0x15c]<br>push ecx<br>push edi<br>mov dword[esp+0x164], 0x22c<br>call sub.KERNEL32.dll_Process32FirstW<br>test eax, eax<br>jne 0x1000bdf0<br>push edi<br>call dword[sym.imp.KERNEL32.dll_CloseHandle]<br>lea eax, [esi-0x10]<br>mov dword[esp+0x7a8], ebx<br>lea edx, [eax+0xc]<br>lock xadd<br>dec ebx<br>test ebx, ebx<br>jg 0x1000bd9d<br>mov ecx, dword[eax]<br>mov edx, dword[ecx]<br>push eax<br>mov eax, dword[edx+4]<br>call eax<br>xor eax, eax<br>jmp 0x1000bf62<br>mov ecx, dword[esp+0x164]<br>push ecx<br>push ebp<br>push 0x1f0fff<br>call dword[sym.imp.KERNEL32.dll_OpenProcess]<br>mov ebx, eax<br>cmp ebx, ebp<br>je 0x1000bf19<br>mov eax, dword[esi-8]<br>mov ecx, 1<br>sub ecx, dword[esi-4]<br>sub eax, 0x104<br>or eax, ecx<br>jge 0x1000be34<br>mov ecx, 0x104<br>lea eax, [esp+0x1c]<br>call fcn.10004470<br>mov esi, dword[esp+0x1c]<br>push 0x104<br>push esi<br>push ebx<br>call sub.PSAPI.DLL_GetProcessImageFileNameW<br>cmp esi, ebp<br>jne 0x1000be48<br>xor ecx, ecx<br>jmp 0x1000be69<br>mov ecx, esi<br>lea edi, [ecx+2]<br>lea ecx, [ecx]<br>mov dx, word[ecx]<br>add ecx, 2<br>cmp dx, bp<br>jne 0x1000be50<br>sub ecx, edi<br>sar ecx, 1<br>js 0x1000bf8a<br>mov edi, dword[esp+0x20]<br>cmp ecx, dword[esi-8]<br>jg 0x1000bf8a<br>cmp eax, ebp<br>mov dword[esi-0xc], ecx<br>mov word[esi+ecx*2], bp<br>je 0x1000bf19<br>cmp dword[esi-4], 1<br>jle 0x1000be99<br>mov edx, dword[esi-0xc]<br>push edx<br>lea eax, [esp+0x20]<br>push eax<br>call fcn.100044c0<br>mov esi, dword[esp+0x1c]<br>lea ecx, [esp+0x38c]<br>push ecx<br>push esi<br>call fcn.10013850<br>add esp, 8<br>test eax, eax<br>jne 0x1000bf19<br>push ebp<br>push ebx<br>call dword[sym.imp.KERNEL32.dll_TerminateProcess]<br>test eax, eax<br>jne 0x1000bf19<br>cmp dword[0x100368c0], ebp<br>jg 0x1000bef9<br>lea edx, [esp+0x3c]<br>push edx<br>lea edi, [eax+0x60]<br>mov ebx, str...installincludeProcessOperation.cpp<br>call fcn.10009a80<br>mov ecx, 2<br>add eax, 4<br>push str.TerminateProcess_error.__n<br>mov byte[esp+0x7ac], cl<br>or dword[esp+0x1c], ecx<br>push eax<br>call fcn.10003ac0<br>mov edi, dword[esp+0x28]<br>add esp, 8<br>mov dword[esp+0x7a8], 1<br>test byte[esp+0x18], 2<br>je 0x1000bf19<br>and dword[esp+0x18], 0xfffffffd<br>lea ecx, [esp+0x3c]<br>call fcn.10009af0<br>lea eax, [esp+0x15c]<br>push eax<br>push edi<br>call sub.KERNEL32.dll_Process32NextW<br>test eax, eax<br>jne 0x1000bdf0<br>push edi<br>call dword[sym.imp.KERNEL32.dll_CloseHandle]<br>lea eax, [esi-0x10]<br>mov dword[esp+0x7a8], 0xffffffff<br>lea ecx, [eax+0xc]<br>or edx, 0xffffffff<br>lock xadd<br>dec edx<br>test edx, edx<br>jg 0x1000bf5d<br>mov ecx, dword[eax]<br>mov edx, dword[ecx]<br>push eax<br>mov eax, dword[edx+4]<br>call eax<br>mov eax, 1<br>mov ecx, dword[esp+0x7a0]<br>mov dword<br>pop ecx<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>mov ecx, dword[esp+0x788]<br>xor ecx, esp<br>call fcn.10013bd6<br>add esp, 0x798<br>ret <br>push 0x80070057<br>call fcn.10004350<br>int3 <br><eoc> ', 'null'],
[484.140380859375, -88.9450912475586, '<b><a href="/report/fcn.64089c80@07e4412910bcf0f5969ef64c44eecb2d">fcn.64089c80</a><br>@07e4412910bcf0f5969ef64c44eecb2d</b><br>sub esp, 0x9c<br>mov eax, dword[0x641b8950]<br>xor eax, esp<br>mov dword[esp+0x98], eax<br>mov edx, dword[esp+0xa4]<br>xor eax, eax<br>push ebx<br>mov ebx, dword[esp+0xb0]<br>push ebp<br>mov dword[esp+0x28], eax<br>mov ebp, ecx<br>mov ecx, dword[esp+0xa8]<br>mov dword[esp+0x2c], eax<br>mov dword[esp+0x30], eax<br>mov dword[esp+0x34], eax<br>mov dword[esp+0x38], eax<br>mov dword[esp+0x3c], eax<br>mov dword[esp+0x40], eax<br>mov dword[esp+0x54], eax<br>mov dword[esp+0x58], eax<br>mov dword[esp+0x5c], eax<br>mov dword[esp+0x60], eax<br>mov dword[esp+0x64], eax<br>mov dword[esp+0x68], eax<br>mov dword[esp+0x6c], eax<br>mov eax, edx<br>push esi<br>mov esi, dword[esp+0xb4]<br>or eax, esi<br>mov dword[esp+0xc], edx<br>mov dword[esp+0x10], esi<br>je 0x64089d07<br>mov dword[esp+0x24], ecx<br>mov dword[esp+0x20], edx<br>jmp 0x64089d17<br>lea eax, [esp+0x1b]<br>mov dword[esp+0x20], 1<br>mov dword[esp+0x24], eax<br>test byte[esp+0xbc], 6<br>lea eax, [esp+0x20]<br>mov dword[esp+0x34], eax<br>lea eax, [esp+0x58]<br>mov dword[esp+0x38], 1<br>mov dword[esp+0x2c], eax<br>mov dword[esp+0x30], 0x1c<br>je 0x64089d51<br>lea eax, [esp+0x74]<br>mov dword[esp+0x3c], 0x30<br>mov dword[esp+0x40], eax<br>mov eax, dword[ebp+0x80]<br>mov dword[esp+0x48], 0<br>mov dword[esp+0x14], 0<br>push 0<br>push 0<br>test eax, eax<br>je 0x64089d80<br>lea ecx, [esp+0x1c]<br>push ecx<br>lea ecx, [esp+0x38]<br>push ecx<br>push dword[ebp+0x6c]<br>call eax<br>jmp 0x64089da4<br>lea eax, [esp+0x38]<br>push eax<br>lea eax, [esp+0x64]<br>push eax<br>lea eax, [esp+0x58]<br>push eax<br>lea eax, [esp+0x28]<br>push eax<br>push 1<br>lea eax, [esp+0x3c]<br>push eax<br>push dword[ebp+0x6c]<br>call dword[sym.imp.WS2_32.dll_WSARecvFrom]<br>cdq <br>and eax, edx<br>cmp eax, 0xffffffff<br>jne 0x64089e3f<br>call dword[sym.imp.WS2_32.dll_WSAGetLastError]<br>cmp eax, 0x2738<br>jne 0x64089df1<br>mov eax, dword[esp+0x14]<br>xor ecx, ecx<br>cmp ecx, esi<br>jl 0x64089de5<br>jg 0x64089dd2<br>cmp eax, dword[esp+0xb0]<br>jbe 0x64089de5<br>mov eax, dword[esp+0xb0]<br>mov esi, dword[esp+0xb4]<br>jmp 0x64089e70<br>mov esi, ecx<br>mov dword[esp+0xc], eax<br>mov dword[esp+0x10], esi<br>jmp 0x64089e70<br>mov ecx, ebp<br>sub eax, 0x2744<br>je 0x64089e09<br>sub eax, 2<br>je 0x64089e03<br>push 0x13<br>jmp 0x64089e0b<br>push 0x1b<br>push 0<br>jmp 0x64089e0d<br>push 0x1a<br>push 7<br>call fcn.64087a40<br>or esi, 0xffffffff<br>mov dword[esp+0x10], esi<br>test ebx, ebx<br>je 0x64089fac<br>mov ecx, ebx<br>call sym<br>lea ecx, [ebx+4]<br>call sym<br>mov dword[ebx+8], 0<br>mov dword[ebx+0xc], esi<br>jmp 0x64089fac<br>mov eax, dword[esp+0x14]<br>xor esi, esi<br>test byte[esp+0xbc], 1<br>mov dword[esp+0xc], eax<br>mov dword[esp+0x10], esi<br>je 0x64089e70<br>push ebx<br>lea eax, [ebx+0x10]<br>push eax<br>lea eax, [esp+0x60]<br>push eax<br>push dword[ebp+0x6c]<br>call fcn.6408a880<br>mov eax, dword[esp+0x1c]<br>add esp, 0x10<br>and eax, esi<br>cmp eax, 0xffffffff<br>je 0x64089fa8<br>cmp dword[ebp+0x80], 0<br>je 0x64089fa8<br>xor esi, esi<br>cmp dword[esp+0x3c], 0xc<br>cmovae esi, dword[esp+0x40]<br>test esi, esi<br>je 0x64089fa8<br>push edi<br>mov edi, dword[sym.imp.Qt5Core.dll_public:_static_class_QString___cdecl_QString::number_unsigned_long_int__int_]<br>cmp dword[esi+4], 0x29<br>jne 0x64089ef8<br>cmp dword[esi+8], 0x13<br>jne 0x64089ef8<br>cmp dword[esi], 0x20<br>jb 0x64089ef8<br>lea edi, [esi+0xc]<br>push edi<br>lea ecx, [esp+0x24]<br>call sym<br>mov eax, dword[edi+0x10]<br>mov edi, dword[sym.imp.Qt5Core.dll_public:_static_class_QString___cdecl_QString::number_unsigned_long_int__int_]<br>test eax, eax<br>je 0x64089eef<br>push 0xa<br>push eax<br>lea eax, [esp+0x60]<br>push eax<br>call edi<br>add esp, 0xc<br>lea ecx, [esp+0x20]<br>push eax<br>call sym<br>lea ecx, [esp+0x58]<br>call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QString::destructor_void_]<br>lea ecx, [esp+0x20]<br>call sym<br>cmp dword[esi+4], 0<br>jne 0x64089f58<br>cmp dword[esi+8], 0x13<br>jne 0x64089f58<br>cmp dword[esi], 0x14<br>jb 0x64089f58<br>lea eax, [esp+0x50]<br>push eax<br>push dword[esi+0xc]<br>push dword[ebp+0x6c]<br>call dword[sym.imp.WS2_32.dll_WSANtohl]<br>push dword[esp+0x50]<br>lea ecx, [esp+0x30]<br>call sym<br>mov eax, dword[esi+0x10]<br>test eax, eax<br>je 0x64089f4f<br>push 0xa<br>push eax<br>lea eax, [esp+0x5c]<br>push eax<br>call edi<br>add esp, 0xc<br>lea ecx, [esp+0x2c]<br>push eax<br>call sym<br>lea ecx, [esp+0x54]<br>call dword[sym.imp.Qt5Core.dll_public:_void___thiscall_QString::destructor_void_]<br>lea ecx, [esp+0x2c]<br>call sym<br>cmp dword[esi], 0x10<br>jne 0x64089f7b<br>mov eax, dword[esi+4]<br>cmp eax, 0x29<br>jne 0x64089f6b<br>cmp dword[esi+8], 0x15<br>je 0x64089f75<br>test eax, eax<br>jne 0x64089f7b<br>cmp dword[esi+8], 4<br>jne 0x64089f7b<br>mov eax, dword[esi+0xc]<br>mov dword[ebx+0xc], eax<br>mov edi, dword[esi]<br>mov eax, dword[esp+0x40]<br>add edi, 3<br>add eax, dword[esp+0x44]<br>mov edx, edi<br>and edx, 0xfffffffc<br>add edx, 0xc<br>add edx, esi<br>cmp edx, eax<br>ja 0x64089fa7<br>and edi, 0xfffffffc<br>add esi, edi<br>mov edi, dword[sym.imp.Qt5Core.dll_public:_static_class_QString___cdecl_QString::number_unsigned_long_int__int_]<br>jne 0x64089ea3<br>pop edi<br>mov esi, dword[esp+0xc]<br>mov ecx, dword[esp+0xa4]<br>mov eax, esi<br>mov edx, dword[esp+0x10]<br>pop esi<br>pop ebp<br>pop ebx<br>xor ecx, esp<br>call fcn.641429ea<br>add esp, 0x9c<br>ret 0x14<br><eoc> ', 'null'],
[-167.33795166015625, 165.22442626953125, '<b><a href="/report/fcn.0066c590@c92f0480e2fbc88393d2c65c08a235e0">fcn.0066c590</a><br>@c92f0480e2fbc88393d2c65c08a235e0</b><br>push ebp<br>push edi<br>xor ecx, ecx<br>push esi<br>push ebx<br>xor edi, edi<br>sub esp, 0x4c<br>mov ebx, dword[esp+0x68]<br>mov esi, dword[esp+0x60]<br>lea edx, [ebx+6]<br>lea eax, [ebx+2]<br>mov dword[ebx+2], 0<br>mov dword[ebx+0x18], 0<br>and edx, 0xfffffffc<br>sub eax, edx<br>add eax, 0x1a<br>and eax, 0xfffffffc<br>mov dword[edx+edi], ecx<br>add edi, 4<br>cmp edi, eax<br>jb 0x66c5c2<br>mov eax, 0x17<br>mov word[ebx], ax<br>movzx eax, word[esp+0x64]<br>mov dword[esp], eax<br>call dword[sym.imp.WS2_32.dll_htons]<br>sub esp, 4<br>mov word[ebx+2], ax<br>mov dword[esp+4], 0x25<br>mov dword[esp], esi<br>call sub.msvcrt.dll_strchr<br>test eax, eax<br>je 0x66c638<br>mov edx, eax<br>mov ecx, 0x27<br>sub edx, esi<br>cmp edx, 0x27<br>cmova edx, ecx<br>cmp edx, 4<br>jae 0x66c660<br>test edx, edx<br>je 0x66c621<br>movzx ecx, byte[esi]<br>test dl, 2<br>mov byte[esp+0x18], cl<br>jne 0x66c690<br>add eax, 1<br>mov byte[esp+edx+0x18], 0<br>lea esi, [esp+0x18]<br>mov dword[esp], eax<br>call sub.msvcrt.dll_atoi<br>mov dword[ebx+0x18], eax<br>add ebx, 8<br>mov dword[esp+4], esi<br>mov dword[esp], 0x17<br>mov dword[esp+8], ebx<br>call fcn.006915e0<br>add esp, 0x4c<br>pop ebx<br>pop esi<br>pop edi<br>pop ebp<br>ret <br>mov ecx, dword[esi+edx-4]<br>mov dword[esp+edx+0x14], ecx<br>lea ecx, [edx-1]<br>cmp ecx, 4<br>jb 0x66c621<br>mov edi, ecx<br>xor ecx, ecx<br>and edi, 0xfffffffc<br>mov ebp, dword[esi+ecx]<br>mov dword[esp+ecx+0x18], ebp<br>add ecx, 4<br>cmp ecx, edi<br>jb 0x66c677<br>jmp 0x66c621<br>movzx ecx, word[esi+edx-2]<br>mov word[esp+edx+0x16], cx<br>jmp 0x66c621<br><eoc> ', 'null'],
[485.3637390136719, -296.99005126953125, '<b><a href="/report/fcn.00453f00@4fe6510221c33bf023f6abed461fc13f">fcn.00453f00</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>mov eax, 0x12f4<br>call fcn.00498540<br>push ebx<br>push ebp<br>push esi<br>mov esi, dword[sym.imp.KERNEL32.dll_GetFullPathNameW]<br>push edi<br>lea eax, [esp+0x10]<br>push eax<br>lea ecx, [esp+0x34]<br>push ecx<br>push 0x104<br>push edx<br>call esi<br>lea eax, [esp+0x30]<br>lea edx, [eax+2]<br>lea ecx, [ecx]<br>mov cx, word[eax]<br>add eax, 2<br>test cx, cx<br>jne 0x453f30<br>sub eax, edx<br>sar eax, 1<br>je 0x453f52<br>cmp word[esp+eax*2+0x2e], 0x5c<br>lea eax, [esp+eax*2+0x2e]<br>jne 0x453f52<br>xor ecx, ecx<br>mov word[eax], cx<br>mov ecx, dword[esp+0x1308]<br>lea edx, [esp+0x10]<br>push edx<br>lea eax, [esp+0x244]<br>push eax<br>push 0x104<br>push ecx<br>call esi<br>lea eax, [esp+0x240]<br>lea edx, [eax+2]<br>jmp 0x453f80<br>mov cx, word[eax]<br>add eax, 2<br>test cx, cx<br>jne 0x453f80<br>sub eax, edx<br>sar eax, 1<br>je 0x453fa8<br>cmp word[esp+eax*2+0x23e], 0x5c<br>lea eax, [esp+eax*2+0x23e]<br>jne 0x453fa8<br>xor edx, edx<br>mov word[eax], dx<br>mov esi, dword[sym.imp.KERNEL32.dll_GetFileAttributesW]<br>lea eax, [esp+0x30]<br>push eax<br>call esi<br>cmp eax, 0xffffffff<br>je 0x453fed<br>test al, 0x10<br>je 0x453fed<br>lea eax, [esp+0x30]<br>add eax, 0xfffffffe<br>mov cx, word[eax+2]<br>add eax, 2<br>test cx, cx<br>jne 0x453fc5<br>mov ecx, dword[str..]<br>mov edx, dword[0x4aafc0]<br>mov dword[eax], ecx<br>mov cx, word[0x4aafc4]<br>mov dword[eax+4], edx<br>mov word[eax+8], cx<br>lea edx, [esp+0x240]<br>push edx<br>call esi<br>cmp eax, 0xffffffff<br>je 0x454038<br>test al, 0x10<br>je 0x454038<br>lea eax, [esp+0x240]<br>add eax, 0xfffffffe<br>lea ebx, [ebx]<br>mov cx, word[eax+2]<br>add eax, 2<br>test cx, cx<br>jne 0x454010<br>mov ecx, dword[str..]<br>mov edx, dword[0x4aafc0]<br>mov dword[eax], ecx<br>mov cx, word[0x4aafc4]<br>mov dword[eax+4], edx<br>mov word[eax+8], cx<br>lea edx, [esp+0x450]<br>push edx<br>lea eax, [esp+0x34]<br>push eax<br>call dword[sym.imp.KERNEL32.dll_FindFirstFileW]<br>mov dword[esp+0x10], eax<br>cmp eax, 0xffffffff<br>jne 0x454070<br>call dword[sym.imp.KERNEL32.dll_GetLastError]<br>mov ecx, dword[esp+0x1314]<br>mov dword[ecx], eax<br>xor eax, eax<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0x12f4<br>ret <br>mov edx, dword[esp+0x1314]<br>lea eax, [esp+0xee0]<br>push eax<br>lea ecx, [esp+0x10f4]<br>push ecx<br>mov dword[edx], 0<br>lea edx, [esp+0xcd8]<br>push edx<br>lea eax, [esp+0xacc]<br>push eax<br>lea ecx, [esp+0x40]<br>push ecx<br>call fcn.0048f6c4<br>lea edx, [esp+0xce4]<br>push edx<br>lea eax, [esp+0xad8]<br>push eax<br>push 0x4a52b0<br>mov esi, 0x105<br>lea edi, [esp+0x6c0]<br>call fcn.004738d0<br>mov ebp, dword[sym.imp.KERNEL32.dll_GetLastError]<br>mov edi, 0x104<br>add esp, 0x20<br>sub edi, eax<br>lea ebx, [esp+eax*2+0x6a0]<br>xor esi, esi<br>call dword[sym.imp.KERNEL32.dll_GetTickCount]<br>sub eax, dword[0x4c9124]<br>mov ecx, dword[0x4c28ec]<br>cmp eax, dword[ecx+0xd4]<br>jbe 0x45412e<br>push 0<br>push 0<br>push 0<br>push 0<br>lea edx, [esp+0x24]<br>push edx<br>call dword[sym.imp.USER32.dll_PeekMessageW]<br>test eax, eax<br>je 0x454123<br>push 1<br>push 0xffffffffffffffff<br>call fcn.00401340<br>add esp, 8<br>call dword[sym.imp.KERNEL32.dll_GetTickCount]<br>mov dword[0x4c9124], eax<br>test byte[esp+0x450], 0x10<br>jne 0x454246<br>lea eax, [esp+0x47c]<br>lea edx, [eax+2]<br>mov cx, word[eax]<br>add eax, 2<br>test cx, cx<br>jne 0x454146<br>sub eax, edx<br>sar eax, 1<br>cmp eax, edi<br>jbe 0x45416b<br>mov eax, dword[esp+0x1314]<br>mov dword[eax], 0x6f<br>jmp 0x454245<br>lea eax, [esp+0x47c]<br>mov edx, ebx<br>mov ecx, eax<br>sub edx, ecx<br>jmp 0x454180<br>movzx ecx, word[eax]<br>mov word[edx+eax], cx<br>add eax, 2<br>test cx, cx<br>jne 0x454180<br>lea edx, [esp+0x47c]<br>push edx<br>lea ecx, [esp+0x8b4]<br>lea edx, [esp+0x244]<br>call fcn.00454280<br>add esp, 4<br>cmp byte[esp+0x1310], 0<br>je 0x454213<br>lea eax, [esp+0x8b0]<br>push eax<br>lea ecx, [esp+0x6a4]<br>push ecx<br>call dword[sym.imp.KERNEL32.dll_MoveFileW]<br>test eax, eax<br>jne 0x454246<br>cmp byte[esp+0x130c], al<br>je 0x454206<br>lea edx, [esp+0x8b0]<br>push edx<br>call dword[sym.imp.KERNEL32.dll_DeleteFileW]<br>test eax, eax<br>je 0x454206<br>lea eax, [esp+0x8b0]<br>push eax<br>lea ecx, [esp+0x6a4]<br>push ecx<br>call dword[sym.imp.KERNEL32.dll_MoveFileW]<br>test eax, eax<br>jne 0x454246<br>call ebp<br>mov edx, dword[esp+0x1314]<br>mov dword[edx], eax<br>jmp 0x454245<br>xor eax, eax<br>cmp byte[esp+0x130c], al<br>lea ecx, [esp+0x8b0]<br>sete al<br>lea edx, [esp+0x6a0]<br>push eax<br>push ecx<br>push edx<br>call dword[sym.imp.KERNEL32.dll_CopyFileW]<br>test eax, eax<br>jne 0x454246<br>call ebp<br>mov ecx, dword[esp+0x1314]<br>mov dword[ecx], eax<br>inc esi<br>mov eax, dword[esp+0x10]<br>lea edx, [esp+0x450]<br>push edx<br>push eax<br>call dword[sym.imp.KERNEL32.dll_FindNextFileW]<br>test eax, eax<br>jne 0x4540e6<br>mov ecx, dword[esp+0x10]<br>push ecx<br>call dword[sym.imp.KERNEL32.dll_FindClose]<br>pop edi<br>mov eax, esi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0x12f4<br>ret <br><eoc> ', 'null'],
[-440.20111083984375, -65.28461456298828, '<b><a href="/report/fcn.30781840@e0efd357fccc8f4e2c059b0b54118ba8">fcn.30781840</a><br>@e0efd357fccc8f4e2c059b0b54118ba8</b><br>sub esp, 0x38<br>mov eax, dword[esp+0x3c]<br>push ebx<br>push esi<br>push edi<br>push ebp<br>xor esi, esi<br>push esi<br>push eax<br>call dword[sym.imp.USER32.dll_GetWindowLongA]<br>mov cx, word[eax+0x5c]<br>mov edi, eax<br>push ecx<br>mov eax, dword[edi+0x64]<br>mov dword[esp+0x18], eax<br>call fcn.307839e0<br>add esp, 4<br>test eax, eax<br>je 0x30781b01<br>mov eax, dword[esp+0x54]<br>mov ecx, dword[esp+0x58]<br>mov dword[esp+0x40], eax<br>mov dword[esp+0x44], ecx<br>and dword[edi+0x10], 0xffffff9f<br>mov eax, dword[edi+0x48]<br>mov ecx, dword[edi+0x4c]<br>mov edx, dword[edi+0x40]<br>lea ebx, [edi+0x90]<br>mov dword[esp+0x30], eax<br>push ebx<br>mov eax, dword[edi+0x44]<br>mov dword[esp+0x2c], ecx<br>lea ecx, [esp+0x44]<br>mov dword[esp+0x40], edx<br>mov dword[esp+0x38], eax<br>push ecx<br>push edi<br>call fcn.30784b90<br>mov word[esp+0x1e], ax<br>add esp, 0xc<br>mov ebp, dword[ebx]<br>xor ebx, ebx<br>cmp dword[edi+0x58], esi<br>jle 0x307818e2<br>xor eax, eax<br>mov ax, word[edi+0x94]<br>mov edx, 1<br>mov cl, bl<br>shl edx, cl<br>test eax, edx<br>jne 0x307818e2<br>inc ebx<br>cmp ebx, dword[edi+0x58]<br>jl 0x307818cf<br>mov ecx, dword[edi+0x50]<br>mov eax, ebx<br>cdq <br>idiv ecx<br>mov dword[esp+0x38], eax<br>mov eax, ebx<br>cdq <br>idiv ecx<br>test byte[edi+8], 1<br>mov dword[esp+0x2c], edx<br>je 0x307819bf<br>test byte[esp+0x12], 2<br>je 0x30781938<br>mov eax, dword[esp+0x14]<br>mov edx, dword[esp+0x3c]<br>shl ebp, 4<br>mov esi, 0x20<br>mov ecx, dword[ebp+eax+0xc]<br>mov eax, dword[esp+0x28]<br>add eax, ecx<br>mov ebp, dword[sym.imp.USER32.dll_SetRect]<br>push eax<br>push edx<br>push ecx<br>push 0<br>lea ecx, [edi+0x80]<br>push ecx<br>call ebp<br>jmp 0x3078193e<br>mov ebp, dword[sym.imp.USER32.dll_SetRect]<br>test byte[esp+0x12], 1<br>je 0x30781a5e<br>test byte[edi+8], 2<br>je 0x30781961<br>mov dword[esp+0x18], 0<br>mov edx, dword[esp+0x34]<br>mov dword[esp+0x1c], edx<br>jmp 0x30781996<br>mov eax, dword[edi+0x68]<br>mov ecx, dword[esp+0x38]<br>mov edx, dword[eax+ecx*4]<br>mov dword[esp+0x18], edx<br>mov eax, dword[edi+0x68]<br>test esi, 0x20<br>mov edx, dword[eax+ecx*4+4]<br>mov dword[esp+0x1c], edx<br>je 0x30781996<br>lea eax, [esp+0x1c]<br>lea ecx, [esp+0x18]<br>push eax<br>push ecx<br>push ebx<br>push edi<br>call fcn.30784970<br>add esp, 0x10<br>mov eax, dword[esp+0x14]<br>lea ecx, [edi+0x70]<br>shl ebx, 4<br>or esi, 0x40<br>mov edx, dword[ebx+eax+8]<br>mov eax, dword[esp+0x1c]<br>mov ebx, dword[esp+0x18]<br>push eax<br>mov eax, dword[esp+0x34]<br>add eax, edx<br>push eax<br>push ebx<br>push edx<br>push ecx<br>jmp 0x30781a5c<br>test byte[esp+0x12], 1<br>je 0x307819f3<br>shl ebp, 4<br>mov esi, 0x40<br>mov eax, dword[esp+0x14]<br>mov edx, dword[esp+0x34]<br>push edx<br>mov ecx, dword[ebp+eax+8]<br>lea ebp, [edi+0x70]<br>mov edx, dword[esp+0x34]<br>add edx, ecx<br>push edx<br>push 0<br>push ecx<br>push ebp<br>mov ebp, dword[sym.imp.USER32.dll_SetRect]<br>call ebp<br>jmp 0x307819f9<br>mov ebp, dword[sym.imp.USER32.dll_SetRect]<br>test byte[esp+0x12], 2<br>je 0x30781a5e<br>mov eax, dword[edi+0x6c]<br>mov ecx, dword[esp+0x2c]<br>mov edx, dword[eax+ecx*4]<br>mov dword[esp+0x20], edx<br>mov eax, dword[edi+0x6c]<br>test esi, 0x40<br>mov edx, dword[eax+ecx*4+4]<br>mov dword[esp+0x24], edx<br>je 0x30781a35<br>lea eax, [esp+0x24]<br>lea ecx, [esp+0x20]<br>push eax<br>push ecx<br>push ebx<br>push edi<br>call fcn.30784a90<br>add esp, 0x10<br>mov eax, dword[esp+0x14]<br>mov edx, dword[esp+0x24]<br>shl ebx, 4<br>or esi, 0x20<br>mov ecx, dword[ebx+eax+0xc]<br>mov eax, dword[esp+0x28]<br>add eax, ecx<br>push eax<br>push edx<br>push ecx<br>lea eax, [edi+0x80]<br>mov ecx, dword[esp+0x2c]<br>push ecx<br>push eax<br>call ebp<br>test esi, esi<br>je 0x30781b01<br>or dword[edi+0x10], esi<br>mov eax, dword[edi]<br>push eax<br>call dword[sym.imp.USER32.dll_SetCapture]<br>mov ecx, dword[edi]<br>push ecx<br>call dword[sym.imp.USER32.dll_GetDC]<br>test esi, 0x20<br>mov ebx, eax<br>je 0x30781ab1<br>lea eax, [edi+0x80]<br>mov ebp, dword[sym.imp.USER32.dll_InvertRect]<br>push eax<br>push ebx<br>call ebp<br>mov edx, dword[edi+0x8c]<br>mov ecx, dword[edi+0x84]<br>lea eax, [edx+ecx-1]<br>cdq <br>sub eax, edx<br>sar eax, 1<br>mov dword[esp+0x44], eax<br>jmp 0x30781ab7<br>mov ebp, dword[sym.imp.USER32.dll_InvertRect]<br>test esi, 0x40<br>je 0x30781ad9<br>lea esi, [edi+0x70]<br>push esi<br>push ebx<br>call ebp<br>mov ecx, dword[edi+0x78]<br>mov eax, dword[esi]<br>lea eax, [ecx+eax-1]<br>cdq <br>sub eax, edx<br>sar eax, 1<br>mov dword[esp+0x40], eax<br>push ebx<br>mov eax, dword[edi]<br>push eax<br>call dword[sym.imp.USER32.dll_ReleaseDC]<br>lea ecx, [esp+0x40]<br>mov eax, dword[edi]<br>push ecx<br>push eax<br>call dword[sym.imp.USER32.dll_ClientToScreen]<br>mov ecx, dword[esp+0x44]<br>mov eax, dword[esp+0x40]<br>push ecx<br>push eax<br>call dword[sym.imp.USER32.dll_SetCursorPos]<br>pop ebp<br>pop edi<br>pop esi<br>pop ebx<br>add esp, 0x38<br>ret <br><eoc> ', 'null'],
[25.74860954284668, 145.61813354492188, '<b><a href="/report/fcn.00432b11@20a93604f17ee6f3c2aa7b1f7a497fcf">fcn.00432b11</a><br>@20a93604f17ee6f3c2aa7b1f7a497fcf</b><br>push ebp<br>mov ebp, esp<br>and esp, 0xfffffff8<br>push 0xffffffffffffffff<br>push 0x45da5c<br>mov eax, dword<br>push eax<br>sub esp, 0xc0<br>mov eax, dword[0x482084]<br>xor eax, esp<br>mov dword[esp+0xb8], eax<br>push ebx<br>push esi<br>push edi<br>mov eax, dword[0x482084]<br>xor eax, esp<br>push eax<br>lea eax, [esp+0xd0]<br>mov dword<br>push dword[0x4836c0]<br>mov esi, ecx<br>push dword[0x483108]<br>mov dword[esp+0x54], esi<br>push 0<br>call fcn.00442225<br>mov eax, 0x6ac0<br>add esp, 0xc<br>mov word[esp+0x58], ax<br>lea eax, [esp+0x80]<br>push eax<br>push dword[0x4839a0]<br>mov dword[esp+0x5c], 0xf414c260<br>mov dword[esp+0x62], 0xd1b611cf<br>mov dword[esp+0x66], 0xbb00aa00<br>mov word[esp+0x6a], 0x58bb<br>call fcn.00442e3b<br>mov dword[esp+0x10], 0x56<br>mov ecx, dword[esp+0x10]<br>push 0x3d<br>pop edx<br>sub edx, ecx<br>add edx, dword[esp+0x10]<br>push 0x59<br>mov dword[esp+0x14], edx<br>mov ecx, dword[esp+0x14]<br>mov edx, dword[esp+0x14]<br>imul ecx, ecx, 0x5e<br>sub edx, ecx<br>mov ecx, dword[esp+0x14]<br>sub edx, ecx<br>mov dword[esp+0x14], edx<br>add dword[esp+0x14], 0x3e<br>mov ecx, dword[esp+0x14]<br>mov edx, dword[esp+0x14]<br>imul ecx, edx<br>mov edx, dword[esp+0x14]<br>imul ecx, edx<br>pop edx<br>sub edx, ecx<br>add edx, dword[esp+0x10]<br>push 5<br>mov dword[esp+0x14], edx<br>mov ecx, dword[esp+0x14]<br>mov edx, dword[esp+0x14]<br>sub ecx, edx<br>add ecx, dword[esp+0x14]<br>pop ebx<br>add ecx, dword[esp+0x10]<br>mov dword[esp+0x10], ecx<br>mov ecx, dword[esp+0x10]<br>add ecx, dword[esp+0x10]<br>mov dword[esp+0x10], ecx<br>mov ecx, dword[esp+0x10]<br>mov edx, dword[esp+0x10]<br>imul ecx, edx<br>mov dword[esp+0x10], ecx<br>test eax, eax<br>jns 0x432c4b<br>push eax<br>push dword[0x4836c4]<br>push 1<br>call fcn.00442225<br>add esp, 0xc<br>jmp 0x432e52<br>lea eax, [esi+0x10]<br>push eax<br>lea eax, [esp+0x84]<br>push eax<br>call fcn.0044306a<br>mov edi, eax<br>test edi, edi<br>jns 0x4336e1<br>and dword[esp+0x50], 0<br>mov dword[esp+0x14], ebx<br>mov dword[esp+0x10], 0x60<br>mov eax, dword[esp+0x10]<br>push 0xffffffffffffffa9<br>pop ecx<br>sub ecx, eax<br>add ecx, dword[esp+0x10]<br>push 0x2f<br>add ecx, dword[esp+0x18]<br>mov dword[esp+0x14], ecx<br>mov eax, dword[esp+0x14]<br>sub dword[esp+0x18], eax<br>mov eax, dword[esp+0x18]<br>cdq <br>pop ecx<br>idiv ecx<br>mov ecx, dword[esp+0x10]<br>lea eax, [eax+ecx+0x54]<br>mov dword[esp+0x10], eax<br>mov eax, dword[esp+0x10]<br>mov ecx, dword[esp+0x10]<br>imul eax, ecx<br>mov ecx, dword[esp+0x10]<br>imul eax, eax, 0x4f<br>imul ecx, ecx, 0x26<br>sub eax, ecx<br>mov ecx, dword[esp+0x14]<br>mov edx, dword[esp+0x14]<br>imul ecx, edx<br>add eax, ecx<br>mov dword[esp+0x14], eax<br>mov eax, dword[esp+0x14]<br>imul eax, eax, 0x2d<br>add eax, dword[esp+0x10]<br>mov dword[esp+0x14], eax<br>lea eax, [esp+0x50]<br>push eax<br>lea eax, [esp+0x84]<br>push eax<br>call fcn.00442d63<br>mov dword[esp+0x24], 0x35<br>mov dword[esp+0x34], 0x43<br>mov dword[esp+0x1c], 0x4f<br>mov dword[esp+0x2c], 0x4c<br>mov dword[esp+0x14], 0x4a<br>mov dword[esp+0x10], 0x37<br>mov eax, dword[esp+0x14]<br>mov ecx, dword[esp+0x24]<br>imul eax, ecx<br>mov ecx, dword[esp+0x14]<br>imul ecx, ecx, 0x26<br>sub ecx, eax<br>mov dword[esp+0x2c], ecx<br>mov eax, dword[esp+0x10]<br>mov ecx, dword[esp+0x24]<br>cmp ecx, eax<br>jg 0x432dc1<br>mov eax, dword[esp+0x10]<br>mov ecx, dword[esp+0x24]<br>imul eax, ecx<br>mov dword[esp+0x10], eax<br>mov eax, dword[esp+0x2c]<br>mov ecx, dword[esp+0x24]<br>imul eax, eax, 0x51<br>sub ecx, eax<br>mov dword[esp+0x10], ecx<br>mov eax, dword[esp+0x10]<br>mov ecx, dword[esp+0x10]<br>imul eax, ecx<br>mov ecx, dword[esp+0x10]<br>imul eax, ecx<br>mov ecx, dword[esp+0x2c]<br>imul eax, ecx<br>mov ecx, dword[esp+0x1c]<br>imul eax, ecx<br>mov ecx, dword[esp+0x14]<br>imul eax, eax, 0x2c<br>imul ecx, ecx, 0x52<br>sub eax, ecx<br>mov ecx, dword[esp+0x10]<br>sub eax, ecx<br>mov ecx, dword[esp+0x2c]<br>sub eax, ecx<br>mov ecx, dword[esp+0x10]<br>lea eax, [eax+ecx-0xc3]<br>add eax, dword[esp+0x34]<br>add eax, dword[esp+0x24]<br>mov dword[esp+0x10], eax<br>mov eax, dword[esp+0x14]<br>sub eax, 0x2d<br>mov dword[esp+0x34], eax<br>mov eax, dword[esp+0x50]<br>test eax, eax<br>jne 0x432dce<br>mov eax, dword[0x4838d8]<br>push eax<br>lea eax, [esp+0x94]<br>call fcn.00405844<br>and dword[esp+0xd8], 0<br>lea eax, [esp+0x90]<br>push eax<br>mov ecx, 0xfde9<br>lea edx, [esp+0xb0]<br>call fcn.00452a24<br>pop ecx<br>mov byte[esp+0xd8], 1<br>cmp dword[eax+0x14], 0x10<br>jb 0x432e0d<br>mov eax, dword[eax]<br>push edi<br>push eax<br>push dword[0x4836c8]<br>push 1<br>call fcn.00442225<br>add esp, 0x10<br>push 1<br>xor edi, edi<br>lea esi, [esp+0xb0]<br>call fcn.004053d9<br>or dword[esp+0xd8], 0xffffffff<br>push 1<br>lea esi, [esp+0x94]<br>call fcn.0040571d<br>push dword[esp+0x50]<br>call fcn.00442d54<br>mov esi, dword[esp+0x4c]<br>lea eax, [esi+0x10]<br>push eax<br>lea eax, [esp+0x58]<br>push eax<br>call fcn.0044306a<br>fld qword[0x47ca58]<br>fstp qword[esp+0x1c]<br>fld qword[esp+0x1c]<br>fadd qword[esp+0x1c]<br>fsub qword[0x47ca50]<br>fsub qword[esp+0x1c]<br>fadd qword[0x47ca48]<br>fstp qword[esp+0x1c]<br>fld qword[esp+0x1c]<br>fmul qword[esp+0x1c]<br>fadd qword[esp+0x1c]<br>fadd qword[0x47c998]<br>fld qword[esp+0x1c]<br>fmul qword[esp+0x1c]<br>faddp st(1)<br>fsub qword[esp+0x1c]<br>fld qword[esp+0x1c]<br>fld qword[0x47ca40]<br>fmul st(1), st(0)<br>fxch st(2)<br>faddp st(1)<br>fsubrp st(1)<br>fadd qword[esp+0x1c]<br>fsub qword[esp+0x1c]<br>fsub qword[0x47ca38]<br>fadd qword[esp+0x1c]<br>fstp qword[esp+0x1c]<br>fld qword[esp+0x1c]<br>fadd qword[0x47c980]<br>fstp qword[esp+0x1c]<br>fld qword[esp+0x1c]<br>fsub qword[0x47ca10]<br>fstp qword[esp+0x1c]<br>fld qword[esp+0x1c]<br>fmul qword[esp+0x1c]<br>fadd qword[esp+0x1c]<br>fstp qword[esp+0x1c]<br>test eax, eax<br>jns 0x4336e1<br>push eax<br>push dword[0x4836cc]<br>push 1<br>call fcn.00442225<br>add esp, 0xc<br>push dword[0x4836d0]<br>lea eax, [esp+0x68]<br>call fcn.00404ec3<br>mov dword[esp+0xd8], 2<br>push dword[0x4839a4]<br>call dword[sym.imp.KERNEL32.dll_LoadLibraryW]<br>mov dword[esp+0x1c], eax<br>test eax, eax<br>je 0x433635<br>mov eax, dword[0x4836d4]<br>push eax<br>mov esi, eax<br>call fcn.00413a10<br>pop ecx<br>mov ecx, esi<br>lea esi, [esp+0x64]<br>call fcn.00404e5a<br>push dword[0x4836d4]<br>mov edi, dword[sym.imp.KERNEL32.dll_GetProcAddress]<br>push dword[esp+0x20]<br>call edi<br>test eax, eax<br>je 0x4331ee<br>call eax<br>mov dword[esp+0x2c], 0x36<br>mov dword[esp+0x24], 0xa<br>mov dword[esp+0x18], 0x2e<br>mov dword[esp+0x10], 0x28<br>mov dword[esp+0x14], ebx<br>mov dword[esp+0x34], 0x20<br>mov dword[esp+0x3c], eax<br>mov eax, dword[esp+0x18]<br>mov ecx, dword[esp+0x24]<br>imul eax, ecx<br>mov ecx, dword[esp+0x18]<br>sub eax, ecx<br>mov ecx, dword[esp+0x10]<br>sub eax, ecx<br>mov ecx, dword[esp+0x10]<br>sub eax, ecx<br>mov ecx, dword[esp+0x34]<br>sub eax, ecx<br>mov ecx, dword[esp+0x14]<br>lea eax, [eax+ecx-0x55]<br>add eax, dword[esp+0x10]<br>push 0x64<br>add eax, dword[esp+0x1c]<br>pop esi<br>add eax, dword[esp+0x2c]<br>add eax, dword[esp+0x2c]<br>mov dword[esp+0x34], eax<br>mov ecx, dword[esp+0x10]<br>mov eax, dword[esp+0x24]<br>imul ecx, eax<br>mov eax, dword[esp+0x24]<br>imul ecx, eax<br>imul ecx, ecx, 0x12<br>add ecx, dword[esp+0x18]<br>mov eax, dword[esp+0x24]<br>cdq <br>imul ecx, ecx, 5<br>idiv esi<br>sub eax, ecx<br>mov ecx, dword[esp+0x14]<br>mov edx, dword[esp+0x18]<br>imul ecx, edx<br>add eax, ecx<br>mov ecx, dword[esp+0x18]<br>imul ecx, ecx, 0x36<br>add eax, ecx<br>mov ecx, dword[esp+0x10]<br>sub eax, ecx<br>mov ecx, dword[esp+0x14]<br>lea eax, [eax+ecx-0x26]<br>add eax, dword[esp+0x24]<br>mov dword[esp+0x14], eax<br>mov eax, dword[esp+0x18]<br>mov ecx, dword[esp+0x18]<br>cmp eax, ecx<br>jle 0x4330a8<br>mov eax, dword[esp+0x10]<br>add eax, dword[esp+0x10]<br>mov dword[esp+0x2c], eax<br>mov eax, dword[esp+0x10]<br>mov eax, dword[esp+0x10]<br>mov eax, dword[esp+0x14]<br>mov ecx, dword[esp+0x10]<br>sub eax, ecx<br>mov dword[esp+0x14], eax<br>mov eax, dword[esp+0x34]<br>mov ecx, dword[esp+0x2c]<br>imul eax, ecx<br>mov ecx, dword[esp+0x14]<br>imul eax, eax, 0x38<br>sub eax, ecx<br>mov ecx, dword[esp+0x2c]<br>sub eax, ecx<br>add eax, dword[esp+0x14]<br>mov dword[esp+0x2c], eax<br>mov eax, dword[esp+0x18]<br>mov ecx, dword[esp+0x24]<br>cmp ecx, eax<br>je 0x4330a8<br>mov eax, dword[esp+0x14]<br>mov ecx, dword[esp+0x18]<br>imul eax, ecx<br>mov dword[esp+0x10], eax<br>push dword[esp+0x3c]<br>xor eax, eax<br>cmp dword[esp+0x40], eax<br>push dword[0x4836d8]<br>setl al<br>push eax<br>call fcn.00442225<br>mov dword[esp+0x30], 0x36<br>mov dword[esp+0x38], 0xa<br>mov dword[esp+0x24], 0x2e<br>mov dword[esp+0x1c], 0x28<br>mov dword[esp+0x20], ebx<br>mov dword[esp+0x40], 0x20<br>mov eax, dword[esp+0x24]<br>mov ecx, dword[esp+0x38]<br>imul eax, ecx<br>mov ecx, dword[esp+0x24]<br>sub eax, ecx<br>mov ecx, dword[esp+0x1c]<br>sub eax, ecx<br>mov ecx, dword[esp+0x1c]<br>sub eax, ecx<br>mov ecx, dword[esp+0x40]<br>sub eax, ecx<br>mov ecx, dword[esp+0x20]<br>lea eax, [eax+ecx-0x55]<br>add eax, dword[esp+0x1c]<br>add esp, 0xc<br>add eax, dword[esp+0x18]<br>push 0x64<br>add eax, dword[esp+0x28]<br>pop esi<br>add eax, dword[esp+0x24]<br>mov dword[esp+0x34], eax<br>mov ecx, dword[esp+0x10]<br>mov eax, dword[esp+0x2c]<br>imul ecx, eax<br>mov eax, dword[esp+0x2c]<br>imul ecx, eax<br>imul ecx, ecx, 0x12<br>add ecx, dword[esp+0x18]<br>mov eax, dword[esp+0x2c]<br>cdq <br>imul ecx, ecx, 5<br>idiv esi<br>sub eax, ecx<br>mov ecx, dword[esp+0x14]<br>mov edx, dword[esp+0x18]<br>imul ecx, edx<br>add eax, ecx<br>mov ecx, dword[esp+0x18]<br>imul ecx, ecx, 0x36<br>add eax, ecx<br>mov ecx, dword[esp+0x10]<br>sub eax, ecx<br>mov ecx, dword[esp+0x14]<br>lea eax, [eax+ecx-0x26]<br>add eax, dword[esp+0x2c]<br>mov dword[esp+0x14], eax<br>mov eax, dword[esp+0x18]<br>mov ecx, dword[esp+0x18]<br>cmp eax, ecx<br>jle 0x4331ee<br>mov eax, dword[esp+0x10]<br>add eax, dword[esp+0x10]<br>mov dword[esp+0x24], eax<br>mov eax, dword[esp+0x10]<br>mov eax, dword[esp+0x10]<br>mov eax, dword[esp+0x14]<br>mov ecx, dword[esp+0x10]<br>sub eax, ecx<br>mov dword[esp+0x14], eax<br>mov eax, dword[esp+0x34]<br>mov ecx, dword[esp+0x24]<br>imul eax, ecx<br>mov ecx, dword[esp+0x14]<br>imul eax, eax, 0x38<br>sub eax, ecx<br>mov ecx, dword[esp+0x24]<br>sub eax, ecx<br>add eax, dword[esp+0x14]<br>mov dword[esp+0x24], eax<br>mov eax, dword[esp+0x18]<br>mov ecx, dword[esp+0x2c]<br>cmp ecx, eax<br>je 0x4331ee<br>mov eax, dword[esp+0x14]<br>mov ecx, dword[esp+0x18]<br>imul eax, ecx<br>mov dword[esp+0x10], eax<br>mov eax, dword[0x4836dc]<br>push eax<br>mov esi, eax<br>call fcn.00413a10<br>pop ecx<br>mov ecx, esi<br>lea esi, [esp+0x64]<br>call fcn.00404e5a<br>fld qword[0x47c9d8]<br>fstp qword[esp+0x34]<br>push 0xffffffffffffffa9<br>fld qword[0x47c9d0]<br>pop ecx<br>fstp qword[esp+0x3c]<br>push 0x2f<br>fld qword[0x47c9c8]<br>fstp qword[esp+0x40]<br>fld qword[0x47c9c0]<br>fstp qword[esp+0x28]<br>fld qword[esp+0x40]<br>fdiv qword[0x47c9b8]<br>fstp qword[esp+0x40]<br>fld qword[esp+0x38]<br>fadd qword[0x47c9f0]<br>fstp qword[esp+0x40]<br>mov dword[esp+0x18], ebx<br>mov dword[esp+0x1c], 0x60<br>mov eax, dword[esp+0x1c]<br>sub ecx, eax<br>add ecx, dword[esp+0x1c]<br>add ecx, dword[esp+0x18]<br>mov dword[esp+0x1c], ecx<br>mov eax, dword[esp+0x1c]<br>sub dword[esp+0x18], eax<br>mov eax, dword[esp+0x18]<br>cdq <br>pop ecx<br>idiv ecx<br>mov ecx, dword[esp+0x18]<br>lea eax, [eax+ecx+0x54]<br>mov dword[esp+0x18], eax<br>mov eax, dword[esp+0x18]<br>mov ecx, dword[esp+0x18]<br>imul eax, ecx<br>mov ecx, dword[esp+0x18]<br>imul eax, eax, 0x4f<br>imul ecx, ecx, 0x26<br>sub eax, ecx<br>mov ecx, dword[esp+0x14]<br>mov edx, dword[esp+0x14]<br>imul ecx, edx<br>add eax, ecx<br>mov dword[esp+0x14], eax<br>mov eax, dword[esp+0x14]<br>imul eax, eax, 0x2d<br>add eax, dword[esp+0x18]<br>push dword[0x4836dc]<br>mov dword[esp+0x18], eax<br>push dword[esp+0x20]<br>call edi<br>mov edi, eax<br>test edi, edi<br>je 0x43356b<br>and dword[esp+0x48], 0<br>lea eax, [esp+0x48]<br>push eax<br>mov esi, 0x4603e0<br>push esi<br>lea eax, [esp+0x88]<br>push eax<br>mov byte[esp+0xe4], 3<br>call edi<br>mov dword[esp+0x24], 0x2b<br>mov dword[esp+0x18], 0x11<br>mov dword[esp+0x10], 0x12<br>mov dword[esp+0x1c], 0x49<br>mov dword[esp+0x14], eax<br>mov eax, dword[esp+0x10]<br>mov ecx, dword[esp+0x18]<br>imul eax, ecx<br>mov ecx, dword[esp+0x18]<br>imul ecx, ecx, 0x1e<br>sub eax, ecx<br>mov ecx, dword[esp+0x10]<br>sub eax, ecx<br>mov dword[esp+0x24], eax<br>mov eax, dword[esp+0x1c]<br>mov ecx, dword[esp+0x10]<br>imul eax, ecx<br>mov dword[esp+0x24], eax<br>mov eax, dword[esp+0x24]<br>imul eax, eax, 0x13<br>push 0xffffffffffffffa0<br>pop ecx<br>sub ecx, eax<br>add ecx, dword[esp+0x10]<br>push 0xfffffffffffffff6<br>add ecx, dword[esp+0x1c]<br>add ecx, dword[esp+0x1c]<br>mov dword[esp+0x1c], ecx<br>mov eax, dword[esp+0x14]<br>mov ecx, dword[esp+0x28]<br>imul eax, ecx<br>imul eax, eax, 0x41<br>mov dword[esp+0x1c], eax<br>mov eax, dword[esp+0x14]<br>mov ecx, dword[esp+0x14]<br>imul eax, ecx<br>pop ecx<br>sub ecx, eax<br>add ecx, dword[esp+0x10]<br>add ecx, dword[esp+0x10]<br>add ecx, dword[esp+0x10]<br>mov dword[esp+0x18], ecx<br>mov eax, dword[esp+0x18]<br>mov ecx, dword[esp+0x18]<br>sub eax, ecx<br>add eax, dword[esp+0x10]<br>mov dword[esp+0x10], eax<br>mov eax, dword[esp+0x1c]<br>mov ecx, dword[esp+0x10]<br>cmp ecx, eax<br>jg 0x4333cc<br>mov eax, dword[esp+0x10]<br>mov eax, dword[esp+0x18]<br>mov eax, dword[esp+0x10]<br>push 0x1e<br>cdq <br>pop ecx<br>idiv ecx<br>mov dword[esp+0x10], eax<br>cmp dword[esp+0x14], 0<br>jge 0x4333ec<br>lea eax, [esp+0x48]<br>push eax<br>push esi<br>lea eax, [esp+0x5c]<br>push eax<br>call edi<br>mov dword[esp+0x14], eax<br>test eax, eax<br>js 0x43354c<br>mov eax, dword[0x4836e0]<br>push eax<br>mov esi, eax<br>call fcn.00413a10<br>pop ecx<br>mov ecx, esi<br>lea esi, [esp+0x64]<br>call fcn.00404e5a<br>mov dword[esp+0x24], 0x36<br>mov dword[esp+0x2c], 0xa<br>mov dword[esp+0x18], 0x2e<br>mov dword[esp+0x10], 0x28<br>mov dword[esp+0x14], ebx<br>mov dword[esp+0x34], 0x20<br>mov eax, dword[esp+0x18]<br>mov ecx, dword[esp+0x2c]<br>imul eax, ecx<br>mov ecx, dword[esp+0x18]<br>sub eax, ecx<br>mov ecx, dword[esp+0x10]<br>sub eax, ecx<br>mov ecx, dword[esp+0x10]<br>sub eax, ecx<br>mov ecx, dword[esp+0x34]<br>sub eax, ecx<br>mov ecx, dword[esp+0x14]<br>lea eax, [eax+ecx-0x55]<br>add eax, dword[esp+0x10]<br>push 0x64<br>add eax, dword[esp+0x1c]<br>pop esi<br>add eax, dword[esp+0x24]<br>add eax, dword[esp+0x24]<br>mov dword[esp+0x34], eax<br>mov ecx, dword[esp+0x10]<br>mov eax, dword[esp+0x2c]<br>imul ecx, eax<br>mov eax, dword[esp+0x2c]<br>imul ecx, eax<br>imul ecx, ecx, 0x12<br>add ecx, dword[esp+0x18]<br>mov eax, dword[esp+0x2c]<br>cdq <br>imul ecx, ecx, 5<br>idiv esi<br>sub eax, ecx<br>mov ecx, dword[esp+0x14]<br>mov edx, dword[esp+0x18]<br>imul ecx, edx<br>add eax, ecx<br>mov ecx, dword[esp+0x18]<br>imul ecx, ecx, 0x36<br>add eax, ecx<br>mov ecx, dword[esp+0x10]<br>sub eax, ecx<br>mov ecx, dword[esp+0x14]<br>lea eax, [eax+ecx-0x26]<br>add eax, dword[esp+0x2c]<br>mov dword[esp+0x14], eax<br>mov eax, dword[esp+0x18]<br>mov ecx, dword[esp+0x18]<br>cmp eax, ecx<br>jle 0x43352f<br>mov eax, dword[esp+0x10]<br>add eax, dword[esp+0x10]<br>mov dword[esp+0x24], eax<br>mov eax, dword[esp+0x10]<br>mov eax, dword[esp+0x10]<br>mov eax, dword[esp+0x14]<br>mov ecx, dword[esp+0x10]<br>sub eax, ecx<br>mov dword[esp+0x14], eax<br>mov eax, dword[esp+0x34]<br>mov ecx, dword[esp+0x24]<br>imul eax, ecx<br>mov ecx, dword[esp+0x14]<br>imul eax, eax, 0x38<br>sub eax, ecx<br>mov ecx, dword[esp+0x24]<br>sub eax, ecx<br>add eax, dword[esp+0x14]<br>mov dword[esp+0x24], eax<br>mov eax, dword[esp+0x18]<br>mov ecx, dword[esp+0x2c]<br>cmp ecx, eax<br>je 0x43352f<br>mov eax, dword[esp+0x14]<br>mov ecx, dword[esp+0x18]<br>imul eax, ecx<br>mov dword[esp+0x10], eax<br>mov ecx, dword[esp+0x4c]<br>mov eax, dword[esp+0x48]<br>mov edx, dword[eax]<br>add ecx, 0x10<br>push ecx<br>push 0x4603f0<br>push 0<br>push eax<br>call dword[edx+0xc]<br>mov dword[esp+0x14], eax<br>mov byte[esp+0xd8], 2<br>mov eax, dword[esp+0x48]<br>test eax, eax<br>je 0x433690<br>mov ecx, dword[eax]<br>push eax<br>call dword[ecx+8]<br>jmp 0x433690<br>call fcn.00444c6e<br>fld qword[0x47ca30]<br>fstp qword[esp+0x34]<br>mov ecx, eax<br>fld qword[0x47ca28]<br>fstp qword[esp+0x1c]<br>fld qword[0x47ca20]<br>fstp qword[esp+0x2c]<br>fld qword[0x47ca18]<br>fstp qword[esp+0x3c]<br>fld qword[0x47c970]<br>fstp qword[esp+0x24]<br>fld qword[0x47ca10]<br>fstp qword[esp+0x2c]<br>fld qword[esp+0x1c]<br>fmul qword[0x47ca08]<br>fmul qword[esp+0x3c]<br>fmul qword[esp+0x1c]<br>fmul qword[0x47ca00]<br>fmul qword[esp+0x3c]<br>fadd qword[0x47c9f8]<br>fsub qword[esp+0x2c]<br>fstp qword[esp+0x2c]<br>fld qword[esp+0x24]<br>fld qword[esp+0x1c]<br>fucompp <br>fnstsw ax<br>test ah, 0x44<br>jp 0x43361f<br>fld qword[esp+0x1c]<br>fmul qword[esp+0x1c]<br>fmul qword[0x47c9e8]<br>fmul qword[esp+0x1c]<br>fmul qword[esp+0x34]<br>fsub qword[esp+0x3c]<br>fadd qword[0x47c9e0]<br>fstp qword[esp+0x34]<br>fld qword[esp+0x24]<br>fadd qword[0x47c9f0]<br>fadd qword[esp+0x34]<br>fstp qword[esp+0x2c]<br>test ecx, ecx<br>jle 0x43362f<br>and ecx, 0xffff<br>or ecx, 0x80070000<br>mov dword[esp+0x14], ecx<br>jmp 0x433690<br>call fcn.00444c6e<br>fld qword[0x47c9d8]<br>fstp qword[esp+0x3c]<br>fld qword[0x47c9d0]<br>fstp qword[esp+0x1c]<br>fld qword[0x47c9c8]<br>fstp qword[esp+0x1c]<br>fld qword[0x47c9c0]<br>fstp qword[esp+0x34]<br>fld qword[esp+0x1c]<br>fdiv qword[0x47c9b8]<br>fstp qword[esp+0x1c]<br>fld qword[esp+0x3c]<br>fadd qword[0x47c9f0]<br>fstp qword[esp+0x1c]<br>test eax, eax<br>jle 0x43368c<br>and eax, 0xffff<br>or eax, 0x80070000<br>mov dword[esp+0x14], eax<br>cmp dword[esp+0x14], 0<br>jge 0x4336bb<br>cmp dword[esp+0x78], 0x10<br>mov eax, dword[esp+0x64]<br>jae 0x4336a6<br>lea eax, [esp+0x64]<br>push eax<br>push dword[esp+0x18]<br>push dword[0x4836e4]<br>push 1<br>call fcn.00442225<br>add esp, 0x10<br>or dword[esp+0xd8], 0xffffffff<br>push 1<br>xor edi, edi<br>lea esi, [esp+0x68]<br>call fcn.004053d9<br>cmp dword[esp+0x14], edi<br>jge 0x4336dd<br>xor eax, eax<br>jmp 0x433823<br>mov esi, dword[esp+0x4c]<br>mov eax, dword[esi+0x10]<br>mov ecx, dword[eax]<br>lea ebx, [esi+0x14]<br>push ebx<br>push 0x460400<br>push eax<br>call dword[ecx]<br>test eax, eax<br>jns 0x433709<br>push eax<br>push dword[0x4836e8]<br>push 1<br>call fcn.00442225<br>add esp, 0xc<br>jmp 0x4336d6<br>mov eax, dword[esi+0x10]<br>mov ecx, dword[eax]<br>push esi<br>push eax<br>call dword[ecx+0xc]<br>test eax, eax<br>jns 0x433720<br>push eax<br>push dword[0x4836ec]<br>jmp 0x4336fd<br>mov ebx, dword[ebx]<br>mov eax, dword[ebx]<br>push ebx<br>call dword[eax+0xc]<br>test eax, eax<br>jns 0x433735<br>push eax<br>push dword[0x4836f0]<br>jmp 0x4336fd<br>cmp dword[esi+0xc], 0<br>je 0x433746<br>mov eax, dword[esi+0x10]<br>mov ecx, dword[esi+0xc]<br>mov edx, dword[ecx]<br>push eax<br>call dword[edx]<br>mov eax, dword[esi+0x10]<br>mov ecx, dword[eax]<br>push 2<br>push eax<br>call dword[ecx+0x14]<br>mov dword[esp+0x24], 0x2b<br>mov dword[esp+0x14], 0x11<br>mov dword[esp+0x10], 0x12<br>mov dword[esp+0x1c], 0x49<br>mov eax, dword[esp+0x10]<br>mov ecx, dword[esp+0x14]<br>imul eax, ecx<br>mov ecx, dword[esp+0x14]<br>imul ecx, ecx, 0x1e<br>sub eax, ecx<br>mov ecx, dword[esp+0x10]<br>sub eax, ecx<br>mov dword[esp+0x24], eax<br>mov eax, dword[esp+0x1c]<br>mov ecx, dword[esp+0x10]<br>imul eax, ecx<br>mov dword[esp+0x24], eax<br>mov eax, dword[esp+0x24]<br>imul eax, eax, 0x13<br>push 0xffffffffffffffa0<br>pop ecx<br>sub ecx, eax<br>add ecx, dword[esp+0x10]<br>push 0xfffffffffffffff6<br>add ecx, dword[esp+0x18]<br>add ecx, dword[esp+0x18]<br>mov dword[esp+0x18], ecx<br>mov eax, dword[esp+0x14]<br>mov ecx, dword[esp+0x28]<br>imul eax, ecx<br>imul eax, eax, 0x41<br>mov dword[esp+0x18], eax<br>mov eax, dword[esp+0x14]<br>mov ecx, dword[esp+0x14]<br>imul eax, ecx<br>pop ecx<br>sub ecx, eax<br>add ecx, dword[esp+0x10]<br>add ecx, dword[esp+0x10]<br>add ecx, dword[esp+0x10]<br>mov dword[esp+0x14], ecx<br>mov eax, dword[esp+0x14]<br>mov ecx, dword[esp+0x14]<br>sub eax, ecx<br>add eax, dword[esp+0x10]<br>mov dword[esp+0x10], eax<br>mov eax, dword[esp+0x1c]<br>mov ecx, dword[esp+0x10]<br>cmp ecx, eax<br>jg 0x433820<br>mov eax, dword[esp+0x10]<br>mov eax, dword[esp+0x14]<br>mov eax, dword[esp+0x10]<br>push 0x1e<br>cdq <br>pop ecx<br>idiv ecx<br>mov dword[esp+0x10], eax<br>xor eax, eax<br>inc eax<br>mov ecx, dword[esp+0xd0]<br>mov dword<br>pop ecx<br>pop edi<br>pop esi<br>pop ebx<br>mov ecx, dword[esp+0xb8]<br>xor ecx, esp<br>call fcn.00411833<br>mov esp, ebp<br>pop ebp<br>ret <br><eoc> ', 'null'],
[-283.80706787109375, -15.853625297546387, '<b><a href="/report/fcn.307834f0@e0efd357fccc8f4e2c059b0b54118ba8">fcn.307834f0</a><br>@e0efd357fccc8f4e2c059b0b54118ba8</b><br>sub esp, 0x40<br>push ebx<br>push esi<br>mov esi, dword[esp+0x4c]<br>push edi<br>push ebp<br>xor ebx, ebx<br>mov eax, dword[esi]<br>push eax<br>call dword[sym.imp.USER32.dll_GetDC]<br>mov edi, eax<br>test edi, edi<br>je 0x307838e7<br>mov ax, word[esi+0x5c]<br>push eax<br>call fcn.307839e0<br>add esp, 4<br>test eax, eax<br>jne 0x3078354c<br>mov eax, dword[esi+0x40]<br>mov ecx, dword[esi+0x44]<br>mov edx, dword[esi+0x30]<br>mov dword[esp+0x40], ebx<br>mov dword[esp+0x44], ebx<br>push edx<br>mov dword[esp+0x4c], eax<br>mov dword[esp+0x50], ecx<br>lea eax, [esp+0x44]<br>push eax<br>push edi<br>call dword[sym.imp.USER32.dll_FillRect]<br>jmp 0x307838dd<br>mov ecx, dword[esi+0x64]<br>mov eax, dword[esi+0x48]<br>mov edx, dword[esi+0x4c]<br>mov dword[esp+0x18], ecx<br>mov ecx, dword[esi+0x54]<br>mov dword[esp+0x1c], eax<br>mov eax, dword[esi+0x50]<br>xor ebx, ebx<br>mov dword[esp+0x20], edx<br>mov dword[esp+0x28], ecx<br>mov edx, dword[esi+0x58]<br>mov dword[esp+0x24], eax<br>mov dword[esp+0x2c], edx<br>cmp edx, ebx<br>jle 0x307835f1<br>mov ebp, dword[esp+0x18]<br>xor eax, eax<br>mov edx, 1<br>mov ax, word[esi+0x5c]<br>mov cl, bl<br>shl edx, cl<br>test edx, eax<br>je 0x307835e7<br>cmp dword[ebp], 0<br>jne 0x307835e7<br>lea eax, [esp+0x38]<br>lea ecx, [esp+0x30]<br>push eax<br>push ecx<br>push ebx<br>push esi<br>call fcn.30784fc0<br>add esp, 0x10<br>test eax, eax<br>je 0x307835e7<br>mov eax, dword[esp+0x30]<br>mov ecx, dword[esp+0x34]<br>lea edx, [esp+0x40]<br>mov dword[esp+0x40], eax<br>mov eax, dword[esp+0x38]<br>mov dword[esp+0x44], ecx<br>add eax, dword[esp+0x30]<br>mov dword[esp+0x48], eax<br>mov eax, dword[esp+0x3c]<br>add eax, ecx<br>mov ecx, dword[esi+0x30]<br>mov dword[esp+0x4c], eax<br>push ecx<br>push edx<br>push edi<br>call dword[sym.imp.USER32.dll_FillRect]<br>add ebp, 0x10<br>inc ebx<br>cmp ebx, dword[esp+0x2c]<br>jl 0x30783580<br>mov eax, dword[esi+8]<br>test al, 1<br>je 0x30783795<br>mov dword[esp+0x14], 0xffffffff<br>mov dword[esp+0x2c], 0<br>cmp dword[esp+0x28], 0<br>jle 0x307838dd<br>mov eax, dword[esp+0x2c]<br>push eax<br>push esi<br>call fcn.30783af0<br>add esp, 8<br>mov ebx, eax<br>test ebx, ebx<br>jl 0x3078377e<br>mov ecx, dword[esi+0x68]<br>mov eax, dword[esp+0x2c]<br>mov edx, dword[ecx+eax*4+4]<br>mov dword[esp+0x24], edx<br>cmp edx, dword[esp+0x14]<br>jle 0x3078377e<br>push eax<br>push esi<br>call fcn.30783d90<br>add esp, 8<br>test eax, eax<br>jle 0x30783698<br>mov eax, dword[esi+0x40]<br>mov ecx, dword[esp+0x24]<br>inc eax<br>mov dword[esp+0x44], ecx<br>mov dword[esp+0x40], 0xffffffff<br>lea edx, [esp+0x40]<br>mov dword[esp+0x48], eax<br>mov eax, dword[esp+0x20]<br>add eax, ecx<br>mov ecx, dword[esi+0x28]<br>mov dword[esp+0x4c], eax<br>push ecx<br>push edx<br>push edi<br>call dword[sym.imp.USER32.dll_FillRect]<br>mov ecx, dword[esi+0x2c]<br>lea edx, [esp+0x40]<br>push ecx<br>push edx<br>push edi<br>call dword[sym.imp.USER32.dll_FrameRect]<br>mov dword[esp+0x10], 0<br>test ebx, ebx<br>jl 0x3078376e<br>mov eax, ebx<br>mov ecx, dword[esp+0x18]<br>shl eax, 4<br>mov ebp, dword[eax+ecx+8]<br>cmp ebp, dword[esp+0x10]<br>jle 0x3078375a<br>mov eax, dword[esp+0x1c]<br>mov ecx, dword[esp+0x14]<br>add eax, ebp<br>lea edx, [esp+0x40]<br>mov dword[esp+0x40], ebp<br>mov dword[esp+0x48], eax<br>mov eax, dword[esp+0x24]<br>mov dword[esp+0x44], ecx<br>inc eax<br>mov ecx, dword[esi+0x28]<br>mov dword[esp+0x4c], eax<br>push ecx<br>push edx<br>push edi<br>call dword[sym.imp.USER32.dll_FillRect]<br>test byte[esi+8], 2<br>je 0x30783746<br>lea eax, [esp+0x30]<br>mov ecx, dword[esp+0x44]<br>mov edx, dword[esp+0x40]<br>push eax<br>push ecx<br>push edx<br>push edi<br>call dword[sym.imp.GDI32.dll_MoveToEx]<br>mov ecx, dword[esp+0x4c]<br>mov edx, dword[esp+0x40]<br>push ecx<br>push edx<br>push edi<br>call dword[sym.imp.GDI32.dll_LineTo]<br>lea ecx, [esp+0x30]<br>mov edx, dword[esp+0x44]<br>mov eax, dword[esp+0x48]<br>push ecx<br>push edx<br>dec eax<br>push eax<br>push edi<br>call dword[sym.imp.GDI32.dll_MoveToEx]<br>mov ecx, dword[esp+0x4c]<br>mov eax, dword[esp+0x48]<br>push ecx<br>dec eax<br>push eax<br>push edi<br>call dword[sym.imp.GDI32.dll_LineTo]<br>jmp 0x30783756<br>mov eax, dword[esi+0x2c]<br>lea ecx, [esp+0x40]<br>push eax<br>push ecx<br>push edi<br>call dword[sym.imp.USER32.dll_FrameRect]<br>mov dword[esp+0x10], ebp<br>push ebx<br>push esi<br>call fcn.30783b70<br>add esp, 8<br>mov ebx, eax<br>test ebx, ebx<br>jge 0x307836a8<br>mov eax, dword[esp+0x20]<br>mov ecx, dword[esp+0x24]<br>lea edx, [eax+ecx-1]<br>mov dword[esp+0x14], edx<br>inc dword[esp+0x2c]<br>mov eax, dword[esp+0x2c]<br>cmp eax, dword[esp+0x28]<br>jl 0x30783617<br>jmp 0x307838dd<br>test al, 2<br>je 0x307838dd<br>mov dword[esp+0x10], 0xffffffff<br>mov dword[esp+0x2c], 0<br>cmp dword[esp+0x24], 0<br>jle 0x307838dd<br>mov eax, dword[esp+0x2c]<br>push eax<br>push esi<br>call fcn.30783b30<br>add esp, 8<br>mov ebx, eax<br>test ebx, ebx<br>jl 0x307838cb<br>mov eax, ebx<br>mov ecx, dword[esp+0x18]<br>shl eax, 4<br>mov edx, dword[eax+ecx+8]<br>mov dword[esp+0x28], edx<br>cmp edx, dword[esp+0x10]<br>jle 0x307838cb<br>mov eax, dword[esp+0x2c]<br>push eax<br>push esi<br>call fcn.30783db0<br>add esp, 8<br>test eax, eax<br>jle 0x3078383f<br>mov ecx, dword[esp+0x28]<br>mov eax, dword[esp+0x1c]<br>add eax, ecx<br>mov dword[esp+0x40], ecx<br>mov ecx, dword[esi+0x28]<br>mov dword[esp+0x48], eax<br>mov eax, dword[esi+0x44]<br>push ecx<br>inc eax<br>lea edx, [esp+0x44]<br>mov dword[esp+0x50], eax<br>push edx<br>mov dword[esp+0x4c], 0xffffffff<br>push edi<br>call dword[sym.imp.USER32.dll_FillRect]<br>mov ecx, dword[esi+0x2c]<br>lea edx, [esp+0x40]<br>push ecx<br>push edx<br>push edi<br>call dword[sym.imp.USER32.dll_FrameRect]<br>test byte[esi+8], 1<br>jne 0x307838cb<br>mov dword[esp+0x14], 0<br>test ebx, ebx<br>jl 0x307838bb<br>mov eax, ebx<br>mov ecx, dword[esp+0x18]<br>shl eax, 4<br>mov ebp, dword[eax+ecx+0xc]<br>cmp ebp, dword[esp+0x14]<br>jle 0x307838ab<br>mov eax, dword[esp+0x20]<br>mov ecx, dword[esp+0x10]<br>add eax, ebp<br>lea edx, [esp+0x40]<br>mov dword[esp+0x44], ebp<br>mov dword[esp+0x4c], eax<br>mov eax, dword[esp+0x28]<br>mov dword[esp+0x40], ecx<br>inc eax<br>mov ecx, dword[esi+0x28]<br>mov dword[esp+0x48], eax<br>push ecx<br>push edx<br>push edi<br>call dword[sym.imp.USER32.dll_FillRect]<br>mov ecx, dword[esi+0x2c]<br>lea edx, [esp+0x40]<br>push ecx<br>push edx<br>push edi<br>call dword[sym.imp.USER32.dll_FrameRect]<br>mov dword[esp+0x14], ebp<br>push ebx<br>push esi<br>call fcn.30783bb0<br>add esp, 8<br>mov ebx, eax<br>test ebx, ebx<br>jge 0x30783855<br>mov eax, dword[esp+0x1c]<br>mov ecx, dword[esp+0x28]<br>lea edx, [eax+ecx-1]<br>mov dword[esp+0x10], edx<br>inc dword[esp+0x2c]<br>mov eax, dword[esp+0x2c]<br>cmp eax, dword[esp+0x24]<br>jl 0x307837b8<br>push edi<br>mov eax, dword[esi]<br>push eax<br>call dword[sym.imp.USER32.dll_ReleaseDC]<br>pop ebp<br>pop edi<br>pop esi<br>pop ebx<br>add esp, 0x40<br>ret <br><eoc> ', 'null'],
[-496.6679382324219, 70.7967758178711, '<b><a href="/report/fcn.00442510@3e981d1767f44f5fe2446a49ffe52f4e">fcn.00442510</a><br>@3e981d1767f44f5fe2446a49ffe52f4e</b><br>sub esp, 0x54<br>push ebx<br>push ebp<br>push esi<br>mov esi, dword[esp+0x68]<br>push edi<br>xor edi, edi<br>cmp esi, edi<br>je 0x44293c<br>cmp dword[esi], edi<br>je 0x44293c<br>mov eax, dword[esp+0x68]<br>cmp eax, edi<br>je 0x44293c<br>mov ebx, dword[eax+4]<br>cmp ebx, edi<br>mov dword[esp+0x10], ebx<br>je 0x44293c<br>mov ebp, dword[esp+0x70]<br>mov dword[ebp+4], edi<br>mov dword[ebp+0x10], edi<br>mov dword[ebp+0x14], edi<br>mov dword[ebp+8], edi<br>mov dword[ebp+0xc], edi<br>mov dword[ebp], ebx<br>mov eax, dword[esi]<br>mov dword[ebp+4], eax<br>mov ecx, dword[esi+4]<br>mov dword[ebp+8], ecx<br>mov edx, dword[esi+8]<br>mov dword[ebp+0xc], edx<br>mov eax, dword[esi]<br>cmp eax, 3<br>je 0x442927<br>cmp eax, 4<br>je 0x442927<br>cmp eax, 5<br>jne 0x442658<br>mov esi, dword[esi+0x10]<br>push edi<br>push esi<br>lea eax, [esi+0x428]<br>push eax<br>push 4<br>push esi<br>push ebx<br>call dword[sym.imp.GDI32.dll_CreateDIBitmap]<br>cmp eax, edi<br>mov dword[ebp+0x14], eax<br>je 0x442913<br>push ebx<br>call dword[sym.imp.GDI32.dll_CreateCompatibleDC]<br>push ebx<br>mov esi, eax<br>call dword[sym.imp.GDI32.dll_CreateCompatibleDC]<br>mov ecx, dword[ebp+0x14]<br>push ecx<br>push esi<br>mov dword[esp+0x74], eax<br>call dword[sym.imp.GDI32.dll_SelectObject]<br>mov edx, dword[ebp+0xc]<br>mov dword[esp+0x68], eax<br>mov eax, dword[ebp+8]<br>push edx<br>push eax<br>push ebx<br>call dword[sym.imp.GDI32.dll_CreateCompatibleBitmap]<br>push eax<br>mov ebx, dword[esp+0x70]<br>mov dword[esp+0x74], eax<br>push ebx<br>call dword[sym.imp.GDI32.dll_SelectObject]<br>mov ecx, dword[ebp+0xc]<br>mov edx, dword[ebp+8]<br>push 0xcc0020<br>push edi<br>push edi<br>push esi<br>push ecx<br>push edx<br>push edi<br>push edi<br>push ebx<br>mov dword[esp+0x90], eax<br>call dword[sym.imp.GDI32.dll_BitBlt]<br>mov eax, dword[esp+0x68]<br>push eax<br>push esi<br>call dword[sym.imp.GDI32.dll_SelectObject]<br>push esi<br>mov esi, dword[sym.imp.GDI32.dll_DeleteDC]<br>call esi<br>mov ecx, dword[esp+0x6c]<br>push ecx<br>push ebx<br>call dword[sym.imp.GDI32.dll_SelectObject]<br>push ebx<br>call esi<br>mov edx, dword[ebp+0x14]<br>push edx<br>call dword[sym.imp.GDI32.dll_DeleteObject]<br>mov eax, dword[esp+0x70]<br>mov dword[ebp+0x14], eax<br>mov ecx, dword[ebp+0x14]<br>xor eax, eax<br>cmp ecx, edi<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>setne al<br>add esp, 0x54<br>ret 0x10<br>cmp eax, 7<br>jne 0x44268a<br>mov ecx, dword[esi+0x10]<br>mov edx, dword[esi+8]<br>mov eax, dword[esi+4]<br>push ecx<br>push 1<br>push 1<br>push edx<br>push eax<br>call dword[sym.imp.GDI32.dll_CreateBitmap]<br>mov dword[ebp+0x14], eax<br>mov ecx, dword[ebp+0x14]<br>xor eax, eax<br>cmp ecx, edi<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>setne al<br>add esp, 0x54<br>ret 0x10<br>cmp eax, 6<br>jne 0x4426bc<br>mov esi, dword[esi+0x10]<br>push edi<br>push esi<br>lea ecx, [esi+0x428]<br>push ecx<br>push 4<br>push esi<br>push ebx<br>call dword[sym.imp.GDI32.dll_CreateDIBitmap]<br>mov dword[ebp+0x14], eax<br>mov ecx, dword[ebp+0x14]<br>xor eax, eax<br>cmp ecx, edi<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>setne al<br>add esp, 0x54<br>ret 0x10<br>cmp eax, 8<br>jne 0x442891<br>mov eax, dword[esi+8]<br>mov edx, dword[esi+4]<br>neg eax<br>mov dword[esp+0x44], eax<br>mov eax, dword[esp+0x74]<br>mov ecx, eax<br>mov dword[esp+0x40], edx<br>shr ecx, 0x10<br>and ecx, 0xff<br>mov dword[esp+0x18], edi<br>mov dword[esp+0x14], ecx<br>mov edx, eax<br>fild qword[esp+0x14]<br>shr edx, 8<br>and edx, 0xff<br>mov dword[esp+0x18], edi<br>fstp dword[esp+0x1c]<br>mov dword[esp+0x14], edx<br>and eax, 0xff<br>fild qword[esp+0x14]<br>mov dword[esp+0x14], eax<br>mov dword[esp+0x18], edi<br>lea ecx, [esp+0x28]<br>mov dword[esp+0x3c], 0x28<br>fstp dword[esp+0x20]<br>fild qword[esp+0x14]<br>mov word[esp+0x48], 1<br>mov word[esp+0x4a], 0x20<br>mov dword[esp+0x4c], edi<br>mov dword[esp+0x50], edi<br>fstp dword[esp+0x24]<br>mov dword[esp+0x54], edi<br>mov dword[esp+0x58], edi<br>mov dword[esp+0x5c], edi<br>mov dword[esp+0x60], edi<br>call fcn.0041edb0<br>mov edi, dword[esi+8]<br>lea ecx, [esp+0x28]<br>imul edi, dword[esi+4]<br>shl edi, 2<br>push edi<br>call fcn.0041edd0<br>mov esi, dword[esi+0x10]<br>mov ecx, edi<br>mov ebx, eax<br>mov eax, ecx<br>mov edi, ebx<br>mov dword[esp+0x70], 0<br>shr ecx, 2<br>rep movsd<br>mov ecx, eax<br>and ecx, 3<br>rep movsb<br>mov ecx, dword[esp+0x6c]<br>mov eax, dword[ecx+8]<br>test eax, eax<br>jbe 0x44283f<br>mov eax, dword[ecx+4]<br>mov dword[esp+0x68], 0<br>test eax, eax<br>jbe 0x44282b<br>mov al, byte[ebx+3]<br>cmp al, 0xff<br>jae 0x442818<br>and eax, 0xff<br>lea esi, [esp+0x1c]<br>mov dword[esp+0x74], eax<br>mov edi, 3<br>fild dword[esp+0x74]<br>fmul dword[0x4d0750]<br>fld dword[0x4d06fc]<br>fsub st(1)<br>xor ecx, ecx<br>mov cl, byte[ebx]<br>mov dword[esp+0x74], ecx<br>fild dword[esp+0x74]<br>fmul st(2)<br>fld st(1)<br>fmul dword[esi]<br>faddp st(1)<br>call fcn.004a2a98<br>cmp eax, 0xff<br>jl 0x4427fc<br>mov byte[ebx], 0xff<br>jmp 0x442806<br>test eax, eax<br>setle dl<br>dec edx<br>and edx, eax<br>mov byte[ebx], dl<br>add esi, 4<br>inc ebx<br>dec edi<br>jne 0x4427d7<br>mov ecx, dword[esp+0x6c]<br>inc ebx<br>fstp st(0)<br>fstp st(0)<br>jmp 0x44281b<br>add ebx, 4<br>mov eax, dword[esp+0x68]<br>mov edx, dword[ecx+4]<br>inc eax<br>cmp eax, edx<br>mov dword[esp+0x68], eax<br>jb 0x4427ac<br>mov eax, dword[esp+0x70]<br>mov edx, dword[ecx+8]<br>inc eax<br>cmp eax, edx<br>mov dword[esp+0x70], eax<br>jb 0x44279d<br>mov eax, dword[esp+0x38]<br>mov edi, dword[esp+0x30]<br>neg eax<br>sbb eax, eax<br>lea ecx, [esp+0x3c]<br>and eax, edi<br>push 0<br>push ecx<br>push eax<br>mov eax, dword[esp+0x1c]<br>lea edx, [esp+0x48]<br>push 4<br>push edx<br>push eax<br>call dword[sym.imp.GDI32.dll_CreateDIBitmap]<br>lea ecx, [esp+0x28]<br>mov dword[ebp+0x14], eax<br>mov dword[esp+0x28], 0x4cdbe8<br>call fcn.0041efb0<br>mov ecx, dword[ebp+0x14]<br>xor edi, edi<br>xor eax, eax<br>cmp ecx, edi<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>setne al<br>add esp, 0x54<br>ret 0x10<br>mov ecx, dword[esi+8]<br>mov edx, dword[esi+4]<br>mov eax, dword[esi+0x10]<br>push edi<br>push ecx<br>push edx<br>push eax<br>call fcn.004422e0<br>add esp, 0x10<br>cmp eax, edi<br>mov dword[esp+0x6c], eax<br>je 0x44293c<br>mov ecx, dword[esi+4]<br>mov edx, dword[esi+8]<br>mov dword[esp+0x40], ecx<br>lea ecx, [esp+0x3c]<br>push edi<br>mov dword[esp+0x48], edx<br>push ecx<br>push eax<br>lea edx, [esp+0x48]<br>push 4<br>push edx<br>push ebx<br>mov dword[esp+0x54], 0x28<br>mov word[esp+0x60], 1<br>mov word[esp+0x62], 0x18<br>mov dword[esp+0x64], edi<br>mov dword[esp+0x68], edi<br>mov dword[esp+0x6c], edi<br>mov dword[esp+0x70], edi<br>mov dword[esp+0x74], edi<br>mov dword[esp+0x78], edi<br>call dword[sym.imp.GDI32.dll_CreateDIBitmap]<br>mov dword[ebp+0x14], eax<br>mov eax, dword[esp+0x6c]<br>push eax<br>call fcn.004b3876<br>add esp, 4<br>mov ecx, dword[ebp+0x14]<br>xor eax, eax<br>cmp ecx, edi<br>pop edi<br>pop esi<br>pop ebp<br>setne al<br>pop ebx<br>add esp, 0x54<br>ret 0x10<br>mov ecx, dword[esi+0xc]<br>pop edi<br>mov dword[ebp+0x10], ecx<br>pop esi<br>pop ebp<br>mov eax, 1<br>pop ebx<br>add esp, 0x54<br>ret 0x10<br>pop edi<br>pop esi<br>pop ebp<br>xor eax, eax<br>pop ebx<br>add esp, 0x54<br>ret 0x10<br><eoc> ', 'null'],
[-144.18495178222656, 351.9544677734375, '<b><a href="/report/fcn.00670670@c92f0480e2fbc88393d2c65c08a235e0">fcn.00670670</a><br>@c92f0480e2fbc88393d2c65c08a235e0</b><br>push ebp<br>push edi<br>push esi<br>push ebx<br>sub esp, 0x7c<br>mov esi, dword[esp+0x90]<br>mov eax, dword[esi+0xf4]<br>cmp eax, 0xffffffff<br>jne 0x6706a2<br>mov dword[esi+0x48], 0xfffff00d<br>mov dword[esi+0xf0], 6<br>add esp, 0x7c<br>pop ebx<br>pop esi<br>pop edi<br>pop ebp<br>ret <br>mov edx, dword[esi+0x110]<br>mov ecx, dword[esi+0x114]<br>mov dword[esp], eax<br>mov dword[esp+0x30], edx<br>mov dword[esp+0x34], ecx<br>call dword[sym.imp.msvcrt.dll__get_osfhandle]<br>cmp eax, 0xffffffff<br>mov ebp, eax<br>je 0x670881<br>mov ecx, dword[esp+0x30]<br>mov ebx, dword[esp+0x34]<br>mov edx, ecx<br>mov ecx, ebx<br>not ecx<br>not edx<br>mov eax, ecx<br>or eax, edx<br>jne 0x6707a3<br>mov dword[esp+0x38], 0<br>mov dword[esp+0x2c], 0<br>or ecx, edx<br>xor ebx, ebx<br>xor edi, edi<br>mov dword[esp+0x28], ecx<br>jmp 0x670708<br>cmp dword[esi+0x108], ebx<br>jbe 0x670763<br>mov edx, dword[esp+0x28]<br>test edx, edx<br>je 0x670724<br>xor edx, edx<br>mov eax, edi<br>add eax, dword[esp+0x30]<br>adc edx, dword[esp+0x34]<br>mov dword[esp+0x64], eax<br>mov dword[esp+0x68], edx<br>mov eax, dword[esi+0x10c]<br>mov ecx, dword[esp+0x2c]<br>lea eax, [eax+ebx*8]<br>mov dword[esp+0x10], ecx<br>lea ecx, [esp+0x4c]<br>add ebx, 1<br>mov dword[esp+0xc], ecx<br>mov edx, dword[eax]<br>mov dword[esp+8], edx<br>mov eax, dword[eax+4]<br>mov dword[esp], ebp<br>mov dword[esp+4], eax<br>call dword[sym.imp.KERNEL32.dll_WriteFile]<br>sub esp, 0x14<br>add edi, dword[esp+0x4c]<br>test eax, eax<br>mov edx, edi<br>jne 0x670700<br>mov ecx, eax<br>mov eax, dword[esp+0x38]<br>test eax, eax<br>jne 0x670840<br>or ecx, edx<br>je 0x670820<br>cmp edx, 0xffffffff<br>mov dword[esi+0x48], edx<br>jne 0x67069a<br>call dword[sym.imp.msvcrt.dll___doserrno]<br>mov eax, dword[eax]<br>mov dword[esi+0xf0], eax<br>mov dword[esp], eax<br>call fcn.0066e3a0<br>mov dword[esi+0x48], eax<br>jmp 0x67069a<br>lea eax, [esp+0x50]<br>mov dword[esp+0x3c], ecx<br>mov dword[esp+0x28], edx<br>mov dword[esp+0x5c], 0<br>mov dword[esp+0x60], 0<br>mov dword[esp+0x64], 0<br>mov dword[esp+0x68], 0<br>mov dword[esp+0x6c], 0<br>mov dword[esp+0x10], 1<br>mov dword[esp+0xc], eax<br>mov dword[esp+4], 0<br>mov dword[esp+8], 0<br>mov dword[esp], ebp<br>call dword[sym.imp.KERNEL32.dll_SetFilePointerEx]<br>sub esp, 0x14<br>test eax, eax<br>setne al<br>mov edx, dword[esp+0x28]<br>mov ecx, dword[esp+0x3c]<br>movzx eax, al<br>mov dword[esp+0x38], eax<br>lea eax, [esp+0x5c]<br>mov dword[esp+0x2c], eax<br>jmp 0x6706f4<br>call dword[sym.imp.KERNEL32.dll_GetLastError]<br>mov dword[esi+0xf0], eax<br>mov dword[esp], eax<br>call fcn.0066e3a0<br>mov dword[esi+0x48], eax<br>add esp, 0x7c<br>pop ebx<br>pop esi<br>pop edi<br>pop ebp<br>ret <br>mov dword[esp+0x2c], edx<br>mov eax, dword[esp+0x50]<br>mov edx, dword[esp+0x54]<br>mov dword[esp+0x28], ecx<br>mov dword[esp+0x10], 0<br>mov dword[esp+0xc], 0<br>mov dword[esp+4], eax<br>mov dword[esp], ebp<br>mov dword[esp+8], edx<br>call dword[sym.imp.KERNEL32.dll_SetFilePointerEx]<br>sub esp, 0x14<br>mov edx, dword[esp+0x2c]<br>mov ecx, dword[esp+0x28]<br>jmp 0x670771<br>mov dword[esi+0xf0], 6<br>mov dword[esp], 6<br>call fcn.0066e3a0<br>mov dword[esi+0x48], eax<br>jmp 0x67069a<br><eoc> ', 'null'],
[271.02947998046875, -37.54875183105469, '<b><a href="/report/fcn.00466040@4fe6510221c33bf023f6abed461fc13f">fcn.00466040</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>mov eax, dword[esp+4]<br>sub esp, 0x140<br>push ebx<br>push ebp<br>mov ebx, ecx<br>mov ecx, dword[esp+0x154]<br>push esi<br>push edi<br>test ecx, ecx<br>je 0x466061<br>mov dword[ecx], 0xffffffff<br>cmp word[ebx], 0<br>jne 0x4661fb<br>cmp word[eax], 0<br>jne 0x4661fb<br>mov esi, dword[0x4c8578]<br>test esi, esi<br>jne 0x4661e4<br>mov eax, dword[0x4c8574]<br>test eax, eax<br>jne 0x4660c0<br>push 0x73a0<br>call fcn.0048cdd4<br>add esp, 4<br>mov dword[0x4c8574], eax<br>test eax, eax<br>jne 0x4660c0<br>push eax<br>push 0x4c8640<br>mov eax, str.Out_of_memory.<br>lea edx, [esi+1]<br>call fcn.004160c0<br>mov esi, dword[0x4c8578]<br>mov eax, dword[0x4c8574]<br>imul esi, esi, 0x94<br>push 0x94<br>add esi, eax<br>push 0<br>push esi<br>call fcn.00495c20<br>add esp, 0xc<br>push 0x11<br>call dword[sym.imp.GDI32.dll_GetStockObject]<br>mov ecx, dword[0x4c8578]<br>mov edx, dword[0x4c8574]<br>imul ecx, ecx, 0x94<br>push 0<br>mov dword[ecx+edx+0x90], eax<br>call dword[sym.imp.USER32.dll_GetDC]<br>mov ecx, dword[0x4c8574]<br>mov ebx, dword[sym.imp.GDI32.dll_SelectObject]<br>mov esi, eax<br>mov eax, dword[0x4c8578]<br>imul eax, eax, 0x94<br>mov edx, dword[eax+ecx+0x90]<br>push edx<br>push esi<br>call ebx<br>mov ebp, eax<br>mov eax, dword[0x4c8578]<br>imul eax, eax, 0x94<br>add eax, dword[0x4c8574]<br>push eax<br>push 0x3f<br>push esi<br>call dword[sym.imp.GDI32.dll_GetTextFaceW]<br>lea ecx, [esp+0xb0]<br>push ecx<br>push esi<br>call dword[sym.imp.GDI32.dll_GetTextMetricsW]<br>mov edi, dword[0x4c8578]<br>imul edi, edi, 0x94<br>add edi, dword[0x4c8574]<br>push 0x5a<br>push esi<br>call dword[sym.imp.GDI32.dll_GetDeviceCaps]<br>mov ecx, dword[esp+0xb0]<br>sub ecx, dword[esp+0xbc]<br>push eax<br>push 0x48<br>push ecx<br>call dword[sym.imp.KERNEL32.dll_MulDiv]<br>mov dword[edi+0x84], eax<br>mov edx, dword[esp+0xcc]<br>mov dword[edi+0x88], edx<br>cmp byte[esp+0xe4], 0<br>push ebp<br>setne al<br>mov byte[edi+0x80], al<br>cmp byte[esp+0xe9], 0<br>push esi<br>setne cl<br>mov byte[edi+0x81], cl<br>cmp byte[esp+0xee], 0<br>setne dl<br>mov byte[edi+0x82], dl<br>call ebx<br>push esi<br>push 0<br>call dword[sym.imp.USER32.dll_ReleaseDC]<br>inc dword[0x4c8578]<br>mov ecx, dword[esp+0x15c]<br>test ecx, ecx<br>je 0x4661ee<br>mov dword[ecx], 0xff000000<br>xor eax, eax<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0x140<br>ret <br>cmp dword[esp+0x158], 0<br>jne 0x46621f<br>cmp dword[0x4c8578], 0<br>jle 0x46653a<br>mov ecx, dword[0x4c8574]<br>mov dword[esp+0x158], ecx<br>cmp word[eax], 0<br>mov esi, dword[esp+0x158]<br>mov ecx, 0x25<br>lea edi, [esp+0x18]<br>rep movsd<br>je 0x466251<br>push 0x3f<br>push eax<br>lea edx, [esp+0x20]<br>push edx<br>call fcn.0048fa44<br>add esp, 0xc<br>xor eax, eax<br>mov word[esp+0x96], ax<br>or ebp, 0xffffffff<br>mov dword[esp+0xa4], 2<br>cmp word[ebx], 0<br>mov edi, ebx<br>je 0x466467<br>jmp 0x466270<br>movzx esi, word[edi]<br>test esi, 0xffffff80<br>jne 0x46628d<br>push 2<br>push esi<br>call fcn.0048df9e<br>add esp, 8<br>test eax, eax<br>je 0x46628d<br>and esi, 0xffffffdf<br>movzx eax, si<br>add eax, 0xffffffbe<br>cmp eax, 0x15<br>ja case.0x4662a3.68<br>movzx ecx, byte[eax+0x466624]<br>jmp dword[ecx*4+0x466600]<br>push 4<br>push str.bold<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne case.0x4662a3.68<br>mov dword[esp+0xa0], 0x2bc<br>add edi, 6<br>jmp case.0x4662a3.68<br>push 6<br>push str.italic<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne case.0x4662a3.68<br>mov byte[esp+0x98], 1<br>add edi, 0xa<br>jmp case.0x4662a3.68<br>push 4<br>push str.norm<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne case.0x4662a3.68<br>mov word[esp+0x98], ax<br>mov byte[esp+0x9a], al<br>mov dword[esp+0xa0], 0x190<br>add edi, 6<br>jmp case.0x4662a3.68<br>push 9<br>push str.underline<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne case.0x4662a3.68<br>mov byte[esp+0x99], 1<br>add edi, 0x10<br>jmp case.0x4662a3.68<br>push 0x1f<br>lea edx, [edi+2]<br>push edx<br>lea eax, [esp+0x118]<br>push eax<br>call fcn.0048fa44<br>xor ecx, ecx<br>add esp, 0xc<br>mov ebx, 0x4a352c<br>lea eax, [esp+0x110]<br>mov word[esp+0x14e], cx<br>call fcn.004095d0<br>test eax, eax<br>je 0x466399<br>xor edx, edx<br>mov word[eax], dx<br>lea esi, [esp+0x110]<br>call fcn.00474a80<br>mov ebp, eax<br>cmp ebp, 0xffffffff<br>jne 0x4663d6<br>push 0x10<br>mov eax, esi<br>push 0<br>push eax<br>call fcn.0048e37b<br>mov ecx, eax<br>movzx edx, al<br>shr ecx, 8<br>movzx ebp, cl<br>shl edx, 8<br>shr eax, 0x10<br>or ebp, edx<br>movzx eax, al<br>shl ebp, 8<br>add esp, 0xc<br>or ebp, eax<br>lea eax, [esp+0x110]<br>lea edx, [eax+2]<br>mov cx, word[eax]<br>add eax, 2<br>test cx, cx<br>jne 0x4663e0<br>sub eax, edx<br>sar eax, 1<br>lea edi, [edi+eax*2]<br>jmp case.0x4662a3.68<br>push 6<br>push str.strike<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x466415<br>mov byte[esp+0x9a], 1<br>add edi, 0xa<br>jmp case.0x4662a3.68<br>lea ecx, [edi+2]<br>push ecx<br>call fcn.0048e8c6<br>fadd qword[0x4bd488]<br>add esp, 4<br>call fcn.0049b670<br>mov dword[esp+0x9c], eax<br>jmp case.0x4662a3.68<br>lea edx, [edi+2]<br>push edx<br>call fcn.0048dfe6<br>mov dword[esp+0xa4], eax<br>jmp 0x466457<br>lea eax, [edi+2]<br>push eax<br>call fcn.0048dfe6<br>mov dword[esp+0xa8], eax<br>add esp, 4<br>add edi, 2<br>cmp word[edi], 0<br>jne 0x466270<br>mov eax, dword[esp+0x15c]<br>test eax, eax<br>je 0x466474<br>mov dword[eax], ebp<br>push 0<br>call dword[sym.imp.USER32.dll_GetDC]<br>mov esi, eax<br>push 0x5a<br>push esi<br>call dword[sym.imp.GDI32.dll_GetDeviceCaps]<br>push 0x1f<br>lea ecx, [esp+0x1c]<br>push ecx<br>lea edx, [esp+0xd4]<br>push edx<br>mov ebx, eax<br>mov byte[esp+0xd3], 1<br>mov byte[esp+0xd7], 0<br>call fcn.0048fa44<br>add esp, 0xc<br>xor eax, eax<br>push eax<br>lea ecx, [esp+0x1b]<br>push ecx<br>push 0x474c80<br>lea edx, [esp+0xbc]<br>push edx<br>push esi<br>mov word[esp+0x11e], ax<br>mov byte[esp+0x2b], al<br>call dword[sym.imp.GDI32.dll_EnumFontFamiliesExW]<br>cmp byte[esp+0x17], 0<br>jne 0x4664ff<br>mov eax, dword[esp+0x158]<br>lea edx, [esp+0x18]<br>sub edx, eax<br>lea esp, [esp]<br>movzx ecx, word[eax]<br>mov word[edx+eax], cx<br>add eax, 2<br>test cx, cx<br>jne 0x4664f0<br>push esi<br>push 0<br>call dword[sym.imp.USER32.dll_ReleaseDC]<br>lea edi, [esp+0x18]<br>call fcn.00466640<br>cmp eax, 0xffffffff<br>jne 0x4665f2<br>cmp dword[0x4c8578], 0xc8<br>jl 0x466548<br>push 0x4ab02c<br>push str.Too_many_fonts.<br>mov ecx, 0x4c8640<br>call fcn.0042e1d0<br>or eax, 0xffffffff<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0x140<br>ret <br>mov ecx, dword[esp+0xa4]<br>movzx edx, byte[esp+0x9a]<br>lea eax, [esp+0x18]<br>push eax<br>movzx eax, byte[esp+0x9d]<br>push 0<br>push ecx<br>movzx ecx, byte[esp+0xa4]<br>push 0<br>push 4<br>push 1<br>push edx<br>mov edx, dword[esp+0xbc]<br>push eax<br>mov eax, dword[esp+0xbc]<br>push ecx<br>push edx<br>push 0<br>push 0<br>push 0<br>push 0x48<br>push ebx<br>push eax<br>call dword[sym.imp.KERNEL32.dll_MulDiv]<br>neg eax<br>push eax<br>call dword[sym.imp.GDI32.dll_CreateFontW]<br>mov dword[esp+0xa8], eax<br>test eax, eax<br>jne 0x4665cd<br>push 0x4ab02c<br>push str.Cant_create_font.<br>mov ecx, 0x4c8640<br>call fcn.0042e1d0<br>or eax, 0xffffffff<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0x140<br>ret <br>mov eax, dword[0x4c8578]<br>mov edi, eax<br>imul edi, edi, 0x94<br>add edi, dword[0x4c8574]<br>inc eax<br>mov ecx, 0x25<br>lea esi, [esp+0x18]<br>mov dword[0x4c8578], eax<br>rep movsd<br>dec eax<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0x140<br>ret <br><eoc> ', 'null'],
[-167.32916259765625, -63.32966995239258, '<b><a href="/report/fcn.00438430@4fe6510221c33bf023f6abed461fc13f">fcn.00438430</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>push ebp<br>mov ebp, esp<br>sub esp, 0x460<br>push ebx<br>push esi<br>push edi<br>push eax<br>call dword[sym.imp.GDI32.dll_CreateCompatibleDC]<br>mov esi, eax<br>mov dword[ebp-0x10], esi<br>test esi, esi<br>jne 0x438459<br>lea esp, [ebp-0x46c]<br>pop edi<br>pop esi<br>pop ebx<br>mov esp, ebp<br>pop ebp<br>ret <br>mov eax, dword[ebp+8]<br>xor ecx, ecx<br>push ecx<br>lea edx, [ebp-0x45c]<br>push edx<br>push ecx<br>push ecx<br>push ecx<br>push eax<br>xor ebx, ebx<br>push esi<br>mov byte[ebp-5], bl<br>mov dword[ebp-0x45c], 0x28<br>mov word[ebp-0x44e], cx<br>call dword[sym.imp.GDI32.dll_GetDIBits]<br>test eax, eax<br>je 0x438612<br>mov ax, word[ebp-0x44e]<br>movzx ecx, ax<br>cmp ecx, dword[ebp+0x18]<br>jl 0x438612<br>mov esi, dword[ebp-0x454]<br>mov ecx, dword[ebp+0xc]<br>cmp ax, 0x10<br>mov eax, dword[ebp+0x14]<br>sete dl<br>mov byte[eax], dl<br>mov eax, dword[ebp-0x458]<br>mov edx, dword[ebp+0x10]<br>mov edi, esi<br>imul edi, eax<br>mov dword[ecx], eax<br>lea eax, [edi*4]<br>push eax<br>mov dword[edx], esi<br>mov dword[ebp-0xc], eax<br>call fcn.0048cdd4<br>mov ebx, eax<br>add esp, 4<br>mov dword[ebp-0x1c], ebx<br>test ebx, ebx<br>je 0x43860f<br>cmp word[ebp-0x44e], 8<br>sete al<br>mov byte[ebp-6], al<br>test al, al<br>jne 0x438507<br>mov eax, 0x20<br>mov word[ebp-0x44e], ax<br>mov ecx, dword[ebp+8]<br>neg esi<br>mov dword[ebp-0x454], esi<br>mov esi, dword[ebp-0x10]<br>push ecx<br>push esi<br>call dword[sym.imp.GDI32.dll_SelectObject]<br>push 0<br>lea edx, [ebp-0x45c]<br>push edx<br>mov edx, dword[ebp+8]<br>mov dword[ebp-0x20], eax<br>mov eax, dword[ebp+0x10]<br>mov ecx, dword[eax]<br>push ebx<br>push ecx<br>push 0<br>push edx<br>push esi<br>call dword[sym.imp.GDI32.dll_GetDIBits]<br>test eax, eax<br>je 0x4385fd<br>cmp byte[ebp-6], 0<br>je 0x4385f9<br>mov eax, 0x400<br>call fcn.00494320<br>mov eax, esp<br>push eax<br>push 0x100<br>push 0<br>push esi<br>mov dword[ebp-0x18], eax<br>call dword[sym.imp.GDI32.dll_GetSystemPaletteEntries]<br>mov eax, dword[ebp+0xc]<br>mov eax, dword[eax]<br>mov dword[ebp-0x24], eax<br>and eax, 0x80000003<br>jns 0x438581<br>dec eax<br>or eax, 0xfffffffc<br>inc eax<br>je 0x43858c<br>mov edx, 4<br>sub edx, eax<br>jmp 0x43858e<br>xor edx, edx<br>mov ecx, dword[ebp+0x10]<br>mov eax, dword[ecx]<br>mov esi, dword[ebp-0xc]<br>mov ecx, eax<br>imul ecx, edx<br>add ecx, edi<br>mov dword[ebp-0x14], edx<br>lea ecx, [ecx+ebx-1]<br>lea esi, [esi+ebx-4]<br>test eax, eax<br>jle 0x4385f9<br>mov eax, dword[ebp+0x10]<br>mov eax, dword[eax]<br>mov dword[ebp-0xc], eax<br>sub ecx, edx<br>cmp dword[ebp-0x24], 0<br>jle 0x4385f4<br>mov edx, dword[ebp+0xc]<br>mov edi, dword[edx]<br>movzx eax, byte[ecx]<br>mov edx, dword[ebp-0x18]<br>mov eax, dword[edx+eax*4]<br>mov edx, eax<br>shr edx, 8<br>movzx ebx, al<br>movzx edx, dl<br>shl ebx, 8<br>shr eax, 0x10<br>or edx, ebx<br>movzx eax, al<br>shl edx, 8<br>or edx, eax<br>mov dword[esi], edx<br>sub esi, 4<br>dec ecx<br>dec edi<br>jne 0x4385c1<br>mov ebx, dword[ebp-0x1c]<br>mov edx, dword[ebp-0x14]<br>dec dword[ebp-0xc]<br>jne 0x4385b4<br>mov byte[ebp-5], 1<br>mov eax, dword[ebp-0x20]<br>test eax, eax<br>je 0x43860f<br>mov ecx, dword[ebp-0x10]<br>push eax<br>push ecx<br>call dword[sym.imp.GDI32.dll_SelectObject]<br>mov esi, dword[ebp-0x10]<br>push esi<br>call dword[sym.imp.GDI32.dll_DeleteDC]<br>cmp byte[ebp-5], 0<br>jne 0x43862e<br>test ebx, ebx<br>je 0x43862e<br>push ebx<br>call fcn.0048e3af<br>add esp, 4<br>xor ebx, ebx<br>mov eax, ebx<br>lea esp, [ebp-0x46c]<br>pop edi<br>pop esi<br>pop ebx<br>mov esp, ebp<br>pop ebp<br>ret <br><eoc> ', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
and esp, 0xffffffc0
mov eax, 0x14ef4
call fcn.00437170
mov ecx, dword[ebp+8]
xor eax, eax
push ebx
push esi
mov esi, dword[0x468a84]
movzx edx, si
mov dword[esp+0x48], eax
mov dword[esp+0x38], eax
mov dword[esp+0x4c], eax
mov dword[esp+0x3a0], eax
mov dword[esp+0x3a4], eax
mov dword[esp+0x80], eax
mov dword[esp+0x84], eax
mov dword[esp+0x2f8], eax
mov dword[esp+0x2fc], eax
mov dword[esp+0x300], eax
or eax, 0xffffffff
mov dword[0x468a88], ecx
sub eax, edx
lea ecx, [esp+0x13bc]
movzx edx, cl
cmp eax, edx
push edi
jbe 0x406234
mov eax, 1
sub eax, ecx
mov dword[esp+0x4c], eax
jmp 0x40623a
add dword[0x468a80], esi
fld1
mov dword[esp+0x38], 0x1a
call fcn.00437440
fstp qword[esp+0x40]
fild dword[esp+0x3c]
mov ebx, dword[esp+0x3c]
xor edi, edi
fstp qword[esp+0x70]
jmp 0x406266
mov esi, dword[0x468a84]
movzx edx, word[0x468a80]
sub dword[esp+0x38], 1
imul edx, esi
lea eax, [esp+0x63f8]
imul edx, eax
test ebx, ebx
mov dword[esp+0x30], edx
mov dword[esp+0x18], ebx
fild dword[esp+0x30]
fadd qword[esp+0x40]
fadd qword[esp+0x70]
fild dword[esp+0x18]
jge 0x4062a1
fadd qword[0x453428]
fnstcw word[esp+0x2c]
push edi
movzx eax, word[esp+0x30]
faddp st(1)
or eax, 0xc00
mov dword[esp+0x34], eax
push edi
fldcw word[esp+0x38]
xor esi, esi
fistp qword[esp+0x20]
mov ebx, dword[esp+0x20]
fldcw word[esp+0x34]
call dword[sym.imp.GDI32.dll_SelectObject]
push esi
push esi
push esi
xor eax, eax
push eax
push edi
call dword[sym.imp.GDI32.dll_Rectangle]
cmp dword[esp+0x38], edi
jne 0x406260
xor eax, eax
cmp eax, edi
mov dword[esp+0x3c], ebx
jne 0x4062f7
mov dword[esp+0x88], edi
push 1
push edi
call dword[sym.imp.KERNEL32.dll_SetConsoleCtrlHandler]
push 4
call fcn.0040e657
add esp, 4
cmp eax, edi
je 0x406320
lea ecx, [esp+0x180]
mov dword[eax], ecx
mov dword[esp+0x180], eax
jmp 0x406327
mov dword[esp+0x180], edi
lea ecx, [esp+0x180]
call fcn.00405070
mov dword[esp+0x198], eax
mov byte[eax+0x15], 1
mov eax, dword[esp+0x198]
mov dword[eax+4], eax
mov eax, dword[esp+0x198]
mov dword[eax], eax
mov eax, dword[esp+0x198]
mov dword[eax+8], eax
lea edx, [esp+0x18]
push edx
lea eax, [esp+0x724]
push eax
lea ecx, [esp+0x188]
mov dword[esp+0x1a4], edi
mov word[esp+0x20], 0x60
mov dword[esp+0x24], 0x47
call fcn.00405f10
lea ecx, [esp+0x18]
push ecx
lea edx, [esp+0x718]
push edx
lea ecx, [esp+0x188]
mov word[esp+0x20], bx
mov dword[esp+0x24], ebx
call fcn.00405f10
mov ax, word[0x468a94]
mov esi, dword[esp+0x4c]
lea ecx, [esp+0x18]
push ecx
lea edx, [esp+0x70c]
push edx
lea ecx, [esp+0x188]
mov word[esp+0x20], ax
mov dword[esp+0x24], esi
call fcn.00405f10
mov ecx, dword[0x468a94]
movzx edx, word[esp+0x88]
xor eax, eax
movzx eax, al
sub ecx, eax
mov eax, dword[esp+0x198]
sub ecx, edx
add dword[0x468a80], ecx
mov ecx, dword[eax+4]
push ecx
lea ecx, [esp+0x184]
call fcn.00404c60
mov eax, dword[esp+0x198]
mov dword[eax+4], eax
mov eax, dword[esp+0x198]
push edi
push edi
mov dword[esp+0x1a4], edi
mov dword[eax], eax
mov eax, dword[esp+0x1a0]
push 0x130b
push edi
mov dword[eax+8], eax
call dword[sym.imp.USER32.dll_SendMessageA]
mov ecx, dword[esp+0x1449]
sub ecx, dword[0x468a84]
mov dword[0x468a8c], eax
add ecx, eax
cmp byte[esp+0x88], 0
mov dword[esp+0x2c], ecx
jne 0x406462
xor esi, esi
mov eax, dword[esp+0x198]
mov ecx, dword[esp+0x180]
mov edx, dword[eax]
push eax
push ecx
push edx
push ecx
lea edx, [esp+0x28]
push edx
lea ecx, [esp+0x194]
call fcn.00405f80
mov eax, dword[esp+0x198]
push eax
call fcn.0040e682
mov ecx, dword[esp+0x184]
push ecx
mov dword[esp+0x1a0], edi
mov dword[esp+0x1a4], edi
call fcn.0040e682
add esp, 8
push edi
call dword[sym.imp.GDI32.dll_CreateCompatibleDC]
lea edx, [esp+0x11e0]
push edx
mov dword[esp+0x90], eax
call fcn.00437168
mov word[esp+0x34], ax
lea eax, [esp+0x11e4]
push eax
call fcn.00437168
push 0x206
lea ecx, [esp+0x2ec6]
push edi
push ecx
mov word[esp+0x46], ax
mov word[esp+0x2ecc], di
call fcn.00436280
lea eax, [esp+0x2ecc]
add esp, 0x14
mov dword[esp+0x320], 7
mov dword[esp+0x31c], edi
mov word[esp+0x30c], di
lea ecx, [eax+2]
mov dx, word[eax]
add eax, 2
cmp dx, di
jne 0x406526
sub eax, ecx
sar eax, 1
push eax
lea edx, [esp+0x2ebc]
push edx
lea ecx, [esp+0x310]
call fcn.00405660
push 0xffffffffffffffff
push edi
lea eax, [esp+0x310]
push eax
lea ecx, [esp+0x224]
mov dword[esp+0x23c], 7
mov dword[esp+0x238], edi
mov word[esp+0x228], di
call fcn.00405380
push 0x1fe
lea ecx, [esp+0x48c6]
push edi
push ecx
mov word[esp+0x184], di
mov dword[esp+0x186], edi
mov word[esp+0x48cc], di
call fcn.00436280
push 0x1fe
lea edx, [esp+0x5172]
push edi
push edx
mov word[esp+0x5178], di
call fcn.00436280
push 0x1fe
lea eax, [esp+0x537e]
push edi
push eax
mov word[esp+0x5384], di
call fcn.00436280
push 0x1fe
lea ecx, [esp+0x4cf2]
push edi
push ecx
mov word[esp+0x4cf8], di
call fcn.00436280
mov edx, dword[esp+0xbc]
add esp, 0x30
push edi
push edx
call dword[sym.imp.GDI32.dll_SelectObject]
mov ecx, dword[0x468a94]
movzx edx, byte[0x468a8c]
mov dword[esp+0x40], eax
movzx eax, byte[esp+0x161e]
imul eax, eax, 0x9b
push edi
sub ecx, eax
push edi
sub ecx, edx
sub ecx, dword[esp+0x38]
push 3
push edi
sub ecx, 0x220
push 3
shl esi, cl
push 0xc0000000
push str.CONOUT$
mov dword[esp+0x68], esi
call dword[sym.imp.KERNEL32.dll_CreateFileW]
mov esi, dword[esp+0xf4]
imul esi, esi, 0xec
mov dword[esp+0x6c], eax
movsx eax, byte[esp+0x127e]
lea ecx, [esp+0x2eb8]
push ecx
push 0x104
add esi, eax
call dword[sym.imp.KERNEL32.dll_GetTempPathW]
cmp dword[esp+0x58], edi
je 0x406699
movsx edx, byte[esp+0x15fa]
lea eax, [ebx+edx-0xcd]
mov dword[esp+0x3c], eax
movsx ebx, byte[esp+0x176f]
imul ebx, dword[esp+0xbc]
imul ebx, dword[esp+0xf4]
push edi
push edi
push 3
push edi
push 1
push 0x80000000
lea ecx, [esp+0x13d8]
push ecx
call dword[sym.imp.KERNEL32.dll_CreateFileW]
mov edx, dword[0x468a80]
cmp edx, dword[0x468a94]
jg 0x406721
mov eax, dword[esp+0x38]
mov ecx, dword[esp+0x3c]
shr ecx, 0x10
imul ecx, ecx, 0xd6
mov edx, eax
imul edx, eax
add ecx, ebx
lea ecx, [edx+ecx+0x7d]
mov edx, ebx
shr edx, 8
mov dword[esp+0x1e0], ecx
movzx ecx, dl
movzx edx, byte[esp+0x58]
imul ecx, eax
imul ecx, ebx
add edx, dword[esp+0x1e4]
lea eax, [edx+ecx+0x20]
mov dword[esp+0x1e4], eax
lea ecx, [esp+0x104]
push ecx
lea edx, [esp+0x13c4]
push edx
call dword[sym.imp.KERNEL32.dll_GetCompressedFileSizeW]
mov eax, dword[esp+0x104]
mov ecx, dword[esp+0x1dc]
sub ecx, eax
add ecx, 0xb
and ecx, 0x29
imul ecx, ecx, 0xd3
push edi
mov dword[0x468a84], ecx
call dword[sym.imp.KERNEL32.dll_SetLastError]
lea edx, [esp+0x13c0]
test edx, edx
jne 0x406794
mov ecx, dword[esp+0x58]
mov edx, dword[esp+0x3c]
lea eax, [esi+0x23]
add ebx, ecx
mov ecx, dword[ebp+0xc]
mov dword[esp+0x4c], eax
lea eax, [ebx+edx+0x25]
shl eax, cl
imul eax, dword[esp+0x1e4]
mov dword[esp+0x1e4], eax
mov edx, dword[esp+0x30]
cmp edx, edi
mov ecx, dword[esp+0x2c]
mov dword[esp+0x78], ecx
je 0x4067cd
mov eax, dword[esp+0x38]
movsx ebx, byte[esp+0x1254]
add eax, 0x48
sub ebx, eax
add ebx, 0x157
and ecx, ebx
mov dword[esp+0x38], eax
mov dword[esp+0x2c], 4
mov dword[esp+0x78], ecx
lea eax, [esp+0x5778]
lea ebx, [esp+0x1718]
cmp eax, ebx
jg 0x40680b
movsx eax, byte[esp+0x1693]
imul ecx, ecx, 0x54
movsx ebx, byte[esp+0x2ce5]
imul ebx, dword[esp+0x1e0]
movzx eax, ax
imul eax, eax, 0x68
sub eax, ebx
sub eax, ecx
add eax, 0x5f
mov dword[esp+0x4c], eax
lea ecx, [esp+0x5778]
cmp ecx, dword[esp+0x7c]
jle 0x406840
movsx ecx, byte[esp+0x1227]
mov esi, dword[esp+0x114]
mov eax, edx
sub eax, ecx
sub eax, 0xdd
add esi, 0x4e42
imul eax, eax, 0x3d
mov dword[esp+0xf4], eax
push 1
push edi
push edi
call dword[sym.imp.USER32.dll_InvalidateRect]
movzx edx, byte[0x468a8c]
mov eax, dword[esp+0x8c]
mov ecx, 0x220
sub ecx, edx
sar dword[0x468a80], cl
push eax
call dword[sym.imp.GDI32.dll_BeginPath]
mov ecx, dword[esp+0xf4]
push edi
push edi
push edi
push edi
push 0xffffffffffffffff
lea edx, [esp+0x4cdc]
push edx
push edi
add ecx, 0x13
push 0xfde9
mov dword[esp+0x90], eax
mov dword[esp+0x11c], ecx
call dword[sym.imp.KERNEL32.dll_WideCharToMultiByte]
movzx ebx, word[esp+0x30]
imul ebx, dword[0x468a8c]
add ebx, dword[esp+0x4c]
mov dword[esp+0x5c], eax
imul ebx, dword[esp+0x3c]
cmp esi, dword[esp+0x2c]
mov dword[esp+0x3c], ebx
jl 0x4068dc
mov eax, dword[esp+0x30]
mov ecx, dword[0x468a98]
shr eax, 8
sub ecx, eax
sub ecx, dword[esp+0x4c]
xor eax, eax
shl eax, cl
mov dword[esp+0x2c], eax
mov eax, dword[0x468a80]
mov ecx, dword[0x468a84]
mov edx, dword[esp+0x40]
push 0xcc0020
push edi
push edi
push eax
push ecx
push eax
push edi
push edi
push edx
call dword[sym.imp.GDI32.dll_BitBlt]
mov esi, dword[esp+0x1e8]
cmp dword[0x468a84], esi
jne 0x406953
mov ecx, dword[esp+0x2c]
mov eax, dword[esp+0x80]
lea edx, [ecx+eax+0x16c]
movzx eax, word[esp+0x598a]
mov ecx, dword[esp+0xfc]
sub ecx, eax
sub ecx, dword[esp+0x1e4]
mov eax, dword[esp+0x58]
sub ecx, eax
imul ecx, eax
mov dword[esp+0x2c], edx
mov dword[esp+0x58], ecx
mov dword[esp+0xf4], 0xde
mov eax, dword[esp+0x4c]
lea edx, [esp+0x13c0]
cmp edx, eax
je 0x40696c
imul eax, eax, 0x220
mov dword[esp+0x4c], eax
cmp dword[esp+0x70], edi
je 0x40697e
mov eax, dword[0x468a80]
add dword[esp+0xf4], eax
mov ecx, dword[esp+0x5c]
mov edx, dword[esp+0x6c]
mov eax, 0x220
sar eax, cl
mov ecx, dword[esp+0x30]
push ecx
push edx
mov dword[esp+0x84], eax
call dword[sym.imp.KERNEL32.dll_SetConsoleScreenBufferSize]
cmp esi, dword[esp+0x7c]
jl 0x4069f5
mov ecx, dword[esp+0x38]
mov eax, ecx
imul ecx, dword[esp+0x30]
shr eax, 0x10
lea eax, [eax+eax*8]
add eax, eax
add eax, eax
mov edx, 0x20
sub edx, eax
movzx eax, word[esp+0x4c]
sub edx, esi
and edx, 0xe2
mov dword[0x468a80], edx
movsx edx, byte[esp+0x1647]
imul eax, edx
imul eax, dword[esp+0x30]
mov edx, dword[esp+0x78]
shr edx, 8
movzx ebx, dl
sub ebx, eax
add ebx, ecx
jmp 0x406a08
cmp ebx, edi
mov ebx, dword[esp+0x50]
jg 0x406a08
movzx eax, word[esp+0x78]
sub dword[0x468a80], eax
cmp dword[esp+0x230], 8
mov eax, dword[esp+0x21c]
jae 0x406a20
lea eax, [esp+0x21c]
lea ecx, [esp+0x5360]
push ecx
lea edx, [esp+0x5164]
push edx
lea ecx, [esp+0x48c8]
push ecx
lea edx, [esp+0x184]
push edx
push eax
call fcn.0043710d
lea eax, [esp+0x18c]
add esp, 0x14
mov dword[esp+0x37c], 7
mov dword[esp+0x378], edi
mov word[esp+0x368], di
lea edx, [eax+2]
lea ecx, [ecx]
mov cx, word[eax]
add eax, 2
cmp cx, di
jne 0x406a70
sub eax, edx
sar eax, 1
push eax
lea eax, [esp+0x17c]
push eax
lea ecx, [esp+0x36c]
call fcn.00405660
mov ecx, dword[esp+0x100]
mov eax, dword[esp+0x7c]
mov esi, 0x5f
mov edx, eax
shr edx, 8
movzx edx, dl
imul edx, edx, 0xffffff56
add ecx, 0x19
add eax, edx
sub esi, 1
jne 0x406aa4
mov dword[esp+0x7c], eax
lea eax, [esp+0x48c0]
mov dword[esp+0x100], ecx
lea edx, [eax+2]
mov cx, word[eax]
add eax, 2
cmp cx, di
jne 0x406ad1
sub eax, edx
sar eax, 1
push eax
lea eax, [esp+0x48c4]
push eax
lea ecx, [esp+0x36c]
call fcn.00405750
cmp dword[esp+0x37c], 8
jb 0x406b0f
mov ecx, dword[esp+0x368]
push ecx
call fcn.0040e682
add esp, 4
mov ecx, dword[0x468a84]
mov eax, dword[0x468a80]
push 0x14
push ecx
push eax
push ecx
push eax
push 1
lea edx, [esp+0x13d8]
push edx
push ebx
push eax
push ecx
push eax
mov eax, dword[esp+0x58]
push eax
push edi
mov dword[esp+0x3b0], 7
mov dword[esp+0x3ac], edi
mov word[esp+0x39c], di
call dword[sym.imp.COMCTL32.dll_CreateToolbarEx]
cmp eax, edi
je 0x406b66
mov ecx, dword[0x468a80]
mov dword[0x468a84], ecx
jmp 0x406b74
push edi
call dword[sym.imp.USER32.dll_GetParent]
push eax
call dword[sym.imp.USER32.dll_GetDC]
mov eax, dword[esp+0x5c]
cmp eax, edi
jne 0x406b82
mov dword[0x468a80], edi
push edi
push edi
push eax
lea edx, [esp+0x4864]
push edx
push 0xffffffffffffffff
lea eax, [esp+0x4cdc]
push eax
push edi
push 0xfde9
call dword[sym.imp.KERNEL32.dll_WideCharToMultiByte]
mov ecx, dword[esp+0x40]
mov edx, dword[esp+0x8c]
push ecx
push edx
call dword[sym.imp.GDI32.dll_SelectObject]
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov esi, eax
lea eax, [esp+0x1d4]
push eax
mov dword[esp+0x1d8], edi
call dword[sym.imp.ole32.dll_CreateAntiMoniker]
mov ecx, dword[esp+0x1d4]
cmp ecx, edi
mov dword[esp+0x11e0], 1
mov dword[esp+0x5c], ecx
jne 0x406bf1
mov dword[esp+0x5c], esi
cmp dword[0x468a80], edi
jne 0x406c03
movzx ecx, bl
add ecx, 1
mov dword[esp+0x2c], ecx
cmp eax, edi
jne 0x406c16
mov byte[esp+0x5c], 0
mov ecx, dword[esp+0x5c]
mov dword[0x468a98], ecx
mov eax, dword[esp+0x8c]
lea edx, [eax+1]
push eax
mov dword[esp+0x34], edx
call dword[sym.imp.GDI32.dll_GetTextColor]
test eax, eax
jne 0x406c3f
mov eax, dword[esp+0x30]
push 0xff
push eax
call dword[sym.imp.GDI32.dll_SetTextColor]
mov ecx, dword[esp+0x2c]
mov edx, dword[esp+0x30]
push ecx
push edx
call dword[sym.imp.GDI32.dll_SetTextColor]
cmp dword[0x468a98], edi
je 0x40e5c4
movzx eax, si
add ebx, 1
cmp eax, edi
mov dword[esp+0x50], ebx
jle 0x406c75
lea esp, [esp]
sub eax, 1
jne 0x406c70
add esi, 0x220
mov dword[esp+0x60], esi
mov dword[0x468a90], esi
add esi, 0xfffffde0
cmp dword[esp+0x230], 8
mov dword[0x468a80], esi
jb 0x406cab
mov edx, dword[esp+0x21c]
push edx
call fcn.0040e682
add esp, 4
cmp dword[esp+0x320], 8
mov dword[esp+0x230], 7
mov dword[esp+0x22c], edi
mov word[esp+0x21c], di
jb 0x406cdf
mov eax, dword[esp+0x30c]
push eax
call fcn.0040e682
add esp, 4
cmp dword[0x468a90], edi
mov dword[esp+0x320], 7
mov dword[esp+0x31c], edi
mov word[esp+0x30c], di
mov ebx, 0x100
je 0x406d10
cmp dword[esp+0x5c], edi
jne 0x406dfe
push edi
call dword[sym.imp.GDI32.dll_CreateCompatibleDC]
mov esi, eax
mov dword[esp+0x2c4], edi
call sub.AVIFIL32.dll_AVIFileInit
push edi
push edi
push edi
push 0x73646976
lea ecx, [esp+0x11f0]
push ecx
lea edx, [esp+0xdc]
push edx
call sub.AVIFIL32.dll_AVIStreamOpenFromFileA
test eax, eax
je 0x406d59
push 0x30
push str.Error
push str.Failed_To_Open_The_AVI_Stream
push edi
call dword[sym.imp.USER32.dll_MessageBoxA]
mov ecx, dword[esp+0xc8]
push 0x8c
lea eax, [esp+0x50d4]
push eax
push ecx
call sub.AVIFIL32.dll_AVIStreamInfoA
mov edx, dword[esp+0xc8]
push edx
call sub.AVIFIL32.dll_AVIStreamLength
push eax
mov eax, dword[esp+0xcc]
push eax
call sub.AVIFIL32.dll_AVIStreamSampleToTime
push edi
push edi
lea ecx, [esp+0x2cc]
push ecx
push edi
lea edx, [esp+0x680]
push edx
push esi
mov word[esp+0x694], 1
mov word[esp+0x696], 0x18
mov dword[esp+0x68c], ebx
mov dword[esp+0x690], ebx
mov dword[esp+0x698], edi
call dword[sym.imp.GDI32.dll_CreateDIBSection]
push eax
push esi
call dword[sym.imp.GDI32.dll_SelectObject]
mov eax, dword[esp+0xc8]
push edi
push eax
call sub.AVIFIL32.dll_AVIStreamGetFrameOpen
test eax, eax
jne 0x406dfe
push 0x30
push str.Error
push str.Failed_To_Open_The_AVI_Frame
push edi
call dword[sym.imp.USER32.dll_MessageBoxA]
cmp dword[0x468a8c], edi
je 0x407285
mov dword[esp+0x94], edi
call sub.AVIFIL32.dll_AVIFileInit
push edi
push 0x40
push edi
push 0x73647561
push str.TESTX.AVI
lea ecx, [esp+0xcc]
push ecx
call sub.AVIFIL32.dll_AVIStreamOpenFromFileA
test eax, eax
je 0x406e3b
mov dword[0x468a80], edi
mov edx, dword[esp+0xb8]
push edx
call sub.AVIFIL32.dll_AVIStreamStart
mov ecx, dword[esp+0xb8]
mov ebx, eax
lea eax, [esp+0x68]
push eax
push edi
push ebx
push ecx
call sub.AVIFIL32.dll_AVIStreamReadFormat
test eax, eax
je 0x406e68
mov dword[0x468a80], edi
mov edx, dword[esp+0x68]
push edx
call fcn.00434f57
mov esi, eax
add esp, 4
cmp esi, edi
jne 0x406e81
mov dword[0x468a80], edi
mov ecx, dword[esp+0xb8]
lea eax, [esp+0x68]
push eax
push esi
push ebx
push ecx
call sub.AVIFIL32.dll_AVIStreamReadFormat
test eax, eax
je 0x406e9f
mov dword[0x468a80], edi
mov edx, dword[esi]
mov dword[esp+0x1ec], edx
mov ebx, dword[esi+4]
mov dword[esp+0x1f0], ebx
mov eax, dword[esi+8]
mov dword[esp+0x1f4], eax
mov eax, dword[esi+0xc]
mov dword[esp+0x1f8], eax
movzx ecx, word[esi+0x10]
shr eax, 0x10
cmp eax, 0xc
movzx eax, word[esp+0x1ee]
mov word[esp+0x1fc], cx
sbb ecx, ecx
and ecx, 0xfffffff8
add ecx, 0x10
movzx edx, cx
imul eax, edx
cdq
and edx, 7
add eax, edx
sar eax, 3
mov word[esp+0x1f8], ax
movzx eax, ax
imul eax, ebx
push 0x2c
mov word[esp+0x1fe], cx
lea ecx, [esp+0x4b8]
push edi
push ecx
mov word[esp+0x1f8], 1
mov dword[esp+0x200], eax
mov word[esp+0x208], di
call fcn.00436280
mov ecx, dword[esp+0xc4]
add esp, 0xc
push edi
lea eax, [esp+0x4b8]
lea edx, [esp+0x1f0]
push eax
mov dword[esp+0x4d4], edx
push ecx
lea edx, [esp+0xa4]
push edx
mov dword[esp+0x4c4], 0x73647561
mov dword[esp+0x4e0], 0x10
call sub.AVIFIL32.dll_AVIMakeCompressedStream
test eax, eax
je 0x406f85
mov dword[0x468a80], edi
mov eax, dword[esp+0x98]
push eax
call sub.AVIFIL32.dll_AVIStreamStart
mov ecx, dword[esp+0x98]
mov ebx, eax
push ecx
mov dword[esp+0x3c], ebx
call sub.AVIFIL32.dll_AVIStreamLength
lea edx, [eax+ebx-1]
push 0x453994
push str.TESTP.WAV
mov dword[esp+0x48], edx
call fcn.00436eec
mov ebx, eax
add esp, 8
cmp ebx, edi
mov dword[esp+0x70], ebx
jne 0x406fcf
mov dword[0x468a80], edi
push ebx
push 4
push 1
push str.RIFF
call fcn.00436da6
add esp, 0x10
cmp eax, 4
je 0x406fec
mov dword[0x468a80], edi
mov dword[esp+0x30], 4
push ebx
push edi
call fcn.00436b08
add esp, 8
cmp eax, 0xffffffff
jne 0x407009
mov dword[0x468a80], edi
sub dword[esp+0x30], 1
jne 0x406ff4
push ebx
push 4
push 1
push str.WAVE
call fcn.00436da6
add esp, 0x10
cmp eax, 4
je 0x40702d
mov dword[0x468a80], edi
push ebx
push 4
push 1
push str.fmt_
call fcn.00436da6
add esp, 0x10
cmp eax, 4
je 0x40704a
mov dword[0x468a80], edi
push ebx
push 1
lea eax, [esp+0x4d8]
push 4
push eax
call fcn.00436da6
add esp, 0x10
cmp eax, 1
je 0x40706a
mov dword[0x468a80], edi
mov ecx, dword[esp+0x4d0]
mov edx, dword[esp+0x4cc]
push ebx
push 1
push ecx
push edx
call fcn.00436da6
add esp, 0x10
cmp eax, 1
je 0x407090
mov dword[0x468a80], edi
push ebx
push 4
push 1
push str.data
call fcn.00436da6
add esp, 0x10
cmp eax, 4
je 0x4070ad
mov dword[0x468a80], edi
mov dword[esp+0x30], 4
push ebx
push edi
call fcn.00436b08
add esp, 8
cmp eax, 0xffffffff
jne 0x4070ca
mov dword[0x468a80], edi
sub dword[esp+0x30], 1
jne 0x4070b5
mov ebx, dword[esp+0x38]
cmp ebx, dword[esp+0x40]
jg 0x4071cd
nop
mov edx, dword[esp+0x98]
lea eax, [esp+0xac]
push eax
lea ecx, [esp+0x6c]
push ecx
push edi
push edi
push 0xffffffffffffffff
push ebx
push edx
call sub.AVIFIL32.dll_AVIStreamRead
test eax, eax
je 0x407109
mov dword[0x468a80], edi
cmp dword[esp+0x68], edi
jle 0x407118
cmp dword[esp+0xac], edi
jg 0x407144
mov edx, dword[esp+0x98]
lea eax, [esp+0xac]
push eax
lea ecx, [esp+0x6c]
push ecx
push edi
push edi
push 0x1000
push ebx
push edx
call sub.AVIFIL32.dll_AVIStreamRead
test eax, eax
je 0x407144
mov dword[0x468a80], edi
mov eax, dword[esp+0x68]
push eax
push esi
call fcn.00435205
mov esi, eax
add esp, 8
cmp esi, edi
jne 0x40715e
mov dword[0x468a80], edi
mov eax, dword[esp+0x68]
lea ecx, [esp+0xac]
push ecx
mov ecx, dword[esp+0xb0]
lea edx, [esp+0x6c]
push edx
mov edx, dword[esp+0xa0]
push eax
push esi
push ecx
push ebx
push edx
call sub.AVIFIL32.dll_AVIStreamRead
test eax, eax
je 0x407191
mov esi, dword[esp+0x70]
mov eax, 0xfffffffc
sub eax, dword[esp+0x94]
push 2
push eax
push esi
call fcn.00436a83
add esp, 0xc
test eax, eax
je 0x4071f3
mov dword[0x468a80], edi
push esi
push 1
lea ecx, [esp+0x9c]
push 4
push ecx
call fcn.00436da6
add esp, 0x10
cmp eax, 1
je 0x407213
mov dword[0x468a80], edi
push edi
push 4
push esi
call fcn.00436a83
add esp, 0xc
test eax, eax
je 0x407229
mov dword[0x468a80], edi
mov edx, dword[esp+0x94]
mov eax, dword[esp+0x4d0]
push esi
lea ecx, [edx+eax+0x14]
push 1
lea edx, [esp+0x9c]
push 4
push edx
mov dword[esp+0xa4], ecx
call fcn.00436da6
add esp, 0x10
cmp eax, 1
je 0x407262
mov dword[0x468a80], edi
push esi
call fcn.00436980
mov eax, dword[esp+0x9c]
add esp, 4
push eax
call sub.AVIFIL32.dll_AVIStreamRelease
mov ecx, dword[esp+0xb8]
push ecx
call sub.AVIFIL32.dll_AVIStreamRelease
mov edx, dword[str.Video_1]
mov eax, dword[0x453960]
mov cl, byte[0x453964]
push 0x37
mov dword[esp+0x630], edx
lea edx, [esp+0x639]
push edi
mov ebx, 0xa0
mov esi, 0x78
push edx
mov dword[esp+0x5ec], 0x73646976
mov dword[esp+0x5f0], 0x20424944
mov dword[esp+0x5f4], edi
mov dword[esp+0x5f8], edi
mov word[esp+0x5fc], di
mov word[esp+0x5fe], di
mov dword[esp+0x600], 1
mov dword[esp+0x604], 0x1e
mov dword[esp+0x608], edi
mov dword[esp+0x60c], 0xa
mov dword[esp+0x610], edi
mov dword[esp+0x614], edi
mov dword[esp+0x618], 0xffffffff
mov dword[esp+0x61c], edi
mov dword[esp+0x620], edi
mov dword[esp+0x624], edi
mov dword[esp+0x628], ebx
mov dword[esp+0x62c], esi
mov dword[esp+0x630], edi
mov dword[esp+0x634], edi
mov dword[esp+0x63c], eax
mov byte[esp+0x640], cl
call fcn.00436280
add esp, 0xc
mov dword[esp+0x3dc], 0x28
mov dword[esp+0x3e0], ebx
mov dword[esp+0x3e4], esi
mov word[esp+0x3e8], 1
mov word[esp+0x3ea], 0x18
mov dword[esp+0x3ec], edi
mov dword[esp+0x3f0], 0xe100
mov dword[esp+0x3f4], edi
mov dword[esp+0x3f8], edi
mov dword[esp+0x3fc], edi
mov dword[esp+0x400], edi
call sub.AVIFIL32.dll_AVIFileInit
push edi
push 0x1041
push 0x453958
lea eax, [esp+0x2e8]
push eax
call sub.AVIFIL32.dll_AVIFileOpenA
test eax, eax
je 0x4073f0
mov dword[0x468a80], edi
cmp dword[esp+0x60], edi
jne 0x40741d
mov eax, dword[esp+0x2dc]
lea ecx, [esp+0x5e0]
push ecx
lea edx, [esp+0x118]
push edx
push eax
call sub.AVIFIL32.dll_AVIFileCreateStreamA
test eax, eax
je 0x40741d
mov dword[0x468a80], edi
cmp dword[esp+0x5c], edi
jne 0x407449
mov edx, dword[esp+0x114]
push 0x28
lea ecx, [esp+0x3e0]
push ecx
push edi
push edx
call sub.AVIFIL32.dll_AVIStreamSetFormat
test eax, eax
je 0x407449
mov eax, dword[0x468a84]
mov dword[0x468a80], eax
xor ebx, ebx
xor edi, edi
mov dword[esp+0x30], edi
mov dword[esp+0x38], ebx
fild dword[esp+0x30]
fmul qword[0x453950]
fdiv qword[0x453948]
fst qword[esp+0x30]
fild dword[esp+0x38]
fstp qword[esp+0x18]
call fcn.00437310
fmul qword[0x453940]
fmul qword[esp+0x18]
fdiv qword[0x453938]
fadd qword[0x453930]
call fcn.004364a0
fld qword[esp+0x30]
lea esi, [eax+eax*4]
shl esi, 5
call fcn.004371e0
fmul qword[0x453940]
fmul qword[esp+0x18]
fdiv qword[0x453938]
fadd qword[0x453928]
call fcn.004364a0
add dword[esp+0x38], 1
add esi, eax
lea eax, [esi+esi*2]
add edi, 1
cmp edi, 2
mov byte[esp+eax+0x6e02], 0xff
mov byte[esp+eax+0x6e01], 0xff
mov byte[esp+eax+0x6e00], 0xff
mov dword[esp+0x30], edi
jl 0x407455
add ebx, 0x64
cmp ebx, 0xc8
jl 0x40744b
call sub.AVIFIL32.dll_AVIFileExit
cmp dword[0x468a94], 0
je 0x4076e4
mov ebx, dword[0x468a8c]
push ebx
call sub.AVIFIL32.dll_AVIStreamStart
push ebx
mov esi, eax
call sub.AVIFIL32.dll_AVIStreamLength
push 0x8c
lea edx, [esp+0x2e2c]
push edx
lea ecx, [eax+esi-1]
push ebx
mov dword[esp+0x3c], ecx
call sub.AVIFIL32.dll_AVIStreamInfoA
xor edi, edi
test eax, eax
je 0x407549
mov dword[0x468a80], edi
lea eax, [esp+0x2e28]
push eax
lea ecx, [esp+0x160]
push ecx
push edi
call sub.AVIFIL32.dll_AVIFileCreateStreamA
test eax, eax
je 0x407569
mov dword[0x468a80], edi
lea edx, [esp+0x64]
push edx
push edi
push esi
push ebx
call sub.AVIFIL32.dll_AVIStreamReadFormat
test eax, eax
je 0x407580
mov dword[0x468a80], edi
mov eax, dword[esp+0x64]
push eax
call fcn.00434f57
mov edi, eax
add esp, 4
test edi, edi
jne 0x407598
mov dword[0x468a80], eax
lea ecx, [esp+0x64]
push ecx
push edi
push esi
push ebx
call sub.AVIFIL32.dll_AVIStreamReadFormat
test eax, eax
je 0x4075b3
mov dword[0x468a80], 0
mov edx, dword[esp+0x64]
mov eax, dword[esp+0x15c]
push edx
push edi
push esi
push eax
call sub.AVIFIL32.dll_AVIStreamSetFormat
test eax, eax
je 0x4075d5
mov dword[0x468a80], 0
cmp esi, dword[esp+0x30]
jg 0x4076ce
nop
lea ecx, [esp+0x9c]
push ecx
lea edx, [esp+0x68]
push edx
push 0
push 0
push 0xffffffffffffffff
push esi
push ebx
call sub.AVIFIL32.dll_AVIStreamRead
test eax, eax
je 0x407608
mov dword[0x468a80], 0
cmp dword[esp+0x64], 0
jle 0x407619
cmp dword[esp+0x9c], 0
jg 0x407644
lea eax, [esp+0x9c]
push eax
lea ecx, [esp+0x68]
push ecx
push 0
push 0
push 0x1000
push esi
push ebx
call sub.AVIFIL32.dll_AVIStreamRead
test eax, eax
je 0x407644
mov dword[0x468a80], 0
mov edx, dword[esp+0x64]
push edx
push edi
call fcn.00435205
mov edi, eax
add esp, 8
test edi, edi
jne 0x40765d
mov dword[0x468a80], eax
mov edx, dword[esp+0x64]
lea eax, [esp+0x9c]
push eax
mov eax, dword[esp+0xa0]
lea ecx, [esp+0x68]
push ecx
push edx
push edi
push eax
push esi
push ebx
call sub.AVIFIL32.dll_AVIStreamRead
test eax, eax
je 0x40768d
mov dword[0x468a80], 0
mov ecx, dword[esp+0x64]
mov edx, dword[esp+0x9c]
mov eax, dword[esp+0x15c]
push 0
push 0
push 0x10
push ecx
push edi
push edx
push esi
push eax
call sub.AVIFIL32.dll_AVIStreamWrite
test eax, eax
je 0x4076bd
mov dword[0x468a80], 0
add esi, dword[esp+0x9c]
cmp esi, dword[esp+0x30]
jle 0x4075e0
mov ecx, dword[esp+0x15c]
push ecx
call sub.AVIFIL32.dll_AVIStreamRelease
push edi
call fcn.0043501a
add esp, 4
mov edx, dword[0x468a90]
mov edi, dword[0x468a98]
lea eax, [esp+0x39c]
push eax
push 0xba2
mov dword[esp+0x48], edx
call dword[sym.imp.OPENGL32.dll_glGetIntegerv]
lea ecx, [esp+0x5bf8]
push ecx
push 0x200
call dword[sym.imp.OPENGL32.dll_glSelectBuffer]
mov ebx, dword[sym.imp.OPENGL32.dll_glRenderMode]
push 0x1c02
call ebx
call dword[sym.imp.OPENGL32.dll_glInitNames]
push 0
call dword[sym.imp.OPENGL32.dll_glPushName]
mov esi, dword[sym.imp.OPENGL32.dll_glMatrixMode]
push 0x1701
call esi
call dword[sym.imp.OPENGL32.dll_glPushMatrix]
call dword[sym.imp.OPENGL32.dll_glLoadIdentity]
fld1
mov eax, dword[esp+0x3a8]
lea edx, [esp+0x39c]
push edx
sub esp, 0x20
fst qword[esp+0x18]
sub eax, edi
fstp qword[esp+0x10]
mov dword[esp+0x54], eax
fild dword[esp+0x54]
fstp qword[esp+8]
fild dword[esp+0x64]
fstp qword[esp]
call sub.GLU32.dll_gluPickMatrix
fld1
sub esp, 0x30
fst qword[esp+0x28]
fldz
fstp qword[esp+0x20]
fild dword[0x468a84]
fstp qword[esp+0x18]
fst qword[esp+0x10]
fild dword[0x468a80]
fstp qword[esp+8]
fstp qword[esp]
call dword[sym.imp.OPENGL32.dll_glOrtho]
push 0x1700
call esi
push 0x1701
call esi
call dword[sym.imp.OPENGL32.dll_glPopMatrix]
push 0x1700
call esi
push 0x1c00
call ebx
test eax, eax
jle 0x407800
cmp eax, 1
mov esi, dword[esp+0x5bfc]
jle 0x407800
lea edx, [esp+0x5c0c]
add eax, 0xffffffff
mov ecx, dword[edx]
cmp ecx, esi
jae 0x4077f8
mov esi, ecx
add edx, 0x10
sub eax, 1
jne 0x4077f0
mov ecx, dword[0x468a94]
xor eax, eax
mov dword[esp+0xbc], eax
mov dword[esp+0x30], eax
mov eax, dword[0x468a8c]
lea edx, [eax+8]
imul edx, dword[esp+0x60]
test edx, edx
mov dword[esp+0x40], ecx
jle 0x40799a
mov ebx, 1
xor edi, edi
mov eax, dword[esp+0xbc]
push edi
push edi
push edi
push edi
push eax
push edi
push edi
call dword[sym.imp.WS2_32.dll_WSAConnect]
lea ecx, [esp+0xbc]
push ecx
push edi
push edi
push edi
push edi
call dword[sym.imp.WS2_32.dll_WSAAddressToStringW]
push edi
push edi
push edi
push edi
push edi
call dword[sym.imp.WS2_32.dll_WSAAccept]
mov ecx, dword[0x468a8c]
imul eax, ecx
cmp eax, edi
jne 0x407885
cmp ecx, edi
jne 0x407885
cmp dword[0x468a94], edi
jne 0x407885
mov esi, dword[0x468a98]
jmp 0x407887
xor esi, esi
mov edx, dword[esp+0x40]
push 3
push edi
push edi
push edi
push edi
push 0xffffffffffffffff
push edx
call dword[sym.imp.USER32.dll_SetWindowPos]
cmp esi, edi
je 0x4078f2
lea eax, [esp+0x12e8]
push eax
push edi
call dword[sym.imp.USER32.dll_BeginPaint]
mov esi, eax
push ebx
push esi
call dword[sym.imp.GDI32.dll_SetBkMode]
lea eax, [esp+0x4bc0]
lea edx, [eax+1]
mov cl, byte[eax]
add eax, 1
test cl, cl
jne 0x4078c1
sub eax, edx
push eax
lea ecx, [esp+0x4bc4]
push ecx
push edi
push edi
push esi
call dword[sym.imp.GDI32.dll_TextOutA]
lea edx, [esp+0x12e8]
push edx
push edi
call dword[sym.imp.USER32.dll_EndPaint]
jmp 0x40797b
push 0x58
lea eax, [esp+0x69c]
push edi
push eax
call fcn.00436280
add esp, 0xc
lea eax, [esp+0x698]
lea ecx, [esp+0x2c20]
lea edx, [esp+0x15c8]
push eax
mov dword[esp+0x69c], 0x58
mov dword[esp+0x6a0], edi
mov dword[esp+0x6b8], ecx
mov byte[esp+0x2c24], 0
mov dword[esp+0x6bc], 0x104
mov dword[esp+0x6a8], edx
mov dword[esp+0x6b4], ebx
mov dword[esp+0x6c0], edi
mov dword[esp+0x6c4], edi
mov dword[esp+0x6c8], edi
mov dword[esp+0x6d0], 0x1800
call dword[sym.imp.comdlg32.dll_GetOpenFileNameA]
mov eax, dword[0x468a8c]
mov ecx, dword[esp+0x30]
lea edx, [eax+8]
imul edx, dword[esp+0x60]
add ecx, ebx
cmp ecx, edx
mov dword[esp+0x30], ecx
jl 0x407833
imul eax, dword[0x468a84]
mov ecx, dword[0x45cabc]
mov edx, dword[0x45cac0]
add eax, 2
mov edi, eax
mov eax, dword[0x45cab8]
mov dword[esp+0x330], ecx
lea ecx, [esp+0x32c]
mov dword[esp+0x32c], eax
mov eax, dword[0x45cac4]
push ecx
push str.36FC9E60_C465_11CF_8056_444553540000
mov dword[esp+0x38], edi
mov dword[esp+0x33c], edx
mov dword[esp+0x340], eax
call dword[sym.imp.ole32.dll_CLSIDFromString]
push 2
push 0
push 0
lea edx, [esp+0x338]
push edx
call dword[sym.imp.SETUPAPI.dll_SetupDiGetClassDevsA]
push 0
push 0
push 0
mov esi, eax
call sub.MSACM32.dll_acmStreamUnprepareHeader
mov eax, dword[0x468a84]
mov ecx, dword[esp+0x3c]
lea edx, [esp+0x72c]
push edx
push 0
sub eax, edi
push 0
mov dword[0x468a94], 0
mov dword[esp+0x738], 0x1c
lea ebx, [eax+ecx+1]
call dword[sym.imp.SETUPAPI.dll_SetupDiEnumDeviceInfo]
push esi
mov dword[esp+0x58], eax
call dword[sym.imp.SETUPAPI.dll_SetupDiDestroyDeviceInfoList]
mov edx, dword[esp+0x60]
movzx eax, dl
imul eax, eax, 0xca
movzx esi, word[esp+0x140e]
mov ecx, 0x7b
sub ecx, dword[esp+0x100]
mov dword[esp+0x78], 0
shl eax, cl
mov ecx, dword[esp+0x114]
shr ecx, 8
movzx ecx, cl
and eax, ecx
movzx ecx, byte[esp+0x1e4]
add dword[esp+0xfc], eax
imul ecx, ecx, 0xdd
mov eax, dword[ebp+8]
mov dword[esp+0x6c], eax
add ecx, esi
movzx esi, byte[esp+0xbc]
mov eax, 0x1f
sub eax, dword[0x468a8c]
cmp edx, dword[esp+0x58]
mov dword[esp+0x70], 1
mov dword[0x468a80], eax
lea ecx, [ecx+esi-0x67]
jge 0x407af7
movzx esi, byte[0x468a91]
add ecx, 0xfffffff8
shl dword[esp+0x4c], cl
mov ecx, dword[esp+0x7c]
mov edx, ecx
shr edx, 0x10
add edx, ecx
lea ecx, [esi+edx-0x85]
mov dword[esp+0x70], ecx
movsx esi, byte[esp+0x16b0]
mov edx, dword[ebp+0xc]
imul esi, esi, 0x18ec
cmp edi, edx
jle 0x407b3c
movzx ecx, byte[esp+0x4c]
mov edi, dword[0x468a98]
imul ecx, ebx
sub edi, ecx
mov ecx, dword[esp+0x4c]
lea ecx, [edi+ecx+0x5f]
mov dword[esp+0x78], ecx
mov ecx, dword[esp+0x50]
shr ecx, 0x10
sub ecx, 0x57e4
sar eax, cl
mov dword[0x468a80], eax
cmp edx, dword[esp+0x54]
jl 0x407b6b
mov edx, dword[esp+0x1e4]
mov ecx, dword[esp+0xbc]
add edx, ecx
imul edx, dword[esp+0xfc]
mov dword[esp+0xfc], edx
mov edx, dword[esp+0x50]
mov dword[0x468a84], edx
lea ecx, [esp+0x144]
push ecx
lea edx, [esp+0x110]
push edx
lea ecx, [esp+0x16c]
push ecx
push eax
call dword[sym.imp.SHLWAPI.dll_ColorRGBToHLS]
cmp dword[0x468a80], esi
jge 0x407bac
movsx edx, byte[esp+0x2c69]
movzx ecx, dx
mov eax, 0x3b
sub eax, ecx
sub eax, dword[esp+0x3c]
mov dword[esp+0x70], eax
mov edi, dword[0x468a94]
mov eax, dword[esp+0xf4]
mov dword[esp+0x58], 0
mov dword[esp+0x40], 0x44
lea esp, [esp]
lea edx, [esp+0x1718]
cmp edx, dword[0x468a98]
jg 0x407c19
mov ecx, dword[0x468a80]
mov edx, dword[ebp+0xc]
add eax, 0x44
sub ecx, esi
sub ecx, dword[esp+0x4c]
mov dword[esp+0x78], eax
mov eax, dword[esp+0x100]
add ecx, dword[esp+0x54]
imul eax, edi
shr edx, 0x10
shl edx, cl
mov ecx, dword[esp+0xfc]
sub ecx, eax
sub dword[esp+0x3c], edx
sub ecx, ebx
mov eax, ecx
cmp dword[0x468a90], edi
jne 0x407c32
movsx esi, byte[esp+0x12c5]
shr esi, 0x10
and esi, 0x220
mov edx, dword[esp+0x6c]
imul edx, edx, 0x32e7a6
sub dword[esp+0x40], 1
mov dword[esp+0x6c], edx
jne 0x407bd0
push 0xff
xor ebx, ebx
lea eax, [esp+0x4e5]
push ebx
push eax
call fcn.00436280
mov edi, dword[esp+0x68]
xor eax, eax
imul edi, edi, 0xc8
mov edx, eax
mov dword[esp+0x8c], eax
mov dword[esp+0x94], ebx
mov dword[esp+0x94], eax
movzx eax, byte[0x468a94]
xor ecx, ecx
mov esi, 0xf8
sub esi, eax
mov dword[esp+0x90], ebx
mov eax, ecx
add esp, 0xc
mov dword[esp+0x84], ecx
mov dword[0x468a84], esi
add edi, 0x1b2
mov dword[esp+0x40], ecx
mov dword[esp+0x84], edx
mov dword[esp+0x38], ebx
shr eax, 0x10
mov esi, 0x84
mov ecx, dword[esp+0x58]
imul ecx, edi
mov dword[esp+0x58], ecx
movzx ecx, ax
and ecx, edx
sub esi, 1
mov dword[esp+0x2c], ecx
jne 0x407cc5
movzx eax, byte[esp+0x54]
imul eax, dword[esp+0x60]
cmp eax, dword[0x468a80]
mov ecx, dword[0x468a8c]
jg 0x407cfe
test ecx, ecx
je 0x407cfe
mov dword[esp+0x38], ecx
lea eax, [esp+0x1718]
xor esi, esi
cmp esi, eax
jg 0x407d45
movzx eax, word[esp+0x316a]
add eax, 0xfb
mov dword[esp+0x78], eax
mov eax, dword[esp+0x50]
shr eax, 0x10
sub edx, eax
mov eax, dword[0x468a94]
lea ecx, [eax+ecx-0x88]
mov eax, dword[esp+0x70]
sar edx, cl
and eax, dword[0x468a90]
mov dword[esp+0x6c], eax
mov dword[esp+0x4c], edx
mov ecx, dword[esp+0x50]
mov edx, dword[0x468a94]
push 0
push ecx
push 1
push edx
call dword[sym.imp.USER32.dll_SetScrollPos]
cmp esi, dword[0x468a84]
jle 0x407d91
mov ecx, dword[0x468a90]
mov eax, dword[ebp+0xc]
imul ecx, ecx, 0x62
movsx edx, byte[esp+0x55d]
shr eax, 8
movzx eax, al
sub ecx, 0x12
shr edx, 8
and eax, ecx
movzx ecx, dl
add eax, ecx
mov dword[esp+0x84], eax
movzx edx, byte[esp+0x4c]
movzx eax, byte[esp+0x40]
mov edi, dword[esp+0x3c]
sub edi, dword[esp+0x54]
mov dword[esp+0x4c], edx
mov dword[esp+0x18], eax
mov dword[esp+0x70], 0x29
mov ecx, dword[esp+0x54]
push 0
push ecx
call dword[sym.imp.USER32.dll_SetMenu]
movsx eax, byte[esp+0x173a]
movzx esi, byte[esp+0x31f2]
mov ecx, dword[esp+0x18]
movzx edx, ax
imul edx, dword[esp+0x4c]
sub esi, edx
add esi, dword[0x468a98]
mov eax, 0xd3bf7ba9
shl esi, cl
mov ecx, dword[0x468a84]
imul ecx
add edx, ecx
sar edx, 9
mov eax, edx
shr eax, 0x1f
add edx, eax
movzx eax, word[esp+0x84]
imul edx, eax
sub edx, ebx
cmp edx, edi
jbe 0x407e30
cmp dword[0x468a94], 0x23
jl 0x407e30
mov ecx, dword[esp+0x40]
xor eax, eax
movzx eax, ax
sub eax, ecx
sub eax, dword[esp+0x3c]
add eax, ecx
mov dword[esp+0x38], eax
jmp 0x407e38
lea eax, [ebx+ecx*2]
mov dword[0x468a84], eax
sub dword[esp+0x70], 1
jne 0x407db3
mov ecx, dword[0x468a90]
mov edx, dword[esp+0x8c]
push ecx
push edx
call dword[sym.imp.GDI32.dll_SelectObject]
test eax, eax
je 0x407ee0
mov esi, 8
cmp dword[esp+0x230], esi
jb 0x40e5e2
mov eax, dword[esp+0x21c]
push eax
call fcn.0040e682
add esp, 4
cmp dword[esp+0x320], esi
mov dword[esp+0x230], 7
mov dword[esp+0x22c], edi
mov word[esp+0x21c], di
jb 0x40e615
mov ecx, dword[esp+0x30c]
push ecx
call fcn.0040e682
add esp, 4
pop edi
pop esi
xor eax, eax
pop ebx
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/7b00dd8f2abf54a73bfb09681334ff78