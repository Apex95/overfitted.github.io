---
layout: post
title:  "fcn.004061b0 @ 7b00dd8f2abf54a73bfb09681334ff78"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.004061b0
- **Origin (md5):** 7b00dd8f2abf54a73bfb09681334ff78
- **VirusTotal:** [virustotal.com/gui/file/7b00dd8f2abf54a73bfb09681334ff78][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>
<span class="tag" id="SCREEN">SCREEN</span>


# Behaviour Tags
<span class="bhv-tag" id="SCREENSHOTS_FOREGROUND_WINDOW">SCREENSHOTS_FOREGROUND_WINDOW / 0.0017209407437115973</span><span class="bhv-tag" id="CREATES_SOCKET_LISTENER">CREATES_SOCKET_LISTENER / 0.14209896828094323</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-73.5496826171875, -20.192394256591797, '<b><a href="/report/fcn.004061b0@7b00dd8f2abf54a73bfb09681334ff78">fcn.004061b0</a><br>@7b00dd8f2abf54a73bfb09681334ff78</b><br>', 'point { fill-color: #e0440e; }'],
[-23.969287872314453, 43.50392532348633, '<b><a href="/report/fcn.00437fb0@3e981d1767f44f5fe2446a49ffe52f4e">fcn.00437fb0</a><br>@3e981d1767f44f5fe2446a49ffe52f4e</b><br>', 'null'],
[-43.717559814453125, -94.32646942138672, '<b><a href="/report/fcn.00670420@c92f0480e2fbc88393d2c65c08a235e0">fcn.00670420</a><br>@c92f0480e2fbc88393d2c65c08a235e0</b><br>', 'null'],
[42.23876190185547, 152.8376007080078, '<b><a href="/report/fcn.00408b10@e2ba7f10eb234338a49853c34d7d9c56">fcn.00408b10</a><br>@e2ba7f10eb234338a49853c34d7d9c56</b><br>', 'null'],
[45.5056037902832, 86.17129516601562, '<b><a href="/report/fcn.1000bb80@4c3818fdf32d89a09257dbc9d3e142ea">fcn.1000bb80</a><br>@4c3818fdf32d89a09257dbc9d3e142ea</b><br>', 'null'],
[105.80196380615234, 124.95135498046875, '<b><a href="/report/fcn.64089c80@07e4412910bcf0f5969ef64c44eecb2d">fcn.64089c80</a><br>@07e4412910bcf0f5969ef64c44eecb2d</b><br>', 'null'],
[-1.7207087278366089, -34.52064514160156, '<b><a href="/report/fcn.0066c590@c92f0480e2fbc88393d2c65c08a235e0">fcn.0066c590</a><br>@c92f0480e2fbc88393d2c65c08a235e0</b><br>', 'null'],
[-24.43770408630371, 148.560546875, '<b><a href="/report/fcn.00453f00@4fe6510221c33bf023f6abed461fc13f">fcn.00453f00</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>', 'null'],
[-170.03985595703125, 29.530601501464844, '<b><a href="/report/fcn.30781840@e0efd357fccc8f4e2c059b0b54118ba8">fcn.30781840</a><br>@e0efd357fccc8f4e2c059b0b54118ba8</b><br>', 'null'],
[-117.43177032470703, -58.14653778076172, '<b><a href="/report/fcn.00432b11@20a93604f17ee6f3c2aa7b1f7a497fcf">fcn.00432b11</a><br>@20a93604f17ee6f3c2aa7b1f7a497fcf</b><br>', 'null'],
[-108.52799987792969, 47.14282989501953, '<b><a href="/report/fcn.307834f0@e0efd357fccc8f4e2c059b0b54118ba8">fcn.307834f0</a><br>@e0efd357fccc8f4e2c059b0b54118ba8</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
and esp, 0xffffffc0
mov eax, 0x14ef4
call fcn.00437170
mov ecx, dword[ebp+8]
xor eax, eax
push ebx
push esi
mov esi, dword[0x468a84]
movzx edx, si
mov dword[esp+0x48], eax
mov dword[esp+0x38], eax
mov dword[esp+0x4c], eax
mov dword[esp+0x3a0], eax
mov dword[esp+0x3a4], eax
mov dword[esp+0x80], eax
mov dword[esp+0x84], eax
mov dword[esp+0x2f8], eax
mov dword[esp+0x2fc], eax
mov dword[esp+0x300], eax
or eax, 0xffffffff
mov dword[0x468a88], ecx
sub eax, edx
lea ecx, [esp+0x13bc]
movzx edx, cl
cmp eax, edx
push edi
jbe 0x406234
mov eax, 1
sub eax, ecx
mov dword[esp+0x4c], eax
jmp 0x40623a
add dword[0x468a80], esi
fld1
mov dword[esp+0x38], 0x1a
call fcn.00437440
fstp qword[esp+0x40]
fild dword[esp+0x3c]
mov ebx, dword[esp+0x3c]
xor edi, edi
fstp qword[esp+0x70]
jmp 0x406266
mov esi, dword[0x468a84]
movzx edx, word[0x468a80]
sub dword[esp+0x38], 1
imul edx, esi
lea eax, [esp+0x63f8]
imul edx, eax
test ebx, ebx
mov dword[esp+0x30], edx
mov dword[esp+0x18], ebx
fild dword[esp+0x30]
fadd qword[esp+0x40]
fadd qword[esp+0x70]
fild dword[esp+0x18]
jge 0x4062a1
fadd qword[0x453428]
fnstcw word[esp+0x2c]
push edi
movzx eax, word[esp+0x30]
faddp st(1)
or eax, 0xc00
mov dword[esp+0x34], eax
push edi
fldcw word[esp+0x38]
xor esi, esi
fistp qword[esp+0x20]
mov ebx, dword[esp+0x20]
fldcw word[esp+0x34]
call dword[sym.imp.GDI32.dll_SelectObject]
push esi
push esi
push esi
xor eax, eax
push eax
push edi
call dword[sym.imp.GDI32.dll_Rectangle]
cmp dword[esp+0x38], edi
jne 0x406260
xor eax, eax
cmp eax, edi
mov dword[esp+0x3c], ebx
jne 0x4062f7
mov dword[esp+0x88], edi
push 1
push edi
call dword[sym.imp.KERNEL32.dll_SetConsoleCtrlHandler]
push 4
call fcn.0040e657
add esp, 4
cmp eax, edi
je 0x406320
lea ecx, [esp+0x180]
mov dword[eax], ecx
mov dword[esp+0x180], eax
jmp 0x406327
mov dword[esp+0x180], edi
lea ecx, [esp+0x180]
call fcn.00405070
mov dword[esp+0x198], eax
mov byte[eax+0x15], 1
mov eax, dword[esp+0x198]
mov dword[eax+4], eax
mov eax, dword[esp+0x198]
mov dword[eax], eax
mov eax, dword[esp+0x198]
mov dword[eax+8], eax
lea edx, [esp+0x18]
push edx
lea eax, [esp+0x724]
push eax
lea ecx, [esp+0x188]
mov dword[esp+0x1a4], edi
mov word[esp+0x20], 0x60
mov dword[esp+0x24], 0x47
call fcn.00405f10
lea ecx, [esp+0x18]
push ecx
lea edx, [esp+0x718]
push edx
lea ecx, [esp+0x188]
mov word[esp+0x20], bx
mov dword[esp+0x24], ebx
call fcn.00405f10
mov ax, word[0x468a94]
mov esi, dword[esp+0x4c]
lea ecx, [esp+0x18]
push ecx
lea edx, [esp+0x70c]
push edx
lea ecx, [esp+0x188]
mov word[esp+0x20], ax
mov dword[esp+0x24], esi
call fcn.00405f10
mov ecx, dword[0x468a94]
movzx edx, word[esp+0x88]
xor eax, eax
movzx eax, al
sub ecx, eax
mov eax, dword[esp+0x198]
sub ecx, edx
add dword[0x468a80], ecx
mov ecx, dword[eax+4]
push ecx
lea ecx, [esp+0x184]
call fcn.00404c60
mov eax, dword[esp+0x198]
mov dword[eax+4], eax
mov eax, dword[esp+0x198]
push edi
push edi
mov dword[esp+0x1a4], edi
mov dword[eax], eax
mov eax, dword[esp+0x1a0]
push 0x130b
push edi
mov dword[eax+8], eax
call dword[sym.imp.USER32.dll_SendMessageA]
mov ecx, dword[esp+0x1449]
sub ecx, dword[0x468a84]
mov dword[0x468a8c], eax
add ecx, eax
cmp byte[esp+0x88], 0
mov dword[esp+0x2c], ecx
jne 0x406462
xor esi, esi
mov eax, dword[esp+0x198]
mov ecx, dword[esp+0x180]
mov edx, dword[eax]
push eax
push ecx
push edx
push ecx
lea edx, [esp+0x28]
push edx
lea ecx, [esp+0x194]
call fcn.00405f80
mov eax, dword[esp+0x198]
push eax
call fcn.0040e682
mov ecx, dword[esp+0x184]
push ecx
mov dword[esp+0x1a0], edi
mov dword[esp+0x1a4], edi
call fcn.0040e682
add esp, 8
push edi
call dword[sym.imp.GDI32.dll_CreateCompatibleDC]
lea edx, [esp+0x11e0]
push edx
mov dword[esp+0x90], eax
call fcn.00437168
mov word[esp+0x34], ax
lea eax, [esp+0x11e4]
push eax
call fcn.00437168
push 0x206
lea ecx, [esp+0x2ec6]
push edi
push ecx
mov word[esp+0x46], ax
mov word[esp+0x2ecc], di
call fcn.00436280
lea eax, [esp+0x2ecc]
add esp, 0x14
mov dword[esp+0x320], 7
mov dword[esp+0x31c], edi
mov word[esp+0x30c], di
lea ecx, [eax+2]
mov dx, word[eax]
add eax, 2
cmp dx, di
jne 0x406526
sub eax, ecx
sar eax, 1
push eax
lea edx, [esp+0x2ebc]
push edx
lea ecx, [esp+0x310]
call fcn.00405660
push 0xffffffffffffffff
push edi
lea eax, [esp+0x310]
push eax
lea ecx, [esp+0x224]
mov dword[esp+0x23c], 7
mov dword[esp+0x238], edi
mov word[esp+0x228], di
call fcn.00405380
push 0x1fe
lea ecx, [esp+0x48c6]
push edi
push ecx
mov word[esp+0x184], di
mov dword[esp+0x186], edi
mov word[esp+0x48cc], di
call fcn.00436280
push 0x1fe
lea edx, [esp+0x5172]
push edi
push edx
mov word[esp+0x5178], di
call fcn.00436280
push 0x1fe
lea eax, [esp+0x537e]
push edi
push eax
mov word[esp+0x5384], di
call fcn.00436280
push 0x1fe
lea ecx, [esp+0x4cf2]
push edi
push ecx
mov word[esp+0x4cf8], di
call fcn.00436280
mov edx, dword[esp+0xbc]
add esp, 0x30
push edi
push edx
call dword[sym.imp.GDI32.dll_SelectObject]
mov ecx, dword[0x468a94]
movzx edx, byte[0x468a8c]
mov dword[esp+0x40], eax
movzx eax, byte[esp+0x161e]
imul eax, eax, 0x9b
push edi
sub ecx, eax
push edi
sub ecx, edx
sub ecx, dword[esp+0x38]
push 3
push edi
sub ecx, 0x220
push 3
shl esi, cl
push 0xc0000000
push str.CONOUT$
mov dword[esp+0x68], esi
call dword[sym.imp.KERNEL32.dll_CreateFileW]
mov esi, dword[esp+0xf4]
imul esi, esi, 0xec
mov dword[esp+0x6c], eax
movsx eax, byte[esp+0x127e]
lea ecx, [esp+0x2eb8]
push ecx
push 0x104
add esi, eax
call dword[sym.imp.KERNEL32.dll_GetTempPathW]
cmp dword[esp+0x58], edi
je 0x406699
movsx edx, byte[esp+0x15fa]
lea eax, [ebx+edx-0xcd]
mov dword[esp+0x3c], eax
movsx ebx, byte[esp+0x176f]
imul ebx, dword[esp+0xbc]
imul ebx, dword[esp+0xf4]
push edi
push edi
push 3
push edi
push 1
push 0x80000000
lea ecx, [esp+0x13d8]
push ecx
call dword[sym.imp.KERNEL32.dll_CreateFileW]
mov edx, dword[0x468a80]
cmp edx, dword[0x468a94]
jg 0x406721
mov eax, dword[esp+0x38]
mov ecx, dword[esp+0x3c]
shr ecx, 0x10
imul ecx, ecx, 0xd6
mov edx, eax
imul edx, eax
add ecx, ebx
lea ecx, [edx+ecx+0x7d]
mov edx, ebx
shr edx, 8
mov dword[esp+0x1e0], ecx
movzx ecx, dl
movzx edx, byte[esp+0x58]
imul ecx, eax
imul ecx, ebx
add edx, dword[esp+0x1e4]
lea eax, [edx+ecx+0x20]
mov dword[esp+0x1e4], eax
lea ecx, [esp+0x104]
push ecx
lea edx, [esp+0x13c4]
push edx
call dword[sym.imp.KERNEL32.dll_GetCompressedFileSizeW]
mov eax, dword[esp+0x104]
mov ecx, dword[esp+0x1dc]
sub ecx, eax
add ecx, 0xb
and ecx, 0x29
imul ecx, ecx, 0xd3
push edi
mov dword[0x468a84], ecx
call dword[sym.imp.KERNEL32.dll_SetLastError]
lea edx, [esp+0x13c0]
test edx, edx
jne 0x406794
mov ecx, dword[esp+0x58]
mov edx, dword[esp+0x3c]
lea eax, [esi+0x23]
add ebx, ecx
mov ecx, dword[ebp+0xc]
mov dword[esp+0x4c], eax
lea eax, [ebx+edx+0x25]
shl eax, cl
imul eax, dword[esp+0x1e4]
mov dword[esp+0x1e4], eax
mov edx, dword[esp+0x30]
cmp edx, edi
mov ecx, dword[esp+0x2c]
mov dword[esp+0x78], ecx
je 0x4067cd
mov eax, dword[esp+0x38]
movsx ebx, byte[esp+0x1254]
add eax, 0x48
sub ebx, eax
add ebx, 0x157
and ecx, ebx
mov dword[esp+0x38], eax
mov dword[esp+0x2c], 4
mov dword[esp+0x78], ecx
lea eax, [esp+0x5778]
lea ebx, [esp+0x1718]
cmp eax, ebx
jg 0x40680b
movsx eax, byte[esp+0x1693]
imul ecx, ecx, 0x54
movsx ebx, byte[esp+0x2ce5]
imul ebx, dword[esp+0x1e0]
movzx eax, ax
imul eax, eax, 0x68
sub eax, ebx
sub eax, ecx
add eax, 0x5f
mov dword[esp+0x4c], eax
lea ecx, [esp+0x5778]
cmp ecx, dword[esp+0x7c]
jle 0x406840
movsx ecx, byte[esp+0x1227]
mov esi, dword[esp+0x114]
mov eax, edx
sub eax, ecx
sub eax, 0xdd
add esi, 0x4e42
imul eax, eax, 0x3d
mov dword[esp+0xf4], eax
push 1
push edi
push edi
call dword[sym.imp.USER32.dll_InvalidateRect]
movzx edx, byte[0x468a8c]
mov eax, dword[esp+0x8c]
mov ecx, 0x220
sub ecx, edx
sar dword[0x468a80], cl
push eax
call dword[sym.imp.GDI32.dll_BeginPath]
mov ecx, dword[esp+0xf4]
push edi
push edi
push edi
push edi
push 0xffffffffffffffff
lea edx, [esp+0x4cdc]
push edx
push edi
add ecx, 0x13
push 0xfde9
mov dword[esp+0x90], eax
mov dword[esp+0x11c], ecx
call dword[sym.imp.KERNEL32.dll_WideCharToMultiByte]
movzx ebx, word[esp+0x30]
imul ebx, dword[0x468a8c]
add ebx, dword[esp+0x4c]
mov dword[esp+0x5c], eax
imul ebx, dword[esp+0x3c]
cmp esi, dword[esp+0x2c]
mov dword[esp+0x3c], ebx
jl 0x4068dc
mov eax, dword[esp+0x30]
mov ecx, dword[0x468a98]
shr eax, 8
sub ecx, eax
sub ecx, dword[esp+0x4c]
xor eax, eax
shl eax, cl
mov dword[esp+0x2c], eax
mov eax, dword[0x468a80]
mov ecx, dword[0x468a84]
mov edx, dword[esp+0x40]
push 0xcc0020
push edi
push edi
push eax
push ecx
push eax
push edi
push edi
push edx
call dword[sym.imp.GDI32.dll_BitBlt]
mov esi, dword[esp+0x1e8]
cmp dword[0x468a84], esi
jne 0x406953
mov ecx, dword[esp+0x2c]
mov eax, dword[esp+0x80]
lea edx, [ecx+eax+0x16c]
movzx eax, word[esp+0x598a]
mov ecx, dword[esp+0xfc]
sub ecx, eax
sub ecx, dword[esp+0x1e4]
mov eax, dword[esp+0x58]
sub ecx, eax
imul ecx, eax
mov dword[esp+0x2c], edx
mov dword[esp+0x58], ecx
mov dword[esp+0xf4], 0xde
mov eax, dword[esp+0x4c]
lea edx, [esp+0x13c0]
cmp edx, eax
je 0x40696c
imul eax, eax, 0x220
mov dword[esp+0x4c], eax
cmp dword[esp+0x70], edi
je 0x40697e
mov eax, dword[0x468a80]
add dword[esp+0xf4], eax
mov ecx, dword[esp+0x5c]
mov edx, dword[esp+0x6c]
mov eax, 0x220
sar eax, cl
mov ecx, dword[esp+0x30]
push ecx
push edx
mov dword[esp+0x84], eax
call dword[sym.imp.KERNEL32.dll_SetConsoleScreenBufferSize]
cmp esi, dword[esp+0x7c]
jl 0x4069f5
mov ecx, dword[esp+0x38]
mov eax, ecx
imul ecx, dword[esp+0x30]
shr eax, 0x10
lea eax, [eax+eax*8]
add eax, eax
add eax, eax
mov edx, 0x20
sub edx, eax
movzx eax, word[esp+0x4c]
sub edx, esi
and edx, 0xe2
mov dword[0x468a80], edx
movsx edx, byte[esp+0x1647]
imul eax, edx
imul eax, dword[esp+0x30]
mov edx, dword[esp+0x78]
shr edx, 8
movzx ebx, dl
sub ebx, eax
add ebx, ecx
jmp 0x406a08
cmp ebx, edi
mov ebx, dword[esp+0x50]
jg 0x406a08
movzx eax, word[esp+0x78]
sub dword[0x468a80], eax
cmp dword[esp+0x230], 8
mov eax, dword[esp+0x21c]
jae 0x406a20
lea eax, [esp+0x21c]
lea ecx, [esp+0x5360]
push ecx
lea edx, [esp+0x5164]
push edx
lea ecx, [esp+0x48c8]
push ecx
lea edx, [esp+0x184]
push edx
push eax
call fcn.0043710d
lea eax, [esp+0x18c]
add esp, 0x14
mov dword[esp+0x37c], 7
mov dword[esp+0x378], edi
mov word[esp+0x368], di
lea edx, [eax+2]
lea ecx, [ecx]
mov cx, word[eax]
add eax, 2
cmp cx, di
jne 0x406a70
sub eax, edx
sar eax, 1
push eax
lea eax, [esp+0x17c]
push eax
lea ecx, [esp+0x36c]
call fcn.00405660
mov ecx, dword[esp+0x100]
mov eax, dword[esp+0x7c]
mov esi, 0x5f
mov edx, eax
shr edx, 8
movzx edx, dl
imul edx, edx, 0xffffff56
add ecx, 0x19
add eax, edx
sub esi, 1
jne 0x406aa4
mov dword[esp+0x7c], eax
lea eax, [esp+0x48c0]
mov dword[esp+0x100], ecx
lea edx, [eax+2]
mov cx, word[eax]
add eax, 2
cmp cx, di
jne 0x406ad1
sub eax, edx
sar eax, 1
push eax
lea eax, [esp+0x48c4]
push eax
lea ecx, [esp+0x36c]
call fcn.00405750
cmp dword[esp+0x37c], 8
jb 0x406b0f
mov ecx, dword[esp+0x368]
push ecx
call fcn.0040e682
add esp, 4
mov ecx, dword[0x468a84]
mov eax, dword[0x468a80]
push 0x14
push ecx
push eax
push ecx
push eax
push 1
lea edx, [esp+0x13d8]
push edx
push ebx
push eax
push ecx
push eax
mov eax, dword[esp+0x58]
push eax
push edi
mov dword[esp+0x3b0], 7
mov dword[esp+0x3ac], edi
mov word[esp+0x39c], di
call dword[sym.imp.COMCTL32.dll_CreateToolbarEx]
cmp eax, edi
je 0x406b66
mov ecx, dword[0x468a80]
mov dword[0x468a84], ecx
jmp 0x406b74
push edi
call dword[sym.imp.USER32.dll_GetParent]
push eax
call dword[sym.imp.USER32.dll_GetDC]
mov eax, dword[esp+0x5c]
cmp eax, edi
jne 0x406b82
mov dword[0x468a80], edi
push edi
push edi
push eax
lea edx, [esp+0x4864]
push edx
push 0xffffffffffffffff
lea eax, [esp+0x4cdc]
push eax
push edi
push 0xfde9
call dword[sym.imp.KERNEL32.dll_WideCharToMultiByte]
mov ecx, dword[esp+0x40]
mov edx, dword[esp+0x8c]
push ecx
push edx
call dword[sym.imp.GDI32.dll_SelectObject]
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov esi, eax
lea eax, [esp+0x1d4]
push eax
mov dword[esp+0x1d8], edi
call dword[sym.imp.ole32.dll_CreateAntiMoniker]
mov ecx, dword[esp+0x1d4]
cmp ecx, edi
mov dword[esp+0x11e0], 1
mov dword[esp+0x5c], ecx
jne 0x406bf1
mov dword[esp+0x5c], esi
cmp dword[0x468a80], edi
jne 0x406c03
movzx ecx, bl
add ecx, 1
mov dword[esp+0x2c], ecx
cmp eax, edi
jne 0x406c16
mov byte[esp+0x5c], 0
mov ecx, dword[esp+0x5c]
mov dword[0x468a98], ecx
mov eax, dword[esp+0x8c]
lea edx, [eax+1]
push eax
mov dword[esp+0x34], edx
call dword[sym.imp.GDI32.dll_GetTextColor]
test eax, eax
jne 0x406c3f
mov eax, dword[esp+0x30]
push 0xff
push eax
call dword[sym.imp.GDI32.dll_SetTextColor]
mov ecx, dword[esp+0x2c]
mov edx, dword[esp+0x30]
push ecx
push edx
call dword[sym.imp.GDI32.dll_SetTextColor]
cmp dword[0x468a98], edi
je 0x40e5c4
movzx eax, si
add ebx, 1
cmp eax, edi
mov dword[esp+0x50], ebx
jle 0x406c75
lea esp, [esp]
sub eax, 1
jne 0x406c70
add esi, 0x220
mov dword[esp+0x60], esi
mov dword[0x468a90], esi
add esi, 0xfffffde0
cmp dword[esp+0x230], 8
mov dword[0x468a80], esi
jb 0x406cab
mov edx, dword[esp+0x21c]
push edx
call fcn.0040e682
add esp, 4
cmp dword[esp+0x320], 8
mov dword[esp+0x230], 7
mov dword[esp+0x22c], edi
mov word[esp+0x21c], di
jb 0x406cdf
mov eax, dword[esp+0x30c]
push eax
call fcn.0040e682
add esp, 4
cmp dword[0x468a90], edi
mov dword[esp+0x320], 7
mov dword[esp+0x31c], edi
mov word[esp+0x30c], di
mov ebx, 0x100
je 0x406d10
cmp dword[esp+0x5c], edi
jne 0x406dfe
push edi
call dword[sym.imp.GDI32.dll_CreateCompatibleDC]
mov esi, eax
mov dword[esp+0x2c4], edi
call sub.AVIFIL32.dll_AVIFileInit
push edi
push edi
push edi
push 0x73646976
lea ecx, [esp+0x11f0]
push ecx
lea edx, [esp+0xdc]
push edx
call sub.AVIFIL32.dll_AVIStreamOpenFromFileA
test eax, eax
je 0x406d59
push 0x30
push str.Error
push str.Failed_To_Open_The_AVI_Stream
push edi
call dword[sym.imp.USER32.dll_MessageBoxA]
mov ecx, dword[esp+0xc8]
push 0x8c
lea eax, [esp+0x50d4]
push eax
push ecx
call sub.AVIFIL32.dll_AVIStreamInfoA
mov edx, dword[esp+0xc8]
push edx
call sub.AVIFIL32.dll_AVIStreamLength
push eax
mov eax, dword[esp+0xcc]
push eax
call sub.AVIFIL32.dll_AVIStreamSampleToTime
push edi
push edi
lea ecx, [esp+0x2cc]
push ecx
push edi
lea edx, [esp+0x680]
push edx
push esi
mov word[esp+0x694], 1
mov word[esp+0x696], 0x18
mov dword[esp+0x68c], ebx
mov dword[esp+0x690], ebx
mov dword[esp+0x698], edi
call dword[sym.imp.GDI32.dll_CreateDIBSection]
push eax
push esi
call dword[sym.imp.GDI32.dll_SelectObject]
mov eax, dword[esp+0xc8]
push edi
push eax
call sub.AVIFIL32.dll_AVIStreamGetFrameOpen
test eax, eax
jne 0x406dfe
push 0x30
push str.Error
push str.Failed_To_Open_The_AVI_Frame
push edi
call dword[sym.imp.USER32.dll_MessageBoxA]
cmp dword[0x468a8c], edi
je 0x407285
mov dword[esp+0x94], edi
call sub.AVIFIL32.dll_AVIFileInit
push edi
push 0x40
push edi
push 0x73647561
push str.TESTX.AVI
lea ecx, [esp+0xcc]
push ecx
call sub.AVIFIL32.dll_AVIStreamOpenFromFileA
test eax, eax
je 0x406e3b
mov dword[0x468a80], edi
mov edx, dword[esp+0xb8]
push edx
call sub.AVIFIL32.dll_AVIStreamStart
mov ecx, dword[esp+0xb8]
mov ebx, eax
lea eax, [esp+0x68]
push eax
push edi
push ebx
push ecx
call sub.AVIFIL32.dll_AVIStreamReadFormat
test eax, eax
je 0x406e68
mov dword[0x468a80], edi
mov edx, dword[esp+0x68]
push edx
call fcn.00434f57
mov esi, eax
add esp, 4
cmp esi, edi
jne 0x406e81
mov dword[0x468a80], edi
mov ecx, dword[esp+0xb8]
lea eax, [esp+0x68]
push eax
push esi
push ebx
push ecx
call sub.AVIFIL32.dll_AVIStreamReadFormat
test eax, eax
je 0x406e9f
mov dword[0x468a80], edi
mov edx, dword[esi]
mov dword[esp+0x1ec], edx
mov ebx, dword[esi+4]
mov dword[esp+0x1f0], ebx
mov eax, dword[esi+8]
mov dword[esp+0x1f4], eax
mov eax, dword[esi+0xc]
mov dword[esp+0x1f8], eax
movzx ecx, word[esi+0x10]
shr eax, 0x10
cmp eax, 0xc
movzx eax, word[esp+0x1ee]
mov word[esp+0x1fc], cx
sbb ecx, ecx
and ecx, 0xfffffff8
add ecx, 0x10
movzx edx, cx
imul eax, edx
cdq
and edx, 7
add eax, edx
sar eax, 3
mov word[esp+0x1f8], ax
movzx eax, ax
imul eax, ebx
push 0x2c
mov word[esp+0x1fe], cx
lea ecx, [esp+0x4b8]
push edi
push ecx
mov word[esp+0x1f8], 1
mov dword[esp+0x200], eax
mov word[esp+0x208], di
call fcn.00436280
mov ecx, dword[esp+0xc4]
add esp, 0xc
push edi
lea eax, [esp+0x4b8]
lea edx, [esp+0x1f0]
push eax
mov dword[esp+0x4d4], edx
push ecx
lea edx, [esp+0xa4]
push edx
mov dword[esp+0x4c4], 0x73647561
mov dword[esp+0x4e0], 0x10
call sub.AVIFIL32.dll_AVIMakeCompressedStream
test eax, eax
je 0x406f85
mov dword[0x468a80], edi
mov eax, dword[esp+0x98]
push eax
call sub.AVIFIL32.dll_AVIStreamStart
mov ecx, dword[esp+0x98]
mov ebx, eax
push ecx
mov dword[esp+0x3c], ebx
call sub.AVIFIL32.dll_AVIStreamLength
lea edx, [eax+ebx-1]
push 0x453994
push str.TESTP.WAV
mov dword[esp+0x48], edx
call fcn.00436eec
mov ebx, eax
add esp, 8
cmp ebx, edi
mov dword[esp+0x70], ebx
jne 0x406fcf
mov dword[0x468a80], edi
push ebx
push 4
push 1
push str.RIFF
call fcn.00436da6
add esp, 0x10
cmp eax, 4
je 0x406fec
mov dword[0x468a80], edi
mov dword[esp+0x30], 4
push ebx
push edi
call fcn.00436b08
add esp, 8
cmp eax, 0xffffffff
jne 0x407009
mov dword[0x468a80], edi
sub dword[esp+0x30], 1
jne 0x406ff4
push ebx
push 4
push 1
push str.WAVE
call fcn.00436da6
add esp, 0x10
cmp eax, 4
je 0x40702d
mov dword[0x468a80], edi
push ebx
push 4
push 1
push str.fmt_
call fcn.00436da6
add esp, 0x10
cmp eax, 4
je 0x40704a
mov dword[0x468a80], edi
push ebx
push 1
lea eax, [esp+0x4d8]
push 4
push eax
call fcn.00436da6
add esp, 0x10
cmp eax, 1
je 0x40706a
mov dword[0x468a80], edi
mov ecx, dword[esp+0x4d0]
mov edx, dword[esp+0x4cc]
push ebx
push 1
push ecx
push edx
call fcn.00436da6
add esp, 0x10
cmp eax, 1
je 0x407090
mov dword[0x468a80], edi
push ebx
push 4
push 1
push str.data
call fcn.00436da6
add esp, 0x10
cmp eax, 4
je 0x4070ad
mov dword[0x468a80], edi
mov dword[esp+0x30], 4
push ebx
push edi
call fcn.00436b08
add esp, 8
cmp eax, 0xffffffff
jne 0x4070ca
mov dword[0x468a80], edi
sub dword[esp+0x30], 1
jne 0x4070b5
mov ebx, dword[esp+0x38]
cmp ebx, dword[esp+0x40]
jg 0x4071cd
nop
mov edx, dword[esp+0x98]
lea eax, [esp+0xac]
push eax
lea ecx, [esp+0x6c]
push ecx
push edi
push edi
push 0xffffffffffffffff
push ebx
push edx
call sub.AVIFIL32.dll_AVIStreamRead
test eax, eax
je 0x407109
mov dword[0x468a80], edi
cmp dword[esp+0x68], edi
jle 0x407118
cmp dword[esp+0xac], edi
jg 0x407144
mov edx, dword[esp+0x98]
lea eax, [esp+0xac]
push eax
lea ecx, [esp+0x6c]
push ecx
push edi
push edi
push 0x1000
push ebx
push edx
call sub.AVIFIL32.dll_AVIStreamRead
test eax, eax
je 0x407144
mov dword[0x468a80], edi
mov eax, dword[esp+0x68]
push eax
push esi
call fcn.00435205
mov esi, eax
add esp, 8
cmp esi, edi
jne 0x40715e
mov dword[0x468a80], edi
mov eax, dword[esp+0x68]
lea ecx, [esp+0xac]
push ecx
mov ecx, dword[esp+0xb0]
lea edx, [esp+0x6c]
push edx
mov edx, dword[esp+0xa0]
push eax
push esi
push ecx
push ebx
push edx
call sub.AVIFIL32.dll_AVIStreamRead
test eax, eax
je 0x407191
mov esi, dword[esp+0x70]
mov eax, 0xfffffffc
sub eax, dword[esp+0x94]
push 2
push eax
push esi
call fcn.00436a83
add esp, 0xc
test eax, eax
je 0x4071f3
mov dword[0x468a80], edi
push esi
push 1
lea ecx, [esp+0x9c]
push 4
push ecx
call fcn.00436da6
add esp, 0x10
cmp eax, 1
je 0x407213
mov dword[0x468a80], edi
push edi
push 4
push esi
call fcn.00436a83
add esp, 0xc
test eax, eax
je 0x407229
mov dword[0x468a80], edi
mov edx, dword[esp+0x94]
mov eax, dword[esp+0x4d0]
push esi
lea ecx, [edx+eax+0x14]
push 1
lea edx, [esp+0x9c]
push 4
push edx
mov dword[esp+0xa4], ecx
call fcn.00436da6
add esp, 0x10
cmp eax, 1
je 0x407262
mov dword[0x468a80], edi
push esi
call fcn.00436980
mov eax, dword[esp+0x9c]
add esp, 4
push eax
call sub.AVIFIL32.dll_AVIStreamRelease
mov ecx, dword[esp+0xb8]
push ecx
call sub.AVIFIL32.dll_AVIStreamRelease
mov edx, dword[str.Video_1]
mov eax, dword[0x453960]
mov cl, byte[0x453964]
push 0x37
mov dword[esp+0x630], edx
lea edx, [esp+0x639]
push edi
mov ebx, 0xa0
mov esi, 0x78
push edx
mov dword[esp+0x5ec], 0x73646976
mov dword[esp+0x5f0], 0x20424944
mov dword[esp+0x5f4], edi
mov dword[esp+0x5f8], edi
mov word[esp+0x5fc], di
mov word[esp+0x5fe], di
mov dword[esp+0x600], 1
mov dword[esp+0x604], 0x1e
mov dword[esp+0x608], edi
mov dword[esp+0x60c], 0xa
mov dword[esp+0x610], edi
mov dword[esp+0x614], edi
mov dword[esp+0x618], 0xffffffff
mov dword[esp+0x61c], edi
mov dword[esp+0x620], edi
mov dword[esp+0x624], edi
mov dword[esp+0x628], ebx
mov dword[esp+0x62c], esi
mov dword[esp+0x630], edi
mov dword[esp+0x634], edi
mov dword[esp+0x63c], eax
mov byte[esp+0x640], cl
call fcn.00436280
add esp, 0xc
mov dword[esp+0x3dc], 0x28
mov dword[esp+0x3e0], ebx
mov dword[esp+0x3e4], esi
mov word[esp+0x3e8], 1
mov word[esp+0x3ea], 0x18
mov dword[esp+0x3ec], edi
mov dword[esp+0x3f0], 0xe100
mov dword[esp+0x3f4], edi
mov dword[esp+0x3f8], edi
mov dword[esp+0x3fc], edi
mov dword[esp+0x400], edi
call sub.AVIFIL32.dll_AVIFileInit
push edi
push 0x1041
push 0x453958
lea eax, [esp+0x2e8]
push eax
call sub.AVIFIL32.dll_AVIFileOpenA
test eax, eax
je 0x4073f0
mov dword[0x468a80], edi
cmp dword[esp+0x60], edi
jne 0x40741d
mov eax, dword[esp+0x2dc]
lea ecx, [esp+0x5e0]
push ecx
lea edx, [esp+0x118]
push edx
push eax
call sub.AVIFIL32.dll_AVIFileCreateStreamA
test eax, eax
je 0x40741d
mov dword[0x468a80], edi
cmp dword[esp+0x5c], edi
jne 0x407449
mov edx, dword[esp+0x114]
push 0x28
lea ecx, [esp+0x3e0]
push ecx
push edi
push edx
call sub.AVIFIL32.dll_AVIStreamSetFormat
test eax, eax
je 0x407449
mov eax, dword[0x468a84]
mov dword[0x468a80], eax
xor ebx, ebx
xor edi, edi
mov dword[esp+0x30], edi
mov dword[esp+0x38], ebx
fild dword[esp+0x30]
fmul qword[0x453950]
fdiv qword[0x453948]
fst qword[esp+0x30]
fild dword[esp+0x38]
fstp qword[esp+0x18]
call fcn.00437310
fmul qword[0x453940]
fmul qword[esp+0x18]
fdiv qword[0x453938]
fadd qword[0x453930]
call fcn.004364a0
fld qword[esp+0x30]
lea esi, [eax+eax*4]
shl esi, 5
call fcn.004371e0
fmul qword[0x453940]
fmul qword[esp+0x18]
fdiv qword[0x453938]
fadd qword[0x453928]
call fcn.004364a0
add dword[esp+0x38], 1
add esi, eax
lea eax, [esi+esi*2]
add edi, 1
cmp edi, 2
mov byte[esp+eax+0x6e02], 0xff
mov byte[esp+eax+0x6e01], 0xff
mov byte[esp+eax+0x6e00], 0xff
mov dword[esp+0x30], edi
jl 0x407455
add ebx, 0x64
cmp ebx, 0xc8
jl 0x40744b
call sub.AVIFIL32.dll_AVIFileExit
cmp dword[0x468a94], 0
je 0x4076e4
mov ebx, dword[0x468a8c]
push ebx
call sub.AVIFIL32.dll_AVIStreamStart
push ebx
mov esi, eax
call sub.AVIFIL32.dll_AVIStreamLength
push 0x8c
lea edx, [esp+0x2e2c]
push edx
lea ecx, [eax+esi-1]
push ebx
mov dword[esp+0x3c], ecx
call sub.AVIFIL32.dll_AVIStreamInfoA
xor edi, edi
test eax, eax
je 0x407549
mov dword[0x468a80], edi
lea eax, [esp+0x2e28]
push eax
lea ecx, [esp+0x160]
push ecx
push edi
call sub.AVIFIL32.dll_AVIFileCreateStreamA
test eax, eax
je 0x407569
mov dword[0x468a80], edi
lea edx, [esp+0x64]
push edx
push edi
push esi
push ebx
call sub.AVIFIL32.dll_AVIStreamReadFormat
test eax, eax
je 0x407580
mov dword[0x468a80], edi
mov eax, dword[esp+0x64]
push eax
call fcn.00434f57
mov edi, eax
add esp, 4
test edi, edi
jne 0x407598
mov dword[0x468a80], eax
lea ecx, [esp+0x64]
push ecx
push edi
push esi
push ebx
call sub.AVIFIL32.dll_AVIStreamReadFormat
test eax, eax
je 0x4075b3
mov dword[0x468a80], 0
mov edx, dword[esp+0x64]
mov eax, dword[esp+0x15c]
push edx
push edi
push esi
push eax
call sub.AVIFIL32.dll_AVIStreamSetFormat
test eax, eax
je 0x4075d5
mov dword[0x468a80], 0
cmp esi, dword[esp+0x30]
jg 0x4076ce
nop
lea ecx, [esp+0x9c]
push ecx
lea edx, [esp+0x68]
push edx
push 0
push 0
push 0xffffffffffffffff
push esi
push ebx
call sub.AVIFIL32.dll_AVIStreamRead
test eax, eax
je 0x407608
mov dword[0x468a80], 0
cmp dword[esp+0x64], 0
jle 0x407619
cmp dword[esp+0x9c], 0
jg 0x407644
lea eax, [esp+0x9c]
push eax
lea ecx, [esp+0x68]
push ecx
push 0
push 0
push 0x1000
push esi
push ebx
call sub.AVIFIL32.dll_AVIStreamRead
test eax, eax
je 0x407644
mov dword[0x468a80], 0
mov edx, dword[esp+0x64]
push edx
push edi
call fcn.00435205
mov edi, eax
add esp, 8
test edi, edi
jne 0x40765d
mov dword[0x468a80], eax
mov edx, dword[esp+0x64]
lea eax, [esp+0x9c]
push eax
mov eax, dword[esp+0xa0]
lea ecx, [esp+0x68]
push ecx
push edx
push edi
push eax
push esi
push ebx
call sub.AVIFIL32.dll_AVIStreamRead
test eax, eax
je 0x40768d
mov dword[0x468a80], 0
mov ecx, dword[esp+0x64]
mov edx, dword[esp+0x9c]
mov eax, dword[esp+0x15c]
push 0
push 0
push 0x10
push ecx
push edi
push edx
push esi
push eax
call sub.AVIFIL32.dll_AVIStreamWrite
test eax, eax
je 0x4076bd
mov dword[0x468a80], 0
add esi, dword[esp+0x9c]
cmp esi, dword[esp+0x30]
jle 0x4075e0
mov ecx, dword[esp+0x15c]
push ecx
call sub.AVIFIL32.dll_AVIStreamRelease
push edi
call fcn.0043501a
add esp, 4
mov edx, dword[0x468a90]
mov edi, dword[0x468a98]
lea eax, [esp+0x39c]
push eax
push 0xba2
mov dword[esp+0x48], edx
call dword[sym.imp.OPENGL32.dll_glGetIntegerv]
lea ecx, [esp+0x5bf8]
push ecx
push 0x200
call dword[sym.imp.OPENGL32.dll_glSelectBuffer]
mov ebx, dword[sym.imp.OPENGL32.dll_glRenderMode]
push 0x1c02
call ebx
call dword[sym.imp.OPENGL32.dll_glInitNames]
push 0
call dword[sym.imp.OPENGL32.dll_glPushName]
mov esi, dword[sym.imp.OPENGL32.dll_glMatrixMode]
push 0x1701
call esi
call dword[sym.imp.OPENGL32.dll_glPushMatrix]
call dword[sym.imp.OPENGL32.dll_glLoadIdentity]
fld1
mov eax, dword[esp+0x3a8]
lea edx, [esp+0x39c]
push edx
sub esp, 0x20
fst qword[esp+0x18]
sub eax, edi
fstp qword[esp+0x10]
mov dword[esp+0x54], eax
fild dword[esp+0x54]
fstp qword[esp+8]
fild dword[esp+0x64]
fstp qword[esp]
call sub.GLU32.dll_gluPickMatrix
fld1
sub esp, 0x30
fst qword[esp+0x28]
fldz
fstp qword[esp+0x20]
fild dword[0x468a84]
fstp qword[esp+0x18]
fst qword[esp+0x10]
fild dword[0x468a80]
fstp qword[esp+8]
fstp qword[esp]
call dword[sym.imp.OPENGL32.dll_glOrtho]
push 0x1700
call esi
push 0x1701
call esi
call dword[sym.imp.OPENGL32.dll_glPopMatrix]
push 0x1700
call esi
push 0x1c00
call ebx
test eax, eax
jle 0x407800
cmp eax, 1
mov esi, dword[esp+0x5bfc]
jle 0x407800
lea edx, [esp+0x5c0c]
add eax, 0xffffffff
mov ecx, dword[edx]
cmp ecx, esi
jae 0x4077f8
mov esi, ecx
add edx, 0x10
sub eax, 1
jne 0x4077f0
mov ecx, dword[0x468a94]
xor eax, eax
mov dword[esp+0xbc], eax
mov dword[esp+0x30], eax
mov eax, dword[0x468a8c]
lea edx, [eax+8]
imul edx, dword[esp+0x60]
test edx, edx
mov dword[esp+0x40], ecx
jle 0x40799a
mov ebx, 1
xor edi, edi
mov eax, dword[esp+0xbc]
push edi
push edi
push edi
push edi
push eax
push edi
push edi
call dword[sym.imp.WS2_32.dll_WSAConnect]
lea ecx, [esp+0xbc]
push ecx
push edi
push edi
push edi
push edi
call dword[sym.imp.WS2_32.dll_WSAAddressToStringW]
push edi
push edi
push edi
push edi
push edi
call dword[sym.imp.WS2_32.dll_WSAAccept]
mov ecx, dword[0x468a8c]
imul eax, ecx
cmp eax, edi
jne 0x407885
cmp ecx, edi
jne 0x407885
cmp dword[0x468a94], edi
jne 0x407885
mov esi, dword[0x468a98]
jmp 0x407887
xor esi, esi
mov edx, dword[esp+0x40]
push 3
push edi
push edi
push edi
push edi
push 0xffffffffffffffff
push edx
call dword[sym.imp.USER32.dll_SetWindowPos]
cmp esi, edi
je 0x4078f2
lea eax, [esp+0x12e8]
push eax
push edi
call dword[sym.imp.USER32.dll_BeginPaint]
mov esi, eax
push ebx
push esi
call dword[sym.imp.GDI32.dll_SetBkMode]
lea eax, [esp+0x4bc0]
lea edx, [eax+1]
mov cl, byte[eax]
add eax, 1
test cl, cl
jne 0x4078c1
sub eax, edx
push eax
lea ecx, [esp+0x4bc4]
push ecx
push edi
push edi
push esi
call dword[sym.imp.GDI32.dll_TextOutA]
lea edx, [esp+0x12e8]
push edx
push edi
call dword[sym.imp.USER32.dll_EndPaint]
jmp 0x40797b
push 0x58
lea eax, [esp+0x69c]
push edi
push eax
call fcn.00436280
add esp, 0xc
lea eax, [esp+0x698]
lea ecx, [esp+0x2c20]
lea edx, [esp+0x15c8]
push eax
mov dword[esp+0x69c], 0x58
mov dword[esp+0x6a0], edi
mov dword[esp+0x6b8], ecx
mov byte[esp+0x2c24], 0
mov dword[esp+0x6bc], 0x104
mov dword[esp+0x6a8], edx
mov dword[esp+0x6b4], ebx
mov dword[esp+0x6c0], edi
mov dword[esp+0x6c4], edi
mov dword[esp+0x6c8], edi
mov dword[esp+0x6d0], 0x1800
call dword[sym.imp.comdlg32.dll_GetOpenFileNameA]
mov eax, dword[0x468a8c]
mov ecx, dword[esp+0x30]
lea edx, [eax+8]
imul edx, dword[esp+0x60]
add ecx, ebx
cmp ecx, edx
mov dword[esp+0x30], ecx
jl 0x407833
imul eax, dword[0x468a84]
mov ecx, dword[0x45cabc]
mov edx, dword[0x45cac0]
add eax, 2
mov edi, eax
mov eax, dword[0x45cab8]
mov dword[esp+0x330], ecx
lea ecx, [esp+0x32c]
mov dword[esp+0x32c], eax
mov eax, dword[0x45cac4]
push ecx
push str.36FC9E60_C465_11CF_8056_444553540000
mov dword[esp+0x38], edi
mov dword[esp+0x33c], edx
mov dword[esp+0x340], eax
call dword[sym.imp.ole32.dll_CLSIDFromString]
push 2
push 0
push 0
lea edx, [esp+0x338]
push edx
call dword[sym.imp.SETUPAPI.dll_SetupDiGetClassDevsA]
push 0
push 0
push 0
mov esi, eax
call sub.MSACM32.dll_acmStreamUnprepareHeader
mov eax, dword[0x468a84]
mov ecx, dword[esp+0x3c]
lea edx, [esp+0x72c]
push edx
push 0
sub eax, edi
push 0
mov dword[0x468a94], 0
mov dword[esp+0x738], 0x1c
lea ebx, [eax+ecx+1]
call dword[sym.imp.SETUPAPI.dll_SetupDiEnumDeviceInfo]
push esi
mov dword[esp+0x58], eax
call dword[sym.imp.SETUPAPI.dll_SetupDiDestroyDeviceInfoList]
mov edx, dword[esp+0x60]
movzx eax, dl
imul eax, eax, 0xca
movzx esi, word[esp+0x140e]
mov ecx, 0x7b
sub ecx, dword[esp+0x100]
mov dword[esp+0x78], 0
shl eax, cl
mov ecx, dword[esp+0x114]
shr ecx, 8
movzx ecx, cl
and eax, ecx
movzx ecx, byte[esp+0x1e4]
add dword[esp+0xfc], eax
imul ecx, ecx, 0xdd
mov eax, dword[ebp+8]
mov dword[esp+0x6c], eax
add ecx, esi
movzx esi, byte[esp+0xbc]
mov eax, 0x1f
sub eax, dword[0x468a8c]
cmp edx, dword[esp+0x58]
mov dword[esp+0x70], 1
mov dword[0x468a80], eax
lea ecx, [ecx+esi-0x67]
jge 0x407af7
movzx esi, byte[0x468a91]
add ecx, 0xfffffff8
shl dword[esp+0x4c], cl
mov ecx, dword[esp+0x7c]
mov edx, ecx
shr edx, 0x10
add edx, ecx
lea ecx, [esi+edx-0x85]
mov dword[esp+0x70], ecx
movsx esi, byte[esp+0x16b0]
mov edx, dword[ebp+0xc]
imul esi, esi, 0x18ec
cmp edi, edx
jle 0x407b3c
movzx ecx, byte[esp+0x4c]
mov edi, dword[0x468a98]
imul ecx, ebx
sub edi, ecx
mov ecx, dword[esp+0x4c]
lea ecx, [edi+ecx+0x5f]
mov dword[esp+0x78], ecx
mov ecx, dword[esp+0x50]
shr ecx, 0x10
sub ecx, 0x57e4
sar eax, cl
mov dword[0x468a80], eax
cmp edx, dword[esp+0x54]
jl 0x407b6b
mov edx, dword[esp+0x1e4]
mov ecx, dword[esp+0xbc]
add edx, ecx
imul edx, dword[esp+0xfc]
mov dword[esp+0xfc], edx
mov edx, dword[esp+0x50]
mov dword[0x468a84], edx
lea ecx, [esp+0x144]
push ecx
lea edx, [esp+0x110]
push edx
lea ecx, [esp+0x16c]
push ecx
push eax
call dword[sym.imp.SHLWAPI.dll_ColorRGBToHLS]
cmp dword[0x468a80], esi
jge 0x407bac
movsx edx, byte[esp+0x2c69]
movzx ecx, dx
mov eax, 0x3b
sub eax, ecx
sub eax, dword[esp+0x3c]
mov dword[esp+0x70], eax
mov edi, dword[0x468a94]
mov eax, dword[esp+0xf4]
mov dword[esp+0x58], 0
mov dword[esp+0x40], 0x44
lea esp, [esp]
lea edx, [esp+0x1718]
cmp edx, dword[0x468a98]
jg 0x407c19
mov ecx, dword[0x468a80]
mov edx, dword[ebp+0xc]
add eax, 0x44
sub ecx, esi
sub ecx, dword[esp+0x4c]
mov dword[esp+0x78], eax
mov eax, dword[esp+0x100]
add ecx, dword[esp+0x54]
imul eax, edi
shr edx, 0x10
shl edx, cl
mov ecx, dword[esp+0xfc]
sub ecx, eax
sub dword[esp+0x3c], edx
sub ecx, ebx
mov eax, ecx
cmp dword[0x468a90], edi
jne 0x407c32
movsx esi, byte[esp+0x12c5]
shr esi, 0x10
and esi, 0x220
mov edx, dword[esp+0x6c]
imul edx, edx, 0x32e7a6
sub dword[esp+0x40], 1
mov dword[esp+0x6c], edx
jne 0x407bd0
push 0xff
xor ebx, ebx
lea eax, [esp+0x4e5]
push ebx
push eax
call fcn.00436280
mov edi, dword[esp+0x68]
xor eax, eax
imul edi, edi, 0xc8
mov edx, eax
mov dword[esp+0x8c], eax
mov dword[esp+0x94], ebx
mov dword[esp+0x94], eax
movzx eax, byte[0x468a94]
xor ecx, ecx
mov esi, 0xf8
sub esi, eax
mov dword[esp+0x90], ebx
mov eax, ecx
add esp, 0xc
mov dword[esp+0x84], ecx
mov dword[0x468a84], esi
add edi, 0x1b2
mov dword[esp+0x40], ecx
mov dword[esp+0x84], edx
mov dword[esp+0x38], ebx
shr eax, 0x10
mov esi, 0x84
mov ecx, dword[esp+0x58]
imul ecx, edi
mov dword[esp+0x58], ecx
movzx ecx, ax
and ecx, edx
sub esi, 1
mov dword[esp+0x2c], ecx
jne 0x407cc5
movzx eax, byte[esp+0x54]
imul eax, dword[esp+0x60]
cmp eax, dword[0x468a80]
mov ecx, dword[0x468a8c]
jg 0x407cfe
test ecx, ecx
je 0x407cfe
mov dword[esp+0x38], ecx
lea eax, [esp+0x1718]
xor esi, esi
cmp esi, eax
jg 0x407d45
movzx eax, word[esp+0x316a]
add eax, 0xfb
mov dword[esp+0x78], eax
mov eax, dword[esp+0x50]
shr eax, 0x10
sub edx, eax
mov eax, dword[0x468a94]
lea ecx, [eax+ecx-0x88]
mov eax, dword[esp+0x70]
sar edx, cl
and eax, dword[0x468a90]
mov dword[esp+0x6c], eax
mov dword[esp+0x4c], edx
mov ecx, dword[esp+0x50]
mov edx, dword[0x468a94]
push 0
push ecx
push 1
push edx
call dword[sym.imp.USER32.dll_SetScrollPos]
cmp esi, dword[0x468a84]
jle 0x407d91
mov ecx, dword[0x468a90]
mov eax, dword[ebp+0xc]
imul ecx, ecx, 0x62
movsx edx, byte[esp+0x55d]
shr eax, 8
movzx eax, al
sub ecx, 0x12
shr edx, 8
and eax, ecx
movzx ecx, dl
add eax, ecx
mov dword[esp+0x84], eax
movzx edx, byte[esp+0x4c]
movzx eax, byte[esp+0x40]
mov edi, dword[esp+0x3c]
sub edi, dword[esp+0x54]
mov dword[esp+0x4c], edx
mov dword[esp+0x18], eax
mov dword[esp+0x70], 0x29
mov ecx, dword[esp+0x54]
push 0
push ecx
call dword[sym.imp.USER32.dll_SetMenu]
movsx eax, byte[esp+0x173a]
movzx esi, byte[esp+0x31f2]
mov ecx, dword[esp+0x18]
movzx edx, ax
imul edx, dword[esp+0x4c]
sub esi, edx
add esi, dword[0x468a98]
mov eax, 0xd3bf7ba9
shl esi, cl
mov ecx, dword[0x468a84]
imul ecx
add edx, ecx
sar edx, 9
mov eax, edx
shr eax, 0x1f
add edx, eax
movzx eax, word[esp+0x84]
imul edx, eax
sub edx, ebx
cmp edx, edi
jbe 0x407e30
cmp dword[0x468a94], 0x23
jl 0x407e30
mov ecx, dword[esp+0x40]
xor eax, eax
movzx eax, ax
sub eax, ecx
sub eax, dword[esp+0x3c]
add eax, ecx
mov dword[esp+0x38], eax
jmp 0x407e38
lea eax, [ebx+ecx*2]
mov dword[0x468a84], eax
sub dword[esp+0x70], 1
jne 0x407db3
mov ecx, dword[0x468a90]
mov edx, dword[esp+0x8c]
push ecx
push edx
call dword[sym.imp.GDI32.dll_SelectObject]
test eax, eax
je 0x407ee0
mov esi, 8
cmp dword[esp+0x230], esi
jb 0x40e5e2
mov eax, dword[esp+0x21c]
push eax
call fcn.0040e682
add esp, 4
cmp dword[esp+0x320], esi
mov dword[esp+0x230], 7
mov dword[esp+0x22c], edi
mov word[esp+0x21c], di
jb 0x40e615
mov ecx, dword[esp+0x30c]
push ecx
call fcn.0040e682
add esp, 4
pop edi
pop esi
xor eax, eax
pop ebx
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/7b00dd8f2abf54a73bfb09681334ff78