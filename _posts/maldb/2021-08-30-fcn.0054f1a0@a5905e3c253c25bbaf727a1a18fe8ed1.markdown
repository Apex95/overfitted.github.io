---
layout: post
title:  "fcn.0054f1a0 @ a5905e3c253c25bbaf727a1a18fe8ed1"
date:   2021-08-30 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0054f1a0
- **Origin (md5):** a5905e3c253c25bbaf727a1a18fe8ed1
- **VirusTotal:** [virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1][virustotal_ref]

# Code Tags
<span class="tag" id="THREAD">THREAD</span>


# Similar Functions

1. [fcn.00656050][similar_1_ref] (sim.: 0.9668542089784486)
2. [fcn.005c9510][similar_2_ref] (sim.: 0.9631664190908295)
3. [fcn.005c0710][similar_3_ref] (sim.: 0.9603091470039754)
4. [fcn.006a0760][similar_4_ref] (sim.: 0.9577269916166586)
5. [fcn.005bd550][similar_5_ref] (sim.: 0.9561895587231711)


# Disassembled Code

{% highlight nasm %}
push r15
push r14
push r13
push r12
push rbp
push rdi
push rsi
push rbx
sub rsp,0x228
lea r13,[rsp+0x170]
mov rbp,rcx
lea rcx,[0x00a9e55f]
mov rsi,rdx
lea rdi,[r13+0x10]
call fcn.00750560
test rax,rax
mov r12,rax
mov qword[rsp+0x170],rdi
je 0x5503b4
mov rcx,rax
call sub.msvcrt.dll_strlen
cmp rax,0xf
mov rbx,rax
mov qword[rsp+0x1b0],rax
ja 0x550122
cmp rax,1
je 0x5502c6
lea rcx,[rsp+0x1b0]
test rax,rax
mov rdx,rdi
mov qword[rsp+0x50],rcx
jne 0x5504e0
mov qword[rsp+0x178],rax
mov byte[rdx+rax],0
lea r12,[rsp+0x130]
mov rdx,qword[rsp+0x50]
xor r10d,r10d
mov rcx,r13
mov qword[rsp+0x1b8],0
mov word[rsp+0x1c0],r10w
mov rax,rdx
add rax,0x10
mov qword[rsp+0x1b0],rax
call fcn.0067bbe0
lea rdx,[r12+0x10]
mov rbx,qword[rax+8]
mov qword[rsp+0x130],rdx
mov rdi,qword[rax]
add rbx,rbx
mov rax,rdi
add rax,rbx
je 0x54f29d
test rdi,rdi
jne 0x54f29d
lea rcx,[0x00a9e4e0]
call fcn.00a4f4e0
mov rcx,rbx
sar rcx,1
cmp rcx,7
mov rax,rcx
mov qword[rsp+0x110],rcx
ja 0x5500d4
cmp rax,1
je 0x5502b1
test rcx,rcx
lea rdx,[r12+0x10]
jne 0x5504e8
xor r9d,r9d
mov qword[rsp+0x138],rax
mov rcx,qword[rsp+0x1b0]
mov word[rdx+rax*2],r9w
mov rax,qword[rsp+0x50]
add rax,0x10
cmp rcx,rax
je 0x54f2fb
call fcn.00a5af30
mov dword[rsp+0x28],1
mov dword[rsp+0x20],0x64
mov r9d,0x2783
mov r8,r12
mov rdx,rsi
mov rcx,rbp
call fcn.00900f20
lea rax,fcn.007169b0
lea rcx,[0x00c18620]
mov edx,1
mov qword[rbp],rax
lea rax,[0x00b68358]
mov qword[rbp+0x58],rax
lea rax,[0x00b68370]
mov qword[rbp+0x60],rax
lea rax,[0x00b68388]
mov qword[rbp+0x70],rax
lea rax,[0x00b683a0]
mov qword[rbp+0xb8],rax
call fcn.00596a60
mov rcx,qword[rsp+0x130]
lea rax,[r12+0x10]
cmp rcx,rax
je 0x54f381
call fcn.00a5af30
mov rcx,qword[rsp+0x170]
lea rax,[r13+0x10]
cmp rcx,rax
je 0x54f397
call fcn.00a5af30
lea rax,fcn.007169b0
mov rbx,qword[0x00b3d4f0]
mov qword[rbp+0xe0],0
mov qword[rbp],rax
lea rax,[0x00b688a0]
mov rdi,qword[rbx]
mov qword[rbp+0x58],rax
lea rax,[0x00b688b8]
mov qword[rbp+0x60],rax
lea rax,[0x00b688d0]
mov qword[rbp+0x70],rax
lea rax,[0x00b688e8]
mov qword[rbp+0xb8],rax
lea rax,[0x00b68900]
mov qword[rbp+0xd8],rax
mov rax,qword[rsp+0x50]
add rax,0x10
mov qword[rsp+0x1b0],rax
mov rax,qword[rbx+8]
lea rsi,[rax+rax]
mov rax,rdi
add rax,rsi
je 0x54f426
test rdi,rdi
jne 0x54f426
lea rcx,[0x00a9e4e0]
call fcn.00a4f4e0
mov rcx,rsi
sar rcx,1
cmp rcx,7
mov rax,rcx
mov qword[rsp+0x60],rcx
ja 0x55008d
cmp rax,1
je 0x550298
mov rdx,qword[rsp+0x50]
add rdx,0x10
test rcx,rcx
jne 0x5504f0
xor r8d,r8d
mov qword[rsp+0x1b8],rax
mov word[rdx+rax*2],r8w
mov eax,dword[rbx+0x20]
mov rdx,qword[rbx+0x30]
mov dword[rsp+0x1d0],eax
mov eax,dword[rbx+0x24]
mov qword[rsp+0x1e0],rdx
mov dword[rsp+0x1d4],eax
mov rax,qword[rbx+0x28]
mov qword[rsp+0x1d8],rax
mov rax,qword[rbx+0x38]
mov qword[rsp+0x1e8],rax
mov eax,dword[rbx+0x40]
mov dword[rsp+0x1f0],eax
movzx eax,byte[rbx+0x48]
mov byte[rsp+0x1f8],al
movzx eax,byte[rbx+0x49]
mov byte[rsp+0x1f9],al
mov rax,qword[rbx+0x4c]
mov qword[rsp+0x1fc],rax
mov rax,qword[rbx+0x58]
test rax,rax
mov qword[rsp+0x208],rax
je 0x54f4e3
add dword[rax+0x14],1
mov rax,qword[rbx+0x60]
test rax,rax
mov qword[rsp+0x210],rax
je 0x54f4f8
add dword[rax+0x14],1
mov ecx,0xe8
or dword[rsp+0x1d0],0x200944
call fcn.00a5af70
mov rdx,rbp
mov rcx,rax
mov rsi,rax
call fcn.00741520
mov rdx,qword[rsp+0x50]
mov rcx,rsi
call fcn.007412b0
lea rbx,[rsp+0x70]
mov qword[rbp+0xe0],rsi
mov edx,0x87
mov rcx,rbx
call fcn.0070ea20
lea rax,[0x009fe6b0]
mov rcx,r13
mov r8d,2
mov rdx,r12
mov qword[rsp+0x130],rbp
mov byte[rsp+0x138],1
mov qword[rsp+0x148],rax
lea rax,[fcn.009e12a0]
mov qword[rsp+0x180],0
mov qword[rsp+0x140],rax
call fcn.009e12a0
movdqa xmm0,xmmword[rsp+0x140]
mov ecx,0x20
mov qword[rsp+0xa0],0
movaps xmmword[rsp+0x180],xmm0
call fcn.00a5af70
lea rdi,[rsp+0x90]
mov rdx,qword[rsp+0x180]
mov r9,qword[rsp+0x170]
mov r8,rdi
mov r10,qword[rsp+0x178]
mov rcx,qword[rax+0x18]
movdqu xmm1,xmmword[rax]
mov qword[rax+0x10],rdx
mov rdx,qword[rsp+0x188]
mov qword[rax],r9
mov qword[rax+8],r10
mov qword[rsp+0x90],rax
mov qword[rsp+0x188],rcx
mov rcx,rsi
mov qword[rax+0x18],rdx
lea rax,[0x009ef500]
mov rdx,rbx
movaps xmmword[rsp+0x170],xmm1
mov qword[rsp+0xa8],rax
lea rax,[0x009e5f30]
mov qword[rsp+0x180],0
mov qword[rsp+0xa0],rax
call fcn.00713770
mov rax,qword[rsp+0xa0]
test rax,rax
je 0x54f65d
mov r8d,3
mov rdx,rdi
mov rcx,rdi
call rax
mov rax,qword[rsp+0x180]
test rax,rax
je 0x54f678
mov r8d,3
mov rdx,r13
mov rcx,r13
call rax
mov rax,qword[rsp+0x140]
test rax,rax
je 0x54f693
mov r8d,3
mov rdx,r12
mov rcx,r12
call rax
mov rcx,rsi
call fcn.00598050
cmp qword[rbp+0xc8],0
je 0x5502e7
lea rax,[0x0054e7e0]
mov rcx,r13
mov qword[rsp+0x130],rbp
mov rsi,qword[rbp+0xe0]
mov qword[rsp+0x180],0
mov r8d,2
mov qword[rsp+0x148],rax
lea rax,[0x0054c050]
mov rdx,r12
mov qword[rsp+0x140],rax
call rax
movdqa xmm0,xmmword[rsp+0x140]
mov ecx,0x20
mov qword[rsp+0xc0],0
movaps xmmword[rsp+0x180],xmm0
call fcn.00a5af70
mov rdx,qword[rsp+0x180]
mov rcx,qword[rsp+0x170]
mov rbx,qword[rsp+0x178]
mov r9,qword[rax]
mov r10,qword[rax+8]
mov qword[rsp+0xb0],rax
mov qword[rax+0x10],rdx
mov rdx,qword[rsp+0x188]
mov qword[rax],rcx
mov qword[rax+8],rbx
mov rcx,qword[rax+0x18]
mov qword[rsp+0x170],r9
mov qword[rax+0x18],rdx
lea rax,[0x009ef4c0]
mov edx,0x7b
mov qword[rsp+0x178],r10
mov qword[rsp+0x180],0
mov qword[rsp+0xc8],rax
lea rax,[0x009e5e30]
mov qword[rsp+0x188],rcx
mov qword[rsp+0xc0],rax
lea rax,[rsp+0x110]
mov rcx,rax
mov qword[rsp+0x48],rax
call fcn.0070ea20
lea rbx,[rsp+0xb0]
mov rdx,qword[rsp+0x48]
mov rcx,rsi
mov r8,rbx
call fcn.00713770
mov rax,qword[rsp+0xc0]
test rax,rax
je 0x54f7e8
mov r8d,3
mov rdx,rbx
mov rcx,rbx
call rax
mov rax,qword[rsp+0x180]
test rax,rax
je 0x54f803
mov r8d,3
mov rdx,r13
mov rcx,r13
call rax
mov rax,qword[rsp+0x140]
test rax,rax
je 0x54f81e
mov r8d,3
mov rdx,r12
mov rcx,r12
call rax
lea rax,[0x0054f000]
mov qword[rsp+0x130],rbp
mov rsi,qword[rbp+0xe0]
mov qword[rsp+0x180],0
mov r8d,2
mov rdx,r12
mov qword[rsp+0x148],rax
lea rax,[0x0054c090]
mov rcx,r13
mov qword[rsp+0x140],rax
call rax
mov rax,qword[rsp+0x140]
mov qword[rsp+0xe0],0
movdqa xmm0,xmmword[rsp+0x140]
test rax,rax
movaps xmmword[rsp+0x180],xmm0
je 0x54f8b6
lea rdi,[rsp+0xd0]
mov r8d,2
mov rdx,r13
mov rcx,rdi
call rax
movdqa xmm0,xmmword[rsp+0x180]
movaps xmmword[rsp+0xe0],xmm0
mov ecx,0x20
mov qword[rsp+0x100],0
call fcn.00a5af70
mov rdx,qword[rsp+0xe0]
mov rcx,qword[rsp+0xd0]
mov rbx,qword[rsp+0xd8]
mov r9,qword[rax]
mov r10,qword[rax+8]
mov qword[rsp+0xf0],rax
mov qword[rax+0x10],rdx
mov rdx,qword[rsp+0xe8]
mov qword[rax],rcx
mov rcx,qword[rax+0x18]
mov qword[rax+8],rbx
mov qword[rsp+0xd0],r9
mov qword[rax+0x18],rdx
lea rax,[0x009ef6d0]
mov edx,0x203
mov qword[rsp+0xe8],rcx
mov rcx,qword[rsp+0x48]
mov qword[rsp+0x108],rax
lea rax,[0x009e6440]
mov qword[rsp+0xd8],r10
mov qword[rsp+0xe0],0
mov qword[rsp+0x100],rax
call fcn.0070ea20
lea rbx,[rsp+0xf0]
mov rdx,qword[rsp+0x48]
mov rcx,rsi
mov r8,rbx
call fcn.00713770
mov rax,qword[rsp+0x100]
test rax,rax
je 0x54f992
mov r8d,3
mov rdx,rbx
mov rcx,rbx
call rax
mov rax,qword[rsp+0xe0]
test rax,rax
je 0x54f9b2
lea rcx,[rsp+0xd0]
mov r8d,3
mov rdx,rcx
call rax
mov rax,qword[rsp+0x180]
test rax,rax
je 0x54f9cd
mov r8d,3
mov rdx,r13
mov rcx,r13
call rax
mov rax,qword[rsp+0x140]
test rax,rax
je 0x54f9e8
mov r8d,3
mov rdx,r12
mov rcx,r12
call rax
mov rcx,qword[rbp+0xe0]
call fcn.00599370
mov rsi,qword[rsp+0x210]
test rsi,rsi
je 0x54fa0b
sub dword[rsi+0x14],1
je 0x550250
mov rsi,qword[rsp+0x208]
test rsi,rsi
je 0x54fa22
sub dword[rsi+0x14],1
je 0x550208
mov rax,qword[rsp+0x50]
mov rcx,qword[rsp+0x1b0]
add rax,0x10
cmp rcx,rax
je 0x54fa3d
call fcn.00a5af30
mov rcx,qword[rsp+0x50]
xor r9d,r9d
xor r8d,r8d
mov edx,1
call fcn.0072c250
mov rax,qword[0x00b3d3c0]
mov rax,qword[rax]
test rax,rax
je 0x54fa65
add dword[rax+0x14],1
mov rsi,qword[rsp+0x1f0]
mov qword[rsp+0x1f0],rax
test rsi,rsi
je 0x54fa84
sub dword[rsi+0x14],1
je 0x5501c0
mov ecx,0x100
call fcn.00a5af70
mov rdx,rbp
mov rcx,rax
mov rsi,rax
call fcn.0072c2f0
mov rdx,qword[rsp+0x50]
mov rcx,rsi
call fcn.0072ed60
mov rax,qword[fcn.0059cf70]
mov rcx,r13
mov qword[rbp+0xc0],rsi
mov r8d,2
mov rdx,r12
mov qword[rsp+0x180],0
mov qword[rsp+0x130],rax
lea rax,[0x009f4750]
mov qword[rsp+0x148],rax
lea rax,[fcn.009def80]
mov qword[rsp+0x140],rax
call fcn.009def80
movdqa xmm0,xmmword[rsp+0x140]
lea rax,[rsi+0x70]
mov ecx,0x28
mov qword[rsp+0x120],0
movaps xmmword[rsp+0x180],xmm0
mov qword[rsp+0x190],rax
call fcn.00a5af70
mov rdx,qword[rsp+0x180]
mov rcx,qword[rax+0x18]
mov r9,qword[rsp+0x170]
mov r10,qword[rsp+0x178]
movdqu xmm1,xmmword[rax]
mov qword[rax+0x10],rdx
mov rdx,qword[rsp+0x188]
mov qword[rax],r9
mov qword[rax+8],r10
mov qword[rsp+0x110],rax
mov qword[rsp+0x188],rcx
mov rcx,rbx
mov qword[rax+0x18],rdx
mov rdx,qword[rsp+0x190]
movaps xmmword[rsp+0x170],xmm1
mov qword[rsp+0x180],0
mov qword[rax+0x20],rdx
lea rax,[0x009ef5a0]
mov edx,0x53
mov qword[rsp+0x128],rax
lea rax,[0x009e6130]
mov qword[rsp+0x120],rax
call fcn.0070ea20
mov rdi,qword[rsp+0x48]
mov rdx,rbx
mov rcx,rsi
mov r8,rdi
call fcn.00713770
mov rax,qword[rsp+0x120]
test rax,rax
je 0x54fbed
mov r8d,3
mov rdx,rdi
mov rcx,rdi
call rax
mov rax,qword[rsp+0x180]
test rax,rax
je 0x54fc08
mov r8d,3
mov rdx,r13
mov rcx,r13
call rax
mov rax,qword[rsp+0x140]
test rax,rax
je 0x54fc23
mov r8d,3
mov rdx,r12
mov rcx,r12
call rax
mov rbx,qword[rsp+0x1f0]
test rbx,rbx
je 0x54fc3a
sub dword[rbx+0x14],1
je 0x550178
mov rax,qword[rsp+0x50]
mov rcx,qword[rsp+0x1b0]
add rax,0x10
cmp rcx,rax
je 0x54fc55
call fcn.00a5af30
lea rax,[0x0054c3b0]
mov rcx,qword[rbp+0xc0]
mov r8,qword[rsp+0x50]
xor edx,edx
mov qword[rsp+0x1c8],rax
lea rax,[0x0054c0d0]
mov qword[rsp+0x1c0],rax
call fcn.0072d2c0
mov rax,qword[rsp+0x1c0]
test rax,rax
je 0x54fca3
mov rcx,qword[rsp+0x50]
mov r8d,3
mov rdx,rcx
call rax
lea rdx,[rsp+0x80]
mov rcx,qword[rbp+0x40]
call qword[sym.imp.USER32.dll_GetClientRect]
mov rcx,qword[rbp+0xc0]
mov ebx,dword[rsp+0x8c]
mov esi,dword[rsp+0x88]
call fcn.0072d8a0
mov rdx,qword[rbp+0xe0]
sub ebx,eax
mov r9d,esi
xor r8d,r8d
mov rcx,qword[rdx+0x40]
mov dword[rsp+0x28],1
xor edx,edx
mov dword[rsp+0x20],ebx
call qword[sym.imp.USER32.dll_MoveWindow]
mov rdx,qword[0x00a7d710]
mov rcx,qword[rsp+0x50]
call fcn.00617c00
mov rbx,qword[0x00a7d710]
lea rax,[rbp+0xd8]
mov qword[rsp+0x68],rax
mov rax,rbx
add rax,0x40
mov qword[rsp+0x40],rax
je 0x550787
call qword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
lea r15,[rbx+0x44]
mov edi,eax
mov dword[rsp+0x38],eax
xor eax,eax
lock cmpxchg dword[r15],eax
cmp edi,eax
je 0x550084
lea rsi,[rbx+0x48]
mov edi,dword[rbx+0x48]
jmp 0x54fd56
mov edi,eax
mov edx,edi
mov r8d,edi
mov rcx,rsi
or edx,0x80000000
call fcn.008eebc0
cmp edi,eax
jne 0x54fd54
test edi,edi
js 0x5503e8
mov eax,dword[rsp+0x38]
xchg dword[r15],eax
mov dword[rbx+0x40],1
mov rdi,qword[rbx+0x18]
mov rcx,qword[rbx+0x10]
lea rsi,[rsp+0x68]
xor r9d,r9d
mov r8,rsi
mov rdx,rdi
call fcn.00a53e40
cmp rdi,rax
je 0x5503c0
mov eax,dword[rbx+0x40]
sub eax,1
test eax,eax
mov dword[rbx+0x40],eax
je 0x550316
mov rax,qword[rsp+0x1d8]
mov rbx,qword[rsp+0x1c0]
lea rdi,[r13+0x10]
mov r15,qword[rsp+0x1d0]
mov r14,qword[rsp+0x1e0]
lea rsi,[r12+0x10]
add rax,8
mov qword[rsp+0x58],rax
nop word[rax+rax]
cmp r14,rbx
je 0x54feef
xor ecx,ecx
mov rdx,r13
mov qword[rsp+0x170],rdi
mov word[rsp+0x180],cx
lea rcx,[rbx+8]
mov qword[rsp+0x178],0
call fcn.0067bbe0
mov qword[rsp+0x130],rsi
mov r9,qword[rax+8]
mov r10,qword[rax]
add r9,r9
mov rax,r10
add rax,r9
je 0x54fe50
test r10,r10
jne 0x54fe50
lea rcx,[0x00a9e4e0]
call fcn.00a4f4e0
nop
mov rdx,r9
sar rdx,1
cmp rdx,7
mov rax,rdx
mov qword[rsp+0x110],rdx
ja 0x550010
cmp rax,1
je 0x550070
test rdx,rdx
mov rcx,rsi
jne 0x55004f
xor edx,edx
mov qword[rsp+0x138],rax
mov word[rcx+rax*2],dx
mov rcx,qword[rsp+0x170]
cmp rcx,rdi
je 0x54fea1
call fcn.00a5af30
mov rdx,qword[rbx]
mov r8,r12
mov rcx,rbp
call fcn.0054cc10
mov rcx,qword[rsp+0x130]
cmp rcx,rsi
je 0x54fec1
call fcn.00a5af30
add rbx,0x28
cmp r15,rbx
jne 0x54fdf0
mov rax,qword[rsp+0x58]
mov rbx,qword[rax]
add rax,8
mov qword[rsp+0x58],rax
cmp r14,rbx
lea r15,[rbx+0x1e0]
jne 0x54fdf9
mov rax,qword[rsp+0x1d8]
mov r12,qword[rsp+0x1f8]
mov r13,qword[rsp+0x1e0]
mov rdi,qword[rsp+0x1e8]
mov rsi,qword[rsp+0x1c0]
mov r14,qword[rsp+0x1d0]
lea rbp,[rax+8]
mov qword[rsp+0x38],rax
cmp r12,rbp
jbe 0x54ff64
nop dword[rax]
mov rbx,qword[rbp]
lea r15,[rbx+0x1e0]
nop dword[rax+rax]
mov rcx,qword[rbx+8]
lea rax,[rbx+0x18]
cmp rcx,rax
je 0x54ff52
call fcn.00a5af30
add rbx,0x28
cmp rbx,r15
jne 0x54ff40
add rbp,8
cmp r12,rbp
ja 0x54ff30
cmp r12,qword[rsp+0x38]
je 0x55038b
cmp rsi,r14
je 0x54ffaa
mov rcx,qword[rsi+8]
lea rax,[rsi+0x18]
cmp rcx,rax
je 0x54ff86
call fcn.00a5af30
add rsi,0x28
cmp r14,rsi
jne 0x54ff74
cmp r13,rdi
je 0x54ffaf
mov rcx,qword[rdi+8]
lea rax,[rdi+0x18]
cmp rcx,rax
je 0x54ffa6
call fcn.00a5af30
add rdi,0x28
cmp r13,rdi
jne 0x54ff94
mov rcx,qword[rsp+0x1b0]
test rcx,rcx
je 0x54fff4
mov rax,qword[rsp+0x1f8]
mov rbx,qword[rsp+0x1d8]
lea rsi,[rax+8]
cmp rsi,rbx
jbe 0x54ffee
mov rcx,qword[rbx]
add rbx,8
call fcn.00a5af30
cmp rsi,rbx
ja 0x54ffd5
mov rcx,qword[rsp+0x1b0]
call fcn.00a5af30
nop
add rsp,0x228
pop rbx
pop rsi
pop rdi
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov rdx,qword[rsp+0x48]
mov rcx,r12
xor r8d,r8d
mov qword[rsp+0x40],r9
mov qword[rsp+0x38],r10
call fcn.00a30910
mov rcx,rax
mov qword[rsp+0x130],rax
mov rax,qword[rsp+0x110]
mov r10,qword[rsp+0x38]
mov r9,qword[rsp+0x40]
mov qword[rsp+0x140],rax
mov r8,r9
mov rdx,r10
call sub.msvcrt.dll_memcpy
mov rax,qword[rsp+0x110]
mov rcx,qword[rsp+0x130]
jmp 0x54fe81
movzx edx,word[r10]
mov rcx,rsi
mov word[rsp+0x140],dx
jmp 0x54fe81
add dword[rbx+0x40],1
jmp 0x54fd83
mov rcx,qword[rsp+0x50]
lea rdx,[rsp+0x60]
xor r8d,r8d
call fcn.00a30910
mov rdx,qword[rsp+0x60]
mov qword[rsp+0x1b0],rax
mov qword[rsp+0x1c0],rdx
mov rdx,rdi
mov r8,rsi
mov rcx,rax
call sub.msvcrt.dll_memcpy
mov rax,qword[rsp+0x60]
mov rdx,qword[rsp+0x1b0]
jmp 0x54f45a
lea rdx,[rsp+0x110]
xor r8d,r8d
mov rcx,r12
call fcn.00a30910
mov rdx,qword[rsp+0x110]
mov qword[rsp+0x130],rax
mov qword[rsp+0x140],rdx
mov rdx,rdi
mov r8,rbx
mov rcx,rax
call sub.msvcrt.dll_memcpy
mov rax,qword[rsp+0x110]
mov rdx,qword[rsp+0x130]
jmp 0x54f2d0
lea rax,[rsp+0x1b0]
xor r8d,r8d
mov rcx,r13
mov rdx,rax
mov qword[rsp+0x50],rax
call fcn.00a2dfc0
mov rdx,qword[rsp+0x1b0]
mov qword[rsp+0x170],rax
mov qword[rsp+0x180],rdx
mov rdx,r12
mov r8,rbx
mov rcx,rax
call sub.msvcrt.dll_memcpy
mov rax,qword[rsp+0x1b0]
mov rdx,qword[rsp+0x170]
jmp 0x54f225
mov rax,qword[rbx]
lea rdx,[0x00923ea0]
mov rax,qword[rax+8]
cmp rax,rdx
jne 0x5504ad
cmp byte[rbx+0x10],0
lea rax,[0x00b6dc60]
mov qword[rbx],rax
je 0x5501ae
mov rcx,qword[rbx+8]
test rcx,rcx
je 0x5501ae
call qword[sym.imp.GDI32.dll_DeleteObject]
mov edx,0x18
mov rcx,rbx
call fcn.00a5af40
jmp 0x54fc3a
mov rax,qword[rsi]
lea rdx,[0x00923ea0]
mov rax,qword[rax+8]
cmp rax,rdx
jne 0x5504a3
cmp byte[rsi+0x10],0
lea rax,[0x00b6dc60]
mov qword[rsi],rax
je 0x5501f6
mov rcx,qword[rsi+8]
test rcx,rcx
je 0x5501f6
call qword[sym.imp.GDI32.dll_DeleteObject]
mov edx,0x18
mov rcx,rsi
call fcn.00a5af40
jmp 0x54fa84
mov rax,qword[rsi]
lea rdx,[0x00923ea0]
mov rax,qword[rax+8]
cmp rax,rdx
jne 0x5504c1
cmp byte[rsi+0x10],0
lea rax,[0x00b6dc60]
mov qword[rsi],rax
je 0x55023e
mov rcx,qword[rsi+8]
test rcx,rcx
je 0x55023e
call qword[sym.imp.GDI32.dll_DeleteObject]
mov edx,0x18
mov rcx,rsi
call fcn.00a5af40
jmp 0x54fa22
mov rax,qword[rsi]
lea rdx,[0x00923ea0]
mov rax,qword[rax+8]
cmp rax,rdx
jne 0x5504b7
cmp byte[rsi+0x10],0
lea rax,[0x00b6dc60]
mov qword[rsi],rax
je 0x550286
mov rcx,qword[rsi+8]
test rcx,rcx
je 0x550286
call qword[sym.imp.GDI32.dll_DeleteObject]
mov edx,0x18
mov rcx,rsi
call fcn.00a5af40
jmp 0x54fa0b
movzx edx,word[rdi]
mov rdi,qword[rsp+0x50]
mov word[rsp+0x1c0],dx
lea rdx,[rdi+0x10]
jmp 0x54f45a
movzx edx,word[rdi]
mov word[rsp+0x140],dx
lea rdx,[r12+0x10]
jmp 0x54f2d0
movzx edx,byte[r12]
mov byte[rsp+0x180],dl
mov rdx,rdi
lea rdi,[rsp+0x1b0]
mov qword[rsp+0x50],rdi
jmp 0x54f225
mov rax,qword[rsi+0x40]
mov rcx,qword[rbp+0x40]
mov qword[rbp+0xc8],rax
call qword[sym.imp.USER32.dll_IsWindowVisible]
test eax,eax
je 0x54f6a9
mov rcx,qword[rbp+0xc8]
call qword[sym.imp.USER32.dll_SetFocus]
jmp 0x54f6a9
xchg dword[r15],eax
mov eax,0x80000000
lea rdi,[rbx+0x48]
lock xadd dword[rdi],eax
test eax,0x40000000
jne 0x54fdb8
cmp eax,0x80000000
je 0x54fdb8
mov esi,dword[rbx+0x48]
jmp 0x550343
mov esi,eax
mov edx,esi
mov r8d,esi
mov rcx,rdi
or edx,0x40000000
call fcn.008eebc0
cmp esi,eax
jne 0x550341
and esi,0x40000000
jne 0x54fdb8
add rbx,0x50
xor eax,eax
lock cmpxchg qword[rbx],rax
test rax,rax
mov rsi,rax
mov rcx,rax
je 0x5505b6
call qword[sym.imp.KERNEL32.dll_SetEvent]
jmp 0x54fdb8
cmp r13,rsi
je 0x54ffaf
mov rcx,qword[rsi+8]
lea rax,[rsi+0x18]
cmp rcx,rax
je 0x5503a6
call fcn.00a5af30
add rsi,0x28
cmp r13,rsi
jne 0x550394
jmp 0x54ffaf
lea rcx,[0x00a9e4e0]
call fcn.00a4f4e0
mov rax,qword[rbx+0x18]
cmp rax,qword[rbx+0x20]
je 0x55052c
test rax,rax
je 0x5503db
mov rdx,qword[rsp+0x68]
mov qword[rax],rdx
add rax,8
mov qword[rbx+0x18],rax
jmp 0x54fda7
mov edx,dword[rbx+0x48]
jmp 0x5503ef
mov edx,eax
lea eax,[rdx+1]
mov r14d,edx
or r14d,0x80000000
test edx,edx
cmovs r14d,eax
mov eax,edx
lock cmpxchg dword[rsi],r14d
cmp eax,edx
jne 0x5503ed
shr edx,0x1f
test dl,dl
je 0x54fd75
mov eax,r14d
shr eax,0x1f
test al,al
je 0x54fd75
lea rax,[rbx+0x50]
mov rdi,rax
mov qword[rsp+0x58],rax
xor eax,eax
lock cmpxchg qword[rdi],rax
test rax,rax
mov rdi,rax
je 0x550571
mov rcx,rsi
call rax
jmp 0x54fa84
mov rcx,rbx
call rax
jmp 0x54fc3a
mov rcx,rsi
call rax
jmp 0x54fa0b
mov rcx,rsi
call rax
jmp 0x54fa22
mov rcx,rbp
call fcn.008faea0
mov rcx,rbx
call fcn.008da260
nop
mov rax,rdi
jmp 0x550155
mov rax,rdx
jmp 0x5500ff
mov rax,rdx
jmp 0x5500b4
mov rcx,qword[rsp+0x50]
call fcn.00928540
jmp 0x5504ce
mov rcx,qword[rsp+0x50]
call fcn.00a08490
jmp 0x5504ce
lea rcx,[rbx+0x10]
mov rdx,rsi
call fcn.00a20250
jmp 0x54fda7
xor ecx,ecx
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
je 0x550655
mov rax,rsi
lock cmpxchg qword[rbx],rcx
test rax,rax
mov rsi,rax
je 0x550380
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rcx,rsi
jmp 0x550380
call fcn.006ea660
lea rdx,[0x00a9e542]
mov rcx,r13
mov rbx,rax
call fcn.009de540
lea rax,[r13+0x30]
mov rcx,r13
mov dword[rsp+0x180],0xb
mov qword[rsp+0x188],rbx
mov qword[rsp+0x198],0
mov qword[rsp+0x190],rax
lea rax,[0x00b72480]
mov byte[rsp+0x1a0],0
mov qword[rsp+0x170],rax
call fcn.00947760
mov rbx,rax
lea rax,[0x00b72450]
mov rcx,r13
mov qword[rsp+0x170],rax
call fcn.00962490
jmp 0x550520
call fcn.006ea660
lea rdx,[0x00a9e570]
mov rcx,r12
mov rbx,rax
call fcn.009de540
lea rax,[r12+0x30]
mov rcx,r12
mov dword[rsp+0x140],1
mov qword[rsp+0x148],rbx
mov qword[rsp+0x158],0
mov qword[rsp+0x150],rax
lea rax,[0x00b714e0]
mov byte[rsp+0x160],0
mov qword[rsp+0x130],rax
call fcn.009472d0
mov rbx,rax
mov rax,qword[rsp+0x120]
test rax,rax
je 0x550809
mov rcx,qword[rsp+0x48]
mov r8d,3
mov rdx,rcx
call rax
mov rax,qword[rsp+0x180]
test rax,rax
je 0x550824
mov r8d,3
mov rdx,r13
mov rcx,r13
call rax
mov rax,qword[rsp+0x140]
test rax,rax
je 0x5504fb
mov r8d,3
mov rdx,r12
mov rcx,r12
call rax
jmp 0x5504fb
{% endhighlight %}


[similar_1_ref]: /report/fcn.00656050@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_2_ref]: /report/fcn.005c9510@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_3_ref]: /report/fcn.005c0710@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_4_ref]: /report/fcn.006a0760@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_5_ref]: /report/fcn.005bd550@a5905e3c253c25bbaf727a1a18fe8ed1
[virustotal_ref]: https://www.virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1