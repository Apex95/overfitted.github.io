---
layout: post
title:  "fcn.00464650 @ 4fe6510221c33bf023f6abed461fc13f"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00464650
- **Origin (md5):** 4fe6510221c33bf023f6abed461fc13f
- **VirusTotal:** [virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>
<span class="tag" id="SYSTEM-INFO">SYSTEM-INFO</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.00464650@4fe6510221c33bf023f6abed461fc13f">fcn.00464650</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

sub esp, 0x90
push ebx
push ebp
push esi
push edi
mov edi, dword[esp+0xa4]
mov eax, dword[edi+4]
mov esi, edx
test eax, eax
je 0x464f8e
mov byte[edi+0xbd], 1
cmp word[ecx], 0
je off.b51
push ecx
push eax
call dword[sym.imp.USER32.dll_SetWindowTextW]
mov eax, 0x80000000
mov dword[esp+0x24], eax
mov dword[esp+0x2c], eax
mov dword[esp+0x18], eax
mov dword[esp+0x14], eax
mov eax, dword[edi+4]
push eax
mov byte[esp+0x23], 0
call dword[sym.imp.USER32.dll_IsZoomed]
mov ecx, dword[edi+4]
mov ebx, eax
push ecx
mov dword[esp+0x58], ebx
call dword[sym.imp.USER32.dll_IsIconic]
mov dword[esp+0x30], eax
test eax, eax
je off.b122
mov ebp, 9
mov dword[esp+0x20], ebp
jmp off.b142
xor edx, edx
test ebx, ebx
setne dl
lea edx, [edx*4+1]
mov ebp, edx
mov dword[esp+0x20], edx
mov dword[esp+0x10], esi
cmp word[esi], 0
mov ebx, esi
je 0x464974
mov edi, edi
movzx esi, word[ebx]
test esi, 0xffffff80
jne off.b189
push 2
push esi
call fcn.0048df9e
add esp, 8
test eax, eax
je off.b189
and esi, 0xffffffdf
movzx eax, si
add eax, 0xfffffff7
cmp eax, 0x50
ja case.0x464723.10
movzx eax, byte[eax+0x464fc4]
jmp dword[eax*4+0x464fa0]
add dword[esp+0x10], 2
jmp case.0x464723.10
push 8
push str.AutoSize
push ebx
call fcn.0048d597
add esp, 0xc
test eax, eax
jne case.0x464723.10
add dword[esp+0x10], 0x10
mov byte[esp+0x1f], 1
jmp case.0x464723.10
push 6
push str.Center
push ebx
call fcn.0048d597
add esp, 0xc
test eax, eax
jne case.0x464723.10
add dword[esp+0x10], 0xc
mov eax, 0x80000001
mov dword[esp+0x24], eax
mov dword[esp+0x2c], eax
jmp case.0x464723.10
push 8
push str.Minimize
push ebx
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x4647b0
add dword[esp+0x10], 0x10
mov dword[esp+0x20], 6
jmp case.0x464723.10
push 8
push str.Maximize
push ebx
call fcn.0048d597
add esp, 0xc
test eax, eax
jne case.0x464723.10
add dword[esp+0x10], 0x10
mov dword[esp+0x20], 3
jmp case.0x464723.10
push 2
push 0x4bc65c
push ebx
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x464800
add dword[esp+0x10], 4
mov dword[esp+0x20], 8
jmp case.0x464723.10
push 0xa
push str.NoActivate
push ebx
call fcn.0048d597
add esp, 0xc
test eax, eax
jne case.0x464723.10
add dword[esp+0x10], 0x14
mov dword[esp+0x20], 4
jmp case.0x464723.10
push 7
push str.Restore
push ebx
call fcn.0048d597
add esp, 0xc
test eax, eax
jne case.0x464723.10
add dword[esp+0x10], 0xe
mov dword[esp+0x20], 9
jmp case.0x464723.10
push 6
lea ecx, [ebx+2]
push str.Center
push ecx
call fcn.0048d597
add esp, 0xc
test eax, eax
jne case.0x464723.72
mov ax, word[ebx]
call fcn.004095a0
cmp ax, 0x58
jne 0x46488b
add dword[esp+0x10], 0xe
mov dword[esp+0x24], 0x80000001
jmp 0x464966
add dword[esp+0x10], 0xe
mov dword[esp+0x2c], 0x80000001
jmp 0x464966
push 4
push str.Hide
push ebx
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x4648c1
add dword[esp+0x10], 8
xor ebp, ebp
mov dword[esp+0x20], ebp
jmp 0x464966
lea edx, [esp+0x10]
push edx
lea ebp, [ebx+2]
push ebp
call fcn.0048f906
add esp, 8
call fcn.0049b670
mov esi, eax
cmp dword[esp+0x10], ebp
je 0x464ab4
mov ax, word[ebx]
call fcn.004095a0
movzx eax, ax
add eax, 0xffffffb8
cmp eax, 0x11
ja case.0x464723.10
movzx eax, byte[eax+0x46502c]
jmp dword[eax*4+0x465018]
mov dword[esp+0x24], esi
jmp case.0x464723.10
mov dword[esp+0x2c], esi
jmp case.0x464723.10
cmp byte[edi+0xc0], 0
je 0x46492f
mov ecx, dword[0x4c85d0]
push 0x60
push ecx
push esi
call dword[sym.imp.KERNEL32.dll_MulDiv]
mov dword[esp+0x18], eax
jmp case.0x464723.10
mov dword[esp+0x18], esi
jmp case.0x464723.10
cmp byte[edi+0xc0], 0
je 0x464954
mov edx, dword[0x4c85d0]
push 0x60
push edx
push esi
call dword[sym.imp.KERNEL32.dll_MulDiv]
mov dword[esp+0x14], eax
jmp case.0x464723.10
mov dword[esp+0x14], esi
cmp dword[esp+0x10], ebx
je 0x464ab8
mov ebp, dword[esp+0x20]
mov ebx, dword[esp+0x10]
cmp word[ebx], 0
jne off.b160
mov eax, dword[esp+0x18]
mov ecx, dword[esp+0x14]
mov dword[esp+0x58], eax
mov dword[esp+0x5c], ecx
mov byte[esp+0x1e], 0
test ebp, ebp
je 0x4649a5
cmp ebp, 9
je 0x464997
cmp ebp, 4
jne 0x4649b5
cmp dword[esp+0x54], 0
jne 0x4649a5
cmp dword[esp+0x30], 0
je 0x4649b5
mov edx, dword[edi+4]
push ebp
push edx
call dword[sym.imp.USER32.dll_ShowWindow]
mov byte[esp+0x1e], 1
mov eax, dword[edi+4]
push eax
call dword[sym.imp.USER32.dll_IsIconic]
test eax, eax
sete al
mov byte[esp+0x2b], al
test al, al
je 0x464b95
cmp byte[esp+0x1f], 0
je 0x464ad5
xor ebx, ebx
xor ebp, ebp
mov dword[esp+0x18], ebp
mov dword[esp+0x14], ebx
cmp dword[edi+0x10], ebx
jbe 0x464a75
mov dword[esp+0x18], ebx
mov esi, dword[edi+0x18]
add esi, dword[esp+0x18]
cmp byte[esi+4], 0x18
je 0x464a4c
mov ecx, dword[esi]
push 0xfffffffffffffff0
push ecx
call dword[sym.imp.USER32.dll_GetWindowLongW]
test eax, 0x10000000
je 0x464a4c
mov eax, dword[esi]
lea edx, [esp+0x34]
push edx
push eax
call dword[sym.imp.USER32.dll_GetWindowRect]
mov edx, dword[edi+4]
push 2
lea ecx, [esp+0x38]
push ecx
push edx
push 0
call dword[sym.imp.USER32.dll_MapWindowPoints]
mov eax, dword[esp+0x3c]
cmp eax, ebp
jle 0x464a3e
mov ebp, eax
mov eax, dword[esp+0x40]
cmp eax, dword[esp+0x14]
jle 0x464a4c
mov dword[esp+0x14], eax
add dword[esp+0x18], 0x14
inc ebx
cmp ebx, dword[edi+0x10]
jb 0x4649f4
mov dword[esp+0x18], ebp
test ebp, ebp
jle 0x464a66
add ebp, dword[edi+0x78]
mov dword[esp+0x18], ebp
mov eax, dword[esp+0x14]
test eax, eax
jle 0x464a75
add eax, dword[edi+0x7c]
mov dword[esp+0x14], eax
mov eax, dword[edi+8]
test eax, eax
je 0x464b95
push 0xfffffffffffffff0
push eax
call dword[sym.imp.USER32.dll_GetWindowLongW]
test eax, 0x10000000
je 0x464b95
mov ecx, dword[edi+8]
lea eax, [esp+0x34]
push eax
push ecx
call dword[sym.imp.USER32.dll_GetWindowRect]
mov edx, dword[esp+0x40]
sub edx, dword[esp+0x38]
add dword[esp+0x14], edx
jmp 0x464b95
mov dword[esp+0x10], ebx
push ebx
push str.Invalid_option.
mov ecx, 0x4c8640
call fcn.0042e1d0
pop edi
pop esi
pop ebp
pop ebx
add esp, 0x90
ret 4
mov esi, dword[esp+0x18]
mov ebx, dword[esp+0x14]
cmp esi, 0x80000000
je 0x464af1
cmp ebx, 0x80000000
jne 0x464b95
cmp byte[edi+0xbb], 0
je 0x464b5e
cmp esi, 0x80000000
jne 0x464b0f
mov eax, dword[edi+0x90]
add eax, dword[edi+0x78]
mov dword[esp+0x18], eax
cmp ebx, 0x80000000
jne 0x464b95
mov esi, dword[edi+0x94]
add esi, dword[edi+0x7c]
mov eax, dword[edi+8]
mov dword[esp+0x14], esi
test eax, eax
je 0x464b95
push 0xfffffffffffffff0
push eax
call dword[sym.imp.USER32.dll_GetWindowLongW]
test eax, 0x10000000
je 0x464b95
mov ecx, dword[edi+8]
lea eax, [esp+0x34]
push eax
push ecx
call dword[sym.imp.USER32.dll_GetWindowRect]
mov edx, dword[esp+0x40]
sub edx, dword[esp+0x38]
add esi, edx
mov dword[esp+0x14], esi
jmp 0x464b95
mov ecx, dword[edi+4]
lea eax, [esp+0x34]
push eax
push ecx
call dword[sym.imp.USER32.dll_GetClientRect]
cmp esi, 0x80000000
jne 0x464b81
mov eax, dword[esp+0x3c]
sub eax, dword[esp+0x34]
mov dword[esp+0x18], eax
cmp ebx, 0x80000000
jne 0x464b95
mov eax, dword[esp+0x40]
sub eax, dword[esp+0x38]
mov dword[esp+0x14], eax
cmp byte[edi+0xbb], 0
je 0x464bed
cmp byte[edi+0xb8], 0
je 0x464bcc
xor ebp, ebp
cmp dword[edi+0x10], ebp
jbe 0x464bcc
xor esi, esi
mov eax, dword[edi+0x18]
add eax, esi
cmp byte[eax+4], 0x13
jne 0x464bc3
push 0
push eax
call fcn.00468620
inc ebp
add esi, 0x14
cmp ebp, dword[edi+0x10]
jb 0x464bb0
mov eax, 0x80000000
cmp dword[esp+0x24], eax
jne 0x464bdf
mov dword[esp+0x24], 0x80000001
cmp dword[esp+0x2c], eax
jne 0x464bed
mov dword[esp+0x2c], 0x80000001
mov eax, dword[edi+4]
push eax
call dword[sym.imp.USER32.dll_IsWindowVisible]
cmp byte[esp+0x2b], 0
mov dword[esp+0x30], eax
je 0x464e89
mov ecx, dword[esp+0x18]
mov edx, dword[esp+0x14]
mov ebx, dword[sym.imp.USER32.dll_GetWindowLongW]
xor eax, eax
mov dword[esp+0x44], eax
mov dword[esp+0x48], eax
mov eax, dword[edi+4]
push 0xfffffffffffffff0
push eax
mov dword[esp+0x54], ecx
mov dword[esp+0x58], edx
call ebx
mov ecx, dword[edi+4]
push 0xffffffffffffffec
push ecx
mov esi, eax
call ebx
mov edx, dword[edi+4]
push eax
push edx
call dword[sym.imp.USER32.dll_GetMenu]
neg eax
sbb eax, eax
neg eax
push eax
push esi
lea eax, [esp+0x50]
push eax
call dword[sym.imp.USER32.dll_AdjustWindowRectEx]
mov ebp, dword[esp+0x4c]
mov ebx, dword[esp+0x50]
sub ebp, dword[esp+0x44]
sub ebx, dword[esp+0x48]
test esi, 0x100000
je 0x464c78
push 3
call dword[sym.imp.USER32.dll_GetSystemMetrics]
add ebx, eax
test esi, 0x200000
je 0x464c8a
push 2
call dword[sym.imp.USER32.dll_GetSystemMetrics]
add ebp, eax
push 0
lea ecx, [esp+0x74]
push ecx
push 0
push 0x30
call dword[sym.imp.USER32.dll_SystemParametersInfoW]
mov eax, dword[esp+0x78]
mov esi, dword[esp+0x70]
mov ecx, dword[esp+0x7c]
sub ecx, dword[esp+0x74]
sub eax, esi
cmp byte[edi+0xbb], 0
je 0x464cd3
mov edx, 0x80000000
cmp dword[esp+0x58], edx
jne 0x464cc7
cmp ebp, eax
jle 0x464cc7
mov ebp, eax
cmp dword[esp+0x5c], edx
jne 0x464cd3
cmp ebx, ecx
jle 0x464cd3
mov ebx, ecx
cmp dword[esp+0x24], 0x80000001
jne 0x464cea
sub eax, ebp
cdq
sub eax, edx
sar eax, 1
add eax, esi
mov dword[esp+0x24], eax
mov esi, dword[esp+0x2c]
cmp esi, 0x80000001
jne 0x464d05
mov eax, ecx
sub eax, ebx
cdq
sub eax, edx
mov esi, eax
sar esi, 1
add esi, dword[esp+0x74]
mov eax, dword[edi+4]
lea edx, [esp+0x60]
push edx
push eax
call dword[sym.imp.USER32.dll_GetWindowRect]
mov ecx, dword[esp+0x68]
mov eax, dword[esp+0x60]
sub ecx, eax
cmp ebp, ecx
jne 0x464d4c
mov ecx, dword[esp+0x6c]
mov edx, dword[esp+0x64]
sub ecx, edx
cmp ebx, ecx
jne 0x464d4c
mov ecx, dword[esp+0x24]
cmp ecx, 0x80000000
je 0x464d40
cmp ecx, eax
jne 0x464d4c
cmp esi, 0x80000000
je 0x464d94
cmp esi, edx
je 0x464d94
mov edx, dword[edi+4]
push edx
call dword[sym.imp.USER32.dll_IsZoomed]
test eax, eax
je 0x464d66
mov eax, dword[edi+4]
push 9
push eax
call dword[sym.imp.USER32.dll_ShowWindow]
cmp esi, 0x80000000
jne 0x464d72
mov esi, dword[esp+0x64]
mov eax, dword[esp+0x24]
cmp eax, 0x80000000
jne 0x464d81
mov eax, dword[esp+0x60]
mov ecx, dword[esp+0x30]
mov edx, dword[edi+4]
push ecx
push ebx
push ebp
push esi
push eax
push edx
call dword[sym.imp.USER32.dll_MoveWindow]
cmp byte[edi+0xbb], 0
je 0x464e89
mov ecx, dword[edi+4]
lea eax, [esp+0x80]
push eax
push ecx
call dword[sym.imp.USER32.dll_GetWindowRect]
mov eax, dword[edi+4]
lea edx, [esp+0x90]
push edx
push eax
call dword[sym.imp.USER32.dll_GetClientRect]
mov eax, dword[esp+0x88]
mov ecx, dword[esp+0x8c]
sub eax, dword[esp+0x80]
sub ecx, dword[esp+0x84]
mov esi, dword[edi+0xa8]
mov edx, eax
sub edx, dword[esp+0x98]
mov ebx, ecx
sub ebx, dword[esp+0x9c]
cmp esi, 0x80000001
jne 0x464e09
mov dword[edi+0xa8], eax
jmp 0x464e19
cmp esi, 0x80000000
je 0x464e19
add esi, edx
mov dword[edi+0xa8], esi
mov esi, dword[edi+0xac]
cmp esi, 0x80000001
jne 0x464e2f
mov dword[edi+0xac], ecx
jmp 0x464e3f
cmp esi, 0x80000000
je 0x464e3f
add esi, ebx
mov dword[edi+0xac], esi
mov esi, dword[edi+0xb0]
cmp esi, 0x80000001
jne 0x464e55
mov dword[edi+0xb0], eax
jmp 0x464e65
cmp esi, 0x80000000
je 0x464e65
add edx, esi
mov dword[edi+0xb0], edx
mov eax, dword[edi+0xb4]
cmp eax, 0x80000001
jne 0x464e7a
mov dword[edi+0xb4], ecx
jmp 0x464e89
cmp eax, 0x80000000
je 0x464e89
add ebx, eax
mov dword[edi+0xb4], ebx
cmp byte[esp+0x1e], 0
jne 0x464e9f
mov ecx, dword[esp+0x20]
mov edx, dword[edi+4]
push ecx
push edx
call dword[sym.imp.USER32.dll_ShowWindow]
mov eax, dword[esp+0x20]
dec eax
cmp eax, 8
ja case.0x464eb4.2
movzx eax, byte[eax+0x465048]
jmp dword[eax*4+0x465040]
mov ecx, dword[edi+4]
push 2
push ecx
call dword[sym.imp.USER32.dll_GetAncestor]
cmp eax, dword[edi+4]
jne case.0x464eb4.2
mov esi, dword[edi+4]
call dword[sym.imp.USER32.dll_GetForegroundWindow]
cmp esi, eax
je 0x464ee4
mov eax, esi
call fcn.00477480
cmp byte[edi+0xbc], 0
je case.0x464eb4.2
mov byte[edi+0xbc], 0
call dword[sym.imp.USER32.dll_GetFocus]
mov ebx, eax
test ebx, ebx
je 0x464f6a
cmp byte[edi+0xb8], 0
je case.0x464eb4.2
mov ebp, dword[sym.imp.USER32.dll_GetDlgCtrlID]
push ebx
call ebp
lea esi, [eax-3]
cmp esi, dword[edi+0x10]
jb 0x464f36
push ebx
call dword[sym.imp.USER32.dll_GetParent]
mov ebx, eax
test ebx, ebx
je 0x464f31
push ebx
call ebp
lea esi, [eax-3]
cmp esi, dword[edi+0x10]
jae case.0x464eb4.2
mov eax, dword[edi+0x18]
lea edx, [esi+esi*4]
cmp dword[eax+edx*4], ebx
lea ebp, [eax+edx*4]
jne case.0x464eb4.2
cmp esi, 0x2af8
je case.0x464eb4.2
test ebp, ebp
je case.0x464eb4.2
cmp byte[ebp+4], 0x13
jne case.0x464eb4.2
mov ecx, dword[edi+4]
push ecx
call dword[sym.imp.USER32.dll_UpdateWindow]
push 1
push ebp
call fcn.00468620
jmp case.0x464eb4.2
mov edx, dword[edi+4]
push edx
call dword[sym.imp.USER32.dll_SetFocus]
push 1
push 0xffffffffffffffff
mov byte[edi+0xbb], 0
mov byte[edi+0xbd], 0
call fcn.00401340
add esp, 8
pop edi
pop esi
pop ebp
mov eax, 1
pop ebx
add esp, 0x90
ret 4

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f