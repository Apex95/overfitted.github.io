---
layout: post
title:  "fcn.0048840f @ fb9b7d22bc1c143ac66b0575cbdd088d"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0048840f
- **Origin (md5):** fb9b7d22bc1c143ac66b0575cbdd088d
- **VirusTotal:** [virustotal.com/gui/file/fb9b7d22bc1c143ac66b0575cbdd088d][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-64.6467056274414, 89.16983032226562, '<b><a href="/report/fcn.0048840f@fb9b7d22bc1c143ac66b0575cbdd088d">fcn.0048840f</a><br>@fb9b7d22bc1c143ac66b0575cbdd088d</b><br>', 'point { fill-color: #e0440e; }'],
[39.399200439453125, 113.53498840332031, '<b><a href="/report/fcn.10133bf7@e5d49e0823e602f2ee948ac39d32c1eb">fcn.10133bf7</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],
[-263.6338195800781, 81.50292205810547, '<b><a href="/report/fcn.00409b83@6c5b0418e4a4c57d99cda47d2717045d">fcn.00409b83</a><br>@6c5b0418e4a4c57d99cda47d2717045d</b><br>', 'null'],
[138.7646484375, -126.599609375, '<b><a href="/report/fcn.00421918@7dfa91bbba8f79a5b19b642937435ac0">fcn.00421918</a><br>@7dfa91bbba8f79a5b19b642937435ac0</b><br>', 'null'],
[-41.96600341796875, -166.92349243164062, '<b><a href="/report/fcn.00420458@597d9ee507d1b2a81775aa98c4a2271a">fcn.00420458</a><br>@597d9ee507d1b2a81775aa98c4a2271a</b><br>', 'null'],
[63.570613861083984, -214.7704315185547, '<b><a href="/report/fcn.0044d3fe@c2f40b3bc10e39d3d975422ee4d09bab">fcn.0044d3fe</a><br>@c2f40b3bc10e39d3d975422ee4d09bab</b><br>', 'null'],
[-57.680362701416016, 201.3269805908203, '<b><a href="/report/fcn.00414f7f@c299206e1e94de2392d4dd9464d03d54">fcn.00414f7f</a><br>@c299206e1e94de2392d4dd9464d03d54</b><br>', 'null'],
[43.18646240234375, 227.89749145507812, '<b><a href="/report/fcn.0048840f@152885a790b99953ce23874f0947b7bd">fcn.0048840f</a><br>@152885a790b99953ce23874f0947b7bd</b><br>', 'null'],
[-193.41285705566406, 181.74452209472656, '<b><a href="/report/fcn.004ad178@3e981d1767f44f5fe2446a49ffe52f4e">fcn.004ad178</a><br>@3e981d1767f44f5fe2446a49ffe52f4e</b><br>', 'null'],
[171.6996612548828, 159.61048889160156, '<b><a href="/report/fcn.00410637@c299206e1e94de2392d4dd9464d03d54">fcn.00410637</a><br>@c299206e1e94de2392d4dd9464d03d54</b><br>', 'null'],
[34.61860275268555, -85.1440658569336, '<b><a href="/report/fcn.0042493a@64e5091c15839d4b2093890f73869f28">fcn.0042493a</a><br>@64e5091c15839d4b2093890f73869f28</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
sub esp, 0x28
mov eax, dword[ebp+8]
push ebx
push esi
mov esi, dword[ebp+0x10]
push edi
push 0xfffffffffffffffe
pop ecx
xor edi, edi
mov dword[ebp-0x18], ecx
mov dword[ebp-0x20], edi
mov dword[ebp-0x28], esi
cmp eax, ecx
jne 0x488447
call fcn.00483c76
mov dword[eax], edi
call fcn.00483caa
mov dword[eax], 9
jmp 0x488b96
test eax, eax
js 0x488b7f
cmp eax, dword[0x4be640]
jae 0x488b7f
mov ecx, eax
mov ebx, eax
sar ecx, 5
and ebx, 0x1f
shl ebx, 6
mov dword[ebp-0xc], ecx
mov dword[ebp-0x24], ebx
mov edx, dword[ecx*4+0x4bd570]
mov al, byte[edx+ebx+4]
test al, 1
je 0x488b7f
cmp esi, 0x7fffffff
jbe 0x4884a0
call fcn.00483c76
mov dword[eax], edi
call fcn.00483caa
mov dword[eax], 0x16
jmp 0x488b91
test esi, esi
je 0x488b7b
test al, 2
jne 0x488b7b
cmp dword[ebp+0xc], edi
jne 0x4884be
call fcn.00483c76
and dword[eax], edi
jmp 0x488490
mov al, byte[edx+ebx+0x24]
add al, al
sar al, 1
mov byte[ebp+0x13], al
movsx eax, al
dec eax
je 0x4884e5
dec eax
jne 0x4884dd
mov eax, esi
not eax
test al, 1
je 0x4884b5
and esi, 0xfffffffe
mov eax, dword[ebp+0xc]
mov dword[ebp-0x10], eax
jmp 0x488549
mov eax, esi
not eax
test al, 1
je 0x4884b5
shr esi, 1
cmp esi, 4
jae 0x4884f7
push 4
pop esi
push esi
call fcn.00483b97
mov dword[ebp-0x10], eax
pop ecx
test eax, eax
jne 0x488520
call fcn.00483caa
mov dword[eax], 0xc
call fcn.00483c76
mov dword[eax], 8
jmp 0x488b96
push 1
push 0
push 0
push dword[ebp+8]
call fcn.0048825d
mov ecx, dword[ebp-0xc]
add esp, 0x10
mov ecx, dword[ecx*4+0x4bd570]
mov dword[ecx+ebx+0x28], eax
mov eax, dword[ebp-0x10]
mov dword[ecx+ebx+0x2c], edx
mov ecx, dword[ebp-0xc]
mov edx, dword[ecx*4+0x4bd570]
mov ecx, dword[ebp-0xc]
mov dword[ebp-0x1c], eax
test byte[edx+ebx+4], 0x48
je 0x4885e6
mov dl, byte[edx+ebx+5]
cmp dl, 0xa
je 0x4885e6
test esi, esi
je 0x4885e6
mov byte[eax], dl
xor edi, edi
lea edx, [eax+1]
inc edi
mov eax, dword[ecx*4+0x4bd570]
dec esi
cmp byte[ebp+0x13], 0
mov dword[ebp-0x1c], edx
mov byte[eax+ebx+5], 0xa
je 0x4885e6
mov eax, dword[ecx*4+0x4bd570]
mov al, byte[eax+ebx+0x25]
cmp al, 0xa
je 0x4885e6
test esi, esi
je 0x4885e6
mov byte[edx], al
inc edx
mov eax, dword[ecx*4+0x4bd570]
dec esi
cmp byte[ebp+0x13], 1
push 2
mov dword[ebp-0x1c], edx
pop edi
mov byte[eax+ebx+0x25], 0xa
jne 0x4885e6
mov eax, dword[ecx*4+0x4bd570]
mov al, byte[eax+ebx+0x26]
cmp al, 0xa
je 0x4885e6
test esi, esi
je 0x4885e6
push 3
mov byte[edx], al
inc edx
mov eax, dword[ecx*4+0x4bd570]
dec esi
pop edi
push 0xa
pop ecx
mov dword[ebp-0x1c], edx
mov byte[eax+ebx+0x26], cl
push dword[ebp+8]
call fcn.00480368
test eax, eax
mov eax, dword[ebp-0xc]
pop ecx
je 0x488667
mov ecx, dword[eax*4+0x4bd570]
test byte[ecx+ebx+4], 0x80
je 0x488667
lea eax, [ebp-0x20]
push eax
push dword[ecx+ebx]
call dword[sym.imp.KERNEL32.dll_GetConsoleMode]
mov dword[ebp-0x20], eax
test eax, eax
je 0x488664
cmp byte[ebp+0x13], 2
jne 0x488664
push 0
lea eax, [ebp-0x14]
shr esi, 1
push eax
mov eax, dword[ebp-0xc]
push esi
push dword[ebp-0x1c]
mov eax, dword[eax*4+0x4bd570]
push dword[eax+ebx]
call dword[sym.imp.KERNEL32.dll_ReadConsoleW]
test eax, eax
jne 0x488659
call dword[sym.imp.KERNEL32.dll_GetLastError]
push eax
call fcn.00483c89
pop ecx
or ebx, 0xffffffff
mov eax, dword[ebp-0x10]
jmp 0x488911
mov eax, dword[ebp-0x14]
lea ecx, [eax+eax]
mov dword[ebp-0x14], ecx
jmp 0x48869c
mov eax, dword[ebp-0xc]
mov eax, dword[eax*4+0x4bd570]
lea ecx, [ebp-0x14]
push 0
push ecx
push esi
push dword[ebp-0x1c]
push dword[eax+ebx]
call dword[sym.imp.KERNEL32.dll_ReadFile]
test eax, eax
je 0x488b47
mov ecx, dword[ebp-0x14]
test ecx, ecx
js 0x488b47
cmp ecx, esi
ja 0x488b47
mov edx, dword[ebp-0xc]
add edi, ecx
mov esi, dword[edx*4+0x4bd570]
mov al, byte[esi+ebx+4]
test al, al
jns 0x48890b
cmp byte[ebp+0x13], 2
je 0x48892b
test ecx, ecx
je 0x4886ce
mov ecx, dword[ebp-0x10]
cmp byte[ecx], 0xa
jne 0x4886ce
or al, 4
jmp 0x4886d0
and al, 0xfb
mov byte[esi+ebx+4], al
mov eax, dword[ebp-0x10]
mov esi, eax
mov dword[ebp-0x20], eax
lea ecx, [eax+edi]
mov dword[ebp-0x1c], ecx
cmp eax, ecx
jae 0x4887f8
push 0xd
pop ecx
mov edi, eax
mov al, byte[edi]
cmp al, 0x1a
je 0x4887dc
cmp al, cl
je 0x488706
mov byte[esi], al
inc esi
inc edi
jmp 0x4887a2
mov eax, dword[ebp-0x1c]
dec eax
cmp edi, eax
jae 0x48872a
lea eax, [edi+1]
cmp byte[eax], 0xa
jne 0x488723
push 0xa
pop eax
add edi, 2
mov byte[esi], al
jmp 0x4887ce
mov byte[esi], cl
mov edi, eax
inc esi
jmp 0x4887a2
push 0
lea eax, [ebp-0x14]
inc edi
push eax
push 1
lea eax, [ebp-1]
push eax
mov eax, dword[edx*4+0x4bd570]
push dword[eax+ebx]
call dword[sym.imp.KERNEL32.dll_ReadFile]
test eax, eax
jne 0x488755
call dword[sym.imp.KERNEL32.dll_GetLastError]
test eax, eax
jne 0x4887d1
cmp dword[ebp-0x14], 0
je 0x4887d1
mov edx, dword[ebp-0xc]
mov eax, dword[edx*4+0x4bd570]
test byte[eax+ebx+4], 0x48
je 0x48878f
push 0xa
pop eax
push 0xd
cmp byte[ebp-1], al
jne 0x48877b
mov byte[esi], al
inc esi
jmp 0x4887a1
mov byte[esi], 0xd
inc esi
mov ecx, dword[edx*4+0x4bd570]
mov al, byte[ebp-1]
mov byte[ecx+ebx+5], al
jmp 0x4887a1
cmp esi, dword[ebp-0x10]
jne 0x4887ad
push 0xa
pop eax
cmp byte[ebp-1], al
jne 0x4887ad
mov byte[esi], al
inc esi
push 0xd
pop ecx
cmp edi, dword[ebp-0x1c]
jb 0x4886ef
jmp 0x4887f8
push 1
push 0xffffffffffffffff
push 0xffffffffffffffff
push dword[ebp+8]
call fcn.0048825d
mov edx, dword[ebp-0xc]
add esp, 0x10
push 0xa
pop eax
cmp byte[ebp-1], al
je 0x48879f
push 0xd
pop ecx
mov byte[esi], cl
inc esi
jmp 0x4887a2
mov edx, dword[ebp-0xc]
push 0xd
pop ecx
mov byte[esi], cl
inc esi
jmp 0x4887a2
mov ecx, dword[edx*4+0x4bd570]
mov al, byte[ecx+ebx+4]
test al, 0x40
jne 0x4887f3
or al, 2
mov byte[ecx+ebx+4], al
jmp 0x4887f8
mov al, byte[edi]
mov byte[esi], al
inc esi
mov eax, dword[ebp-0x10]
mov edi, esi
sub edi, eax
cmp byte[ebp+0x13], 1
jne 0x48890e
test edi, edi
je 0x48890e
dec esi
mov al, byte[esi]
test al, al
js 0x48881e
inc esi
jmp 0x4888cd
movzx eax, al
xor edx, edx
inc edx
cmp byte[eax+0x4b8780], 0
jne 0x48884a
mov ebx, dword[ebp-0x10]
cmp edx, 4
jg 0x488847
cmp esi, ebx
jb 0x488847
dec esi
inc edx
movzx eax, byte[esi]
cmp byte[eax+0x4b8780], 0
je 0x488830
mov ebx, dword[ebp-0x24]
movzx eax, byte[esi]
movsx eax, byte[eax+0x4b8780]
test eax, eax
jne 0x488868
call fcn.00483caa
mov dword[eax], 0x2a
jmp 0x48864e
inc eax
cmp eax, edx
jne 0x488871
add esi, edx
jmp 0x4888cd
mov eax, dword[ebp-0xc]
mov ecx, dword[eax*4+0x4bd570]
test byte[ecx+ebx+4], 0x48
je 0x4888b9
mov al, byte[esi]
inc esi
mov byte[ecx+ebx+5], al
mov eax, dword[ebp-0xc]
cmp edx, 2
jl 0x4888a2
mov ecx, dword[eax*4+0x4bd570]
mov al, byte[esi]
inc esi
mov byte[ecx+ebx+0x25], al
mov eax, dword[ebp-0xc]
cmp edx, 3
jne 0x4888b5
mov ecx, dword[eax*4+0x4bd570]
mov al, byte[esi]
inc esi
mov byte[ecx+ebx+0x26], al
sub esi, edx
jmp 0x4888cd
neg edx
mov eax, edx
push 1
cdq
push edx
push eax
push dword[ebp+8]
call fcn.0048825d
add esp, 0x10
mov eax, dword[ebp-0x28]
mov edi, dword[ebp-0x10]
sub esi, edi
shr eax, 1
push eax
push dword[ebp+0xc]
push esi
push edi
push 0
push 0xfde9
call dword[sym.imp.KERNEL32.dll_MultiByteToWideChar]
mov edi, eax
test edi, edi
je 0x488641
mov eax, dword[ebp-0xc]
xor ecx, ecx
cmp edi, esi
setne cl
add edi, edi
mov eax, dword[eax*4+0x4bd570]
mov dword[eax+ebx+0x30], ecx
mov eax, dword[ebp-0x10]
mov ebx, dword[ebp-0x18]
cmp eax, dword[ebp+0xc]
je 0x48891d
push eax
call fcn.0047b716
pop ecx
cmp ebx, 0xfffffffe
je 0x488924
mov edi, ebx
mov eax, edi
jmp 0x488b99
cmp dword[ebp-0x20], 0
je 0x4889aa
mov esi, dword[ebp-0x10]
mov eax, edi
cdq
mov edi, esi
sub eax, edx
mov ecx, esi
sar eax, 1
lea edx, [edi+eax*2]
cmp edi, edx
jae 0x48899b
push 0xd
mov dword[ebp+0x10], 0x1a
pop edi
movzx eax, word[ecx]
cmp ax, word[ebp+0x10]
je 0x48898c
cmp ax, di
je 0x488969
mov word[esi], ax
add esi, 2
add ecx, 2
jmp 0x488986
lea eax, [edx-2]
cmp ecx, eax
jae 0x488986
add ecx, 2
push 0xa
pop eax
cmp word[ecx], ax
je 0x488980
push 0xd
pop eax
push eax
pop edi
mov word[esi], ax
add esi, 2
cmp ecx, edx
jb 0x488950
jmp 0x48899b
mov eax, dword[ebp-0xc]
mov eax, dword[eax*4+0x4bd570]
or byte[eax+ebx+4], 2
mov eax, dword[ebp-0x10]
mov edi, esi
sub edi, eax
and edi, 0xfffffffe
jmp 0x48890e
test ecx, ecx
je 0x4889c0
mov ecx, dword[ebp-0x10]
push 0xa
pop edx
cmp word[ecx], dx
mov edx, dword[ebp-0xc]
jne 0x4889c0
or al, 4
jmp 0x4889c2
and al, 0xfb
mov byte[esi+ebx+4], al
mov eax, dword[ebp-0x10]
mov esi, eax
mov dword[ebp-0x28], eax
lea ecx, [eax+edi]
mov dword[ebp-0x20], ecx
cmp eax, ecx
jae 0x488b3b
push 0xd
pop ecx
mov dword[ebp+0x10], 0x1a
mov edi, eax
movzx eax, word[edi]
cmp ax, word[ebp+0x10]
je 0x488b1b
cmp ax, cx
je 0x4889ff
mov word[esi], ax
jmp 0x488a26
mov eax, dword[ebp-0x20]
add eax, 0xfffffffe
cmp edi, eax
jae 0x488a31
push 0xa
pop edx
cmp word[edi+2], dx
mov edx, dword[ebp-0xc]
jne 0x488a23
push 0xa
pop eax
add edi, 4
mov word[esi], ax
jmp 0x488b08
mov word[esi], cx
add esi, 2
add edi, 2
jmp 0x488ac4
push 0
lea eax, [ebp-0x14]
add edi, 2
push eax
push 2
lea eax, [ebp-8]
push eax
mov eax, dword[edx*4+0x4bd570]
push dword[eax+ebx]
call dword[sym.imp.KERNEL32.dll_ReadFile]
test eax, eax
jne 0x488a62
call dword[sym.imp.KERNEL32.dll_GetLastError]
test eax, eax
jne 0x488b0d
cmp dword[ebp-0x14], 0
je 0x488b0d
mov edx, dword[ebp-0xc]
mov eax, dword[edx*4+0x4bd570]
test byte[eax+ebx+4], 0x48
je 0x488acf
push 0xa
pop eax
push 0xd
cmp word[ebp-8], ax
jne 0x488a90
mov word[esi], ax
add esi, 2
jmp 0x488ac3
pop eax
mov word[esi], ax
add esi, 2
mov ecx, dword[edx*4+0x4bd570]
mov al, byte[ebp-8]
push 0xa
mov byte[ecx+ebx+5], al
mov ecx, dword[edx*4+0x4bd570]
mov al, byte[ebp-7]
mov byte[ecx+ebx+0x25], al
mov eax, dword[edx*4+0x4bd570]
pop ecx
mov byte[eax+ebx+0x26], cl
push 0xd
pop ecx
cmp edi, dword[ebp-0x20]
jb 0x4889e8
jmp 0x488b3b
cmp esi, dword[ebp-0x10]
jne 0x488ae5
push 0xa
pop eax
cmp word[ebp-8], ax
jne 0x488ae5
mov word[esi], ax
add esi, 2
jmp 0x488ac1
push 1
push 0xffffffffffffffff
push 0xfffffffffffffffe
push dword[ebp+8]
call fcn.0048825d
mov edx, dword[ebp-0xc]
add esp, 0x10
push 0xa
pop eax
cmp word[ebp-8], ax
je 0x488ac1
push 0xd
pop ecx
mov word[esi], cx
add esi, 2
jmp 0x488ac4
mov edx, dword[ebp-0xc]
push 0xd
pop ecx
mov word[esi], cx
add esi, 2
jmp 0x488ac4
mov ecx, dword[edx*4+0x4bd570]
mov al, byte[ecx+ebx+4]
test al, 0x40
jne 0x488b32
or al, 2
mov byte[ecx+ebx+4], al
jmp 0x488b3b
mov ax, word[edi]
mov word[esi], ax
add esi, 2
mov eax, dword[ebp-0x10]
mov edi, esi
sub edi, eax
jmp 0x48890e
call dword[sym.imp.KERNEL32.dll_GetLastError]
push 5
pop esi
cmp eax, esi
jne 0x488b6b
call fcn.00483caa
mov dword[eax], 9
call fcn.00483c76
mov dword[eax], esi
jmp 0x48864e
cmp eax, 0x6d
jne 0x488647
xor ebx, ebx
jmp 0x488651
xor eax, eax
jmp 0x488b99
call fcn.00483c76
mov dword[eax], edi
call fcn.00483caa
mov dword[eax], 9
call fcn.00485081
or eax, 0xffffffff
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/fb9b7d22bc1c143ac66b0575cbdd088d