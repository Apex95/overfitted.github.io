---
layout: post
title:  "fcn.1007bb10 @ 2585b133c2e70968905cce13b1fc2654"
date:   2021-08-30 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.1007bb10
- **Origin (md5):** 2585b133c2e70968905cce13b1fc2654
- **VirusTotal:** [virustotal.com/gui/file/2585b133c2e70968905cce13b1fc2654][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Similar Functions

1. [fcn.0041b500][similar_1_ref] (sim.: 0.9050556463226468)
2. [method.DuiLib꞉꞉CActiveXUI.virtual\_312][similar_2_ref] (sim.: 0.8944690807820994)
3. [method.DuiLib꞉꞉CActiveXUI.virtual\_312][similar_3_ref] (sim.: 0.8944690807820994)
4. [fcn.004b421e][similar_4_ref] (sim.: 0.8942104063400329)
5. [fcn.0042f902][similar_5_ref] (sim.: 0.890111742628342)


# Disassembled Code

{% highlight nasm %}
push 0xffffffffffffffff
push 0x1095ea52
mov eax,dword fs:[0]
push eax
mov eax,0x1444
call fcn.109067b0
mov eax,dword[0x10c992e8]
xor eax,esp
mov dword[esp+0x1440],eax
push ebx
push ebp
push esi
push edi
mov eax,dword[0x10c992e8]
xor eax,esp
push eax
lea eax,[esp+0x1458]
mov dword fs:[0],eax
mov ebp,ecx
xor ebx,ebx
mov ecx,0x10d02108
mov dword[esp+0x14],ebx
call fcn.101e5090
lea eax,[esp+0x14]
push eax
push 0x33
mov ecx,0x10d02108
call fcn.102055e0
push 0x208
lea ecx,[esp+0x249]
push ebx
push ecx
mov dword[esp+0x2c],ebx
mov byte[esp+0x250],bl
call sub.MSVCR80.dll_memset
push 0x200
lea edx,[esp+0x461]
push ebx
push edx
mov byte[esp+0x468],bl
call sub.MSVCR80.dll_memset
add esp,0x18
cmp dword[esp+0x14],ebx
je 0x1007c450
mov ecx,dword[ebp+0x12ac0]
lea edx,[esp+0x48]
mov dword[esp+0x48],ebx
mov eax,dword[ecx]
mov eax,dword[eax+0x24]
push edx
push 2
call eax
mov ecx,dword[esp+0x48]
mov edx,dword[esp+0x14]
mov dword[edx+0x65c],ecx
mov eax,dword[esp+0x14]
mov ecx,dword[esp+0x48]
mov dword[eax+0x100],ecx
mov ecx,dword[ebp+0x12ac0]
lea eax,[esp+0x20]
push eax
lea eax,[esp+0x23]
mov byte[esp+0x23],bl
mov dword[esp+0x24],1
mov edx,dword[ecx]
mov edx,dword[edx+0x28]
push eax
push 3
call edx
mov cl,byte[esp+0x1f]
test eax,eax
mov eax,dword[esp+0x14]
push 0x7f
lea edx,[esp+0xc9]
push ebx
mov byte[eax+0x868],cl
push edx
setne byte[esp+0x33]
mov byte[esp+0xd0],bl
call sub.MSVCR80.dll_memset
add esp,0xc
cmp byte[esp+0x27],bl
mov dword[esp+0x20],0x80
je 0x1007bc69
mov ecx,dword[ebp+0x12ac0]
mov eax,dword[ecx]
mov eax,dword[eax+0x28]
lea edx,[esp+0x20]
push edx
lea edx,[esp+0xc8]
push edx
push 4
call eax
mov edx,dword[esp+0x14]
movzx eax,byte[edx+0x868]
push 0x208
lea ecx,[esp+0x248]
push ecx
push eax
lea ecx,[esp+0xd0]
push ecx
mov ecx,ebp
call fcn.1003d810
lea edx,[esp+0x38]
push edx
lea eax,[esp+0x454]
push eax
lea ecx,[esp+0x24c]
push ecx
mov ecx,ebp
mov dword[esp+0x44],0x201
call fcn.1003da90
mov edi,dword[esp+0x14]
push 0x1ff
lea edx,[esp+0x659]
add edi,0x869
mov ecx,0x40
lea esi,[esp+0x454]
push ebx
rep movsd dword es:[edi],dword ptr[esi]
push edx
mov byte[esp+0x660],bl
call sub.MSVCR80.dll_memset
mov ecx,dword[ebp+0x12ac0]
add esp,0xc
lea edx,[esp+0x20]
push edx
lea edx,[esp+0x658]
mov dword[esp+0x24],0x200
mov eax,dword[ecx]
mov eax,dword[eax+0x28]
push edx
push 7
call eax
mov edi,dword[esp+0x14]
xor eax,eax
add edi,0x660
mov ecx,0x82
lea esi,[esp+0x654]
rep movsd dword es:[edi],dword ptr[esi]
mov ecx,dword[ebp+0x12ac0]
mov dword[esp+0xb5],eax
mov dword[esp+0xb9],eax
mov dword[esp+0xbd],eax
mov word[esp+0xc1],ax
mov byte[esp+0xc3],al
lea eax,[esp+0x20]
push eax
lea eax,[esp+0xb8]
mov byte[esp+0xb8],bl
mov dword[esp+0x24],0x10
mov edx,dword[ecx]
mov edx,dword[edx+0x28]
push eax
push 5
call edx
mov eax,dword[esp+0x14]
mov ecx,dword[esp+0xb4]
mov dword[eax+0x979],ecx
mov edx,dword[esp+0xb8]
add eax,0x979
mov dword[eax+4],edx
mov ecx,dword[esp+0xbc]
mov dword[eax+8],ecx
mov edx,dword[esp+0xc0]
mov dword[eax+0xc],edx
mov ecx,dword[ebp+0x12ac0]
push 1
lea edx,[esp+0x58]
push edx
mov dword[esp+0x5c],ebx
mov eax,dword[ecx]
mov dword[esp+0x44],ebx
push 7
mov eax,dword[eax+0x38]
call eax
push 0x3ff
lea ecx,[esp+0x859]
push ebx
push ecx
mov byte[esp+0x860],bl
call sub.MSVCR80.dll_memset
mov ecx,dword[ebp+0x12ac0]
add esp,0xc
push 1
lea eax,[esp+0x34]
push eax
mov dword[esp+0x38],ebx
mov edx,dword[ecx]
mov edx,dword[edx+0x30]
push ebx
push 8
call edx
mov eax,dword[0x11b824b8]
mov edx,dword[eax+0xc]
mov ecx,0x11b824b8
call edx
add eax,0x10
mov dword[esp+0x2c],eax
cmp dword[esp+0x30],ebx
mov dword[esp+0x1460],ebx
jle 0x1007c335
mov ecx,dword[ebp+0x12ac0]
mov eax,dword[ecx]
mov eax,dword[eax+0x30]
push 1
lea edx,[esp+0x34]
push edx
lea edx,[esp+0x85c]
push edx
push 8
call eax
push 0x3ff
lea ecx,[esp+0xc59]
push ebx
push ecx
mov byte[esp+0xc60],bl
call sub.MSVCR80.dll_memset
mov edx,dword[esp+0x3c]
push edx
lea eax,[esp+0x864]
push eax
lea ecx,[esp+0xc68]
push ecx
call sub.MSVCR80.dll_memcpy
add esp,0x18
lea edx,[esp+0xc54]
push edx
lea ecx,[esp+0x1c]
call fcn.100194a0
mov eax,dword[0x11b824b8]
mov edx,dword[eax+0xc]
mov ecx,0x11b824b8
mov byte[esp+0x1460],1
call edx
add eax,0x10
mov dword[esp+0x34],eax
mov eax,dword[0x11b824b8]
mov edx,dword[eax+0xc]
mov ecx,0x11b824b8
mov byte[esp+0x1460],2
call edx
add eax,0x10
mov dword[esp+0x40],eax
mov eax,dword[0x11b824b8]
mov edx,dword[eax+0xc]
mov ecx,0x11b824b8
mov byte[esp+0x1460],3
call edx
add eax,0x10
mov dword[esp+0x28],eax
mov ecx,dword[esp+0x18]
mov esi,dword[ecx-0xc]
cmp esi,ebx
mov byte[esp+0x1460],4
je 0x1007c186
mov dword[esp+0x38],ebx
cmp dword[ecx-0xc],ebx
jl 0x1007c178
push 0x109f1154
push ecx
call dword[sym.imp.MSVCR80.dll__mbsstr]
mov ecx,dword[esp+0x20]
add esp,8
cmp eax,ebx
je 0x1007c10b
sub eax,ecx
mov edi,eax
cmp edi,0xffffffff
je 0x1007c10b
push edi
push ebx
lea eax,[esp+0x58]
push eax
lea ecx,[esp+0x24]
call fcn.10072cd0
push eax
lea ecx,[esp+0x2c]
mov byte[esp+0x1464],5
call fcn.10077370
mov eax,dword[esp+0x50]
add eax,0xfffffff0
mov byte[esp+0x1460],4
lea ecx,[eax+0xc]
or edx,0xffffffff
lock xadd dword[ecx],edx
dec edx
test edx,edx
jg 0x1007bf7e
mov ecx,dword[eax]
mov edx,dword[ecx]
push eax
mov eax,dword[edx+4]
call eax
push esi
lea ecx,[edi+1]
push ecx
lea edx,[esp+0x60]
push edx
lea ecx,[esp+0x24]
call fcn.10072cd0
push eax
lea ecx,[esp+0x1c]
mov byte[esp+0x1464],6
call fcn.10077370
mov eax,dword[esp+0x58]
add eax,0xfffffff0
mov byte[esp+0x1460],4
lea ecx,[eax+0xc]
or edx,0xffffffff
lock xadd dword[ecx],edx
dec edx
test edx,edx
jg 0x1007bfcb
mov ecx,dword[eax]
mov edx,dword[ecx]
push eax
mov eax,dword[edx+4]
call eax
mov eax,dword[esp+0x28]
cmp dword[eax-0xc],ebx
jge 0x1007bfd9
or esi,0xffffffff
jmp 0x1007bff7
push 0x109f1150
push eax
call dword[sym.imp.MSVCR80.dll__mbsstr]
add esp,8
cmp eax,ebx
jne 0x1007bff1
or esi,0xffffffff
jmp 0x1007bff7
sub eax,dword[esp+0x28]
mov esi,eax
push esi
push ebx
lea ecx,[esp+0x64]
push ecx
lea ecx,[esp+0x34]
call fcn.10072cd0
push eax
lea ecx,[esp+0x38]
mov byte[esp+0x1464],7
call fcn.10077370
mov eax,dword[esp+0x5c]
add eax,0xfffffff0
mov byte[esp+0x1460],4
lea edx,[eax+0xc]
or ecx,0xffffffff
lock xadd dword[edx],ecx
dec ecx
test ecx,ecx
jg 0x1007c041
mov ecx,dword[eax]
mov edx,dword[ecx]
push eax
mov eax,dword[edx+4]
call eax
push edi
add esi,1
push esi
lea ecx,[esp+0x4c]
push ecx
lea ecx,[esp+0x34]
call fcn.10072cd0
push eax
lea ecx,[esp+0x44]
mov byte[esp+0x1464],8
call fcn.10077370
mov eax,dword[esp+0x44]
add eax,0xfffffff0
mov byte[esp+0x1460],4
lea edx,[eax+0xc]
or ecx,0xffffffff
lock xadd dword[edx],ecx
dec ecx
test ecx,ecx
jg 0x1007c08e
mov ecx,dword[eax]
mov edx,dword[ecx]
push eax
mov eax,dword[edx+4]
call eax
mov ecx,dword[esp+0x18]
mov edx,dword[esp+0x34]
mov esi,dword[ecx-0xc]
mov ecx,dword[edx-8]
mov eax,1
sub eax,dword[edx-4]
or ecx,eax
jge 0x1007c0b6
push ebx
lea ecx,[esp+0x38]
call fcn.10019150
mov edx,dword[esp+0x34]
mov edi,dword[esp+0x38]
mov ecx,edx
mov edx,dword[esp+0x14]
lea edx,[edi+edx+0x994]
mov al,byte[ecx]
mov byte[edx],al
add ecx,1
add edx,1
cmp al,bl
jne 0x1007c0c7
mov eax,dword[esp+0x40]
push eax
call dword[sym.imp.MSVCR80.dll_atoi]
mov ecx,dword[esp+0x18]
add dword[esp+0x40],1
mov dword[edi+ecx+0x9d4],eax
add edi,0x44
add esp,4
cmp esi,ebx
mov dword[esp+0x38],edi
je 0x1007c186
mov ecx,dword[esp+0x18]
jmp 0x1007bf03
cmp dword[ecx-0xc],ebx
jl 0x1007c178
push 0x109f114c
push ecx
call dword[sym.imp.MSVCR80.dll__mbsstr]
add esp,8
cmp eax,ebx
je 0x1007c178
sub eax,dword[esp+0x18]
cmp eax,0xffffffff
je 0x1007c178
push eax
push ebx
lea edx,[esp+0x4c]
push edx
lea ecx,[esp+0x24]
call fcn.10072cd0
push eax
lea ecx,[esp+0x30]
mov byte[esp+0x1464],9
call fcn.10077370
mov eax,dword[esp+0x44]
add eax,0xfffffff0
mov byte[esp+0x1460],4
lea ecx,[eax+0xc]
or edx,0xffffffff
lock xadd dword[ecx],edx
dec edx
test edx,edx
jg 0x1007c186
mov ecx,dword[eax]
mov edx,dword[ecx]
push eax
mov eax,dword[edx+4]
call eax
jmp 0x1007c186
lea ecx,[esp+0x18]
push ecx
lea ecx,[esp+0x30]
call fcn.10077370
push 0x3ff
lea edx,[esp+0x1059]
push ebx
push edx
mov byte[esp+0x1060],bl
call sub.MSVCR80.dll_memset
mov eax,dword[esp+0x3c]
push eax
lea ecx,[esp+0x864]
push ecx
lea edx,[esp+0x1068]
push edx
call sub.MSVCR80.dll_memcpy
add esp,0x18
lea eax,[esp+0x1054]
push eax
lea ecx,[esp+0x80]
call dword[sym.imp.MSVCP80.dll_public:_void___thiscall_std::basic_string_char__struct_std::char_traits_char___class_std::allocator_char__::constructor_char_const__]
lea ecx,[esp+0x60]
mov byte[esp+0x1460],0xa
call dword[sym.imp.MSVCP80.dll_public:_void___thiscall_std::basic_string_char__struct_std::char_traits_char___class_std::allocator_char__::constructor_void_]
push str._cf:
lea ecx,[esp+0x80]
mov byte[esp+0x1464],0xb
call dword[sym.imp.MSVCP80.dll_public:_char_const____thiscall_std::basic_string_char__struct_std::char_traits_char___class_std::allocator_char__::c_str_void_const]
push eax
call dword[sym.imp.MSVCR80.dll_strstr]
add esp,8
push eax
lea ecx,[esp+0x64]
call dword[0x109e634c]
mov ecx,dword[sym.imp.MSVCP80.dll_unsigned_int_const_std::basic_string_char__struct_std::char_traits_char___class_std::allocator_char__::npos]
mov edx,dword[ecx]
push edx
push 4
lea eax,[esp+0xa0]
push eax
lea ecx,[esp+0x6c]
call dword[sym.imp.MSVCP80.dll_public:_class_std::basic_string_char__struct_std::char_traits_char___class_std::allocator_char_____thiscall_std::basic_string_char__struct_std::char_traits_char___class_std::allocator_char__::substr_unsigned_int__unsigned_int_]
push 0xa
push ebx
lea ecx,[esp+0xa0]
mov byte[esp+0x1468],0xc
call dword[sym.imp.MSVCP80.dll_public:_char_const____thiscall_std::basic_string_char__struct_std::char_traits_char___class_std::allocator_char__::c_str_void_const]
push eax
call dword[sym.imp.MSVCR80.dll_strtol]
mov ecx,dword[esp+0x20]
mov word[ecx+0x2bb0],ax
add esp,0xc
lea ecx,[esp+0x98]
mov byte[esp+0x1460],0xb
call dword[sym.imp.MSVCP80.dll_public:_void___thiscall_std::basic_string_char__struct_std::char_traits_char___class_std::allocator_char__::destructor_void_]
lea ecx,[esp+0x60]
mov byte[esp+0x1460],0xa
call dword[sym.imp.MSVCP80.dll_public:_void___thiscall_std::basic_string_char__struct_std::char_traits_char___class_std::allocator_char__::destructor_void_]
lea ecx,[esp+0x7c]
mov byte[esp+0x1460],4
call dword[sym.imp.MSVCP80.dll_public:_void___thiscall_std::basic_string_char__struct_std::char_traits_char___class_std::allocator_char__::destructor_void_]
mov eax,dword[esp+0x28]
add eax,0xfffffff0
mov byte[esp+0x1460],3
lea edx,[eax+0xc]
or ecx,0xffffffff
lock xadd dword[edx],ecx
dec ecx
test ecx,ecx
jg 0x1007c2be
mov ecx,dword[eax]
mov edx,dword[ecx]
push eax
mov eax,dword[edx+4]
call eax
mov eax,dword[esp+0x40]
add eax,0xfffffff0
mov byte[esp+0x1460],2
lea ecx,[eax+0xc]
or edx,0xffffffff
lock xadd dword[ecx],edx
dec edx
test edx,edx
jg 0x1007c2e6
mov ecx,dword[eax]
mov edx,dword[ecx]
push eax
mov eax,dword[edx+4]
call eax
mov eax,dword[esp+0x34]
add eax,0xfffffff0
mov byte[esp+0x1460],1
lea ecx,[eax+0xc]
or edx,0xffffffff
lock xadd dword[ecx],edx
dec edx
test edx,edx
jg 0x1007c30e
mov ecx,dword[eax]
mov edx,dword[ecx]
push eax
mov eax,dword[edx+4]
call eax
mov eax,dword[esp+0x18]
add eax,0xfffffff0
mov byte[esp+0x1460],bl
lea ecx,[eax+0xc]
or edx,0xffffffff
lock xadd dword[ecx],edx
dec edx
test edx,edx
jg 0x1007c335
mov ecx,dword[eax]
mov edx,dword[ecx]
push eax
mov eax,dword[edx+4]
call eax
mov ecx,dword[esp+0x14]
mov edx,dword[esp+0x3c]
mov dword[ecx+0x990],edx
mov ecx,dword[esp+0x2c]
mov eax,1
sub eax,dword[ecx-4]
mov ecx,dword[ecx-8]
or ecx,eax
jge 0x1007c360
push ebx
lea ecx,[esp+0x30]
call fcn.10019150
mov edx,dword[esp+0x14]
mov ecx,dword[esp+0x2c]
add edx,0x45c
mov edi,edi
mov al,byte[ecx]
mov byte[edx],al
add ecx,1
add edx,1
cmp al,bl
jne 0x1007c370
call fcn.10638f70
mov ecx,eax
call fcn.10638860
call fcn.10638f70
mov ecx,eax
call fcn.10638c00
push eax
call dword[sym.imp.WS2_32.dll_inet_addr]
push eax
call dword[sym.imp.WS2_32.dll_ntohl]
mov ecx,dword[esp+0x14]
mov dword[ecx+0x98c],eax
mov edi,dword[esp+0x14]
add edi,0x416
mov ecx,8
mov esi,str.937aa350ae04ab8763ea23f1cc2fb99c
rep movsd dword es:[edi],dword ptr[esi]
movsb byte es:[edi],byte ptr[esi]
mov eax,dword[esp+0x14]
mov edx,dword[str.17601900]
mov dword[eax+0x437],edx
mov ecx,dword[0x109f1118]
add eax,0x437
mov dword[eax+4],ecx
mov dl,byte[0x109f111c]
mov byte[eax+8],dl
mov ebp,dword[ebp+0x12ac0]
push 1
lea ecx,[esp+0x50]
mov dword[esp+0x50],ebx
mov eax,dword[ebp]
mov edx,dword[eax+0x38]
push ecx
push 5
mov ecx,ebp
call edx
mov eax,dword[esp+0x4c]
push eax
call fcn.10638f70
mov ecx,eax
call fcn.10638850
mov ecx,dword[esp+0x14]
mov eax,dword[esp+0x2c]
add eax,0xfffffff0
mov byte[ecx+0x2b94],1
mov dword[esp+0x1460],0xffffffff
lea edx,[eax+0xc]
or ecx,0xffffffff
lock xadd dword[edx],ecx
dec ecx
test ecx,ecx
jg 0x1007c450
mov ecx,dword[eax]
mov edx,dword[ecx]
push eax
mov eax,dword[edx+4]
call eax
push 0xff
lea ecx,[esp+0x149]
push ebx
push ecx
mov byte[esp+0x150],bl
call sub.MSVCR80.dll_memset
add esp,0xc
push 0x100
lea edx,[esp+0x148]
push edx
push ebx
call dword[sym.imp.KERNEL32.dll_GetModuleFileNameA]
lea eax,[esp+0x144]
lea edx,[eax+1]
jmp 0x1007c490
mov cl,byte[eax]
add eax,1
cmp cl,bl
jne 0x1007c490
sub eax,edx
sub eax,1
cmp eax,ebx
jle 0x1007c4b4
mov cl,0x5c
cmp byte[esp+eax+0x144],cl
je 0x1007c4b4
sub eax,1
cmp eax,ebx
jg 0x1007c4a4
mov ecx,dword[0x10ca8254]
lea eax,[esp+eax+0x145]
push eax
call fcn.1003d410
mov esi,dword[sym.imp.MSVCR80.dll_strtoul]
push 0x10
push ebx
push eax
call esi
mov ecx,dword[esp+0x20]
add esp,0xc
mov dword[ecx+0x450],eax
mov ecx,dword[0x10ca8254]
push str.cshell.dll
call fcn.1003d410
push 0x10
push ebx
push eax
call esi
mov edx,dword[esp+0x20]
mov dword[edx+0x454],eax
add esp,0xc
mov al,1
mov ecx,dword[esp+0x1458]
mov dword fs:[0],ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx,dword[esp+0x1440]
xor ecx,esp
call fcn.1090658a
add esp,0x1450
ret
{% endhighlight %}


[similar_1_ref]: /report/fcn.0041b500@be7fba7cc724acf4ae2900d99e0fc9c3
[similar_2_ref]: /report/method.DuiLib꞉꞉CActiveXUI.virtual_312@279a61b1e76da49531f1f16fd1102a2d
[similar_3_ref]: /report/method.DuiLib꞉꞉CActiveXUI.virtual_312@289859175c221b107317af7727d26c17
[similar_4_ref]: /report/fcn.004b421e@b3771987fba16f4fba07d1109ec72c76
[similar_5_ref]: /report/fcn.0042f902@b49682c7791beec133296706671e7cb3
[virustotal_ref]: https://www.virustotal.com/gui/file/2585b133c2e70968905cce13b1fc2654