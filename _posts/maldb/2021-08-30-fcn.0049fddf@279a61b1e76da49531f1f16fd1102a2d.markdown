---
layout: post
title:  "fcn.0049fddf @ 279a61b1e76da49531f1f16fd1102a2d"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0049fddf
- **Origin (md5):** 279a61b1e76da49531f1f16fd1102a2d
- **VirusTotal:** [virustotal.com/gui/file/279a61b1e76da49531f1f16fd1102a2d][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [16.45098114013672, 367.9959411621094, '<b><a href="/report/fcn.0049fddf@279a61b1e76da49531f1f16fd1102a2d">fcn.0049fddf</a><br>@279a61b1e76da49531f1f16fd1102a2d</b><br>', 'point { fill-color: #e0440e; }'],
[-190.18931579589844, -15.825434684753418, '<b><a href="/report/fcn.004fb462@e2ba7f10eb234338a49853c34d7d9c56">fcn.004fb462</a><br>@e2ba7f10eb234338a49853c34d7d9c56</b><br>', 'null'],
[-112.09192657470703, 113.49188995361328, '<b><a href="/report/fcn.0041c4e3@505be53c36227b94e2fcc406f247f6e5">fcn.0041c4e3</a><br>@505be53c36227b94e2fcc406f247f6e5</b><br>', 'null'],
[-61.24589920043945, -11.696961402893066, '<b><a href="/report/fcn.0041ce11@20a93604f17ee6f3c2aa7b1f7a497fcf">fcn.0041ce11</a><br>@20a93604f17ee6f3c2aa7b1f7a497fcf</b><br>', 'null'],
[153.70265197753906, 54.096046447753906, '<b><a href="/report/fcn.004948d2@4fe6510221c33bf023f6abed461fc13f">fcn.004948d2</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>', 'null'],
[24.603044509887695, 106.50806427001953, '<b><a href="/report/fcn.0041c184@9571c7458fae91969aaed3955e433f49">fcn.0041c184</a><br>@9571c7458fae91969aaed3955e433f49</b><br>', 'null'],
[51.211177825927734, -30.983762741088867, '<b><a href="/report/fcn.0041c184@3aa98225e51cbcae2d334c8b6b4ed9fd">fcn.0041c184</a><br>@3aa98225e51cbcae2d334c8b6b4ed9fd</b><br>', 'null'],
[-106.72765350341797, -138.498779296875, '<b><a href="/report/fcn.0041c2c1@e16f74a2849182d98050864255e902f8">fcn.0041c2c1</a><br>@e16f74a2849182d98050864255e902f8</b><br>', 'null'],
[110.76451110839844, 350.2633972167969, '<b><a href="/report/fcn.0047e540@289859175c221b107317af7727d26c17">fcn.0047e540</a><br>@289859175c221b107317af7727d26c17</b><br>', 'null'],
[25.249998092651367, -164.2322540283203, '<b><a href="/report/fcn.0041c184@44a756939733df3681808b122b91651f">fcn.0041c184</a><br>@44a756939733df3681808b122b91651f</b><br>', 'null'],
[158.19281005859375, -102.02298736572266, '<b><a href="/report/fcn.0041c4e3@96a869ae624ddb4834a1d5a829f85469">fcn.0041c4e3</a><br>@96a869ae624ddb4834a1d5a829f85469</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

mov edi, edi
push ebp
mov ebp, esp
mov eax, 0x1ae4
call fcn.00491440
mov eax, dword[0x53ebd0]
xor eax, ebp
mov dword[ebp-4], eax
mov eax, dword[ebp+0xc]
push esi
xor esi, esi
mov dword[ebp-0x1acc], eax
mov dword[ebp-0x1ac8], esi
mov dword[ebp-0x1ad0], esi
cmp dword[ebp+0x10], esi
jne off.b61
xor eax, eax
jmp off.b1830
cmp eax, esi
jne off.b104
call fcn.00495b7f
mov dword[eax], esi
call fcn.00495b6c
push esi
push esi
push esi
push esi
push esi
mov dword[eax], 0x16
call fcn.0049389f
add esp, 0x14
or eax, 0xffffffff
jmp off.b1830
push ebx
push edi
mov edi, dword[ebp+8]
mov eax, edi
sar eax, 5
lea esi, [eax*4+0x5447e0]
mov eax, dword[esi]
and edi, 0x1f
shl edi, 6
add eax, edi
mov bl, byte[eax+0x24]
add bl, bl
sar bl, 1
mov dword[ebp-0x1ad8], esi
mov byte[ebp-0x1ad9], bl
cmp bl, 2
je off.b160
cmp bl, 1
jne off.b208
mov ecx, dword[ebp+0x10]
not ecx
test cl, 1
jne off.b208
call fcn.00495b7f
xor esi, esi
mov dword[eax], esi
call fcn.00495b6c
push esi
push esi
push esi
push esi
push esi
mov dword[eax], 0x16
call fcn.0049389f
add esp, 0x14
jmp off.b1811
test byte[eax+4], 0x20
je off.b231
push 2
push 0
push 0
push dword[ebp+8]
call fcn.004a9f8b
add esp, 0x10
push dword[ebp+8]
call fcn.004aa129
pop ecx
test eax, eax
je off.b917
mov eax, dword[esi]
test byte[edi+eax+4], 0x80
je off.b917
call fcn.0049bf09
mov eax, dword[eax+0x6c]
xor ecx, ecx
cmp dword[eax+0x14], ecx
lea eax, [ebp-0x1ae4]
sete cl
push eax
mov eax, dword[esi]
push dword[edi+eax]
mov dword[ebp-0x1ae0], ecx
call dword[sym.imp.KERNEL32.dll_GetConsoleMode]
test eax, eax
je off.b917
xor ecx, ecx
cmp dword[ebp-0x1ae0], ecx
je off.b327
test bl, bl
je off.b919
call dword[sym.imp.KERNEL32.dll_GetConsoleCP]
mov ebx, dword[ebp-0x1acc]
mov dword[ebp-0x1ae4], eax
xor eax, eax
mov dword[ebp-0x1ac4], eax
cmp dword[ebp+0x10], eax
jbe off.b1708
mov dword[ebp-0x1abc], eax
mov al, byte[ebp-0x1ad9]
test al, al
jne off.b741
mov cl, byte[ebx]
mov esi, dword[ebp-0x1ad8]
xor eax, eax
cmp cl, 0xa
sete al
mov dword[ebp-0x1ae0], eax
mov eax, dword[esi]
add eax, edi
cmp dword[eax+0x38], 0
je off.b435
mov dl, byte[eax+0x34]
mov byte[ebp-0xc], dl
mov byte[ebp-0xb], cl
and dword[eax+0x38], 0
push 2
lea eax, [ebp-0xc]
push eax
jmp off.b510
movsx eax, cl
push eax
call fcn.0049675c
pop ecx
test eax, eax
je off.b507
mov ecx, dword[ebp-0x1acc]
sub ecx, ebx
add ecx, dword[ebp+0x10]
xor eax, eax
inc eax
cmp ecx, eax
jbe off.b892
push 2
lea eax, [ebp-0x1ac0]
push ebx
push eax
call fcn.004aa4cc
add esp, 0xc
cmp eax, 0xffffffff
je off.b1699
inc ebx
inc dword[ebp-0x1abc]
jmp off.b534
push 1
push ebx
lea eax, [ebp-0x1ac0]
push eax
call fcn.004aa4cc
add esp, 0xc
cmp eax, 0xffffffff
je off.b1699
xor eax, eax
push eax
push eax
push 5
lea ecx, [ebp-0xc]
push ecx
push 1
lea ecx, [ebp-0x1ac0]
push ecx
push eax
push dword[ebp-0x1ae4]
inc ebx
inc dword[ebp-0x1abc]
call dword[sym.imp.KERNEL32.dll_WideCharToMultiByte]
mov esi, eax
test esi, esi
je off.b1699
push 0
lea eax, [ebp-0x1ac4]
push eax
push esi
lea eax, [ebp-0xc]
push eax
mov eax, dword[ebp-0x1ad8]
mov eax, dword[eax]
push dword[edi+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je off.b1687
mov eax, dword[ebp-0x1abc]
mov ecx, dword[ebp-0x1ad0]
add eax, ecx
cmp dword[ebp-0x1ac4], esi
mov dword[ebp-0x1ac8], eax
jl off.b1699
cmp dword[ebp-0x1ae0], 0
je off.b872
push 0
lea eax, [ebp-0x1ac4]
push eax
push 1
lea eax, [ebp-0xc]
push eax
mov eax, dword[ebp-0x1ad8]
mov eax, dword[eax]
mov byte[ebp-0xc], 0xd
push dword[edi+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je off.b1687
cmp dword[ebp-0x1ac4], 1
jl off.b1699
inc dword[ebp-0x1ad0]
inc dword[ebp-0x1ac8]
jmp off.b872
cmp al, 1
je off.b749
cmp al, 2
jne off.b782
movzx esi, word[ebx]
xor ecx, ecx
cmp si, 0xa
sete cl
inc ebx
inc ebx
add dword[ebp-0x1abc], 2
mov dword[ebp-0x1ac0], esi
mov dword[ebp-0x1ae0], ecx
cmp al, 1
je off.b790
cmp al, 2
jne off.b872
push dword[ebp-0x1ac0]
call fcn.004aaaeb
pop ecx
cmp ax, word[ebp-0x1ac0]
jne off.b1687
add dword[ebp-0x1ac8], 2
cmp dword[ebp-0x1ae0], 0
je off.b872
push 0xd
pop eax
push eax
mov dword[ebp-0x1ac0], eax
call fcn.004aaaeb
pop ecx
cmp ax, word[ebp-0x1ac0]
jne off.b1687
inc dword[ebp-0x1ac8]
inc dword[ebp-0x1ad0]
mov eax, dword[ebp+0x10]
cmp dword[ebp-0x1abc], eax
jb off.b368
jmp off.b1699
mov ecx, dword[esi]
mov dl, byte[ebx]
inc dword[ebp-0x1ac8]
mov byte[edi+ecx+0x34], dl
mov ecx, dword[esi]
mov dword[edi+ecx+0x38], eax
jmp off.b1699
xor ecx, ecx
mov eax, dword[esi]
add eax, edi
test byte[eax+4], 0x80
je off.b1636
mov eax, dword[ebp-0x1acc]
mov dword[ebp-0x1ac0], ecx
test bl, bl
jne off.b1155
mov dword[ebp-0x1ac4], eax
cmp dword[ebp+0x10], ecx
jbe off.b1768
jmp off.b976
mov esi, dword[ebp-0x1ad8]
mov ecx, dword[ebp-0x1ac4]
and dword[ebp-0x1abc], 0
sub ecx, dword[ebp-0x1acc]
lea eax, [ebp-0x1ab8]
cmp ecx, dword[ebp+0x10]
jae off.b1063
mov edx, dword[ebp-0x1ac4]
inc dword[ebp-0x1ac4]
mov dl, byte[edx]
inc ecx
cmp dl, 0xa
jne off.b1042
inc dword[ebp-0x1ad0]
mov byte[eax], 0xd
inc eax
inc dword[ebp-0x1abc]
mov byte[eax], dl
inc eax
inc dword[ebp-0x1abc]
cmp dword[ebp-0x1abc], 0x13ff
jb off.b1001
mov ebx, eax
lea eax, [ebp-0x1ab8]
sub ebx, eax
push 0
lea eax, [ebp-0x1ad4]
push eax
push ebx
lea eax, [ebp-0x1ab8]
push eax
mov eax, dword[esi]
push dword[edi+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je off.b1687
mov eax, dword[ebp-0x1ad4]
add dword[ebp-0x1ac8], eax
cmp eax, ebx
jl off.b1699
mov eax, dword[ebp-0x1ac4]
sub eax, dword[ebp-0x1acc]
cmp eax, dword[ebp+0x10]
jb off.b970
jmp off.b1699
mov dword[ebp-0x1abc], eax
cmp bl, 2
jne off.b1379
cmp dword[ebp+0x10], ecx
jbe off.b1768
jmp off.b1187
mov esi, dword[ebp-0x1ad8]
mov ecx, dword[ebp-0x1abc]
and dword[ebp-0x1ac4], 0
sub ecx, dword[ebp-0x1acc]
lea eax, [ebp-0x1ab8]
cmp ecx, dword[ebp+0x10]
jae off.b1287
mov edx, dword[ebp-0x1abc]
add dword[ebp-0x1abc], 2
movzx edx, word[edx]
inc ecx
inc ecx
cmp dx, 0xa
jne off.b1263
add dword[ebp-0x1ad0], 2
push 0xd
pop ebx
mov word[eax], bx
inc eax
inc eax
add dword[ebp-0x1ac4], 2
add dword[ebp-0x1ac4], 2
mov word[eax], dx
inc eax
inc eax
cmp dword[ebp-0x1ac4], 0x13fe
jb off.b1212
mov ebx, eax
lea eax, [ebp-0x1ab8]
sub ebx, eax
push 0
lea eax, [ebp-0x1ad4]
push eax
push ebx
lea eax, [ebp-0x1ab8]
push eax
mov eax, dword[esi]
push dword[edi+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je off.b1687
mov eax, dword[ebp-0x1ad4]
add dword[ebp-0x1ac8], eax
cmp eax, ebx
jl off.b1699
mov eax, dword[ebp-0x1abc]
sub eax, dword[ebp-0x1acc]
cmp eax, dword[ebp+0x10]
jb off.b1181
jmp off.b1699
cmp dword[ebp+0x10], ecx
jbe off.b1768
mov ecx, dword[ebp-0x1abc]
and dword[ebp-0x1ac4], 0
sub ecx, dword[ebp-0x1acc]
push 2
lea eax, [ebp-0x6b8]
pop esi
cmp ecx, dword[ebp+0x10]
jae off.b1481
mov edx, dword[ebp-0x1abc]
movzx edx, word[edx]
add dword[ebp-0x1abc], esi
add ecx, esi
cmp dx, 0xa
jne off.b1458
push 0xd
pop ebx
mov word[eax], bx
add eax, esi
add dword[ebp-0x1ac4], esi
add dword[ebp-0x1ac4], esi
mov word[eax], dx
add eax, esi
cmp dword[ebp-0x1ac4], 0x6a8
jb off.b1416
xor esi, esi
push esi
push esi
push 0xd55
lea ecx, [ebp-0x1410]
push ecx
lea ecx, [ebp-0x6b8]
sub eax, ecx
cdq
sub eax, edx
sar eax, 1
push eax
mov eax, ecx
push eax
push esi
push 0xfde9
call dword[sym.imp.KERNEL32.dll_WideCharToMultiByte]
mov ebx, eax
cmp ebx, esi
je off.b1687
push 0
lea eax, [ebp-0x1ad4]
push eax
mov eax, ebx
sub eax, esi
push eax
lea eax, [ebp+esi-0x1410]
push eax
mov eax, dword[ebp-0x1ad8]
mov eax, dword[eax]
push dword[edi+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je off.b1591
add esi, dword[ebp-0x1ad4]
cmp ebx, esi
jg off.b1536
jmp off.b1603
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov dword[ebp-0x1ac0], eax
cmp ebx, esi
jg off.b1699
mov eax, dword[ebp-0x1abc]
sub eax, dword[ebp-0x1acc]
mov dword[ebp-0x1ac8], eax
cmp eax, dword[ebp+0x10]
jb off.b1388
jmp off.b1699
push 0
lea ecx, [ebp-0x1ad4]
push ecx
push dword[ebp+0x10]
push dword[ebp-0x1acc]
push dword[eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je off.b1687
mov eax, dword[ebp-0x1ad4]
and dword[ebp-0x1ac0], 0
mov dword[ebp-0x1ac8], eax
jmp off.b1699
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov dword[ebp-0x1ac0], eax
cmp dword[ebp-0x1ac8], 0
jne off.b1816
cmp dword[ebp-0x1ac0], 0
je off.b1762
push 5
pop esi
cmp dword[ebp-0x1ac0], esi
jne off.b1748
call fcn.00495b6c
mov dword[eax], 9
call fcn.00495b7f
mov dword[eax], esi
jmp off.b1811
push dword[ebp-0x1ac0]
call fcn.00495b92
pop ecx
jmp off.b1811
mov esi, dword[ebp-0x1ad8]
mov eax, dword[esi]
test byte[edi+eax+4], 0x40
je off.b1792
mov eax, dword[ebp-0x1acc]
cmp byte[eax], 0x1a
jne off.b1792
xor eax, eax
jmp off.b1828
call fcn.00495b6c
mov dword[eax], 0x1c
call fcn.00495b7f
and dword[eax], 0
or eax, 0xffffffff
jmp off.b1828
mov eax, dword[ebp-0x1ac8]
sub eax, dword[ebp-0x1ad0]
pop edi
pop ebx
mov ecx, dword[ebp-4]
xor ecx, ebp
pop esi
call fcn.00490ace
leave
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/279a61b1e76da49531f1f16fd1102a2d