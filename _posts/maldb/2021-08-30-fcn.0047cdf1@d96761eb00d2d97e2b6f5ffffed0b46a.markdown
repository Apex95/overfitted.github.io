---
layout: post
title:  "fcn.0047cdf1 @ d96761eb00d2d97e2b6f5ffffed0b46a"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0047cdf1
- **Origin (md5):** d96761eb00d2d97e2b6f5ffffed0b46a
- **VirusTotal:** [virustotal.com/gui/file/d96761eb00d2d97e2b6f5ffffed0b46a][virustotal_ref]

# Code Tags
<span class="tag" id="PROCESS">PROCESS</span>
<span class="tag" id="LINKING">LINKING</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.0047cdf1@d96761eb00d2d97e2b6f5ffffed0b46a">fcn.0047cdf1</a><br>@d96761eb00d2d97e2b6f5ffffed0b46a</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
and esp, 0xfffffff8
sub esp, 0x394
push ebx
xor eax, eax
cmp byte[ebp+0x10], al
push esi
setne al
xor ebx, ebx
push edi
mov edi, ecx
cwde
mov ecx, dword[ebp+8]
mov dword[esp+0x28], eax
shl eax, 2
mov dword[esp+0x20], edi
mov ecx, dword[ecx+4]
sub ecx, eax
mov dword[esp+0x38], ebx
mov esi, dword[ecx+4]
mov ecx, esi
call fcn.00409997
mov ecx, dword[esi+8]
mov eax, dword[ecx]
mov dword[esp+0x60], eax
mov eax, dword[ecx+4]
mov dword[esp+0x64], eax
mov eax, dword[ecx+8]
mov dword[esp+0x68], eax
mov eax, dword[ecx+0xc]
mov ecx, dword[esp+0x28]
mov dword[esp+0x6c], eax
add ecx, 0xfffffffd
inc dword[eax]
mov eax, dword[ebp+8]
mov eax, dword[eax+8]
add ecx, eax
mov eax, ecx
mov dword[esp+0x7c], ecx
cdq
sub eax, edx
mov edx, eax
sar edx, 1
mov dword[esp+0x1c], edx
lea eax, [edx+edx]
cmp eax, ecx
je off.b171
mov esi, dword[ebp+0xc]
mov ecx, esi
call fcn.00409a20
mov dword[esi+0xc], 1
mov dword[esi], ebx
mov eax, dword[edi]
push ebx
push 4
mov ecx, dword[eax+4]
add ecx, edi
call fcn.00456aa3
jmp off.b1262
lea eax, [esp+0x70]
mov dword[esp+0x7c], edx
push eax
lea eax, [esp+0x64]
mov dword[esp+0x44], 0x4bb08c
push eax
mov dword[esp+0x4c], ebx
or esi, 0xffffffff
mov dword[esp+0x50], ebx
mov dword[esp+0x54], ebx
call fcn.0047dab9
test al, al
jne off.b256
mov esi, dword[ebp+0xc]
mov ecx, esi
call fcn.00409a20
mov dword[esi+0xc], 1
mov dword[esi], ebx
mov eax, dword[edi]
push ebx
push 2
mov ecx, dword[eax+4]
add ecx, edi
call fcn.00456aa3
jmp off.b1253
push 3
pop eax
sub eax, dword[esp+0x28]
mov dword[esp+0x34], eax
mov dword[esp+0x78], ebx
mov dword[esp+0x14], ebx
cmp dword[esp+0x7c], ebx
jle off.b736
mov edi, dword[ebp+8]
shl eax, 2
mov dword[esp+0x18], eax
lea eax, [esp+0xc]
inc esi
push eax
lea ecx, [esp+0x44]
mov dword[esp+0x10], esi
call fcn.0046f835
mov eax, dword[edi+4]
mov ecx, dword[esp+0x18]
mov esi, dword[ecx+eax]
mov ecx, esi
call fcn.00409997
mov ecx, dword[esi+8]
mov esi, dword[esp+0xc]
mov dword[esp+0xc], esi
mov eax, dword[ecx]
mov dword[esp+0x50], eax
mov eax, dword[ecx+4]
mov dword[esp+0x54], eax
mov eax, dword[ecx+8]
mov dword[esp+0x58], eax
mov eax, dword[ecx+0xc]
mov dword[esp+0x5c], eax
inc dword[eax]
imul eax, esi, 0x18
mov dword[esp+0x30], eax
lea eax, [esp+eax+0xa0]
push eax
lea eax, [esp+0x54]
push eax
call fcn.0047d2f3
test al, al
je off.b1055
mov eax, dword[esp+0x30]
lea edx, [esp+0xa8]
add edx, eax
mov dword[esp+0x2c], edx
cmp dword[edx], 0x10
jne off.b688
cmp dword[esp+eax+0xac], ebx
jne off.b688
mov ecx, dword[edi+4]
mov eax, dword[esp+0x18]
mov dword[esp+0x10], ecx
mov ecx, dword[ecx+eax+4]
cmp dword[ecx+0xc], 0xc
jne off.b1033
call fcn.004689e2
mov ecx, dword[esp+0x30]
dec eax
shr eax, 2
add dword[esp+0x1c], eax
mov dword[esp+0x24], eax
inc eax
imul eax, dword[esp+ecx+0xb0]
mov ecx, dword[esp+0x1c]
add dword[esp+0x78], eax
mov eax, dword[esp+0x24]
sub ecx, eax
cmp ecx, esi
jle off.b586
imul eax, ecx, 0x18
lea ebx, [esp+0xa0]
lea edx, [esp+0xa0]
add ebx, eax
mov eax, dword[esp+0x24]
add eax, ecx
imul eax, eax, 0x18
add edx, eax
sub ecx, esi
mov dword[esp+0x3c], ecx
mov eax, ecx
push 6
mov esi, ebx
mov edi, edx
pop ecx
sub ebx, 0x18
sub edx, 0x18
rep movsd
dec eax
jne off.b554
mov esi, dword[esp+0xc]
xor ebx, ebx
mov edx, dword[esp+0x2c]
mov eax, dword[esp+0x24]
mov edi, dword[esp+0x10]
mov ecx, dword[esp+0x18]
mov ecx, dword[edi+ecx+4]
mov edi, dword[ebp+8]
cmp dword[ecx+0xc], 0xc
jne off.b611
mov ecx, dword[ecx]
jmp off.b613
mov ecx, ebx
mov ecx, dword[ecx+8]
mov dword[esp+0x10], ecx
lea ecx, [esi+1]
add ecx, eax
cmp esi, ecx
jge off.b685
mov edi, dword[esp+0x30]
sub ecx, esi
add esi, ecx
mov dword[esp+0xc], esi
mov esi, dword[esp+0x10]
mov eax, dword[esi]
lea esi, [esi+4]
mov dword[edx-8], eax
mov dword[edx], 0x10
lea edx, [edx+0x18]
mov dword[edx-0x14], ebx
mov eax, dword[esp+edi+0xb0]
mov dword[edx-0x10], eax
dec ecx
jne off.b645
mov esi, dword[esp+0xc]
mov edi, dword[ebp+8]
dec esi
jmp off.b699
mov eax, dword[esp+eax+0xb0]
add dword[esp+0x78], eax
add dword[esp+0x18], 8
lea ecx, [esp+0x50]
call fcn.00405a64
mov eax, dword[esp+0x14]
inc eax
mov dword[esp+0x14], eax
cmp eax, dword[esp+0x7c]
jl off.b295
mov edi, dword[esp+0x20]
cmp byte[ebp+0x10], 0
je off.b1105
mov eax, dword[ebp+8]
mov eax, dword[eax+4]
mov ecx, dword[eax+4]
call fcn.004689bb
mov dword[esp+0x70], eax
sub esp, 0x10
lea eax, [esp+0x50]
mov ecx, esp
push eax
call fcn.0047cc82
push 4
pop eax
sub eax, dword[esp+0x38]
push eax
push dword[ebp+8]
lea eax, [esp+0x88]
push eax
call fcn.0047dd64
mov esi, dword[esp+0x7c]
mov eax, dword[esp+0x1c]
mov dword[esp+0x7c], eax
lea eax, [esp+0x70]
push eax
call fcn.00420e48
test eax, eax
jne off.b854
push 0xffffffffffffffff
push 0x67
mov ecx, edi
call fcn.0046a0b5
push ebx
call dword[sym.imp.KERNEL32.dll_GetCurrentProcess]
push eax
call dword[sym.imp.KERNEL32.dll_TerminateProcess]
mov ecx, dword[ebp+0xc]
mov dword[esp+0x7c], esi
call fcn.0040942e
mov ecx, dword[esp+0x7c]
xor edi, edi
inc ecx
mov esi, eax
push ecx
inc edi
mov dword[esp+0x14], esi
push edi
push esi
call fcn.004091b0
add esp, 0xc
cmp dword[esp+0x80], edi
jne off.b927
push ebx
push edi
push 2
push esi
call fcn.00408ea0
add esp, 0x10
push eax
lea eax, [esp+0x8c]
push eax
call fcn.0047d95d
cmp dword[esp+0x7c], 0
jle off.b1223
mov esi, dword[esp+0x34]
shl esi, 2
mov dword[esp+0x14], esi
lea eax, [ebx+1]
push eax
push edi
push 2
push dword[esp+0x1c]
mov dword[esp+0x3c], eax
call fcn.00408ea0
mov ecx, dword[esp+0x54]
add esp, 0x10
mov dword[esp+0x34], eax
mov ecx, dword[ecx+ebx*4]
imul ecx, dword[ecx], 0x18
cmp dword[esp+ecx+0xa8], 0x10
jne off.b1186
mov ecx, dword[ebp+8]
mov ecx, dword[ecx+4]
mov ecx, dword[ecx+esi+4]
cmp dword[ecx+0xc], 0xc
jne off.b1153
push ecx
mov ecx, eax
call fcn.00409e9c
jmp off.b1202
mov esi, dword[ebp+0xc]
mov ecx, esi
call fcn.00409a20
push ebx
mov dword[esi+0xc], 1
push 5
jmp off.b1073
mov esi, dword[ebp+0xc]
mov ecx, esi
call fcn.00409a20
xor edi, edi
inc edi
push ebx
mov dword[esi+0xc], edi
push edi
mov edx, dword[esp+0x28]
mov dword[esi], ebx
mov eax, dword[edx]
mov ecx, dword[eax+4]
add ecx, edx
call fcn.00456aa3
lea ecx, [esp+0x50]
call fcn.00405a64
jmp off.b1253
push dword[ebp+8]
lea eax, [esp+0x74]
mov ecx, edi
push eax
call fcn.0047dbdc
mov dword[esp+0x38], eax
test eax, eax
jne off.b764
mov esi, dword[ebp+0xc]
mov ecx, esi
call fcn.00409a20
mov dword[esi+0xc], 1
mov dword[esi], ebx
jmp off.b1253
call fcn.004689bb
mov ebx, dword[esp+0x34]
mov esi, eax
mov ecx, ebx
call fcn.00409a20
mov dword[ebx], esi
mov esi, dword[esp+0x14]
mov dword[ebx+0xc], 7
jmp off.b1202
push eax
lea eax, [esp+0xa4]
add eax, ecx
push eax
call fcn.0047d95d
mov ebx, dword[esp+0x2c]
add esi, 8
mov dword[esp+0x14], esi
cmp ebx, dword[esp+0x7c]
jl off.b949
cmp byte[ebp+0x10], 0
jne off.b1253
mov eax, dword[ebp+8]
mov eax, dword[eax+4]
mov eax, dword[eax]
cmp dword[eax+0xc], 4
jne off.b1253
push dword[esp+0x38]
call dword[sym.imp.KERNEL32.dll_FreeLibrary]
lea ecx, [esp+0x40]
call fcn.0047cd60
lea ecx, [esp+0x60]
call fcn.00405a64
pop edi
pop esi
xor eax, eax
pop ebx
mov esp, ebp
pop ebp
ret 0xc

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/d96761eb00d2d97e2b6f5ffffed0b46a