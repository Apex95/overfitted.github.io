---
layout: post
title:  "fcn.00497a40 @ 7453c96a6fbd42ec690b8deb53eafcba"
date:   2021-08-30 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00497a40
- **Origin (md5):** 7453c96a6fbd42ec690b8deb53eafcba
- **VirusTotal:** [virustotal.com/gui/file/7453c96a6fbd42ec690b8deb53eafcba][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Similar Functions

1. [fcn.10bd17cf][similar_1_ref] (sim.: 0.9039553218201055)
2. [fcn.004daef0][similar_2_ref] (sim.: 0.9001340207069602)
3. [fcn.00455f70][similar_3_ref] (sim.: 0.9001340207069602)
4. [fcn.0040b180][similar_4_ref] (sim.: 0.8952004232874785)
5. [fcn.0040ab30][similar_5_ref] (sim.: 0.8931638885499531)


# Disassembled Code

{% highlight nasm %}
push 0xffffffffffffffff
push 0x5aca2a
mov eax,dword fs:[0]
push eax
mov dword fs:[0],esp
sub esp,0x230
push ebx
mov ebx,dword[esp+0x248]
push ebp
push esi
push edi
push ebx
call fcn.0049c230
mov edi,eax
xor esi,esi
add esp,4
mov dword[esp+0x30],edi
mov eax,dword[edi+0xbc]
mov dword[esp+0x84],esi
cmp eax,esi
mov dword[esp+0x90],esi
jne 0x497aa6
mov eax,dword[edi+0x1c]
push eax
call dword[sym.imp.USER32.dll_GetDC]
push eax
mov dword[esp+0x94],eax
call fcn.005a4cb1
mov ebp,eax
lea ecx,[esp+0x10c]
mov dword[esp+0x88],ebp
call fcn.005a4c0f
mov dword[esp+0x248],esi
lea esi,[edi+0xe8]
test esi,esi
je 0x497b1c
mov eax,dword[esi+4]
test eax,eax
je 0x497b1c
test ebp,ebp
jne 0x497adb
xor eax,eax
jmp 0x497ade
mov eax,dword[ebp+4]
push eax
call dword[sym.imp.GDI32.dll_CreateCompatibleDC]
push eax
lea ecx,[esp+0x110]
call fcn.005a4cc6
test esi,esi
je 0x497af9
mov esi,dword[esi+4]
mov ecx,dword[esp+0x110]
push esi
push ecx
call fcn.005a4e07
lea edx,[esp+0x10c]
mov dword[esp+0xd4],eax
mov dword[esp+0x84],edx
mov esi,dword[esp+0x258]
cmp esi,0xe
jl 0x497b38
cmp esi,0x11
mov dword[esp+0x8c],1
jle 0x497b43
mov dword[esp+0x8c],0
mov ecx,dword[edi+0x1c]
lea eax,[esp+0x4c]
push eax
push ecx
call dword[sym.imp.USER32.dll_GetClientRect]
lea ecx,[esp+0xf8]
call fcn.0049b4f0
mov edx,dword[esp+0x250]
xor eax,eax
mov byte[esp+0x248],1
mov dword[esp+0x94],edx
mov dword[esp+0x60],eax
mov ebp,dword[esp+eax*4+0x84]
test ebp,ebp
je 0x498727
mov eax,dword[esp+0x8c]
mov ecx,edi
push eax
push ebp
call fcn.004b0680
lea eax,[esi-1]
cmp eax,0x11
ja case.default.0x497bad
xor ecx,ecx
mov cl,byte[eax+0x4987e0]
jmp dword[ecx*4+0x4987c0]
mov edx,dword[ebp]
push 1
mov ecx,ebp
call dword[edx+0x34]
mov edx,dword[esp+0x54]
mov eax,dword[esp+0x4c]
mov ecx,dword[esp+0x50]
mov dword[esp+0x7c],edx
mov edx,dword[esp+0x58]
mov dword[esp+0x74],eax
mov dword[esp+0x80],edx
mov edx,dword[ebx+0x14]
test edx,edx
mov dword[esp+0x78],ecx
je 0x497bef
mov eax,dword[ebx+0xc]
mov dword[esp+0x74],eax
mov edx,dword[ebx+0x20]
test edx,edx
je 0x497bfd
mov ecx,dword[ebx+0x18]
mov dword[esp+0x78],ecx
mov edx,dword[ebx+0x2c]
test edx,edx
je 0x497c0d
mov edx,dword[ebx+0x24]
add edx,eax
mov dword[esp+0x7c],edx
mov eax,dword[ebx+0x38]
test eax,eax
je 0x497c20
mov eax,dword[ebx+0x30]
add eax,ecx
mov dword[esp+0x80],eax
lea ecx,[esp+0x74]
call fcn.005a81dd
mov esi,dword[esp+0x30]
lea ecx,[esp+0x74]
push ecx
push ebp
mov ecx,esi
call fcn.004af9b0
mov edx,dword[esp+0x78]
mov eax,dword[esp+0x74]
push edx
lea ecx,[esp+0x130]
push eax
push ecx
mov ecx,ebp
call fcn.005a5397
mov edx,dword[esp+0x74]
mov eax,dword[esp+0x78]
mov dword[esi+0xb4],edx
mov dword[esi+0xb8],eax
jmp case.default.0x497bad
mov eax,dword[ebx+0x24]
mov ecx,dword[ebx+0x18]
mov edx,dword[ebx+0xc]
push eax
push ecx
mov ecx,dword[ebp+4]
push edx
push ecx
call dword[sym.imp.GDI32.dll_SetPixelV]
jmp case.default.0x497bad
mov ecx,dword[ebx+0x18]
mov eax,dword[ebx+0xc]
mov esi,dword[ebx+0x24]
mov edi,dword[ebx+0x30]
push ecx
lea edx,[esp+0x138]
push eax
push edx
mov ecx,ebp
call fcn.005a5397
push edi
push esi
mov ecx,ebp
call fcn.005a53e3
jmp case.default.0x497bad
mov eax,dword[ebx+0xc]
mov ecx,dword[ebx+0x18]
mov edx,dword[ebx+0x24]
mov dword[esp+0x1c],eax
mov eax,dword[ebx+0x30]
mov dword[esp+0x20],ecx
lea ecx,[esp+0x1c]
mov dword[esp+0x24],edx
mov dword[esp+0x28],eax
call fcn.005a81dd
mov eax,dword[esp+0x258]
cmp eax,4
jne 0x497d06
mov ecx,dword[esp+0x28]
mov edx,dword[esp+0x24]
mov eax,dword[esp+0x20]
push ecx
mov ecx,dword[esp+0x20]
push edx
mov edx,dword[ebp+4]
push eax
push ecx
push edx
call dword[sym.imp.GDI32.dll_Ellipse]
jmp case.default.0x497bad
cmp eax,8
jne 0x497d2e
mov eax,dword[esp+0x28]
mov ecx,dword[esp+0x24]
mov edx,dword[esp+0x20]
push eax
mov eax,dword[esp+0x20]
push ecx
mov ecx,dword[ebp+4]
push edx
push eax
push ecx
call dword[sym.imp.GDI32.dll_Rectangle]
jmp case.default.0x497bad
cmp eax,9
jne 0x497da5
mov eax,dword[ebp+8]
lea edx,[esp+0x1c]
push 2
push edx
push eax
call dword[sym.imp.GDI32.dll_LPtoDP]
mov eax,dword[esp+0x20]
mov ecx,dword[esp+0x28]
cmp ecx,eax
jne 0x497d55
inc eax
mov dword[esp+0x28],eax
mov eax,dword[esp+0x1c]
mov ecx,dword[esp+0x24]
cmp ecx,eax
jne 0x497d66
inc eax
mov dword[esp+0x24],eax
mov edx,dword[ebp+8]
lea ecx,[esp+0x1c]
push 2
push ecx
push edx
call dword[sym.imp.GDI32.dll_DPtoLP]
mov eax,dword[ebp+8]
push 2
push eax
call dword[sym.imp.GDI32.dll_GetCurrentObject]
push eax
call fcn.005a583d
test eax,eax
je 0x497d90
mov eax,dword[eax+4]
mov edx,dword[ebp+4]
lea ecx,[esp+0x1c]
push eax
push ecx
push edx
call dword[sym.imp.USER32.dll_FillRect]
jmp case.default.0x497bad
cmp eax,0xa
jne 0x497dde
mov eax,dword[ebx+0x50]
mov ecx,dword[ebx+0x3c]
test eax,eax
mov eax,ecx
je 0x497db9
mov eax,dword[ebx+0x48]
mov edx,dword[esp+0x20]
push eax
mov eax,dword[esp+0x2c]
push ecx
mov ecx,dword[esp+0x2c]
push eax
mov eax,dword[esp+0x28]
push ecx
mov ecx,dword[ebp+4]
push edx
push eax
push ecx
call dword[sym.imp.GDI32.dll_RoundRect]
jmp case.default.0x497bad
cmp eax,0xb
jne 0x497df7
mov eax,dword[ebp+4]
lea edx,[esp+0x1c]
push edx
push eax
call dword[sym.imp.USER32.dll_InvertRect]
jmp case.default.0x497bad
mov edi,dword[esp+0x258]
mov eax,dword[ebx+0x3c]
mov ecx,dword[ebx+0x48]
mov edx,dword[ebx+0x54]
mov esi,dword[ebx+0x60]
sub edi,5
je 0x497e67
dec edi
je 0x497e40
dec edi
jne case.default.0x497bad
push esi
push edx
mov edx,dword[esp+0x2c]
push ecx
mov ecx,dword[esp+0x34]
push eax
mov eax,dword[esp+0x30]
push ecx
mov ecx,dword[esp+0x30]
push edx
mov edx,dword[ebp+4]
push eax
push ecx
push edx
call dword[sym.imp.GDI32.dll_Pie]
jmp case.default.0x497bad
push esi
push edx
mov edx,dword[esp+0x28]
push ecx
mov ecx,dword[esp+0x30]
push eax
mov eax,dword[esp+0x38]
push eax
mov eax,dword[esp+0x30]
push ecx
mov ecx,dword[ebp+4]
push edx
push eax
push ecx
call dword[sym.imp.GDI32.dll_Chord]
jmp case.default.0x497bad
push esi
push edx
mov edx,dword[esp+0x30]
push ecx
mov ecx,dword[esp+0x2c]
push eax
mov eax,dword[esp+0x34]
push edx
mov edx,dword[esp+0x30]
push eax
mov eax,dword[ebp+4]
push ecx
push edx
push eax
call dword[sym.imp.GDI32.dll_Arc]
jmp case.default.0x497bad
mov edx,dword[ebx+0x18]
mov eax,dword[ebx+0x24]
mov ecx,dword[ebx+0xc]
mov dword[esp+0x68],edx
mov dword[esp+0x6c],eax
mov eax,dword[ebp+8]
lea edx,[esp+0x64]
mov dword[esp+0x64],ecx
mov ecx,dword[ebx+0x30]
push 1
push edx
push eax
mov dword[esp+0x7c],ecx
call dword[sym.imp.GDI32.dll_LPtoDP]
lea ecx,[esp+0x6c]
push ecx
mov ecx,ebp
call fcn.005a54d8
mov edx,dword[ebp]
push 1
mov ecx,ebp
call dword[edx+0x34]
mov esi,dword[esp+0x6c]
test esi,esi
jle case.default.0x497bad
mov eax,dword[esp+0x70]
test eax,eax
jle case.default.0x497bad
mov edx,dword[esp+0x64]
mov edi,dword[esp+0x4c]
lea ecx,[esi+edx]
cmp ecx,edi
jl case.default.0x497bad
mov ecx,dword[esp+0x68]
mov edi,dword[esp+0x50]
add eax,ecx
cmp eax,edi
jl case.default.0x497bad
cmp edx,dword[esp+0x54]
jg case.default.0x497bad
cmp ecx,dword[esp+0x58]
jg case.default.0x497bad
mov eax,dword[ebx+0x44]
test eax,eax
jne 0x497f33
mov dword[esp+0x10],2
jmp 0x497f5d
mov eax,dword[ebx+0x3c]
cmp eax,8
jg 0x497f4f
cmp eax,1
jge 0x497f4a
mov dword[esp+0x10],1
jmp 0x497f5d
cmp eax,8
jle 0x497f59
mov dword[esp+0x10],8
jmp 0x497f5d
mov dword[esp+0x10],eax
mov eax,dword[esp+0x94]
mov dword[esp+0x108],0
lea edi,[eax-6]
test edi,edi
jle 0x497fa6
lea esi,[ebx+0x48]
mov dword[esp+0x34],edi
mov ecx,dword[esi]
push ecx
lea ecx,[esp+0xfc]
call fcn.0049b780
mov eax,dword[esp+0x34]
add esi,0xc
dec eax
mov dword[esp+0x34],eax
jne 0x497f7d
mov ecx,dword[esp+0x68]
mov edx,dword[esp+0x64]
mov esi,dword[esp+0x6c]
mov dword[esp+0xe0],edx
add esi,edx
mov edx,dword[esp+0x70]
lea eax,[esp+0xe0]
add edx,ecx
push eax
mov dword[esp+0xec],esi
mov dword[esp+0xe8],ecx
mov dword[esp+0xf0],edx
call dword[sym.imp.USER32.dll_IsRectEmpty]
test eax,eax
jne case.default.0x497bad
mov eax,dword[esp+0x30]
cmp ebp,dword[eax+0xbc]
jne 0x49801a
add eax,0xc0
mov ecx,dword[eax]
mov dword[esp+0xa8],ecx
mov edx,dword[eax+4]
mov dword[esp+0xac],edx
mov ecx,dword[eax+8]
mov dword[esp+0xb0],ecx
mov edx,dword[eax+0xc]
mov dword[esp+0xb4],edx
jmp 0x498046
mov eax,dword[esp+0x4c]
mov ecx,dword[esp+0x50]
mov edx,dword[esp+0x54]
mov dword[esp+0xa8],eax
mov eax,dword[esp+0x58]
mov dword[esp+0xac],ecx
mov dword[esp+0xb0],edx
mov dword[esp+0xb4],eax
lea ecx,[esp+0x1a0]
call fcn.004c4150
mov eax,dword[esp+0x108]
mov ecx,dword[esp+0x100]
neg eax
sbb eax,eax
push 0xcc0020
and eax,ecx
mov ecx,dword[esp+0x14]
push edi
push eax
lea edx,[esp+0xb4]
push ecx
lea eax,[esp+0xf0]
push edx
push eax
push ebp
lea ecx,[esp+0x1bc]
mov byte[esp+0x264],2
call fcn.004c4ff0
mov dword[esp+0x1a0],0x610f4c
mov esi,0x610f18
lea ecx,[esp+0x218]
mov byte[esp+0x248],3
mov dword[esp+0x218],esi
call fcn.0049b6f0
lea ecx,[esp+0x1f8]
mov byte[esp+0x248],1
mov dword[esp+0x1f8],esi
call fcn.0049b6f0
jmp case.default.0x497bad
mov edx,dword[ebx+0xc]
lea ecx,[esp+0xb8]
push ecx
push edx
call fcn.00492aa0
mov ecx,dword[ebx+0x20]
mov esi,eax
mov eax,dword[esp+0xc0]
add esp,8
cdq
sub eax,edx
sar eax,1
test ecx,ecx
je 0x498114
mov ecx,dword[ebx+0x18]
cmp eax,ecx
jl 0x498114
mov eax,ecx
cmp eax,1
jle case.default.0x497bad
push eax
mov eax,dword[ebp+4]
push esi
push eax
call dword[sym.imp.GDI32.dll_Polygon]
jmp case.default.0x497bad
mov eax,dword[ebx+0xc]
push 0
push eax
push 0x7e5
mov dword[esp+0x4c],eax
call fcn.004b7100
test eax,eax
je case.default.0x497bad
mov eax,dword[ebx+0x50]
xor edi,edi
cmp eax,edi
je 0x49815b
mov esi,dword[ebx+0x48]
cmp esi,1
jne 0x498162
mov esi,0xcc0020
jmp 0x498190
cmp esi,2
jne 0x49816e
mov esi,0x330008
jmp 0x498190
cmp esi,3
jne 0x49817a
mov esi,0x660046
jmp 0x498190
cmp esi,4
jne 0x498186
mov esi,0xee0086
jmp 0x498190
cmp esi,5
jne 0x498190
mov esi,0x8800c6
mov eax,dword[ebx+0x38]
mov ecx,dword[ebx+0x18]
mov edx,dword[ebx+0x24]
cmp eax,edi
mov dword[esp+0x44],edi
mov dword[esp+0x48],edi
mov dword[esp+0x98],ecx
mov dword[esp+0x9c],edx
je 0x4981ba
mov eax,dword[ebx+0x30]
mov dword[esp+0x44],eax
cmp dword[ebx+0x44],edi
je 0x4981c6
mov ecx,dword[ebx+0x3c]
mov dword[esp+0x48],ecx
mov eax,dword[ebp+8]
lea edx,[esp+0x98]
push 1
push edx
push eax
call dword[sym.imp.GDI32.dll_LPtoDP]
lea ecx,[esp+0x44]
push ecx
mov ecx,ebp
call fcn.005a54d8
mov edx,dword[ebp]
push 1
mov ecx,ebp
call dword[edx+0x34]
cmp dword[ebx+0x38],edi
jne 0x4981fd
mov dword[esp+0x44],0xffffffff
cmp dword[ebx+0x44],edi
jne 0x49820a
mov dword[esp+0x48],0xffffffff
mov eax,dword[esp+0x48]
mov ecx,dword[esp+0x44]
mov edx,dword[esp+0x9c]
push esi
push eax
mov eax,dword[esp+0xa0]
push ecx
mov ecx,dword[esp+0x4c]
push edx
push eax
push ebp
push ecx
call fcn.004c5c20
add esp,0x1c
jmp case.default.0x497bad
mov edx,dword[esp+0x30]
mov esi,dword[sym.imp.GDI32.dll_DPtoLP]
push 1
mov ecx,dword[edx+0xb4]
lea eax,[edx+0xb4]
mov dword[esp+0x18],ecx
mov ecx,dword[ebp+8]
mov edx,dword[eax+4]
lea eax,[esp+0x18]
push eax
push ecx
mov dword[esp+0x24],edx
call esi
cmp dword[esp+0x258],0x11
jne 0x4982aa
mov eax,dword[ebx+0x14]
test eax,eax
je 0x49827e
mov edx,dword[ebx+0xc]
mov dword[esp+0x14],edx
mov eax,dword[ebx+0x20]
test eax,eax
je 0x49828c
mov eax,dword[ebx+0x18]
mov dword[esp+0x18],eax
mov edx,dword[ebp+8]
lea ecx,[esp+0x14]
push 1
push ecx
push edx
call dword[sym.imp.GDI32.dll_LPtoDP]
mov ecx,dword[ebp+8]
lea eax,[esp+0x14]
push 1
push eax
push ecx
call esi
mov eax,dword[esp+0x50]
mov ecx,dword[esp+0x54]
mov edx,dword[esp+0x4c]
mov dword[esp+0xc0],eax
mov esi,2
mov dword[esp+0xc4],ecx
mov ecx,dword[ebp+8]
lea eax,[esp+0xbc]
mov dword[esp+0xbc],edx
mov edx,dword[esp+0x58]
push esi
push eax
push ecx
mov dword[esp+0xd4],edx
call dword[sym.imp.GDI32.dll_DPtoLP]
mov edx,dword[esp+0x30]
mov eax,dword[edx+0x44]
push eax
call fcn.0050acf0
add esp,4
lea ecx,[esp+0xa0]
push eax
call fcn.005a590f
lea ecx,[esp+0xcc]
mov byte[esp+0x248],4
push ecx
mov ecx,ebp
mov dword[esp+0xd0],esi
mov dword[esp+0xd4],esi
call fcn.005a5541
mov edi,0x63512c
or ecx,0xffffffff
xor eax,eax
lea edx,[esp+0x13c]
repne scasb al,byte es:[edi]
not ecx
sub edi,ecx
mov eax,ecx
mov esi,edi
mov edi,edx
lea edx,[esp+0xd8]
shr ecx,2
rep movsd dword es:[edi],dword ptr[esi]
mov ecx,eax
xor eax,eax
and ecx,3
push edx
rep movsb byte es:[edi],byte ptr[esi]
lea edi,[esp+0x140]
or ecx,0xffffffff
repne scasb al,byte es:[edi]
not ecx
dec ecx
lea eax,[esp+0x140]
push ecx
mov ecx,dword[ebp+8]
push eax
push ecx
call dword[sym.imp.GDI32.dll_GetTextExtentPoint32A]
mov edx,dword[esp+0x94]
mov eax,dword[esp+0x258]
cmp eax,0x11
lea ecx,[edx-1]
jne 0x49839e
sub ecx,2
test ecx,ecx
jle 0x4986b2
mov eax,dword[esp+0x258]
mov dword[esp+0x40],ecx
sub eax,0x11
neg eax
sbb eax,eax
and al,0xfe
add eax,3
lea eax,[eax+eax*2]
lea esi,[ebx+eax*4+8]
mov dword[esp+0x34],esi
mov ecx,dword[0x65a358]
mov edi,dword[esp+0x258]
mov dword[esp+0x5c],ecx
mov edx,dword[esi]
mov byte[esp+0x248],5
push edx
call fcn.004b1ad0
add esp,4
test eax,eax
je 0x498406
lea eax,[esp+0x13c]
add esi,0xfffffff8
push eax
push esi
call fcn.00494f70
add esp,8
jmp 0x49846f
mov eax,dword[esi]
cmp eax,0x80000004
jne 0x498422
mov ecx,dword[esi-8]
push ecx
lea ecx,[esp+0x60]
call fcn.0059ea5e
mov eax,dword[esp+0x5c]
jmp 0x498476
cmp eax,reloc.OLEAUT32.dll_SysReAllocString
jne 0x49843f
mov eax,dword[esi-8]
lea edx,[esp+0x13c]
push edx
push eax
call fcn.004bf860
add esp,8
jmp 0x49846f
cmp eax,reloc.WS2_32.dll_closesocket
jne 0x498460
mov edx,dword[esi-4]
mov eax,dword[esi-8]
lea ecx,[esp+0x13c]
push ecx
push edx
push eax
call fcn.004bf190
add esp,0xc
jmp 0x49846f
test eax,eax
jne 0x498680
mov byte[esp+0x13c],al
lea eax,[esp+0x13c]
test eax,eax
mov dword[esp+0x10],eax
je 0x498680
mov al,byte[eax]
test al,al
jne 0x4984b1
cmp edi,0x10
je 0x498680
cmp edi,0x11
je 0x498680
mov ecx,dword[esp+0xdc]
mov esi,dword[esp+0x10]
xor ebx,ebx
mov dword[esp+0x3c],ecx
mov dword[esp+0x38],ebx
jmp 0x498528
mov esi,dword[esp+0x10]
mov ebx,esi
cmp al,0xd
je 0x4984c7
cmp al,0xa
je 0x4984c7
mov al,byte[ebx+1]
inc ebx
test al,al
jne 0x4984b7
mov al,byte[ebx]
test al,al
je 0x4984d6
mov byte[esp+0x2f],al
mov byte[ebx],0
jmp 0x4984d8
xor ebx,ebx
cmp byte[esi],0
jne 0x4984f2
mov edx,dword[esp+0xdc]
mov dword[esp+0x38],0
mov dword[esp+0x3c],edx
jmp 0x498528
mov edi,esi
or ecx,0xffffffff
xor eax,eax
repne scasb al,byte es:[edi]
not ecx
lea eax,[esp+0xf0]
dec ecx
push eax
push ecx
mov ecx,dword[ebp+8]
push esi
push ecx
call dword[sym.imp.GDI32.dll_GetTextExtentPoint32A]
mov edx,dword[esp+0xf0]
mov eax,dword[esp+0xf4]
mov dword[esp+0x38],edx
mov dword[esp+0x3c],eax
cmp dword[esp+0x258],0xf
jne 0x4985d4
mov ecx,dword[esp+0x18]
mov edx,dword[esp+0x3c]
mov eax,dword[esp+0xc8]
add edx,ecx
cmp edx,eax
jle 0x4985d4
mov esi,dword[esp+0xd0]
lea edx,[esp+0xbc]
sub esi,eax
mov eax,dword[esp+0x3c]
add esi,eax
lea eax,[esp+0x11c]
add esi,ecx
push eax
lea ecx,[esp+0xc0]
mov eax,esi
push 0
push ecx
mov ecx,dword[ebp+4]
push edx
neg eax
push eax
push 0
push ecx
call dword[sym.imp.USER32.dll_ScrollDC]
mov eax,dword[ebp+8]
lea edx,[esp+0x11c]
push 2
push edx
push eax
call dword[sym.imp.GDI32.dll_DPtoLP]
mov ecx,dword[esp+0xa4]
lea eax,[esp+0xa0]
mov edx,dword[ebp+4]
neg eax
sbb eax,eax
and eax,ecx
lea ecx,[esp+0x11c]
push eax
push ecx
push edx
call dword[sym.imp.USER32.dll_FillRect]
mov eax,dword[esp+0x18]
sub eax,esi
mov esi,dword[esp+0x10]
mov dword[esp+0x18],eax
cmp byte[esi],0
je 0x4985f9
mov edi,esi
or ecx,0xffffffff
xor eax,eax
mov edx,dword[ebp]
repne scasb al,byte es:[edi]
mov eax,dword[esp+0x18]
not ecx
dec ecx
push ecx
mov ecx,dword[esp+0x18]
push esi
push eax
push ecx
mov ecx,ebp
call dword[edx+0x5c]
test ebx,ebx
jne 0x49860e
mov eax,dword[esp+0x258]
cmp eax,0xe
je 0x49860e
cmp eax,0xf
jne 0x498672
mov edx,dword[esp+0x3c]
mov eax,dword[esp+0x18]
mov ecx,dword[ebp+8]
add eax,edx
mov dword[esp+0x18],eax
lea eax,[esp+0x14]
push 1
push eax
push ecx
call dword[sym.imp.GDI32.dll_LPtoDP]
mov eax,dword[esp+0x18]
lea edx,[esp+0x14]
add eax,2
push 1
mov dword[esp+0x1c],eax
mov eax,dword[ebp+8]
push edx
push eax
call dword[sym.imp.GDI32.dll_DPtoLP]
test ebx,ebx
je 0x498680
mov cl,byte[esp+0x2f]
mov byte[ebx],cl
mov al,byte[ebx+1]
inc ebx
cmp al,0xa
jne 0x49865c
inc ebx
test ebx,ebx
mov dword[esp+0x10],ebx
je 0x498680
mov edi,dword[esp+0x258]
mov eax,ebx
jmp 0x498482
mov edx,dword[esp+0x38]
mov eax,dword[esp+0x14]
add eax,edx
mov dword[esp+0x14],eax
lea ecx,[esp+0x5c]
mov byte[esp+0x248],4
call fcn.0059e921
mov esi,dword[esp+0x34]
mov eax,dword[esp+0x40]
add esi,0xc
dec eax
mov dword[esp+0x34],esi
mov dword[esp+0x40],eax
jne 0x4983c8
mov ebx,dword[esp+0x254]
cmp dword[esp+0x60],1
jne 0x4986e7
cmp dword[esp+0x258],0x11
je 0x4986e7
mov edx,dword[esp+0x30]
mov ecx,dword[esp+0x14]
push 1
lea eax,[edx+0xb4]
push eax
mov dword[eax],ecx
mov ecx,dword[esp+0x20]
mov dword[eax+4],ecx
mov edx,dword[ebp+8]
push edx
call dword[sym.imp.GDI32.dll_LPtoDP]
mov dword[esp+0xa0],method.CGdiObject.virtual_0
lea ecx,[esp+0xa0]
mov byte[esp+0x248],6
call fcn.005a58a9
mov byte[esp+0x248],1
mov ecx,dword[esp+0x30]
push ebp
call fcn.004b0790
mov eax,dword[esp+0x60]
mov edi,dword[esp+0x30]
mov esi,dword[esp+0x258]
inc eax
cmp eax,1
mov dword[esp+0x60],eax
jle 0x497b7a
mov ecx,dword[esp+0x84]
test ecx,ecx
je 0x498758
mov eax,dword[esp+0xd4]
test eax,eax
je 0x49874e
mov eax,dword[eax+4]
push eax
mov eax,dword[ecx+4]
push eax
call fcn.005a4e07
mov eax,dword[esp+0x90]
test eax,eax
je 0x49876e
mov ecx,dword[edi+0x1c]
push eax
push ecx
call dword[sym.imp.USER32.dll_ReleaseDC]
lea ecx,[esp+0xf8]
mov byte[esp+0x248],0
mov dword[esp+0xf8],0x610f18
call fcn.0049b6f0
lea ecx,[esp+0x10c]
mov dword[esp+0x248],0xffffffff
call fcn.005a4d44
mov ecx,dword[esp+0x240]
pop edi
pop esi
pop ebp
pop ebx
mov dword fs:[0],ecx
add esp,0x23c
ret
{% endhighlight %}


[similar_1_ref]: /report/fcn.10bd17cf@89dc67d2f980e8488f97b1bf8cb24258
[similar_2_ref]: /report/fcn.004daef0@7453c96a6fbd42ec690b8deb53eafcba
[similar_3_ref]: /report/fcn.00455f70@3e981d1767f44f5fe2446a49ffe52f4e
[similar_4_ref]: /report/fcn.0040b180@27ac6b5c7fa1ad11790cdc733c25a701
[similar_5_ref]: /report/fcn.0040ab30@27ac6b5c7fa1ad11790cdc733c25a701
[virustotal_ref]: https://www.virustotal.com/gui/file/7453c96a6fbd42ec690b8deb53eafcba