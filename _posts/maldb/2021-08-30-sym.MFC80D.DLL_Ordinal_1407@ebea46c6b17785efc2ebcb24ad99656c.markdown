---
layout: post
title:  "sym.MFC80D.DLL_Ordinal_1407 @ ebea46c6b17785efc2ebcb24ad99656c"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** sym.MFC80D.DLL\_Ordinal\_1407
- **Origin (md5):** ebea46c6b17785efc2ebcb24ad99656c
- **VirusTotal:** [virustotal.com/gui/file/ebea46c6b17785efc2ebcb24ad99656c][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/sym.MFC80D.DLL_Ordinal_1407@ebea46c6b17785efc2ebcb24ad99656c">sym.MFC80D.DLL_Ordinal_1407</a><br>@ebea46c6b17785efc2ebcb24ad99656c</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
sub esp, 0x54
mov eax, dword[ebp+0x18]
mov dword[ebp-4], eax
push 0x36c
push 0x781defb0
mov ecx, dword[ebp-4]
push ecx
call sym.MFC80D.DLL_Ordinal_1364
mov edx, dword[ebp+0x10]
movzx eax, word[edx+4]
mov dword[ebp-0x54], eax
cmp dword[ebp-0x54], 0x209
jg off.b140
cmp dword[ebp-0x54], 0x209
je 0x782a5488
cmp dword[ebp-0x54], 0x127
jg off.b109
cmp dword[ebp-0x54], 0x127
je 0x782a5455
cmp dword[ebp-0x54], 0x1e
je 0x782a5443
cmp dword[ebp-0x54], 0x103
je 0x782a5304
jmp case.0x782a52eb.4
cmp dword[ebp-0x54], 0x12d
je 0x782a54a1
cmp dword[ebp-0x54], 0x201
je 0x782a546f
jmp case.0x782a52eb.4
cmp dword[ebp-0x54], 0x410
jg 0x782a52f2
cmp dword[ebp-0x54], 0x410
je 0x782a53b1
mov ecx, dword[ebp-0x54]
sub ecx, 0x20b
mov dword[ebp-0x54], ecx
cmp dword[ebp-0x54], 6
ja case.0x782a52eb.4
mov edx, dword[ebp-0x54]
jmp dword[edx*4+0x782a5580]
cmp dword[ebp-0x54], 0x412
je 0x782a53e7
jmp case.0x782a52eb.4
mov eax, dword[ebp+0x10]
movsx ecx, word[eax+6]
push ecx
mov edx, dword[ebp-4]
mov eax, dword[edx]
mov ecx, dword[ebp-4]
mov edx, dword[eax+0x3c]
call edx
jmp 0x782a5573
mov eax, dword[ebp+0x10]
movsx ecx, word[eax+6]
push ecx
mov edx, dword[ebp+0x10]
movsx eax, word[edx+8]
push eax
lea ecx, [ebp-0x20]
push ecx
mov edx, dword[ebp-4]
mov eax, dword[edx]
mov ecx, dword[ebp-4]
mov edx, dword[eax+0x50]
call edx
jmp 0x782a5573
mov eax, dword[ebp+0x10]
movsx ecx, word[eax+6]
push ecx
mov edx, dword[ebp+0x10]
movsx eax, word[edx+8]
push eax
lea ecx, [ebp-0x28]
push ecx
mov ecx, dword[ebp-4]
call sym.MFC80D.DLL_Ordinal_8390
jmp 0x782a5573
mov edx, dword[ebp+0x10]
movsx eax, word[edx+6]
push eax
mov ecx, dword[ebp+0x10]
movsx edx, word[ecx+8]
push edx
lea eax, [ebp-0x30]
push eax
mov ecx, dword[ebp-4]
mov edx, dword[ecx]
mov ecx, dword[ebp-4]
mov eax, dword[edx+0x48]
call eax
jmp 0x782a5573
mov ecx, dword[ebp+0x10]
movsx edx, word[ecx+6]
push edx
mov eax, dword[ebp+0x10]
movsx ecx, word[eax+8]
push ecx
lea edx, [ebp-0x38]
push edx
mov eax, dword[ebp-4]
mov edx, dword[eax]
mov ecx, dword[ebp-4]
mov eax, dword[edx+0x40]
call eax
jmp 0x782a5573
mov ecx, dword[ebp+0x10]
movsx edx, word[ecx+6]
push edx
mov eax, dword[ebp+0x10]
movsx ecx, word[eax+8]
push ecx
mov edx, dword[ebp+0x10]
movsx eax, word[edx+0xa]
push eax
mov ecx, dword[ebp+0x10]
movsx edx, word[ecx+0xc]
push edx
lea eax, [ebp-0x40]
push eax
mov ecx, dword[ebp-4]
mov edx, dword[ecx]
mov ecx, dword[ebp-4]
mov eax, dword[edx+0x54]
call eax
jmp 0x782a5573
mov ecx, dword[ebp+0x10]
movsx edx, word[ecx+6]
push edx
mov eax, dword[ebp+0x10]
movsx ecx, word[eax+8]
push ecx
mov edx, dword[ebp+0x10]
movsx eax, word[edx+0xa]
push eax
mov ecx, dword[ebp+0x10]
movsx edx, word[ecx+0xc]
push edx
lea eax, [ebp-0x48]
push eax
mov ecx, dword[ebp-4]
mov edx, dword[ecx]
mov ecx, dword[ebp-4]
mov eax, dword[edx+0x4c]
call eax
jmp 0x782a5573
mov ecx, dword[ebp+0x10]
movsx edx, word[ecx+6]
push edx
mov eax, dword[ebp+0x10]
movsx ecx, word[eax+8]
push ecx
lea edx, [ebp-0x50]
push edx
mov eax, dword[ebp-4]
mov edx, dword[eax]
mov ecx, dword[ebp-4]
mov eax, dword[edx+0x44]
call eax
jmp 0x782a5573
mov ecx, dword[ebp-4]
mov edx, dword[ecx]
mov ecx, dword[ebp-4]
mov eax, dword[edx+0x24]
call eax
jmp 0x782a5573
mov ecx, dword[ebp+0x10]
movsx edx, word[ecx+6]
push edx
mov eax, dword[ebp-4]
mov edx, dword[eax]
mov ecx, dword[ebp-4]
mov eax, dword[edx+0x28]
call eax
jmp 0x782a5573
mov ecx, dword[ebp+0x10]
mov edx, dword[ecx+6]
push edx
mov eax, dword[ebp-4]
mov edx, dword[eax]
mov ecx, dword[ebp-4]
mov eax, dword[edx+0x34]
call eax
jmp 0x782a5573
mov ecx, dword[ebp+0x10]
mov edx, dword[ecx+6]
push edx
mov eax, dword[ebp-4]
mov edx, dword[eax]
mov ecx, dword[ebp-4]
mov eax, dword[edx+0x38]
call eax
jmp 0x782a5573
mov ecx, dword[ebp+0x10]
movzx edx, word[ecx+6]
mov eax, dword[ebp+0xc]
mov ecx, dword[eax+edx*4]
mov dword[ebp-8], ecx
mov edx, dword[ebp-8]
push edx
call dword[sym.imp.GDI32.dll_GetObjectType]
mov dword[ebp-0xc], eax
cmp dword[ebp-0xc], 0
jne 0x782a553e
push 0xd
call dword[sym.imp.GDI32.dll_GetStockObject]
mov dword[ebp-0x10], eax
mov eax, dword[ebp-0x10]
push eax
mov ecx, dword[ebp-4]
mov edx, dword[ecx+4]
push edx
call dword[sym.imp.GDI32.dll_SelectObject]
mov dword[ebp-0x18], eax
mov eax, dword[ebp-8]
push eax
mov ecx, dword[ebp-4]
mov edx, dword[ecx+4]
push edx
call dword[sym.imp.GDI32.dll_SelectObject]
mov dword[ebp-0x14], eax
mov eax, dword[ebp-0x14]
cmp eax, dword[ebp-0x10]
jne 0x782a551a
mov ecx, dword[ebp-8]
push ecx
call sym.MFC80D.DLL_Ordinal_3252
push eax
mov edx, dword[ebp-4]
mov eax, dword[edx]
mov ecx, dword[ebp-4]
mov edx, dword[eax+0x30]
call edx
jmp 0x782a5573
mov eax, dword[ebp-0x18]
push eax
mov ecx, dword[ebp-4]
mov edx, dword[ecx+4]
push edx
call dword[sym.imp.GDI32.dll_SelectObject]
mov eax, dword[ebp-0x14]
push eax
mov ecx, dword[ebp-4]
mov edx, dword[ecx+4]
push edx
call dword[sym.imp.GDI32.dll_SelectObject]
jmp case.0x782a52eb.4
cmp dword[ebp-0xc], 6
jne case.0x782a52eb.4
mov eax, dword[ebp-8]
push eax
call sym.MFC80D.DLL_Ordinal_3252
push eax
mov ecx, dword[ebp-4]
mov edx, dword[ecx]
mov ecx, dword[ebp-4]
mov eax, dword[edx+0x30]
call eax
jmp 0x782a5573
mov ecx, dword[ebp+0x14]
push ecx
mov edx, dword[ebp+0x10]
push edx
mov eax, dword[ebp+0xc]
push eax
mov ecx, dword[ebp+8]
push ecx
call dword[sym.imp.GDI32.dll_PlayMetaFileRecord]
mov eax, 1
mov esp, ebp
pop ebp
ret 0x14

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/ebea46c6b17785efc2ebcb24ad99656c