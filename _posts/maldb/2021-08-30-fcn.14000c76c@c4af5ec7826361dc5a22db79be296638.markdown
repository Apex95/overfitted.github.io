---
layout: post
title:  "fcn.14000c76c @ c4af5ec7826361dc5a22db79be296638"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.14000c76c
- **Origin (md5):** c4af5ec7826361dc5a22db79be296638
- **VirusTotal:** [virustotal.com/gui/file/c4af5ec7826361dc5a22db79be296638][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>
<span class="tag" id="LINKING">LINKING</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-96.98643493652344, -41.15855407714844, '<b><a href="/report/fcn.14000c76c@c4af5ec7826361dc5a22db79be296638">fcn.14000c76c</a><br>@c4af5ec7826361dc5a22db79be296638</b><br>mov rax, rsp<br>mov qword[rax+8], rbx<br>mov qword[rax+0x10], rbp<br>mov qword[rax+0x18], rsi<br>mov qword[rax+0x20], rdi<br>push r14<br>sub rsp, 0x20<br>mov edx, ecx<br>mov ebx, 0x104<br>mov ecx, ebx<br>call fcn.1400112e0<br>mov ecx, ebx<br>mov rdx, rax<br>mov rdi, rax<br>call qword[sym.imp.KERNEL32.dll_GetTempPathW]<br>lea rcx, str.Kernel32.DLL<br>mov esi, eax<br>call qword[sym.imp.KERNEL32.dll_LoadLibraryW]<br>xor r14d, r14d<br>mov rbp, rax<br>test rax, rax<br>je 0x14000c7e6<br>lea rdx, str.GetLongPathNameW<br>mov rcx, rax<br>call qword[sym.imp.KERNEL32.dll_GetProcAddress]<br>test rax, rax<br>je 0x14000c7dd<br>mov r8d, ebx<br>mov rdx, rdi<br>mov rcx, rdi<br>call rax<br>mov esi, eax<br>mov rcx, rbp<br>call qword[sym.imp.KERNEL32.dll_FreeLibrary]<br>sub ebx, esi<br>mov ecx, ebx<br>call fcn.1400114b0<br>mov rbx, qword[rsp+0x30]<br>mov rbp, qword[rsp+0x38]<br>movsxd rax, esi<br>mov rsi, qword[rsp+0x40]<br>mov word[rdi+rax*2], r14w<br>mov rdi, qword[rsp+0x48]<br>add rsp, 0x20<br>pop r14<br>ret <br><eoc> ', 'point { fill-color: #e0440e; }'],
[100.89385986328125, -112.84166717529297, '<b><a href="/report/fcn.14000ac34@c4af5ec7826361dc5a22db79be296638">fcn.14000ac34</a><br>@c4af5ec7826361dc5a22db79be296638</b><br>mov qword[rsp+8], rbx<br>mov qword[rsp+0x10], rbp<br>mov qword[rsp+0x18], rsi<br>push rdi<br>sub rsp, 0x20<br>mov edx, ecx<br>mov edi, 0x104<br>mov ecx, edi<br>call fcn.1400112e0<br>mov rcx, qword[0x14001e44c]<br>mov r8d, edi<br>mov rdx, rax<br>mov rsi, rax<br>call qword[sym.imp.KERNEL32.dll_GetModuleFileNameW]<br>lea rdx, str._<br>mov rcx, rsi<br>mov ebx, eax<br>call sub.msvcrt.dll_wcscmp<br>xor ebp, ebp<br>test eax, eax<br>jne 0x14000ac98<br>add ebx, 0xfffffffc<br>lea rdx, [rsi+8]<br>mov rcx, rsi<br>movsxd r8, ebx<br>add r8, r8<br>call sub.msvcrt.dll_memmove<br>sub edi, ebx<br>mov ecx, edi<br>call fcn.1400114b0<br>movsxd rax, ebx<br>mov rbx, qword[rsp+0x30]<br>mov word[rsi+rax*2], bp<br>mov rbp, qword[rsp+0x38]<br>mov rsi, qword[rsp+0x40]<br>add rsp, 0x20<br>pop rdi<br>ret <br><eoc> ', 'null'],
[-25.307701110839844, 156.72328186035156, '<b><a href="/report/fcn.14000ff80@c4af5ec7826361dc5a22db79be296638">fcn.14000ff80</a><br>@c4af5ec7826361dc5a22db79be296638</b><br>mov qword[rsp+8], rbx<br>mov qword[rsp+0x10], rsi<br>mov qword[rsp+0x18], rdi<br>push r14<br>sub rsp, 0x20<br>movsxd rsi, edx<br>mov edx, 8<br>mov ebx, ecx<br>mov rcx, qword[0x14001e444]<br>mov rdi, r8<br>lea r8d, [rdx+0x58]<br>call qword[sym.imp.KERNEL32.dll_HeapAlloc]<br>mov r8, rsi<br>mov edx, 8<br>and qword[rax+0x18], 0<br>mov dword[rax], ebx<br>mov qword[rax+0x20], rdi<br>mov dword[rax+4], esi<br>mov qword[rax+8], rsi<br>mov rcx, qword[0x14001e444]<br>shl r8, 3<br>mov r14, rax<br>call qword[sym.imp.KERNEL32.dll_HeapAlloc]<br>lea rcx, [r14+0x38]<br>mov qword[r14+0x10], rax<br>call qword[sym.imp.KERNEL32.dll_InitializeCriticalSection]<br>mov rbx, qword[rsp+0x30]<br>mov rsi, qword[rsp+0x38]<br>mov rdi, qword[rsp+0x40]<br>mov rax, r14<br>add rsp, 0x20<br>pop r14<br>ret <br><eoc> ', 'null'],
[172.57257080078125, 85.04021453857422, '<b><a href="/report/fcn.14000a1a4@c4af5ec7826361dc5a22db79be296638">fcn.14000a1a4</a><br>@c4af5ec7826361dc5a22db79be296638</b><br>mov rax, rsp<br>mov qword[rax+8], rbx<br>mov qword[rax+0x10], rsi<br>mov qword[rax+0x18], rdi<br>push rbp<br>push r12<br>push r13<br>push r14<br>push r15<br>lea rbp, [rax-0x198]<br>sub rsp, 0x270<br>xor r13d, r13d<br>mov r12d, r8d<br>mov rsi, rdx<br>cmp dword[0x14001e5bc], r13d<br>mov r15, rcx<br>jne 0x14000a1f1<br>xor ecx, ecx<br>mov dword[0x14001e5bc], 1<br>call qword[sym.imp.OLE32.DLL_CoInitialize]<br>xor edx, edx<br>lea rcx, [rsp+0x20]<br>lea r8d, [rdx+0x40]<br>call sub.msvcrt.dll_memset<br>lea rcx, [str.SHELL32.DLL]<br>mov ebx, r13d<br>call qword[sym.imp.KERNEL32.dll_LoadLibraryW]<br>mov edi, 0x104<br>mov r14, rax<br>test rax, rax<br>je 0x14000a332<br>lea rdx, str.SHBrowseForFolderW<br>mov rcx, rax<br>call qword[sym.imp.KERNEL32.dll_GetProcAddress]<br>lea rdx, [str.SHGetPathFromIDListW]<br>mov rcx, r14<br>mov r13, rax<br>call qword[sym.imp.KERNEL32.dll_GetProcAddress]<br>lea rdx, [0x1400175f4]<br>test rsi, rsi<br>lea r8d, [rdi-1]<br>lea rcx, [rsp+0x60]<br>cmovne rdx, rsi<br>mov qword[rbp+0x1b8], rax<br>call sub.msvcrt.dll_wcsncpy<br>lea rcx, [rsp+0x60]<br>xor esi, esi<br>mov word[rbp+0x166], si<br>call sub.msvcrt.dll_wcslen<br>lea ecx, [rsi+0x5c]<br>cmp eax, 3<br>jle 0x14000a291<br>cdqe <br>cmp word[rsp+rax*2+0x5e], cx<br>jne 0x14000a291<br>mov word[rsp+rax*2+0x5e], si<br>mov qword[rsp+0x38], r15<br>call fcn.14000a9cc<br>mov ecx, 1<br>mov qword[rsp+0x20], rax<br>lea rax, [0x14000a148]<br>mov dword[rsp+0x40], 0x50<br>mov qword[rsp+0x48], rax<br>lea rax, [rsp+0x60]<br>mov qword[rsp+0x50], rax<br>call fcn.14000aab4<br>lea rcx, [rsp+0x20]<br>call r13<br>xor ecx, ecx<br>mov r15, rax<br>call fcn.14000aab4<br>xor r13d, r13d<br>test r15, r15<br>je 0x14000a325<br>mov edx, r12d<br>mov ecx, edi<br>call fcn.1400112e0<br>mov rcx, r15<br>mov rdx, rax<br>mov rsi, rax<br>mov word[rax], r13w<br>call qword[rbp+0x1b8]<br>mov rcx, r15<br>call qword[sym.imp.OLE32.DLL_CoTaskMemFree]<br>mov rcx, rsi<br>call sub.msvcrt.dll_wcslen<br>lea ecx, [r13+0x5c]<br>mov rbx, rax<br>cdqe <br>cmp word[rsi+rax*2-2], cx<br>je 0x14000a325<br>mov dword[rsi+rax*2], ecx<br>inc ebx<br>mov rcx, r14<br>call qword[sym.imp.KERNEL32.dll_FreeLibrary]<br>test ebx, ebx<br>jne 0x14000a340<br>mov edx, r12d<br>mov ecx, edi<br>call fcn.1400112e0<br>mov word[rax], r13w<br>sub edi, ebx<br>mov ecx, edi<br>call fcn.1400114b0<br>lea r11, [rsp+0x270]<br>mov rbx, qword[r11+0x30]<br>mov rsi, qword[r11+0x38]<br>mov rdi, qword[r11+0x40]<br>mov rsp, r11<br>pop r15<br>pop r14<br>pop r13<br>pop r12<br>pop rbp<br>ret <br><eoc> ', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

mov rax, rsp
mov qword[rax+8], rbx
mov qword[rax+0x10], rbp
mov qword[rax+0x18], rsi
mov qword[rax+0x20], rdi
push r14
sub rsp, 0x20
mov edx, ecx
mov ebx, 0x104
mov ecx, ebx
call fcn.1400112e0
mov ecx, ebx
mov rdx, rax
mov rdi, rax
call qword[sym.imp.KERNEL32.dll_GetTempPathW]
lea rcx, str.Kernel32.DLL
mov esi, eax
call qword[sym.imp.KERNEL32.dll_LoadLibraryW]
xor r14d, r14d
mov rbp, rax
test rax, rax
je 0x14000c7e6
lea rdx, str.GetLongPathNameW
mov rcx, rax
call qword[sym.imp.KERNEL32.dll_GetProcAddress]
test rax, rax
je 0x14000c7dd
mov r8d, ebx
mov rdx, rdi
mov rcx, rdi
call rax
mov esi, eax
mov rcx, rbp
call qword[sym.imp.KERNEL32.dll_FreeLibrary]
sub ebx, esi
mov ecx, ebx
call fcn.1400114b0
mov rbx, qword[rsp+0x30]
mov rbp, qword[rsp+0x38]
movsxd rax, esi
mov rsi, qword[rsp+0x40]
mov word[rdi+rax*2], r14w
mov rdi, qword[rsp+0x48]
add rsp, 0x20
pop r14
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/c4af5ec7826361dc5a22db79be296638