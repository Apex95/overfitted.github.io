---
layout: post
title:  "fcn.14001008c @ c4af5ec7826361dc5a22db79be296638"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.14001008c
- **Origin (md5):** c4af5ec7826361dc5a22db79be296638
- **VirusTotal:** [virustotal.com/gui/file/c4af5ec7826361dc5a22db79be296638][virustotal_ref]

# Code Tags
<span class="tag" id="MEMORY">MEMORY</span>


# Behaviour Tags
<span class="bhv-tag" id="MODIFIES_DACL">MODIFIES_DACL / 0.022597615087226196</span><span class="bhv-tag" id="GENERATES_CANNARIES">GENERATES_CANNARIES / 0.04103694033442964</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-912.1787109375, 1607.4818115234375, '<b><a href="/report/fcn.14001008c@c4af5ec7826361dc5a22db79be296638">fcn.14001008c</a><br>@c4af5ec7826361dc5a22db79be296638</b><br>mov qword[rsp+8], rbx<br>mov qword[rsp+0x10], rbp<br>mov qword[rsp+0x18], rsi<br>push rdi<br>sub rsp, 0x20<br>xor esi, esi<br>mov rdi, rcx<br>cmp dword[rcx+0x30], esi<br>je 0x1400100b4<br>add rcx, 0x38<br>call qword[sym.imp.KERNEL32.dll_EnterCriticalSection]<br>mov rbx, qword[rdi+8]<br>test rbx, rbx<br>je 0x140010153<br>mov ecx, dword[rbx+0x20]<br>test ecx, ecx<br>jle 0x1400100db<br>mov rsi, qword[rbx+0x10]<br>mov rax, qword[rsi]<br>mov qword[rbx+0x10], rax<br>lea eax, [rcx-1]<br>mov dword[rbx+0x20], eax<br>jmp 0x1400100f4<br>movsxd rdx, dword[rbx+0x1c]<br>mov rcx, qword[rdi+0x20]<br>lea rsi, [rbx+0x28]<br>imul rcx, rdx<br>lea eax, [rdx+1]<br>add rsi, rcx<br>mov dword[rbx+0x1c], eax<br>cmp dword[rbx+0x20], 0<br>jne 0x140010206<br>mov eax, dword[rbx+0x18]<br>cmp dword[rbx+0x1c], eax<br>jl 0x140010206<br>mov rcx, qword[rbx]<br>test rcx, rcx<br>je 0x14001011a<br>mov rax, qword[rbx+8]<br>mov qword[rcx+8], rax<br>mov rax, qword[rbx]<br>cmp rbx, qword[rdi+8]<br>jne 0x140010129<br>mov qword[rdi+8], rax<br>jmp 0x140010130<br>mov rcx, qword[rbx+8]<br>mov qword[rcx], rax<br>mov rax, qword[rdi]<br>and qword[rbx+8], 0<br>mov qword[rbx], rax<br>mov qword[rdi], rbx<br>mov rax, qword[rbx]<br>test rax, rax<br>je 0x140010206<br>mov qword[rax+8], rbx<br>jmp 0x140010206<br>mov rax, qword[rdi+0x18]<br>mov ebp, dword[rdi+0x28]<br>sar rax, 4<br>and eax, 0xfffffff0<br>cmp eax, ebp<br>jl 0x14001016e<br>cmp eax, dword[rdi+0x2c]<br>mov ebp, eax<br>cmovg ebp, dword[rdi+0x2c]<br>mov rcx, qword[0x14001e444]<br>movsxd r8, ebp<br>xor edx, edx<br>imul r8, qword[rdi+0x20]<br>add r8, 0x28<br>call qword[sym.imp.KERNEL32.dll_HeapAlloc]<br>mov rbx, rax<br>test rax, rax<br>je 0x140010196<br>mov dword[rax+0x18], ebp<br>jmp 0x1400101bc<br>mov r8, qword[rdi+0x20]<br>mov rcx, qword[0x14001e444]<br>xor edx, edx<br>add r8, 0x28<br>call qword[sym.imp.KERNEL32.dll_HeapAlloc]<br>mov rbx, rax<br>test rax, rax<br>je 0x140010206<br>mov dword[rax+0x18], 1<br>movsxd rax, dword[rbx+0x18]<br>add qword[rdi+0x18], rax<br>and dword[rbx+0x20], esi<br>and qword[rbx+0x10], rsi<br>cmp dword[rbx+0x18], 1<br>mov dword[rbx+0x1c], 1<br>jle 0x1400101e9<br>mov rax, qword[rdi+8]<br>and qword[rbx+8], rsi<br>mov qword[rbx], rax<br>mov qword[rdi+8], rbx<br>jmp 0x1400101f6<br>mov rax, qword[rdi]<br>and qword[rbx+8], rsi<br>mov qword[rbx], rax<br>mov qword[rdi], rbx<br>mov rax, qword[rbx]<br>test rax, rax<br>je 0x140010202<br>mov qword[rax+8], rbx<br>lea rsi, [rbx+0x28]<br>cmp dword[rdi+0x30], 0<br>je 0x140010216<br>lea rcx, [rdi+0x38]<br>call qword[sym.imp.KERNEL32.dll_LeaveCriticalSection]<br>test rsi, rsi<br>je 0x140010224<br>mov qword[rsi], rbx<br>lea rax, [rsi+8]<br>jmp 0x140010226<br>xor eax, eax<br>mov rbx, qword[rsp+0x30]<br>mov rbp, qword[rsp+0x38]<br>mov rsi, qword[rsp+0x40]<br>add rsp, 0x20<br>pop rdi<br>ret <br><eoc> ', 'point { fill-color: #e0440e; }'],
[912.1787109375, -1607.4818115234375, '<b><a href="/report/fcn.14001040c@c4af5ec7826361dc5a22db79be296638">fcn.14001040c</a><br>@c4af5ec7826361dc5a22db79be296638</b><br>mov qword[rsp+8], rbx<br>mov dword[rsp+0x18], r8d<br>mov dword[rsp+0x10], edx<br>push rbp<br>push rsi<br>push rdi<br>sub rsp, 0x20<br>xor ebx, ebx<br>mov edi, r9d<br>mov ebp, r9d<br>lea eax, [rbx+8]<br>and edi, 3<br>lea rsi, [rax+rcx]<br>mov rcx, rsi<br>and ecx, 7<br>je 0x140010441<br>sub rax, rcx<br>add rsi, rax<br>test bpl, 4<br>je 0x140010513<br>lea rdx, [0x140010640]<br>lea rcx, [0x14001f048]<br>call fcn.1400106c8<br>lea rcx, [0x14001f058]<br>call qword[sym.imp.KERNEL32.dll_EnterCriticalSection]<br>mov rax, qword[0x14001f050]<br>test rax, rax<br>je 0x140010493<br>cmp qword[rax+0x18], rsi<br>jne 0x140010482<br>cmp dword[rax+0x20], ebp<br>je 0x140010487<br>mov rax, qword[rax]<br>jmp 0x140010472<br>mov rbx, qword[rax+0x10]<br>inc dword[rax+0x24]<br>test rbx, rbx<br>jne 0x140010504<br>mov rcx, qword[0x14001e444]<br>xor edx, edx<br>lea r8d, [rdx+0x28]<br>call qword[sym.imp.KERNEL32.dll_HeapAlloc]<br>mov rdi, rax<br>test rax, rax<br>je 0x140010504<br>mov r8d, dword[rsp+0x50]<br>mov edx, dword[rsp+0x48]<br>mov r9d, ebp<br>lea rcx, [rsi-8]<br>and r9d, 0xfffffffb<br>call fcn.14001040c<br>mov rbx, rax<br>test rax, rax<br>je 0x140010504<br>mov qword[rax+0x10], rdi<br>and qword[rdi+8], 0<br>mov qword[rdi+0x10], rax<br>mov rax, qword[0x14001f050]<br>mov qword[rdi+0x18], rsi<br>mov dword[rdi+0x20], ebp<br>mov dword[rdi+0x24], 1<br>mov qword[rdi], rax<br>test rax, rax<br>je 0x1400104fd<br>mov qword[rax+8], rdi<br>mov qword[0x14001f050], rdi<br>lea rcx, [0x14001f058]<br>call qword[sym.imp.KERNEL32.dll_LeaveCriticalSection]<br>jmp 0x140010568<br>mov rcx, qword[0x14001e444]<br>xor edx, edx<br>lea r8d, [rdx+0x60]<br>call qword[sym.imp.KERNEL32.dll_HeapAlloc]<br>xor ecx, ecx<br>mov rbx, rax<br>test rax, rax<br>je 0x140010568<br>mov qword[rax], rcx<br>mov qword[rax+8], rcx<br>mov qword[rax+0x10], rcx<br>mov eax, dword[rsp+0x48]<br>mov qword[rbx+0x20], rsi<br>mov dword[rbx+0x28], eax<br>mov eax, dword[rsp+0x50]<br>mov dword[rbx+0x2c], eax<br>cmp edi, 1<br>jbe 0x140010557<br>mov dword[rbx+0x30], ecx<br>jmp 0x140010568<br>lea rcx, [rbx+0x38]<br>mov dword[rbx+0x30], 1<br>call qword[sym.imp.KERNEL32.dll_InitializeCriticalSection]<br>mov rax, rbx<br>mov rbx, qword[rsp+0x40]<br>add rsp, 0x20<br>pop rdi<br>pop rsi<br>pop rbp<br>ret <br><eoc> ', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

mov qword[rsp+8], rbx
mov qword[rsp+0x10], rbp
mov qword[rsp+0x18], rsi
push rdi
sub rsp, 0x20
xor esi, esi
mov rdi, rcx
cmp dword[rcx+0x30], esi
je 0x1400100b4
add rcx, 0x38
call qword[sym.imp.KERNEL32.dll_EnterCriticalSection]
mov rbx, qword[rdi+8]
test rbx, rbx
je 0x140010153
mov ecx, dword[rbx+0x20]
test ecx, ecx
jle 0x1400100db
mov rsi, qword[rbx+0x10]
mov rax, qword[rsi]
mov qword[rbx+0x10], rax
lea eax, [rcx-1]
mov dword[rbx+0x20], eax
jmp 0x1400100f4
movsxd rdx, dword[rbx+0x1c]
mov rcx, qword[rdi+0x20]
lea rsi, [rbx+0x28]
imul rcx, rdx
lea eax, [rdx+1]
add rsi, rcx
mov dword[rbx+0x1c], eax
cmp dword[rbx+0x20], 0
jne 0x140010206
mov eax, dword[rbx+0x18]
cmp dword[rbx+0x1c], eax
jl 0x140010206
mov rcx, qword[rbx]
test rcx, rcx
je 0x14001011a
mov rax, qword[rbx+8]
mov qword[rcx+8], rax
mov rax, qword[rbx]
cmp rbx, qword[rdi+8]
jne 0x140010129
mov qword[rdi+8], rax
jmp 0x140010130
mov rcx, qword[rbx+8]
mov qword[rcx], rax
mov rax, qword[rdi]
and qword[rbx+8], 0
mov qword[rbx], rax
mov qword[rdi], rbx
mov rax, qword[rbx]
test rax, rax
je 0x140010206
mov qword[rax+8], rbx
jmp 0x140010206
mov rax, qword[rdi+0x18]
mov ebp, dword[rdi+0x28]
sar rax, 4
and eax, 0xfffffff0
cmp eax, ebp
jl 0x14001016e
cmp eax, dword[rdi+0x2c]
mov ebp, eax
cmovg ebp, dword[rdi+0x2c]
mov rcx, qword[0x14001e444]
movsxd r8, ebp
xor edx, edx
imul r8, qword[rdi+0x20]
add r8, 0x28
call qword[sym.imp.KERNEL32.dll_HeapAlloc]
mov rbx, rax
test rax, rax
je 0x140010196
mov dword[rax+0x18], ebp
jmp 0x1400101bc
mov r8, qword[rdi+0x20]
mov rcx, qword[0x14001e444]
xor edx, edx
add r8, 0x28
call qword[sym.imp.KERNEL32.dll_HeapAlloc]
mov rbx, rax
test rax, rax
je 0x140010206
mov dword[rax+0x18], 1
movsxd rax, dword[rbx+0x18]
add qword[rdi+0x18], rax
and dword[rbx+0x20], esi
and qword[rbx+0x10], rsi
cmp dword[rbx+0x18], 1
mov dword[rbx+0x1c], 1
jle 0x1400101e9
mov rax, qword[rdi+8]
and qword[rbx+8], rsi
mov qword[rbx], rax
mov qword[rdi+8], rbx
jmp 0x1400101f6
mov rax, qword[rdi]
and qword[rbx+8], rsi
mov qword[rbx], rax
mov qword[rdi], rbx
mov rax, qword[rbx]
test rax, rax
je 0x140010202
mov qword[rax+8], rbx
lea rsi, [rbx+0x28]
cmp dword[rdi+0x30], 0
je 0x140010216
lea rcx, [rdi+0x38]
call qword[sym.imp.KERNEL32.dll_LeaveCriticalSection]
test rsi, rsi
je 0x140010224
mov qword[rsi], rbx
lea rax, [rsi+8]
jmp 0x140010226
xor eax, eax
mov rbx, qword[rsp+0x30]
mov rbp, qword[rsp+0x38]
mov rsi, qword[rsp+0x40]
add rsp, 0x20
pop rdi
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/c4af5ec7826361dc5a22db79be296638