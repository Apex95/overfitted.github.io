---
layout: post
title:  "sym.MFC80D.DLL_Ordinal_6891 @ ebea46c6b17785efc2ebcb24ad99656c"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** sym.MFC80D.DLL\_Ordinal\_6891
- **Origin (md5):** ebea46c6b17785efc2ebcb24ad99656c
- **VirusTotal:** [virustotal.com/gui/file/ebea46c6b17785efc2ebcb24ad99656c][virustotal_ref]

# Code Tags
<span class="tag" id="HTTP">HTTP</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/sym.MFC80D.DLL_Ordinal_6891@ebea46c6b17785efc2ebcb24ad99656c">sym.MFC80D.DLL_Ordinal_6891</a><br>@ebea46c6b17785efc2ebcb24ad99656c</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
push 0xffffffffffffffff
push 0x783b4e42
mov eax, dword
push eax
sub esp, 0x64
mov eax, dword[0x783e90cc]
xor eax, ebp
push eax
lea eax, [ebp-0xc]
mov dword
mov dword[ebp-0x5c], ecx
push 0xffffffffffffffff
mov eax, dword[ebp+8]
push eax
call sym.MFC80D.DLL_Ordinal_1477
test eax, eax
jne off.b75
push 0x212
push 0x781e5524
call sym.MFC80D.DLL_Ordinal_1363
test eax, eax
je off.b75
int3
cmp dword[ebp+0x18], 0
je off.b107
cmp dword[ebp+0x14], 0
jne off.b107
push 0x213
push 0x781e5524
call sym.MFC80D.DLL_Ordinal_1363
test eax, eax
je off.b107
int3
mov eax, dword[ebp+0x10]
and eax, 0x10000000
je off.b137
push 0x214
push 0x781e5524
call sym.MFC80D.DLL_Ordinal_1363
test eax, eax
je off.b137
int3
mov edx, dword[ebp+0x10]
and edx, 3
jne off.b165
push 0x218
push 0x781e5524
call sym.MFC80D.DLL_Ordinal_1363
test eax, eax
je off.b165
int3
mov ecx, dword[ebp+0x10]
and ecx, 3
cmp ecx, 3
jne off.b196
push 0x219
push 0x781e5524
call sym.MFC80D.DLL_Ordinal_1363
test eax, eax
je off.b196
int3
cmp dword[ebp+0xc], 1
jne off.b211
mov eax, dword[ebp-0x5c]
mov ecx, dword[eax+4]
mov dword[ebp+0xc], ecx
lea ecx, [ebp-0x24]
call sym.MFC80D.DLL_Ordinal_299
mov dword[ebp-4], 0
lea ecx, [ebp-0x14]
call sym.MFC80D.DLL_Ordinal_299
mov byte[ebp-4], 1
lea edx, [ebp-0x20]
push edx
lea eax, [ebp-0x14]
push eax
lea ecx, [ebp-0x24]
push ecx
lea edx, [ebp-0x10]
push edx
mov eax, dword[ebp+8]
push eax
call sym.MFC80D.DLL_Ordinal_1524
mov dword[ebp-0x18], eax
cmp dword[ebp-0x18], 0
je off.b409
cmp dword[ebp-0x10], 0x1001
jne off.b409
mov dword[ebp-0x28], 0
mov ecx, dword[ebp+0x10]
and ecx, 2
je off.b314
mov edx, dword[ebp-0x28]
or edx, 0x8000
mov dword[ebp-0x28], edx
jmp off.b325
mov eax, dword[ebp-0x28]
or eax, 0x4000
mov dword[ebp-0x28], eax
push 0x22f
push 0x781e5524
push 0x14
call sym.MFC80D.DLL_Ordinal_900
mov dword[ebp-0x34], eax
mov byte[ebp-4], 2
cmp dword[ebp-0x34], 0
je off.b381
mov ecx, dword[ebp-0x28]
push ecx
lea ecx, [ebp-0x14]
call sym.MFC80D.DLL_Ordinal_1093
push eax
mov ecx, dword[ebp-0x34]
call sym.MFC80D.DLL_Ordinal_644
mov dword[ebp-0x60], eax
jmp off.b388
mov dword[ebp-0x60], 0
mov edx, dword[ebp-0x60]
mov dword[ebp-0x30], edx
mov byte[ebp-4], 1
mov eax, dword[ebp-0x30]
mov dword[ebp-0x1c], eax
jmp off.b987
mov ecx, dword[ebp+0xc]
push ecx
mov edx, dword[ebp+0x10]
push edx
mov eax, dword[ebp+0x18]
push eax
mov ecx, dword[ebp+0x14]
push ecx
mov edx, dword[ebp+8]
push edx
mov eax, dword[ebp-0x5c]
mov ecx, dword[eax+8]
push ecx
call dword[sym.imp.WININET.dll_InternetOpenUrlA]
mov dword[ebp-0x2c], eax
cmp dword[ebp-0x2c], 0
jne off.b465
push 0
mov edx, dword[ebp-0x5c]
mov eax, dword[edx+4]
push eax
call sym.MFC80D.DLL_Ordinal_1562
cmp dword[ebp-0x18], 0
jne off.b483
mov ecx, dword[ebp-0x2c]
push ecx
call sym.MFC80D.DLL_Ordinal_1439
mov dword[ebp-0x10], eax
mov edx, dword[ebp-0x10]
mov dword[ebp-0x64], edx
cmp dword[ebp-0x64], 7
ja off.b536
cmp dword[ebp-0x64], 7
je off.b681
cmp dword[ebp-0x64], 1
je off.b681
cmp dword[ebp-0x64], 2
je off.b570
cmp dword[ebp-0x64], 3
je off.b805
jmp off.b931
cmp dword[ebp-0x64], 0xb
je off.b570
cmp dword[ebp-0x64], 0xd
je off.b805
cmp dword[ebp-0x64], 0x100b
je off.b805
jmp off.b931
push 0x243
push 0x781e5524
push 0x50
call sym.MFC80D.DLL_Ordinal_900
mov dword[ebp-0x3c], eax
mov byte[ebp-4], 3
cmp dword[ebp-0x3c], 0
je off.b635
mov eax, dword[ebp+0xc]
push eax
push 0
push 0x781d2aac
mov ecx, dword[ebp-0x5c]
mov edx, dword[ecx+8]
push edx
mov eax, dword[ebp-0x2c]
push eax
mov ecx, dword[ebp-0x3c]
call sym.MFC80D.DLL_Ordinal_439
mov dword[ebp-0x68], eax
jmp off.b642
mov dword[ebp-0x68], 0
mov ecx, dword[ebp-0x68]
mov dword[ebp-0x38], ecx
mov byte[ebp-4], 1
mov edx, dword[ebp-0x38]
mov dword[ebp-0x1c], edx
mov eax, dword[ebp-0x5c]
push eax
mov ecx, dword[ebp-0x2c]
push ecx
mov ecx, 0x783eb708
call fcn.782d8fe0
jmp off.b987
push 0x24a
push 0x781e5524
push 0x44
call sym.MFC80D.DLL_Ordinal_900
mov dword[ebp-0x44], eax
mov byte[ebp-4], 4
cmp dword[ebp-0x44], 0
je off.b759
push 1
mov edx, dword[ebp+0xc]
push edx
lea ecx, [ebp-0x24]
call sym.MFC80D.DLL_Ordinal_1093
push eax
lea ecx, [ebp-0x14]
call sym.MFC80D.DLL_Ordinal_1093
push eax
mov eax, dword[ebp-0x5c]
mov ecx, dword[eax+8]
push ecx
mov edx, dword[ebp-0x2c]
push edx
mov ecx, dword[ebp-0x44]
call sym.MFC80D.DLL_Ordinal_460
mov dword[ebp-0x6c], eax
jmp off.b766
mov dword[ebp-0x6c], 0
mov eax, dword[ebp-0x6c]
mov dword[ebp-0x40], eax
mov byte[ebp-4], 1
mov ecx, dword[ebp-0x40]
mov dword[ebp-0x1c], ecx
mov edx, dword[ebp-0x5c]
push edx
mov eax, dword[ebp-0x2c]
push eax
mov ecx, 0x783eb708
call fcn.782d8fe0
jmp off.b987
push 0x252
push 0x781e5524
push 0x4c
call sym.MFC80D.DLL_Ordinal_900
mov dword[ebp-0x4c], eax
mov byte[ebp-4], 5
cmp dword[ebp-0x4c], 0
je off.b888
mov ecx, dword[ebp+0xc]
push ecx
mov edx, dword[0x781e53d8]
push edx
lea ecx, [ebp-0x24]
call sym.MFC80D.DLL_Ordinal_1093
push eax
lea ecx, [ebp-0x14]
call sym.MFC80D.DLL_Ordinal_1093
push eax
mov eax, dword[ebp-0x5c]
mov ecx, dword[eax+8]
push ecx
mov edx, dword[ebp-0x2c]
push edx
mov ecx, dword[ebp-0x4c]
call sym.MFC80D.DLL_Ordinal_455
mov dword[ebp-0x70], eax
jmp off.b895
mov dword[ebp-0x70], 0
mov eax, dword[ebp-0x70]
mov dword[ebp-0x48], eax
mov byte[ebp-4], 1
mov ecx, dword[ebp-0x48]
mov dword[ebp-0x1c], ecx
mov edx, dword[ebp-0x5c]
push edx
mov eax, dword[ebp-0x2c]
push eax
mov ecx, 0x783eb708
call fcn.782d8fe0
jmp off.b987
mov ecx, dword[ebp-0x10]
push ecx
push 0x781e5718
push 0
mov ecx, sym.MFC80D.DLL_Ordinal_8513
call sym.MFC80D.DLL_Ordinal_1093
push eax
push 0x259
push 0x781e5524
lea ecx, [ebp-0x54]
call fcn.78210790
push eax
call fcn.782107c0
add esp, 0x14
mov dword[ebp-0x1c], 0
mov edx, dword[ebp-0x1c]
mov dword[ebp-0x58], edx
mov byte[ebp-4], 0
lea ecx, [ebp-0x14]
call sym.MFC80D.DLL_Ordinal_673
mov dword[ebp-4], 0xffffffff
lea ecx, [ebp-0x24]
call sym.MFC80D.DLL_Ordinal_673
mov eax, dword[ebp-0x58]
mov ecx, dword[ebp-0xc]
mov dword
pop ecx
mov esp, ebp
pop ebp
ret 0x14

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/ebea46c6b17785efc2ebcb24ad99656c