---
layout: post
title:  "fcn.10116ed7 @ 89dc67d2f980e8488f97b1bf8cb24258"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.10116ed7
- **Origin (md5):** 89dc67d2f980e8488f97b1bf8cb24258
- **VirusTotal:** [virustotal.com/gui/file/89dc67d2f980e8488f97b1bf8cb24258][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-51.0971794128418, 40.74242401123047, '<b><a href="/report/fcn.10116ed7@89dc67d2f980e8488f97b1bf8cb24258">fcn.10116ed7</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>', 'point { fill-color: #e0440e; }'],
[42.37240219116211, -54.99403381347656, '<b><a href="/report/fcn.0041c4e3@505be53c36227b94e2fcc406f247f6e5">fcn.0041c4e3</a><br>@505be53c36227b94e2fcc406f247f6e5</b><br>', 'null'],
[322.8375244140625, 155.0858917236328, '<b><a href="/report/fcn.004332fd@ba86269e5231930ee4def4088ddb8d19">fcn.004332fd</a><br>@ba86269e5231930ee4def4088ddb8d19</b><br>', 'null'],
[72.60025787353516, 99.44403076171875, '<b><a href="/report/fcn.0047e540@289859175c221b107317af7727d26c17">fcn.0047e540</a><br>@289859175c221b107317af7727d26c17</b><br>', 'null'],
[441.84222412109375, 94.21174621582031, '<b><a href="/report/fcn.004112f4@3d0ec851566b617e7e4e75da3dd9651c">fcn.004112f4</a><br>@3d0ec851566b617e7e4e75da3dd9651c</b><br>', 'null'],
[-43.27737808227539, 196.29360961914062, '<b><a href="/report/fcn.0041d811@f5b8476c36459986b226c45654aeb016">fcn.0041d811</a><br>@f5b8476c36459986b226c45654aeb016</b><br>', 'null'],
[-350.9947509765625, 131.25970458984375, '<b><a href="/report/fcn.00500338@557dcbbf2711fedc520328fbbc657056">fcn.00500338</a><br>@557dcbbf2711fedc520328fbbc657056</b><br>', 'null'],
[-165.2818145751953, 124.69158172607422, '<b><a href="/report/fcn.0041c184@e83552e81a6f265fd7baa50402d3d47d">fcn.0041c184</a><br>@e83552e81a6f265fd7baa50402d3d47d</b><br>', 'null'],
[333.2925720214844, 16.302562713623047, '<b><a href="/report/fcn.004875c1@fb9b7d22bc1c143ac66b0575cbdd088d">fcn.004875c1</a><br>@fb9b7d22bc1c143ac66b0575cbdd088d</b><br>', 'null'],
[-76.42865753173828, -171.5013885498047, '<b><a href="/report/fcn.00409b83@6c5b0418e4a4c57d99cda47d2717045d">fcn.00409b83</a><br>@6c5b0418e4a4c57d99cda47d2717045d</b><br>', 'null'],
[-173.7667999267578, -25.197708129882812, '<b><a href="/report/fcn.0041ce11@20a93604f17ee6f3c2aa7b1f7a497fcf">fcn.0041ce11</a><br>@20a93604f17ee6f3c2aa7b1f7a497fcf</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

mov edi, edi
push ebp
mov ebp, esp
mov eax, 0x1ae4
call fcn.1011c720
mov eax, dword[0x10181630]
xor eax, ebp
mov dword[ebp-4], eax
mov eax, dword[ebp+0xc]
push esi
xor esi, esi
mov dword[ebp-0x1acc], eax
mov dword[ebp-0x1ac8], esi
mov dword[ebp-0x1ad0], esi
cmp dword[ebp+0x10], esi
jne 0x10116f14
xor eax, eax
jmp 0x101175fd
cmp eax, esi
jne 0x10116f3f
call fcn.10105d39
mov dword[eax], esi
call fcn.10105d26
push esi
push esi
push esi
push esi
push esi
mov dword[eax], 0x16
call fcn.100ff7a5
add esp, 0x14
or eax, 0xffffffff
jmp 0x101175fd
push ebx
push edi
mov edi, dword[ebp+8]
mov eax, edi
sar eax, 5
lea esi, [eax*4+0x102273a0]
mov eax, dword[esi]
and edi, 0x1f
shl edi, 6
add eax, edi
mov bl, byte[eax+0x24]
add bl, bl
sar bl, 1
mov dword[ebp-0x1ad8], esi
mov byte[ebp-0x1ad9], bl
cmp bl, 2
je 0x10116f77
cmp bl, 1
jne 0x10116fa7
mov ecx, dword[ebp+0x10]
not ecx
test cl, 1
jne 0x10116fa7
call fcn.10105d39
xor esi, esi
mov dword[eax], esi
call fcn.10105d26
push esi
push esi
push esi
push esi
push esi
mov dword[eax], 0x16
call fcn.100ff7a5
add esp, 0x14
jmp 0x101175ea
test byte[eax+4], 0x20
je 0x10116fbe
push 2
push 0
push 0
push dword[ebp+8]
call fcn.1011c577
add esp, 0x10
push dword[ebp+8]
call fcn.1011f155
pop ecx
test eax, eax
je 0x1011726c
mov eax, dword[esi]
test byte[edi+eax+4], 0x80
je 0x1011726c
call fcn.1010d8af
mov eax, dword[eax+0x6c]
xor ecx, ecx
cmp dword[eax+0x14], ecx
lea eax, [ebp-0x1ae4]
sete cl
push eax
mov eax, dword[esi]
push dword[edi+eax]
mov dword[ebp-0x1ae0], ecx
call dword[sym.imp.KERNEL32.dll_GetConsoleMode]
test eax, eax
je 0x1011726c
xor ecx, ecx
cmp dword[ebp-0x1ae0], ecx
je 0x1011701e
test bl, bl
je 0x1011726e
call dword[sym.imp.KERNEL32.dll_GetConsoleCP]
mov ebx, dword[ebp-0x1acc]
mov dword[ebp-0x1ae4], eax
xor eax, eax
mov dword[ebp-0x1ac4], eax
cmp dword[ebp+0x10], eax
jbe 0x10117583
mov dword[ebp-0x1abc], eax
mov al, byte[ebp-0x1ad9]
test al, al
jne 0x101171bc
mov cl, byte[ebx]
mov esi, dword[ebp-0x1ad8]
xor eax, eax
cmp cl, 0xa
sete al
mov dword[ebp-0x1ae0], eax
mov eax, dword[esi]
add eax, edi
cmp dword[eax+0x38], 0
je 0x1011708a
mov dl, byte[eax+0x34]
mov byte[ebp-0xc], dl
mov byte[ebp-0xb], cl
and dword[eax+0x38], 0
push 2
lea eax, [ebp-0xc]
push eax
jmp 0x101170d5
movsx eax, cl
push eax
call fcn.1010f229
pop ecx
test eax, eax
je 0x101170d2
mov ecx, dword[ebp-0x1acc]
sub ecx, ebx
add ecx, dword[ebp+0x10]
xor eax, eax
inc eax
cmp ecx, eax
jbe 0x10117253
push 2
lea eax, [ebp-0x1ac0]
push ebx
push eax
call fcn.1011f457
add esp, 0xc
cmp eax, 0xffffffff
je 0x1011757a
inc ebx
inc dword[ebp-0x1abc]
jmp 0x101170ed
push 1
push ebx
lea eax, [ebp-0x1ac0]
push eax
call fcn.1011f457
add esp, 0xc
cmp eax, 0xffffffff
je 0x1011757a
xor eax, eax
push eax
push eax
push 5
lea ecx, [ebp-0xc]
push ecx
push 1
lea ecx, [ebp-0x1ac0]
push ecx
push eax
push dword[ebp-0x1ae4]
inc ebx
inc dword[ebp-0x1abc]
call dword[sym.imp.KERNEL32.dll_WideCharToMultiByte]
mov esi, eax
test esi, esi
je 0x1011757a
push 0
lea eax, [ebp-0x1ac4]
push eax
push esi
lea eax, [ebp-0xc]
push eax
mov eax, dword[ebp-0x1ad8]
mov eax, dword[eax]
push dword[edi+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je 0x1011756e
mov eax, dword[ebp-0x1abc]
mov ecx, dword[ebp-0x1ad0]
add eax, ecx
cmp dword[ebp-0x1ac4], esi
mov dword[ebp-0x1ac8], eax
jl 0x1011757a
cmp dword[ebp-0x1ae0], 0
je 0x1011723f
push 0
lea eax, [ebp-0x1ac4]
push eax
push 1
lea eax, [ebp-0xc]
push eax
mov eax, dword[ebp-0x1ad8]
mov eax, dword[eax]
mov byte[ebp-0xc], 0xd
push dword[edi+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je 0x1011756e
cmp dword[ebp-0x1ac4], 1
jl 0x1011757a
inc dword[ebp-0x1ad0]
inc dword[ebp-0x1ac8]
jmp 0x1011723f
cmp al, 1
je 0x101171c4
cmp al, 2
jne 0x101171e5
movzx esi, word[ebx]
xor ecx, ecx
cmp si, 0xa
sete cl
inc ebx
inc ebx
add dword[ebp-0x1abc], 2
mov dword[ebp-0x1ac0], esi
mov dword[ebp-0x1ae0], ecx
cmp al, 1
je 0x101171ed
cmp al, 2
jne 0x1011723f
push dword[ebp-0x1ac0]
call fcn.101212db
pop ecx
cmp ax, word[ebp-0x1ac0]
jne 0x1011756e
add dword[ebp-0x1ac8], 2
cmp dword[ebp-0x1ae0], 0
je 0x1011723f
push 0xd
pop eax
push eax
mov dword[ebp-0x1ac0], eax
call fcn.101212db
pop ecx
cmp ax, word[ebp-0x1ac0]
jne 0x1011756e
inc dword[ebp-0x1ac8]
inc dword[ebp-0x1ad0]
mov eax, dword[ebp+0x10]
cmp dword[ebp-0x1abc], eax
jb 0x10117047
jmp 0x1011757a
mov ecx, dword[esi]
mov dl, byte[ebx]
inc dword[ebp-0x1ac8]
mov byte[edi+ecx+0x34], dl
mov ecx, dword[esi]
mov dword[edi+ecx+0x38], eax
jmp 0x1011757a
xor ecx, ecx
mov eax, dword[esi]
add eax, edi
test byte[eax+4], 0x80
je 0x1011753b
mov eax, dword[ebp-0x1acc]
mov dword[ebp-0x1ac0], ecx
test bl, bl
jne 0x1011735a
mov dword[ebp-0x1ac4], eax
cmp dword[ebp+0x10], ecx
jbe 0x101175bf
jmp 0x101172a7
mov esi, dword[ebp-0x1ad8]
mov ecx, dword[ebp-0x1ac4]
and dword[ebp-0x1abc], 0
sub ecx, dword[ebp-0x1acc]
lea eax, [ebp-0x1ab8]
cmp ecx, dword[ebp+0x10]
jae 0x101172fe
mov edx, dword[ebp-0x1ac4]
inc dword[ebp-0x1ac4]
mov dl, byte[edx]
inc ecx
cmp dl, 0xa
jne 0x101172e9
inc dword[ebp-0x1ad0]
mov byte[eax], 0xd
inc eax
inc dword[ebp-0x1abc]
mov byte[eax], dl
inc eax
inc dword[ebp-0x1abc]
cmp dword[ebp-0x1abc], 0x13ff
jb 0x101172c0
mov ebx, eax
lea eax, [ebp-0x1ab8]
sub ebx, eax
push 0
lea eax, [ebp-0x1ad4]
push eax
push ebx
lea eax, [ebp-0x1ab8]
push eax
mov eax, dword[esi]
push dword[edi+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je 0x1011756e
mov eax, dword[ebp-0x1ad4]
add dword[ebp-0x1ac8], eax
cmp eax, ebx
jl 0x1011757a
mov eax, dword[ebp-0x1ac4]
sub eax, dword[ebp-0x1acc]
cmp eax, dword[ebp+0x10]
jb 0x101172a1
jmp 0x1011757a
mov dword[ebp-0x1abc], eax
cmp bl, 2
jne 0x1011743a
cmp dword[ebp+0x10], ecx
jbe 0x101175bf
jmp 0x1011737a
mov esi, dword[ebp-0x1ad8]
mov ecx, dword[ebp-0x1abc]
and dword[ebp-0x1ac4], 0
sub ecx, dword[ebp-0x1acc]
lea eax, [ebp-0x1ab8]
cmp ecx, dword[ebp+0x10]
jae 0x101173de
mov edx, dword[ebp-0x1abc]
add dword[ebp-0x1abc], 2
movzx edx, word[edx]
inc ecx
inc ecx
cmp dx, 0xa
jne 0x101173c6
add dword[ebp-0x1ad0], 2
push 0xd
pop ebx
mov word[eax], bx
inc eax
inc eax
add dword[ebp-0x1ac4], 2
add dword[ebp-0x1ac4], 2
mov word[eax], dx
inc eax
inc eax
cmp dword[ebp-0x1ac4], 0x13fe
jb 0x10117393
mov ebx, eax
lea eax, [ebp-0x1ab8]
sub ebx, eax
push 0
lea eax, [ebp-0x1ad4]
push eax
push ebx
lea eax, [ebp-0x1ab8]
push eax
mov eax, dword[esi]
push dword[edi+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je 0x1011756e
mov eax, dword[ebp-0x1ad4]
add dword[ebp-0x1ac8], eax
cmp eax, ebx
jl 0x1011757a
mov eax, dword[ebp-0x1abc]
sub eax, dword[ebp-0x1acc]
cmp eax, dword[ebp+0x10]
jb 0x10117374
jmp 0x1011757a
cmp dword[ebp+0x10], ecx
jbe 0x101175bf
mov ecx, dword[ebp-0x1abc]
and dword[ebp-0x1ac4], 0
sub ecx, dword[ebp-0x1acc]
push 2
lea eax, [ebp-0x6b8]
pop esi
cmp ecx, dword[ebp+0x10]
jae 0x101174a0
mov edx, dword[ebp-0x1abc]
movzx edx, word[edx]
add dword[ebp-0x1abc], esi
add ecx, esi
cmp dx, 0xa
jne 0x10117489
push 0xd
pop ebx
mov word[eax], bx
add eax, esi
add dword[ebp-0x1ac4], esi
add dword[ebp-0x1ac4], esi
mov word[eax], dx
add eax, esi
cmp dword[ebp-0x1ac4], 0x6a8
jb 0x1011745f
xor esi, esi
push esi
push esi
push 0xd55
lea ecx, [ebp-0x1410]
push ecx
lea ecx, [ebp-0x6b8]
sub eax, ecx
cdq
sub eax, edx
sar eax, 1
push eax
mov eax, ecx
push eax
push esi
push 0xfde9
call dword[sym.imp.KERNEL32.dll_WideCharToMultiByte]
mov ebx, eax
cmp ebx, esi
je 0x1011756e
push 0
lea eax, [ebp-0x1ad4]
push eax
mov eax, ebx
sub eax, esi
push eax
lea eax, [ebp+esi-0x1410]
push eax
mov eax, dword[ebp-0x1ad8]
mov eax, dword[eax]
push dword[edi+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je 0x1011750e
add esi, dword[ebp-0x1ad4]
cmp ebx, esi
jg 0x101174d7
jmp 0x1011751a
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov dword[ebp-0x1ac0], eax
cmp ebx, esi
jg 0x1011757a
mov eax, dword[ebp-0x1abc]
sub eax, dword[ebp-0x1acc]
mov dword[ebp-0x1ac8], eax
cmp eax, dword[ebp+0x10]
jb 0x10117443
jmp 0x1011757a
push 0
lea ecx, [ebp-0x1ad4]
push ecx
push dword[ebp+0x10]
push dword[ebp-0x1acc]
push dword[eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je 0x1011756e
mov eax, dword[ebp-0x1ad4]
and dword[ebp-0x1ac0], 0
mov dword[ebp-0x1ac8], eax
jmp 0x1011757a
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov dword[ebp-0x1ac0], eax
cmp dword[ebp-0x1ac8], 0
jne 0x101175ef
cmp dword[ebp-0x1ac0], 0
je 0x101175b9
push 5
pop esi
cmp dword[ebp-0x1ac0], esi
jne 0x101175ab
call fcn.10105d26
mov dword[eax], 9
call fcn.10105d39
mov dword[eax], esi
jmp 0x101175ea
push dword[ebp-0x1ac0]
call fcn.10105d4c
pop ecx
jmp 0x101175ea
mov esi, dword[ebp-0x1ad8]
mov eax, dword[esi]
test byte[edi+eax+4], 0x40
je 0x101175d7
mov eax, dword[ebp-0x1acc]
cmp byte[eax], 0x1a
jne 0x101175d7
xor eax, eax
jmp 0x101175fb
call fcn.10105d26
mov dword[eax], 0x1c
call fcn.10105d39
and dword[eax], 0
or eax, 0xffffffff
jmp 0x101175fb
mov eax, dword[ebp-0x1ac8]
sub eax, dword[ebp-0x1ad0]
pop edi
pop ebx
mov ecx, dword[ebp-4]
xor ecx, ebp
pop esi
call fcn.10103a83
leave
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/89dc67d2f980e8488f97b1bf8cb24258