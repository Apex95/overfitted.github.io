---
layout: post
title:  "main @ 7307643b343733b7fbd7b4b4fb482515"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** main
- **Origin (md5):** 7307643b343733b7fbd7b4b4fb482515
- **VirusTotal:** [virustotal.com/gui/file/7307643b343733b7fbd7b4b4fb482515][virustotal_ref]

# Code Tags
<span class="tag" id="THREAD">THREAD</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-94.95413208007812, -144.6951141357422, '<b><a href="/report/main@7307643b343733b7fbd7b4b4fb482515">main</a><br>@7307643b343733b7fbd7b4b4fb482515</b><br>', 'point { fill-color: #e0440e; }'],
[-39.456092834472656, 338.5307312011719, '<b><a href="/report/main@9571c7458fae91969aaed3955e433f49">main</a><br>@9571c7458fae91969aaed3955e433f49</b><br>', 'null'],
[22.47319221496582, 72.9612808227539, '<b><a href="/report/main@3aa98225e51cbcae2d334c8b6b4ed9fd">main</a><br>@3aa98225e51cbcae2d334c8b6b4ed9fd</b><br>', 'null'],
[-358.3883056640625, -173.50555419921875, '<b><a href="/report/main@146b14fc12cf789043a79d4f548a23bf">main</a><br>@146b14fc12cf789043a79d4f548a23bf</b><br>', 'null'],
[-275.309326171875, 128.8827362060547, '<b><a href="/report/main@e83552e81a6f265fd7baa50402d3d47d">main</a><br>@e83552e81a6f265fd7baa50402d3d47d</b><br>', 'null'],
[233.19459533691406, -144.36944580078125, '<b><a href="/report/main@b8b9cf6862b0d68d10750002e5baaf97">main</a><br>@b8b9cf6862b0d68d10750002e5baaf97</b><br>', 'null'],
[26.630661010742188, -380.1643371582031, '<b><a href="/report/main@44a756939733df3681808b122b91651f">main</a><br>@44a756939733df3681808b122b91651f</b><br>', 'null'],
[277.9456481933594, 168.21144104003906, '<b><a href="/report/main@3d7f25d788af3e7f7707a736ac852465">main</a><br>@3d7f25d788af3e7f7707a736ac852465</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push 0x100
mov eax, 0x451366
call fcn.0044b4dc
xor ebx, ebx
push ebx
call fcn.004130f1
pop ecx
mov esi, eax
mov dword[ebp-0xcc], edx
call dword[sym.imp.KERNEL32.dll_GetTickCount]
add eax, esi
push eax
call fcn.004130be
fld qword[0x46f948]
fstp qword[ebp-0x9c]
pop ecx
fld qword[ebp-0x9c]
fadd qword[ebp-0x9c]
fstp qword[ebp-0x9c]
fld qword[ebp-0x9c]
fsub qword[0x46f940]
fstp qword[ebp-0x9c]
fld qword[ebp-0x9c]
fadd qword[0x46f938]
fstp qword[ebp-0x9c]
fld qword[ebp-0x9c]
fadd qword[0x46f930]
fsub qword[ebp-0x9c]
fadd qword[ebp-0x9c]
fadd qword[ebp-0x9c]
fadd qword[0x46f928]
fsub qword[ebp-0x9c]
fstp qword[ebp-0x9c]
call fcn.0043b284
call fcn.00405c8e
mov dword[ebp-0xac], 0x2d
mov dword[ebp-0x98], 0x17
mov dword[ebp-0xb0], ebx
mov eax, dword[ebp-0xac]
mov ecx, dword[ebp-0xb0]
imul eax, eax, 0x60
sub eax, ecx
add eax, dword[ebp-0xb0]
mov dword[ebp-0xac], eax
call fcn.0044af6b
mov esi, eax
call fcn.0044af6b
mov edi, eax
call fcn.0044af6b
mov dword[ebp-0xac], eax
call fcn.0044afcf
mov dword[ebp-0xb0], eax
call fcn.0044afcf
push dword[eax+4]
mov eax, dword[ebp-0xb0]
push dword[eax]
call fcn.0044afc3
push eax
push dword[esi+0xc]
mov eax, dword[ebp-0xac]
push dword[edi+8]
push dword[eax+4]
push 0x455860
push dword[0x4761dc]
push ebx
call fcn.0043a48f
add esp, 0x24
call fcn.0044af9b
test al, al
je off.b2256
call fcn.0044afcf
cmp dword[eax], 6
jl off.b2256
mov dword[ebp-0x108], 0x455b30
mov dword[ebp-0x104], ebx
mov dword[ebp-0x100], ebx
mov dword[ebp-0xfc], ebx
mov dword[ebp-0xf8], ebx
mov dword[ebp-0xf4], ebx
mov dword[ebp-0xf0], ebx
mov dword[ebp-4], ebx
mov edi, dword[0x477f88]
lea eax, [ebp-0x108]
add edi, 0x10
push edi
mov dword[ebp-0xc8], eax
call dword[sym.imp.KERNEL32.dll_EnterCriticalSection]
call dword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
mov esi, dword[0x477ff0]
mov dword[ebp-0xc4], eax
lea eax, [ebp-0xc8]
push eax
lea eax, [ebp-0xc4]
push eax
call fcn.00406141
push edi
call dword[sym.imp.KERNEL32.dll_LeaveCriticalSection]
mov dword[ebp-0xb8], ebx
lea eax, [ebp-0xb8]
push eax
mov byte[ebp-4], 1
call fcn.00405813
fld qword[0x46f970]
mov dword[ebp-0x40], ebx
xor eax, eax
lea edi, [ebp-0x3c]
stosd dword
stosd dword
stosd dword
fstp qword[ebp-0x9c]
fld qword[ebp-0x9c]
xor eax, eax
fld qword[0x46f968]
fadd st(1), st(0)
fld qword[ebp-0x9c]
fmul qword[ebp-0x9c]
fmul qword[ebp-0x9c]
fdivrp st(1)
fsubp st(1)
fstp qword[ebp-0x9c]
fld qword[ebp-0x9c]
fld qword[ebp-0x9c]
fmul qword[ebp-0x9c]
fmul qword[ebp-0x9c]
fsubp st(1)
fadd qword[ebp-0x9c]
fadd qword[0x46f960]
fld qword[ebp-0x9c]
fdiv qword[0x46f910]
fsubp st(1)
fadd qword[ebp-0x9c]
fadd qword[ebp-0x9c]
fsub qword[0x46f958]
fstp qword[ebp-0x9c]
fld qword[ebp-0x9c]
fadd qword[ebp-0x9c]
fstp qword[ebp-0x9c]
fld qword[ebp-0x9c]
fsub qword[0x46f950]
fstp qword[ebp-0x9c]
fld qword[ebp-0x9c]
fsub qword[0x46f920]
fld qword[ebp-0x9c]
fmul qword[ebp-0x9c]
mov dword[ebp-0x1c], 7
mov dword[ebp-0x20], ebx
mov word[ebp-0x30], ax
fsubp st(1)
fstp qword[ebp-0x9c]
mov byte[ebp-4], 2
call fcn.0043c10b
fld qword[0x46f948]
mov esi, eax
fstp qword[ebp-0x9c]
push 0x7b
fld qword[ebp-0x9c]
push esi
fadd qword[ebp-0x9c]
fstp qword[ebp-0x9c]
fld qword[ebp-0x9c]
fsub qword[0x46f940]
fstp qword[ebp-0x9c]
fld qword[ebp-0x9c]
fadd qword[0x46f938]
fstp qword[ebp-0x9c]
fld qword[ebp-0x9c]
fadd qword[0x46f930]
fsub qword[ebp-0x9c]
fadd qword[ebp-0x9c]
fadd qword[ebp-0x9c]
fadd qword[0x46f928]
fsub qword[ebp-0x9c]
fstp qword[ebp-0x9c]
call fcn.004132e4
push 0x7d
push esi
mov edi, eax
call fcn.004132e4
add esp, 0x10
cmp edi, ebx
je off.b904
cmp eax, edi
jbe off.b904
sub eax, edi
sar eax, 1
inc eax
mov ecx, edi
lea esi, [ebp-0x30]
call fcn.00404efb
cmp dword[ebp-0x1c], 8
mov eax, dword[ebp-0x30]
jae off.b894
mov eax, esi
lea ecx, [ebp-0x40]
push ecx
push eax
call fcn.0043b1a4
fld qword[0x46f970]
push 0x56
fstp qword[ebp-0x9c]
pop eax
fld qword[ebp-0x9c]
fld qword[0x46f968]
fadd st(1), st(0)
fld qword[ebp-0x9c]
fmul qword[ebp-0x9c]
fmul qword[ebp-0x9c]
fdivrp st(1)
fsubp st(1)
fstp qword[ebp-0x9c]
fld qword[ebp-0x9c]
fld qword[ebp-0x9c]
fmul qword[ebp-0x9c]
fmul qword[ebp-0x9c]
fsubp st(1)
fadd qword[ebp-0x9c]
fadd qword[0x46f960]
fld qword[ebp-0x9c]
fdiv qword[0x46f910]
fsubp st(1)
fadd qword[ebp-0x9c]
fadd qword[ebp-0x9c]
fsub qword[0x46f958]
fstp qword[ebp-0x9c]
fld qword[ebp-0x9c]
fadd qword[ebp-0x9c]
fstp qword[ebp-0x9c]
fld qword[ebp-0x9c]
fsub qword[0x46f950]
fstp qword[ebp-0x9c]
fld qword[ebp-0x9c]
fsub qword[0x46f920]
fld qword[ebp-0x9c]
fmul qword[ebp-0x9c]
fsubp st(1)
fstp qword[ebp-0x9c]
mov dword[ebp-0x98], 0x2b
mov dword[ebp-0xa0], 0x47
mov dword[ebp-0xa8], 0x5b
mov dword[ebp-0xa4], eax
mov dword[ebp-0xac], 0x27
mov dword[ebp-0xb0], 6
mov ecx, dword[ebp-0xa4]
add ecx, 0xa
mov dword[ebp-0xa8], ecx
mov ecx, dword[ebp-0xa4]
imul ecx, ecx, 0x45
mov dword[ebp-0xb0], ecx
mov ecx, dword[ebp-0x98]
sub ecx, 0x20
mov dword[ebp-0xa8], ecx
mov ecx, dword[ebp-0xb0]
add ecx, eax
mov dword[ebp-0xa0], ecx
mov eax, dword[ebp-0xa4]
mov dword[ebp-0xa4], eax
mov eax, dword[ebp-0xac]
sub eax, 0x22
mov dword[ebp-0xa8], eax
mov eax, dword[ebp-0xa0]
mov ecx, dword[ebp-0xa0]
imul eax, ecx
mov ecx, 0xffffff68
sub ecx, eax
mov eax, dword[ebp-0xac]
mov edx, dword[ebp-0xa8]
imul eax, edx
sub ecx, eax
add ecx, dword[ebp-0xac]
mov dword[ebp-0xb0], ebx
add ecx, dword[ebp-0xa0]
mov eax, dword[ebp-0xb8]
mov dword[ebp-0xa4], ecx
mov dword[ebp-0xd0], 0x455c30
mov dword[ebp-0xcc], eax
mov dword[ebp-0xc0], ebx
cmp dword[ebp-0x20], ebx
je off.b1525
call fcn.0043ac95
lea ecx, [ebp-0xc0]
push ecx
push ebx
push 4
lea ecx, [ebp-0xd0]
push ecx
lea ecx, [ebp-0x40]
push ecx
call dword[eax+0x1dc]
mov dword[ebp-0xb0], eax
cmp eax, ebx
jge off.b1525
cmp dword[ebp-0x1c], 8
mov eax, dword[ebp-0x30]
jae off.b1405
lea eax, [ebp-0x30]
cmp eax, ebx
je off.b1425
cmp dword[ebp-0x1c], 8
jb off.b1420
mov eax, dword[ebp-0x30]
jmp off.b1430
lea eax, [ebp-0x30]
jmp off.b1430
mov eax, dword[0x4768c8]
push eax
lea eax, [ebp-0x78]
call fcn.00404f76
lea eax, [ebp-0x78]
push 0xfde9
push eax
lea ecx, [ebp-0x94]
mov byte[ebp-4], 3
call fcn.00446348
pop ecx
pop ecx
mov byte[ebp-4], 4
cmp dword[eax+0x14], 0x10
jb off.b1477
mov eax, dword[eax]
push eax
push dword[ebp-0xb0]
push dword[0x4761e0]
push 1
call fcn.0043a48f
add esp, 0x10
push 1
xor edi, edi
lea esi, [ebp-0x94]
call fcn.00404b0b
push 1
lea esi, [ebp-0x78]
call fcn.00404e4f
mov byte[ebp-4], 5
mov dword[ebp-0xa4], 0x29
mov dword[ebp-0xa8], 0x37
mov dword[ebp-0xa0], 0xc
mov dword[ebp-0xac], 0x31
mov eax, dword[ebp-0xac]
mov ecx, dword[ebp-0xa8]
imul eax, ecx
mov ecx, dword[ebp-0xa8]
imul eax, eax, 0xffffffd3
imul ecx, ecx, 0x37
sub eax, ecx
mov ecx, dword[ebp-0xa4]
sub eax, ecx
add eax, dword[ebp-0xac]
mov ecx, dword[ebp-0xa0]
lea eax, [eax+ecx+1]
mov dword[ebp-0xac], eax
mov eax, dword[ebp-0xa0]
mov ecx, dword[ebp-0xa4]
imul eax, ecx
mov ecx, dword[ebp-0xa0]
sub eax, ecx
add eax, dword[ebp-0xa8]
add eax, dword[ebp-0xa8]
add eax, dword[ebp-0xa4]
mov dword[ebp-0xa0], eax
mov eax, dword[ebp-0xa4]
mov eax, dword[ebp-0xa8]
mov eax, dword[ebp-0xa0]
mov ecx, dword[ebp-0xa4]
cmp ecx, eax
jl off.b1718
mov eax, dword[ebp-0xa0]
imul eax, eax, 0x5e
mov dword[ebp-0xa4], eax
push dword[ebp-0xb8]
lea eax, [ebp-0xbc]
push eax
call fcn.00405450
mov byte[ebp-4], 6
mov dword[ebp-0xa4], 0x20
mov dword[ebp-0xa0], 3
mov eax, dword[ebp-0xa0]
mov ecx, dword[ebp-0xa4]
sub eax, ecx
mov dword[ebp-0xa0], eax
mov eax, dword[ebp-0xa4]
cdq
push 0x24
pop ecx
idiv ecx
mov ecx, dword[ebp-0xa0]
push 0xffffffffffffffce
lea esi, [ebp-0x108]
sub eax, ecx
add eax, dword[ebp-0xa0]
mov ecx, dword[ebp-0xa0]
lea eax, [eax+ecx+0x21]
mov dword[ebp-0xa4], eax
mov eax, dword[ebp-0xa0]
pop ecx
sub ecx, eax
mov eax, dword[ebp-0xa0]
sub ecx, eax
add ecx, dword[ebp-0xa4]
add ecx, dword[ebp-0xa4]
mov dword[ebp-0xa4], ecx
call fcn.00405bfe
mov byte[ebp-4], 7
mov eax, dword[ebp-0xbc]
cmp eax, ebx
je off.b1887
lea ebx, [eax-4]
call fcn.00441880
mov byte[ebp-4], 5
mov eax, dword[ebp-0xbc]
xor ebx, ebx
cmp eax, ebx
je off.b1914
mov ecx, dword[eax]
push eax
call dword[ecx+8]
mov dword[ebp-4], 2
jmp off.b1993
mov dword[ebp-0xa4], 0x20
mov dword[ebp-0xa0], 3
mov eax, dword[ebp-0xa0]
mov ecx, dword[ebp-0xa4]
sub eax, ecx
mov dword[ebp-0xa0], eax
mov eax, dword[ebp-0xa4]
cdq
push 0x24
pop ecx
idiv ecx
mov ecx, dword[ebp-0xa0]
push 0xffffffffffffffce
sub eax, ecx
add eax, dword[ebp-0xa0]
mov ecx, dword[ebp-0xa0]
lea eax, [eax+ecx+0x21]
mov dword[ebp-0xa4], eax
mov eax, dword[ebp-0xa0]
pop ecx
sub ecx, eax
mov eax, dword[ebp-0xa0]
sub ecx, eax
add ecx, dword[ebp-0xa4]
add ecx, dword[ebp-0xa4]
mov dword[ebp-0xa4], ecx
cmp dword[ebp-0x20], ebx
je off.b2136
cmp dword[ebp-0xb0], ebx
jl off.b2136
push dword[ebp-0xc0]
call fcn.0043b292
call fcn.00405b06
push 1
xor edi, edi
lea esi, [ebp-0x30]
call fcn.00404e4f
mov byte[ebp-4], bl
mov eax, dword[ebp-0xb8]
cmp eax, ebx
je off.b2172
mov ecx, dword[eax]
push eax
call dword[ecx+8]
or dword[ebp-4], 0xffffffff
cmp dword[ebp-0xf8], ebx
je off.b2202
push dword[ebp-0xf8]
call fcn.00412cdc
pop ecx
mov dword[ebp-0xf8], ebx
mov dword[ebp-0xf4], ebx
mov dword[ebp-0xf0], ebx
cmp dword[ebp-0x104], ebx
je off.b2240
push dword[ebp-0x104]
call fcn.00412cdc
pop ecx
mov dword[ebp-0x104], ebx
mov dword[ebp-0x100], ebx
mov dword[ebp-0xfc], ebx
xor ebx, ebx
jmp off.b2369
push dword[0x4768b0]
push dword[0x4768ac]
call fcn.0043bb19
fld qword[0x46f920]
fstp qword[ebp-0xb4]
fld qword[0x46f918]
fstp qword[ebp-0x9c]
fld qword[ebp-0x9c]
fsub qword[ebp-0x9c]
fld qword[ebp-0x9c]
fmul qword[0x46f910]
fsubp st(1)
fld qword[ebp-0x9c]
fmul qword[0x46f908]
fmul qword[ebp-0x9c]
fsubp st(1)
fld qword[ebp-0x9c]
fmul qword[ebp-0xb4]
fsubp st(1)
fadd qword[0x46f900]
fstp qword[ebp-0xb4]
mov dword[ebp-0x98], 0x2b
mov dword[ebp-0xa0], 0x47
mov dword[ebp-0xa4], 0x5b
push 0x56
pop eax
mov dword[ebp-0xa8], eax
mov dword[ebp-0xb0], 0x27
mov dword[ebp-0xac], 6
mov ecx, dword[ebp-0xa8]
add ecx, 0xa
mov dword[ebp-0xa4], ecx
mov ecx, dword[ebp-0xa8]
imul ecx, ecx, 0x45
mov dword[ebp-0xac], ecx
mov ecx, dword[ebp-0x98]
sub ecx, 0x20
mov dword[ebp-0xa4], ecx
mov ecx, dword[ebp-0xac]
add ecx, eax
mov dword[ebp-0xa0], ecx
mov eax, dword[ebp-0xa8]
mov dword[ebp-0xa8], eax
mov eax, dword[ebp-0xb0]
sub eax, 0x22
mov dword[ebp-0xa4], eax
mov eax, dword[ebp-0xa0]
mov ecx, dword[ebp-0xa0]
imul eax, ecx
mov ecx, 0xffffff68
sub ecx, eax
mov eax, dword[ebp-0xb0]
mov edx, dword[ebp-0xa4]
imul eax, edx
sub ecx, eax
add ecx, dword[ebp-0xb0]
add ecx, dword[ebp-0xa0]
push dword[0x4761e8]
mov dword[ebp-0xa8], ecx
push ebx
call fcn.0043a48f
fld qword[0x46f948]
fstp qword[ebp-0x9c]
pop ecx
fld qword[ebp-0x9c]
pop ecx
fadd qword[ebp-0x9c]
fstp qword[ebp-0x9c]
fld qword[ebp-0x9c]
fsub qword[0x46f940]
fstp qword[ebp-0x9c]
fld qword[ebp-0x9c]
fadd qword[0x46f938]
fstp qword[ebp-0x9c]
fld qword[ebp-0x9c]
fadd qword[0x46f930]
fsub qword[ebp-0x9c]
fadd qword[ebp-0x9c]
fadd qword[ebp-0x9c]
fadd qword[0x46f928]
fsub qword[ebp-0x9c]
fstp qword[ebp-0x9c]
call fcn.00405981
call fcn.0043b279
mov eax, dword[0x477fac]
cmp eax, ebx
je off.b2724
push eax
call fcn.0043ab81
mov eax, dword[0x477fb0]
cmp eax, ebx
je off.b2739
push eax
call fcn.0043ab81
xor eax, eax
call fcn.0044b538
ret 0x10

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/7307643b343733b7fbd7b4b4fb482515