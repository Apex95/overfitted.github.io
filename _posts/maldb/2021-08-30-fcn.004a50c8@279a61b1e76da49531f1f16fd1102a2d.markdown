---
layout: post
title:  "fcn.004a50c8 @ 279a61b1e76da49531f1f16fd1102a2d"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.004a50c8
- **Origin (md5):** 279a61b1e76da49531f1f16fd1102a2d
- **VirusTotal:** [virustotal.com/gui/file/279a61b1e76da49531f1f16fd1102a2d][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-25.117448806762695, 147.08856201171875, '<b><a href="/report/fcn.004a50c8@279a61b1e76da49531f1f16fd1102a2d">fcn.004a50c8</a><br>@279a61b1e76da49531f1f16fd1102a2d</b><br>', 'point { fill-color: #e0440e; }'],
[-47.63814926147461, 31.74105453491211, '<b><a href="/report/fcn.004fe554@e2ba7f10eb234338a49853c34d7d9c56">fcn.004fe554</a><br>@e2ba7f10eb234338a49853c34d7d9c56</b><br>', 'null'],
[-71.3539047241211, 139.9982452392578, '<b><a href="/report/fcn.101109f6@89dc67d2f980e8488f97b1bf8cb24258">fcn.101109f6</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>', 'null'],
[19.55087661743164, -50.438987731933594, '<b><a href="/report/fcn.0041fd5c@3d7f25d788af3e7f7707a736ac852465">fcn.0041fd5c</a><br>@3d7f25d788af3e7f7707a736ac852465</b><br>', 'null'],
[-25.26134490966797, -72.91620635986328, '<b><a href="/report/fcn.0041fd5c@e83552e81a6f265fd7baa50402d3d47d">fcn.0041fd5c</a><br>@e83552e81a6f265fd7baa50402d3d47d</b><br>', 'null'],
[-68.59980010986328, -48.563899993896484, '<b><a href="/report/fcn.00499a34@4fe6510221c33bf023f6abed461fc13f">fcn.00499a34</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>', 'null'],
[-84.36322021484375, -1.3469445705413818, '<b><a href="/report/fcn.0041fd5c@3aa98225e51cbcae2d334c8b6b4ed9fd">fcn.0041fd5c</a><br>@3aa98225e51cbcae2d334c8b6b4ed9fd</b><br>', 'null'],
[-23.902944564819336, -15.834375381469727, '<b><a href="/report/fcn.0041fd5c@7307643b343733b7fbd7b4b4fb482515">fcn.0041fd5c</a><br>@7307643b343733b7fbd7b4b4fb482515</b><br>', 'null'],
[33.175567626953125, -2.564481019973755, '<b><a href="/report/fcn.0041fd5c@9571c7458fae91969aaed3955e433f49">fcn.0041fd5c</a><br>@9571c7458fae91969aaed3955e433f49</b><br>', 'null'],
[-54.17330551147461, 182.4224090576172, '<b><a href="/report/fcn.00575f48@c60344b51fa39a329b92557d24ff7670">fcn.00575f48</a><br>@c60344b51fa39a329b92557d24ff7670</b><br>', 'null'],
[1.7175981998443604, 35.84331512451172, '<b><a href="/report/fcn.004200bc@96a869ae624ddb4834a1d5a829f85469">fcn.004200bc</a><br>@96a869ae624ddb4834a1d5a829f85469</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

mov edi, edi
push ebp
mov ebp, esp
sub esp, 0x1c
mov edx, dword[ebp+0x10]
push esi
mov esi, dword[ebp+8]
push 0xfffffffffffffffe
pop eax
mov dword[ebp-0x14], eax
mov dword[ebp-0x1c], edx
cmp esi, eax
jne off.b55
call fcn.00495b7f
and dword[eax], 0
call fcn.00495b6c
mov dword[eax], 9
or eax, 0xffffffff
jmp off.b1471
push ebx
xor ebx, ebx
cmp esi, ebx
jl off.b70
cmp esi, dword[0x5447d0]
jb off.b109
call fcn.00495b7f
mov dword[eax], ebx
call fcn.00495b6c
push ebx
push ebx
push ebx
push ebx
push ebx
mov dword[eax], 9
call fcn.0049389f
add esp, 0x14
or eax, 0xffffffff
jmp off.b1470
mov eax, esi
sar eax, 5
push edi
lea edi, [eax*4+0x5447e0]
mov eax, dword[edi]
and esi, 0x1f
shl esi, 6
add eax, esi
mov cl, byte[eax+4]
test cl, 1
jne off.b160
call fcn.00495b7f
mov dword[eax], ebx
call fcn.00495b6c
mov dword[eax], 9
jmp off.b266
cmp edx, 0x7fffffff
ja off.b248
mov dword[ebp-0x10], ebx
cmp edx, ebx
je off.b1467
test cl, 2
jne off.b1467
cmp dword[ebp+0xc], ebx
je off.b248
mov al, byte[eax+0x24]
add al, al
sar al, 1
mov byte[ebp-2], al
movsx eax, al
dec eax
push 4
pop ecx
je off.b240
dec eax
jne off.b229
mov eax, edx
not eax
test al, 1
je off.b248
and edx, 0xfffffffe
mov dword[ebp+0x10], edx
mov eax, dword[ebp+0xc]
mov dword[ebp-0xc], eax
jmp off.b369
mov eax, edx
not eax
test al, 1
jne off.b281
call fcn.00495b7f
mov dword[eax], ebx
call fcn.00495b6c
mov dword[eax], 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call fcn.0049389f
add esp, 0x14
jmp off.b333
mov eax, edx
shr eax, 1
mov dword[ebp+0x10], ecx
cmp eax, ecx
jb off.b295
mov dword[ebp+0x10], eax
push dword[ebp+0x10]
call fcn.004997e0
pop ecx
mov dword[ebp-0xc], eax
cmp eax, ebx
jne off.b341
call fcn.00495b6c
mov dword[eax], 0xc
call fcn.00495b7f
mov dword[eax], 8
or eax, 0xffffffff
jmp off.b1469
push 1
push ebx
push ebx
push dword[ebp+8]
call fcn.004a9f8b
mov ecx, dword[edi]
mov dword[esi+ecx+0x28], eax
mov eax, dword[ebp-0xc]
add esp, 0x10
mov dword[esi+ecx+0x2c], edx
mov ecx, dword[edi]
add ecx, esi
test byte[ecx+4], 0x48
je off.b495
mov cl, byte[ecx+5]
cmp cl, 0xa
je off.b495
cmp dword[ebp+0x10], ebx
je off.b495
mov byte[eax], cl
mov ecx, dword[edi]
inc eax
dec dword[ebp+0x10]
mov dword[ebp-0x10], 1
mov byte[esi+ecx+5], 0xa
cmp byte[ebp-2], bl
je off.b495
mov ecx, dword[edi]
mov cl, byte[esi+ecx+0x25]
cmp cl, 0xa
je off.b495
cmp dword[ebp+0x10], ebx
je off.b495
mov byte[eax], cl
mov ecx, dword[edi]
inc eax
dec dword[ebp+0x10]
cmp byte[ebp-2], 1
mov dword[ebp-0x10], 2
mov byte[esi+ecx+0x25], 0xa
jne off.b495
mov ecx, dword[edi]
mov cl, byte[esi+ecx+0x26]
cmp cl, 0xa
je off.b495
cmp dword[ebp+0x10], ebx
je off.b495
mov byte[eax], cl
mov ecx, dword[edi]
inc eax
dec dword[ebp+0x10]
mov dword[ebp-0x10], 3
mov byte[esi+ecx+0x26], 0xa
push ebx
lea ecx, [ebp-0x18]
push ecx
push dword[ebp+0x10]
push eax
mov eax, dword[edi]
push dword[esi+eax]
call dword[sym.imp.KERNEL32.dll_ReadFile]
test eax, eax
je off.b1414
mov ecx, dword[ebp-0x18]
cmp ecx, ebx
jl off.b1414
cmp ecx, dword[ebp+0x10]
ja off.b1414
mov eax, dword[edi]
add dword[ebp-0x10], ecx
lea eax, [esi+eax+4]
test byte[eax], 0x80
je off.b1047
cmp byte[ebp-2], 2
je off.b1105
cmp ecx, ebx
je off.b588
mov ecx, dword[ebp-0xc]
cmp byte[ecx], 0xa
jne off.b588
or byte[eax], 4
jmp off.b591
and byte[eax], 0xfb
mov ebx, dword[ebp-0xc]
mov eax, dword[ebp-0x10]
add eax, ebx
mov dword[ebp+0x10], ebx
mov dword[ebp-0x10], eax
cmp ebx, eax
jae off.b821
mov ecx, dword[ebp+0x10]
mov al, byte[ecx]
cmp al, 0x1a
je off.b800
cmp al, 0xd
je off.b642
mov byte[ebx], al
inc ebx
inc ecx
mov dword[ebp+0x10], ecx
jmp off.b786
mov eax, dword[ebp-0x10]
dec eax
cmp ecx, eax
jae off.b673
lea eax, [ecx+1]
cmp byte[eax], 0xa
jne off.b668
inc ecx
inc ecx
mov dword[ebp+0x10], ecx
mov byte[ebx], 0xa
jmp off.b785
mov dword[ebp+0x10], eax
jmp off.b782
inc dword[ebp+0x10]
push 0
lea eax, [ebp-0x18]
push eax
push 1
lea eax, [ebp-1]
push eax
mov eax, dword[edi]
push dword[esi+eax]
call dword[sym.imp.KERNEL32.dll_ReadFile]
test eax, eax
jne off.b713
call dword[sym.imp.KERNEL32.dll_GetLastError]
test eax, eax
jne off.b782
cmp dword[ebp-0x18], 0
je off.b782
mov eax, dword[edi]
test byte[esi+eax+4], 0x48
je off.b748
cmp byte[ebp-1], 0xa
je off.b663
mov byte[ebx], 0xd
mov eax, dword[edi]
mov cl, byte[ebp-1]
mov byte[esi+eax+5], cl
jmp off.b785
cmp ebx, dword[ebp-0xc]
jne off.b759
cmp byte[ebp-1], 0xa
je off.b663
push 1
push 0xffffffffffffffff
push 0xffffffffffffffff
push dword[ebp+8]
call fcn.004a9f8b
add esp, 0x10
cmp byte[ebp-1], 0xa
je off.b786
mov byte[ebx], 0xd
inc ebx
mov eax, dword[ebp-0x10]
cmp dword[ebp+0x10], eax
jb off.b613
jmp off.b821
mov eax, dword[edi]
lea eax, [esi+eax+4]
test byte[eax], 0x40
jne off.b816
or byte[eax], 2
jmp off.b821
mov al, byte[ecx]
mov byte[ebx], al
inc ebx
mov eax, ebx
sub eax, dword[ebp-0xc]
cmp byte[ebp-2], 1
mov dword[ebp-0x10], eax
jne off.b1047
test eax, eax
je off.b1047
dec ebx
mov cl, byte[ebx]
test cl, cl
js off.b860
inc ebx
jmp off.b994
xor eax, eax
inc eax
movzx ecx, cl
jmp off.b883
cmp eax, 4
jg off.b892
cmp ebx, dword[ebp-0xc]
jb off.b892
dec ebx
movzx ecx, byte[ebx]
inc eax
cmp byte[ecx+0x53fa98], 0
je off.b868
mov dl, byte[ebx]
movzx ecx, dl
movsx ecx, byte[ecx+0x53fa98]
test ecx, ecx
jne off.b921
call fcn.00495b6c
mov dword[eax], 0x2a
jmp off.b1043
inc ecx
cmp ecx, eax
jne off.b930
add ebx, eax
jmp off.b994
mov ecx, dword[edi]
add ecx, esi
test byte[ecx+4], 0x48
je off.b976
inc ebx
cmp eax, 2
mov byte[ecx+5], dl
jl off.b958
mov dl, byte[ebx]
mov ecx, dword[edi]
mov byte[esi+ecx+0x25], dl
inc ebx
cmp eax, 3
jne off.b972
mov dl, byte[ebx]
mov ecx, dword[edi]
mov byte[esi+ecx+0x26], dl
inc ebx
sub ebx, eax
jmp off.b994
neg eax
cdq
push 1
push edx
push eax
push dword[ebp+8]
call fcn.004a9f8b
add esp, 0x10
mov eax, dword[ebp-0x1c]
sub ebx, dword[ebp-0xc]
shr eax, 1
push eax
push dword[ebp+0xc]
push ebx
push dword[ebp-0xc]
push 0
push 0xfde9
call dword[sym.imp.KERNEL32.dll_MultiByteToWideChar]
mov dword[ebp-0x10], eax
test eax, eax
jne off.b1082
call dword[sym.imp.KERNEL32.dll_GetLastError]
push eax
call fcn.00495b92
pop ecx
or dword[ebp-0x14], 0xffffffff
mov eax, dword[ebp-0xc]
cmp eax, dword[ebp+0xc]
je off.b1062
push eax
call fcn.00495a9c
pop ecx
mov eax, dword[ebp-0x14]
cmp eax, 0xfffffffe
jne off.b1469
mov eax, dword[ebp-0x10]
jmp off.b1469
mov eax, dword[ebp-0x10]
mov edx, dword[edi]
xor ecx, ecx
cmp eax, ebx
setne cl
add eax, eax
mov dword[ebp-0x10], eax
mov dword[esi+edx+0x30], ecx
jmp off.b1047
cmp ecx, ebx
je off.b1123
mov ecx, dword[ebp-0xc]
cmp word[ecx], 0xa
jne off.b1123
or byte[eax], 4
jmp off.b1126
and byte[eax], 0xfb
mov ebx, dword[ebp-0xc]
mov eax, dword[ebp-0x10]
add eax, ebx
mov dword[ebp+0x10], ebx
mov dword[ebp-0x10], eax
cmp ebx, eax
jae off.b1403
mov eax, dword[ebp+0x10]
movzx ecx, word[eax]
cmp cx, 0x1a
je off.b1379
cmp cx, 0xd
je off.b1185
mov word[ebx], cx
inc ebx
inc ebx
inc eax
inc eax
mov dword[ebp+0x10], eax
jmp off.b1365
mov ecx, dword[ebp-0x10]
add ecx, 0xfffffffe
cmp eax, ecx
jae off.b1225
lea ecx, [eax+2]
cmp word[ecx], 0xa
jne off.b1217
add eax, 4
mov dword[ebp+0x10], eax
push 0xa
jmp off.b1359
mov dword[ebp+0x10], ecx
jmp off.b1357
add dword[ebp+0x10], 2
push 0
lea eax, [ebp-0x18]
push eax
push 2
lea eax, [ebp-8]
push eax
mov eax, dword[edi]
push dword[esi+eax]
call dword[sym.imp.KERNEL32.dll_ReadFile]
test eax, eax
jne off.b1266
call dword[sym.imp.KERNEL32.dll_GetLastError]
test eax, eax
jne off.b1357
cmp dword[ebp-0x18], 0
je off.b1357
mov eax, dword[edi]
test byte[esi+eax+4], 0x48
je off.b1321
cmp word[ebp-8], 0xa
je off.b1210
push 0xd
pop eax
mov word[ebx], ax
mov eax, dword[edi]
mov cl, byte[ebp-8]
mov byte[esi+eax+5], cl
mov eax, dword[edi]
mov cl, byte[ebp-7]
mov byte[esi+eax+0x25], cl
mov eax, dword[edi]
mov byte[esi+eax+0x26], 0xa
jmp off.b1363
cmp ebx, dword[ebp-0xc]
jne off.b1333
cmp word[ebp-8], 0xa
je off.b1210
push 1
push 0xffffffffffffffff
push 0xfffffffffffffffe
push dword[ebp+8]
call fcn.004a9f8b
add esp, 0x10
cmp word[ebp-8], 0xa
je off.b1365
push 0xd
pop eax
mov word[ebx], ax
inc ebx
inc ebx
mov eax, dword[ebp-0x10]
cmp dword[ebp+0x10], eax
jb off.b1148
jmp off.b1403
mov ecx, dword[edi]
lea esi, [esi+ecx+4]
test byte[esi], 0x40
jne off.b1395
or byte[esi], 2
jmp off.b1403
mov ax, word[eax]
mov word[ebx], ax
inc ebx
inc ebx
sub ebx, dword[ebp-0xc]
mov dword[ebp-0x10], ebx
jmp off.b1047
call dword[sym.imp.KERNEL32.dll_GetLastError]
push 5
pop esi
cmp eax, esi
jne off.b1450
call fcn.00495b6c
mov dword[eax], 9
call fcn.00495b7f
mov dword[eax], esi
jmp off.b1043
cmp eax, 0x6d
jne off.b1036
mov dword[ebp-0x14], ebx
jmp off.b1047
xor eax, eax
pop edi
pop ebx
pop esi
leave
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/279a61b1e76da49531f1f16fd1102a2d