---
layout: post
title:  "fcn.10be08e9 @ 89dc67d2f980e8488f97b1bf8cb24258"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.10be08e9
- **Origin (md5):** 89dc67d2f980e8488f97b1bf8cb24258
- **VirusTotal:** [virustotal.com/gui/file/89dc67d2f980e8488f97b1bf8cb24258][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-442.1117248535156, -148.72528076171875, '<b><a href="/report/fcn.10be08e9@89dc67d2f980e8488f97b1bf8cb24258">fcn.10be08e9</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>pop edi<br>pop esi<br>pop ebp<br>mov al, bl<br>push edx<br>call 0x100cbe31<br>jmp 0x389f4b8f<br>lea ecx, [esp+0x14]<br>push ecx<br>push eax<br>call dword[sym.imp.KERNEL32.dll_GetModuleFileNameA]<br>lea edx, [esp+0x10]<br>push 0x5c<br>push edx<br>call fcn.100ff7e0<br>add esp, 8<br>test eax, eax<br>je 0x10be46f0<br>call fcn.10bd88f1<br>jg 0x10bd813f<br>mov ebp, esp<br>and esp, 0xfffffff8<br>sub esp, 0xc<br>push ebx<br>mov ebx, dword[ebp+0x10]<br>push esi<br>push edi<br>mov esi, ebx<br>mov edi, eax<br>imul esi, esi, 0x130<br>call fcn.100bdd6d<br>cmp dword[ebp+0x14], 0<br>jmp loc.100bdea9<br>and al, 0x20<br>fmul qword[ecx]<br>add byte[eax], al<br>call fcn.10bdc2ad<br>cmp dword[ebp], 0xea15ac99<br>mov ecx, 0x203bc85f<br>lea ecx, [ecx-0x203bc843]<br>mov ecx, ecx<br>pushfd <br>call 0x10bd8166<br>loope 0x10bd80e8<br>add al, 0x24<br>outsd dx, dword[esi]<br>inc ebx<br>add byte[eax], al<br>ret <br>test byte[ebx+0x49], bh<br>cmp byte[ebx+0x37de2f0b], bh<br>mov ebx, 0x8bc63a13<br>shr byte[ebx-0x47], cl<br>dec ebx<br>imul esi, dword[edx-0x1b], 0x7f6def46<br>shl bl, 1<br>pop ss<br>mov edx, ss<br>fst dword[edi+0x553d694a]<br>mov edx, ss<br>mov al, byte[0xa4ed80]<br>add byte[eax], al<br>add al, ah<br>push 0xf4299e45<br>push ecx<br>push edx<br>push ebx<br>push eax<br>push esi<br>call fcn.10be857e<br>jnp 0x10bd9bb2<br>pop edx<br>jmp fcn.100bd0f5<br>push edx<br>push ebx<br>call fcn.100c0ea4<br>jo 0x10bd9b17<br>and al, 4<br>push edx<br>push eax<br>lea esp, [esp-2]<br>mov dword[esp+6], ebx<br>dec dword[ecx+0x6249c]<br>add byte[eax], al<br>lea esp, [esp+2]<br>pop eax<br>pushfd <br>push ebx<br>lea esp, [esp-8]<br>mov dword[esp+0xc], eax<br>lea esp, [esp+8]<br>pop ebx<br>mov eax, 0x369e741b<br>lea eax, [eax-0x26887ce7]<br>xchg dword[esp], eax<br>lea ecx, [esi+0x7c]<br>call fcn.10001bca<br>lea esp, [esp-4]<br>pushfd <br>call 0x10bd9bff<br>jle 0x10bd9b81<br>add al, 0x24<br>aaa <br>add ecx, dword[esi-1]<br>ret <br>call 0x95cd0f51<br>enter 0x4e56, 0xffffffffffffffff<br>jmp 0x10bd80c0<br>cmp dword[esp+0x14], 0x21565344<br>push 0x30787ea3<br>lea esp, [esp-4]<br>lea esp, [esp-0xc]<br>mov edi, dword[esp+0x14]<br>lea esp, [esp+0x18]<br>mov esi, dword[esp]<br>lea esp, [esp+4]<br>sete al<br>call fcn.10be6014<br>jbe 0x10bdb5f3<br>and al, 4<br>jmp fcn.10be7313<br>mov eax, 0x747d263f<br>lea eax, [eax-0x747cedff]<br>cmp ebx, eax<br>push ebx<br>call 0x10bdbdc4<br>jl 0x10bdbe20<br>lea ebx, [ebx+0x43e1]<br>jmp ebx<br>add byte[eax], al<br>xor ecx, esp<br>or eax, 0xffffffff<br>call fcn.10103a83<br>add esp, 0x804<br>push esi<br>mov esi, dword[esp+4]<br>lea esp, [esp-4]<br>push edx<br>push eax<br>call 0x10bdbe49<br>jp 0x10bdbea2<br>lea eax, [eax-0xb1b861]<br>call eax<br>jne 0x10bdbeaf<br>pop ebx<br>lea esp, [esp+4]<br>ret <br>jmp 0x73f5a7fe<br>movsb byte<br>and al, 4<br>add byte[eax], al<br>add byte[ebx-0x5b72dbcc], cl<br>and al, 4<br>add byte[eax], al<br>add byte[ebp-0x74f3db9c], cl<br>push ss<br>add esi, 4<br>add edx, dword[edi]<br>add edx, 0x33bd4316<br>jmp edx<br>mov dword[edi+8], ecx<br>mov dword[edi+0xc], edx<br>popal <br>jmp 0x10bdb629<br>push ebx<br>push ebp<br>mov ebp, dword[esp+0x14]<br>push esi<br>push edi<br>lea edi, [ebp+0x553]<br>shr edi, 5<br>shl edi, 5<br>push edi<br>xor ebx, ebx<br>call fcn.100fe24c<br>mov esi, eax<br>add esp, 4<br>cmp esi, ebx<br>je 0x100cbe25<br>push eax<br>call 0x10be0919<br>jne 0x10be0972<br>pop eax<br>lea eax, [eax-0xb26557]<br>call eax<br>jb 0x10be08b1<br>and al, 4<br>lea esi, [esi+4]<br>add edx, dword[edi]<br>call fcn.100c0a6e<br>jb 0x10be098c<br>pop ecx<br>jmp 0x10be574b<br>movsb byte<br>and al, 0xfc<br>add byte[eax], al<br>jns 0x10be0919<br>mov esp, 0x14824<br>add byte[ecx+0x144249c], cl<br>add byte[eax], al<br>mov byte[esp+0x134], bl<br>cmp dword[esp+0x19c], esi<br>call fcn.10be44e1<br>ljmp 0x24a4<br>test byte[eax+ebx*2], ah<br>add dword[eax], eax<br>add byte[eax], al<br>push eax<br>call 0x10be1a06<br>jb 0x10be1a5f<br>lea eax, [eax+0x3226]<br>jmp eax<br>mov byte[esp+0x1c], bl<br>jb 0x10bea410<br>call fcn.10bded3c<br>jbe 0x10be1a45<br>mov dh, 0xc0<br>neg eax<br>sbb eax, eax<br>mov ecx, 0x4f80d50c<br>lea ecx, [ecx-0x4f809be4]<br>jg 0x10be19f8<br>and eax, ecx<br>mov ecx, 0x3aff4474<br>lea ecx, [ecx-0x3aff3ff0]<br>add eax, ecx<br>mov dword[esi+0x3818], eax<br>push eax<br>call 0x10be1a65<br>jnp 0x10be1abe<br>lea eax, [eax-0xb2627e]<br>jmp eax<br>mov dword[eax], edx<br>mov edi, 0x217be1d2<br>lea edi, [edi-0x217be1d1]<br>mov edi, edi<br>call fcn.100ffe83<br>add esp, 4<br>test edi, edi<br>setne al<br>pop edi<br>pop esi<br>push eax<br>call 0x10be1ae4<br>loope 0x10be1b3d<br>lea eax, [eax-0xb23127]<br>jmp eax<br>cmp byte[ebx+0x3823af3d], bh<br>mov ebx, 0x38497b10<br>mov ebx, 0x36e55a2e<br>mov ebx, 0x38497b23<br>mov ebx, 0x36e55a0a<br>mov ebx, 0x37dc642d<br>mov ebx, 0x6d03e814<br>add byte[eax], ah<br>mov ch, 0xf1<br>jmp 0x10be574b<br>mov eax, 0x415e639e<br>lea eax, [eax-0x31480956]<br>mov eax, eax<br>jmp 0x10be574b<br>pop edi<br>pop esi<br>pop ebp<br>mov eax, 0x4a71887c<br>lea eax, [eax-0x4a71887e]<br>mov eax, eax<br>pop ebx<br>add esp, 0x24<br>jmp loc.10023a89<br>pop esi<br>inc eax<br>call fcn.10001bca<br>push 0x897650a7<br>push edi<br>lea esp, [esp-6]<br>mov dword[esp+0xa], ebx<br>lea esp, [esp+6]<br>pop edi<br>lea esp, [esp-4]<br>mov dword[esp], eax<br>mov eax, 0x5391fd7f<br>lea eax, [eax-0x437c064b]<br>xchg dword[esp], eax<br>lea ecx, [esi+0x60]<br>call fcn.10001bca<br>jmp 0x10bd9baa<br>push 0<br>push eax<br>mov eax, 0x4d6eb409<br>lea eax, [eax-0x4d6eb389]<br>xchg dword[esp], eax<br>push 3<br>push 0<br>push 3<br>push eax<br>mov eax, 0x3d8feedf<br>pushfd <br>call 0x10be4716<br>jmp 0x10be4698<br>mov ecx, dword[esi+0xc]<br>mov edx, dword[esi+8]<br>push eax<br>mov eax, 0x35b8f5f4<br>lea eax, [eax-0x35b8cee4]<br>xchg dword[esp], eax<br>push ecx<br>mov ecx, dword[esi+4]<br>push edx<br>mov edx, dword[esi]<br>push ecx<br>push edx<br>push eax<br>push edx<br>call 0x10be5772<br>jecxz 0x10be57cd<br>retf 0x487<br>lea edx, [edx+0x3d22]<br>call edx<br>jle 0x10be5708<br>add al, 0x24<br>call fcn.10bd85b8<br>jbe 0x10be57db<br>push edi<br>jmp fcn.100c0606<br>push eax<br>call fcn.10bd9746<br>loopne 0x10be575d<br>pushfd <br>and al, 0xb0<br>add byte[eax], al<br>add byte[ebx+0x1068247c], al<br>cmp dword[esp+0x68], 0x10<br>mov dword[esp+0x30], 0xf<br>mov dword[esp+0x2c], ebx<br>jmp 0x10be1a25<br>fisttp dword[ebx-0x763bcd00]<br>inc esp<br>and al, 0x3c<br>mov eax, 0x47a1943e<br>lea eax, [eax+0x8460c5c]<br>push eax<br>pushfd <br>mov dword[esp+4], ebp<br>popfd <br>push edx<br>pushfd <br>mov dword[esp+4], edi<br>popfd <br>push ecx<br>call 0x10bea332<br>and al, 4<br>add byte[eax], al<br>add byte[ebp-0x437663ae], bl<br>and al, 4<br>add byte[eax], al<br>add byte[ebp+0x1e851], bl<br>add byte[eax], al<br>loopne 0x10bea38c<br>lea ecx, [ecx-0x20bc]<br>jmp ecx<br>pop esi<br>pushal <br>mov dword[esi+0x64], ebx<br>mov dword[esi+0x68], ebx<br>call fcn.100ff459<br>mov eax, dword[esi+0x48]<br>pushfd <br>call 0x10bea380<br>jecxz 0x10bea302<br>add al, 0x24<br>daa <br>movsb byte<br>out dx, al<br>jns 0x10bea31b<br>sar byte[ebp+edi*4+0x4a], cl<br>imul eax, dword[esi+0x7ef465b], 0x44f09908<br>jb 0x10bea3e3<br>mov esi, 0x38497b26<br>mov ebx, 0x38497b26<br>mov ebx, 0x37446d31<br>mov ebx, 0x8bcd550e<br>sar cl, cl<br>add byte[eax], al<br>add byte[edx-0x73], dl<br>inc esp<br>and al, 0x70<br>push eax<br>push ebp<br>call fcn.101099d0<br>mov eax, dword[esp+0x34]<br>add esp, 0xc<br>pushfd <br>call 0x10bea3e7<br>jg 0x10bea369<br>add byte[eax], al<br>add byte[edi-0x7f], bh<br>add al, 0x24<br>test dword[eax], edx<br>mov ecx, dword[ebp+0x1e0]<br>sub ecx, dword[ebp+0x1dc]<br>mov eax, 0x62baa8fa<br>lea eax, [eax-0x29d71ac1]<br>mov eax, eax<br>imul ecx<br>sar edx, 3<br>mov eax, edx<br>shr eax, 0x1f<br>inc esi<br>push eax<br>call 0x10bea43c<br>loop 0x10bea495<br>lea eax, [eax+0xded]<br>call eax<br>jnp 0x10bea3ca<br>stc <br>pop es<br>jae 0x10be31f2<br>jmp 0x10be1e49<br>push ds<br>mov bl, 0xff<br>push dword[ecx+0x3b]<br>bnd je<br>jmp 0x10be372c<br><eoc> ', 'point { fill-color: #e0440e; }'],
[-617.4405517578125, -1529.416015625, '<b><a href="/report/fcn.1060e28c@89dc67d2f980e8488f97b1bf8cb24258">fcn.1060e28c</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>push eax<br>call fcn.1001041e<br>jmp 0x10679ea5<br>mov esp, 0x824<br>add byte[ecx-0x75], dl<br>mov word[esp+eax], fs<br>add byte[eax], al<br>add byte[ecx-0x75], dl<br>mov word[esp+eax], fs<br>add byte[eax], al<br>add byte[ebx-0x18], dl<br>add dword[eax], eax<br>add byte[eax], al<br>jne 0x1060e2de<br>lea ebx, [ebx-0x2c212]<br>jmp ebx<br>lea esp, [esp+4]<br>push ebx<br>push eax<br>push esi<br>call fcn.105d2593<br>jae 0x1060e2f4<br>inc edx<br>cld <br>push dword[ebx+0x5a]<br>pop edx<br>cmp eax, ebx<br>je 0x10639289<br>jmp 0x105e5970<br>std <br>push dword[edi+0x1d]<br>jo 0x1060e295<br>mov edx, 0xdd310d17<br>mov edx, 0x354bc720<br>rcr byte[eax+0x1d69a87e], cl<br>loope 0x1060e265<br>out dx, eax<br>out dx, al<br>out dx, al<br>jo 0x1060e2b0<br>daa <br>dec ebp<br>fdivr dword[edx-0x209fdae9]<br>mov edx, 0x2e44f620<br>fistp qword[edx+0x2e44f620]<br>shl byte[esi+0x2b69a87e], cl<br>fdivr qword[edx]<br>out dx, eax<br>out dx, al<br>imul ebp, dword[ebx], 0x65ef3adc<br>out dx, al<br>jo 0x1060e2ca<br>ret 0xdf15<br>lea ebx, [ecx+0x68]<br>jmp 0x1060e331<br>push 0xa2f03aeb<br>into <br>mov ah, byte[edx+ebp+0x32f03ae6]<br>cwde <br>popal <br>in eax, 0x2d<br>xor dword[edx-0x36], ebp<br>xor cl, byte[ebx+ebp*8]<br>mov ebp, 0x87cb2e1f<br>movsb byte<br>mov dword[0xeb2ae207], esp<br>sbb byte[esi-0x5b7e5f72], ah<br>mov ch, 0xdc<br>cmp al, 0xf0<br>cmp edx, dword[edi-0x50011aa3]<br>das <br>shl bl, cl<br>jne 0x1060e2d4<br>pop es<br>loop 0x1060e340<br>jmp 0x1060e330<br>imul eax, esi, 0x69e5589e<br>in eax, 0x69<br>imul esp, ebx, 0xa21fbadf<br>into <br>mov ah, byte[ecx+0x7bf0407f]<br>jnp 0x1060e3a1<br>jecxz 0x1060e313<br>mov edx, 0x8acea21f<br>movsb byte<br>and dword[edi+0x40], edi<br>pushal <br>in eax, 0xfe<br>scasd eax, dword<br>das <br>sal cl, cl<br>test dword[eax+0x5fd26169], ebp<br>in eax, 0xc0<br>jno 0x1060e2f2<br>out dx, eax<br>pop edi<br>shl cl, cl<br>mov ebp, 0x64d58a1f<br>test byte[ebx], cl<br>inc ebx<br>cmp eax, 0x68750cd1<br>fnstsw word[edx-0x9704ce1]<br>fld xword[ebx]<br>cmp esp, dword[ebx]<br>movsb byte<br>and dword[edi+0x40], edi<br>mov ebp, 0x83274e34<br>lcall 0x34be, 0x871c434<br>cld <br>inc eax<br>cmp al, 0xd1<br>aam 0x69<br>leave <br>sbb dword[edx-0x157711cc], 0xc0ba34bd<br>sub eax, 0x8e593d2<br>push 0x35<br>sahf <br>xor al, 0xd2<br>dec edx<br>and ebp, dword[edx+0x33e90da5]<br>ror byte[edx+0x516a08d3], cl<br>push 0x51<br>insb byte<br>xor al, 0xd2<br>mov ch, 0xeb<br>mov byte[0x899785a5], al<br>movsb byte<br>add dword[esi+0x44], esp<br>shl dword[edx], 1<br>aad 0x57<br>fstp xword[edx-0xb9f95cc]<br>or eax, 0xffffffb3<br>mov al, byte[0x805c61ef]<br>movsb byte<br>dec ecx<br>mov edi, dword[ebx-0x24]<br>mov esi, esi<br>mov dh, 0x97<br>out dx, eax<br>out 0x82, eax<br>ja 0x1060e3c2<br>pushal <br>hlt <br>jle 0x1060e3b9<br>insb byte<br>mov eax, dword[0xa32284dc]<br>xchg edx, eax<br>or byte[eax], al<br>add byte[eax], al<br>add byte[eax], al<br>jl 0x1060e384<br>and al, 4<br>pop esi<br>pop ebp<br>pop eax<br>call dword[sym.imp.USER32.dll_GetWindowThreadProcessId]<br>call dword[sym.imp.KERNEL32.dll_GetCurrentProcessId]<br>push eax<br>mov eax, dword[esp]<br>push edi<br>push ebp<br>pushfd <br>xor edi, edi<br>add edi, dword[esp+4]<br>mov ebp, 0x5f761d58<br>lea ebp, [ebp+0x2bb44424]<br>add edi, ebp<br>mov ebp, 0x2490c010<br>pushfd <br>call 0x1060e434<br>je 0x1060e3b6<br>add al, 0x24<br>loopne 0x1060e43d<br>push es<br>add bl, al<br>jnp 0x1060e3ce<br>nop <br>xor eax, eax<br>mov al, byte[esi+4]<br>nop <br>rol eax, 2<br>add eax, edi<br>mov al, byte[eax]<br>and eax, 0xff<br>jmp 0x106473ee<br>push edx<br>mov edx, dword[esp+4]<br>lea esp, [esp-4]<br>push eax<br>push edx<br>mov edx, dword[esp+0xc]<br>ret 0x10<br>xor eax, eax<br>jmp 0x10679ea5<br>push ax<br>mov edx, dword[esi]<br>add edx, dword[edi]<br>add edx, 0x75e3d117<br>lea esi, [esi+5]<br>push 0x6b1a724a<br>mov dword[esp], edx<br>jmp 0x106105bb<br>mov byte[ebp-4], 0<br>push 0x20<br>mov dword[esi+4], eax<br>call fcn.100ff54d<br>pop ecx<br>mov dword[ebp-0x10], eax<br>mov byte[ebp-4], 2<br>cmp eax, ebx<br>pushfd <br>call 0x10679ec4<br>jecxz 0x10679e46<br>add al, 0x24<br>mov esp, dword[ebx]<br>idiv bh<br>ret <br><eoc> ', 'null'],
[665.9566650390625, -990.9617309570312, '<b><a href="/report/fcn.10bf3034@89dc67d2f980e8488f97b1bf8cb24258">fcn.10bf3034</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>push edx<br>mov edx, dword[esp+0x14]<br>push edx<br>lea eax, [esp+8]<br>push eax<br>mov dword[esp+0xc], 0x122ff<br>pushfd <br>call 0x100f9e36<br>ljmp 0xaf3b<br>mov eax, dword[ecx+0xc]<br>mov dword[eax], 0xffffffff<br>jmp 0x100f9e1c<br>add al, byte[eax]<br>add byte[ebp-0x75], dl<br>lodsb al, byte[esi]<br>and al, 0x18<br>add al, byte[eax]<br>add byte[eax-0x39], dl<br>rcr byte[esi-0x7286cfda], 0x80<br>fcmove st(0), st(7)<br>xchg byte[edi-0x7b72dbfc], al<br>and al, 0x11<br>add dword[eax], eax<br>add byte[edx], ch<br>jmp 0x10bfd57f<br>mov edi, eax<br>and esi, 0xf<br>shl edi, 8<br>sar edi, 0x1c<br>mov ebx, esi<br>shr eax, 0x10<br>sub ebx, edi<br>and eax, 0xf<br>mov ebp, esi<br>jbe 0x10bfac53<br>call fcn.10bf7f42<br>jne 0x10bf2fe5<br>and al, 4<br>cmp al, 0x20<br>je 0x10bedf7d<br>jmp 0x10bf7c00<br>cmp al, 0x28<br>jne 0x100f9e1c<br>jmp 0x10bedf7d<br>movsb byte<br>and al, 0xfc<br>mov ecx, dword[esp+0x20]<br>mov edx, dword[esp+0x1c]<br>push ebp<br>push ecx<br>push edx<br>call fcn.101099d0<br>add esp, 0xc<br>push ebx<br>call 0x10bfac6d<br>loopne 0x10bfacc9<br>lea ebx, [ebx-0xd716]<br>call ebx<br>loopne 0x10bfac03<br>sub bh, bh<br>sub eax, sym.imp.KERNEL32.dll_VirtualQuery<br>mov eax, esi<br>and eax, 0xffff<br>sub esi, eax<br>cmp esi, ebx<br>mov ebx, dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>mov edi, esi<br>call fcn.10bf2608<br>ja 0x10bfad03<br>cwde <br>js 0x10bfac71<br>jns 0x10bfacdb<br>xor byte[esp+ebp*8-0x5d0f653b], ah<br>mov edi, 0x81b1e5b8<br>xor dword[ecx+ecx*2+0x983f369], ebp<br>in eax, 0xbd<br>pop eax<br>cmp byte[ebx-0x1e0d95ed], bh<br>movsb byte<br>pop edx<br>salc <br>lcall 0xdbe5, 0xb8bfa2f0<br>cmp dword[ebp+0x49bc3fd2], ecx<br>imul ecx, edx, 0x5e5b9bc<br>imul edi, ecx, 0x43aefeef<br>mov esi, 0xbdfe7a13<br>test byte[eax+0x5ad19d4e], al<br>retf 0x38f3<br>out dx, eax<br>adc byte[edi+edi*8-0x7f111601], cl<br>mov byte[esp+0x10], 0<br>call fcn.10109950<br>add esp, 0xc<br>test esi, esi<br>call fcn.10bf9baa<br>jae 0x10bfd4ab<br>pop esi<br>pop ebp<br>ret 0x10<br>pop esi<br>push 0x30b6c88c<br>push ecx<br>lea esp, [esp-2]<br>mov dword[esp+6], edx<br>lea esp, [esp+2]<br>pop ecx<br>lea esp, [esp-4]<br>pushfd <br>mov dword[esp+4], eax<br>pushfd <br>call 0x10bfd576<br>jo 0x10bfd4f8<br>add al, 0x24<br>int3 <br>push eax<br>mov byte[esp+0x118], 0<br>call fcn.10109950<br>add esp, 0xc<br>push eax<br>mov eax, 0x4f15c3f7<br>lea eax, [eax-0x4f15c2f3]<br>xchg dword[esp], eax<br>lea ecx, [esp+0x110]<br>push ecx<br>push 0<br>call dword[sym.imp.KERNEL32.dll_GetModuleFileNameA]<br>lea edx, [esp+0x10c]<br>push 0x5c<br>push edx<br>pushfd <br>call 0x10bfd5c1<br>je 0x10bfd543<br>add al, 0x24<br>stosb byte<br>ud0 <br><eoc> ', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

pop edi
pop esi
pop ebp
mov al, bl
push edx
call 0x100cbe31
jmp 0x389f4b8f
lea ecx, [esp+0x14]
push ecx
push eax
call dword[sym.imp.KERNEL32.dll_GetModuleFileNameA]
lea edx, [esp+0x10]
push 0x5c
push edx
call fcn.100ff7e0
add esp, 8
test eax, eax
je 0x10be46f0
call fcn.10bd88f1
jg 0x10bd813f
mov ebp, esp
and esp, 0xfffffff8
sub esp, 0xc
push ebx
mov ebx, dword[ebp+0x10]
push esi
push edi
mov esi, ebx
mov edi, eax
imul esi, esi, 0x130
call fcn.100bdd6d
cmp dword[ebp+0x14], 0
jmp loc.100bdea9
and al, 0x20
fmul qword[ecx]
add byte[eax], al
call fcn.10bdc2ad
cmp dword[ebp], 0xea15ac99
mov ecx, 0x203bc85f
lea ecx, [ecx-0x203bc843]
mov ecx, ecx
pushfd
call 0x10bd8166
loope 0x10bd80e8
add al, 0x24
outsd dx, dword[esi]
inc ebx
add byte[eax], al
ret
test byte[ebx+0x49], bh
cmp byte[ebx+0x37de2f0b], bh
mov ebx, 0x8bc63a13
shr byte[ebx-0x47], cl
dec ebx
imul esi, dword[edx-0x1b], 0x7f6def46
shl bl, 1
pop ss
mov edx, ss
fst dword[edi+0x553d694a]
mov edx, ss
mov al, byte[0xa4ed80]
add byte[eax], al
add al, ah
push 0xf4299e45
push ecx
push edx
push ebx
push eax
push esi
call fcn.10be857e
jnp 0x10bd9bb2
pop edx
jmp fcn.100bd0f5
push edx
push ebx
call fcn.100c0ea4
jo 0x10bd9b17
and al, 4
push edx
push eax
lea esp, [esp-2]
mov dword[esp+6], ebx
dec dword[ecx+0x6249c]
add byte[eax], al
lea esp, [esp+2]
pop eax
pushfd
push ebx
lea esp, [esp-8]
mov dword[esp+0xc], eax
lea esp, [esp+8]
pop ebx
mov eax, 0x369e741b
lea eax, [eax-0x26887ce7]
xchg dword[esp], eax
lea ecx, [esi+0x7c]
call fcn.10001bca
lea esp, [esp-4]
pushfd
call 0x10bd9bff
jle 0x10bd9b81
add al, 0x24
aaa
add ecx, dword[esi-1]
ret
call 0x95cd0f51
enter 0x4e56, 0xffffffffffffffff
jmp 0x10bd80c0
cmp dword[esp+0x14], 0x21565344
push 0x30787ea3
lea esp, [esp-4]
lea esp, [esp-0xc]
mov edi, dword[esp+0x14]
lea esp, [esp+0x18]
mov esi, dword[esp]
lea esp, [esp+4]
sete al
call fcn.10be6014
jbe 0x10bdb5f3
and al, 4
jmp fcn.10be7313
mov eax, 0x747d263f
lea eax, [eax-0x747cedff]
cmp ebx, eax
push ebx
call 0x10bdbdc4
jl 0x10bdbe20
lea ebx, [ebx+0x43e1]
jmp ebx
add byte[eax], al
xor ecx, esp
or eax, 0xffffffff
call fcn.10103a83
add esp, 0x804
push esi
mov esi, dword[esp+4]
lea esp, [esp-4]
push edx
push eax
call 0x10bdbe49
jp 0x10bdbea2
lea eax, [eax-0xb1b861]
call eax
jne 0x10bdbeaf
pop ebx
lea esp, [esp+4]
ret
jmp 0x73f5a7fe
movsb byte
and al, 4
add byte[eax], al
add byte[ebx-0x5b72dbcc], cl
and al, 4
add byte[eax], al
add byte[ebp-0x74f3db9c], cl
push ss
add esi, 4
add edx, dword[edi]
add edx, 0x33bd4316
jmp edx
mov dword[edi+8], ecx
mov dword[edi+0xc], edx
popal
jmp 0x10bdb629
push ebx
push ebp
mov ebp, dword[esp+0x14]
push esi
push edi
lea edi, [ebp+0x553]
shr edi, 5
shl edi, 5
push edi
xor ebx, ebx
call fcn.100fe24c
mov esi, eax
add esp, 4
cmp esi, ebx
je 0x100cbe25
push eax
call 0x10be0919
jne 0x10be0972
pop eax
lea eax, [eax-0xb26557]
call eax
jb 0x10be08b1
and al, 4
lea esi, [esi+4]
add edx, dword[edi]
call fcn.100c0a6e
jb 0x10be098c
pop ecx
jmp 0x10be574b
movsb byte
and al, 0xfc
add byte[eax], al
jns 0x10be0919
mov esp, 0x14824
add byte[ecx+0x144249c], cl
add byte[eax], al
mov byte[esp+0x134], bl
cmp dword[esp+0x19c], esi
call fcn.10be44e1
ljmp 0x24a4
test byte[eax+ebx*2], ah
add dword[eax], eax
add byte[eax], al
push eax
call 0x10be1a06
jb 0x10be1a5f
lea eax, [eax+0x3226]
jmp eax
mov byte[esp+0x1c], bl
jb 0x10bea410
call fcn.10bded3c
jbe 0x10be1a45
mov dh, 0xc0
neg eax
sbb eax, eax
mov ecx, 0x4f80d50c
lea ecx, [ecx-0x4f809be4]
jg 0x10be19f8
and eax, ecx
mov ecx, 0x3aff4474
lea ecx, [ecx-0x3aff3ff0]
add eax, ecx
mov dword[esi+0x3818], eax
push eax
call 0x10be1a65
jnp 0x10be1abe
lea eax, [eax-0xb2627e]
jmp eax
mov dword[eax], edx
mov edi, 0x217be1d2
lea edi, [edi-0x217be1d1]
mov edi, edi
call fcn.100ffe83
add esp, 4
test edi, edi
setne al
pop edi
pop esi
push eax
call 0x10be1ae4
loope 0x10be1b3d
lea eax, [eax-0xb23127]
jmp eax
cmp byte[ebx+0x3823af3d], bh
mov ebx, 0x38497b10
mov ebx, 0x36e55a2e
mov ebx, 0x38497b23
mov ebx, 0x36e55a0a
mov ebx, 0x37dc642d
mov ebx, 0x6d03e814
add byte[eax], ah
mov ch, 0xf1
jmp 0x10be574b
mov eax, 0x415e639e
lea eax, [eax-0x31480956]
mov eax, eax
jmp 0x10be574b
pop edi
pop esi
pop ebp
mov eax, 0x4a71887c
lea eax, [eax-0x4a71887e]
mov eax, eax
pop ebx
add esp, 0x24
jmp loc.10023a89
pop esi
inc eax
call fcn.10001bca
push 0x897650a7
push edi
lea esp, [esp-6]
mov dword[esp+0xa], ebx
lea esp, [esp+6]
pop edi
lea esp, [esp-4]
mov dword[esp], eax
mov eax, 0x5391fd7f
lea eax, [eax-0x437c064b]
xchg dword[esp], eax
lea ecx, [esi+0x60]
call fcn.10001bca
jmp 0x10bd9baa
push 0
push eax
mov eax, 0x4d6eb409
lea eax, [eax-0x4d6eb389]
xchg dword[esp], eax
push 3
push 0
push 3
push eax
mov eax, 0x3d8feedf
pushfd
call 0x10be4716
jmp 0x10be4698
mov ecx, dword[esi+0xc]
mov edx, dword[esi+8]
push eax
mov eax, 0x35b8f5f4
lea eax, [eax-0x35b8cee4]
xchg dword[esp], eax
push ecx
mov ecx, dword[esi+4]
push edx
mov edx, dword[esi]
push ecx
push edx
push eax
push edx
call 0x10be5772
jecxz 0x10be57cd
retf 0x487
lea edx, [edx+0x3d22]
call edx
jle 0x10be5708
add al, 0x24
call fcn.10bd85b8
jbe 0x10be57db
push edi
jmp fcn.100c0606
push eax
call fcn.10bd9746
loopne 0x10be575d
pushfd
and al, 0xb0
add byte[eax], al
add byte[ebx+0x1068247c], al
cmp dword[esp+0x68], 0x10
mov dword[esp+0x30], 0xf
mov dword[esp+0x2c], ebx
jmp 0x10be1a25
fisttp dword[ebx-0x763bcd00]
inc esp
and al, 0x3c
mov eax, 0x47a1943e
lea eax, [eax+0x8460c5c]
push eax
pushfd
mov dword[esp+4], ebp
popfd
push edx
pushfd
mov dword[esp+4], edi
popfd
push ecx
call 0x10bea332
and al, 4
add byte[eax], al
add byte[ebp-0x437663ae], bl
and al, 4
add byte[eax], al
add byte[ebp+0x1e851], bl
add byte[eax], al
loopne 0x10bea38c
lea ecx, [ecx-0x20bc]
jmp ecx
pop esi
pushal
mov dword[esi+0x64], ebx
mov dword[esi+0x68], ebx
call fcn.100ff459
mov eax, dword[esi+0x48]
pushfd
call 0x10bea380
jecxz 0x10bea302
add al, 0x24
daa
movsb byte
out dx, al
jns 0x10bea31b
sar byte[ebp+edi*4+0x4a], cl
imul eax, dword[esi+0x7ef465b], 0x44f09908
jb 0x10bea3e3
mov esi, 0x38497b26
mov ebx, 0x38497b26
mov ebx, 0x37446d31
mov ebx, 0x8bcd550e
sar cl, cl
add byte[eax], al
add byte[edx-0x73], dl
inc esp
and al, 0x70
push eax
push ebp
call fcn.101099d0
mov eax, dword[esp+0x34]
add esp, 0xc
pushfd
call 0x10bea3e7
jg 0x10bea369
add byte[eax], al
add byte[edi-0x7f], bh
add al, 0x24
test dword[eax], edx
mov ecx, dword[ebp+0x1e0]
sub ecx, dword[ebp+0x1dc]
mov eax, 0x62baa8fa
lea eax, [eax-0x29d71ac1]
mov eax, eax
imul ecx
sar edx, 3
mov eax, edx
shr eax, 0x1f
inc esi
push eax
call 0x10bea43c
loop 0x10bea495
lea eax, [eax+0xded]
call eax
jnp 0x10bea3ca
stc
pop es
jae 0x10be31f2
jmp 0x10be1e49
push ds
mov bl, 0xff
push dword[ecx+0x3b]
bnd je
jmp 0x10be372c

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/89dc67d2f980e8488f97b1bf8cb24258