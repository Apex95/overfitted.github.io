---
layout: post
title:  "fcn.004258f0 @ 1123b7aa5760238fe93045e585b8234c"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.004258f0
- **Origin (md5):** 1123b7aa5760238fe93045e585b8234c
- **VirusTotal:** [virustotal.com/gui/file/1123b7aa5760238fe93045e585b8234c][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.004258f0@1123b7aa5760238fe93045e585b8234c">fcn.004258f0</a><br>@1123b7aa5760238fe93045e585b8234c</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push 0xffffffffffffffff
push 0x42d58b
mov eax, dword
push eax
mov dword
sub esp, 0x120
mov eax, dword[0x437388]
push esi
push edi
xor esi, esi
mov dword[esp+0x124], eax
xor eax, eax
cmp edx, esi
mov ecx, 0x41
lea edi, [esp+0x1d]
mov byte[esp+0x1c], 0
mov dword[esp+8], esi
rep stosd
je off.b93
cmp byte[edx], 0
je off.b93
push 0x105
push edx
lea eax, [esp+0x24]
push eax
call dword[sym.imp.KERNEL32.dll_lstrcpynA]
jmp off.b189
push 0x105
lea ecx, [esp+0x20]
push ecx
push esi
call dword[sym.imp.KERNEL32.dll_GetModuleFileNameA]
lea edx, [esp+0x1c]
push 0x5c
push edx
call fcn.00416e2d
add esp, 8
cmp eax, esi
je off.b133
mov byte[eax+1], 0
mov ecx, 0x105
lea eax, [esp+0x1c]
mov edi, edi
cmp byte[eax], 0
je off.b155
inc eax
dec ecx
jne off.b144
jmp off.b189
cmp ecx, esi
je off.b189
mov eax, 0x105
sub eax, ecx
push str.Label.dat_
mov ecx, 0x105
sub ecx, eax
push ecx
lea edx, [esp+eax+0x24]
push edx
call fcn.00401bc7
push esi
push esi
push 3
push esi
push 1
push 0x80000000
lea eax, [esp+0x34]
push eax
call dword[sym.imp.KERNEL32.dll_CreateFileA]
cmp eax, 0xffffffff
mov dword[esp+0x14], eax
je off.b1071
push ebx
push ebp
push esi
push eax
mov dword[esp+0x28], esi
call dword[sym.imp.KERNEL32.dll_GetFileSize]
mov esi, eax
lea ebx, [esi+1]
push ebx
call fcn.00417ee5
mov edi, eax
mov ecx, ebx
mov edx, ecx
shr ecx, 2
xor eax, eax
mov dword[esp+0x1c], edi
rep stosd
mov ecx, edx
and ecx, 3
push ebx
rep stosb
call fcn.00417ee5
mov ebp, eax
mov ecx, ebx
mov edx, ecx
shr ecx, 2
xor eax, eax
mov edi, ebp
rep stosd
mov ecx, edx
and ecx, 3
rep stosb
mov edi, dword[esp+0x20]
add esp, 8
test edi, edi
mov dword[esp+0x14], ebp
je off.b1052
test ebp, ebp
je off.b1052
mov ecx, dword[esp+0x1c]
push 0
lea eax, [esp+0x24]
push eax
push esi
push edi
push ecx
call dword[sym.imp.KERNEL32.dll_ReadFile]
test eax, eax
je off.b1052
push edi
push ebx
push ebp
call fcn.0040611d
add esp, 0xc
push ebp
call dword[sym.imp.USER32.dll_CharUpperA]
push str._nSN=_
push ebp
call fcn.0041a7b0
add esp, 8
test eax, eax
je off.b481
mov ecx, dword[esp+0x144]
test ecx, ecx
je off.b481
mov dl, byte[eax+4]
add eax, 4
xor edi, edi
test dl, dl
je off.b477
mov ebp, ecx
mov esi, eax
sub ebp, eax
movsx edx, byte[esi]
push edx
push str._r_n_b__
call fcn.004181b0
add esp, 8
test eax, eax
jne off.b466
cmp edi, dword[esp+0x150]
jge off.b466
mov al, byte[esi]
mov byte[esi+ebp], al
mov al, byte[esi+1]
inc edi
inc esi
test al, al
jne off.b422
mov ebp, dword[esp+0x14]
mov ecx, dword[esp+0x144]
mov byte[edi+ecx], 0
push str._nID=_
push ebp
call fcn.0041a7b0
add esp, 8
test eax, eax
je off.b587
mov ecx, dword[esp+0x148]
test ecx, ecx
je off.b587
mov dl, byte[eax+4]
add eax, 4
xor edi, edi
test dl, dl
je off.b583
mov ebp, ecx
mov esi, eax
sub ebp, eax
movsx ecx, byte[esi]
push ecx
push str._r_n_b__
call fcn.004181b0
add esp, 8
test eax, eax
jne off.b572
cmp edi, dword[esp+0x150]
jge off.b572
mov dl, byte[esi]
mov byte[esi+ebp], dl
mov al, byte[esi+1]
inc edi
inc esi
test al, al
jne off.b528
mov ebp, dword[esp+0x14]
mov ecx, dword[esp+0x148]
mov byte[edi+ecx], 0
push str._nACTIONID=_
push ebp
call fcn.0041a7b0
add esp, 8
test eax, eax
je off.b699
mov ecx, dword[esp+0x14c]
test ecx, ecx
je off.b699
mov dl, byte[eax+0xa]
add eax, 0xa
xor edi, edi
test dl, dl
je off.b695
mov ebp, ecx
mov esi, eax
sub ebp, eax
lea ebx, [ebx]
movsx eax, byte[esi]
push eax
push str._r_n_b__
call fcn.004181b0
add esp, 8
test eax, eax
jne off.b684
cmp edi, dword[esp+0x150]
jge off.b684
mov cl, byte[esi]
mov byte[esi+ebp], cl
mov al, byte[esi+1]
inc edi
inc esi
test al, al
jne off.b640
mov ebp, dword[esp+0x14]
mov ecx, dword[esp+0x14c]
mov byte[edi+ecx], 0
push str._nTITLE=_
push ebp
call fcn.0041a7b0
mov esi, eax
add esp, 8
test esi, esi
je off.b1025
mov eax, dword[esp+0x140]
test eax, eax
je off.b1025
mov edx, dword[esp+0x18]
push edx
push ebx
push ebp
add esi, 7
call fcn.0040611d
mov al, byte[esi]
add esp, 0xc
xor edi, edi
test al, al
je off.b812
mov ebp, dword[esp+0x140]
sub ebp, esi
movsx eax, byte[esi]
push eax
push 0x431a44
call fcn.004181b0
add esp, 8
test eax, eax
jne off.b808
mov cl, byte[esi]
mov byte[esi+ebp], cl
mov al, byte[esi+1]
inc edi
inc esi
test al, al
jne off.b773
mov ebp, dword[esp+0x14]
mov esi, dword[esp+0x140]
push esi
lea ecx, [esp+0x14]
mov byte[edi+esi], 0
call fcn.004040ef
push 0x42e710
push 0x431a3c
lea ecx, [esp+0x18]
mov dword[esp+0x140], 0
call fcn.00425320
push 0x42e710
push 0x431a30
lea ecx, [esp+0x18]
call fcn.00425320
push 0x42e710
push 0x431a28
lea ecx, [esp+0x18]
call fcn.00425320
push 0x42e710
push 0x431a20
lea ecx, [esp+0x18]
call fcn.00425320
push 0x42e710
push 0x431a18
lea ecx, [esp+0x18]
call fcn.00425320
lea ecx, [esp+0x10]
call fcn.004255d0
lea ecx, [esp+0x10]
call fcn.00425580
mov edx, dword[esp+0x10]
mov eax, dword[esp+0x150]
push edx
push 0x431a14
push eax
push esi
call fcn.00402423
mov eax, dword[esp+0x20]
add eax, 0xfffffff0
add esp, 0x10
mov dword[esp+0x138], 0xffffffff
lea ecx, [eax+0xc]
or edx, 0xffffffff
lock xadd
dec edx
test edx, edx
jg off.b1025
mov ecx, dword[eax]
mov edx, dword[ecx]
push eax
call dword[edx+4]
mov eax, dword[esp+0x18]
push eax
mov dword[esp+0x14], 1
call fcn.0041803c
push ebp
call fcn.0041803c
add esp, 8
mov ecx, dword[esp+0x1c]
push ecx
call dword[sym.imp.KERNEL32.dll_CloseHandle]
mov eax, dword[esp+0x10]
pop ebp
pop ebx
jmp off.b1073
mov eax, esi
mov ecx, dword[esp+0x128]
pop edi
mov dword
mov ecx, dword[esp+0x120]
pop esi
call fcn.0041e6b7
add esp, 0x12c
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/1123b7aa5760238fe93045e585b8234c