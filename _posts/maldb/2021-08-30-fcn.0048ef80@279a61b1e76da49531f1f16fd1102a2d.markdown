---
layout: post
title:  "fcn.0048ef80 @ 279a61b1e76da49531f1f16fd1102a2d"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0048ef80
- **Origin (md5):** 279a61b1e76da49531f1f16fd1102a2d
- **VirusTotal:** [virustotal.com/gui/file/279a61b1e76da49531f1f16fd1102a2d][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [800.1798095703125, 379.1190490722656, '<b><a href="/report/fcn.0048ef80@279a61b1e76da49531f1f16fd1102a2d">fcn.0048ef80</a><br>@279a61b1e76da49531f1f16fd1102a2d</b><br>', 'point { fill-color: #e0440e; }'],
[-69.3099365234375, 343.8724365234375, '<b><a href="/report/fcn.0045c400@418e0921f3a9bd4f5bc0dcc59623b5a1">fcn.0045c400</a><br>@418e0921f3a9bd4f5bc0dcc59623b5a1</b><br>', 'null'],
[395.96502685546875, -391.5251770019531, '<b><a href="/report/fcn.00402b20@fca52b995e756cff97168f6fef94b37d">fcn.00402b20</a><br>@fca52b995e756cff97168f6fef94b37d</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
sub esp, 0x740
mov eax, dword[0x53ebd0]
xor eax, ebp
mov dword[ebp-0x14], eax
push ebx
push esi
mov dword[ebp-0x740], ecx
push 0x200
push 0
mov eax, dword[ebp-0x740]
push eax
call fcn.00490b70
add esp, 0xc
push 0x200
push 0
mov ecx, dword[ebp-0x740]
add ecx, 0x200
push ecx
call fcn.00490b70
add esp, 0xc
push 0x200
push 0
mov edx, dword[ebp-0x740]
add edx, 0x400
push edx
call fcn.00490b70
add esp, 0xc
push 0x200
push 0
mov eax, dword[ebp-0x740]
add eax, 0x600
push eax
call fcn.00490b70
add esp, 0xc
push 0x200
push 0
mov ecx, dword[ebp-0x740]
add ecx, 0x800
push ecx
call fcn.00490b70
add esp, 0xc
push 0x200
push 0
mov edx, dword[ebp-0x740]
add edx, 0xa00
push edx
call fcn.00490b70
add esp, 0xc
push 0x200
push 0
mov eax, dword[ebp-0x740]
add eax, 0xc00
push eax
call fcn.00490b70
add esp, 0xc
push 0x200
push 0
mov ecx, dword[ebp-0x740]
add ecx, 0xe00
push ecx
call fcn.00490b70
add esp, 0xc
push 0x200
push 0
mov edx, dword[ebp-0x740]
add edx, 0x1000
push edx
call fcn.00490b70
add esp, 0xc
push 0x200
push 0
mov eax, dword[ebp-0x740]
add eax, 0x1200
push eax
call fcn.00490b70
add esp, 0xc
push 0x200
push 0
mov ecx, dword[ebp-0x740]
add ecx, 0x1400
push ecx
call fcn.00490b70
add esp, 0xc
push 0x200
push 0
mov edx, dword[ebp-0x740]
add edx, 0x1600
push edx
call fcn.00490b70
add esp, 0xc
push 0
push 0
call dword[sym.imp.ole32.dll_CoInitializeEx]
mov dword[ebp-0x44c], eax
push 0
push 0
push 0
push 3
push 0
push 0
push 0
push 0xffffffffffffffff
push 0
call dword[sym.imp.ole32.dll_CoInitializeSecurity]
mov dword[ebp-0x44c], eax
cmp dword[ebp-0x44c], 0
jl 0x48f9f7
mov dword[ebp-0x464], 0
lea eax, [ebp-0x464]
push eax
push 0x50acc8
push 1
push 0
push 0x50ad98
call dword[sym.imp.ole32.dll_CoCreateInstance]
mov dword[ebp-0x44c], eax
cmp dword[ebp-0x44c], 0
jl 0x48f9f7
mov dword[ebp-0x468], 0
lea ecx, [ebp-0x468]
push ecx
push 0
push 0
push 0
push 0
push 0
push 0
push 0x5075f8
mov edx, dword[ebp-0x464]
mov eax, dword[edx]
mov ecx, dword[ebp-0x464]
push ecx
mov edx, dword[eax+0xc]
call edx
mov dword[ebp-0x44c], eax
cmp dword[ebp-0x44c], 0
jl 0x48f9e3
push 0
push 0
push 3
push 3
push 0
push 0
push 0xa
mov eax, dword[ebp-0x468]
push eax
call dword[sym.imp.ole32.dll_CoSetProxyBlanket]
mov dword[ebp-0x44c], eax
cmp dword[ebp-0x44c], 0
jl 0x48f9cf
mov dword[ebp-0x46c], 0
lea ecx, [ebp-0x46c]
push ecx
push 0
push 0x30
push str.SELECT_*_FROM_Win32_ComputerSystemProduct
push 0x50766c
mov edx, dword[ebp-0x468]
mov eax, dword[edx]
mov ecx, dword[ebp-0x468]
push ecx
mov edx, dword[eax+0x50]
call edx
mov dword[ebp-0x44c], eax
cmp dword[ebp-0x44c], 0
jl 0x48f319
mov dword[ebp-0x470], 0
mov dword[ebp-0x474], 0
lea eax, [ebp-0x470]
push eax
lea ecx, [ebp-0x474]
push ecx
push 1
push 0xffffffffffffffff
mov edx, dword[ebp-0x46c]
mov eax, dword[edx]
mov ecx, dword[ebp-0x46c]
push ecx
mov edx, dword[eax+0x10]
call edx
mov dword[ebp-0x44c], eax
cmp dword[ebp-0x44c], 0
jl 0x48f305
cmp dword[ebp-0x470], 0
jbe 0x48f305
xor eax, eax
mov word[ebp-0x488], ax
xor ecx, ecx
mov dword[ebp-0x486], ecx
mov dword[ebp-0x482], ecx
mov dword[ebp-0x47e], ecx
mov word[ebp-0x47a], cx
push 0
push 0
lea edx, [ebp-0x488]
push edx
push 0
push str.UUID
mov eax, dword[ebp-0x474]
mov ecx, dword[eax]
mov edx, dword[ebp-0x474]
push edx
mov eax, dword[ecx+0x10]
call eax
mov dword[ebp-0x44c], eax
cmp dword[ebp-0x44c], 0
jl 0x48f2f1
push 0x100
mov ecx, dword[ebp-0x480]
push ecx
mov edx, dword[ebp-0x740]
add edx, 0x600
push edx
call dword[sym.imp.KERNEL32.dll_lstrcpynW]
lea eax, [ebp-0x488]
push eax
call dword[sym.imp.OLEAUT32.dll_VariantCopy]
mov ecx, dword[ebp-0x474]
mov edx, dword[ecx]
mov eax, dword[ebp-0x474]
push eax
mov ecx, dword[edx+8]
call ecx
mov edx, dword[ebp-0x46c]
mov eax, dword[edx]
mov ecx, dword[ebp-0x46c]
push ecx
mov edx, dword[eax+8]
call edx
lea eax, [ebp-0x46c]
push eax
push 0
push 0x30
push str.SELECT__FROM_Win32_ComputerSystemProduct
push 0x5076d4
mov ecx, dword[ebp-0x468]
mov edx, dword[ecx]
mov eax, dword[ebp-0x468]
push eax
mov ecx, dword[edx+0x50]
call ecx
mov dword[ebp-0x44c], eax
cmp dword[ebp-0x44c], 0
jl 0x48f45c
mov dword[ebp-0x48c], 0
mov dword[ebp-0x490], 0
lea edx, [ebp-0x48c]
push edx
lea eax, [ebp-0x490]
push eax
push 1
push 0xffffffffffffffff
mov ecx, dword[ebp-0x46c]
mov edx, dword[ecx]
mov eax, dword[ebp-0x46c]
push eax
mov ecx, dword[edx+0x10]
call ecx
mov dword[ebp-0x44c], eax
cmp dword[ebp-0x44c], 0
jl 0x48f448
cmp dword[ebp-0x48c], 0
jbe 0x48f448
xor edx, edx
mov word[ebp-0x4a0], dx
xor eax, eax
mov dword[ebp-0x49e], eax
mov dword[ebp-0x49a], eax
mov dword[ebp-0x496], eax
mov word[ebp-0x492], ax
push 0
push 0
lea ecx, [ebp-0x4a0]
push ecx
push 0
push str.Name
mov edx, dword[ebp-0x490]
mov eax, dword[edx]
mov ecx, dword[ebp-0x490]
push ecx
mov edx, dword[eax+0x10]
call edx
mov dword[ebp-0x44c], eax
cmp dword[ebp-0x44c], 0
jl 0x48f434
push 0x100
mov eax, dword[ebp-0x498]
push eax
mov ecx, dword[ebp-0x740]
add ecx, 0x800
push ecx
call dword[sym.imp.KERNEL32.dll_lstrcpynW]
lea edx, [ebp-0x4a0]
push edx
call dword[sym.imp.OLEAUT32.dll_VariantCopy]
mov eax, dword[ebp-0x490]
mov ecx, dword[eax]
mov edx, dword[ebp-0x490]
push edx
mov eax, dword[ecx+8]
call eax
mov ecx, dword[ebp-0x46c]
mov edx, dword[ecx]
mov eax, dword[ebp-0x46c]
push eax
mov ecx, dword[edx+8]
call ecx
lea edx, [ebp-0x46c]
push edx
push 0
push 0x30
push str.SELECT_*_FROM_Win32_OperatingSystem
push 0x507730
mov eax, dword[ebp-0x468]
mov ecx, dword[eax]
mov edx, dword[ebp-0x468]
push edx
mov eax, dword[ecx+0x50]
call eax
mov dword[ebp-0x44c], eax
cmp dword[ebp-0x44c], 0
jl 0x48f59e
mov dword[ebp-0x4a4], 0
mov dword[ebp-0x4a8], 0
lea ecx, [ebp-0x4a4]
push ecx
lea edx, [ebp-0x4a8]
push edx
push 1
push 0xffffffffffffffff
mov eax, dword[ebp-0x46c]
mov ecx, dword[eax]
mov edx, dword[ebp-0x46c]
push edx
mov eax, dword[ecx+0x10]
call eax
mov dword[ebp-0x44c], eax
cmp dword[ebp-0x44c], 0
jl 0x48f58a
cmp dword[ebp-0x4a4], 0
jbe 0x48f58a
xor ecx, ecx
mov word[ebp-0x4b8], cx
xor edx, edx
mov dword[ebp-0x4b6], edx
mov dword[ebp-0x4b2], edx
mov dword[ebp-0x4ae], edx
mov word[ebp-0x4aa], dx
push 0
push 0
lea eax, [ebp-0x4b8]
push eax
push 0
push str.SerialNumber
mov ecx, dword[ebp-0x4a8]
mov edx, dword[ecx]
mov eax, dword[ebp-0x4a8]
push eax
mov ecx, dword[edx+0x10]
call ecx
mov dword[ebp-0x44c], eax
cmp dword[ebp-0x44c], 0
jl 0x48f576
push 0x100
mov edx, dword[ebp-0x4b0]
push edx
mov eax, dword[ebp-0x740]
add eax, 0xa00
push eax
call dword[sym.imp.KERNEL32.dll_lstrcpynW]
lea ecx, [ebp-0x4b8]
push ecx
call dword[sym.imp.OLEAUT32.dll_VariantCopy]
mov edx, dword[ebp-0x4a8]
mov eax, dword[edx]
mov ecx, dword[ebp-0x4a8]
push ecx
mov edx, dword[eax+8]
call edx
mov eax, dword[ebp-0x46c]
mov ecx, dword[eax]
mov edx, dword[ebp-0x46c]
push edx
mov eax, dword[ecx+8]
call eax
lea ecx, [ebp-0x46c]
push ecx
push 0
push 0x30
push str.SELECT__FROM_Win32_OperatingSystem
push 0x5077a0
mov edx, dword[ebp-0x468]
mov eax, dword[edx]
mov ecx, dword[ebp-0x468]
push ecx
mov edx, dword[eax+0x50]
call edx
mov dword[ebp-0x44c], eax
cmp dword[ebp-0x44c], 0
jl 0x48f749
mov dword[ebp-0x4bc], 0
mov dword[ebp-0x4c0], 0
lea eax, [ebp-0x4bc]
push eax
lea ecx, [ebp-0x4c0]
push ecx
push 1
push 0xffffffffffffffff
mov edx, dword[ebp-0x46c]
mov eax, dword[edx]
mov ecx, dword[ebp-0x46c]
push ecx
mov edx, dword[eax+0x10]
call edx
mov dword[ebp-0x44c], eax
cmp dword[ebp-0x44c], 0
jl 0x48f735
cmp dword[ebp-0x4bc], 0
jbe 0x48f735
xor eax, eax
mov word[ebp-0x4d0], ax
xor ecx, ecx
mov dword[ebp-0x4ce], ecx
mov dword[ebp-0x4ca], ecx
mov dword[ebp-0x4c6], ecx
mov word[ebp-0x4c2], cx
push 0
push 0
lea edx, [ebp-0x4d0]
push edx
push 0
push str.InstallDate
mov eax, dword[ebp-0x4c0]
mov ecx, dword[eax]
mov edx, dword[ebp-0x4c0]
push edx
mov eax, dword[ecx+0x10]
call eax
mov dword[ebp-0x44c], eax
cmp dword[ebp-0x44c], 0
jl 0x48f721
push 0x100
mov ecx, dword[ebp-0x4c8]
push ecx
mov edx, dword[ebp-0x740]
add edx, 0xc00
push edx
call dword[sym.imp.KERNEL32.dll_lstrcpynW]
mov dword[ebp-0x4d4], 0
jmp 0x48f6cb
mov eax, dword[ebp-0x4d4]
add eax, 1
mov dword[ebp-0x4d4], eax
mov ecx, dword[ebp-0x4d4]
mov edx, dword[ebp-0x740]
movzx eax, word[edx+ecx*2+0xc00]
test eax, eax
je 0x48f714
mov ecx, dword[ebp-0x4d4]
mov edx, dword[ebp-0x740]
movzx eax, word[edx+ecx*2+0xc00]
cmp eax, 0x2e
jne 0x48f712
xor ecx, ecx
mov edx, dword[ebp-0x4d4]
mov eax, dword[ebp-0x740]
mov word[eax+edx*2+0xc00], cx
jmp 0x48f6bc
lea ecx, [ebp-0x4d0]
push ecx
call dword[sym.imp.OLEAUT32.dll_VariantCopy]
mov edx, dword[ebp-0x4c0]
mov eax, dword[edx]
mov ecx, dword[ebp-0x4c0]
push ecx
mov edx, dword[eax+8]
call edx
mov eax, dword[ebp-0x46c]
mov ecx, dword[eax]
mov edx, dword[ebp-0x46c]
push edx
mov eax, dword[ecx+8]
call eax
lea ecx, [ebp-0x46c]
push ecx
push 0
push 0x30
push str.SELECT_*_FROM_Win32_BIOS
push 0x5077f4
mov edx, dword[ebp-0x468]
mov eax, dword[edx]
mov ecx, dword[ebp-0x468]
push ecx
mov edx, dword[eax+0x50]
call edx
mov dword[ebp-0x44c], eax
cmp dword[ebp-0x44c], 0
jl 0x48f88c
mov dword[ebp-0x4d8], 0
mov dword[ebp-0x4dc], 0
lea eax, [ebp-0x4d8]
push eax
lea ecx, [ebp-0x4dc]
push ecx
push 1
push 0xffffffffffffffff
mov edx, dword[ebp-0x46c]
mov eax, dword[edx]
mov ecx, dword[ebp-0x46c]
push ecx
mov edx, dword[eax+0x10]
call edx
mov dword[ebp-0x44c], eax
cmp dword[ebp-0x44c], 0
jl 0x48f878
cmp dword[ebp-0x4d8], 0
jbe 0x48f878
xor eax, eax
mov word[ebp-0x4f0], ax
xor ecx, ecx
mov dword[ebp-0x4ee], ecx
mov dword[ebp-0x4ea], ecx
mov dword[ebp-0x4e6], ecx
mov word[ebp-0x4e2], cx
push 0
push 0
lea edx, [ebp-0x4f0]
push edx
push 0
push str.SerialNumber
mov eax, dword[ebp-0x4dc]
mov ecx, dword[eax]
mov edx, dword[ebp-0x4dc]
push edx
mov eax, dword[ecx+0x10]
call eax
mov dword[ebp-0x44c], eax
cmp dword[ebp-0x44c], 0
jl 0x48f864
push 0x100
mov ecx, dword[ebp-0x4e8]
push ecx
mov edx, dword[ebp-0x740]
add edx, 0xe00
push edx
call dword[sym.imp.KERNEL32.dll_lstrcpynW]
lea eax, [ebp-0x4f0]
push eax
call dword[sym.imp.OLEAUT32.dll_VariantCopy]
mov ecx, dword[ebp-0x4dc]
mov edx, dword[ecx]
mov eax, dword[ebp-0x4dc]
push eax
mov ecx, dword[edx+8]
call ecx
mov edx, dword[ebp-0x46c]
mov eax, dword[edx]
mov ecx, dword[ebp-0x46c]
push ecx
mov edx, dword[eax+8]
call edx
lea eax, [ebp-0x46c]
push eax
push 0
push 0x30
push str.SELECT__FROM_Win32_BIOS
push 0x50784c
mov ecx, dword[ebp-0x468]
mov edx, dword[ecx]
mov eax, dword[ebp-0x468]
push eax
mov ecx, dword[edx+0x50]
call ecx
mov dword[ebp-0x44c], eax
cmp dword[ebp-0x44c], 0
jl 0x48f9cf
mov dword[ebp-0x4f4], 0
mov dword[ebp-0x4f8], 0
lea edx, [ebp-0x4f4]
push edx
lea eax, [ebp-0x4f8]
push eax
push 1
push 0xffffffffffffffff
mov ecx, dword[ebp-0x46c]
mov edx, dword[ecx]
mov eax, dword[ebp-0x46c]
push eax
mov ecx, dword[edx+0x10]
call ecx
mov dword[ebp-0x44c], eax
cmp dword[ebp-0x44c], 0
jl 0x48f9bb
cmp dword[ebp-0x4f4], 0
jbe 0x48f9bb
xor edx, edx
mov word[ebp-0x508], dx
xor eax, eax
mov dword[ebp-0x506], eax
mov dword[ebp-0x502], eax
mov dword[ebp-0x4fe], eax
mov word[ebp-0x4fa], ax
push 0
push 0
lea ecx, [ebp-0x508]
push ecx
push 0
push str.SMBIOSBIOSVersion
mov edx, dword[ebp-0x4f8]
mov eax, dword[edx]
mov ecx, dword[ebp-0x4f8]
push ecx
mov edx, dword[eax+0x10]
call edx
mov dword[ebp-0x44c], eax
cmp dword[ebp-0x44c], 0
jl 0x48f9a7
push 0x100
mov eax, dword[ebp-0x500]
push eax
mov ecx, dword[ebp-0x740]
add ecx, 0x1000
push ecx
call dword[sym.imp.KERNEL32.dll_lstrcpynW]
lea edx, [ebp-0x508]
push edx
call dword[sym.imp.OLEAUT32.dll_VariantCopy]
mov eax, dword[ebp-0x4f8]
mov ecx, dword[eax]
mov edx, dword[ebp-0x4f8]
push edx
mov eax, dword[ecx+8]
call eax
mov ecx, dword[ebp-0x46c]
mov edx, dword[ecx]
mov eax, dword[ebp-0x46c]
push eax
mov ecx, dword[edx+8]
call ecx
mov edx, dword[ebp-0x468]
mov eax, dword[edx]
mov ecx, dword[ebp-0x468]
push ecx
mov edx, dword[eax+8]
call edx
mov eax, dword[ebp-0x464]
mov ecx, dword[eax]
mov edx, dword[ebp-0x464]
push edx
mov eax, dword[ecx+8]
call eax
mov dword[ebp-0x460], 0
xor ecx, ecx
mov dword[ebp-0x45c], ecx
mov dword[ebp-0x458], ecx
mov dword[ebp-0x454], ecx
lea esi, [ebp-0x460]
mov eax, 1
xor ecx, ecx
cpuid
mov dword[esi], eax
mov dword[esi+4], ebx
mov dword[esi+8], ecx
mov dword[esi+0xc], edx
mov edx, dword[ebp-0x460]
push edx
mov eax, dword[ebp-0x454]
push eax
push str._08X_08X
mov ecx, dword[ebp-0x740]
push ecx
call dword[sym.imp.USER32.dll_wsprintfW]
add esp, 0x10
mov dword[ebp-0x50c], 0
jmp 0x48fa6d
mov edx, dword[ebp-0x50c]
add edx, 1
mov dword[ebp-0x50c], edx
cmp dword[ebp-0x50c], 0xa
jge 0x48facd
xor eax, eax
mov word[ebp-0x710], ax
push 0x1fe
push 0
lea ecx, [ebp-0x70e]
push ecx
call fcn.00490b70
add esp, 0xc
lea edx, [ebp-0x710]
push edx
mov eax, dword[ebp-0x50c]
push eax
call fcn.0048ff60
add esp, 8
test eax, eax
je 0x48facb
lea ecx, [ebp-0x710]
push ecx
mov edx, dword[ebp-0x740]
add edx, 0x200
push edx
call dword[sym.imp.KERNEL32.dll_lstrcpyW]
jmp 0x48facd
jmp 0x48fa5e
mov byte[ebp-0x438], 0
xor eax, eax
mov dword[ebp-0x437], eax
mov byte[ebp-0x433], al
mov dword[ebp-0x450], 0
lea ecx, [ebp-0x450]
push ecx
push 0
call sub.IPHLPAPI.DLL_GetAdaptersInfo
mov edx, dword[ebp-0x450]
push edx
push 0x40
call dword[sym.imp.KERNEL32.dll_GlobalAlloc]
mov dword[ebp-4], eax
cmp dword[ebp-4], 0
je 0x48fba1
lea eax, [ebp-0x450]
push eax
mov ecx, dword[ebp-4]
push ecx
call sub.IPHLPAPI.DLL_GetAdaptersInfo
test eax, eax
jne 0x48fba1
mov edx, dword[ebp-4]
mov dword[ebp-0x714], edx
jmp 0x48fb43
mov eax, dword[ebp-0x714]
mov ecx, dword[eax]
mov dword[ebp-0x714], ecx
cmp dword[ebp-0x714], 0
je 0x48fba1
mov edx, dword[ebp-0x714]
add edx, 8
push edx
call fcn.00490350
add esp, 4
mov dword[ebp-0x718], eax
cmp dword[ebp-0x718], 1
je 0x48fb76
cmp dword[ebp-0x718], 0
jne 0x48fb9f
mov eax, dword[ebp-0x714]
add eax, 0x194
mov ecx, dword[eax]
mov dword[ebp-0x438], ecx
mov dx, word[eax+4]
mov word[ebp-0x434], dx
cmp dword[ebp-0x718], 0
jne 0x48fb9f
jmp 0x48fba1
jmp 0x48fb35
movzx eax, byte[ebp-0x433]
push eax
movzx ecx, byte[ebp-0x434]
push ecx
movzx edx, byte[ebp-0x435]
push edx
movzx eax, byte[ebp-0x436]
push eax
movzx ecx, byte[ebp-0x437]
push ecx
movzx edx, byte[ebp-0x438]
push edx
push str._02X__02X__02X__02X__02X__02X
mov eax, dword[ebp-0x740]
add eax, 0x400
push eax
call dword[sym.imp.USER32.dll_wsprintfW]
add esp, 0x20
mov dword[ebp-0x43c], 0
push 0
push 0
push 0
push 0
lea ecx, [ebp-0x43c]
push ecx
push 0
push 0
push 0x5078c8
call dword[sym.imp.KERNEL32.dll_GetVolumeInformationW]
test eax, eax
je 0x48fc38
mov edx, dword[ebp-0x43c]
push edx
push str._08X
mov eax, dword[ebp-0x740]
add eax, 0x1200
push eax
call dword[sym.imp.USER32.dll_wsprintfW]
add esp, 0xc
xor ecx, ecx
mov word[ebp-0x428], cx
push 0x206
push 0
lea edx, [ebp-0x426]
push edx
call fcn.00490b70
add esp, 0xc
xor eax, eax
mov word[ebp-0x220], ax
push 0x206
push 0
lea ecx, [ebp-0x21e]
push ecx
call fcn.00490b70
add esp, 0xc
mov dword[ebp-0x430], 0
mov dword[ebp-0x42c], 0
mov dword[ebp-0x10], 0
mov dword[ebp-0xc], 0
mov dword[ebp-0x448], 0
mov dword[ebp-0x444], 0
lea edx, [ebp-0x428]
push edx
push 0
push 0
push 0x25
push 0
call dword[sym.imp.SHELL32.dll_SHGetFolderPathW]
mov dword[ebp-0x44c], eax
cmp dword[ebp-0x44c], 0
jl 0x48feb0
push str.kernel32.dll
lea eax, [ebp-0x428]
push eax
lea ecx, [ebp-0x220]
push ecx
call dword[sym.imp.SHLWAPI.dll_PathCombineW]
test eax, eax
je 0x48fd76
push 0
push 0
push 3
push 0
push 1
push 0x80000000
lea edx, [ebp-0x220]
push edx
call dword[sym.imp.KERNEL32.dll_CreateFileW]
mov dword[ebp-0x71c], eax
cmp dword[ebp-0x71c], 0xffffffff
je 0x48fd76
mov dword[ebp-0x724], 0
xor eax, eax
mov dword[ebp-0x720], eax
push 0
push 0
lea ecx, [ebp-0x724]
push ecx
mov edx, dword[ebp-0x71c]
push edx
call dword[sym.imp.KERNEL32.dll_GetFileTime]
test eax, eax
je 0x48fd69
lea eax, [ebp-0x724]
push eax
call fcn.0048ff10
add esp, 4
mov dword[ebp-0x430], eax
mov dword[ebp-0x42c], edx
mov ecx, dword[ebp-0x71c]
push ecx
call dword[sym.imp.KERNEL32.dll_CloseHandle]
push str.user32.dll
lea edx, [ebp-0x428]
push edx
lea eax, [ebp-0x220]
push eax
call dword[sym.imp.SHLWAPI.dll_PathCombineW]
test eax, eax
je 0x48fe0e
push 0
push 0
push 3
push 0
push 1
push 0x80000000
lea ecx, [ebp-0x220]
push ecx
call dword[sym.imp.KERNEL32.dll_CreateFileW]
mov dword[ebp-0x728], eax
cmp dword[ebp-0x728], 0xffffffff
je 0x48fe0e
mov dword[ebp-0x730], 0
xor edx, edx
mov dword[ebp-0x72c], edx
push 0
push 0
lea eax, [ebp-0x730]
push eax
mov ecx, dword[ebp-0x728]
push ecx
call dword[sym.imp.KERNEL32.dll_GetFileTime]
test eax, eax
je 0x48fe01
lea edx, [ebp-0x730]
push edx
call fcn.0048ff10
add esp, 4
mov dword[ebp-0x10], eax
mov dword[ebp-0xc], edx
mov eax, dword[ebp-0x728]
push eax
call dword[sym.imp.KERNEL32.dll_CloseHandle]
push str.notepad.exe
lea ecx, [ebp-0x428]
push ecx
lea edx, [ebp-0x220]
push edx
call dword[sym.imp.SHLWAPI.dll_PathCombineW]
test eax, eax
je 0x48feb0
push 0
push 0
push 3
push 0
push 1
push 0x80000000
lea eax, [ebp-0x220]
push eax
call dword[sym.imp.KERNEL32.dll_CreateFileW]
mov dword[ebp-0x734], eax
cmp dword[ebp-0x734], 0xffffffff
je 0x48feb0
mov dword[ebp-0x73c], 0
xor ecx, ecx
mov dword[ebp-0x738], ecx
push 0
push 0
lea edx, [ebp-0x73c]
push edx
mov eax, dword[ebp-0x734]
push eax
call dword[sym.imp.KERNEL32.dll_GetFileTime]
test eax, eax
je 0x48fea3
lea ecx, [ebp-0x73c]
push ecx
call fcn.0048ff10
add esp, 4
mov dword[ebp-0x448], eax
mov dword[ebp-0x444], edx
mov edx, dword[ebp-0x734]
push edx
call dword[sym.imp.KERNEL32.dll_CloseHandle]
mov eax, dword[ebp-0x444]
push eax
mov ecx, dword[ebp-0x448]
push ecx
mov edx, dword[ebp-0xc]
push edx
mov eax, dword[ebp-0x10]
push eax
mov ecx, dword[ebp-0x42c]
push ecx
mov edx, dword[ebp-0x430]
push edx
push str._llu__llu__llu
push 0x100
mov eax, dword[ebp-0x740]
add eax, 0x1400
push eax
call fcn.0049ae66
add esp, 0x24
mov eax, dword[ebp-0x740]
pop esi
pop ebx
mov ecx, dword[ebp-0x14]
xor ecx, ebp
call fcn.00490ace
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/279a61b1e76da49531f1f16fd1102a2d