---
layout: post
title:  "fcn.0042f013 @ e16f74a2849182d98050864255e902f8"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0042f013
- **Origin (md5):** e16f74a2849182d98050864255e902f8
- **VirusTotal:** [virustotal.com/gui/file/e16f74a2849182d98050864255e902f8][virustotal_ref]

# Code Tags
<span class="tag" id="LINKING">LINKING</span>


# Behaviour Tags
<span class="bhv-tag" id="SCREENSHOTS_FOREGROUND_WINDOW">SCREENSHOTS_FOREGROUND_WINDOW / 0.00219389625479849</span><span class="bhv-tag" id="CREATES_SOCKET_LISTENER">CREATES_SOCKET_LISTENER / 0.238316342156636</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-195.73410034179688, -62.874427795410156, '<b><a href="/report/fcn.0042f013@e16f74a2849182d98050864255e902f8">fcn.0042f013</a><br>@e16f74a2849182d98050864255e902f8</b><br>', 'point { fill-color: #e0440e; }'],
[-85.98697662353516, -528.0581665039062, '<b><a href="/report/fcn.00442a56@e16f74a2849182d98050864255e902f8">fcn.00442a56</a><br>@e16f74a2849182d98050864255e902f8</b><br>', 'null'],
[102.69173431396484, -223.0509490966797, '<b><a href="/report/fcn.004494a0@f5b8476c36459986b226c45654aeb016">fcn.004494a0</a><br>@f5b8476c36459986b226c45654aeb016</b><br>', 'null'],
[-72.09596252441406, 576.6328735351562, '<b><a href="/report/fcn.0040c113@505be53c36227b94e2fcc406f247f6e5">fcn.0040c113</a><br>@505be53c36227b94e2fcc406f247f6e5</b><br>', 'null'],
[-515.6614379882812, 43.532814025878906, '<b><a href="/report/fcn.0040c867@418e0921f3a9bd4f5bc0dcc59623b5a1">fcn.0040c867</a><br>@418e0921f3a9bd4f5bc0dcc59623b5a1</b><br>', 'null'],
[409.4841613769531, 225.35382080078125, '<b><a href="/report/fcn.0044c5d0@20a93604f17ee6f3c2aa7b1f7a497fcf">fcn.0044c5d0</a><br>@20a93604f17ee6f3c2aa7b1f7a497fcf</b><br>', 'null'],
[267.34619140625, -479.4557800292969, '<b><a href="/report/fcn.00432c54@f5b8476c36459986b226c45654aeb016">fcn.00432c54</a><br>@f5b8476c36459986b226c45654aeb016</b><br>', 'null'],
[355.7099304199219, -76.00907135009766, '<b><a href="/report/fcn.00448079@c077742bdc6d4f2c0ca7d0e2a6a94acf">fcn.00448079</a><br>@c077742bdc6d4f2c0ca7d0e2a6a94acf</b><br>', 'null'],
[151.36424255371094, 65.21818542480469, '<b><a href="/report/fcn.00448079@505be53c36227b94e2fcc406f247f6e5">fcn.00448079</a><br>@505be53c36227b94e2fcc406f247f6e5</b><br>', 'null'],
[-190.5328826904297, 306.0093994140625, '<b><a href="/report/fcn.0040c9c9@20a93604f17ee6f3c2aa7b1f7a497fcf">fcn.0040c9c9</a><br>@20a93604f17ee6f3c2aa7b1f7a497fcf</b><br>', 'null'],
[-331.7328796386719, 559.697509765625, '<b><a href="/report/fcn.0040c113@c077742bdc6d4f2c0ca7d0e2a6a94acf">fcn.0040c113</a><br>@c077742bdc6d4f2c0ca7d0e2a6a94acf</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
and esp, 0xfffffff8
push 0xffffffffffffffff
push 0x451bc8
mov eax, dword
push eax
sub esp, 0xb0
mov eax, dword[0x476084]
xor eax, esp
mov dword[esp+0xa8], eax
push ebx
push esi
push edi
mov eax, dword[0x476084]
xor eax, esp
push eax
lea eax, [esp+0xc0]
mov dword
push dword[0x47769c]
mov edi, ecx
push dword[0x477108]
xor ebx, ebx
push ebx
mov dword[esp+0x40], edi
call fcn.0043b050
mov dword[esp+0x20], 0x4e
mov dword[esp+0x1c], 0xd
add dword[esp+0x20], 0xffffffcb
mov eax, dword[esp+0x1c]
add eax, dword[esp+0x20]
add esp, 0xc
mov dword[esp+0x10], eax
mov eax, dword[esp+0x10]
mov ecx, dword[esp+0x14]
sub eax, ecx
mov dword[esp+0x10], eax
mov eax, dword[esp+0x10]
cdq
push 6
pop ecx
idiv ecx
mov ecx, dword[esp+0x14]
imul eax, ecx
mov ecx, dword[esp+0x10]
mov edx, dword[esp+0x14]
imul ecx, edx
imul ecx, ecx, 0x14
add eax, ecx
mov ecx, dword[esp+0x10]
sub eax, ecx
mov ecx, dword[esp+0x14]
sub eax, ecx
mov ecx, dword[esp+0x10]
lea eax, [eax+ecx+0x25]
mov dword[esp+0x14], eax
mov eax, dword[esp+0x10]
mov ecx, dword[esp+0x14]
add eax, eax
sub eax, ecx
mov ecx, dword[esp+0x10]
sub eax, ecx
add eax, dword[esp+0x14]
mov dword[esp+0x14], eax
mov eax, dword[esp+0x10]
add eax, dword[esp+0x14]
mov dword[esp+0x14], eax
mov eax, dword[esp+0x10]
add eax, dword[esp+0x14]
mov dword[esp+0x14], eax
mov eax, dword[esp+0x10]
mov esi, dword[0x477978]
imul eax, eax, 0x52
mov dword[esp+0x10], eax
mov eax, 0x6ac0
mov dword[esp+0x44], 0xf414c260
mov word[esp+0x48], ax
mov dword[esp+0x4a], 0xd1b611cf
mov dword[esp+0x4e], 0xbb00aa00
mov word[esp+0x52], 0x58bb
call fcn.0043b5b1
lea ecx, [esp+0x70]
push ecx
push esi
call dword[eax+0x1f0]
cmp eax, ebx
jge 0x42f16f
push eax
push dword[0x4776a0]
push 1
call fcn.0043b050
add esp, 0xc
jmp 0x42f3c0
lea eax, [edi+0x10]
push eax
lea eax, [esp+0x74]
push eax
call fcn.0043b92c
mov dword[esp+0x10], eax
mov dword[esp+0x14], 0x15
mov eax, dword[esp+0x14]
add eax, dword[esp+0x14]
push 0x5d
mov dword[esp+0x18], eax
mov eax, dword[esp+0x18]
cdq
pop ecx
idiv ecx
push 0x4a
pop esi
push 0x34
mov ecx, eax
mov eax, dword[esp+0x18]
cdq
idiv esi
pop esi
push 0x2c
add ecx, eax
mov eax, dword[esp+0x18]
cdq
idiv esi
add ecx, eax
mov eax, dword[esp+0x18]
imul eax, eax, 0x3f
sub ecx, eax
mov eax, dword[esp+0x18]
mov edx, dword[esp+0x18]
imul eax, edx
imul eax, eax, 0x38
add ecx, eax
add ecx, dword[esp+0x18]
mov dword[esp+0x18], ecx
mov eax, dword[esp+0x18]
cdq
pop ecx
idiv ecx
mov ecx, dword[esp+0x14]
imul eax, ecx
mov ecx, dword[esp+0x14]
sub eax, ecx
mov ecx, dword[esp+0x14]
lea eax, [eax+ecx+0xf]
mov dword[esp+0x14], eax
cmp dword[esp+0x10], ebx
jge 0x42f791
fldz
mov dword[esp+0x40], ebx
fst qword[esp+0x1c]
fld qword[0x4708e0]
fstp qword[esp+0x2c]
fld qword[0x4708d8]
fst qword[esp+0x14]
fld qword[0x4708d0]
fstp qword[esp+0x24]
fld qword[0x4708c8]
fstp qword[esp+0x24]
fld qword[0x4708c0]
fst qword[esp+0x24]
fld qword[esp+0x1c]
fcomp qword[esp+0x24]
fnstsw ax
test ah, 0x41
jp 0x42f2ba
fld qword[esp+0x24]
fld qword[esp+0x2c]
fmul qword[0x4708b8]
fsubp st(1)
fsub qword[esp+0x1c]
fld qword[esp+0x14]
fmul qword[esp+0x1c]
fmulp st(2)
fsubrp st(1)
fadd qword[esp+0x1c]
fsub qword[0x4708b0]
fstp qword[esp+0x14]
fld qword[esp+0x14]
fsubrp st(2)
fld qword[esp+0x2c]
faddp st(2)
fld qword[esp+0x24]
faddp st(2)
fmul qword[esp+0x14]
fmul qword[0x4708a8]
fdiv qword[0x4708f0]
fsubp st(1)
fld qword[esp+0x14]
fmul qword[0x4708a0]
faddp st(1)
fsub qword[esp+0x1c]
fstp qword[esp+0x1c]
jmp 0x42f2c0
fstp st(2)
fstp st(0)
fstp st(0)
call fcn.0043b5b1
lea ecx, [esp+0x40]
push ecx
lea ecx, [esp+0x74]
push ecx
call dword[eax+0x1f4]
mov eax, dword[esp+0x40]
cmp eax, ebx
jne 0x42f2e2
mov eax, dword[0x4778b0]
push eax
lea eax, [esp+0x84]
call fcn.00404f5c
lea eax, [esp+0x80]
push eax
mov ecx, 0xfde9
lea edx, [esp+0xa0]
mov dword[esp+0xcc], ebx
call fcn.00447e00
pop ecx
mov byte[esp+0xc8], 1
cmp dword[eax+0x14], 0x10
jb 0x42f320
mov eax, dword[eax]
push dword[esp+0x10]
push eax
push dword[0x4776a4]
push 1
call fcn.0043b050
add esp, 0x10
push 1
xor edi, edi
lea esi, [esp+0xa0]
call fcn.00404af1
or dword[esp+0xc8], 0xffffffff
push 1
lea esi, [esp+0x84]
call fcn.00404e35
fld qword[0x470960]
fstp qword[esp+0x1c]
fld qword[esp+0x1c]
fsub qword[0x470958]
fstp qword[esp+0x1c]
fld qword[esp+0x1c]
fadd qword[esp+0x1c]
fstp qword[esp+0x1c]
fld qword[esp+0x1c]
fmul qword[0x470950]
fstp qword[esp+0x1c]
fld qword[esp+0x1c]
fmul qword[0x470948]
fmul qword[esp+0x1c]
fsub qword[0x470940]
fstp qword[esp+0x1c]
fld qword[esp+0x1c]
push dword[esp+0x40]
fsub qword[0x470938]
fstp qword[esp+0x20]
call fcn.0043b140
mov edi, dword[esp+0x34]
lea eax, [edi+0x10]
push eax
lea eax, [esp+0x48]
push eax
call fcn.0043b92c
cmp eax, ebx
jge 0x42f791
push eax
push dword[0x4776a8]
push 1
call fcn.0043b050
add esp, 0xc
push dword[0x4776ac]
lea eax, [esp+0x58]
call fcn.004045d8
mov dword[esp+0xc8], 2
mov dword[esp+0x1c], 0x58
mov dword[esp+0x14], 0x4f
mov dword[esp+0x10], 0x1e
mov eax, dword[esp+0x14]
mov ecx, dword[esp+0x14]
imul eax, ecx
mov dword[esp+0x10], eax
add dword[esp+0x10], 0x31
mov eax, dword[esp+0x10]
mov ecx, dword[esp+0x1c]
cmp ecx, eax
jle 0x42f44d
mov eax, dword[esp+0x14]
add eax, dword[esp+0x1c]
mov ecx, dword[esp+0x1c]
lea eax, [eax+ecx+2]
mov dword[esp+0x10], eax
push dword[0x47797c]
call dword[sym.imp.KERNEL32.dll_LoadLibraryW]
mov dword[esp+0x1c], eax
cmp eax, ebx
je 0x42f6e7
mov eax, dword[str.VVh__SIN_Hi_HL_H:]
push eax
mov esi, eax
call fcn.00412ec0
pop ecx
mov ecx, esi
lea esi, [esp+0x54]
call fcn.0040456f
push dword[0x4776b0]
mov edi, dword[sym.imp.KERNEL32.dll_GetProcAddress]
push dword[esp+0x20]
call edi
cmp eax, ebx
je 0x42f4e3
call eax
xor ecx, ecx
cmp eax, ebx
setl cl
push eax
push dword[0x4776b4]
push ecx
call fcn.0043b050
fld qword[0x4708c8]
fstp qword[esp+0x38]
add esp, 0xc
fld qword[0x470930]
fstp qword[esp+0x2c]
fld qword[0x470928]
fstp qword[esp+0x2c]
fld qword[0x470960]
fstp qword[esp+0x2c]
fld qword[esp+0x2c]
fsub qword[0x470920]
fstp qword[esp+0x2c]
mov eax, dword[0x4776b8]
push eax
mov esi, eax
call fcn.00412ec0
pop ecx
mov ecx, esi
lea esi, [esp+0x54]
call fcn.0040456f
push dword[0x4776b8]
push dword[esp+0x20]
call edi
mov edi, eax
cmp edi, ebx
je 0x42f6cb
mov dword[esp+0x3c], ebx
mov byte[esp+0xc8], 3
mov dword[esp+0x14], 0x15
mov eax, dword[esp+0x14]
add eax, dword[esp+0x14]
push 0x5d
mov dword[esp+0x18], eax
mov eax, dword[esp+0x18]
cdq
pop ecx
idiv ecx
push 0x4a
pop esi
push 0x34
mov ecx, eax
mov eax, dword[esp+0x18]
cdq
idiv esi
pop esi
push 0x2c
add ecx, eax
mov eax, dword[esp+0x18]
cdq
idiv esi
mov esi, 0x4543e0
add ecx, eax
mov eax, dword[esp+0x18]
imul eax, eax, 0x3f
sub ecx, eax
mov eax, dword[esp+0x18]
mov edx, dword[esp+0x18]
imul eax, edx
imul eax, eax, 0x38
add ecx, eax
add ecx, dword[esp+0x18]
mov dword[esp+0x18], ecx
mov eax, dword[esp+0x18]
cdq
pop ecx
idiv ecx
mov ecx, dword[esp+0x14]
imul eax, ecx
mov ecx, dword[esp+0x14]
sub eax, ecx
mov ecx, dword[esp+0x14]
lea eax, [eax+ecx+0xf]
mov dword[esp+0x14], eax
lea eax, [esp+0x3c]
push eax
push esi
lea eax, [esp+0x78]
push eax
call edi
cmp eax, ebx
jge 0x42f5c9
lea eax, [esp+0x3c]
push eax
push esi
lea eax, [esp+0x4c]
push eax
call edi
mov dword[esp+0x10], eax
cmp eax, ebx
jl 0x42f6b3
mov eax, dword[str._QFBWFjMPWBM_F]
push eax
mov esi, eax
call fcn.00412ec0
pop ecx
mov ecx, esi
lea esi, [esp+0x54]
call fcn.0040456f
mov ecx, dword[esp+0x34]
mov eax, dword[esp+0x3c]
mov edx, dword[eax]
add ecx, 0x10
push ecx
push 0x4543f0
push ebx
push eax
call dword[edx+0xc]
fldz
fst qword[esp+0x1c]
mov dword[esp+0x10], eax
fld qword[0x4708e0]
fstp qword[esp+0x2c]
fld qword[0x4708d8]
fst qword[esp+0x14]
fld qword[0x4708d0]
fstp qword[esp+0x24]
fld qword[0x4708c8]
fstp qword[esp+0x24]
fld qword[0x4708c0]
fst qword[esp+0x24]
fld qword[esp+0x1c]
fcomp qword[esp+0x24]
fnstsw ax
test ah, 0x41
jp 0x42f6ad
fld qword[esp+0x24]
fld qword[esp+0x2c]
fmul qword[0x4708b8]
fsubp st(1)
fsub qword[esp+0x1c]
fld qword[esp+0x14]
fmul qword[esp+0x1c]
fmulp st(2)
fsubrp st(1)
fadd qword[esp+0x1c]
fsub qword[0x4708b0]
fstp qword[esp+0x14]
fld qword[esp+0x14]
fsubrp st(2)
fld qword[esp+0x2c]
faddp st(2)
fld qword[esp+0x24]
faddp st(2)
fmul qword[esp+0x14]
fmul qword[0x4708a8]
fdiv qword[0x4708f0]
fsubp st(1)
fld qword[esp+0x14]
fmul qword[0x4708a0]
faddp st(1)
fsub qword[esp+0x1c]
fstp qword[esp+0x1c]
jmp 0x42f6b3
fstp st(2)
fstp st(0)
fstp st(0)
mov byte[esp+0xc8], 2
mov eax, dword[esp+0x3c]
cmp eax, ebx
je 0x42f741
mov ecx, dword[eax]
push eax
call dword[ecx+8]
jmp 0x42f741
call fcn.0043b5b1
call dword[eax+0x48]
cmp eax, ebx
jle 0x42f6e1
and eax, 0xffff
or eax, 0x80070000
mov dword[esp+0x10], eax
jmp 0x42f741
call fcn.0043b5b1
call dword[eax+0x48]
cmp eax, ebx
jle 0x42f6fd
and eax, 0xffff
or eax, 0x80070000
mov dword[esp+0x14], 0x37
mov dword[esp+0x10], eax
mov eax, dword[esp+0x14]
mov ecx, dword[esp+0x14]
imul eax, ecx
mov ecx, dword[esp+0x14]
imul eax, eax, 0x5f
imul ecx, ecx, 0x29
add eax, ecx
mov ecx, dword[esp+0x14]
imul ecx, ecx, 0x21
add eax, ecx
mov ecx, dword[esp+0x14]
sub eax, ecx
mov ecx, dword[esp+0x14]
sub eax, ecx
mov ecx, dword[esp+0x14]
lea eax, [eax+ecx+0x2c]
mov dword[esp+0x14], eax
cmp dword[esp+0x10], ebx
jge 0x42f76b
cmp dword[esp+0x68], 0x10
mov eax, dword[esp+0x54]
jae 0x42f756
lea eax, [esp+0x54]
push eax
push dword[esp+0x14]
push dword[0x4776c0]
push 1
call fcn.0043b050
add esp, 0x10
or dword[esp+0xc8], 0xffffffff
push 1
xor edi, edi
lea esi, [esp+0x58]
call fcn.00404af1
cmp dword[esp+0x10], ebx
jge 0x42f78d
xor eax, eax
jmp 0x42f94d
mov edi, dword[esp+0x34]
mov eax, dword[edi+0x10]
mov edx, dword[eax]
lea ecx, [edi+0x14]
push ecx
push 0x454400
push eax
call dword[edx]
cmp eax, ebx
jge 0x42f7b9
push eax
push dword[0x4776c4]
push 1
call fcn.0043b050
add esp, 0xc
jmp 0x42f786
mov eax, dword[edi+0x10]
mov ecx, dword[eax]
push edi
push eax
call dword[ecx+0xc]
cmp eax, ebx
jge 0x42f81d
push eax
push dword[0x4776c8]
push 1
call fcn.0043b050
fld qword[0x470918]
fstp qword[esp+0x38]
add esp, 0xc
fld qword[0x470910]
fstp qword[esp+0x2c]
fld qword[0x470908]
fstp qword[esp+0x2c]
fld qword[0x470900]
fstp qword[esp+0x24]
fld qword[0x4708f8]
fstp qword[esp+0x24]
fld qword[esp+0x2c]
fdiv qword[0x4708f0]
fstp qword[esp+0x24]
jmp 0x42f786
mov eax, dword[edi+0x14]
mov ecx, dword[eax]
push eax
call dword[ecx+0xc]
cmp eax, ebx
jge 0x42f87b
push eax
push dword[0x4776cc]
push 1
call fcn.0043b050
mov dword[esp+0x1c], 6
mov eax, dword[esp+0x1c]
mov ecx, dword[esp+0x1c]
imul eax, ecx
mov ecx, dword[esp+0x1c]
imul eax, eax, 0x37
imul ecx, ecx, 0x48
add eax, ecx
add eax, dword[esp+0x1c]
add esp, 0xc
mov dword[esp+0x10], eax
mov eax, dword[esp+0x10]
mov dword[esp+0x10], eax
mov eax, dword[esp+0x10]
add eax, dword[esp+0x10]
mov dword[esp+0x10], eax
jmp 0x42f786
cmp dword[edi+0xc], ebx
je 0x42f88a
mov ecx, dword[edi+0xc]
push dword[edi+0x10]
mov eax, dword[ecx]
call dword[eax]
mov esi, dword[edi+0x10]
mov eax, dword[esi]
push 2
push esi
call dword[eax+0x14]
fldz
fst qword[esp+0x34]
fld qword[0x4708e0]
fstp qword[esp+0x2c]
fld qword[0x4708d8]
fst qword[esp+0x1c]
fld qword[0x4708d0]
fstp qword[esp+0x24]
fld qword[0x4708c8]
fstp qword[esp+0x24]
fld qword[0x4708c0]
fst qword[esp+0x24]
fld qword[esp+0x34]
fcomp qword[esp+0x24]
fnstsw ax
test ah, 0x41
jp 0x42f944
fld qword[esp+0x24]
fld qword[esp+0x2c]
fmul qword[0x4708b8]
fsubp st(1)
fsub qword[esp+0x34]
fld qword[esp+0x1c]
fmul qword[esp+0x34]
fmulp st(2)
fsubrp st(1)
fadd qword[esp+0x34]
fsub qword[0x4708b0]
fstp qword[esp+0x1c]
fld qword[esp+0x1c]
fsubrp st(2)
fld qword[esp+0x2c]
faddp st(2)
fld qword[esp+0x24]
faddp st(2)
fmul qword[esp+0x1c]
fmul qword[0x4708a8]
fdiv qword[0x4708f0]
fsubp st(1)
fld qword[esp+0x1c]
fmul qword[0x4708a0]
faddp st(1)
fsub qword[esp+0x34]
fstp qword[esp+0x34]
jmp 0x42f94a
fstp st(2)
fstp st(0)
fstp st(0)
xor eax, eax
inc eax
mov ecx, dword[esp+0xc0]
mov dword
pop ecx
pop edi
pop esi
pop ebx
mov ecx, dword[esp+0xa8]
xor ecx, esp
call fcn.00410cd7
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/e16f74a2849182d98050864255e902f8