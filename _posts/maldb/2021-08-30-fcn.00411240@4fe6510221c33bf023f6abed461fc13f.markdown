---
layout: post
title:  "fcn.00411240 @ 4fe6510221c33bf023f6abed461fc13f"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00411240
- **Origin (md5):** 4fe6510221c33bf023f6abed461fc13f
- **VirusTotal:** [virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f][virustotal_ref]

# Code Tags
<span class="tag" id="PROCESS">PROCESS</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.00411240@4fe6510221c33bf023f6abed461fc13f">fcn.00411240</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

mov al, byte[esp+8]
mov dl, byte[esp+4]
sub esp, 0x10
push ebp
mov ebp, dword[esp+0x20]
cmp al, dl
je off.b1783
mov cl, dl
or cl, al
test al, 3
push ebx
sete bl
mov byte[esp+9], bl
test dl, 3
jne off.b61
cmp dword[0x4c53f0], 3
jne off.b57
test dl, 8
jne off.b61
mov dl, 1
jmp off.b63
xor dl, dl
test bl, bl
je off.b75
test al, 0x3c
jne off.b75
mov bl, 1
jmp off.b77
xor bl, bl
mov byte[esp+0xe], bl
test dl, dl
je off.b96
test byte[esp+0x1c], 0x3c
jne off.b96
xor al, al
jmp off.b98
mov al, 1
test bl, bl
je off.b115
xor bl, bl
cmp al, bl
je off.b117
mov byte[esp+0xc], 1
jmp off.b121
xor bl, bl
mov byte[esp+0xc], bl
cmp byte[esp+9], bl
je off.b203
cmp dl, bl
jne off.b203
mov byte[esp+0xd], 1
mov byte[esp+0xb], 1
mov al, byte[esp+0x28]
cmp al, bl
je off.b165
cmp byte[esp+9], 0
je off.b165
mov byte[esp+0xa], 1
test dl, dl
jne off.b170
mov byte[esp+0xa], 0
test al, al
je off.b227
cmp dword[0x4c7f18], 2
je off.b227
cmp byte[esp+9], 0
je off.b227
test dl, dl
je off.b227
test cl, 0x3c
jne off.b227
mov bl, 1
jmp off.b229
mov al, 0xc
mov byte[esp+0xd], bl
test byte[esp+0x20], al
jne off.b221
test byte[esp+0x1c], al
jne off.b136
mov byte[esp+0xb], bl
jmp off.b141
xor bl, bl
mov cl, byte[esp+0x20]
mov al, cl
and al, 0x40
je off.b251
test byte[esp+0x1c], 0x40
mov byte[esp+0x11], 1
je off.b256
mov byte[esp+0x11], 0
mov dl, cl
and dl, 0x80
mov byte[esp+0x15], dl
je off.b279
test byte[esp+0x1c], 0x80
mov byte[esp+0x12], 1
je off.b284
mov byte[esp+0x12], 0
mov dl, cl
and dl, 4
mov byte[esp+0x16], dl
je off.b307
test byte[esp+0x1c], 4
mov byte[esp+0x13], 1
je off.b312
mov byte[esp+0x13], 0
mov dl, cl
and dl, 8
mov byte[esp+0x17], dl
mov dl, byte[esp+0x1c]
je off.b337
mov byte[esp+0x14], 1
test dl, 8
je off.b342
mov byte[esp+0x14], 0
test cl, 0x10
je off.b357
mov byte[esp+0xf], 1
test dl, 0x10
je off.b362
mov byte[esp+0xf], 0
test cl, 0x20
je off.b377
mov byte[esp+0x10], 1
test dl, 0x20
je off.b382
mov byte[esp+0x10], 0
cmp byte[esp+0x11], 0
je off.b459
cmp byte[esp+0xc], 0
jne off.b545
cmp byte[esp+0xe], 0
je off.b448
cmp byte[esp+0x2c], 0
je off.b448
cmp dword[0x4c7f18], 2
je off.b448
movzx eax, byte[0x4c2385]
push esi
push 0
push 0
push 0
push eax
push 2
call fcn.0040f3b0
add esp, 0x18
push esi
push 0
push 0
push 0
push 0x5b
jmp off.b535
test al, al
jne off.b545
test dl, 0x40
je off.b545
test bl, bl
je off.b497
movzx ecx, byte[0x4c2385]
push esi
push 0
push 0
push 0
push ecx
push 0
call fcn.0040f3b0
add esp, 0x18
push esi
push 0
push 0
push 0
push 0x5b
push 0
call fcn.0040f3b0
add esp, 0x18
test bl, bl
je off.b545
movzx edx, byte[0x4c2385]
push esi
push 0
push 0
push 0
push edx
push 1
call fcn.0040f3b0
add esp, 0x18
cmp byte[esp+0x12], 0
je off.b622
cmp byte[esp+0xc], 0
jne off.b713
cmp byte[esp+0xe], 0
je off.b611
cmp byte[esp+0x2c], 0
je off.b611
cmp dword[0x4c7f18], 2
je off.b611
movzx eax, byte[0x4c2385]
push esi
push 0
push 0
push 0
push eax
push 2
call fcn.0040f3b0
add esp, 0x18
push esi
push 0
push 0
push 0
push 0x5c
jmp off.b703
cmp byte[esp+0x15], 0
jne off.b713
test byte[esp+0x1c], 0x80
je off.b713
test bl, bl
je off.b665
movzx ecx, byte[0x4c2385]
push esi
push 0
push 0
push 0
push ecx
push 0
call fcn.0040f3b0
add esp, 0x18
push esi
push 0
push 0
push 0
push 0x5c
push 0
call fcn.0040f3b0
add esp, 0x18
test bl, bl
je off.b713
movzx edx, byte[0x4c2385]
push esi
push 0
push 0
push 0
push edx
push 1
call fcn.0040f3b0
add esp, 0x18
cmp byte[esp+0xb], 0
je off.b778
cmp byte[esp+0xf], 0
je off.b749
push esi
push 0
push 0
push 0
push 0xa0
push 1
call fcn.0040f3b0
add esp, 0x18
cmp byte[esp+0x10], 0
je off.b778
push esi
push 0
push 0
push 0
push 0xa1
push 1
call fcn.0040f3b0
add esp, 0x18
cmp byte[esp+0x13], 0
je off.b902
cmp byte[esp+0xd], 0
jne off.b853
cmp byte[esp+9], 0
je off.b831
cmp byte[esp+0x2c], 0
je off.b831
movzx eax, byte[0x4c2385]
push esi
push 0
push 0
push 0
push eax
push 2
call fcn.0040f3b0
add esp, 0x18
push esi
push 0
push 0
push 0
push 0xa4
push 1
call fcn.0040f3b0
add esp, 0x18
mov bl, byte[esp+0x1c]
cmp byte[esp+0x14], 0
je off.b1091
cmp byte[esp+0xd], 0
je off.b1009
cmp dword[0x4c53f0], 3
jne off.b1272
and byte[esp+0x20], 0xfe
jmp off.b1064
cmp byte[esp+0x16], 0
mov bl, byte[esp+0x1c]
jne off.b857
test bl, 4
je off.b857
cmp byte[esp+0xa], 0
je off.b950
movzx ecx, byte[0x4c2385]
push esi
push 0
push 0
push 0
push ecx
push 0
call fcn.0040f3b0
add esp, 0x18
push esi
push 0
push 0
push 0
push 0xa4
push 0
call fcn.0040f3b0
add esp, 0x18
cmp byte[esp+0xa], 0
je off.b857
movzx edx, byte[0x4c2385]
push esi
push 0
push 0
push 0
push edx
push 1
call fcn.0040f3b0
add esp, 0x18
jmp off.b857
cmp dword[0x4c53f0], 3
jne off.b1025
and byte[esp+0x20], 0xfe
jmp off.b1064
cmp byte[esp+9], 0
je off.b1064
cmp byte[esp+0x2c], 0
je off.b1064
movzx eax, byte[0x4c2385]
push esi
push 0
push 0
push 0
push eax
push 2
call fcn.0040f3b0
add esp, 0x18
push esi
push 0
push 0
push 0
push 0xa5
push 1
call fcn.0040f3b0
add esp, 0x18
jmp off.b1272
cmp byte[esp+0x17], 0
jne off.b1272
test bl, 8
je off.b1272
cmp byte[esp+0xa], 0
je off.b1195
cmp dword[0x4c53f0], 3
je off.b1204
movzx ecx, byte[0x4c2385]
push esi
push 0
push 0
push 0
push ecx
push 0
call fcn.0040f3b0
push esi
push 0
push 0
push 0
push 0xa5
push 0
call fcn.0040f3b0
movzx edx, byte[0x4c2385]
push esi
push 0
push 0
push 0
push edx
push 1
call fcn.0040f3b0
add esp, 0x48
jmp off.b1272
cmp dword[0x4c53f0], 3
jne off.b1233
test byte[esp+0x20], 1
je off.b1233
push esi
push 0
push 0
push 0
push 0xa2
push 1
call fcn.0040f3b0
add esp, 0x18
push esi
push 0
push 0
push 0
push 0xa5
push 0
call fcn.0040f3b0
add esp, 0x18
cmp dword[0x4c53f0], 3
jne off.b1272
or byte[esp+0x20], 1
or bl, 1
mov al, byte[esp+0x20]
and al, 1
je off.b1315
test bl, 1
jne off.b1315
test bl, 8
je off.b1299
cmp dword[0x4c53f0], 3
je off.b1315
push esi
push 0
push 0
push 0
push 0xa2
push 1
jmp off.b1338
test al, al
jne off.b1346
test bl, 1
je off.b1346
push esi
push 0
push 0
push 0
push 0xa2
push 0
call fcn.0040f3b0
add esp, 0x18
mov al, byte[esp+0x20]
and al, 2
je off.b1375
test bl, 2
jne off.b1375
push esi
push 0
push 0
push 0
push 0xa3
push 1
jmp off.b1398
test al, al
jne off.b1406
test bl, 2
je off.b1406
push esi
push 0
push 0
push 0
push 0xa3
push 0
call fcn.0040f3b0
add esp, 0x18
cmp byte[esp+0xf], 0
je off.b1436
cmp byte[esp+0xb], 0
jne off.b1436
push esi
push 0
push 0
push 0
push 0xa0
push 1
jmp off.b1462
test byte[esp+0x20], 0x10
jne off.b1470
test bl, 0x10
je off.b1470
push esi
push 0
push 0
push 0
push 0xa0
push 0
call fcn.0040f3b0
add esp, 0x18
cmp byte[esp+0x10], 0
je off.b1500
cmp byte[esp+0xb], 0
jne off.b1500
push esi
push 0
push 0
push 0
push 0xa1
push 1
jmp off.b1526
test byte[esp+0x20], 0x20
jne off.b1534
test bl, 0x20
je off.b1534
push esi
push 0
push 0
push 0
push 0xa1
push 0
call fcn.0040f3b0
add esp, 0x18
cmp byte[esp+0xc], 0
pop ebx
je off.b1594
cmp byte[esp+0xd], 0
je off.b1568
push esi
push 0
push 0
push 0
push 0x5b
push 1
call fcn.0040f3b0
add esp, 0x18
cmp byte[esp+0xe], 0
je off.b1594
push esi
push 0
push 0
push 0
push 0x5c
push 1
call fcn.0040f3b0
add esp, 0x18
cmp byte[esp+9], 0
je off.b1668
cmp byte[esp+0xf], 0
je off.b1630
push esi
push 0
push 0
push 0
push 0xa4
push 1
call fcn.0040f3b0
add esp, 0x18
cmp byte[esp+0x10], 0
je off.b1668
cmp dword[0x4c53f0], 3
je off.b1668
push esi
push 0
push 0
push 0
push 0xa5
push 1
call fcn.0040f3b0
add esp, 0x18
cmp dword[0x4c7f18], 2
jne off.b1687
mov eax, dword[0x4c28ec]
mov eax, dword[eax+0x68]
jmp off.b1696
mov ecx, dword[0x4c28ec]
mov eax, dword[ecx+0x64]
cmp eax, 0xffffffff
jle off.b1715
push eax
call fcn.00410e40
add esp, 4
pop ebp
add esp, 0x10
ret
test ebp, ebp
je off.b1783
cmp dword[0x4c65e8], 0
je off.b1734
push 1
push 0
jmp off.b1755
push 0
push ebp
call dword[sym.imp.USER32.dll_GetWindowThreadProcessId]
cmp eax, dword[0x4c85cc]
jne off.b1783
push 1
push 0xffffffffffffffff
mov dword[0x4c28b4], 0
call fcn.00401340
mov dword[0x4c28b4], 1
add esp, 8
pop ebp
add esp, 0x10
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f