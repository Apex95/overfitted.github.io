---
layout: post
title:  "fcn.100f2469 @ e5d49e0823e602f2ee948ac39d32c1eb"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.100f2469
- **Origin (md5):** e5d49e0823e602f2ee948ac39d32c1eb
- **VirusTotal:** [virustotal.com/gui/file/e5d49e0823e602f2ee948ac39d32c1eb][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Behaviour Tags
<span class="bhv-tag" id="CREATES_SOCKET_LISTENER">CREATES_SOCKET_LISTENER / 0.02369729665281096</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-69.14939880371094, -51.79664611816406, '<b><a href="/report/fcn.100f2469@e5d49e0823e602f2ee948ac39d32c1eb">fcn.100f2469</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'point { fill-color: #e0440e; }'],
[-179.36868286132812, -46.02693176269531, '<b><a href="/report/fcn.1004e6c9@e5d49e0823e602f2ee948ac39d32c1eb">fcn.1004e6c9</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],
[15.665722846984863, 13.167147636413574, '<b><a href="/report/fcn.004de230@9c2b894b84f59672d8be2e984066f76f">fcn.004de230</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'null'],
[-17.381437301635742, -73.63833618164062, '<b><a href="/report/fcn.100fd824@e5d49e0823e602f2ee948ac39d32c1eb">fcn.100fd824</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],
[-182.1854705810547, -101.34806823730469, '<b><a href="/report/fcn.004a254c@9c2b894b84f59672d8be2e984066f76f">fcn.004a254c</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'null'],
[-24.263187408447266, -17.945817947387695, '<b><a href="/report/fcn.004dc17d@9c2b894b84f59672d8be2e984066f76f">fcn.004dc17d</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'null'],
[-129.97486877441406, -67.19715881347656, '<b><a href="/report/fcn.100f19bc@e5d49e0823e602f2ee948ac39d32c1eb">fcn.100f19bc</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],
[63.43102264404297, -16.398460388183594, '<b><a href="/report/fcn.1005a9a5@e5d49e0823e602f2ee948ac39d32c1eb">fcn.1005a9a5</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],
[35.644046783447266, -58.6268424987793, '<b><a href="/report/fcn.1007fdf4@e5d49e0823e602f2ee948ac39d32c1eb">fcn.1007fdf4</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],
[-50.59020233154297, 13.013822555541992, '<b><a href="/report/fcn.100c8626@e5d49e0823e602f2ee948ac39d32c1eb">fcn.100c8626</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],
[-108.21873474121094, -103.20333099365234, '<b><a href="/report/fcn.004f8e89@9c2b894b84f59672d8be2e984066f76f">fcn.004f8e89</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
sub esp, 0x80
mov eax, dword[0x1019a040]
xor eax, ebp
mov dword[ebp-4], eax
push ebx
mov ebx, ecx
push esi
mov esi, dword[ebp+8]
push edi
mov ecx, dword[ebx+0x1c]
mov dword[ebp-0x60], esi
mov eax, dword[ecx]
call dword[eax+0x74]
push 0x1019987c
mov ecx, eax
mov dword[ebp-0x6c], eax
call fcn.100090e1
xor ecx, ecx
test eax, eax
lea eax, [esi+0x1d4]
sete cl
mov dword[ebp-0x58], eax
mov dword[ebp-0x70], ecx
push ecx
mov ecx, eax
call fcn.101085df
mov esi, eax
lea edi, [ebp-0x24]
lea eax, [ebp-0x14]
push eax
movsd dword
movsd dword
movsd dword
movsd dword
mov edi, dword[sym.imp.USER32.dll_SetRectEmpty]
xor esi, esi
mov dword[ebp-0x14], esi
mov dword[ebp-0x10], esi
mov dword[ebp-0xc], esi
mov dword[ebp-8], esi
call edi
mov eax, dword[ebx]
lea ecx, [ebp-0x14]
push esi
push ecx
mov ecx, ebx
call dword[eax+0xc]
mov ecx, dword[ebp-0x6c]
lea eax, [ebp-0x14]
push eax
call fcn.10017fb2
mov ecx, ebx
call fcn.100f3cf2
mov esi, dword[ebx+0x18]
mov dword[ebp-0x78], eax
mov dword[ebp-0x74], esi
test esi, esi
je 0x100f251d
mov ecx, esi
call fcn.100f3cf2
test eax, eax
je 0x100f251a
mov esi, dword[esi+0x18]
test esi, esi
jne 0x100f2508
mov dword[ebp-0x74], esi
xor eax, eax
mov dword[ebp-0x54], eax
mov dword[ebp-0x50], eax
mov dword[ebp-0x4c], eax
mov dword[ebp-0x48], eax
lea eax, [ebp-0x54]
push eax
call edi
test esi, esi
je 0x100f254e
mov eax, dword[esi]
lea ecx, [ebp-0x54]
push 0
push ecx
mov ecx, esi
call dword[eax+0xc]
mov ecx, dword[ebp-0x6c]
lea eax, [ebp-0x54]
push eax
call fcn.10017fb2
mov esi, dword[ebp-0xc]
sub esi, dword[ebp-0x14]
mov dword[ebp-0x64], esi
test esi, esi
jg 0x100f2564
mov esi, dword[ebp-0x4c]
sub esi, dword[ebp-0x54]
mov dword[ebp-0x64], esi
mov edi, dword[ebp-8]
sub edi, dword[ebp-0x10]
mov dword[ebp-0x68], edi
test edi, edi
jg 0x100f257a
mov edi, dword[ebp-0x48]
sub edi, dword[ebp-0x50]
mov dword[ebp-0x68], edi
test esi, esi
jne 0x100f2587
mov esi, dword[ebp-0x1c]
sub esi, dword[ebp-0x24]
mov dword[ebp-0x64], esi
test edi, edi
jne 0x100f2594
mov edi, dword[ebp-0x18]
sub edi, dword[ebp-0x20]
mov dword[ebp-0x68], edi
lea eax, [ebp-0x14]
push eax
call dword[sym.imp.USER32.dll_IsRectEmpty]
test eax, eax
jne 0x100f25ad
mov eax, dword[ebp-0x14]
mov dword[ebp-0x24], eax
mov eax, dword[ebp-0x10]
jmp 0x100f25c4
lea eax, [ebp-0x54]
push eax
call dword[sym.imp.USER32.dll_IsRectEmpty]
test eax, eax
jne 0x100f25c7
mov eax, dword[ebp-0x54]
mov dword[ebp-0x24], eax
mov eax, dword[ebp-0x50]
mov dword[ebp-0x20], eax
mov ecx, dword[ebp-0x60]
lea edx, [ebp-0x80]
and dword[ebp-0x80], 0
and dword[ebp-0x7c], 0
push edx
mov eax, dword[ecx]
call dword[eax+0x26c]
mov eax, dword[ebp-0x80]
cmp esi, eax
jge 0x100f25e8
mov dword[ebp-0x64], eax
mov eax, dword[ebp-0x7c]
cmp edi, eax
jge 0x100f25f2
mov dword[ebp-0x68], eax
mov esi, dword[ebp-0x70]
mov ecx, dword[ebp-0x58]
push esi
call fcn.101085c7
mov edi, eax
push 0x64
pop eax
cmp edi, eax
je 0x100f260b
test edi, edi
jne 0x100f260e
push 0x32
pop edi
mov ecx, ebx
call fcn.100f3cf2
test eax, eax
jne 0x100f2655
cmp dword[ebx+0xc], eax
je 0x100f2655
mov ecx, ebx
call fcn.100f3d8d
mov ecx, dword[ebp-0x58]
push esi
test eax, eax
je 0x100f26fd
call fcn.10108698
push 0x64
test eax, eax
je 0x100f26cc
mov eax, dword[ebp-8]
mov ecx, dword[ebp-0x10]
sub eax, ecx
imul eax, edi
pop esi
mov dword[ebp-0x20], ecx
cdq
idiv esi
mov dword[ebp-0x68], eax
mov edx, dword[ebp-0x64]
mov eax, dword[ebp-0x20]
add eax, dword[ebp-0x68]
mov dword[ebp-0x18], eax
mov eax, dword[ebp-0x24]
add eax, edx
push 0xa
mov dword[ebp-0x1c], eax
call dword[sym.imp.USER32.dll_BeginDeferWindowPos]
mov ecx, dword[ebp-0x60]
push eax
mov dword[ebp-0x5c], eax
lea eax, [ebp-0x24]
push 0
mov edx, dword[ecx]
push eax
call dword[edx+0x230]
push dword[ebp-0x70]
mov ecx, dword[ebp-0x58]
lea esi, [ebp-0x24]
lea edi, [ebp-0x34]
mov dword[ebp-0x5c], eax
movsd dword
movsd dword
movsd dword
movsd dword
xor esi, esi
mov dword[ebp-0x44], esi
mov dword[ebp-0x40], esi
mov dword[ebp-0x3c], esi
mov dword[ebp-0x38], esi
call fcn.10108698
test eax, eax
je 0x100f2846
mov ecx, dword[ebx+0x10]
test ecx, ecx
je 0x100f2755
push dword[ebp-0x60]
call fcn.100f2469
jmp 0x100f2add
mov esi, dword[ebp-8]
mov eax, esi
sub eax, dword[ebp-0x10]
pop ecx
sub ecx, edi
imul eax, ecx
push 0x64
pop ecx
cdq
idiv ecx
mov edx, esi
sub edx, eax
mov eax, dword[ebx+0xc]
sub edx, dword[eax+0x108]
sub edx, dword[ebp-0x10]
sub esi, edx
mov dword[ebp-0x68], edx
mov dword[ebp-0x20], esi
jmp 0x100f2655
call fcn.10108698
push 0x64
test eax, eax
je 0x100f2724
mov eax, dword[ebp-0xc]
mov ecx, dword[ebp-0x14]
sub eax, ecx
imul eax, edi
pop esi
mov dword[ebp-0x24], ecx
cdq
idiv esi
mov edx, eax
mov dword[ebp-0x64], edx
jmp 0x100f2658
mov esi, dword[ebp-0xc]
mov eax, esi
sub eax, dword[ebp-0x14]
pop ecx
sub ecx, edi
imul eax, ecx
push 0x64
pop ecx
cdq
idiv ecx
mov edx, esi
sub edx, eax
mov eax, dword[ebx+0xc]
sub edx, dword[eax+0x108]
sub edx, dword[ebp-0x14]
sub esi, edx
mov dword[ebp-0x64], edx
mov dword[ebp-0x24], esi
jmp 0x100f2658
cmp dword[ebx+4], esi
je 0x100f27a2
mov ecx, dword[ebp-0x60]
lea edx, [ebp-0x58]
push edx
push 1
push 2
mov eax, dword[ecx]
push dword[ebx+4]
mov dword[ebp-0x58], esi
call dword[eax+0x348]
mov edx, dword[ebp-0x58]
test edx, edx
je 0x100f279b
mov ecx, dword[ebx+0x1c]
push edx
cmp dword[ebx+4], esi
je 0x100f2790
push dword[ebx+4]
mov eax, dword[ecx]
call dword[eax+0x40]
mov edx, dword[ebp-0x58]
jmp 0x100f279b
call fcn.100f76b4
mov edx, dword[ebp-0x58]
mov dword[ebx+4], edx
mov eax, edx
jmp 0x100f2add
mov eax, dword[ebx+8]
xor edi, edi
mov esi, dword[ebp-0x60]
inc edi
mov dword[ebx+4], esi
mov dword[ebp-0x70], edi
test eax, eax
jne 0x100f27bf
cmp dword[ebx+0x14], eax
jne 0x100f27bf
and dword[ebp-0x58], eax
jmp 0x100f27c2
mov dword[ebp-0x58], edi
test eax, eax
je 0x100f27d5
lea ecx, [ebp-0x44]
push ecx
push dword[eax+0x20]
call dword[sym.imp.USER32.dll_GetWindowRect]
jmp 0x100f27e7
mov ecx, dword[ebx+0x14]
test ecx, ecx
je 0x100f27e7
mov eax, dword[ecx]
lea edx, [ebp-0x44]
push 0
push edx
call dword[eax+0xc]
mov edi, dword[ebp-0x6c]
lea eax, [ebp-0x44]
push eax
mov ecx, edi
call fcn.10017fb2
cmp dword[ebx+0xc], 0
je 0x100f2833
mov ecx, ebx
call fcn.100f3d8d
test eax, eax
mov eax, dword[ebx+0xc]
je 0x100f281f
mov ecx, dword[ebp-0x18]
mov dword[ebp-0x30], ecx
mov eax, dword[eax+0x108]
add eax, ecx
mov dword[ebp-0x28], eax
mov dword[ebp-0x40], eax
jmp 0x100f2833
mov ecx, dword[ebp-0x1c]
mov dword[ebp-0x34], ecx
mov eax, dword[eax+0x108]
add eax, ecx
mov dword[ebp-0x2c], eax
mov dword[ebp-0x44], eax
mov ecx, dword[ebx+8]
test ecx, ecx
jne 0x100f2932
mov ecx, dword[ebx+0x14]
jmp 0x100f294b
mov eax, dword[ebx+0x14]
test eax, eax
je 0x100f2854
mov ecx, eax
jmp 0x100f26bf
cmp dword[ebx+8], esi
je 0x100f289e
mov ecx, dword[ebp-0x60]
lea edx, [ebp-0x58]
push edx
push 1
push 2
mov eax, dword[ecx]
push dword[ebx+8]
mov dword[ebp-0x58], esi
call dword[eax+0x348]
mov edx, dword[ebp-0x58]
test edx, edx
je 0x100f279b
mov ecx, dword[ebx+0x1c]
push edx
cmp dword[ebx+8], esi
je 0x100f288e
push dword[ebx+8]
jmp 0x100f2786
call fcn.100f76b4
mov edx, dword[ebp-0x58]
mov dword[ebx+8], edx
jmp 0x100f279b
mov eax, dword[ebx+4]
xor edi, edi
mov esi, dword[ebp-0x60]
inc edi
mov dword[ebx+8], esi
mov dword[ebp-0x70], edi
test eax, eax
jne 0x100f28bb
cmp dword[ebx+0x10], eax
jne 0x100f28bb
and dword[ebp-0x58], eax
jmp 0x100f28be
mov dword[ebp-0x58], edi
test eax, eax
je 0x100f28d1
lea ecx, [ebp-0x44]
push ecx
push dword[eax+0x20]
call dword[sym.imp.USER32.dll_GetWindowRect]
jmp 0x100f28e3
mov ecx, dword[ebx+0x10]
test ecx, ecx
je 0x100f28e3
mov eax, dword[ecx]
lea edx, [ebp-0x44]
push 0
push edx
call dword[eax+0xc]
mov edi, dword[ebp-0x6c]
lea eax, [ebp-0x44]
push eax
mov ecx, edi
call fcn.10017fb2
cmp dword[ebx+0xc], 0
je 0x100f292b
mov ecx, ebx
call fcn.100f3d8d
test eax, eax
mov eax, dword[ebx+0xc]
je 0x100f2919
mov ecx, dword[ebp-0x20]
mov dword[ebp-0x28], ecx
sub ecx, dword[eax+0x108]
mov dword[ebp-0x30], ecx
mov dword[ebp-0x38], ecx
jmp 0x100f292b
mov ecx, dword[ebp-0x24]
mov dword[ebp-0x2c], ecx
sub ecx, dword[eax+0x108]
mov dword[ebp-0x34], ecx
mov dword[ebp-0x3c], ecx
mov ecx, dword[ebx+4]
test ecx, ecx
je 0x100f2948
push dword[ebp-0x5c]
mov eax, dword[ecx]
lea edx, [ebp-0x44]
push 0
push edx
call dword[eax+0x230]
mov dword[ebp-0x5c], eax
jmp 0x100f296c
mov ecx, dword[ebx+0x10]
test ecx, ecx
je 0x100f296c
mov eax, dword[ecx]
lea edx, [ebp-0x5c]
push 0
push edx
sub esp, 0x10
lea esi, [ebp-0x44]
mov edi, esp
movsd dword
movsd dword
movsd dword
movsd dword
call dword[eax+0x48]
mov edi, dword[ebp-0x6c]
mov esi, dword[ebp-0x60]
mov ecx, dword[ebx+0xc]
test ecx, ecx
je 0x100f2996
cmp dword[ebp-0x58], 0
je 0x100f298f
push dword[ebp-0x5c]
mov eax, dword[ecx]
lea edx, [ebp-0x34]
push 0
push edx
call dword[eax+0x230]
mov dword[ebp-0x5c], eax
jmp 0x100f2996
push 0
call fcn.100f69d2
lea eax, [ebp-0x44]
push eax
lea eax, [ebp-0x24]
push eax
lea eax, [ebp-0x14]
push eax
call dword[sym.imp.USER32.dll_UnionRect]
lea eax, [ebp-0x14]
mov ecx, edi
push eax
call fcn.10017a61
cmp dword[ebp-0x78], 0
je 0x100f2ad1
mov eax, dword[ebp-0x74]
test eax, eax
je 0x100f2ad1
mov edi, dword[eax+0xc]
test edi, edi
je 0x100f2ad1
mov ecx, dword[eax+0x10]
mov eax, dword[eax+0x14]
mov dword[ebp-0x78], eax
test ecx, ecx
je 0x100f29ef
push 3
push ebx
call fcn.100f355d
test eax, eax
jne 0x100f2a0d
mov eax, dword[ebp-0x78]
test eax, eax
je 0x100f2af0
push 3
push ebx
mov ecx, eax
call fcn.100f355d
test eax, eax
je 0x100f2af0
and dword[ebp-0x70], 0
lea eax, [ebp-0x34]
push eax
push dword[edi+0x20]
call dword[sym.imp.USER32.dll_GetWindowRect]
mov eax, dword[edi]
mov ecx, edi
mov esi, dword[edi+0x108]
call dword[eax+0x160]
cmp dword[ebp-0x70], 0
je 0x100f2a60
test eax, eax
je 0x100f2a4a
mov ecx, dword[ebp-8]
add esi, dword[ebp-0x68]
mov dword[ebp-0x30], ecx
mov eax, dword[edi+0x108]
add eax, ecx
mov dword[ebp-0x28], eax
jmp 0x100f2a94
mov ecx, dword[ebp-0xc]
add esi, dword[ebp-0x64]
mov dword[ebp-0x34], ecx
mov eax, dword[edi+0x108]
add eax, ecx
mov dword[ebp-0x2c], eax
jmp 0x100f2a94
mov esi, dword[edi+0x108]
test eax, eax
je 0x100f2a80
add esi, dword[ebp-0x68]
mov eax, dword[ebp-0x10]
neg esi
mov dword[ebp-0x28], eax
sub eax, dword[edi+0x108]
mov dword[ebp-0x30], eax
jmp 0x100f2a94
add esi, dword[ebp-0x64]
mov eax, dword[ebp-0x14]
neg esi
mov dword[ebp-0x2c], eax
sub eax, dword[edi+0x108]
mov dword[ebp-0x34], eax
mov ecx, dword[ebp-0x6c]
lea eax, [ebp-0x34]
push eax
call fcn.10017fb2
mov ecx, dword[ebx+0xc]
test ecx, ecx
je 0x100f2abb
push dword[ebp-0x5c]
mov eax, dword[ecx]
lea edx, [ebp-0x34]
push 0
push edx
call dword[eax+0x230]
mov dword[ebp-0x5c], eax
mov ecx, dword[ebp-0x74]
lea eax, [ebp-0x5c]
push eax
xor eax, eax
cmp dword[ebp-0x70], eax
mov edx, dword[ecx]
sete al
push eax
push esi
call dword[edx+0x4c]
push dword[ebp-0x5c]
call dword[sym.imp.USER32.dll_EndDeferWindowPos]
mov eax, dword[ebp-0x60]
mov ecx, dword[ebp-4]
pop edi
pop esi
xor ecx, ebp
pop ebx
call fcn.10121853
mov esp, ebp
pop ebp
ret 4
mov eax, esi
jmp 0x100f2add

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/e5d49e0823e602f2ee948ac39d32c1eb