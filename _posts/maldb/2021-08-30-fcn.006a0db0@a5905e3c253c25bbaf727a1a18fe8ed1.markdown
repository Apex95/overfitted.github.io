---
layout: post
title:  "fcn.006a0db0 @ a5905e3c253c25bbaf727a1a18fe8ed1"
date:   2021-08-30 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.006a0db0
- **Origin (md5):** a5905e3c253c25bbaf727a1a18fe8ed1
- **VirusTotal:** [virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1][virustotal_ref]

# Code Tags
<span class="tag" id="THREAD">THREAD</span>


# Similar Functions

1. [fcn.00579b00][similar_1_ref] (sim.: 0.9755090120374265)
2. [fcn.00680030][similar_2_ref] (sim.: 0.9636404128748872)
3. [fcn.00617220][similar_3_ref] (sim.: 0.963400998143324)
4. [fcn.005ba960][similar_4_ref] (sim.: 0.9626771688460319)
5. [fcn.005c8fa0][similar_5_ref] (sim.: 0.9617241368986232)


# Disassembled Code

{% highlight nasm %}
push r15
push r14
push r13
push r12
push rbp
push rdi
push rsi
push rbx
sub rsp,0x128
mov eax,dword[rcx]
mov rdi,rcx
mov r13,rdx
lea r15,[rdx+0x68]
test al,4
jne 0x6a1175
test al,8
jne 0x6a1295
test al,0x10
jne 0x6a12b4
mov rbx,qword[rdi+0x28]
mov rbp,qword[rdi+0x30]
cmp rbp,rbx
je 0x6a1445
lea rax,[rsp+0xe0]
lea rsi,[rsp+0x60]
lea r12,[rsp+0xa0]
mov qword[rsp+0x40],rax
lea rax,[rsp+0xf0]
mov qword[rsp+0x30],rax
lea rax,[rsp+0x58]
mov qword[rsp+0x48],rax
lea rax,[rsp+0x80]
mov qword[rsp+0x38],rax
lea rax,[rsp+0x90]
mov qword[rsp+0x28],rax
jmp 0x6a0ea2
jb 0x6a0fd0
cmp eax,2
je 0x6a0f30
cmp eax,3
jne 0x6a0e6f
mov rax,qword[r13+0xe0]
mov rcx,rsi
lea rdx,[rax+0x2e0]
call fcn.00a2df10
mov rdx,rsi
mov rcx,rbx
call fcn.00679760
test al,al
mov rcx,qword[rsp+0x60]
je 0x6a1450
lea rax,[rsi+0x10]
cmp rcx,rax
je 0x6a0e95
call fcn.00a5af30
add rbx,0x50
cmp rbp,rbx
je 0x6a1445
lea rax,[rsi+0x10]
mov byte[rsp+0x70],0
mov qword[rsp+0x68],0
mov qword[rsp+0x60],rax
mov eax,dword[rbx+0x48]
cmp eax,1
jne 0x6a0e45
mov rax,qword[r13+0x70]
mov r8,qword[rsp+0x40]
mov edx,0x18
mov qword[rsp+0xe8],0
mov byte[rsp+0xf0],0
lea rcx,[rax+8]
mov rax,qword[rsp+0x30]
mov qword[rsp+0xe0],rax
call fcn.005f3590
lea rdx,[r12+0x10]
mov rdi,qword[rax+8]
mov qword[rsp+0xa0],rdx
mov r14,qword[rax]
mov rax,r14
add rax,rdi
je 0x6a1061
test r14,r14
jne 0x6a1061
lea rcx,[0x00ab9810]
call fcn.00a4f4e0
nop
lea rdi,[rsp+0xc0]
mov rdx,r15
mov rcx,rdi
call fcn.00692ac0
mov rdx,qword[rsp+0xc0]
lea rcx,[rdi+0x10]
mov rax,qword[rsp+0x60]
cmp rdx,rcx
je 0x6a1520
lea rcx,[rsi+0x10]
cmp rax,rcx
je 0x6a13f5
movdqu xmm0,xmmword[rsp+0xc8]
test rax,rax
mov rcx,qword[rsp+0x70]
mov qword[rsp+0x60],rdx
movups xmmword[rsp+0x68],xmm0
je 0x6a1408
mov qword[rsp+0xc0],rax
mov qword[rsp+0xd0],rcx
mov qword[rsp+0xc8],0
mov byte[rax],0
add rdi,0x10
mov rcx,qword[rsp+0xc0]
cmp rcx,rdi
je 0x6a0e6f
call fcn.00a5af30
jmp 0x6a0e6f
mov rcx,qword[rsp+0x38]
lea r8,[0x00ab9882]
mov rdx,r15
call fcn.00692960
mov rdx,qword[rsp+0x80]
cmp rdx,qword[rsp+0x28]
mov rax,qword[rsp+0x60]
je 0x6a1500
lea rcx,[rsi+0x10]
cmp rax,rcx
je 0x6a1420
movdqu xmm0,xmmword[rsp+0x88]
test rax,rax
mov rcx,qword[rsp+0x70]
mov qword[rsp+0x60],rdx
movups xmmword[rsp+0x68],xmm0
je 0x6a1433
mov qword[rsp+0x80],rax
mov qword[rsp+0x90],rcx
mov qword[rsp+0x88],0
mov byte[rax],0
mov rcx,qword[rsp+0x80]
cmp rcx,qword[rsp+0x28]
jne 0x6a0fbf
jmp 0x6a0e6f
cmp rdi,0xf
mov qword[rsp+0x58],rdi
ja 0x6a1130
cmp rdi,1
je 0x6a1300
test rdi,rdi
lea rax,[r12+0x10]
jne 0x6a1591
mov qword[rsp+0xa8],rdi
mov byte[rax+rdi],0
mov rcx,qword[rsp+0xe0]
cmp rcx,qword[rsp+0x30]
je 0x6a10a8
call fcn.00a5af30
mov rdx,qword[rsp+0xa0]
lea rcx,[r12+0x10]
mov rax,qword[rsp+0x60]
cmp rdx,rcx
je 0x6a1540
lea rcx,[rsi+0x10]
cmp rax,rcx
je 0x6a13d0
movdqu xmm0,xmmword[rsp+0xa8]
test rax,rax
mov rcx,qword[rsp+0x70]
mov qword[rsp+0x60],rdx
movups xmmword[rsp+0x68],xmm0
je 0x6a13e3
mov qword[rsp+0xa0],rax
mov qword[rsp+0xb0],rcx
mov qword[rsp+0xa8],0
mov byte[rax],0
lea rax,[r12+0x10]
mov rcx,qword[rsp+0xa0]
cmp rcx,rax
jne 0x6a0fbf
jmp 0x6a0e6f
mov rdx,qword[rsp+0x48]
xor r8d,r8d
mov rcx,r12
call fcn.00a2dfc0
mov rcx,rax
mov qword[rsp+0xa0],rax
mov rax,qword[rsp+0x58]
mov qword[rsp+0xb0],rax
mov r8,rdi
mov rdx,r14
call sub.msvcrt.dll_memcpy
mov rdi,qword[rsp+0x58]
mov rax,qword[rsp+0xa0]
jmp 0x6a1088
mov rbp,qword[0x00a7d7f0]
cmp rbp,0xfffffffffffffed0
je 0x6a1847
call qword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
mov ebx,eax
lea rax,[rbp+0x134]
mov rsi,rax
mov qword[rsp+0x30],rax
xor eax,eax
lock cmpxchg dword[rsi],eax
cmp ebx,eax
je 0x6a1341
lea r14,[rbp+0x138]
mov esi,dword[rbp+0x138]
jmp 0x6a11c2
mov esi,eax
mov edx,esi
mov r8d,esi
mov rcx,r14
or edx,0x80000000
call fcn.008eebc0
cmp esi,eax
jne 0x6a11c0
test esi,esi
js 0x6a1599
mov rax,qword[rsp+0x30]
xchg dword[rax],ebx
mov r8,qword[r13+0x70]
mov rsi,qword[rbp+0x100]
xor edx,edx
mov dword[rbp+0x130],1
mov r12,qword[r8+8]
mov rax,r12
div rsi
mov rax,qword[rbp+0xf8]
mov rax,qword[rax+rdx*8]
mov r10,rdx
test rax,rax
je 0x6a1688
xor r14d,r14d
mov rbx,qword[rax]
lea rax,[r8+8]
mov qword[rsp+0x178],r13
mov r13,rdi
mov rdi,r10
mov qword[rsp+0x28],rax
mov rcx,qword[rbx+0x98]
cmp rcx,r12
je 0x6a1315
mov rbx,qword[rbx]
test rbx,rbx
je 0x6a1269
mov rcx,qword[rbx+0x98]
xor edx,edx
mov rax,rcx
div rsi
cmp rdx,rdi
je 0x6a1244
mov rdi,r13
mov r13,qword[rsp+0x178]
xor ebx,ebx
test r14d,r14d
mov dword[rbp+0x130],r14d
je 0x6a1470
test rbx,rbx
je 0x6a12e0
mov eax,dword[rdi]
test al,8
je 0x6a0ddf
mov edx,4
mov rcx,r15
call fcn.00692eb0
test al,al
je 0x6a1385
mov eax,dword[rdi]
test al,0x10
je 0x6a0de7
mov edx,1
mov rcx,r15
call fcn.00692eb0
test al,al
jne 0x6a0de7
lea rdx,[0x00ab987f]
mov rcx,r15
call fcn.00693140
test al,al
jne 0x6a0de7
xor eax,eax
add rsp,0x128
pop rbx
pop rsi
pop rdi
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
movzx eax,byte[r14]
mov byte[rsp+0xb0],al
lea rax,[r12+0x10]
jmp 0x6a1088
mov rcx,qword[rsp+0x28]
lea rdx,[rbx+8]
mov r8d,0x18
call sub.msvcrt.dll_memcmp
test eax,eax
jne 0x6a124d
mov rdi,r13
mov r13,qword[rsp+0x178]
jmp 0x6a1276
mov r14d,dword[rbp+0x130]
mov r8,qword[r13+0x70]
xor edx,edx
mov rsi,qword[rbp+0x100]
lea eax,[r14+1]
mov dword[rbp+0x130],eax
mov r12,qword[r8+8]
mov rax,r12
div rsi
mov rax,qword[rbp+0xf8]
mov rax,qword[rax+rdx*8]
mov r10,rdx
test rax,rax
jne 0x6a1223
jmp 0x6a1274
mov edx,8
mov rcx,r15
call fcn.00692eb0
test al,al
jne 0x6a12aa
mov edx,0x10
mov rcx,r15
call fcn.00692eb0
test al,al
jne 0x6a12aa
lea rdx,[0x00ab987c]
mov rcx,r15
call fcn.00693140
test al,al
je 0x6a12e0
mov eax,dword[rdi]
jmp 0x6a12ac
movdqu xmm0,xmmword[rsp+0xa8]
mov qword[rsp+0x60],rdx
movups xmmword[rsp+0x68],xmm0
lea rax,[r12+0x10]
mov qword[rsp+0xa0],rax
jmp 0x6a1101
movdqu xmm0,xmmword[rsp+0xc8]
mov qword[rsp+0x60],rdx
movups xmmword[rsp+0x68],xmm0
lea rax,[rdi+0x10]
mov qword[rsp+0xc0],rax
jmp 0x6a0f9b
movdqu xmm0,xmmword[rsp+0x88]
mov qword[rsp+0x60],rdx
movups xmmword[rsp+0x68],xmm0
mov rax,qword[rsp+0x28]
mov qword[rsp+0x80],rax
jmp 0x6a103a
mov eax,1
jmp 0x6a12e2
add rsi,0x10
cmp rcx,rsi
je 0x6a12e2
mov byte[rsp+0x28],al
call fcn.00a5af30
movzx eax,byte[rsp+0x28]
jmp 0x6a12e2
lea r14,[rbp+0x138]
mov rsi,qword[rsp+0x30]
xor eax,eax
xchg dword[rsi],eax
mov eax,0x80000000
lock xadd dword[r14],eax
test eax,0x40000000
jne 0x6a1286
cmp eax,0x80000000
je 0x6a1286
mov esi,dword[rbp+0x138]
jmp 0x6a14b2
mov esi,eax
mov edx,esi
mov r8d,esi
mov rcx,r14
or edx,0x40000000
call fcn.008eebc0
cmp esi,eax
jne 0x6a14b0
and esi,0x40000000
jne 0x6a1286
add rbp,0x140
xor eax,eax
lock cmpxchg qword[rbp],rax
test rax,rax
mov rsi,rax
mov rcx,rax
je 0x6a16f0
call qword[sym.imp.KERNEL32.dll_SetEvent]
jmp 0x6a1286
mov rdx,qword[rsp+0x38]
mov rcx,rsi
call fcn.00a2df10
mov rax,qword[rsp+0x80]
jmp 0x6a103a
mov rdx,rdi
mov rcx,rsi
call fcn.00a2df10
mov rax,qword[rsp+0xc0]
jmp 0x6a0f9b
mov rdx,r12
mov rcx,rsi
call fcn.00a2df10
mov rax,qword[rsp+0xa0]
jmp 0x6a1101
mov rcx,qword[rsp+0x60]
add rsi,0x10
cmp rcx,rsi
je 0x6a1589
call fcn.00a5af30
mov rcx,rbx
call fcn.008da260
mov rcx,rax
jmp 0x6a1158
mov edx,dword[rbp+0x138]
jmp 0x6a15a3
mov edx,eax
lea eax,[rdx+1]
mov esi,edx
or esi,0x80000000
test edx,edx
cmovs esi,eax
mov eax,edx
lock cmpxchg dword[r14],esi
cmp eax,edx
jne 0x6a15a1
mov eax,esi
shr eax,0x1f
test al,al
je 0x6a11e1
shr edx,0x1f
test dl,dl
je 0x6a11e1
lea r11,[rbp+0x140]
xor eax,eax
lock cmpxchg qword[r11],rax
test rax,rax
mov r12,rax
mov qword[rsp+0x28],rax
je 0x6a1699
mov rax,r14
mov r12d,0xffffffff
mov r14,r13
mov r13,rdi
mov edi,ebx
mov rbx,rax
and esi,0x7fffffff
mov edx,r12d
xor r8d,r8d
or esi,0x40000000
mov rcx,qword[rsp+0x28]
call qword[sym.imp.KERNEL32.dll_WaitForSingleObjectEx]
mov edx,esi
nop dword[rax+rax]
test edx,edx
js 0x6a1670
lea ecx,[rdx-1]
mov eax,edx
and ecx,0x3fffffff
or ecx,0x80000000
lock cmpxchg dword[rbx],ecx
cmp edx,eax
mov esi,eax
je 0x6a1653
mov edx,esi
jmp 0x6a1630
mov rax,rbx
mov ebx,edi
mov rdi,r13
mov r13,r14
mov r14,rax
jmp 0x6a11e1
mov ecx,edx
mov eax,edx
and ecx,0xbfffffff
lock cmpxchg dword[rbx],ecx
cmp eax,edx
mov esi,eax
je 0x6a1609
mov edx,esi
jmp 0x6a1630
mov dword[rbp+0x130],0
xor ebx,ebx
jmp 0x6a1477
mov qword[rsp+0x38],r11
xor r9d,r9d
xor r8d,r8d
xor edx,edx
xor ecx,ecx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov qword[rsp+0x28],rax
mov r11,qword[rsp+0x38]
je 0x6a172f
mov rdx,rax
mov rax,r12
lock cmpxchg qword[r11],rdx
test rax,rax
mov r12,rax
je 0x6a15f5
mov rcx,qword[rsp+0x28]
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov qword[rsp+0x28],r12
jmp 0x6a15f5
xor ecx,ecx
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
je 0x6a1798
mov rax,rsi
lock cmpxchg qword[rbp],rcx
test rax,rax
mov rsi,rax
je 0x6a14f3
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rcx,rsi
jmp 0x6a14f3
lea rbx,[rsp+0xe0]
call fcn.006ea660
lea rdx,[0x00ab985f]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0xf0],0xb
mov qword[rsp+0xf8],rsi
mov qword[rsp+0x108],0
mov qword[rsp+0x100],rax
lea rax,[0x00b72480]
mov byte[rsp+0x110],0
mov qword[rsp+0xe0],rax
call fcn.00947760
lea rbx,[rsp+0xe0]
call fcn.006ea660
lea rdx,[0x00ab985f]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0xf0],0xb
mov qword[rsp+0xf8],rsi
mov qword[rsp+0x108],0
mov qword[rsp+0x100],rax
lea rax,[0x00b72480]
mov byte[rsp+0x110],0
mov qword[rsp+0xe0],rax
call fcn.00947760
mov rsi,rax
lea rax,[0x00b72450]
mov rcx,rbx
mov qword[rsp+0xe0],rax
call fcn.00962490
mov rcx,rsi
call fcn.008da260
lea rax,[0x00b72450]
mov rcx,rbx
mov qword[rsp+0xe0],rax
call fcn.00962490
call fcn.00a55e20
mov rbx,rax
jmp 0x6a1576
lea rbx,[rsp+0xe0]
call fcn.006ea660
lea rdx,[0x00ab9840]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0xf0],1
mov qword[rsp+0xf8],rsi
mov qword[rsp+0x108],0
mov qword[rsp+0x100],rax
lea rax,[0x00b714e0]
mov byte[rsp+0x110],0
mov qword[rsp+0xe0],rax
call fcn.009472d0
jmp 0x6a1801
{% endhighlight %}


[similar_1_ref]: /report/fcn.00579b00@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_2_ref]: /report/fcn.00680030@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_3_ref]: /report/fcn.00617220@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_4_ref]: /report/fcn.005ba960@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_5_ref]: /report/fcn.005c8fa0@a5905e3c253c25bbaf727a1a18fe8ed1
[virustotal_ref]: https://www.virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1