---
layout: post
title:  "fcn.005c0710 @ a5905e3c253c25bbaf727a1a18fe8ed1"
date:   2021-08-30 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.005c0710
- **Origin (md5):** a5905e3c253c25bbaf727a1a18fe8ed1
- **VirusTotal:** [virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1][virustotal_ref]

# Code Tags
<span class="tag" id="THREAD">THREAD</span>


# Similar Functions

1. [fcn.00656050][similar_1_ref] (sim.: 0.9654059479991252)
2. [fcn.0054f1a0][similar_2_ref] (sim.: 0.9603091470039754)
3. [fcn.00674c10][similar_3_ref] (sim.: 0.9601006957966497)
4. [fcn.006b9e90][similar_4_ref] (sim.: 0.9590435153223655)
5. [fcn.0069c090][similar_5_ref] (sim.: 0.9577374550870121)


# Disassembled Code

{% highlight nasm %}
push r15
push r14
push r13
push r12
push rbp
push rdi
push rsi
push rbx
sub rsp,0x108
cmp byte[rsp+0x178],0
mov r15d,dword[rsp+0x188]
mov r13,rcx
mov rbp,rdx
mov rsi,r8
mov rbx,r9
mov r12d,dword[rsp+0x180]
mov byte[rsp+0x27],r15b
je 0x5c0885
mov ecx,0xa0
call fcn.00a5af70
xor edx,edx
cmp dword[rsp+0x170],2
mov r9,qword[rsp+0x190]
movzx r8d,r12b
mov rcx,rax
mov rdi,rax
sete dl
call fcn.00677870
mov rcx,qword[0x00a7d870]
mov edx,0x2e
call fcn.005dd130
lea rcx,[rdi+0x28]
mov rdx,rax
call fcn.00a2df10
mov rcx,qword[0x00a7d870]
mov edx,0x2f
call fcn.005dd130
lea rcx,[rdi+0x48]
mov rdx,rax
call fcn.00a2df10
mov rcx,qword[r13+0x160]
mov qword[r13+0x160],rdi
test rcx,rcx
je 0x5c07da
mov rax,qword[rcx]
call qword[rax+8]
mov rdi,qword[r13+0x160]
movzx eax,byte[r13+0x16d]
mov byte[rdi+0x68],al
call qword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
mov r12d,eax
lea rax,[r13+0x6c]
mov rdi,rax
mov qword[rsp+0x30],rax
xor eax,eax
lock cmpxchg dword[rdi],eax
cmp r12d,eax
je 0x5c0df0
lea rdi,[r13+0x70]
mov r14d,dword[r13+0x70]
jmp 0x5c0816
mov r14d,eax
mov edx,r14d
mov r8d,r14d
mov rcx,rdi
or edx,0x80000000
call fcn.008eebc0
cmp r14d,eax
jne 0x5c0813
test r14d,r14d
js 0x5c0f20
mov rax,qword[rsp+0x30]
xchg dword[rax],r12d
mov dword[r13+0x68],1
lea rdi,[rsp+0x80]
mov r12,qword[rbp]
mov rbp,qword[rbp+8]
lea rax,[rdi+0x10]
mov qword[rsp+0x80],rax
mov rax,r12
add rax,rbp
je 0x5c0900
test r12,r12
jne 0x5c0900
lea rcx,[0x00aa93e0]
call fcn.00a4f4e0
mov ecx,0x88
call fcn.00a5af70
mov rdi,qword[0x00b3dd30]
mov qword[rax+0x10],0
mov byte[rax+0x18],0
mov qword[rax+0x30],0
mov byte[rax+0x38],0
mov qword[rax+0x50],0
lea rdx,[rdi+0x10]
mov byte[rax+0x58],0
mov dword[rax+0x80],6
mov rdi,rax
mov qword[rax],rdx
lea rdx,[rax+0x18]
mov qword[rax+8],rdx
lea rdx,[rax+0x38]
mov qword[rax+0x28],rdx
lea rdx,[rax+0x58]
mov qword[rax+0x48],rdx
mov rdx,0xffffffffffffffff
mov qword[rax+0x70],rdx
mov qword[rax+0x78],rdx
jmp 0x5c0780
cmp rbp,0xf
mov qword[rsp+0x48],rbp
ja 0x5c0ca0
cmp rbp,1
je 0x5c0e00
test rbp,rbp
lea rax,[rdi+0x10]
jne 0x5c10ad
mov qword[rsp+0x88],rbp
mov byte[rax+rbp],0
lea rbp,[rsp+0xa0]
mov r12,qword[rsi]
mov rsi,qword[rsi+8]
lea rax,[rbp+0x10]
mov qword[rsp+0xa0],rax
mov rax,r12
add rax,rsi
je 0x5c0970
test r12,r12
jne 0x5c0970
lea rcx,[0x00aa93e0]
call fcn.00a4f4e0
nop word cs:[rax+rax]
cmp rsi,0xf
mov qword[rsp+0x50],rsi
ja 0x5c0d30
cmp rsi,1
je 0x5c0e50
test rsi,rsi
lea rax,[rbp+0x10]
jne 0x5c10bd
lea r12,[rsp+0xc0]
mov qword[rsp+0xa8],rsi
mov byte[rax+rsi],0
mov rsi,qword[rbx]
mov rbx,qword[rbx+8]
lea rax,[r12+0x10]
mov qword[rsp+0xc0],rax
mov rax,rsi
add rax,rbx
je 0x5c09e0
test rsi,rsi
jne 0x5c09e0
lea rcx,[0x00aa93e0]
call fcn.00a4f4e0
nop word[rax+rax]
cmp rbx,0xf
mov qword[rsp+0x58],rbx
ja 0x5c0ce5
cmp rbx,1
je 0x5c0e15
test rbx,rbx
lea rax,[r12+0x10]
jne 0x5c109d
test r15b,r15b
mov qword[rsp+0xc8],rbx
mov byte[rax+rbx],0
je 0x5c0a31
mov rcx,qword[0x00a7d870]
mov edx,0x56
call fcn.005dcfa0
cmp eax,1
sete byte[rsp+0x27]
mov ecx,0x70
call fcn.00a5af70
mov rbx,rax
lea rax,[0x00b6f880]
mov r14,qword[rsp+0x80]
mov rsi,qword[rsp+0x88]
mov qword[rbx],rax
lea rax,[rbx+0x18]
mov qword[rsp+0x28],rax
mov qword[rbx+8],rax
mov rax,r14
add rax,rsi
je 0x5c0a80
test r14,r14
jne 0x5c0a80
lea rcx,[0x00aa93e0]
call fcn.00a4f4e0
nop
cmp rsi,0xf
mov qword[rsp+0x60],rsi
ja 0x5c0c62
cmp rsi,1
je 0x5c0e30
test rsi,rsi
mov rax,qword[rsp+0x28]
jne 0x5c10a5
mov qword[rbx+0x10],rsi
mov byte[rax+rsi],0
lea r14,[rbx+0x38]
mov r15,qword[rsp+0xa0]
mov rsi,qword[rsp+0xa8]
mov qword[rbx+0x28],r14
mov rax,r15
add rax,rsi
je 0x5c0ae0
test r15,r15
jne 0x5c0ae0
lea rcx,[0x00aa93e0]
call fcn.00a4f4e0
cmp rsi,0xf
mov qword[rsp+0x68],rsi
ja 0x5c0d75
cmp rsi,1
je 0x5c0e41
test rsi,rsi
mov rax,r14
jne 0x5c10c5
mov qword[rbx+0x30],rsi
mov byte[rax+rsi],0
lea rax,[rbx+0x58]
mov r15,qword[rsp+0xc0]
mov rsi,qword[rsp+0xc8]
mov qword[rbx+0x48],rax
mov rcx,r15
add rcx,rsi
je 0x5c0b40
test r15,r15
jne 0x5c0b40
lea rcx,[0x00aa93e0]
call fcn.00a4f4e0
nop
cmp rsi,0xf
mov qword[rsp+0x70],rsi
ja 0x5c0db0
cmp rsi,1
je 0x5c0e65
test rsi,rsi
mov rdx,rax
jne 0x5c10b5
mov eax,dword[rsp+0x170]
mov qword[rbx+0x50],rsi
mov byte[rdx+rsi],0
mov rsi,qword[r13+0xc8]
mov dword[rsp+0x70],0
mov qword[rsp+0x78],rbx
mov dword[rbx+0x68],eax
movzx eax,byte[rsp+0x27]
lea rdx,[rsi-0x10]
mov byte[rbx+0x6c],al
mov rax,qword[r13+0xb8]
cmp rax,rdx
je 0x5c0f00
test rax,rax
je 0x5c0ef0
mov rdx,qword[rsp+0x78]
mov dword[rax],0
mov qword[rsp+0x78],0
mov qword[rax+8],rdx
mov rcx,qword[rsp+0x78]
add rax,0x10
mov qword[r13+0xb8],rax
test rcx,rcx
je 0x5c0be3
mov rax,qword[rcx]
call qword[rax+8]
mov rcx,qword[r13+0x80]
xor r8d,r8d
mov edx,1
call qword[sym.imp.KERNEL32.dll_ReleaseSemaphore]
mov rcx,qword[rsp+0xc0]
lea rax,[r12+0x10]
cmp rcx,rax
je 0x5c0c0f
call fcn.00a5af30
mov rcx,qword[rsp+0xa0]
add rbp,0x10
cmp rcx,rbp
je 0x5c0c25
call fcn.00a5af30
mov rcx,qword[rsp+0x80]
add rdi,0x10
cmp rcx,rdi
je 0x5c0c3b
call fcn.00a5af30
mov eax,dword[r13+0x68]
sub eax,1
test eax,eax
mov dword[r13+0x68],eax
je 0x5c0e74
add rsp,0x108
pop rbx
pop rsi
pop rdi
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
lea rdx,[rsp+0x60]
lea rcx,[rbx+8]
xor r8d,r8d
call fcn.00a2dfc0
mov rcx,rax
mov qword[rbx+8],rax
mov rax,qword[rsp+0x60]
mov qword[rbx+0x18],rax
mov r8,rsi
mov rdx,r14
call sub.msvcrt.dll_memcpy
mov rsi,qword[rsp+0x60]
mov rax,qword[rbx+8]
jmp 0x5c0aa7
lea rdx,[rsp+0x48]
xor r8d,r8d
mov rcx,rdi
call fcn.00a2dfc0
mov rcx,rax
mov qword[rsp+0x80],rax
mov rax,qword[rsp+0x48]
mov qword[rsp+0x90],rax
mov r8,rbp
mov rdx,r12
call sub.msvcrt.dll_memcpy
mov rbp,qword[rsp+0x48]
mov rax,qword[rsp+0x80]
jmp 0x5c0926
lea rdx,[rsp+0x58]
xor r8d,r8d
mov rcx,r12
call fcn.00a2dfc0
mov rcx,rax
mov qword[rsp+0xc0],rax
mov rax,qword[rsp+0x58]
mov qword[rsp+0xd0],rax
mov r8,rbx
mov rdx,rsi
call sub.msvcrt.dll_memcpy
mov rbx,qword[rsp+0x58]
mov rax,qword[rsp+0xc0]
jmp 0x5c0a07
lea rdx,[rsp+0x50]
xor r8d,r8d
mov rcx,rbp
call fcn.00a2dfc0
mov rcx,rax
mov qword[rsp+0xa0],rax
mov rax,qword[rsp+0x50]
mov qword[rsp+0xb0],rax
mov r8,rsi
mov rdx,r12
call sub.msvcrt.dll_memcpy
mov rsi,qword[rsp+0x50]
mov rax,qword[rsp+0xa0]
jmp 0x5c0996
lea rdx,[rsp+0x68]
lea rcx,[rbx+0x28]
xor r8d,r8d
call fcn.00a2dfc0
mov rcx,rax
mov qword[rbx+0x28],rax
mov rax,qword[rsp+0x68]
mov qword[rbx+0x38],rax
mov r8,rsi
mov rdx,r15
call sub.msvcrt.dll_memcpy
mov rsi,qword[rsp+0x68]
mov rax,qword[rbx+0x28]
jmp 0x5c0b05
lea rdx,[rsp+0x70]
lea rcx,[rbx+0x48]
xor r8d,r8d
call fcn.00a2dfc0
mov rcx,rax
mov qword[rbx+0x48],rax
mov rax,qword[rsp+0x70]
mov qword[rbx+0x58],rax
mov r8,rsi
mov rdx,r15
call sub.msvcrt.dll_memcpy
mov rsi,qword[rsp+0x70]
mov rdx,qword[rbx+0x48]
jmp 0x5c0b65
add dword[r13+0x68],1
jmp 0x5c0848
movzx eax,byte[r12]
mov byte[rsp+0x90],al
lea rax,[rdi+0x10]
jmp 0x5c0926
movzx eax,byte[rsi]
mov byte[rsp+0xd0],al
lea rax,[r12+0x10]
jmp 0x5c0a07
movzx eax,byte[r14]
mov byte[rbx+0x18],al
mov rax,qword[rsp+0x28]
jmp 0x5c0aa7
movzx eax,byte[r15]
mov byte[rbx+0x38],al
mov rax,r14
jmp 0x5c0b05
movzx eax,byte[r12]
mov byte[rsp+0xb0],al
lea rax,[rbp+0x10]
jmp 0x5c0996
movzx edx,byte[r15]
mov byte[rbx+0x58],dl
mov rdx,rax
jmp 0x5c0b65
mov rdi,qword[rsp+0x30]
xchg dword[rdi],eax
mov eax,0x80000000
lea rsi,[r13+0x70]
lock xadd dword[rsi],eax
test eax,0x40000000
jne 0x5c0c4e
cmp eax,0x80000000
je 0x5c0c4e
mov ebx,dword[r13+0x70]
jmp 0x5c0ea6
mov ebx,eax
mov edx,ebx
mov r8d,ebx
mov rcx,rsi
or edx,0x40000000
call fcn.008eebc0
cmp ebx,eax
jne 0x5c0ea4
and ebx,0x40000000
jne 0x5c0c4e
add r13,0x78
xor eax,eax
lock cmpxchg qword[r13],rax
test rax,rax
mov rbx,rax
je 0x5c10cd
mov rcx,rbx
call qword[sym.imp.KERNEL32.dll_SetEvent]
jmp 0x5c0c4e
mov rcx,rbx
jmp 0x5c0bcd
lea rdx,[rsp+0x70]
lea rcx,[r13+0x88]
call fcn.00a07580
mov rcx,qword[rsp+0x78]
jmp 0x5c0bd8
mov edx,dword[r13+0x70]
jmp 0x5c0f32
mov edx,eax
lea eax,[rdx+1]
mov r14d,edx
or r14d,0x80000000
test edx,edx
cmovs r14d,eax
mov eax,edx
lock cmpxchg dword[rdi],r14d
cmp eax,edx
jne 0x5c0f30
mov eax,r14d
shr eax,0x1f
test al,al
je 0x5c0838
shr edx,0x1f
test dl,dl
je 0x5c0838
lea r11,[r13+0x78]
xor eax,eax
lock cmpxchg qword[r11],rax
test rax,rax
mov rcx,rax
je 0x5c1105
mov qword[rsp+0x168],rbx
mov rbx,rdi
mov rdi,rcx
nop
xor r8d,r8d
mov edx,0xffffffff
mov rcx,rdi
call qword[sym.imp.KERNEL32.dll_WaitForSingleObjectEx]
mov edx,r14d
and edx,0x7fffffff
or edx,0x40000000
test edx,edx
js 0x5c0fd7
lea ecx,[rdx-1]
mov eax,edx
and ecx,0x3fffffff
or ecx,0x80000000
lock cmpxchg dword[rbx],ecx
cmp eax,edx
je 0x5c1090
mov edx,eax
test edx,edx
jns 0x5c0fb4
mov ecx,edx
mov eax,edx
and ecx,0xbfffffff
lock cmpxchg dword[rbx],ecx
cmp eax,edx
jne 0x5c0fd1
mov r14d,eax
jmp 0x5c0f90
mov rbx,qword[rsp+0x168]
jmp 0x5c0838
mov rcx,rax
jmp 0x5c0d0d
mov rcx,rax
jmp 0x5c0c83
mov rcx,rax
jmp 0x5c0cc8
mov rcx,rax
jmp 0x5c0dd1
mov rcx,rax
jmp 0x5c0d58
mov rcx,r14
jmp 0x5c0d96
xor ecx,ecx
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
je 0x5c11b6
mov rax,rbx
lock cmpxchg qword[r13],rcx
test rax,rax
mov rbx,rax
je 0x5c115e
call qword[sym.imp.KERNEL32.dll_CloseHandle]
jmp 0x5c0ee1
xor ecx,ecx
mov qword[rsp+0x28],r11
xor r9d,r9d
xor r8d,r8d
xor edx,edx
mov qword[rsp+0x38],rax
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
mov r11,qword[rsp+0x28]
mov r10,qword[rsp+0x38]
je 0x5c1218
mov rax,r10
lock cmpxchg qword[r11],rcx
test rax,rax
je 0x5c0f80
mov qword[rsp+0x28],rax
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rdx,qword[rsp+0x28]
mov rcx,rdx
jmp 0x5c0f80
mov rbx,rcx
jmp 0x5c0ee1
call fcn.006ea660
lea rdx,[0x00aa940a]
mov rcx,r12
mov rbx,rax
call fcn.009de540
lea rax,[r12+0x30]
mov rcx,r12
mov dword[rsp+0xd0],0xb
mov qword[rsp+0xd8],rbx
mov qword[rsp+0xe8],0
mov qword[rsp+0xe0],rax
lea rax,[0x00b72480]
mov byte[rsp+0xf0],0
mov qword[rsp+0xc0],rax
call fcn.00947760
lea rbx,[rsp+0xc0]
call fcn.006ea660
lea rdx,[0x00aa940a]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0xd0],0xb
mov qword[rsp+0xd8],rsi
mov qword[rsp+0xe8],0
mov qword[rsp+0xe0],rax
lea rax,[0x00b72480]
mov byte[rsp+0xf0],0
mov qword[rsp+0xc0],rax
call fcn.00947760
lea rax,[0x00b72450]
mov rcx,r12
mov qword[rsp+0xc0],rax
call fcn.00962490
call fcn.00a55e20
mov rsi,rax
lea rax,[0x00b72450]
mov rcx,rbx
mov qword[rsp+0xc0],rax
call fcn.00962490
mov rcx,rsi
call fcn.008da260
nop
{% endhighlight %}


[similar_1_ref]: /report/fcn.00656050@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_2_ref]: /report/fcn.0054f1a0@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_3_ref]: /report/fcn.00674c10@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_4_ref]: /report/fcn.006b9e90@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_5_ref]: /report/fcn.0069c090@a5905e3c253c25bbaf727a1a18fe8ed1
[virustotal_ref]: https://www.virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1