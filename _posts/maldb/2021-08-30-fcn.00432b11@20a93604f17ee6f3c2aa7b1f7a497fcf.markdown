---
layout: post
title:  "fcn.00432b11 @ 20a93604f17ee6f3c2aa7b1f7a497fcf"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00432b11
- **Origin (md5):** 20a93604f17ee6f3c2aa7b1f7a497fcf
- **VirusTotal:** [virustotal.com/gui/file/20a93604f17ee6f3c2aa7b1f7a497fcf][virustotal_ref]

# Code Tags
<span class="tag" id="LINKING">LINKING</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.00432b11@20a93604f17ee6f3c2aa7b1f7a497fcf">fcn.00432b11</a><br>@20a93604f17ee6f3c2aa7b1f7a497fcf</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
and esp, 0xfffffff8
push 0xffffffffffffffff
push 0x45da5c
mov eax, dword
push eax
sub esp, 0xc0
mov eax, dword[0x482084]
xor eax, esp
mov dword[esp+0xb8], eax
push ebx
push esi
push edi
mov eax, dword[0x482084]
xor eax, esp
push eax
lea eax, [esp+0xd0]
mov dword
push dword[0x4836c0]
mov esi, ecx
push dword[0x483108]
mov dword[esp+0x54], esi
push 0
call fcn.00442225
mov eax, 0x6ac0
add esp, 0xc
mov word[esp+0x58], ax
lea eax, [esp+0x80]
push eax
push dword[0x4839a0]
mov dword[esp+0x5c], 0xf414c260
mov dword[esp+0x62], 0xd1b611cf
mov dword[esp+0x66], 0xbb00aa00
mov word[esp+0x6a], 0x58bb
call fcn.00442e3b
mov dword[esp+0x10], 0x56
mov ecx, dword[esp+0x10]
push 0x3d
pop edx
sub edx, ecx
add edx, dword[esp+0x10]
push 0x59
mov dword[esp+0x14], edx
mov ecx, dword[esp+0x14]
mov edx, dword[esp+0x14]
imul ecx, ecx, 0x5e
sub edx, ecx
mov ecx, dword[esp+0x14]
sub edx, ecx
mov dword[esp+0x14], edx
add dword[esp+0x14], 0x3e
mov ecx, dword[esp+0x14]
mov edx, dword[esp+0x14]
imul ecx, edx
mov edx, dword[esp+0x14]
imul ecx, edx
pop edx
sub edx, ecx
add edx, dword[esp+0x10]
push 5
mov dword[esp+0x14], edx
mov ecx, dword[esp+0x14]
mov edx, dword[esp+0x14]
sub ecx, edx
add ecx, dword[esp+0x14]
pop ebx
add ecx, dword[esp+0x10]
mov dword[esp+0x10], ecx
mov ecx, dword[esp+0x10]
add ecx, dword[esp+0x10]
mov dword[esp+0x10], ecx
mov ecx, dword[esp+0x10]
mov edx, dword[esp+0x10]
imul ecx, edx
mov dword[esp+0x10], ecx
test eax, eax
jns off.b314
push eax
push dword[0x4836c4]
push 1
call fcn.00442225
add esp, 0xc
jmp off.b833
lea eax, [esi+0x10]
push eax
lea eax, [esp+0x84]
push eax
call fcn.0044306a
mov edi, eax
test edi, edi
jns off.b3024
and dword[esp+0x50], 0
mov dword[esp+0x14], ebx
mov dword[esp+0x10], 0x60
mov eax, dword[esp+0x10]
push 0xffffffffffffffa9
pop ecx
sub ecx, eax
add ecx, dword[esp+0x10]
push 0x2f
add ecx, dword[esp+0x18]
mov dword[esp+0x14], ecx
mov eax, dword[esp+0x14]
sub dword[esp+0x18], eax
mov eax, dword[esp+0x18]
cdq
pop ecx
idiv ecx
mov ecx, dword[esp+0x10]
lea eax, [eax+ecx+0x54]
mov dword[esp+0x10], eax
mov eax, dword[esp+0x10]
mov ecx, dword[esp+0x10]
imul eax, ecx
mov ecx, dword[esp+0x10]
imul eax, eax, 0x4f
imul ecx, ecx, 0x26
sub eax, ecx
mov ecx, dword[esp+0x14]
mov edx, dword[esp+0x14]
imul ecx, edx
add eax, ecx
mov dword[esp+0x14], eax
mov eax, dword[esp+0x14]
imul eax, eax, 0x2d
add eax, dword[esp+0x10]
mov dword[esp+0x14], eax
lea eax, [esp+0x50]
push eax
lea eax, [esp+0x84]
push eax
call fcn.00442d63
mov dword[esp+0x24], 0x35
mov dword[esp+0x34], 0x43
mov dword[esp+0x1c], 0x4f
mov dword[esp+0x2c], 0x4c
mov dword[esp+0x14], 0x4a
mov dword[esp+0x10], 0x37
mov eax, dword[esp+0x14]
mov ecx, dword[esp+0x24]
imul eax, ecx
mov ecx, dword[esp+0x14]
imul ecx, ecx, 0x26
sub ecx, eax
mov dword[esp+0x2c], ecx
mov eax, dword[esp+0x10]
mov ecx, dword[esp+0x24]
cmp ecx, eax
jg off.b688
mov eax, dword[esp+0x10]
mov ecx, dword[esp+0x24]
imul eax, ecx
mov dword[esp+0x10], eax
mov eax, dword[esp+0x2c]
mov ecx, dword[esp+0x24]
imul eax, eax, 0x51
sub ecx, eax
mov dword[esp+0x10], ecx
mov eax, dword[esp+0x10]
mov ecx, dword[esp+0x10]
imul eax, ecx
mov ecx, dword[esp+0x10]
imul eax, ecx
mov ecx, dword[esp+0x2c]
imul eax, ecx
mov ecx, dword[esp+0x1c]
imul eax, ecx
mov ecx, dword[esp+0x14]
imul eax, eax, 0x2c
imul ecx, ecx, 0x52
sub eax, ecx
mov ecx, dword[esp+0x10]
sub eax, ecx
mov ecx, dword[esp+0x2c]
sub eax, ecx
mov ecx, dword[esp+0x10]
lea eax, [eax+ecx-0xc3]
add eax, dword[esp+0x34]
add eax, dword[esp+0x24]
mov dword[esp+0x10], eax
mov eax, dword[esp+0x14]
sub eax, 0x2d
mov dword[esp+0x34], eax
mov eax, dword[esp+0x50]
test eax, eax
jne off.b701
mov eax, dword[0x4838d8]
push eax
lea eax, [esp+0x94]
call fcn.00405844
and dword[esp+0xd8], 0
lea eax, [esp+0x90]
push eax
mov ecx, 0xfde9
lea edx, [esp+0xb0]
call fcn.00452a24
pop ecx
mov byte[esp+0xd8], 1
cmp dword[eax+0x14], 0x10
jb off.b764
mov eax, dword[eax]
push edi
push eax
push dword[0x4836c8]
push 1
call fcn.00442225
add esp, 0x10
push 1
xor edi, edi
lea esi, [esp+0xb0]
call fcn.004053d9
or dword[esp+0xd8], 0xffffffff
push 1
lea esi, [esp+0x94]
call fcn.0040571d
push dword[esp+0x50]
call fcn.00442d54
mov esi, dword[esp+0x4c]
lea eax, [esi+0x10]
push eax
lea eax, [esp+0x58]
push eax
call fcn.0044306a
fld qword[0x47ca58]
fstp qword[esp+0x1c]
fld qword[esp+0x1c]
fadd qword[esp+0x1c]
fsub qword[0x47ca50]
fsub qword[esp+0x1c]
fadd qword[0x47ca48]
fstp qword[esp+0x1c]
fld qword[esp+0x1c]
fmul qword[esp+0x1c]
fadd qword[esp+0x1c]
fadd qword[0x47c998]
fld qword[esp+0x1c]
fmul qword[esp+0x1c]
faddp st(1)
fsub qword[esp+0x1c]
fld qword[esp+0x1c]
fld qword[0x47ca40]
fmul st(1), st(0)
fxch st(2)
faddp st(1)
fsubrp st(1)
fadd qword[esp+0x1c]
fsub qword[esp+0x1c]
fsub qword[0x47ca38]
fadd qword[esp+0x1c]
fstp qword[esp+0x1c]
fld qword[esp+0x1c]
fadd qword[0x47c980]
fstp qword[esp+0x1c]
fld qword[esp+0x1c]
fsub qword[0x47ca10]
fstp qword[esp+0x1c]
fld qword[esp+0x1c]
fmul qword[esp+0x1c]
fadd qword[esp+0x1c]
fstp qword[esp+0x1c]
test eax, eax
jns off.b3024
push eax
push dword[0x4836cc]
push 1
call fcn.00442225
add esp, 0xc
push dword[0x4836d0]
lea eax, [esp+0x68]
call fcn.00404ec3
mov dword[esp+0xd8], 2
push dword[0x4839a4]
call dword[sym.imp.KERNEL32.dll_LoadLibraryW]
mov dword[esp+0x1c], eax
test eax, eax
je off.b2852
mov eax, dword[0x4836d4]
push eax
mov esi, eax
call fcn.00413a10
pop ecx
mov ecx, esi
lea esi, [esp+0x64]
call fcn.00404e5a
push dword[0x4836d4]
mov edi, dword[sym.imp.KERNEL32.dll_GetProcAddress]
push dword[esp+0x20]
call edi
test eax, eax
je off.b1757
call eax
mov dword[esp+0x2c], 0x36
mov dword[esp+0x24], 0xa
mov dword[esp+0x18], 0x2e
mov dword[esp+0x10], 0x28
mov dword[esp+0x14], ebx
mov dword[esp+0x34], 0x20
mov dword[esp+0x3c], eax
mov eax, dword[esp+0x18]
mov ecx, dword[esp+0x24]
imul eax, ecx
mov ecx, dword[esp+0x18]
sub eax, ecx
mov ecx, dword[esp+0x10]
sub eax, ecx
mov ecx, dword[esp+0x10]
sub eax, ecx
mov ecx, dword[esp+0x34]
sub eax, ecx
mov ecx, dword[esp+0x14]
lea eax, [eax+ecx-0x55]
add eax, dword[esp+0x10]
push 0x64
add eax, dword[esp+0x1c]
pop esi
add eax, dword[esp+0x2c]
add eax, dword[esp+0x2c]
mov dword[esp+0x34], eax
mov ecx, dword[esp+0x10]
mov eax, dword[esp+0x24]
imul ecx, eax
mov eax, dword[esp+0x24]
imul ecx, eax
imul ecx, ecx, 0x12
add ecx, dword[esp+0x18]
mov eax, dword[esp+0x24]
cdq
imul ecx, ecx, 5
idiv esi
sub eax, ecx
mov ecx, dword[esp+0x14]
mov edx, dword[esp+0x18]
imul ecx, edx
add eax, ecx
mov ecx, dword[esp+0x18]
imul ecx, ecx, 0x36
add eax, ecx
mov ecx, dword[esp+0x10]
sub eax, ecx
mov ecx, dword[esp+0x14]
lea eax, [eax+ecx-0x26]
add eax, dword[esp+0x24]
mov dword[esp+0x14], eax
mov eax, dword[esp+0x18]
mov ecx, dword[esp+0x18]
cmp eax, ecx
jle off.b1431
mov eax, dword[esp+0x10]
add eax, dword[esp+0x10]
mov dword[esp+0x2c], eax
mov eax, dword[esp+0x10]
mov eax, dword[esp+0x10]
mov eax, dword[esp+0x14]
mov ecx, dword[esp+0x10]
sub eax, ecx
mov dword[esp+0x14], eax
mov eax, dword[esp+0x34]
mov ecx, dword[esp+0x2c]
imul eax, ecx
mov ecx, dword[esp+0x14]
imul eax, eax, 0x38
sub eax, ecx
mov ecx, dword[esp+0x2c]
sub eax, ecx
add eax, dword[esp+0x14]
mov dword[esp+0x2c], eax
mov eax, dword[esp+0x18]
mov ecx, dword[esp+0x24]
cmp ecx, eax
je off.b1431
mov eax, dword[esp+0x14]
mov ecx, dword[esp+0x18]
imul eax, ecx
mov dword[esp+0x10], eax
push dword[esp+0x3c]
xor eax, eax
cmp dword[esp+0x40], eax
push dword[0x4836d8]
setl al
push eax
call fcn.00442225
mov dword[esp+0x30], 0x36
mov dword[esp+0x38], 0xa
mov dword[esp+0x24], 0x2e
mov dword[esp+0x1c], 0x28
mov dword[esp+0x20], ebx
mov dword[esp+0x40], 0x20
mov eax, dword[esp+0x24]
mov ecx, dword[esp+0x38]
imul eax, ecx
mov ecx, dword[esp+0x24]
sub eax, ecx
mov ecx, dword[esp+0x1c]
sub eax, ecx
mov ecx, dword[esp+0x1c]
sub eax, ecx
mov ecx, dword[esp+0x40]
sub eax, ecx
mov ecx, dword[esp+0x20]
lea eax, [eax+ecx-0x55]
add eax, dword[esp+0x1c]
add esp, 0xc
add eax, dword[esp+0x18]
push 0x64
add eax, dword[esp+0x28]
pop esi
add eax, dword[esp+0x24]
mov dword[esp+0x34], eax
mov ecx, dword[esp+0x10]
mov eax, dword[esp+0x2c]
imul ecx, eax
mov eax, dword[esp+0x2c]
imul ecx, eax
imul ecx, ecx, 0x12
add ecx, dword[esp+0x18]
mov eax, dword[esp+0x2c]
cdq
imul ecx, ecx, 5
idiv esi
sub eax, ecx
mov ecx, dword[esp+0x14]
mov edx, dword[esp+0x18]
imul ecx, edx
add eax, ecx
mov ecx, dword[esp+0x18]
imul ecx, ecx, 0x36
add eax, ecx
mov ecx, dword[esp+0x10]
sub eax, ecx
mov ecx, dword[esp+0x14]
lea eax, [eax+ecx-0x26]
add eax, dword[esp+0x2c]
mov dword[esp+0x14], eax
mov eax, dword[esp+0x18]
mov ecx, dword[esp+0x18]
cmp eax, ecx
jle off.b1757
mov eax, dword[esp+0x10]
add eax, dword[esp+0x10]
mov dword[esp+0x24], eax
mov eax, dword[esp+0x10]
mov eax, dword[esp+0x10]
mov eax, dword[esp+0x14]
mov ecx, dword[esp+0x10]
sub eax, ecx
mov dword[esp+0x14], eax
mov eax, dword[esp+0x34]
mov ecx, dword[esp+0x24]
imul eax, ecx
mov ecx, dword[esp+0x14]
imul eax, eax, 0x38
sub eax, ecx
mov ecx, dword[esp+0x24]
sub eax, ecx
add eax, dword[esp+0x14]
mov dword[esp+0x24], eax
mov eax, dword[esp+0x18]
mov ecx, dword[esp+0x2c]
cmp ecx, eax
je off.b1757
mov eax, dword[esp+0x14]
mov ecx, dword[esp+0x18]
imul eax, ecx
mov dword[esp+0x10], eax
mov eax, dword[0x4836dc]
push eax
mov esi, eax
call fcn.00413a10
pop ecx
mov ecx, esi
lea esi, [esp+0x64]
call fcn.00404e5a
fld qword[0x47c9d8]
fstp qword[esp+0x34]
push 0xffffffffffffffa9
fld qword[0x47c9d0]
pop ecx
fstp qword[esp+0x3c]
push 0x2f
fld qword[0x47c9c8]
fstp qword[esp+0x40]
fld qword[0x47c9c0]
fstp qword[esp+0x28]
fld qword[esp+0x40]
fdiv qword[0x47c9b8]
fstp qword[esp+0x40]
fld qword[esp+0x38]
fadd qword[0x47c9f0]
fstp qword[esp+0x40]
mov dword[esp+0x18], ebx
mov dword[esp+0x1c], 0x60
mov eax, dword[esp+0x1c]
sub ecx, eax
add ecx, dword[esp+0x1c]
add ecx, dword[esp+0x18]
mov dword[esp+0x1c], ecx
mov eax, dword[esp+0x1c]
sub dword[esp+0x18], eax
mov eax, dword[esp+0x18]
cdq
pop ecx
idiv ecx
mov ecx, dword[esp+0x18]
lea eax, [eax+ecx+0x54]
mov dword[esp+0x18], eax
mov eax, dword[esp+0x18]
mov ecx, dword[esp+0x18]
imul eax, ecx
mov ecx, dword[esp+0x18]
imul eax, eax, 0x4f
imul ecx, ecx, 0x26
sub eax, ecx
mov ecx, dword[esp+0x14]
mov edx, dword[esp+0x14]
imul ecx, edx
add eax, ecx
mov dword[esp+0x14], eax
mov eax, dword[esp+0x14]
imul eax, eax, 0x2d
add eax, dword[esp+0x18]
push dword[0x4836dc]
mov dword[esp+0x18], eax
push dword[esp+0x20]
call edi
mov edi, eax
test edi, edi
je off.b2650
and dword[esp+0x48], 0
lea eax, [esp+0x48]
push eax
mov esi, 0x4603e0
push esi
lea eax, [esp+0x88]
push eax
mov byte[esp+0xe4], 3
call edi
mov dword[esp+0x24], 0x2b
mov dword[esp+0x18], 0x11
mov dword[esp+0x10], 0x12
mov dword[esp+0x1c], 0x49
mov dword[esp+0x14], eax
mov eax, dword[esp+0x10]
mov ecx, dword[esp+0x18]
imul eax, ecx
mov ecx, dword[esp+0x18]
imul ecx, ecx, 0x1e
sub eax, ecx
mov ecx, dword[esp+0x10]
sub eax, ecx
mov dword[esp+0x24], eax
mov eax, dword[esp+0x1c]
mov ecx, dword[esp+0x10]
imul eax, ecx
mov dword[esp+0x24], eax
mov eax, dword[esp+0x24]
imul eax, eax, 0x13
push 0xffffffffffffffa0
pop ecx
sub ecx, eax
add ecx, dword[esp+0x10]
push 0xfffffffffffffff6
add ecx, dword[esp+0x1c]
add ecx, dword[esp+0x1c]
mov dword[esp+0x1c], ecx
mov eax, dword[esp+0x14]
mov ecx, dword[esp+0x28]
imul eax, ecx
imul eax, eax, 0x41
mov dword[esp+0x1c], eax
mov eax, dword[esp+0x14]
mov ecx, dword[esp+0x14]
imul eax, ecx
pop ecx
sub ecx, eax
add ecx, dword[esp+0x10]
add ecx, dword[esp+0x10]
add ecx, dword[esp+0x10]
mov dword[esp+0x18], ecx
mov eax, dword[esp+0x18]
mov ecx, dword[esp+0x18]
sub eax, ecx
add eax, dword[esp+0x10]
mov dword[esp+0x10], eax
mov eax, dword[esp+0x1c]
mov ecx, dword[esp+0x10]
cmp ecx, eax
jg off.b2235
mov eax, dword[esp+0x10]
mov eax, dword[esp+0x18]
mov eax, dword[esp+0x10]
push 0x1e
cdq
pop ecx
idiv ecx
mov dword[esp+0x10], eax
cmp dword[esp+0x14], 0
jge off.b2267
lea eax, [esp+0x48]
push eax
push esi
lea eax, [esp+0x5c]
push eax
call edi
mov dword[esp+0x14], eax
test eax, eax
js off.b2619
mov eax, dword[0x4836e0]
push eax
mov esi, eax
call fcn.00413a10
pop ecx
mov ecx, esi
lea esi, [esp+0x64]
call fcn.00404e5a
mov dword[esp+0x24], 0x36
mov dword[esp+0x2c], 0xa
mov dword[esp+0x18], 0x2e
mov dword[esp+0x10], 0x28
mov dword[esp+0x14], ebx
mov dword[esp+0x34], 0x20
mov eax, dword[esp+0x18]
mov ecx, dword[esp+0x2c]
imul eax, ecx
mov ecx, dword[esp+0x18]
sub eax, ecx
mov ecx, dword[esp+0x10]
sub eax, ecx
mov ecx, dword[esp+0x10]
sub eax, ecx
mov ecx, dword[esp+0x34]
sub eax, ecx
mov ecx, dword[esp+0x14]
lea eax, [eax+ecx-0x55]
add eax, dword[esp+0x10]
push 0x64
add eax, dword[esp+0x1c]
pop esi
add eax, dword[esp+0x24]
add eax, dword[esp+0x24]
mov dword[esp+0x34], eax
mov ecx, dword[esp+0x10]
mov eax, dword[esp+0x2c]
imul ecx, eax
mov eax, dword[esp+0x2c]
imul ecx, eax
imul ecx, ecx, 0x12
add ecx, dword[esp+0x18]
mov eax, dword[esp+0x2c]
cdq
imul ecx, ecx, 5
idiv esi
sub eax, ecx
mov ecx, dword[esp+0x14]
mov edx, dword[esp+0x18]
imul ecx, edx
add eax, ecx
mov ecx, dword[esp+0x18]
imul ecx, ecx, 0x36
add eax, ecx
mov ecx, dword[esp+0x10]
sub eax, ecx
mov ecx, dword[esp+0x14]
lea eax, [eax+ecx-0x26]
add eax, dword[esp+0x2c]
mov dword[esp+0x14], eax
mov eax, dword[esp+0x18]
mov ecx, dword[esp+0x18]
cmp eax, ecx
jle off.b2590
mov eax, dword[esp+0x10]
add eax, dword[esp+0x10]
mov dword[esp+0x24], eax
mov eax, dword[esp+0x10]
mov eax, dword[esp+0x10]
mov eax, dword[esp+0x14]
mov ecx, dword[esp+0x10]
sub eax, ecx
mov dword[esp+0x14], eax
mov eax, dword[esp+0x34]
mov ecx, dword[esp+0x24]
imul eax, ecx
mov ecx, dword[esp+0x14]
imul eax, eax, 0x38
sub eax, ecx
mov ecx, dword[esp+0x24]
sub eax, ecx
add eax, dword[esp+0x14]
mov dword[esp+0x24], eax
mov eax, dword[esp+0x18]
mov ecx, dword[esp+0x2c]
cmp ecx, eax
je off.b2590
mov eax, dword[esp+0x14]
mov ecx, dword[esp+0x18]
imul eax, ecx
mov dword[esp+0x10], eax
mov ecx, dword[esp+0x4c]
mov eax, dword[esp+0x48]
mov edx, dword[eax]
add ecx, 0x10
push ecx
push 0x4603f0
push 0
push eax
call dword[edx+0xc]
mov dword[esp+0x14], eax
mov byte[esp+0xd8], 2
mov eax, dword[esp+0x48]
test eax, eax
je off.b2943
mov ecx, dword[eax]
push eax
call dword[ecx+8]
jmp off.b2943
call fcn.00444c6e
fld qword[0x47ca30]
fstp qword[esp+0x34]
mov ecx, eax
fld qword[0x47ca28]
fstp qword[esp+0x1c]
fld qword[0x47ca20]
fstp qword[esp+0x2c]
fld qword[0x47ca18]
fstp qword[esp+0x3c]
fld qword[0x47c970]
fstp qword[esp+0x24]
fld qword[0x47ca10]
fstp qword[esp+0x2c]
fld qword[esp+0x1c]
fmul qword[0x47ca08]
fmul qword[esp+0x3c]
fmul qword[esp+0x1c]
fmul qword[0x47ca00]
fmul qword[esp+0x3c]
fadd qword[0x47c9f8]
fsub qword[esp+0x2c]
fstp qword[esp+0x2c]
fld qword[esp+0x24]
fld qword[esp+0x1c]
fucompp
fnstsw ax
test ah, 0x44
jp off.b2830
fld qword[esp+0x1c]
fmul qword[esp+0x1c]
fmul qword[0x47c9e8]
fmul qword[esp+0x1c]
fmul qword[esp+0x34]
fsub qword[esp+0x3c]
fadd qword[0x47c9e0]
fstp qword[esp+0x34]
fld qword[esp+0x24]
fadd qword[0x47c9f0]
fadd qword[esp+0x34]
fstp qword[esp+0x2c]
test ecx, ecx
jle off.b2846
and ecx, 0xffff
or ecx, 0x80070000
mov dword[esp+0x14], ecx
jmp off.b2943
call fcn.00444c6e
fld qword[0x47c9d8]
fstp qword[esp+0x3c]
fld qword[0x47c9d0]
fstp qword[esp+0x1c]
fld qword[0x47c9c8]
fstp qword[esp+0x1c]
fld qword[0x47c9c0]
fstp qword[esp+0x34]
fld qword[esp+0x1c]
fdiv qword[0x47c9b8]
fstp qword[esp+0x1c]
fld qword[esp+0x3c]
fadd qword[0x47c9f0]
fstp qword[esp+0x1c]
test eax, eax
jle off.b2939
and eax, 0xffff
or eax, 0x80070000
mov dword[esp+0x14], eax
cmp dword[esp+0x14], 0
jge off.b2986
cmp dword[esp+0x78], 0x10
mov eax, dword[esp+0x64]
jae off.b2965
lea eax, [esp+0x64]
push eax
push dword[esp+0x18]
push dword[0x4836e4]
push 1
call fcn.00442225
add esp, 0x10
or dword[esp+0xd8], 0xffffffff
push 1
xor edi, edi
lea esi, [esp+0x68]
call fcn.004053d9
cmp dword[esp+0x14], edi
jge off.b3020
xor eax, eax
jmp off.b3346
mov esi, dword[esp+0x4c]
mov eax, dword[esi+0x10]
mov ecx, dword[eax]
lea ebx, [esi+0x14]
push ebx
push 0x460400
push eax
call dword[ecx]
test eax, eax
jns off.b3064
push eax
push dword[0x4836e8]
push 1
call fcn.00442225
add esp, 0xc
jmp off.b3013
mov eax, dword[esi+0x10]
mov ecx, dword[eax]
push esi
push eax
call dword[ecx+0xc]
test eax, eax
jns off.b3087
push eax
push dword[0x4836ec]
jmp off.b3052
mov ebx, dword[ebx]
mov eax, dword[ebx]
push ebx
call dword[eax+0xc]
test eax, eax
jns off.b3108
push eax
push dword[0x4836f0]
jmp off.b3052
cmp dword[esi+0xc], 0
je off.b3125
mov eax, dword[esi+0x10]
mov ecx, dword[esi+0xc]
mov edx, dword[ecx]
push eax
call dword[edx]
mov eax, dword[esi+0x10]
mov ecx, dword[eax]
push 2
push eax
call dword[ecx+0x14]
mov dword[esp+0x24], 0x2b
mov dword[esp+0x14], 0x11
mov dword[esp+0x10], 0x12
mov dword[esp+0x1c], 0x49
mov eax, dword[esp+0x10]
mov ecx, dword[esp+0x14]
imul eax, ecx
mov ecx, dword[esp+0x14]
imul ecx, ecx, 0x1e
sub eax, ecx
mov ecx, dword[esp+0x10]
sub eax, ecx
mov dword[esp+0x24], eax
mov eax, dword[esp+0x1c]
mov ecx, dword[esp+0x10]
imul eax, ecx
mov dword[esp+0x24], eax
mov eax, dword[esp+0x24]
imul eax, eax, 0x13
push 0xffffffffffffffa0
pop ecx
sub ecx, eax
add ecx, dword[esp+0x10]
push 0xfffffffffffffff6
add ecx, dword[esp+0x18]
add ecx, dword[esp+0x18]
mov dword[esp+0x18], ecx
mov eax, dword[esp+0x14]
mov ecx, dword[esp+0x28]
imul eax, ecx
imul eax, eax, 0x41
mov dword[esp+0x18], eax
mov eax, dword[esp+0x14]
mov ecx, dword[esp+0x14]
imul eax, ecx
pop ecx
sub ecx, eax
add ecx, dword[esp+0x10]
add ecx, dword[esp+0x10]
add ecx, dword[esp+0x10]
mov dword[esp+0x14], ecx
mov eax, dword[esp+0x14]
mov ecx, dword[esp+0x14]
sub eax, ecx
add eax, dword[esp+0x10]
mov dword[esp+0x10], eax
mov eax, dword[esp+0x1c]
mov ecx, dword[esp+0x10]
cmp ecx, eax
jg off.b3343
mov eax, dword[esp+0x10]
mov eax, dword[esp+0x14]
mov eax, dword[esp+0x10]
push 0x1e
cdq
pop ecx
idiv ecx
mov dword[esp+0x10], eax
xor eax, eax
inc eax
mov ecx, dword[esp+0xd0]
mov dword
pop ecx
pop edi
pop esi
pop ebx
mov ecx, dword[esp+0xb8]
xor ecx, esp
call fcn.00411833
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/20a93604f17ee6f3c2aa7b1f7a497fcf