---
layout: post
title:  "fcn.00409fe7 @ 470263fe7e7cc115b95cd041d643e3b5"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00409fe7
- **Origin (md5):** 470263fe7e7cc115b95cd041d643e3b5
- **VirusTotal:** [virustotal.com/gui/file/470263fe7e7cc115b95cd041d643e3b5][virustotal_ref]

# Code Tags
<span class="tag" id="LINKING">LINKING</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [715.2520751953125, 846.419921875, '<b><a href="/report/fcn.00409fe7@470263fe7e7cc115b95cd041d643e3b5">fcn.00409fe7</a><br>@470263fe7e7cc115b95cd041d643e3b5</b><br>push ebp<br>mov ebp, esp<br>sub esp, 0x118<br>push ebx<br>push esi<br>push edi<br>xor eax, eax<br>mov dword[ebp-0xd0], ecx<br>lea edi, [ebp-0x118]<br>xor ebx, ebx<br>stosd dword<br>push 0x72<br>mov dword[ebp-8], ebx<br>mov dword[ebp-4], ebx<br>stosd dword<br>stosd dword<br>stosd dword<br>pop eax<br>push 0x70<br>pop ecx<br>push 0x63<br>mov word[ebp-0x54], ax<br>mov word[ebp-0x4e], ax<br>mov word[ebp-0x52], cx<br>pop ecx<br>push 0x74<br>pop eax<br>push 0x34<br>mov word[ebp-0x4c], ax<br>pop eax<br>push 0x2e<br>mov word[ebp-0x4a], ax<br>pop eax<br>push 0x64<br>mov word[ebp-0x48], ax<br>pop eax<br>mov word[ebp-0x46], ax<br>push 0x6c<br>pop eax<br>mov word[ebp-0x44], ax<br>mov word[ebp-0x42], ax<br>xor eax, eax<br>mov dword[ebp-0x40], eax<br>lea eax, [ebp-0x54]<br>push eax<br>mov word[ebp-0x50], cx<br>call dword[sym.imp.KERNEL32.dll_LoadLibraryW]<br>mov esi, eax<br>test esi, esi<br>jne 0x40a06a<br>push 5<br>pop eax<br>jmp 0x40a3f2<br>mov edi, dword[sym.imp.KERNEL32.dll_GetProcAddress]<br>push 0x6e<br>pop eax<br>push 0x72<br>mov byte[ebp-0x23], al<br>mov byte[ebp-0x20], al<br>pop eax<br>push 0x65<br>mov byte[ebp-0x1d], al<br>pop eax<br>mov byte[ebp-0x1c], al<br>mov byte[ebp-0x1b], al<br>lea eax, [ebp-0x28]<br>push eax<br>push esi<br>mov dword[ebp-0x28], 0x42637052<br>mov byte[ebp-0x24], 0x69<br>mov word[ebp-0x22], 0x6964<br>mov word[ebp-0x1f], 0x4667<br>mov byte[ebp-0x1a], bl<br>call edi<br>mov dword[ebp-0xcc], eax<br>test eax, eax<br>jne 0x40a0bd<br>mov eax, 0x6e8<br>jmp 0x40a3f2<br>movdqa xmm0, xmmword[0x41a880]<br>push 0x65<br>pop eax<br>mov byte[ebp-0xd6], al<br>lea eax, [ebp-0xec]<br>push eax<br>push esi<br>movdqu xmmword[ebp-0xec], xmm0<br>mov dword[ebp-0xdc], 0x706d6f43<br>mov word[ebp-0xd8], 0x736f<br>mov word[ebp-0xd5], 0x57<br>call edi<br>mov dword[ebp-0xc8], eax<br>test eax, eax<br>je 0x40a0b3<br>push 0x72<br>pop eax<br>push 0x65<br>mov byte[ebp-0x13], al<br>mov byte[ebp-0xe], al<br>pop eax<br>mov byte[ebp-0xd], al<br>mov byte[ebp-0xc], al<br>lea eax, [ebp-0x18]<br>push eax<br>push esi<br>mov dword[ebp-0x18], 0x53637052<br>mov byte[ebp-0x14], 0x74<br>mov dword[ebp-0x12], 0x46676e69<br>mov word[ebp-0xb], 0x57<br>call edi<br>mov dword[ebp-0xc4], eax<br>test eax, eax<br>je 0x40a0b3<br>push 0x63<br>pop eax<br>push 0x38<br>pop edi<br>push 0x62<br>mov word[ebp-0xc0], ax<br>pop eax<br>push 0x61<br>mov word[ebp-0xbc], ax<br>pop eax<br>push 0x37<br>mov word[ebp-0xba], ax<br>pop eax<br>push 0x33<br>mov word[ebp-0xb8], ax<br>pop eax<br>push 0x64<br>pop ecx<br>push 0x32<br>mov word[ebp-0xb6], ax<br>mov word[ebp-0xb4], cx<br>pop ecx<br>push 0x2d<br>pop edx<br>push 0x64<br>mov word[ebp-0xae], ax<br>pop eax<br>push 0x35<br>mov word[ebp-0xac], ax<br>pop eax<br>push 0x34<br>mov word[ebp-0xaa], ax<br>mov word[ebp-0xa8], ax<br>pop eax<br>push 0x39<br>mov word[ebp-0xa4], ax<br>mov word[ebp-0xb2], cx<br>mov word[ebp-0xa2], cx<br>pop ecx<br>push 0x63<br>pop eax<br>push 0x65<br>mov word[ebp-0x9e], ax<br>pop eax<br>push 0x61<br>mov word[ebp-0xbe], di<br>mov word[ebp-0x9a], di<br>pop edi<br>push 0x63<br>mov word[ebp-0xb0], dx<br>mov word[ebp-0xa6], dx<br>mov word[ebp-0x9c], dx<br>mov word[ebp-0x98], ax<br>mov word[ebp-0x92], dx<br>pop edx<br>push 0x34<br>pop eax<br>push 0x66<br>mov word[ebp-0x8e], ax<br>mov word[ebp-0x8c], ax<br>pop eax<br>push 0x30<br>mov word[ebp-0x8a], ax<br>pop eax<br>push 0x36<br>mov word[ebp-0x88], ax<br>mov word[ebp-0x86], ax<br>pop eax<br>push 0x66<br>mov word[ebp-0x94], di<br>pop edi<br>push edi<br>mov word[ebp-0x84], ax<br>mov word[ebp-0x80], ax<br>pop eax<br>mov word[ebp-0xa0], cx<br>mov word[ebp-0x96], cx<br>mov word[ebp-0x90], dx<br>mov word[ebp-0x82], di<br>mov word[ebp-0x7e], cx<br>mov word[ebp-0x7c], ax<br>push 0x6e<br>xor eax, eax<br>mov word[ebp-0x7a], dx<br>mov dword[ebp-0x78], eax<br>pop eax<br>push 0x61<br>pop edi<br>push 0x6c<br>mov word[ebp-0x3c], ax<br>pop eax<br>push 0x72<br>mov word[ebp-0x36], ax<br>pop eax<br>push 0x70<br>mov word[ebp-0x34], ax<br>pop eax<br>mov word[ebp-0x32], ax<br>xor eax, eax<br>mov dword[ebp-0x2e], eax<br>lea eax, [ebp-8]<br>push eax<br>push ebx<br>push ebx<br>push ebx<br>lea eax, [ebp-0x3c]<br>mov word[ebp-0x3a], dx<br>push eax<br>lea eax, [ebp-0xc0]<br>mov word[ebp-0x38], di<br>push eax<br>mov word[ebp-0x30], dx<br>call dword[ebp-0xc8]<br>mov edi, eax<br>test edi, edi<br>jne 0x40a3df<br>movdqa xmm0, xmmword[0x41a8a0]<br>push 0x72<br>pop eax<br>push 0x6e<br>mov byte[ebp-0x64], al<br>pop eax<br>push 0x64<br>pop ecx<br>mov byte[ebp-0x62], al<br>mov byte[ebp-0x5e], al<br>mov byte[ebp-0x5b], al<br>lea eax, [ebp-0x74]<br>push eax<br>push esi<br>movdqu xmmword[ebp-0x74], xmm0<br>mov byte[ebp-0x63], 0x69<br>mov word[ebp-0x61], 0x4267<br>mov byte[ebp-0x5f], 0x69<br>mov byte[ebp-0x5d], cl<br>mov byte[ebp-0x5c], 0x69<br>mov word[ebp-0x5a], 0x5767<br>mov byte[ebp-0x58], bl<br>call dword[sym.imp.KERNEL32.dll_GetProcAddress]<br>test eax, eax<br>je 0x40a0b3<br>lea ecx, [ebp-4]<br>push ecx<br>push dword[ebp-8]<br>call eax<br>mov edi, eax<br>cmp dword[ebp-8], ebx<br>je 0x40a33d<br>lea eax, [ebp-8]<br>push eax<br>call dword[ebp-0xc4]<br>test edi, edi<br>jne 0x40a3df<br>movdqa xmm0, xmmword[0x41a8b0]<br>push 0x6e<br>pop eax<br>push 0x66<br>mov byte[ebp-0xf6], al<br>pop eax<br>mov byte[ebp-0xf5], al<br>lea eax, [ebp-0x108]<br>push eax<br>push esi<br>mov dword[ebp-0x118], 1<br>mov dword[ebp-0x10c], 3<br>mov dword[ebp-0x114], ebx<br>mov dword[ebp-0x110], ebx<br>movdqu xmmword[ebp-0x108], xmm0<br>mov word[ebp-0xf8], 0x4968<br>mov dword[ebp-0xf4], 0x5778456f<br>mov byte[ebp-0xf0], bl<br>call dword[sym.imp.KERNEL32.dll_GetProcAddress]<br>test eax, eax<br>je 0x40a0b3<br>lea ecx, [ebp-0x118]<br>push ecx<br>push ebx<br>push ebx<br>push 0xa<br>push 6<br>push ebx<br>push dword[ebp-4]<br>call eax<br>mov edi, eax<br>test edi, edi<br>jne 0x40a3df<br>mov ecx, dword[ebp-0xd0]<br>mov eax, dword[ebp-4]<br>mov dword[ebp-4], ebx<br>mov dword[ecx], eax<br>jmp 0x40a3e2<br>mov ebx, dword[ebp-4]<br>test ebx, ebx<br>je 0x40a3f0<br>lea eax, [ebp-4]<br>push eax<br>call dword[ebp-0xcc]<br>mov eax, edi<br>pop edi<br>pop esi<br>pop ebx<br>mov esp, ebp<br>pop ebp<br>ret <br><eoc> ', 'point { fill-color: #e0440e; }'],
[681.0704345703125, 967.7770385742188, '<b><a href="/report/fcn.004032c8@470263fe7e7cc115b95cd041d643e3b5">fcn.004032c8</a><br>@470263fe7e7cc115b95cd041d643e3b5</b><br>push ebp<br>mov ebp, esp<br>sub esp, 0x38<br>push ebx<br>push 0x6b<br>pop eax<br>push 0x65<br>pop ebx<br>push 0x72<br>movdqa xmm0, xmmword[str.Wow64RevertWow64Wow64DisableWow6RpcStringBindingNtSetInformationRpcBindingFromStRpcBindingSetAutH]<br>mov dword[ebp-4], ecx<br>pop ecx<br>push 0x6e<br>pop edx<br>push 0x6c<br>mov word[ebp-0x18], ax<br>pop eax<br>push 0x33<br>mov word[ebp-0xe], ax<br>pop eax<br>mov word[ebp-0xc], ax<br>push 0x32<br>pop eax<br>mov word[ebp-0xa], ax<br>xor eax, eax<br>mov dword[ebp-8], eax<br>mov byte[ebp-0x1b], al<br>mov eax, dword[0x4232f8]<br>mov word[ebp-0x16], bx<br>mov word[ebp-0x10], bx<br>mov byte[ebp-0x25], bl<br>mov byte[ebp-0x21], bl<br>mov word[ebp-0x14], cx<br>mov word[ebp-0x12], dx<br>mov word[ebp-0x28], 0x7346<br>mov byte[ebp-0x26], 0x52<br>mov word[ebp-0x24], 0x6964<br>mov byte[ebp-0x22], cl<br>mov dword[ebp-0x20], 0x6f697463<br>mov byte[ebp-0x1c], dl<br>movdqu xmmword[ebp-0x38], xmm0<br>pop ebx<br>test eax, eax<br>jne 0x403367<br>lea eax, [ebp-0x38]<br>push eax<br>lea eax, [ebp-0x18]<br>push eax<br>call dword[sym.imp.KERNEL32.dll_GetModuleHandleW]<br>push eax<br>call dword[sym.imp.KERNEL32.dll_GetProcAddress]<br>mov dword[0x4232f8], eax<br>test eax, eax<br>je 0x40336d<br>lea ecx, [ebp-4]<br>push ecx<br>call eax<br>mov esp, ebp<br>pop ebp<br>ret <br><eoc> ', 'null'],
[803.2594604492188, 936.7009887695312, '<b><a href="/report/fcn.00403371@470263fe7e7cc115b95cd041d643e3b5">fcn.00403371</a><br>@470263fe7e7cc115b95cd041d643e3b5</b><br>push ebp<br>mov ebp, esp<br>sub esp, 0x38<br>push ebx<br>push 0x6b<br>pop eax<br>push 0x65<br>pop ebx<br>push 0x72<br>movdqa xmm0, xmmword[0x41a870]<br>mov dword[ebp-4], ecx<br>pop ecx<br>push 0x6e<br>pop edx<br>push 0x6c<br>mov word[ebp-0x18], ax<br>pop eax<br>push 0x33<br>mov word[ebp-0xe], ax<br>pop eax<br>mov word[ebp-0xc], ax<br>push 0x32<br>pop eax<br>mov word[ebp-0xa], ax<br>xor eax, eax<br>mov dword[ebp-8], eax<br>mov byte[ebp-0x1a], al<br>mov eax, dword[0x4232f0]<br>mov word[ebp-0x16], bx<br>mov word[ebp-0x10], bx<br>mov byte[ebp-0x24], bl<br>mov byte[ebp-0x20], bl<br>mov word[ebp-0x14], cx<br>mov word[ebp-0x12], dx<br>mov dword[ebp-0x28], 0x52734634<br>mov word[ebp-0x23], 0x6964<br>mov byte[ebp-0x21], cl<br>mov dword[ebp-0x1f], 0x6f697463<br>mov byte[ebp-0x1b], dl<br>movdqu xmmword[ebp-0x38], xmm0<br>pop ebx<br>test eax, eax<br>jne 0x40340d<br>lea eax, [ebp-0x38]<br>push eax<br>lea eax, [ebp-0x18]<br>push eax<br>call dword[sym.imp.KERNEL32.dll_GetModuleHandleW]<br>push eax<br>call dword[sym.imp.KERNEL32.dll_GetProcAddress]<br>mov dword[0x4232f0], eax<br>test eax, eax<br>je 0x403413<br>lea ecx, [ebp-4]<br>push ecx<br>call eax<br>mov esp, ebp<br>pop ebp<br>ret <br><eoc> ', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
sub esp, 0x118
push ebx
push esi
push edi
xor eax, eax
mov dword[ebp-0xd0], ecx
lea edi, [ebp-0x118]
xor ebx, ebx
stosd dword
push 0x72
mov dword[ebp-8], ebx
mov dword[ebp-4], ebx
stosd dword
stosd dword
stosd dword
pop eax
push 0x70
pop ecx
push 0x63
mov word[ebp-0x54], ax
mov word[ebp-0x4e], ax
mov word[ebp-0x52], cx
pop ecx
push 0x74
pop eax
push 0x34
mov word[ebp-0x4c], ax
pop eax
push 0x2e
mov word[ebp-0x4a], ax
pop eax
push 0x64
mov word[ebp-0x48], ax
pop eax
mov word[ebp-0x46], ax
push 0x6c
pop eax
mov word[ebp-0x44], ax
mov word[ebp-0x42], ax
xor eax, eax
mov dword[ebp-0x40], eax
lea eax, [ebp-0x54]
push eax
mov word[ebp-0x50], cx
call dword[sym.imp.KERNEL32.dll_LoadLibraryW]
mov esi, eax
test esi, esi
jne 0x40a06a
push 5
pop eax
jmp 0x40a3f2
mov edi, dword[sym.imp.KERNEL32.dll_GetProcAddress]
push 0x6e
pop eax
push 0x72
mov byte[ebp-0x23], al
mov byte[ebp-0x20], al
pop eax
push 0x65
mov byte[ebp-0x1d], al
pop eax
mov byte[ebp-0x1c], al
mov byte[ebp-0x1b], al
lea eax, [ebp-0x28]
push eax
push esi
mov dword[ebp-0x28], 0x42637052
mov byte[ebp-0x24], 0x69
mov word[ebp-0x22], 0x6964
mov word[ebp-0x1f], 0x4667
mov byte[ebp-0x1a], bl
call edi
mov dword[ebp-0xcc], eax
test eax, eax
jne 0x40a0bd
mov eax, 0x6e8
jmp 0x40a3f2
movdqa xmm0, xmmword[0x41a880]
push 0x65
pop eax
mov byte[ebp-0xd6], al
lea eax, [ebp-0xec]
push eax
push esi
movdqu xmmword[ebp-0xec], xmm0
mov dword[ebp-0xdc], 0x706d6f43
mov word[ebp-0xd8], 0x736f
mov word[ebp-0xd5], 0x57
call edi
mov dword[ebp-0xc8], eax
test eax, eax
je 0x40a0b3
push 0x72
pop eax
push 0x65
mov byte[ebp-0x13], al
mov byte[ebp-0xe], al
pop eax
mov byte[ebp-0xd], al
mov byte[ebp-0xc], al
lea eax, [ebp-0x18]
push eax
push esi
mov dword[ebp-0x18], 0x53637052
mov byte[ebp-0x14], 0x74
mov dword[ebp-0x12], 0x46676e69
mov word[ebp-0xb], 0x57
call edi
mov dword[ebp-0xc4], eax
test eax, eax
je 0x40a0b3
push 0x63
pop eax
push 0x38
pop edi
push 0x62
mov word[ebp-0xc0], ax
pop eax
push 0x61
mov word[ebp-0xbc], ax
pop eax
push 0x37
mov word[ebp-0xba], ax
pop eax
push 0x33
mov word[ebp-0xb8], ax
pop eax
push 0x64
pop ecx
push 0x32
mov word[ebp-0xb6], ax
mov word[ebp-0xb4], cx
pop ecx
push 0x2d
pop edx
push 0x64
mov word[ebp-0xae], ax
pop eax
push 0x35
mov word[ebp-0xac], ax
pop eax
push 0x34
mov word[ebp-0xaa], ax
mov word[ebp-0xa8], ax
pop eax
push 0x39
mov word[ebp-0xa4], ax
mov word[ebp-0xb2], cx
mov word[ebp-0xa2], cx
pop ecx
push 0x63
pop eax
push 0x65
mov word[ebp-0x9e], ax
pop eax
push 0x61
mov word[ebp-0xbe], di
mov word[ebp-0x9a], di
pop edi
push 0x63
mov word[ebp-0xb0], dx
mov word[ebp-0xa6], dx
mov word[ebp-0x9c], dx
mov word[ebp-0x98], ax
mov word[ebp-0x92], dx
pop edx
push 0x34
pop eax
push 0x66
mov word[ebp-0x8e], ax
mov word[ebp-0x8c], ax
pop eax
push 0x30
mov word[ebp-0x8a], ax
pop eax
push 0x36
mov word[ebp-0x88], ax
mov word[ebp-0x86], ax
pop eax
push 0x66
mov word[ebp-0x94], di
pop edi
push edi
mov word[ebp-0x84], ax
mov word[ebp-0x80], ax
pop eax
mov word[ebp-0xa0], cx
mov word[ebp-0x96], cx
mov word[ebp-0x90], dx
mov word[ebp-0x82], di
mov word[ebp-0x7e], cx
mov word[ebp-0x7c], ax
push 0x6e
xor eax, eax
mov word[ebp-0x7a], dx
mov dword[ebp-0x78], eax
pop eax
push 0x61
pop edi
push 0x6c
mov word[ebp-0x3c], ax
pop eax
push 0x72
mov word[ebp-0x36], ax
pop eax
push 0x70
mov word[ebp-0x34], ax
pop eax
mov word[ebp-0x32], ax
xor eax, eax
mov dword[ebp-0x2e], eax
lea eax, [ebp-8]
push eax
push ebx
push ebx
push ebx
lea eax, [ebp-0x3c]
mov word[ebp-0x3a], dx
push eax
lea eax, [ebp-0xc0]
mov word[ebp-0x38], di
push eax
mov word[ebp-0x30], dx
call dword[ebp-0xc8]
mov edi, eax
test edi, edi
jne 0x40a3df
movdqa xmm0, xmmword[0x41a8a0]
push 0x72
pop eax
push 0x6e
mov byte[ebp-0x64], al
pop eax
push 0x64
pop ecx
mov byte[ebp-0x62], al
mov byte[ebp-0x5e], al
mov byte[ebp-0x5b], al
lea eax, [ebp-0x74]
push eax
push esi
movdqu xmmword[ebp-0x74], xmm0
mov byte[ebp-0x63], 0x69
mov word[ebp-0x61], 0x4267
mov byte[ebp-0x5f], 0x69
mov byte[ebp-0x5d], cl
mov byte[ebp-0x5c], 0x69
mov word[ebp-0x5a], 0x5767
mov byte[ebp-0x58], bl
call dword[sym.imp.KERNEL32.dll_GetProcAddress]
test eax, eax
je 0x40a0b3
lea ecx, [ebp-4]
push ecx
push dword[ebp-8]
call eax
mov edi, eax
cmp dword[ebp-8], ebx
je 0x40a33d
lea eax, [ebp-8]
push eax
call dword[ebp-0xc4]
test edi, edi
jne 0x40a3df
movdqa xmm0, xmmword[0x41a8b0]
push 0x6e
pop eax
push 0x66
mov byte[ebp-0xf6], al
pop eax
mov byte[ebp-0xf5], al
lea eax, [ebp-0x108]
push eax
push esi
mov dword[ebp-0x118], 1
mov dword[ebp-0x10c], 3
mov dword[ebp-0x114], ebx
mov dword[ebp-0x110], ebx
movdqu xmmword[ebp-0x108], xmm0
mov word[ebp-0xf8], 0x4968
mov dword[ebp-0xf4], 0x5778456f
mov byte[ebp-0xf0], bl
call dword[sym.imp.KERNEL32.dll_GetProcAddress]
test eax, eax
je 0x40a0b3
lea ecx, [ebp-0x118]
push ecx
push ebx
push ebx
push 0xa
push 6
push ebx
push dword[ebp-4]
call eax
mov edi, eax
test edi, edi
jne 0x40a3df
mov ecx, dword[ebp-0xd0]
mov eax, dword[ebp-4]
mov dword[ebp-4], ebx
mov dword[ecx], eax
jmp 0x40a3e2
mov ebx, dword[ebp-4]
test ebx, ebx
je 0x40a3f0
lea eax, [ebp-4]
push eax
call dword[ebp-0xcc]
mov eax, edi
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/470263fe7e7cc115b95cd041d643e3b5