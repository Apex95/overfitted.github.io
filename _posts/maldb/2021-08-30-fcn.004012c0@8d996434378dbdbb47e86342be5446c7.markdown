---
layout: post
title:  "fcn.004012c0 @ 8d996434378dbdbb47e86342be5446c7"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.004012c0
- **Origin (md5):** 8d996434378dbdbb47e86342be5446c7
- **VirusTotal:** [virustotal.com/gui/file/8d996434378dbdbb47e86342be5446c7][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-3419.9443359375, -917.7584838867188, '<b><a href="/report/fcn.004012c0@8d996434378dbdbb47e86342be5446c7">fcn.004012c0</a><br>@8d996434378dbdbb47e86342be5446c7</b><br>', 'point { fill-color: #e0440e; }'],
[3419.9443359375, 917.7583618164062, '<b><a href="/report/fcn.004012c0@c2f40b3bc10e39d3d975422ee4d09bab">fcn.004012c0</a><br>@c2f40b3bc10e39d3d975422ee4d09bab</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
sub esp, 0x70
mov eax, dword[0x4f4070]
xor eax, ebp
mov dword[ebp-4], eax
mov dword[ebp-0x60], 0xd50b6470
mov eax, 4
shl eax, 1
lea ecx, [ebp-0x4c]
mov dword[ebp+eax-0x40], ecx
mov edx, dword[0x4eb2fc]
mov dword[ebp-0x18], edx
mov eax, dword[0x4eb300]
mov dword[ebp-0x14], eax
mov ecx, dword[0x4eb304]
mov dword[ebp-0x10], ecx
mov edx, dword[0x4eb308]
mov dword[ebp-0xc], edx
mov al, byte[0x4eb30c]
mov byte[ebp-8], al
mov ecx, 4
imul edx, ecx, 0
mov eax, dword[ebp+edx-0x18]
mov dword[ebp-0x58], eax
mov ecx, 4
shl ecx, 0
mov edx, dword[ebp+ecx-0x18]
mov dword[ebp-0x5c], edx
mov eax, 4
shl eax, 1
mov ecx, dword[ebp+eax-0x18]
mov dword[ebp-0x50], ecx
mov edx, 4
imul eax, edx, 3
mov ecx, dword[ebp+eax-0x18]
mov dword[ebp-0x54], ecx
mov edx, dword[ebp+8]
mov dword[ebp-0x64], edx
lea eax, [ebp-0x64]
mov dword[ebp-0x6c], eax
mov dword[ebp-0x68], 0
jmp off.b182
mov ecx, dword[ebp-0x6c]
mov edx, dword[ecx]
add edx, 8
mov eax, dword[ebp-0x6c]
mov dword[eax], edx
mov ecx, dword[ebp-0x68]
add ecx, 1
mov dword[ebp-0x68], ecx
mov edx, dword[ebp-0x68]
cmp edx, dword[ebp+0xc]
jae off.b3656
mov eax, 4
shl eax, 1
mov ecx, dword[ebp+eax-0x40]
mov dword[ecx], 0xa16c8e00
mov edx, 4
imul eax, edx, 0
mov ecx, dword[ebp-0x64]
mov edx, dword[ecx+eax]
mov dword[ebp-0x44], edx
mov eax, 4
shl eax, 0
mov ecx, dword[ebp-0x64]
mov edx, dword[ecx+eax]
mov dword[ebp-0x48], edx
mov eax, dword[ebp-0x44]
shl eax, 4
add eax, dword[ebp-0x50]
mov ecx, 4
shl ecx, 1
mov edx, dword[ebp+ecx-0x40]
mov ecx, dword[edx]
add ecx, dword[ebp-0x44]
xor eax, ecx
mov edx, dword[ebp-0x44]
shr edx, 5
add edx, dword[ebp-0x54]
xor eax, edx
mov ecx, dword[ebp-0x48]
sub ecx, eax
mov dword[ebp-0x48], ecx
mov edx, dword[ebp-0x48]
shl edx, 4
add edx, dword[ebp-0x58]
mov eax, 4
shl eax, 1
mov ecx, dword[ebp+eax-0x40]
mov eax, dword[ecx]
add eax, dword[ebp-0x48]
xor edx, eax
mov ecx, dword[ebp-0x48]
shr ecx, 5
add ecx, dword[ebp-0x5c]
xor edx, ecx
mov eax, dword[ebp-0x44]
sub eax, edx
mov dword[ebp-0x44], eax
mov ecx, dword[ebp-0x4c]
sub ecx, dword[ebp-0x60]
mov dword[ebp-0x4c], ecx
mov edx, dword[ebp-0x44]
shl edx, 4
add edx, dword[ebp-0x50]
mov eax, 4
shl eax, 1
mov ecx, dword[ebp+eax-0x40]
mov eax, dword[ecx]
add eax, dword[ebp-0x44]
xor edx, eax
mov ecx, dword[ebp-0x44]
shr ecx, 5
add ecx, dword[ebp-0x54]
xor edx, ecx
mov eax, dword[ebp-0x48]
sub eax, edx
mov dword[ebp-0x48], eax
mov ecx, dword[ebp-0x48]
shl ecx, 4
add ecx, dword[ebp-0x58]
mov edx, 4
shl edx, 1
mov eax, dword[ebp+edx-0x40]
mov edx, dword[eax]
add edx, dword[ebp-0x48]
xor ecx, edx
mov eax, dword[ebp-0x48]
shr eax, 5
add eax, dword[ebp-0x5c]
xor ecx, eax
mov edx, dword[ebp-0x44]
sub edx, ecx
mov dword[ebp-0x44], edx
mov eax, dword[ebp-0x4c]
sub eax, dword[ebp-0x60]
mov dword[ebp-0x4c], eax
mov ecx, dword[ebp-0x44]
shl ecx, 4
add ecx, dword[ebp-0x50]
mov edx, 4
shl edx, 1
mov eax, dword[ebp+edx-0x40]
mov edx, dword[eax]
add edx, dword[ebp-0x44]
xor ecx, edx
mov eax, dword[ebp-0x44]
shr eax, 5
add eax, dword[ebp-0x54]
xor ecx, eax
mov edx, dword[ebp-0x48]
sub edx, ecx
mov dword[ebp-0x48], edx
mov eax, dword[ebp-0x48]
shl eax, 4
add eax, dword[ebp-0x58]
mov ecx, 4
shl ecx, 1
mov edx, dword[ebp+ecx-0x40]
mov ecx, dword[edx]
add ecx, dword[ebp-0x48]
xor eax, ecx
mov edx, dword[ebp-0x48]
shr edx, 5
add edx, dword[ebp-0x5c]
xor eax, edx
mov ecx, dword[ebp-0x44]
sub ecx, eax
mov dword[ebp-0x44], ecx
mov edx, dword[ebp-0x4c]
sub edx, dword[ebp-0x60]
mov dword[ebp-0x4c], edx
mov eax, dword[ebp-0x44]
shl eax, 4
add eax, dword[ebp-0x50]
mov ecx, 4
shl ecx, 1
mov edx, dword[ebp+ecx-0x40]
mov ecx, dword[edx]
add ecx, dword[ebp-0x44]
xor eax, ecx
mov edx, dword[ebp-0x44]
shr edx, 5
add edx, dword[ebp-0x54]
xor eax, edx
mov ecx, dword[ebp-0x48]
sub ecx, eax
mov dword[ebp-0x48], ecx
mov edx, dword[ebp-0x48]
shl edx, 4
add edx, dword[ebp-0x58]
mov eax, 4
shl eax, 1
mov ecx, dword[ebp+eax-0x40]
mov eax, dword[ecx]
add eax, dword[ebp-0x48]
xor edx, eax
mov ecx, dword[ebp-0x48]
shr ecx, 5
add ecx, dword[ebp-0x5c]
xor edx, ecx
mov eax, dword[ebp-0x44]
sub eax, edx
mov dword[ebp-0x44], eax
mov ecx, dword[ebp-0x4c]
sub ecx, dword[ebp-0x60]
mov dword[ebp-0x4c], ecx
mov edx, dword[ebp-0x44]
shl edx, 4
add edx, dword[ebp-0x50]
mov eax, 4
shl eax, 1
mov ecx, dword[ebp+eax-0x40]
mov eax, dword[ecx]
add eax, dword[ebp-0x44]
xor edx, eax
mov ecx, dword[ebp-0x44]
shr ecx, 5
add ecx, dword[ebp-0x54]
xor edx, ecx
mov eax, dword[ebp-0x48]
sub eax, edx
mov dword[ebp-0x48], eax
mov ecx, dword[ebp-0x48]
shl ecx, 4
add ecx, dword[ebp-0x58]
mov edx, 4
shl edx, 1
mov eax, dword[ebp+edx-0x40]
mov edx, dword[eax]
add edx, dword[ebp-0x48]
xor ecx, edx
mov eax, dword[ebp-0x48]
shr eax, 5
add eax, dword[ebp-0x5c]
xor ecx, eax
mov edx, dword[ebp-0x44]
sub edx, ecx
mov dword[ebp-0x44], edx
mov eax, dword[ebp-0x4c]
sub eax, dword[ebp-0x60]
mov dword[ebp-0x4c], eax
mov ecx, dword[ebp-0x44]
shl ecx, 4
add ecx, dword[ebp-0x50]
mov edx, 4
shl edx, 1
mov eax, dword[ebp+edx-0x40]
mov edx, dword[eax]
add edx, dword[ebp-0x44]
xor ecx, edx
mov eax, dword[ebp-0x44]
shr eax, 5
add eax, dword[ebp-0x54]
xor ecx, eax
mov edx, dword[ebp-0x48]
sub edx, ecx
mov dword[ebp-0x48], edx
mov eax, dword[ebp-0x48]
shl eax, 4
add eax, dword[ebp-0x58]
mov ecx, 4
shl ecx, 1
mov edx, dword[ebp+ecx-0x40]
mov ecx, dword[edx]
add ecx, dword[ebp-0x48]
xor eax, ecx
mov edx, dword[ebp-0x48]
shr edx, 5
add edx, dword[ebp-0x5c]
xor eax, edx
mov ecx, dword[ebp-0x44]
sub ecx, eax
mov dword[ebp-0x44], ecx
mov edx, dword[ebp-0x4c]
sub edx, dword[ebp-0x60]
mov dword[ebp-0x4c], edx
push 0
call dword[sym.imp.USER32.dll_GetDC]
mov dword[ebp-0x70], eax
cmp dword[ebp-0x70], 0
jne off.b969
mov eax, dword[ebp-0x44]
shl eax, 4
add eax, dword[ebp-0x50]
mov ecx, 4
shl ecx, 1
mov edx, dword[ebp+ecx-0x40]
mov ecx, dword[edx]
add ecx, dword[ebp-0x44]
xor eax, ecx
mov edx, dword[ebp-0x44]
shr edx, 5
add edx, dword[ebp-0x54]
xor eax, edx
mov ecx, dword[ebp-0x48]
sub ecx, eax
mov dword[ebp-0x48], ecx
mov edx, dword[ebp-0x48]
shl edx, 4
add edx, dword[ebp-0x58]
mov eax, 4
shl eax, 1
mov ecx, dword[ebp+eax-0x40]
mov eax, dword[ecx]
add eax, dword[ebp-0x48]
xor edx, eax
mov ecx, dword[ebp-0x48]
shr ecx, 5
add ecx, dword[ebp-0x5c]
xor edx, ecx
mov eax, dword[ebp-0x44]
sub eax, edx
mov dword[ebp-0x44], eax
mov ecx, dword[ebp-0x4c]
sub ecx, dword[ebp-0x60]
mov dword[ebp-0x4c], ecx
mov edx, dword[ebp-0x44]
shl edx, 4
add edx, dword[ebp-0x50]
mov eax, 4
shl eax, 1
mov ecx, dword[ebp+eax-0x40]
mov eax, dword[ecx]
add eax, dword[ebp-0x44]
xor edx, eax
mov ecx, dword[ebp-0x44]
shr ecx, 5
add ecx, dword[ebp-0x54]
xor edx, ecx
mov eax, dword[ebp-0x48]
sub eax, edx
mov dword[ebp-0x48], eax
mov ecx, dword[ebp-0x48]
shl ecx, 4
add ecx, dword[ebp-0x58]
mov edx, 4
shl edx, 1
mov eax, dword[ebp+edx-0x40]
mov edx, dword[eax]
add edx, dword[ebp-0x48]
xor ecx, edx
mov eax, dword[ebp-0x48]
shr eax, 5
add eax, dword[ebp-0x5c]
xor ecx, eax
mov edx, dword[ebp-0x44]
sub edx, ecx
mov dword[ebp-0x44], edx
mov eax, dword[ebp-0x4c]
sub eax, dword[ebp-0x60]
mov dword[ebp-0x4c], eax
mov ecx, dword[ebp-0x44]
shl ecx, 4
add ecx, dword[ebp-0x50]
mov edx, 4
shl edx, 1
mov eax, dword[ebp+edx-0x40]
mov edx, dword[eax]
add edx, dword[ebp-0x44]
xor ecx, edx
mov eax, dword[ebp-0x44]
shr eax, 5
add eax, dword[ebp-0x54]
xor ecx, eax
mov edx, dword[ebp-0x48]
sub edx, ecx
mov dword[ebp-0x48], edx
mov eax, dword[ebp-0x48]
shl eax, 4
add eax, dword[ebp-0x58]
mov ecx, 4
shl ecx, 1
mov edx, dword[ebp+ecx-0x40]
mov ecx, dword[edx]
add ecx, dword[ebp-0x48]
xor eax, ecx
mov edx, dword[ebp-0x48]
shr edx, 5
add edx, dword[ebp-0x5c]
xor eax, edx
mov ecx, dword[ebp-0x44]
sub ecx, eax
mov dword[ebp-0x44], ecx
mov edx, dword[ebp-0x4c]
sub edx, dword[ebp-0x60]
mov dword[ebp-0x4c], edx
mov eax, dword[ebp-0x44]
shl eax, 4
add eax, dword[ebp-0x50]
mov ecx, 4
shl ecx, 1
mov edx, dword[ebp+ecx-0x40]
mov ecx, dword[edx]
add ecx, dword[ebp-0x44]
xor eax, ecx
mov edx, dword[ebp-0x44]
shr edx, 5
add edx, dword[ebp-0x54]
xor eax, edx
mov ecx, dword[ebp-0x48]
sub ecx, eax
mov dword[ebp-0x48], ecx
mov edx, dword[ebp-0x48]
shl edx, 4
add edx, dword[ebp-0x58]
mov eax, 4
shl eax, 1
mov ecx, dword[ebp+eax-0x40]
mov eax, dword[ecx]
add eax, dword[ebp-0x48]
xor edx, eax
mov ecx, dword[ebp-0x48]
shr ecx, 5
add ecx, dword[ebp-0x5c]
xor edx, ecx
mov eax, dword[ebp-0x44]
sub eax, edx
mov dword[ebp-0x44], eax
mov ecx, dword[ebp-0x4c]
sub ecx, dword[ebp-0x60]
mov dword[ebp-0x4c], ecx
mov edx, dword[ebp-0x44]
shl edx, 4
add edx, dword[ebp-0x50]
mov eax, 4
shl eax, 1
mov ecx, dword[ebp+eax-0x40]
mov eax, dword[ecx]
add eax, dword[ebp-0x44]
xor edx, eax
mov ecx, dword[ebp-0x44]
shr ecx, 5
add ecx, dword[ebp-0x54]
xor edx, ecx
mov eax, dword[ebp-0x48]
sub eax, edx
mov dword[ebp-0x48], eax
mov ecx, dword[ebp-0x48]
shl ecx, 4
add ecx, dword[ebp-0x58]
mov edx, 4
shl edx, 1
mov eax, dword[ebp+edx-0x40]
mov edx, dword[eax]
add edx, dword[ebp-0x48]
xor ecx, edx
mov eax, dword[ebp-0x48]
shr eax, 5
add eax, dword[ebp-0x5c]
xor ecx, eax
mov edx, dword[ebp-0x44]
sub edx, ecx
mov dword[ebp-0x44], edx
mov eax, dword[ebp-0x4c]
sub eax, dword[ebp-0x60]
mov dword[ebp-0x4c], eax
mov ecx, dword[ebp-0x44]
shl ecx, 4
add ecx, dword[ebp-0x50]
mov edx, 4
shl edx, 1
mov eax, dword[ebp+edx-0x40]
mov edx, dword[eax]
add edx, dword[ebp-0x44]
xor ecx, edx
mov eax, dword[ebp-0x44]
shr eax, 5
add eax, dword[ebp-0x54]
xor ecx, eax
mov edx, dword[ebp-0x48]
sub edx, ecx
mov dword[ebp-0x48], edx
mov eax, dword[ebp-0x48]
shl eax, 4
add eax, dword[ebp-0x58]
mov ecx, 4
shl ecx, 1
mov edx, dword[ebp+ecx-0x40]
mov ecx, dword[edx]
add ecx, dword[ebp-0x48]
xor eax, ecx
mov edx, dword[ebp-0x48]
shr edx, 5
add edx, dword[ebp-0x5c]
xor eax, edx
mov ecx, dword[ebp-0x44]
sub ecx, eax
mov dword[ebp-0x44], ecx
mov edx, dword[ebp-0x4c]
sub edx, dword[ebp-0x60]
mov dword[ebp-0x4c], edx
mov eax, dword[ebp-0x44]
shl eax, 4
add eax, dword[ebp-0x50]
mov ecx, 4
shl ecx, 1
mov edx, dword[ebp+ecx-0x40]
mov ecx, dword[edx]
add ecx, dword[ebp-0x44]
xor eax, ecx
mov edx, dword[ebp-0x44]
shr edx, 5
add edx, dword[ebp-0x54]
xor eax, edx
mov ecx, dword[ebp-0x48]
sub ecx, eax
mov dword[ebp-0x48], ecx
mov edx, dword[ebp-0x48]
shl edx, 4
add edx, dword[ebp-0x58]
mov eax, 4
shl eax, 1
mov ecx, dword[ebp+eax-0x40]
mov eax, dword[ecx]
add eax, dword[ebp-0x48]
xor edx, eax
mov ecx, dword[ebp-0x48]
shr ecx, 5
add ecx, dword[ebp-0x5c]
xor edx, ecx
mov eax, dword[ebp-0x44]
sub eax, edx
mov dword[ebp-0x44], eax
mov ecx, dword[ebp-0x4c]
sub ecx, dword[ebp-0x60]
mov dword[ebp-0x4c], ecx
mov edx, dword[ebp-0x44]
shl edx, 4
add edx, dword[ebp-0x50]
mov eax, 4
shl eax, 1
mov ecx, dword[ebp+eax-0x40]
mov eax, dword[ecx]
add eax, dword[ebp-0x44]
xor edx, eax
mov ecx, dword[ebp-0x44]
shr ecx, 5
add ecx, dword[ebp-0x54]
xor edx, ecx
mov eax, dword[ebp-0x48]
sub eax, edx
mov dword[ebp-0x48], eax
mov ecx, dword[ebp-0x48]
shl ecx, 4
add ecx, dword[ebp-0x58]
mov edx, 4
shl edx, 1
mov eax, dword[ebp+edx-0x40]
mov edx, dword[eax]
add edx, dword[ebp-0x48]
xor ecx, edx
mov eax, dword[ebp-0x48]
shr eax, 5
add eax, dword[ebp-0x5c]
xor ecx, eax
mov edx, dword[ebp-0x44]
sub edx, ecx
mov dword[ebp-0x44], edx
mov eax, dword[ebp-0x4c]
sub eax, dword[ebp-0x60]
mov dword[ebp-0x4c], eax
mov ecx, dword[ebp-0x44]
shl ecx, 4
add ecx, dword[ebp-0x50]
mov edx, 4
shl edx, 1
mov eax, dword[ebp+edx-0x40]
mov edx, dword[eax]
add edx, dword[ebp-0x44]
xor ecx, edx
mov eax, dword[ebp-0x44]
shr eax, 5
add eax, dword[ebp-0x54]
xor ecx, eax
mov edx, dword[ebp-0x48]
sub edx, ecx
mov dword[ebp-0x48], edx
mov eax, dword[ebp-0x48]
shl eax, 4
add eax, dword[ebp-0x58]
mov ecx, 4
shl ecx, 1
mov edx, dword[ebp+ecx-0x40]
mov ecx, dword[edx]
add ecx, dword[ebp-0x48]
xor eax, ecx
mov edx, dword[ebp-0x48]
shr edx, 5
add edx, dword[ebp-0x5c]
xor eax, edx
mov ecx, dword[ebp-0x44]
sub ecx, eax
mov dword[ebp-0x44], ecx
mov edx, dword[ebp-0x4c]
sub edx, dword[ebp-0x60]
mov dword[ebp-0x4c], edx
mov eax, dword[ebp-0x44]
shl eax, 4
add eax, dword[ebp-0x50]
mov ecx, 4
shl ecx, 1
mov edx, dword[ebp+ecx-0x40]
mov ecx, dword[edx]
add ecx, dword[ebp-0x44]
xor eax, ecx
mov edx, dword[ebp-0x44]
shr edx, 5
add edx, dword[ebp-0x54]
xor eax, edx
mov ecx, dword[ebp-0x48]
sub ecx, eax
mov dword[ebp-0x48], ecx
mov edx, dword[ebp-0x48]
shl edx, 4
add edx, dword[ebp-0x58]
mov eax, 4
shl eax, 1
mov ecx, dword[ebp+eax-0x40]
mov eax, dword[ecx]
add eax, dword[ebp-0x48]
xor edx, eax
mov ecx, dword[ebp-0x48]
shr ecx, 5
add ecx, dword[ebp-0x5c]
xor edx, ecx
mov eax, dword[ebp-0x44]
sub eax, edx
mov dword[ebp-0x44], eax
mov ecx, dword[ebp-0x4c]
sub ecx, dword[ebp-0x60]
mov dword[ebp-0x4c], ecx
mov edx, dword[ebp-0x44]
shl edx, 4
add edx, dword[ebp-0x50]
mov eax, 4
shl eax, 1
mov ecx, dword[ebp+eax-0x40]
mov eax, dword[ecx]
add eax, dword[ebp-0x44]
xor edx, eax
mov ecx, dword[ebp-0x44]
shr ecx, 5
add ecx, dword[ebp-0x54]
xor edx, ecx
mov eax, dword[ebp-0x48]
sub eax, edx
mov dword[ebp-0x48], eax
mov ecx, dword[ebp-0x48]
shl ecx, 4
add ecx, dword[ebp-0x58]
mov edx, 4
shl edx, 1
mov eax, dword[ebp+edx-0x40]
mov edx, dword[eax]
add edx, dword[ebp-0x48]
xor ecx, edx
mov eax, dword[ebp-0x48]
shr eax, 5
add eax, dword[ebp-0x5c]
xor ecx, eax
mov edx, dword[ebp-0x44]
sub edx, ecx
mov dword[ebp-0x44], edx
mov eax, dword[ebp-0x4c]
sub eax, dword[ebp-0x60]
mov dword[ebp-0x4c], eax
mov ecx, dword[ebp-0x44]
shl ecx, 4
add ecx, dword[ebp-0x50]
mov edx, 4
shl edx, 1
mov eax, dword[ebp+edx-0x40]
mov edx, dword[eax]
add edx, dword[ebp-0x44]
xor ecx, edx
mov eax, dword[ebp-0x44]
shr eax, 5
add eax, dword[ebp-0x54]
xor ecx, eax
mov edx, dword[ebp-0x48]
sub edx, ecx
mov dword[ebp-0x48], edx
mov eax, dword[ebp-0x48]
shl eax, 4
add eax, dword[ebp-0x58]
mov ecx, 4
shl ecx, 1
mov edx, dword[ebp+ecx-0x40]
mov ecx, dword[edx]
add ecx, dword[ebp-0x48]
xor eax, ecx
mov edx, dword[ebp-0x48]
shr edx, 5
add edx, dword[ebp-0x5c]
xor eax, edx
mov ecx, dword[ebp-0x44]
sub ecx, eax
mov dword[ebp-0x44], ecx
mov edx, dword[ebp-0x4c]
sub edx, dword[ebp-0x60]
mov dword[ebp-0x4c], edx
mov eax, dword[ebp-0x44]
shl eax, 4
add eax, dword[ebp-0x50]
mov ecx, 4
shl ecx, 1
mov edx, dword[ebp+ecx-0x40]
mov ecx, dword[edx]
add ecx, dword[ebp-0x44]
xor eax, ecx
mov edx, dword[ebp-0x44]
shr edx, 5
add edx, dword[ebp-0x54]
xor eax, edx
mov ecx, dword[ebp-0x48]
sub ecx, eax
mov dword[ebp-0x48], ecx
mov edx, dword[ebp-0x48]
shl edx, 4
add edx, dword[ebp-0x58]
mov eax, 4
shl eax, 1
mov ecx, dword[ebp+eax-0x40]
mov eax, dword[ecx]
add eax, dword[ebp-0x48]
xor edx, eax
mov ecx, dword[ebp-0x48]
shr ecx, 5
add ecx, dword[ebp-0x5c]
xor edx, ecx
mov eax, dword[ebp-0x44]
sub eax, edx
mov dword[ebp-0x44], eax
mov ecx, dword[ebp-0x4c]
sub ecx, dword[ebp-0x60]
mov dword[ebp-0x4c], ecx
mov edx, dword[ebp-0x44]
shl edx, 4
add edx, dword[ebp-0x50]
mov eax, 4
shl eax, 1
mov ecx, dword[ebp+eax-0x40]
mov eax, dword[ecx]
add eax, dword[ebp-0x44]
xor edx, eax
mov ecx, dword[ebp-0x44]
shr ecx, 5
add ecx, dword[ebp-0x54]
xor edx, ecx
mov eax, dword[ebp-0x48]
sub eax, edx
mov dword[ebp-0x48], eax
mov ecx, dword[ebp-0x48]
shl ecx, 4
add ecx, dword[ebp-0x58]
mov edx, 4
shl edx, 1
mov eax, dword[ebp+edx-0x40]
mov edx, dword[eax]
add edx, dword[ebp-0x48]
xor ecx, edx
mov eax, dword[ebp-0x48]
shr eax, 5
add eax, dword[ebp-0x5c]
xor ecx, eax
mov edx, dword[ebp-0x44]
sub edx, ecx
mov dword[ebp-0x44], edx
mov eax, dword[ebp-0x4c]
sub eax, dword[ebp-0x60]
mov dword[ebp-0x4c], eax
mov ecx, dword[ebp-0x44]
shl ecx, 4
add ecx, dword[ebp-0x50]
mov edx, 4
shl edx, 1
mov eax, dword[ebp+edx-0x40]
mov edx, dword[eax]
add edx, dword[ebp-0x44]
xor ecx, edx
mov eax, dword[ebp-0x44]
shr eax, 5
add eax, dword[ebp-0x54]
xor ecx, eax
mov edx, dword[ebp-0x48]
sub edx, ecx
mov dword[ebp-0x48], edx
mov eax, dword[ebp-0x48]
shl eax, 4
add eax, dword[ebp-0x58]
mov ecx, 4
shl ecx, 1
mov edx, dword[ebp+ecx-0x40]
mov ecx, dword[edx]
add ecx, dword[ebp-0x48]
xor eax, ecx
mov edx, dword[ebp-0x48]
shr edx, 5
add edx, dword[ebp-0x5c]
xor eax, edx
mov ecx, dword[ebp-0x44]
sub ecx, eax
mov dword[ebp-0x44], ecx
mov edx, dword[ebp-0x4c]
sub edx, dword[ebp-0x60]
mov dword[ebp-0x4c], edx
mov eax, dword[ebp-0x44]
shl eax, 4
add eax, dword[ebp-0x50]
mov ecx, 4
shl ecx, 1
mov edx, dword[ebp+ecx-0x40]
mov ecx, dword[edx]
add ecx, dword[ebp-0x44]
xor eax, ecx
mov edx, dword[ebp-0x44]
shr edx, 5
add edx, dword[ebp-0x54]
xor eax, edx
mov ecx, dword[ebp-0x48]
sub ecx, eax
mov dword[ebp-0x48], ecx
mov edx, dword[ebp-0x48]
shl edx, 4
add edx, dword[ebp-0x58]
mov eax, 4
shl eax, 1
mov ecx, dword[ebp+eax-0x40]
mov eax, dword[ecx]
add eax, dword[ebp-0x48]
xor edx, eax
mov ecx, dword[ebp-0x48]
shr ecx, 5
add ecx, dword[ebp-0x5c]
xor edx, ecx
mov eax, dword[ebp-0x44]
sub eax, edx
mov dword[ebp-0x44], eax
mov ecx, dword[ebp-0x4c]
sub ecx, dword[ebp-0x60]
mov dword[ebp-0x4c], ecx
mov edx, dword[ebp-0x44]
shl edx, 4
add edx, dword[ebp-0x50]
mov eax, 4
shl eax, 1
mov ecx, dword[ebp+eax-0x40]
mov eax, dword[ecx]
add eax, dword[ebp-0x44]
xor edx, eax
mov ecx, dword[ebp-0x44]
shr ecx, 5
add ecx, dword[ebp-0x54]
xor edx, ecx
mov eax, dword[ebp-0x48]
sub eax, edx
mov dword[ebp-0x48], eax
mov ecx, dword[ebp-0x48]
shl ecx, 4
add ecx, dword[ebp-0x58]
mov edx, 4
shl edx, 1
mov eax, dword[ebp+edx-0x40]
mov edx, dword[eax]
add edx, dword[ebp-0x48]
xor ecx, edx
mov eax, dword[ebp-0x48]
shr eax, 5
add eax, dword[ebp-0x5c]
xor ecx, eax
mov edx, dword[ebp-0x44]
sub edx, ecx
mov dword[ebp-0x44], edx
mov eax, dword[ebp-0x4c]
sub eax, dword[ebp-0x60]
mov dword[ebp-0x4c], eax
mov ecx, dword[ebp-0x44]
shl ecx, 4
add ecx, dword[ebp-0x50]
mov edx, 4
shl edx, 1
mov eax, dword[ebp+edx-0x40]
mov edx, dword[eax]
add edx, dword[ebp-0x44]
xor ecx, edx
mov eax, dword[ebp-0x44]
shr eax, 5
add eax, dword[ebp-0x54]
xor ecx, eax
mov edx, dword[ebp-0x48]
sub edx, ecx
mov dword[ebp-0x48], edx
mov eax, dword[ebp-0x48]
shl eax, 4
add eax, dword[ebp-0x58]
mov ecx, 4
shl ecx, 1
mov edx, dword[ebp+ecx-0x40]
mov ecx, dword[edx]
add ecx, dword[ebp-0x48]
xor eax, ecx
mov edx, dword[ebp-0x48]
shr edx, 5
add edx, dword[ebp-0x5c]
xor eax, edx
mov ecx, dword[ebp-0x44]
sub ecx, eax
mov dword[ebp-0x44], ecx
mov edx, dword[ebp-0x4c]
sub edx, dword[ebp-0x60]
mov dword[ebp-0x4c], edx
mov eax, dword[ebp-0x44]
shl eax, 4
add eax, dword[ebp-0x50]
mov ecx, 4
shl ecx, 1
mov edx, dword[ebp+ecx-0x40]
mov ecx, dword[edx]
add ecx, dword[ebp-0x44]
xor eax, ecx
mov edx, dword[ebp-0x44]
shr edx, 5
add edx, dword[ebp-0x54]
xor eax, edx
mov ecx, dword[ebp-0x48]
sub ecx, eax
mov dword[ebp-0x48], ecx
mov edx, dword[ebp-0x48]
shl edx, 4
add edx, dword[ebp-0x58]
mov eax, 4
shl eax, 1
mov ecx, dword[ebp+eax-0x40]
mov eax, dword[ecx]
add eax, dword[ebp-0x48]
xor edx, eax
mov ecx, dword[ebp-0x48]
shr ecx, 5
add ecx, dword[ebp-0x5c]
xor edx, ecx
mov eax, dword[ebp-0x44]
sub eax, edx
mov dword[ebp-0x44], eax
mov ecx, dword[ebp-0x4c]
sub ecx, dword[ebp-0x60]
mov dword[ebp-0x4c], ecx
mov edx, dword[ebp-0x44]
shl edx, 4
add edx, dword[ebp-0x50]
mov eax, 4
shl eax, 1
mov ecx, dword[ebp+eax-0x40]
mov eax, dword[ecx]
add eax, dword[ebp-0x44]
xor edx, eax
mov ecx, dword[ebp-0x44]
shr ecx, 5
add ecx, dword[ebp-0x54]
xor edx, ecx
mov eax, dword[ebp-0x48]
sub eax, edx
mov dword[ebp-0x48], eax
mov ecx, dword[ebp-0x48]
shl ecx, 4
add ecx, dword[ebp-0x58]
mov edx, 4
shl edx, 1
mov eax, dword[ebp+edx-0x40]
mov edx, dword[eax]
add edx, dword[ebp-0x48]
xor ecx, edx
mov eax, dword[ebp-0x48]
shr eax, 5
add eax, dword[ebp-0x5c]
xor ecx, eax
mov edx, dword[ebp-0x44]
sub edx, ecx
mov dword[ebp-0x44], edx
mov eax, dword[ebp-0x4c]
sub eax, dword[ebp-0x60]
mov dword[ebp-0x4c], eax
mov ecx, dword[ebp-0x44]
shl ecx, 4
add ecx, dword[ebp-0x50]
mov edx, 4
shl edx, 1
mov eax, dword[ebp+edx-0x40]
mov edx, dword[eax]
add edx, dword[ebp-0x44]
xor ecx, edx
mov eax, dword[ebp-0x44]
shr eax, 5
add eax, dword[ebp-0x54]
xor ecx, eax
mov edx, dword[ebp-0x48]
sub edx, ecx
mov dword[ebp-0x48], edx
mov eax, dword[ebp-0x48]
shl eax, 4
add eax, dword[ebp-0x58]
mov ecx, 4
shl ecx, 1
mov edx, dword[ebp+ecx-0x40]
mov ecx, dword[edx]
add ecx, dword[ebp-0x48]
xor eax, ecx
mov edx, dword[ebp-0x48]
shr edx, 5
add edx, dword[ebp-0x5c]
xor eax, edx
mov ecx, dword[ebp-0x44]
sub ecx, eax
mov dword[ebp-0x44], ecx
mov edx, dword[ebp-0x4c]
sub edx, dword[ebp-0x60]
mov dword[ebp-0x4c], edx
mov eax, dword[ebp-0x44]
shl eax, 4
add eax, dword[ebp-0x50]
mov ecx, 4
shl ecx, 1
mov edx, dword[ebp+ecx-0x40]
mov ecx, dword[edx]
add ecx, dword[ebp-0x44]
xor eax, ecx
mov edx, dword[ebp-0x44]
shr edx, 5
add edx, dword[ebp-0x54]
xor eax, edx
mov ecx, dword[ebp-0x48]
sub ecx, eax
mov dword[ebp-0x48], ecx
mov edx, dword[ebp-0x48]
shl edx, 4
add edx, dword[ebp-0x58]
mov eax, 4
shl eax, 1
mov ecx, dword[ebp+eax-0x40]
mov eax, dword[ecx]
add eax, dword[ebp-0x48]
xor edx, eax
mov ecx, dword[ebp-0x48]
shr ecx, 5
add ecx, dword[ebp-0x5c]
xor edx, ecx
mov eax, dword[ebp-0x44]
sub eax, edx
mov dword[ebp-0x44], eax
mov ecx, dword[ebp-0x4c]
sub ecx, dword[ebp-0x60]
mov dword[ebp-0x4c], ecx
mov edx, dword[ebp-0x44]
shl edx, 4
add edx, dword[ebp-0x50]
mov eax, 4
shl eax, 1
mov ecx, dword[ebp+eax-0x40]
mov eax, dword[ecx]
add eax, dword[ebp-0x44]
xor edx, eax
mov ecx, dword[ebp-0x44]
shr ecx, 5
add ecx, dword[ebp-0x54]
xor edx, ecx
mov eax, dword[ebp-0x48]
sub eax, edx
mov dword[ebp-0x48], eax
mov ecx, dword[ebp-0x48]
shl ecx, 4
add ecx, dword[ebp-0x58]
mov edx, 4
shl edx, 1
mov eax, dword[ebp+edx-0x40]
mov edx, dword[eax]
add edx, dword[ebp-0x48]
xor ecx, edx
mov eax, dword[ebp-0x48]
shr eax, 5
add eax, dword[ebp-0x5c]
xor ecx, eax
mov edx, dword[ebp-0x44]
sub edx, ecx
mov dword[ebp-0x44], edx
mov eax, dword[ebp-0x4c]
sub eax, dword[ebp-0x60]
mov dword[ebp-0x4c], eax
mov ecx, dword[ebp-0x44]
shl ecx, 4
add ecx, dword[ebp-0x50]
mov edx, 4
shl edx, 1
mov eax, dword[ebp+edx-0x40]
mov edx, dword[eax]
add edx, dword[ebp-0x44]
xor ecx, edx
mov eax, dword[ebp-0x44]
shr eax, 5
add eax, dword[ebp-0x54]
xor ecx, eax
mov edx, dword[ebp-0x48]
sub edx, ecx
mov dword[ebp-0x48], edx
mov eax, dword[ebp-0x48]
shl eax, 4
add eax, dword[ebp-0x58]
mov ecx, 4
shl ecx, 1
mov edx, dword[ebp+ecx-0x40]
mov ecx, dword[edx]
add ecx, dword[ebp-0x48]
xor eax, ecx
mov edx, dword[ebp-0x48]
shr edx, 5
add edx, dword[ebp-0x5c]
xor eax, edx
mov ecx, dword[ebp-0x44]
sub ecx, eax
mov dword[ebp-0x44], ecx
mov edx, dword[ebp-0x4c]
sub edx, dword[ebp-0x60]
mov dword[ebp-0x4c], edx
mov eax, dword[ebp-0x44]
shl eax, 4
add eax, dword[ebp-0x50]
mov ecx, 4
shl ecx, 1
mov edx, dword[ebp+ecx-0x40]
mov ecx, dword[edx]
add ecx, dword[ebp-0x44]
xor eax, ecx
mov edx, dword[ebp-0x44]
shr edx, 5
add edx, dword[ebp-0x54]
xor eax, edx
mov ecx, dword[ebp-0x48]
sub ecx, eax
mov dword[ebp-0x48], ecx
mov edx, dword[ebp-0x48]
shl edx, 4
add edx, dword[ebp-0x58]
mov eax, 4
shl eax, 1
mov ecx, dword[ebp+eax-0x40]
mov eax, dword[ecx]
add eax, dword[ebp-0x48]
xor edx, eax
mov ecx, dword[ebp-0x48]
shr ecx, 5
add ecx, dword[ebp-0x5c]
xor edx, ecx
mov eax, dword[ebp-0x44]
sub eax, edx
mov dword[ebp-0x44], eax
mov ecx, dword[ebp-0x4c]
sub ecx, dword[ebp-0x60]
mov dword[ebp-0x4c], ecx
mov edx, dword[ebp-0x44]
shl edx, 4
add edx, dword[ebp-0x50]
mov eax, 4
shl eax, 1
mov ecx, dword[ebp+eax-0x40]
mov eax, dword[ecx]
add eax, dword[ebp-0x44]
xor edx, eax
mov ecx, dword[ebp-0x44]
shr ecx, 5
add ecx, dword[ebp-0x54]
xor edx, ecx
mov eax, dword[ebp-0x48]
sub eax, edx
mov dword[ebp-0x48], eax
mov ecx, dword[ebp-0x48]
shl ecx, 4
add ecx, dword[ebp-0x58]
mov edx, 4
shl edx, 1
mov eax, dword[ebp+edx-0x40]
mov edx, dword[eax]
add edx, dword[ebp-0x48]
xor ecx, edx
mov eax, dword[ebp-0x48]
shr eax, 5
add eax, dword[ebp-0x5c]
xor ecx, eax
mov edx, dword[ebp-0x44]
sub edx, ecx
mov dword[ebp-0x44], edx
mov eax, dword[ebp-0x4c]
sub eax, dword[ebp-0x60]
mov dword[ebp-0x4c], eax
mov ecx, dword[ebp-0x44]
shl ecx, 4
add ecx, dword[ebp-0x50]
mov edx, 4
shl edx, 1
mov eax, dword[ebp+edx-0x40]
mov edx, dword[eax]
add edx, dword[ebp-0x44]
xor ecx, edx
mov eax, dword[ebp-0x44]
shr eax, 5
add eax, dword[ebp-0x54]
xor ecx, eax
mov edx, dword[ebp-0x48]
sub edx, ecx
mov dword[ebp-0x48], edx
mov eax, dword[ebp-0x48]
shl eax, 4
add eax, dword[ebp-0x58]
mov ecx, 4
shl ecx, 1
mov edx, dword[ebp+ecx-0x40]
mov ecx, dword[edx]
add ecx, dword[ebp-0x48]
xor eax, ecx
mov edx, dword[ebp-0x48]
shr edx, 5
add edx, dword[ebp-0x5c]
xor eax, edx
mov ecx, dword[ebp-0x44]
sub ecx, eax
mov dword[ebp-0x44], ecx
mov edx, dword[ebp-0x4c]
sub edx, dword[ebp-0x60]
mov dword[ebp-0x4c], edx
mov eax, 4
imul ecx, eax, 0
add ecx, dword[ebp-0x64]
push ecx
lea edx, [ebp-0x44]
push edx
push 0x14
mov eax, dword[ebp+0x10]
push eax
call dword[sym.imp.USER32.dll_SendMessageW]
mov ecx, 4
shl ecx, 0
add ecx, dword[ebp-0x64]
push ecx
lea edx, [ebp-0x48]
push edx
push 0x14
mov eax, dword[ebp+0x10]
push eax
call dword[sym.imp.USER32.dll_SendMessageW]
jmp off.b160
mov ecx, dword[ebp-4]
xor ecx, ebp
call fcn.00431c10
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/8d996434378dbdbb47e86342be5446c7