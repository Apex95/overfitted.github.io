---
layout: post
title:  "fcn.0048a28f @ 289859175c221b107317af7727d26c17"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0048a28f
- **Origin (md5):** 289859175c221b107317af7727d26c17
- **VirusTotal:** [virustotal.com/gui/file/289859175c221b107317af7727d26c17][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-64.70471954345703, -100.02930450439453, '<b><a href="/report/fcn.0048a28f@289859175c221b107317af7727d26c17">fcn.0048a28f</a><br>@289859175c221b107317af7727d26c17</b><br>', 'point { fill-color: #e0440e; }'],
[-177.65640258789062, -90.60047912597656, '<b><a href="/report/fcn.0058cd66@c60344b51fa39a329b92557d24ff7670">fcn.0058cd66</a><br>@c60344b51fa39a329b92557d24ff7670</b><br>', 'null'],
[-57.346710205078125, -35.06922149658203, '<b><a href="/report/fcn.004094c5@6c5b0418e4a4c57d99cda47d2717045d">fcn.004094c5</a><br>@6c5b0418e4a4c57d99cda47d2717045d</b><br>', 'null'],
[-112.328125, -66.91874694824219, '<b><a href="/report/fcn.00575f48@c60344b51fa39a329b92557d24ff7670">fcn.00575f48</a><br>@c60344b51fa39a329b92557d24ff7670</b><br>', 'null'],
[-192.02430725097656, -61.684539794921875, '<b><a href="/report/fcn.00438ee5@9964b63070116cfb2469e51850178af1">fcn.00438ee5</a><br>@9964b63070116cfb2469e51850178af1</b><br>', 'null'],
[-41.4432258605957, -70.39100646972656, '<b><a href="/report/fcn.0041fd5c@b8b9cf6862b0d68d10750002e5baaf97">fcn.0041fd5c</a><br>@b8b9cf6862b0d68d10750002e5baaf97</b><br>', 'null'],
[-78.6824722290039, -68.08609008789062, '<b><a href="/report/fcn.101109f6@89dc67d2f980e8488f97b1bf8cb24258">fcn.101109f6</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>', 'null'],
[-101.0206298828125, -102.09226989746094, '<b><a href="/report/fcn.0041fd5c@146b14fc12cf789043a79d4f548a23bf">fcn.0041fd5c</a><br>@146b14fc12cf789043a79d4f548a23bf</b><br>', 'null'],
[-95.78380584716797, -33.48253631591797, '<b><a href="/report/fcn.0041fd5c@3d7f25d788af3e7f7707a736ac852465">fcn.0041fd5c</a><br>@3d7f25d788af3e7f7707a736ac852465</b><br>', 'null'],
[-198.11976623535156, -121.21052551269531, '<b><a href="/report/fcn.004290be@de21a548b66aa6c0b17491b6a31e14fa">fcn.004290be</a><br>@de21a548b66aa6c0b17491b6a31e14fa</b><br>', 'null'],
[-212.8731231689453, -86.42229461669922, '<b><a href="/report/fcn.1011bd6c@89dc67d2f980e8488f97b1bf8cb24258">fcn.1011bd6c</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

mov edi, edi
push ebp
mov ebp, esp
sub esp, 0x1c
mov edx, dword[ebp+0x10]
push esi
mov esi, dword[ebp+8]
push 0xfffffffffffffffe
pop eax
mov dword[ebp-0x14], eax
mov dword[ebp-0x1c], edx
cmp esi, eax
jne 0x48a2c6
call fcn.0047bec2
and dword[eax], 0
call fcn.0047beaf
mov dword[eax], 9
or eax, 0xffffffff
jmp 0x48a84e
push ebx
xor ebx, ebx
cmp esi, ebx
jl 0x48a2d5
cmp esi, dword[0x4d2d98]
jb 0x48a2fc
call fcn.0047bec2
mov dword[eax], ebx
call fcn.0047beaf
push ebx
push ebx
push ebx
push ebx
push ebx
mov dword[eax], 9
call fcn.00476c1c
add esp, 0x14
or eax, 0xffffffff
jmp 0x48a84d
mov eax, esi
sar eax, 5
push edi
lea edi, [eax*4+0x4d2da0]
mov eax, dword[edi]
and esi, 0x1f
shl esi, 6
add eax, esi
mov cl, byte[eax+4]
test cl, 1
jne 0x48a32f
call fcn.0047bec2
mov dword[eax], ebx
call fcn.0047beaf
mov dword[eax], 9
jmp 0x48a399
cmp edx, 0x7fffffff
ja 0x48a387
mov dword[ebp-0x10], ebx
cmp edx, ebx
je 0x48a84a
test cl, 2
jne 0x48a84a
cmp dword[ebp+0xc], ebx
je 0x48a387
mov al, byte[eax+0x24]
add al, al
sar al, 1
mov byte[ebp-2], al
movsx eax, al
dec eax
push 4
pop ecx
je 0x48a37f
dec eax
jne 0x48a374
mov eax, edx
not eax
test al, 1
je 0x48a387
and edx, 0xfffffffe
mov dword[ebp+0x10], edx
mov eax, dword[ebp+0xc]
mov dword[ebp-0xc], eax
jmp 0x48a400
mov eax, edx
not eax
test al, 1
jne 0x48a3a8
call fcn.0047bec2
mov dword[eax], ebx
call fcn.0047beaf
mov dword[eax], 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call fcn.00476c1c
add esp, 0x14
jmp 0x48a3dc
mov eax, edx
shr eax, 1
mov dword[ebp+0x10], ecx
cmp eax, ecx
jb 0x48a3b6
mov dword[ebp+0x10], eax
push dword[ebp+0x10]
call fcn.004807a2
pop ecx
mov dword[ebp-0xc], eax
cmp eax, ebx
jne 0x48a3e4
call fcn.0047beaf
mov dword[eax], 0xc
call fcn.0047bec2
mov dword[eax], 8
or eax, 0xffffffff
jmp 0x48a84c
push 1
push ebx
push ebx
push dword[ebp+8]
call fcn.0047d67d
mov ecx, dword[edi]
mov dword[esi+ecx+0x28], eax
mov eax, dword[ebp-0xc]
add esp, 0x10
mov dword[esi+ecx+0x2c], edx
mov ecx, dword[edi]
add ecx, esi
test byte[ecx+4], 0x48
je 0x48a47e
mov cl, byte[ecx+5]
cmp cl, 0xa
je 0x48a47e
cmp dword[ebp+0x10], ebx
je 0x48a47e
mov byte[eax], cl
mov ecx, dword[edi]
inc eax
dec dword[ebp+0x10]
mov dword[ebp-0x10], 1
mov byte[esi+ecx+5], 0xa
cmp byte[ebp-2], bl
je 0x48a47e
mov ecx, dword[edi]
mov cl, byte[esi+ecx+0x25]
cmp cl, 0xa
je 0x48a47e
cmp dword[ebp+0x10], ebx
je 0x48a47e
mov byte[eax], cl
mov ecx, dword[edi]
inc eax
dec dword[ebp+0x10]
cmp byte[ebp-2], 1
mov dword[ebp-0x10], 2
mov byte[esi+ecx+0x25], 0xa
jne 0x48a47e
mov ecx, dword[edi]
mov cl, byte[esi+ecx+0x26]
cmp cl, 0xa
je 0x48a47e
cmp dword[ebp+0x10], ebx
je 0x48a47e
mov byte[eax], cl
mov ecx, dword[edi]
inc eax
dec dword[ebp+0x10]
mov dword[ebp-0x10], 3
mov byte[esi+ecx+0x26], 0xa
push ebx
lea ecx, [ebp-0x18]
push ecx
push dword[ebp+0x10]
push eax
mov eax, dword[edi]
push dword[esi+eax]
call dword[sym.imp.KERNEL32.dll_ReadFile]
test eax, eax
je 0x48a815
mov ecx, dword[ebp-0x18]
cmp ecx, ebx
jl 0x48a815
cmp ecx, dword[ebp+0x10]
ja 0x48a815
mov eax, dword[edi]
add dword[ebp-0x10], ecx
lea eax, [esi+eax+4]
test byte[eax], 0x80
je 0x48a6a6
cmp byte[ebp-2], 2
je 0x48a6e0
cmp ecx, ebx
je 0x48a4db
mov ecx, dword[ebp-0xc]
cmp byte[ecx], 0xa
jne 0x48a4db
or byte[eax], 4
jmp 0x48a4de
and byte[eax], 0xfb
mov ebx, dword[ebp-0xc]
mov eax, dword[ebp-0x10]
add eax, ebx
mov dword[ebp+0x10], ebx
mov dword[ebp-0x10], eax
cmp ebx, eax
jae 0x48a5c4
mov ecx, dword[ebp+0x10]
mov al, byte[ecx]
cmp al, 0x1a
je 0x48a5af
cmp al, 0xd
je 0x48a511
mov byte[ebx], al
inc ebx
inc ecx
mov dword[ebp+0x10], ecx
jmp 0x48a5a1
mov eax, dword[ebp-0x10]
dec eax
cmp ecx, eax
jae 0x48a530
lea eax, [ecx+1]
cmp byte[eax], 0xa
jne 0x48a52b
inc ecx
inc ecx
mov dword[ebp+0x10], ecx
mov byte[ebx], 0xa
jmp 0x48a5a0
mov dword[ebp+0x10], eax
jmp 0x48a59d
inc dword[ebp+0x10]
push 0
lea eax, [ebp-0x18]
push eax
push 1
lea eax, [ebp-1]
push eax
mov eax, dword[edi]
push dword[esi+eax]
call dword[sym.imp.KERNEL32.dll_ReadFile]
test eax, eax
jne 0x48a558
call dword[sym.imp.KERNEL32.dll_GetLastError]
test eax, eax
jne 0x48a59d
cmp dword[ebp-0x18], 0
je 0x48a59d
mov eax, dword[edi]
test byte[esi+eax+4], 0x48
je 0x48a57b
cmp byte[ebp-1], 0xa
je 0x48a526
mov byte[ebx], 0xd
mov eax, dword[edi]
mov cl, byte[ebp-1]
mov byte[esi+eax+5], cl
jmp 0x48a5a0
cmp ebx, dword[ebp-0xc]
jne 0x48a586
cmp byte[ebp-1], 0xa
je 0x48a526
push 1
push 0xffffffffffffffff
push 0xffffffffffffffff
push dword[ebp+8]
call fcn.0047d67d
add esp, 0x10
cmp byte[ebp-1], 0xa
je 0x48a5a1
mov byte[ebx], 0xd
inc ebx
mov eax, dword[ebp-0x10]
cmp dword[ebp+0x10], eax
jb 0x48a4f4
jmp 0x48a5c4
mov eax, dword[edi]
lea eax, [esi+eax+4]
test byte[eax], 0x40
jne 0x48a5bf
or byte[eax], 2
jmp 0x48a5c4
mov al, byte[ecx]
mov byte[ebx], al
inc ebx
mov eax, ebx
sub eax, dword[ebp-0xc]
cmp byte[ebp-2], 1
mov dword[ebp-0x10], eax
jne 0x48a6a6
test eax, eax
je 0x48a6a6
dec ebx
mov cl, byte[ebx]
test cl, cl
js 0x48a5eb
inc ebx
jmp 0x48a671
xor eax, eax
inc eax
movzx ecx, cl
jmp 0x48a602
cmp eax, 4
jg 0x48a60b
cmp ebx, dword[ebp-0xc]
jb 0x48a60b
dec ebx
movzx ecx, byte[ebx]
inc eax
cmp byte[ecx+0x4d0dc0], 0
je 0x48a5f3
mov dl, byte[ebx]
movzx ecx, dl
movsx ecx, byte[ecx+0x4d0dc0]
test ecx, ecx
jne 0x48a628
call fcn.0047beaf
mov dword[eax], 0x2a
jmp 0x48a6a2
inc ecx
cmp ecx, eax
jne 0x48a631
add ebx, eax
jmp 0x48a671
mov ecx, dword[edi]
add ecx, esi
test byte[ecx+4], 0x48
je 0x48a65f
inc ebx
cmp eax, 2
mov byte[ecx+5], dl
jl 0x48a64d
mov dl, byte[ebx]
mov ecx, dword[edi]
mov byte[esi+ecx+0x25], dl
inc ebx
cmp eax, 3
jne 0x48a65b
mov dl, byte[ebx]
mov ecx, dword[edi]
mov byte[esi+ecx+0x26], dl
inc ebx
sub ebx, eax
jmp 0x48a671
neg eax
cdq
push 1
push edx
push eax
push dword[ebp+8]
call fcn.0047d67d
add esp, 0x10
mov eax, dword[ebp-0x1c]
sub ebx, dword[ebp-0xc]
shr eax, 1
push eax
push dword[ebp+0xc]
push ebx
push dword[ebp-0xc]
push 0
push 0xfde9
call dword[sym.imp.KERNEL32.dll_MultiByteToWideChar]
mov dword[ebp-0x10], eax
test eax, eax
jne 0x48a6c9
call dword[sym.imp.KERNEL32.dll_GetLastError]
push eax
call fcn.0047bed5
pop ecx
or dword[ebp-0x14], 0xffffffff
mov eax, dword[ebp-0xc]
cmp eax, dword[ebp+0xc]
je 0x48a6b5
push eax
call fcn.0047799a
pop ecx
mov eax, dword[ebp-0x14]
cmp eax, 0xfffffffe
jne 0x48a84c
mov eax, dword[ebp-0x10]
jmp 0x48a84c
mov eax, dword[ebp-0x10]
mov edx, dword[edi]
xor ecx, ecx
cmp eax, ebx
setne cl
add eax, eax
mov dword[ebp-0x10], eax
mov dword[esi+edx+0x30], ecx
jmp 0x48a6a6
cmp ecx, ebx
je 0x48a6f2
mov ecx, dword[ebp-0xc]
cmp word[ecx], 0xa
jne 0x48a6f2
or byte[eax], 4
jmp 0x48a6f5
and byte[eax], 0xfb
mov ebx, dword[ebp-0xc]
mov eax, dword[ebp-0x10]
add eax, ebx
mov dword[ebp+0x10], ebx
mov dword[ebp-0x10], eax
cmp ebx, eax
jae 0x48a80a
mov eax, dword[ebp+0x10]
movzx ecx, word[eax]
cmp cx, 0x1a
je 0x48a7f2
cmp cx, 0xd
je 0x48a730
mov word[ebx], cx
inc ebx
inc ebx
inc eax
inc eax
mov dword[ebp+0x10], eax
jmp 0x48a7e4
mov ecx, dword[ebp-0x10]
add ecx, 0xfffffffe
cmp eax, ecx
jae 0x48a758
lea ecx, [eax+2]
cmp word[ecx], 0xa
jne 0x48a750
add eax, 4
mov dword[ebp+0x10], eax
push 0xa
jmp 0x48a7de
mov dword[ebp+0x10], ecx
jmp 0x48a7dc
add dword[ebp+0x10], 2
push 0
lea eax, [ebp-0x18]
push eax
push 2
lea eax, [ebp-8]
push eax
mov eax, dword[edi]
push dword[esi+eax]
call dword[sym.imp.KERNEL32.dll_ReadFile]
test eax, eax
jne 0x48a781
call dword[sym.imp.KERNEL32.dll_GetLastError]
test eax, eax
jne 0x48a7dc
cmp dword[ebp-0x18], 0
je 0x48a7dc
mov eax, dword[edi]
test byte[esi+eax+4], 0x48
je 0x48a7b8
cmp word[ebp-8], 0xa
je 0x48a749
push 0xd
pop eax
mov word[ebx], ax
mov eax, dword[edi]
mov cl, byte[ebp-8]
mov byte[esi+eax+5], cl
mov eax, dword[edi]
mov cl, byte[ebp-7]
mov byte[esi+eax+0x25], cl
mov eax, dword[edi]
mov byte[esi+eax+0x26], 0xa
jmp 0x48a7e2
cmp ebx, dword[ebp-0xc]
jne 0x48a7c4
cmp word[ebp-8], 0xa
je 0x48a749
push 1
push 0xffffffffffffffff
push 0xfffffffffffffffe
push dword[ebp+8]
call fcn.0047d67d
add esp, 0x10
cmp word[ebp-8], 0xa
je 0x48a7e4
push 0xd
pop eax
mov word[ebx], ax
inc ebx
inc ebx
mov eax, dword[ebp-0x10]
cmp dword[ebp+0x10], eax
jb 0x48a70b
jmp 0x48a80a
mov ecx, dword[edi]
lea esi, [esi+ecx+4]
test byte[esi], 0x40
jne 0x48a802
or byte[esi], 2
jmp 0x48a80a
mov ax, word[eax]
mov word[ebx], ax
inc ebx
inc ebx
sub ebx, dword[ebp-0xc]
mov dword[ebp-0x10], ebx
jmp 0x48a6a6
call dword[sym.imp.KERNEL32.dll_GetLastError]
push 5
pop esi
cmp eax, esi
jne 0x48a839
call fcn.0047beaf
mov dword[eax], 9
call fcn.0047bec2
mov dword[eax], esi
jmp 0x48a6a2
cmp eax, 0x6d
jne 0x48a69b
mov dword[ebp-0x14], ebx
jmp 0x48a6a6
xor eax, eax
pop edi
pop ebx
pop esi
leave
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/289859175c221b107317af7727d26c17