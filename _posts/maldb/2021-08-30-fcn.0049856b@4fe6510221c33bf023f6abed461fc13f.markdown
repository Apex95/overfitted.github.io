---
layout: post
title:  "fcn.0049856b @ 4fe6510221c33bf023f6abed461fc13f"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0049856b
- **Origin (md5):** 4fe6510221c33bf023f6abed461fc13f
- **VirusTotal:** [virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-112.72283935546875, -289.81195068359375, '<b><a href="/report/fcn.0049856b@4fe6510221c33bf023f6abed461fc13f">fcn.0049856b</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>', 'point { fill-color: #e0440e; }'],
[47.71268844604492, -70.79988861083984, '<b><a href="/report/fcn.00458cae@418e0921f3a9bd4f5bc0dcc59623b5a1">fcn.00458cae</a><br>@418e0921f3a9bd4f5bc0dcc59623b5a1</b><br>', 'null'],
[-235.94558715820312, 160.7474822998047, '<b><a href="/report/fcn.004f6dba@e2ba7f10eb234338a49853c34d7d9c56">fcn.004f6dba</a><br>@e2ba7f10eb234338a49853c34d7d9c56</b><br>', 'null'],
[42.067264556884766, 200.612548828125, '<b><a href="/report/fcn.005043bb@e2ba7f10eb234338a49853c34d7d9c56">fcn.005043bb</a><br>@e2ba7f10eb234338a49853c34d7d9c56</b><br>', 'null'],
[-317.3262634277344, -97.42276763916016, '<b><a href="/report/fcn.0044d330@418e0921f3a9bd4f5bc0dcc59623b5a1">fcn.0044d330</a><br>@418e0921f3a9bd4f5bc0dcc59623b5a1</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

mov edi, edi
push ebp
mov ebp, esp
sub esp, 0x34
push ebx
xor ebx, ebx
test byte[ebp+0x10], 0x80
push esi
mov esi, eax
mov dword[ebp-0x24], ebx
mov byte[ebp-2], bl
mov dword[ebp-8], ebx
mov dword[ebp-0x34], 0xc
mov dword[ebp-0x30], ebx
je off.b48
mov dword[ebp-0x2c], ebx
mov byte[ebp-1], 0x10
jmp off.b58
mov dword[ebp-0x2c], 1
mov byte[ebp-1], bl
lea eax, [ebp-0x24]
push eax
call fcn.0049a11b
pop ecx
test eax, eax
jne off.b1834
mov eax, 0x8000
test dword[ebp+0x10], eax
jne off.b104
test dword[ebp+0x10], 0x74000
jne off.b100
cmp dword[ebp-0x24], eax
je off.b104
or byte[ebp-1], 0x80
mov eax, dword[ebp+0x10]
and eax, 3
sub eax, ebx
mov ecx, 0xc0000000
mov edx, 0x80000000
je off.b191
dec eax
je off.b167
dec eax
je off.b162
call fcn.00490ed5
mov dword[eax], ebx
or dword[esi], 0xffffffff
call fcn.00490ec2
push 0x16
pop esi
mov dword[eax], esi
call fcn.00490e70
mov eax, esi
jmp off.b384
mov dword[ebp-0xc], ecx
jmp off.b194
test byte[ebp+0x10], 8
je off.b182
test dword[ebp+0x10], 0x70000
jne off.b162
mov dword[ebp-0xc], 0x40000000
jmp off.b194
mov dword[ebp-0xc], edx
mov eax, dword[ebp+0x14]
push 0x10
pop ecx
sub eax, ecx
je off.b259
sub eax, ecx
je off.b250
sub eax, ecx
je off.b241
sub eax, ecx
je off.b232
sub eax, 0x40
jne off.b130
cmp dword[ebp-0xc], edx
sete al
mov dword[ebp-0x14], eax
jmp off.b262
mov dword[ebp-0x14], 3
jmp off.b262
mov dword[ebp-0x14], 2
jmp off.b262
mov dword[ebp-0x14], 1
jmp off.b262
mov dword[ebp-0x14], ebx
mov eax, dword[ebp+0x10]
mov edx, 0x700
and eax, edx
mov ecx, 0x400
push edi
mov edi, 0x100
cmp eax, ecx
jg off.b338
je off.b329
cmp eax, ebx
je off.b329
cmp eax, edi
je off.b320
cmp eax, 0x200
je off.b388
cmp eax, 0x300
jne off.b356
mov dword[ebp-0x18], 2
jmp off.b404
mov dword[ebp-0x18], 4
jmp off.b404
mov dword[ebp-0x18], 3
jmp off.b404
cmp eax, 0x500
je off.b397
cmp eax, 0x600
je off.b388
cmp eax, edx
je off.b397
call fcn.00490ed5
mov dword[eax], ebx
or dword[esi], 0xffffffff
call fcn.00490ec2
push 0x16
pop esi
mov dword[eax], esi
call fcn.00490e70
mov eax, esi
pop edi
pop esi
pop ebx
leave
ret
mov dword[ebp-0x18], 5
jmp off.b404
mov dword[ebp-0x18], 1
mov eax, dword[ebp+0x10]
mov dword[ebp-0x10], 0x80
test edi, eax
je off.b440
mov ecx, dword[0x4c41c0]
not ecx
and ecx, dword[ebp+0x18]
test cl, cl
js off.b440
mov dword[ebp-0x10], 1
test al, 0x40
je off.b462
or dword[ebp-0x10], 0x4000000
or dword[ebp-0xc], 0x10000
or dword[ebp-0x14], 4
test eax, 0x1000
je off.b472
or dword[ebp-0x10], edi
test al, 0x20
je off.b485
or dword[ebp-0x10], 0x8000000
jmp off.b496
test al, 0x10
je off.b496
or dword[ebp-0x10], 0x10000000
call fcn.0049913f
or ebx, 0xffffffff
mov dword[esi], eax
cmp eax, ebx
jne off.b543
call fcn.00490ed5
and dword[eax], 0
mov dword[esi], ebx
call fcn.00490ec2
mov dword[eax], 0x18
call fcn.00490ec2
mov eax, dword[eax]
jmp off.b383
mov eax, dword[ebp+8]
mov edi, dword[sym.imp.KERNEL32.dll_CreateFileW]
push 0
push dword[ebp-0x10]
mov dword[eax], 1
push dword[ebp-0x18]
lea eax, [ebp-0x34]
push eax
push dword[ebp-0x14]
push dword[ebp-0xc]
push dword[ebp+0xc]
call edi
mov dword[ebp-0x20], eax
cmp eax, ebx
jne off.b700
mov ecx, dword[ebp-0xc]
mov eax, 0xc0000000
and ecx, eax
cmp ecx, eax
jne off.b645
test byte[ebp+0x10], 1
je off.b645
and dword[ebp-0xc], 0x7fffffff
push 0
push dword[ebp-0x10]
lea eax, [ebp-0x34]
push dword[ebp-0x18]
push eax
push dword[ebp-0x14]
push dword[ebp-0xc]
push dword[ebp+0xc]
call edi
mov dword[ebp-0x20], eax
cmp eax, ebx
jne off.b700
mov esi, dword[esi]
mov eax, esi
sar eax, 5
mov eax, dword[eax*4+0x4c9f20]
and esi, 0x1f
shl esi, 6
lea eax, [eax+esi+4]
and byte[eax], 0xfe
call dword[sym.imp.KERNEL32.dll_GetLastError]
push eax
call fcn.00490ee8
pop ecx
call fcn.00490ec2
mov eax, dword[eax]
mov dword[ebp-8], eax
jmp off.b1826
push dword[ebp-0x20]
call dword[sym.imp.KERNEL32.dll_GetFileType]
test eax, eax
jne off.b781
mov esi, dword[esi]
mov eax, esi
sar eax, 5
mov eax, dword[eax*4+0x4c9f20]
and esi, 0x1f
shl esi, 6
lea eax, [eax+esi+4]
and byte[eax], 0xfe
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov esi, eax
push esi
call fcn.00490ee8
pop ecx
push dword[ebp-0x20]
call dword[sym.imp.KERNEL32.dll_CloseHandle]
test esi, esi
jne off.b685
call fcn.00490ec2
mov dword[eax], 0xd
jmp off.b685
cmp eax, 2
jne off.b792
or byte[ebp-1], 0x40
jmp off.b801
cmp eax, 3
jne off.b801
or byte[ebp-1], 8
push dword[ebp-0x20]
push dword[esi]
call fcn.00498f09
mov eax, dword[esi]
mov edx, eax
and eax, 0x1f
sar edx, 5
mov edx, dword[edx*4+0x4c9f20]
pop ecx
shl eax, 6
pop ecx
mov cl, byte[ebp-1]
or cl, 1
mov byte[edx+eax+4], cl
mov eax, dword[esi]
mov edx, eax
and eax, 0x1f
sar edx, 5
mov edx, dword[edx*4+0x4c9f20]
shl eax, 6
lea eax, [edx+eax+0x24]
and byte[eax], 0x80
mov byte[ebp-3], cl
and byte[ebp-3], 0x48
mov byte[ebp-1], cl
jne off.b1009
test cl, 0x80
je off.b1571
test byte[ebp+0x10], 2
je off.b1009
push 2
push ebx
push dword[esi]
call fcn.00499feb
mov edi, eax
add esp, 0xc
cmp edi, ebx
jne off.b941
call fcn.00490ed5
cmp dword[eax], 0x83
je off.b1009
push dword[esi]
call fcn.00495431
jmp off.b684
and dword[ebp-0x28], 0
push 1
lea eax, [ebp-0x28]
push eax
push dword[esi]
call fcn.00499a34
add esp, 0xc
test eax, eax
jne off.b991
cmp word[ebp-0x28], 0x1a
jne off.b991
mov eax, edi
cdq
push edx
push eax
push dword[esi]
call fcn.0049987e
add esp, 0xc
cmp eax, ebx
je off.b929
push 0
push 0
push dword[esi]
call fcn.00499feb
add esp, 0xc
cmp eax, ebx
je off.b929
test byte[ebp-1], 0x80
je off.b1571
mov edi, 0x74000
mov ecx, 0x4000
test dword[ebp+0x10], edi
jne off.b1049
mov eax, dword[ebp-0x24]
and eax, edi
jne off.b1046
or dword[ebp+0x10], ecx
jmp off.b1049
or dword[ebp+0x10], eax
mov eax, dword[ebp+0x10]
and eax, edi
cmp eax, ecx
je off.b1126
cmp eax, 0x10000
je off.b1106
cmp eax, 0x14000
je off.b1106
cmp eax, 0x20000
je off.b1120
cmp eax, 0x24000
je off.b1120
cmp eax, 0x40000
je off.b1100
cmp eax, 0x44000
jne off.b1130
mov byte[ebp-2], 1
jmp off.b1130
mov ecx, dword[ebp+0x10]
mov eax, 0x301
and ecx, eax
cmp ecx, eax
jne off.b1130
mov byte[ebp-2], 2
jmp off.b1130
mov byte[ebp-2], 0
test dword[ebp+0x10], 0x70000
je off.b1571
xor edi, edi
test byte[ebp-1], 0x40
mov dword[ebp-0x1c], edi
jne off.b1571
mov eax, dword[ebp-0xc]
mov ecx, 0xc0000000
and eax, ecx
cmp eax, 0x40000000
je off.b1355
cmp eax, 0x80000000
je off.b1299
cmp eax, ecx
jne off.b1571
mov eax, dword[ebp-0x18]
cmp eax, edi
jbe off.b1571
cmp eax, 2
jbe off.b1224
cmp eax, 4
jbe off.b1258
cmp eax, 5
jne off.b1571
movsx eax, byte[ebp-2]
xor edi, edi
dec eax
je off.b1523
dec eax
jne off.b1571
mov dword[ebp-0x1c], 0xfeff
push 2
jmp off.b1532
push 2
push edi
push edi
push dword[esi]
call fcn.00496529
add esp, 0x10
or eax, edx
je off.b1224
push edi
push edi
push edi
push dword[esi]
call fcn.00496529
and eax, edx
add esp, 0x10
cmp eax, ebx
je off.b929
push 3
lea eax, [ebp-0x1c]
push eax
push dword[esi]
call fcn.00499a34
add esp, 0xc
cmp eax, ebx
je off.b929
cmp eax, 2
je off.b1434
cmp eax, 3
jne off.b1509
cmp dword[ebp-0x1c], 0xbfbbef
jne off.b1434
mov byte[ebp-2], 1
jmp off.b1571
mov eax, dword[ebp-0x18]
cmp eax, edi
jbe off.b1571
cmp eax, 2
jbe off.b1224
cmp eax, 4
ja off.b1215
push 2
push edi
push edi
push dword[esi]
call fcn.00496529
add esp, 0x10
or eax, edx
je off.b1224
push edi
push edi
push edi
push dword[esi]
call fcn.00496529
add esp, 0x10
and eax, edx
cmp eax, ebx
jne off.b1571
jmp off.b929
mov eax, dword[ebp-0x1c]
and eax, 0xffff
cmp eax, 0xfffe
jne off.b1475
push dword[esi]
call fcn.00495431
pop ecx
call fcn.00490ec2
push 0x16
pop esi
mov dword[eax], esi
mov dword[ebp-8], esi
jmp off.b1826
cmp eax, 0xfeff
jne off.b1509
push edi
push 2
push dword[esi]
call fcn.00499feb
add esp, 0xc
cmp eax, ebx
je off.b929
mov byte[ebp-2], 2
jmp off.b1571
push edi
push edi
push dword[esi]
call fcn.00499feb
add esp, 0xc
jmp off.b1421
mov dword[ebp-0x1c], 0xbfbbef
push 3
pop ebx
mov eax, ebx
sub eax, edi
push eax
lea eax, [ebp+edi-0x1c]
push eax
push dword[esi]
call fcn.00494fcf
add esp, 0xc
cmp eax, 0xffffffff
je off.b929
add edi, eax
cmp ebx, edi
jg off.b1533
or ebx, 0xffffffff
mov eax, dword[esi]
mov ecx, eax
sar ecx, 5
mov ecx, dword[ecx*4+0x4c9f20]
and eax, 0x1f
shl eax, 6
lea eax, [ecx+eax+0x24]
mov cl, byte[eax]
xor cl, byte[ebp-2]
and cl, 0x7f
xor byte[eax], cl
mov eax, dword[esi]
mov ecx, eax
sar ecx, 5
mov ecx, dword[ecx*4+0x4c9f20]
and eax, 0x1f
shl eax, 6
lea eax, [ecx+eax+0x24]
mov ecx, dword[ebp+0x10]
mov dl, byte[eax]
shr ecx, 0x10
shl cl, 7
and dl, 0x7f
or cl, dl
cmp byte[ebp-3], 0
mov byte[eax], cl
jne off.b1686
test byte[ebp+0x10], 8
je off.b1686
mov eax, dword[esi]
mov ecx, eax
and eax, 0x1f
sar ecx, 5
mov ecx, dword[ecx*4+0x4c9f20]
shl eax, 6
lea eax, [ecx+eax+4]
or byte[eax], 0x20
mov ecx, dword[ebp-0xc]
mov eax, 0xc0000000
and ecx, eax
cmp ecx, eax
jne off.b1826
test byte[ebp+0x10], 1
je off.b1826
push dword[ebp-0x20]
call dword[sym.imp.KERNEL32.dll_CloseHandle]
push 0
push dword[ebp-0x10]
lea eax, [ebp-0x34]
push 3
push eax
push dword[ebp-0x14]
mov eax, dword[ebp-0xc]
and eax, 0x7fffffff
push eax
push dword[ebp+0xc]
call dword[sym.imp.KERNEL32.dll_CreateFileW]
cmp eax, ebx
jne off.b1803
call dword[sym.imp.KERNEL32.dll_GetLastError]
push eax
call fcn.00490ee8
mov eax, dword[esi]
mov ecx, eax
and eax, 0x1f
sar ecx, 5
mov ecx, dword[ecx*4+0x4c9f20]
shl eax, 6
lea eax, [ecx+eax+4]
and byte[eax], 0xfe
push dword[esi]
call fcn.00498f8a
pop ecx
jmp off.b684
mov esi, dword[esi]
mov ecx, esi
sar ecx, 5
mov ecx, dword[ecx*4+0x4c9f20]
and esi, 0x1f
shl esi, 6
mov dword[esi+ecx], eax
mov eax, dword[ebp-8]
jmp off.b383
push ebx
push ebx
push ebx
push ebx
push ebx
call fcn.00490e1e
int3

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f