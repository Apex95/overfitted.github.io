---
layout: post
title:  "fcn.0040bf31 @ e16f74a2849182d98050864255e902f8"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0040bf31
- **Origin (md5):** e16f74a2849182d98050864255e902f8
- **VirusTotal:** [virustotal.com/gui/file/e16f74a2849182d98050864255e902f8][virustotal_ref]

# Code Tags
<span class="tag" id="REGISTRY">REGISTRY</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.0040bf31@e16f74a2849182d98050864255e902f8">fcn.0040bf31</a><br>@e16f74a2849182d98050864255e902f8</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
and esp, 0xfffffff8
push 0xffffffffffffffff
push 0x453387
mov eax, dword
push eax
sub esp, 0xa80
mov eax, dword[0x476084]
xor eax, esp
mov dword[esp+0xa78], eax
push ebx
push esi
push edi
mov eax, dword[0x476084]
xor eax, esp
push eax
lea eax, [esp+0xa90]
mov dword
mov edi, 0x114
push edi
xor esi, esi
push esi
mov ebx, 0x4795d0
push ebx
call fcn.00412db0
add esp, 0xc
mov dword[0x4795d0], edi
call fcn.0043b5b1
push ebx
call dword[eax+0x64]
mov dword[0x4796e8], esi
mov dword[0x4796e4], esi
mov dword[esp+0x34], esi
mov dword[esp+0x38], esi
mov dword[esp+0x3c], esi
mov dword[esp+0xa98], esi
push dword[0x4778cc]
mov eax, 0x20019
push reloc.OLEAUT32.dll_SysReAllocString
lea ebx, [esp+0x3c]
call fcn.00404a83
xor ebx, ebx
test eax, eax
jne off.b653
push 0x7fe
mov word[esp+0x288], ax
lea eax, [esp+0x28a]
push ebx
push eax
call fcn.00412db0
mov dword[esp+0x4c], 0x400
mov dword[esp+0x20], 0x48
mov eax, dword[esp+0x20]
shl eax, 6
cdq
add esp, 0xc
push 0x28
pop ecx
idiv ecx
mov ecx, dword[esp+0x14]
push 0xffffffffffffff9f
lea esi, [esp+0x44]
lea edi, [esp+0x288]
sub eax, ecx
mov ecx, dword[esp+0x18]
lea eax, [eax+ecx-0x51]
add eax, dword[esp+0x18]
add eax, dword[esp+0x18]
mov dword[esp+0x18], eax
mov eax, dword[esp+0x18]
mov ecx, dword[esp+0x18]
sub eax, ecx
add eax, dword[esp+0x18]
mov dword[esp+0x18], eax
add dword[esp+0x18], 0x54
mov eax, dword[esp+0x18]
mov ecx, dword[esp+0x18]
imul eax, ecx
pop ecx
sub ecx, eax
mov eax, dword[esp+0x14]
sub ecx, eax
add ecx, dword[esp+0x14]
push 0xffffffffffffffb8
mov dword[esp+0x18], ecx
add dword[esp+0x18], 0xfffffffe
mov eax, dword[esp+0x18]
mov ecx, dword[esp+0x18]
imul eax, ecx
mov ecx, dword[esp+0x18]
imul eax, eax, 0x18
imul ecx, ecx, 0x56
sub eax, ecx
add eax, dword[esp+0x18]
pop ecx
add eax, dword[esp+0x14]
push 0x38
add eax, dword[esp+0x18]
mov dword[esp+0x18], eax
mov eax, dword[esp+0x18]
sub ecx, eax
add ecx, dword[esp+0x18]
add ecx, dword[esp+0x18]
mov dword[esp+0x18], ecx
mov eax, dword[esp+0x18]
cdq
pop ecx
idiv ecx
mov ecx, dword[esp+0x14]
imul ecx, ecx, 0xffffffd4
sub ecx, eax
mov eax, dword[esp+0x14]
shl eax, 5
add ecx, eax
mov eax, dword[esp+0x14]
sub ecx, eax
add ecx, dword[esp+0x14]
lea eax, [esp+0x34]
add ecx, dword[esp+0x14]
push dword[0x4778d0]
mov dword[esp+0x18], ecx
push eax
call fcn.0040aef1
test eax, eax
jne off.b653
mov eax, edi
push eax
lea eax, [esp+0x48]
mov dword[esp+0x30], ebx
mov dword[esp+0x34], ebx
call fcn.00404f5c
lea eax, [esp+0x44]
push eax
mov ecx, 0xfde9
lea edx, [esp+0x64]
mov byte[esp+0xa9c], 1
call fcn.00447e00
cmp dword[eax+0x14], 0x10
pop ecx
jb off.b508
mov eax, dword[eax]
lea ecx, [esp+0x30]
push ecx
lea ecx, [esp+0x30]
push ecx
push dword[0x477270]
push eax
call fcn.00413bb4
add esp, 0x10
cmp eax, 2
sete byte[esp+0x2b]
push 1
xor edi, edi
lea esi, [esp+0x64]
call fcn.00404af1
push 1
lea esi, [esp+0x48]
call fcn.00404e35
cmp byte[esp+0x2b], bl
je off.b653
mov eax, dword[esp+0x2c]
fld qword[0x470918]
mov dword[0x4796e4], eax
fstp qword[esp+0x1c]
fld qword[0x470910]
fstp qword[esp+0x1c]
fld qword[0x470908]
fstp qword[esp+0x1c]
fld qword[0x470900]
fstp qword[esp+0x14]
fld qword[0x4708f8]
fstp qword[esp+0x14]
fld qword[esp+0x1c]
mov eax, dword[esp+0x30]
fdiv qword[0x4708f0]
mov dword[0x4796e8], eax
fstp qword[esp+0x14]
or dword[esp+0xa98], 0xffffffff
cmp dword[esp+0x34], ebx
je off.b681
push dword[esp+0x34]
call dword[sym.imp.ADVAPI32.dll_RegCloseKey]
mov dword[esp+0x34], ebx
xor eax, eax
push 0x206
mov word[esp+0x80], ax
lea eax, [esp+0x82]
push ebx
push eax
mov dword[esp+0x44], ebx
call fcn.00412db0
mov dword[esp+0x20], 0x4e
mov dword[esp+0x28], 0xd
add dword[esp+0x20], 0xffffffcb
mov eax, dword[esp+0x28]
add eax, dword[esp+0x20]
add esp, 0xc
mov dword[esp+0x1c], eax
mov eax, dword[esp+0x1c]
mov ecx, dword[esp+0x14]
sub eax, ecx
mov dword[esp+0x1c], eax
mov eax, dword[esp+0x1c]
cdq
push 6
pop ecx
idiv ecx
mov ecx, dword[esp+0x14]
imul eax, ecx
mov ecx, dword[esp+0x1c]
mov edx, dword[esp+0x14]
imul ecx, edx
imul ecx, ecx, 0x14
add eax, ecx
mov ecx, dword[esp+0x1c]
sub eax, ecx
mov ecx, dword[esp+0x14]
sub eax, ecx
mov ecx, dword[esp+0x1c]
lea eax, [eax+ecx+0x25]
mov dword[esp+0x14], eax
mov eax, dword[esp+0x1c]
mov ecx, dword[esp+0x14]
add eax, eax
sub eax, ecx
mov ecx, dword[esp+0x1c]
sub eax, ecx
add eax, dword[esp+0x14]
mov dword[esp+0x14], eax
mov eax, dword[esp+0x1c]
add eax, dword[esp+0x14]
mov dword[esp+0x14], eax
mov eax, dword[esp+0x1c]
add eax, dword[esp+0x14]
mov dword[esp+0x14], eax
mov eax, dword[esp+0x1c]
push dword[0x4778d4]
imul eax, eax, 0x52
mov dword[esp+0x20], eax
lea eax, [esp+0x80]
push eax
call fcn.004134b2
pop ecx
pop ecx
lea eax, [esp+0x7c]
push eax
call fcn.0043bc76
mov dword[esp+0x14], 0x15
mov eax, dword[esp+0x14]
add eax, dword[esp+0x14]
push 0x5d
mov dword[esp+0x18], eax
mov eax, dword[esp+0x18]
cdq
pop ecx
idiv ecx
push 0x4a
pop esi
mov ecx, eax
mov eax, dword[esp+0x14]
cdq
idiv esi
add ecx, eax
mov eax, dword[esp+0x14]
cdq
push 0x34
pop esi
idiv esi
push 0x2c
add ecx, eax
mov eax, dword[esp+0x18]
imul eax, eax, 0x3f
sub ecx, eax
mov eax, dword[esp+0x18]
mov edx, dword[esp+0x18]
imul eax, edx
imul eax, eax, 0x38
add ecx, eax
add ecx, dword[esp+0x18]
mov dword[esp+0x18], ecx
mov eax, dword[esp+0x18]
cdq
pop ecx
idiv ecx
mov ecx, dword[esp+0x14]
imul eax, ecx
mov ecx, dword[esp+0x14]
sub eax, ecx
mov ecx, dword[esp+0x14]
lea eax, [eax+ecx+0xf]
mov dword[esp+0x14], eax
lea eax, [esp+0x7c]
push eax
call fcn.0043bbb2
neg eax
fld qword[0x470918]
sbb eax, eax
and eax, 0x20
add eax, 0x20
mov dword[0x4796ec], eax
fstp qword[esp+0x1c]
mov eax, 0x4795d0
fld qword[0x470910]
fstp qword[esp+0x1c]
fld qword[0x470908]
fstp qword[esp+0x1c]
fld qword[0x470900]
fstp qword[esp+0x14]
fld qword[0x4708f8]
fstp qword[esp+0x14]
fld qword[esp+0x1c]
fdiv qword[0x4708f0]
fstp qword[esp+0x14]
mov ecx, dword[esp+0xa90]
mov dword
pop ecx
pop edi
pop esi
pop ebx
mov ecx, dword[esp+0xa78]
xor ecx, esp
call fcn.00410cd7
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/e16f74a2849182d98050864255e902f8