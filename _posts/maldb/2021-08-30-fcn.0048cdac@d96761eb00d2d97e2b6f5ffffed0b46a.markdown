---
layout: post
title:  "fcn.0048cdac @ d96761eb00d2d97e2b6f5ffffed0b46a"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0048cdac
- **Origin (md5):** d96761eb00d2d97e2b6f5ffffed0b46a
- **VirusTotal:** [virustotal.com/gui/file/d96761eb00d2d97e2b6f5ffffed0b46a][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.0048cdac@d96761eb00d2d97e2b6f5ffffed0b46a">fcn.0048cdac</a><br>@d96761eb00d2d97e2b6f5ffffed0b46a</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
and esp, 0xfffffff8
sub esp, 0xa8
push esi
push edi
push dword[ebp+8]
mov ecx, 0x4c67b0
call fcn.00402612
mov ecx, dword[0x4c6810]
mov edi, dword[ebp+0x10]
mov dword[esp+0x24], eax
mov ecx, dword[ecx+eax*4]
mov eax, 0xfffffe6e
mov esi, dword[ecx]
mov ecx, dword[edi+8]
mov dword[esp+0x3c], esi
cmp ecx, eax
ja off.b707
je off.b608
mov eax, 0xfffffdd9
cmp ecx, eax
ja off.b241
je off.b218
cmp ecx, 0xfffffd09
je off.b187
cmp ecx, 0xfffffd0e
je off.b178
cmp ecx, 0xfffffd0f
je off.b128
cmp ecx, 0xfffffd16
jne off.b155
push ecx
jmp off.b595
cmp byte[esi+0x19a], 1
jne off.b146
push ecx
push dword[edi+4]
call fcn.0048b60b
mov word[esi+0x199], 0
push edi
push dword[ebp+0xc]
push 0x4e
push dword[ebp+8]
call dword[sym.imp.USER32.dll_DefDlgProcW]
pop edi
pop esi
mov esp, ebp
pop ebp
ret 0xc
mov byte[esi+0x199], 1
jmp off.b155
cmp byte[esi+0x199], 0
mov byte[esi+0x19a], 1
jne off.b155
mov byte[esi+0x19a], 0
push dword[edi+8]
jmp off.b595
push 0
push 0
push 0x130b
push dword[edi]
call dword[sym.imp.USER32.dll_SendMessageW]
push eax
jmp off.b595
cmp ecx, 0xfffffdda
je off.b526
cmp ecx, 0xfffffdee
je off.b405
cmp ecx, 0xfffffe3d
je off.b608
cmp ecx, 0xfffffe64
jne off.b155
mov eax, dword[edi]
push 0xfffffffffffffff0
push eax
mov dword[esp+0x28], eax
call dword[sym.imp.USER32.dll_GetWindowLongW]
test eax, 0x100
je off.b155
cmp word[edi+0xc], 0x20
jne off.b155
xor esi, esi
push esi
push 9
push 0x110a
push dword[esp+0x2c]
call dword[sym.imp.USER32.dll_SendMessageW]
test eax, eax
je off.b155
mov dword[esp+0x58], eax
lea eax, [esp+0x54]
push eax
push esi
push 0x113e
push dword[esp+0x2c]
mov dword[esp+0x64], 4
call dword[sym.imp.USER32.dll_SendMessageW]
test eax, eax
je off.b155
push esi
push dword[esp+0x7c]
jmp off.b598
cmp dword[esi+0x188], 0
je off.b155
mov edx, dword[0x4c6834]
push 3
pop ecx
cmp edx, ecx
jl off.b155
mov esi, dword[0x4c6824]
mov eax, dword[esi+ecx*4]
mov eax, dword[eax]
test eax, eax
je off.b474
mov edi, dword[esp+0x24]
cmp dword[eax+4], edi
mov edi, dword[ebp+0x10]
jne off.b474
movzx eax, byte[eax+0x93]
cmp eax, dword[edi+4]
je off.b479
inc ecx
cmp ecx, edx
jle off.b441
cmp ecx, edx
jg off.b155
mov eax, dword[esi+ecx*4]
push 0x4f
mov eax, dword[eax]
push dword[eax+0x54]
lea eax, [edi+0x10]
push eax
call fcn.004242ee
add esp, 0xc
xor eax, eax
mov word[edi+0xae], ax
xor eax, eax
inc eax
jmp off.b170
mov esi, dword[sym.imp.USER32.dll_GetKeyState]
push 0x11
call esi
test ax, ax
jns off.b155
push 9
call esi
test ax, ax
jns off.b155
push 0
push 0
push 0x130b
push dword[edi]
call dword[sym.imp.USER32.dll_SendMessageW]
push 0x10
mov esi, eax
call dword[sym.imp.USER32.dll_GetKeyState]
test ax, ax
jns off.b593
dec esi
jmp off.b594
inc esi
push esi
push dword[edi+4]
call fcn.0048b60b
jmp off.b155
xor esi, esi
push esi
push 9
push 0x110a
push dword[edi]
call dword[sym.imp.USER32.dll_SendMessageW]
test eax, eax
je off.b155
mov dword[esp+0x58], eax
lea eax, [esp+0x54]
push eax
push esi
push 0x113e
push dword[edi]
mov dword[esp+0x64], 4
call dword[sym.imp.USER32.dll_SendMessageW]
test eax, eax
je off.b155
mov eax, dword[edi+0x34]
cmp eax, dword[edi+0x5c]
je off.b155
cmp dword[edi+0xc], 0x1000
je off.b155
cmp dword[edi+0xc], 1
jmp off.b389
cmp ecx, 0xfffffff0
ja off.b1133
je off.b1122
cmp ecx, 0xfffffec0
je off.b1105
cmp ecx, 0xfffffed4
je off.b1105
cmp ecx, 0xffffff93
je off.b932
cmp ecx, 0xffffff94
jne off.b155
mov esi, dword[edi+4]
lea eax, [esp+0x10]
push eax
lea eax, [esp+0x28]
mov ecx, 0x4c67b0
push eax
push esi
call fcn.00402402
test al, al
je off.b155
mov eax, dword[0x4c6824]
mov ecx, dword[esp+0x10]
push 0
mov eax, dword[eax+ecx*4]
mov ecx, dword[eax]
mov ax, word[edi+0x10]
mov word[ecx+0x96], ax
push dword[edi+4]
call fcn.0048b60b
mov edx, dword[0x4c6824]
mov ecx, dword[esp+0x10]
mov eax, dword[edx+ecx*4]
mov eax, dword[eax]
cmp dword[eax+0x28], 0
jbe off.b155
mov dword[0x4c67ec], esi
mov eax, dword[edx+ecx*4]
mov ecx, 0x4c67f0
mov eax, dword[eax]
add eax, 0x24
push eax
call fcn.004081a7
mov eax, dword[0x4c6824]
mov ecx, dword[esp+0x10]
push 0x48b602
mov eax, dword[eax+ecx*4]
mov eax, dword[eax]
mov al, byte[eax+0x98]
mov byte[0x4c6800], al
push dword[edi+0x10]
push 0x1030
push dword[edi]
call dword[sym.imp.USER32.dll_SendMessageW]
jmp off.b155
xor eax, eax
push eax
push eax
push eax
push dword[0x4c685c]
call dword[sym.imp.COMCTL32.dll_ImageList_SetDragCursorImage]
push 0xfffffffffffffff0
push 0xfffffffffffffff8
xor esi, esi
push esi
push dword[0x4c685c]
call dword[sym.imp.COMCTL32.dll_ImageList_BeginDrag]
push dword[ebp+8]
call dword[sym.imp.USER32.dll_SetCapture]
mov eax, dword[ebp+0xc]
lea ecx, [esp+0x28]
mov dword[0x4c6860], eax
mov dword[esp+0x28], esi
mov dword[esp+0x30], esi
mov dword[esp+0x34], 1
call fcn.00409a20
mov eax, dword[ebp+0xc]
lea ecx, [esp+0x40]
inc esi
mov dword[esp+0x28], eax
push str._GUI_DRAGID
mov dword[esp+0x38], esi
call fcn.00407f41
push esi
lea eax, [esp+0x2c]
mov ecx, 0x4c7270
push eax
lea eax, [esp+0x48]
push eax
call fcn.00408b13
lea ecx, [esp+0x40]
call fcn.00405a64
lea esi, [edi+0x20]
push esi
push dword[edi]
call dword[sym.imp.USER32.dll_ClientToScreen]
push dword[edi+0x24]
push dword[esi]
push 0
call dword[sym.imp.COMCTL32.dll_ImageList_DragEnter]
lea ecx, [esp+0x28]
call fcn.00409a20
jmp off.b155
push 1
push 0
push dword[edi]
call dword[sym.imp.USER32.dll_InvalidateRect]
jmp off.b155
call dword[sym.imp.USER32.dll_ReleaseCapture]
jmp off.b155
cmp ecx, 0xfffffff4
je off.b2082
cmp ecx, 0xfffffffb
je off.b1494
cmp ecx, 0xfffffffe
jne off.b155
push 1
push esi
mov esi, 0x4c67b0
mov ecx, esi
call fcn.00402344
lea eax, [esp+0x18]
push eax
call dword[sym.imp.USER32.dll_GetCursorPos]
lea eax, [esp+0x18]
push eax
push dword[edi]
call dword[sym.imp.USER32.dll_ScreenToClient]
push dword[edi]
mov ecx, esi
call fcn.004025db
cmp eax, 0xffffffff
je off.b155
mov ecx, dword[0x4c6824]
mov eax, dword[ecx+eax*4]
mov eax, dword[eax]
mov al, byte[eax+0x90]
cmp al, 0x10
jb off.b155
cmp al, 0x11
jbe off.b1361
cmp al, 0x13
jne off.b155
mov eax, dword[esp+0x18]
xor esi, esi
mov dword[esp+0x40], eax
mov eax, dword[esp+0x1c]
mov dword[esp+0x44], eax
lea eax, [esp+0x40]
push eax
push esi
push 0x1012
push dword[edi]
call dword[sym.imp.USER32.dll_SendMessageW]
cmp eax, 0xffffffff
je off.b155
mov dword[esp+0x80], eax
lea eax, [esp+0x7c]
push eax
push esi
push 0x104b
push dword[edi]
mov dword[esp+0x8c], 4
call dword[sym.imp.USER32.dll_SendMessageW]
test byte[esp+0x48], 0xe
je off.b155
push esi
push dword[esp+0xa0]
jmp off.b598
mov eax, dword[esp+0x18]
xor esi, esi
mov dword[esp+0x28], eax
mov eax, dword[esp+0x1c]
mov dword[esp+0x2c], eax
lea eax, [esp+0x28]
push eax
push esi
push 0x1111
push dword[edi]
call dword[sym.imp.USER32.dll_SendMessageW]
test eax, eax
je off.b155
mov dword[esp+0x58], eax
lea eax, [esp+0x54]
push eax
push esi
push 0x113e
push dword[edi]
mov dword[esp+0x64], 0xc
mov dword[esp+0x70], 0xf000
call dword[sym.imp.USER32.dll_SendMessageW]
test byte[esp+0x30], 0x46
je off.b155
push esi
mov esi, dword[sym.imp.USER32.dll_SendMessageW]
push 9
push 0x110b
push dword[edi]
call esi
push dword[esp+0x34]
push 9
push 0x110b
push dword[edi]
call esi
jmp off.b155
push 1
push esi
mov esi, 0x4c67b0
mov byte[esp+0x17], 0
mov ecx, esi
call fcn.00402344
lea eax, [esp+0x18]
push eax
call dword[sym.imp.USER32.dll_GetCursorPos]
lea eax, [esp+0x18]
push eax
push dword[edi]
call dword[sym.imp.USER32.dll_ScreenToClient]
push dword[edi]
mov ecx, esi
call fcn.004025db
mov ecx, eax
mov dword[esp+0x14], ecx
mov dword[esp+0x10], ecx
cmp ecx, 0xffffffff
jne off.b1602
push dword[edi]
call dword[sym.imp.USER32.dll_GetParent]
push eax
mov ecx, esi
call fcn.004025db
mov ecx, eax
mov dword[esp+0x14], ecx
mov dword[esp+0x10], ecx
cmp ecx, 0xffffffff
je off.b155
mov byte[esp+0xf], 1
mov eax, dword[0x4c6824]
mov dword[esp+0x20], ecx
mov eax, dword[eax+ecx*4]
mov eax, dword[eax]
mov al, byte[eax+0x90]
cmp al, 0x10
je off.b1871
cmp al, 0x13
jne off.b155
mov eax, dword[esp+0x18]
xor esi, esi
mov dword[esp+0x40], eax
mov eax, dword[esp+0x1c]
mov dword[esp+0x44], eax
lea eax, [esp+0x40]
push eax
push esi
push 0x1012
push dword[edi]
call dword[sym.imp.USER32.dll_SendMessageW]
cmp eax, 0xffffffff
jle off.b1805
cmp byte[esp+0xf], 0
jne off.b1805
mov dword[esp+0x80], eax
lea eax, [esp+0x7c]
push eax
push esi
push 0x104b
push dword[edi]
mov dword[esp+0x8c], 4
call dword[sym.imp.USER32.dll_SendMessageW]
test eax, eax
je off.b155
test byte[esp+0x48], 0xe
je off.b1805
lea eax, [esp+0x10]
mov ecx, 0x4c67b0
push eax
lea eax, [esp+0x28]
push eax
push dword[esp+0xa4]
call fcn.00402402
test al, al
je off.b1797
mov ecx, dword[esp+0x10]
mov eax, dword[0x4c6824]
mov dword[esp+0x14], ecx
mov eax, dword[eax+ecx*4]
mov eax, dword[eax]
test eax, eax
je off.b1797
cmp dword[eax+0xc], esi
jne off.b1805
mov eax, dword[esp+0x20]
mov dword[esp+0x14], eax
lea eax, [esp+0x18]
push eax
push dword[edi]
call dword[sym.imp.USER32.dll_ClientToScreen]
mov ecx, dword[esp+0x14]
mov eax, dword[0x4c6824]
mov eax, dword[eax+ecx*4]
mov eax, dword[eax]
mov ecx, dword[eax+0xc]
test ecx, ecx
je off.b155
mov eax, dword[esp+0x3c]
push esi
push dword[eax]
push dword[esp+0x24]
push dword[esp+0x24]
push esi
push ecx
call dword[sym.imp.USER32.dll_TrackPopupMenuEx]
jmp off.b155
mov eax, dword[esp+0x18]
xor esi, esi
mov dword[esp+0x28], eax
mov eax, dword[esp+0x1c]
mov dword[esp+0x2c], eax
lea eax, [esp+0x28]
push eax
push esi
push 0x1111
push dword[edi]
call dword[sym.imp.USER32.dll_SendMessageW]
test eax, eax
je off.b2012
mov dword[esp+0x58], eax
lea eax, [esp+0x54]
push eax
push esi
push 0x113e
push dword[edi]
mov dword[esp+0x64], 4
call dword[sym.imp.USER32.dll_SendMessageW]
test byte[esp+0x30], 0x46
je off.b2012
lea eax, [esp+0x10]
mov ecx, 0x4c67b0
push eax
lea eax, [esp+0x28]
push eax
push dword[esp+0x80]
call fcn.00402402
test al, al
je off.b2004
mov ecx, dword[esp+0x10]
mov eax, dword[0x4c6824]
mov dword[esp+0x14], ecx
mov eax, dword[eax+ecx*4]
mov eax, dword[eax]
cmp dword[eax+0xc], esi
jne off.b2012
mov eax, dword[esp+0x20]
mov dword[esp+0x14], eax
lea eax, [esp+0x18]
push eax
push dword[edi]
call dword[sym.imp.USER32.dll_ClientToScreen]
mov ecx, dword[esp+0x14]
mov eax, dword[0x4c6824]
mov eax, dword[eax+ecx*4]
mov eax, dword[eax]
mov ecx, dword[eax+0xc]
test ecx, ecx
je off.b155
mov eax, dword[esp+0x3c]
push esi
push dword[eax]
push dword[esp+0x24]
push dword[esp+0x24]
push 0x80
push ecx
call dword[sym.imp.USER32.dll_TrackPopupMenuEx]
jmp off.b518
push dword[edi]
mov esi, 0x4c67b0
mov ecx, esi
call fcn.004025db
mov dword[esp+0x10], eax
cmp eax, 0xffffffff
je off.b155
mov ecx, dword[0x4c6824]
mov eax, dword[ecx+eax*4]
mov ecx, dword[eax]
mov al, byte[ecx+0x90]
cmp al, 0x10
je off.b2138
cmp al, 0x13
jne off.b155
mov eax, dword[edi+0xc]
dec eax
je off.b2322
sub eax, 0x10000
jne off.b155
cmp dword[ecx+0x48], 0xfe000000
mov byte[esp+0xf], al
jne off.b2177
mov byte[esp+0xf], 1
lea eax, [esp+0x10]
mov ecx, esi
push eax
lea eax, [esp+0x28]
push eax
push dword[edi+0x2c]
call fcn.00402402
test al, al
jne off.b2208
xor eax, eax
jmp off.b170
mov eax, dword[0x4c6824]
mov esi, dword[esp+0x10]
push 0xfffffffffffffff0
mov eax, dword[eax+esi*4]
mov eax, dword[eax]
push dword[eax+0x34]
call dword[sym.imp.USER32.dll_GetWindowLongW]
test eax, 0x8000000
jne off.b2201
test byte[edi+0x28], 0x11
mov ecx, dword[0x4c6824]
je off.b2270
mov eax, dword[ecx+esi*4]
mov eax, dword[eax]
cmp byte[eax+0x90], 0x14
jne off.b155
mov eax, dword[ecx+esi*4]
mov eax, dword[eax]
mov eax, dword[eax+0x4c]
cmp eax, 0xffffffff
je off.b2292
mov dword[edi+0x30], eax
mov ecx, dword[0x4c6824]
mov eax, dword[ecx+esi*4]
mov eax, dword[eax]
mov eax, dword[eax+0x48]
test eax, eax
js off.b2201
cmp byte[esp+0xf], 0
je off.b2317
test byte[edi+0x24], 1
je off.b2201
mov dword[edi+0x34], eax
jmp off.b2201
push 0x20
pop eax
jmp off.b170

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/d96761eb00d2d97e2b6f5ffffed0b46a