---
layout: post
title:  "[...]ong_int___thiscall_DuiLib꞉꞉WindowImplBase꞉꞉OnCreate_unsigned_int__unsigned_int__long_int__int__ @ 279a61b1e76da49531f1f16fd1102a2d"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** [...]ong\_int\_\_\_thiscall\_DuiLib꞉꞉WindowImplBase꞉꞉OnCreate\_unsigned\_int\_\_unsigned\_int\_\_long\_int\_\_int\_\_
- **Origin (md5):** 279a61b1e76da49531f1f16fd1102a2d
- **VirusTotal:** [virustotal.com/gui/file/279a61b1e76da49531f1f16fd1102a2d][virustotal_ref]

# Code Tags
<span class="tag" id="PROCESS">PROCESS</span>
<span class="tag" id="RESOURCE">RESOURCE</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-4285.94140625, -1310.979736328125, '<b><a href="/report/sym.Install.exe_public_virtual:_long_int___thiscall_DuiLib::WindowImplBase::OnCreate_unsigned_int__unsigned_int__long_int__int__@279a61b1e76da49531f1f16fd1102a2d">sym.Install.exe_public_virtual:_long_int___thiscall_DuiLib::WindowImplBase::OnCreate_unsigned_int__unsigned_int__long_int__int__</a><br>@279a61b1e76da49531f1f16fd1102a2d</b><br>', 'point { fill-color: #e0440e; }'],
[4285.94091796875, 1310.979736328125, '<b><a href="/report/sym.tpop2.exe_public_virtual:_long_int___thiscall_DuiLib::WindowImplBase::OnCreate_unsigned_int__unsigned_int__long_int__int__@289859175c221b107317af7727d26c17">sym.tpop2.exe_public_virtual:_long_int___thiscall_DuiLib::WindowImplBase::OnCreate_unsigned_int__unsigned_int__long_int__int__</a><br>@289859175c221b107317af7727d26c17</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
sub esp, 0x1cc
lea ebp, [esp-4]
mov eax, dword[0x53ebd0]
xor eax, ebp
mov dword[ebp+0x1cc], eax
push 0xa0
mov eax, 0x4f33f8
call fcn.00498de5
push 0xfffffffffffffff0
mov esi, ecx
call method
push eax
call dword[sym.imp.USER32.dll_GetWindowLongW]
and eax, 0xff3fffff
or eax, 0x6000000
push eax
push 0xfffffffffffffff0
mov ecx, esi
call method
push eax
call dword[sym.imp.USER32.dll_SetWindowLongW]
lea eax, [ebp-0x28]
push eax
mov ecx, esi
call method
push eax
call dword[sym.imp.USER32.dll_GetClientRect]
mov eax, dword[ebp-0x1c]
sub eax, dword[ebp-0x24]
push 0x20
push eax
mov eax, dword[ebp-0x20]
sub eax, dword[ebp-0x28]
xor ebx, ebx
push eax
push dword[ebp-0x24]
mov ecx, esi
push dword[ebp-0x28]
push ebx
call method
push eax
call dword[sym.imp.USER32.dll_SetWindowPos]
push dword[esi+4]
lea edi, [esi+0x2c]
mov ecx, edi
call sym
lea eax, [esi+0x24]
push eax
mov ecx, edi
call sym
lea ecx, [ebp]
call sym
mov dword[ebp-4], ebx
call sym
mov ecx, eax
call sym
test al, al
je off.b291
lea eax, [ebp+0x148]
push eax
call sym
pop ecx
mov eax, dword[esi]
lea ecx, [ebp-0xac]
push ecx
mov ecx, esi
mov byte[ebp-4], 1
call dword[eax+0x20]
mov ecx, eax
mov byte[ebp-4], 2
call sym
push eax
lea ecx, [ebp+0x148]
call sym
lea ecx, [ebp-0xac]
mov byte[ebp-4], 1
call sym
lea ecx, [ebp+0x148]
call sym
push eax
call sym
pop ecx
lea ecx, [ebp+0x148]
mov byte[ebp-4], bl
call sym
mov eax, dword[esi]
mov ecx, esi
call dword[eax+0x2c]
dec eax
dec eax
je off.b477
dec eax
dec eax
jne off.b526
mov eax, dword[esi]
push str.ZIPRES
mov ecx, esi
call dword[eax+0x34]
push eax
call sym
push eax
call dword[sym.imp.KERNEL32.dll_FindResourceW]
mov dword[ebp-0x10], eax
cmp eax, ebx
je off.b730
push eax
call sym
push eax
call dword[sym.imp.KERNEL32.dll_LoadResource]
push dword[ebp-0x10]
mov dword[ebp-0x14], eax
cmp eax, ebx
jne off.b384
call dword[sym.imp.KERNEL32.dll_FreeResource]
jmp off.b730
call sym
push eax
call dword[sym.imp.KERNEL32.dll_SizeofResource]
mov dword[ebp-0x18], eax
cmp eax, ebx
je off.b730
push eax
call fcn.004571cd
pop ecx
mov dword[sym.Install.exe_unsigned_char__DuiLib::WindowImplBase::m_lpResourceZIPBuffer], eax
cmp eax, ebx
je off.b450
push dword[ebp-0x18]
push dword[ebp-0x14]
call dword[sym.imp.KERNEL32.dll_LockResource]
push eax
push dword[sym.Install.exe_unsigned_char__DuiLib::WindowImplBase::m_lpResourceZIPBuffer]
call fcn.004962d0
add esp, 0xc
push dword[ebp-0x10]
call dword[sym.imp.KERNEL32.dll_FreeResource]
push dword[ebp-0x18]
push dword[sym.Install.exe_unsigned_char__DuiLib::WindowImplBase::m_lpResourceZIPBuffer]
call sym
pop ecx
pop ecx
jmp off.b526
mov eax, dword[esi]
lea ecx, [ebp-0xac]
push ecx
mov ecx, esi
call dword[eax+0x30]
push 1
mov ecx, eax
mov byte[ebp-4], 3
call sym
push eax
call sym
pop ecx
pop ecx
lea ecx, [ebp-0xac]
mov byte[ebp-4], bl
call sym
mov eax, dword[esi]
mov ecx, esi
call dword[eax+0x2c]
cmp eax, 3
mov eax, dword[esi]
jne off.b617
lea ecx, [ebp-0xac]
push ecx
mov ecx, esi
call dword[eax+0x24]
mov ecx, eax
mov byte[ebp-4], 4
call sym
push eax
call fcn.00491558
movzx eax, ax
pop ecx
lea ecx, [ebp-0xac]
mov dword[ebp-0x14], eax
mov byte[ebp-4], bl
call sym
push ebx
push edi
lea eax, [esi+0x28]
push eax
push 0x4ffdd8
push dword[ebp-0x14]
lea ecx, [ebp]
call sym
mov dword[ebp-0x10], eax
jmp off.b680
lea ecx, [ebp+0x148]
push ecx
mov ecx, esi
call dword[eax+0x24]
push ebx
push edi
lea edx, [esi+0x28]
push edx
push ebx
mov ecx, eax
mov byte[ebp-4], 5
call sym
push ecx
mov ecx, esp
mov dword[ecx], eax
lea ecx, [ebp]
mov dword[ebp-0x14], esp
call sym
lea ecx, [ebp+0x148]
mov dword[ebp-0x10], eax
mov byte[ebp-4], bl
call sym
cmp dword[ebp-0x10], ebx
jne off.b693
push 1
call dword[sym.imp.KERNEL32.dll_ExitProcess]
push dword[ebp-0x10]
mov ecx, edi
call sym
lea eax, [esi+0x20]
push eax
mov ecx, edi
call sym
push 1
mov ecx, edi
call sym
mov eax, dword[esi]
mov ecx, esi
call dword[eax+0x18]
or dword[ebp-4], 0xffffffff
lea ecx, [ebp]
call sym
xor eax, eax
mov ecx, dword[ebp-0xc]
mov dword
pop ecx
pop edi
pop esi
pop ebx
mov ecx, dword[ebp+0x1cc]
xor ecx, ebp
call fcn.00490ace
add ebp, 0x1d0
leave
ret 0x10

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/279a61b1e76da49531f1f16fd1102a2d