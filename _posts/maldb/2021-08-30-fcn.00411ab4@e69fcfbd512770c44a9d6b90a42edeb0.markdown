---
layout: post
title:  "fcn.00411ab4 @ e69fcfbd512770c44a9d6b90a42edeb0"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00411ab4
- **Origin (md5):** e69fcfbd512770c44a9d6b90a42edeb0
- **VirusTotal:** [virustotal.com/gui/file/e69fcfbd512770c44a9d6b90a42edeb0][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [71.05290222167969, 5.302710056304932, '<b><a href="/report/fcn.00411ab4@e69fcfbd512770c44a9d6b90a42edeb0">fcn.00411ab4</a><br>@e69fcfbd512770c44a9d6b90a42edeb0</b><br>', 'point { fill-color: #e0440e; }'],
[-115.95999145507812, 23.964704513549805, '<b><a href="/report/fcn.0040db80@fca52b995e756cff97168f6fef94b37d">fcn.0040db80</a><br>@fca52b995e756cff97168f6fef94b37d</b><br>', 'null'],
[194.3118896484375, 1.8776158094406128, '<b><a href="/report/fcn.0041c4e3@505be53c36227b94e2fcc406f247f6e5">fcn.0041c4e3</a><br>@505be53c36227b94e2fcc406f247f6e5</b><br>', 'null'],
[4.555224895477295, -106.94422149658203, '<b><a href="/report/fcn.0040d95d@03a5d7e745838b7e7a4c7d09dcb64e60">fcn.0040d95d</a><br>@03a5d7e745838b7e7a4c7d09dcb64e60</b><br>', 'null'],
[-186.59878540039062, -10.837433815002441, '<b><a href="/report/fcn.0040a9a0@48311276b3cd8adebcd777f7aad326b2">fcn.0040a9a0</a><br>@48311276b3cd8adebcd777f7aad326b2</b><br>', 'null'],
[-168.7780303955078, -89.57398986816406, '<b><a href="/report/fcn.004321c5@368dd66411b8b6ce2bcd15b0e14af5c0">fcn.004321c5</a><br>@368dd66411b8b6ce2bcd15b0e14af5c0</b><br>', 'null'],
[117.56617736816406, -44.032745361328125, '<b><a href="/report/fcn.004332fd@ba86269e5231930ee4def4088ddb8d19">fcn.004332fd</a><br>@ba86269e5231930ee4def4088ddb8d19</b><br>', 'null'],
[-92.02497863769531, -52.66654586791992, '<b><a href="/report/fcn.004321d7@adc325bca51b67a67785e7e986af8b4d">fcn.004321d7</a><br>@adc325bca51b67a67785e7e986af8b4d</b><br>', 'null'],
[-104.79463958740234, -130.40264892578125, '<b><a href="/report/fcn.00413280@b9e7701b101639a92238161f00b7471e">fcn.00413280</a><br>@b9e7701b101639a92238161f00b7471e</b><br>', 'null'],
[61.205230712890625, -138.46627807617188, '<b><a href="/report/fcn.10009f5e@b74a1e462e0b6bacec09e2503391e156">fcn.10009f5e</a><br>@b74a1e462e0b6bacec09e2503391e156</b><br>', 'null'],
[145.22454833984375, 56.964996337890625, '<b><a href="/report/fcn.0047e540@289859175c221b107317af7727d26c17">fcn.0047e540</a><br>@289859175c221b107317af7727d26c17</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
mov eax, 0x1af0
call fcn.00412400
mov eax, dword[0x4d4d30]
xor eax, ebp
mov dword[ebp-4], eax
and dword[ebp-0x1abc], 0
mov eax, dword[ebp+8]
mov ecx, dword[ebp+0xc]
push esi
xor esi, esi
mov dword[ebp-0x1ac8], eax
push edi
xor edi, edi
mov dword[ebp-0x1ad0], ecx
mov dword[ebp-0x1ac0], esi
cmp dword[ebp+0x10], esi
jne 0x411afc
xor eax, eax
jmp 0x412309
test ecx, ecx
jne 0x411b1f
call fcn.0040f473
and dword[eax], esi
call fcn.0040f4a7
mov dword[eax], 0x16
call fcn.0040f438
or eax, 0xffffffff
jmp 0x412309
mov edx, eax
mov ecx, eax
sar edx, 5
and ecx, 0x1f
shl ecx, 6
mov dword[ebp-0x1ad8], edx
push ebx
mov edx, dword[edx*4+0xb94b40]
mov dword[ebp-0x1adc], ecx
mov bl, byte[ecx+edx+0x24]
add bl, bl
sar bl, 1
cmp bl, 2
je 0x411b52
cmp bl, 1
jne 0x411b7d
mov eax, dword[ebp+0x10]
not eax
test al, 1
jne 0x411b77
call fcn.0040f473
and dword[eax], esi
call fcn.0040f4a7
mov dword[eax], 0x16
call fcn.0040f438
jmp 0x4122ff
mov eax, dword[ebp-0x1ac8]
test byte[ecx+edx+4], 0x20
je 0x411b93
push 2
push 0
push 0
push eax
call fcn.00412617
add esp, 0x10
push dword[ebp-0x1ac8]
call fcn.00411359
pop ecx
test eax, eax
je 0x411ef7
mov eax, dword[ebp-0x1ad8]
mov ecx, dword[ebp-0x1adc]
mov eax, dword[eax*4+0xb94b40]
test byte[ecx+eax+4], 0x80
je 0x411ef7
call fcn.0040d0b1
xor ecx, ecx
mov eax, dword[eax+0x6c]
cmp dword[eax+0xa8], ecx
lea eax, [ebp-0x1ae8]
push eax
mov eax, dword[ebp-0x1ad8]
sete cl
mov dword[ebp-0x1ac4], ecx
mov ecx, dword[ebp-0x1adc]
mov eax, dword[eax*4+0xb94b40]
push dword[ecx+eax]
call dword[sym.imp.KERNEL32.dll_GetConsoleMode]
test eax, eax
je 0x411ef7
cmp dword[ebp-0x1ac4], esi
je 0x411c19
test bl, bl
je 0x411ef7
call dword[sym.imp.KERNEL32.dll_GetConsoleCP]
mov edx, dword[ebp-0x1ad0]
xor ecx, ecx
and dword[ebp-0x1ac8], ecx
mov dword[ebp-0x1af0], eax
mov dword[ebp-0x1acc], ecx
mov dword[ebp-0x1ad4], edx
cmp dword[ebp+0x10], ecx
jbe 0x4122c9
mov eax, dword[ebp-0x1ad4]
xor edx, edx
mov dword[ebp-0x1ac0], edx
mov dword[ebp-0x1aec], 0xa
and dword[ebp-0x1ac4], edi
test bl, bl
jne 0x411e1c
mov dl, byte[eax]
xor eax, eax
mov ecx, dword[ebp-0x1adc]
cmp dl, 0xa
sete al
mov dword[ebp-0x1ae8], eax
mov eax, dword[ebp-0x1ad8]
mov eax, dword[eax*4+0xb94b40]
mov dword[ebp-0x1ac4], eax
cmp dword[ecx+eax+0x38], edi
je 0x411cb9
mov al, byte[ecx+eax+0x34]
mov byte[ebp-0xc], al
mov eax, dword[ebp-0x1ac4]
mov byte[ebp-0xb], dl
push 2
and dword[ecx+eax+0x38], edi
lea eax, [ebp-0xc]
push eax
jmp 0x411d13
movsx eax, dl
push eax
call fcn.00412606
pop ecx
test eax, eax
je 0x411d0b
mov eax, dword[ebp-0x1ad0]
mov edx, dword[ebp-0x1ad4]
sub eax, edx
add eax, dword[ebp+0x10]
cmp eax, 1
jbe 0x411ebc
push 2
push edx
lea eax, [ebp-0x1acc]
push eax
call fcn.0041277f
add esp, 0xc
cmp eax, 0xffffffff
je 0x412001
mov eax, dword[ebp-0x1ad4]
inc eax
inc dword[ebp-0x1ac0]
jmp 0x411d31
push 1
push dword[ebp-0x1ad4]
lea eax, [ebp-0x1acc]
push eax
call fcn.0041277f
add esp, 0xc
cmp eax, 0xffffffff
je 0x412001
mov eax, dword[ebp-0x1ad4]
xor ecx, ecx
inc eax
inc dword[ebp-0x1ac0]
push ecx
push ecx
push 5
mov dword[ebp-0x1ad4], eax
lea eax, [ebp-0xc]
push eax
push 1
lea eax, [ebp-0x1acc]
push eax
push ecx
push dword[ebp-0x1af0]
call dword[sym.imp.KERNEL32.dll_WideCharToMultiByte]
mov dword[ebp-0x1ac4], eax
test eax, eax
je 0x412001
push 0
lea ecx, [ebp-0x1ac8]
push ecx
mov ecx, dword[ebp-0x1adc]
push eax
lea eax, [ebp-0xc]
push eax
mov eax, dword[ebp-0x1ad8]
mov eax, dword[eax*4+0xb94b40]
push dword[ecx+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je 0x411eea
mov esi, dword[ebp-0x1ac0]
mov ecx, dword[ebp-0x1abc]
add esi, ecx
mov eax, dword[ebp-0x1ac4]
cmp dword[ebp-0x1ac8], eax
jl 0x412007
cmp dword[ebp-0x1ae8], edi
je 0x411e11
mov ecx, dword[ebp-0x1adc]
lea eax, [ebp-0x1ac8]
push 0
push eax
push 1
lea eax, [ebp-0xc]
mov byte[ebp-0xc], 0xd
push eax
mov eax, dword[ebp-0x1ad8]
mov eax, dword[eax*4+0xb94b40]
push dword[ecx+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je 0x411eea
cmp dword[ebp-0x1ac8], 1
jl 0x412001
inc dword[ebp-0x1abc]
inc esi
mov ecx, dword[ebp-0x1acc]
jmp 0x411ea2
cmp bl, 1
je 0x411e26
cmp bl, 2
jne 0x411e59
movzx ecx, word[eax]
xor edx, edx
cmp cx, word[ebp-0x1aec]
mov dword[ebp-0x1acc], ecx
sete dl
add eax, 2
mov dword[ebp-0x1ac4], edx
mov edx, dword[ebp-0x1ac0]
add edx, 2
mov dword[ebp-0x1ad4], eax
mov dword[ebp-0x1ac0], edx
cmp bl, 1
je 0x411e63
cmp bl, 2
jne 0x411eae
push ecx
call fcn.00412797
pop ecx
mov ecx, dword[ebp-0x1acc]
cmp ax, cx
jne 0x411eea
add esi, 2
cmp dword[ebp-0x1ac4], edi
je 0x411ea2
push 0xd
pop eax
push eax
mov dword[ebp-0x1acc], eax
call fcn.00412797
pop ecx
mov ecx, dword[ebp-0x1acc]
cmp ax, cx
jne 0x411eea
inc esi
inc dword[ebp-0x1abc]
mov edx, dword[ebp-0x1ac0]
mov eax, dword[ebp-0x1ad4]
cmp edx, dword[ebp+0x10]
jb 0x411c60
jmp 0x412001
mov ebx, dword[ebp-0x1ad8]
inc esi
mov al, byte[edx]
mov edx, dword[ebp-0x1adc]
mov ecx, dword[ebx*4+0xb94b40]
mov byte[edx+ecx+0x34], al
mov eax, dword[ebx*4+0xb94b40]
mov dword[edx+eax+0x38], 1
jmp 0x412001
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov edi, eax
jmp 0x412001
mov eax, dword[ebp-0x1ad8]
mov ecx, dword[eax*4+0xb94b40]
mov eax, dword[ebp-0x1adc]
test byte[eax+ecx+4], 0x80
je 0x41228a
mov edx, dword[ebp-0x1ad0]
xor edi, edi
mov dword[ebp-0x1acc], edi
test bl, bl
jne 0x412039
mov ebx, dword[ebp+0x10]
mov dword[ebp-0x1ac8], edx
test ebx, ebx
je 0x4122c9
xor ecx, ecx
lea edi, [ebp-0x140c]
mov eax, edx
mov dword[ebp-0x1ac4], ecx
sub eax, dword[ebp-0x1ad0]
cmp eax, ebx
jae 0x411f9a
mov cl, byte[edx]
inc edx
inc eax
mov byte[ebp-0x1ae1], cl
cmp cl, 0xa
mov dword[ebp-0x1ac8], edx
mov ecx, dword[ebp-0x1ac4]
jne 0x411f7c
inc dword[ebp-0x1abc]
mov byte[edi], 0xd
inc edi
inc ecx
mov dl, byte[ebp-0x1ae1]
mov byte[edi], dl
inc edi
mov edx, dword[ebp-0x1ac8]
inc ecx
mov dword[ebp-0x1ac4], ecx
cmp ecx, 0x13ff
jb 0x411f52
mov ecx, dword[ebp-0x1adc]
lea eax, [ebp-0x140c]
sub edi, eax
lea eax, [ebp-0x1ae0]
push 0
push eax
push edi
lea eax, [ebp-0x140c]
push eax
mov eax, dword[ebp-0x1ad8]
mov eax, dword[eax*4+0xb94b40]
push dword[ecx+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je 0x411eea
add esi, dword[ebp-0x1ae0]
cmp dword[ebp-0x1ae0], edi
jl 0x411ffb
mov edx, dword[ebp-0x1ac8]
mov eax, edx
sub eax, dword[ebp-0x1ad0]
cmp eax, ebx
jb 0x411f3c
mov edi, dword[ebp-0x1acc]
mov ecx, dword[ebp-0x1abc]
test esi, esi
jne 0x412304
test edi, edi
je 0x4122c3
push 5
pop ebx
cmp edi, ebx
jne 0x4122ba
call fcn.0040f4a7
mov dword[eax], 9
call fcn.0040f473
mov dword[eax], ebx
jmp 0x4122ff
mov ecx, edx
cmp bl, 2
jne 0x41212e
cmp dword[ebp+0x10], esi
jbe 0x4122c9
mov dword[ebp-0x1aec], 0xa
and dword[ebp-0x1ae8], 0
lea ebx, [ebp-0x140c]
mov eax, ecx
push 0xd
sub eax, edx
mov edx, dword[ebp-0x1ae8]
pop esi
cmp eax, dword[ebp+0x10]
jae 0x4120a9
movzx edi, word[ecx]
add eax, 2
add ecx, 2
cmp di, word[ebp-0x1aec]
jne 0x412098
add dword[ebp-0x1abc], 2
mov word[ebx], si
add ebx, 2
add edx, 2
mov word[ebx], di
add edx, 2
add ebx, 2
cmp edx, 0x13fe
jb 0x412071
lea eax, [ebp-0x140c]
mov dword[ebp-0x1ac4], ecx
mov ecx, dword[ebp-0x1adc]
sub ebx, eax
push 0
lea eax, [ebp-0x1ae0]
push eax
push ebx
lea eax, [ebp-0x140c]
push eax
mov eax, dword[ebp-0x1ad8]
mov eax, dword[eax*4+0xb94b40]
push dword[ecx+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
mov esi, dword[ebp-0x1ac0]
mov edi, dword[ebp-0x1acc]
test eax, eax
je 0x411eea
add esi, dword[ebp-0x1ae0]
mov dword[ebp-0x1ac0], esi
cmp dword[ebp-0x1ae0], ebx
jl 0x412001
mov ecx, dword[ebp-0x1ac4]
mov eax, ecx
mov edx, dword[ebp-0x1ad0]
sub eax, edx
cmp eax, dword[ebp+0x10]
jb 0x412057
jmp 0x412001
mov ebx, dword[ebp+0x10]
mov dword[ebp-0x1ac8], ecx
test ebx, ebx
je 0x4122c9
mov dword[ebp-0x1aec], 0xa
and dword[ebp-0x1ae8], 0
lea eax, [ebp-0x1ab8]
mov edi, dword[ebp-0x1ac8]
sub ecx, edx
mov edx, dword[ebp-0x1ae8]
cmp ecx, ebx
jae 0x4121a3
movzx esi, word[edi]
add ecx, 2
add edi, 2
mov dword[ebp-0x1ac8], edi
cmp si, word[ebp-0x1aec]
jne 0x412192
push 0xd
pop edi
mov word[eax], di
add eax, 2
mov edi, dword[ebp-0x1ac8]
add edx, 2
mov word[eax], si
add edx, 2
add eax, 2
cmp edx, 0x6a8
jb 0x412164
xor esi, esi
lea ecx, [ebp-0xd64]
push esi
push esi
push 0xd55
push ecx
lea ecx, [ebp-0x1ab8]
sub eax, ecx
cdq
sub eax, edx
sar eax, 1
push eax
mov eax, ecx
push eax
push esi
push 0xfde9
call dword[sym.imp.KERNEL32.dll_WideCharToMultiByte]
mov esi, dword[ebp-0x1ac0]
mov edi, dword[ebp-0x1acc]
mov dword[ebp-0x1ac4], eax
test eax, eax
je 0x411eea
xor ecx, ecx
mov dword[ebp-0x1ac0], ecx
push 0
sub eax, ecx
lea edx, [ebp-0x1ae0]
push edx
push eax
lea eax, [ebp-0xd64]
add eax, ecx
mov ecx, dword[ebp-0x1adc]
push eax
mov eax, dword[ebp-0x1ad8]
mov eax, dword[eax*4+0xb94b40]
push dword[ecx+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je 0x412245
mov ecx, dword[ebp-0x1ac0]
add ecx, dword[ebp-0x1ae0]
mov eax, dword[ebp-0x1ac4]
mov dword[ebp-0x1ac0], ecx
cmp eax, ecx
jg 0x4121f2
jmp 0x41225f
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov ecx, dword[ebp-0x1ac0]
mov edi, eax
mov eax, dword[ebp-0x1ac4]
mov dword[ebp-0x1acc], edi
cmp eax, ecx
jg 0x412001
mov ecx, dword[ebp-0x1ac8]
mov esi, ecx
mov edx, dword[ebp-0x1ad0]
sub esi, edx
mov dword[ebp-0x1ac0], esi
cmp esi, ebx
jb 0x412149
jmp 0x412001
push 0
lea edx, [ebp-0x1ae0]
push edx
push dword[ebp+0x10]
push dword[ebp-0x1ad0]
push dword[eax+ecx]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je 0x411eea
mov esi, dword[ebp-0x1ae0]
xor edi, edi
jmp 0x412001
push edi
call fcn.0040f486
pop ecx
jmp 0x4122ff
mov edx, dword[ebp-0x1ad0]
mov eax, dword[ebp-0x1ad8]
mov ecx, dword[ebp-0x1adc]
mov eax, dword[eax*4+0xb94b40]
test byte[ecx+eax+4], 0x40
je 0x4122ec
cmp byte[edx], 0x1a
jne 0x4122ec
xor eax, eax
jmp 0x412308
call fcn.0040f4a7
mov dword[eax], 0x1c
call fcn.0040f473
and dword[eax], 0
or eax, 0xffffffff
jmp 0x412308
sub esi, ecx
mov eax, esi
pop ebx
mov ecx, dword[ebp-4]
pop edi
xor ecx, ebp
pop esi
call fcn.004100eb
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/e69fcfbd512770c44a9d6b90a42edeb0