---
layout: post
title:  "fcn.00441880 @ 9571c7458fae91969aaed3955e433f49"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00441880
- **Origin (md5):** 9571c7458fae91969aaed3955e433f49
- **VirusTotal:** [virustotal.com/gui/file/9571c7458fae91969aaed3955e433f49][virustotal_ref]

# Code Tags
<span class="tag" id="THREAD">THREAD</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [174.33030700683594, -28.80573272705078, '<b><a href="/report/fcn.00441880@9571c7458fae91969aaed3955e433f49">fcn.00441880</a><br>@9571c7458fae91969aaed3955e433f49</b><br>', 'point { fill-color: #e0440e; }'],
[-187.39085388183594, 70.697509765625, '<b><a href="/report/fcn.00441880@e83552e81a6f265fd7baa50402d3d47d">fcn.00441880</a><br>@e83552e81a6f265fd7baa50402d3d47d</b><br>', 'null'],
[-396.214111328125, -102.48593139648438, '<b><a href="/report/fcn.00442a56@e16f74a2849182d98050864255e902f8">fcn.00442a56</a><br>@e16f74a2849182d98050864255e902f8</b><br>', 'null'],
[54.62409973144531, -145.66390991210938, '<b><a href="/report/fcn.00441880@b8b9cf6862b0d68d10750002e5baaf97">fcn.00441880</a><br>@b8b9cf6862b0d68d10750002e5baaf97</b><br>', 'null'],
[-53.850379943847656, 178.9596405029297, '<b><a href="/report/fcn.00441880@3aa98225e51cbcae2d334c8b6b4ed9fd">fcn.00441880</a><br>@3aa98225e51cbcae2d334c8b6b4ed9fd</b><br>', 'null'],
[-79.46110534667969, -244.2008819580078, '<b><a href="/report/fcn.00441880@146b14fc12cf789043a79d4f548a23bf">fcn.00441880</a><br>@146b14fc12cf789043a79d4f548a23bf</b><br>', 'null'],
[264.567626953125, -284.9313659667969, '<b><a href="/report/fcn.0044c5d0@20a93604f17ee6f3c2aa7b1f7a497fcf">fcn.0044c5d0</a><br>@20a93604f17ee6f3c2aa7b1f7a497fcf</b><br>', 'null'],
[114.85347747802734, 132.49325561523438, '<b><a href="/report/fcn.00441880@7307643b343733b7fbd7b4b4fb482515">fcn.00441880</a><br>@7307643b343733b7fbd7b4b4fb482515</b><br>', 'null'],
[-10.322857856750488, 7.407998085021973, '<b><a href="/report/fcn.00441880@3d7f25d788af3e7f7707a736ac852465">fcn.00441880</a><br>@3d7f25d788af3e7f7707a736ac852465</b><br>', 'null'],
[-144.44627380371094, -91.00943756103516, '<b><a href="/report/fcn.00441880@44a756939733df3681808b122b91651f">fcn.00441880</a><br>@44a756939733df3681808b122b91651f</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
and esp, 0xfffffff8
push 0xffffffffffffffff
push 0x450a16
mov eax, dword
push eax
sub esp, 0x6c
push esi
push edi
mov eax, dword[0x475084]
xor eax, esp
push eax
lea eax, [esp+0x78]
mov dword
push dword[0x476120]
call fcn.00412c8a
pop ecx
mov dword[esp+0x38], eax
and dword[esp+0x80], 0
push dword[0x476120]
push dword[0x476208]
push 0
call fcn.0043a48f
mov eax, dword[ebx+0xcc]
add esp, 0xc
test eax, eax
je off.b105
push eax
call fcn.0043babf
lea edi, [ebx+0x10]
call dword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
push eax
call fcn.00404164
mov esi, eax
mov eax, dword[esi+0x14]
xor ecx, ecx
test eax, eax
jle off.b146
mov edx, dword[esi+0x10]
cmp dword[edx], edi
je off.b149
inc ecx
add edx, 4
cmp ecx, eax
jl off.b134
or ecx, 0xffffffff
cmp ecx, 0xffffffff
je off.b201
test ecx, ecx
js off.b201
cmp ecx, eax
jge off.b201
lea edx, [eax-1]
cmp ecx, edx
je off.b198
mov edx, dword[esi+0x10]
sub eax, ecx
shl eax, 2
lea ecx, [edx+ecx*4]
lea edx, [eax-4]
push edx
lea edx, [ecx+4]
push edx
push eax
push ecx
call fcn.00403d87
add esp, 0x10
dec dword[esi+0x14]
mov eax, dword[ebx+0x54]
sub eax, dword[ebx+0x50]
sar eax, 2
test eax, eax
jne off.b231
mov ecx, dword[ebx+0x64]
sub ecx, dword[ebx+0x60]
sar ecx, 2
test ecx, ecx
je off.b873
mov ecx, dword[ebx+0x64]
sub ecx, dword[ebx+0x60]
sar ecx, 2
push ecx
push eax
push dword[0x476124]
push 0
call fcn.0043a48f
add esp, 0x10
lea eax, [esp+0x3c]
push eax
lea ecx, [ebx+0x50]
call fcn.00402888
mov byte[esp+0x80], 1
mov eax, dword[ebx+0x64]
mov edi, dword[ebx+0x60]
mov dword[esp+0x28], eax
cmp edi, eax
je off.b313
mov eax, edi
lea esi, [esp+0x3c]
call fcn.00402915
add edi, 4
cmp edi, dword[esp+0x28]
jne off.b293
mov esi, dword[esp+0x3c]
mov edi, dword[esp+0x40]
jmp off.b334
mov eax, dword[esi]
mov ecx, dword[eax]
push eax
call dword[ecx+0xc]
add esi, 4
cmp esi, edi
jne off.b323
mov esi, dword[esp+0x3c]
jmp off.b355
mov eax, dword[esi]
mov ecx, dword[eax]
push eax
call dword[ecx+0x10]
add esi, 4
cmp esi, edi
jne off.b344
mov dword[esp+0x2c], 0x2b
mov dword[esp+0x10], 0x47
mov dword[esp+0x18], 0x5b
push 0x56
pop eax
mov dword[esp+0x14], eax
mov dword[esp+0x1c], 0x27
mov dword[esp+0x10], 6
mov ecx, dword[esp+0x14]
add ecx, 0xa
mov dword[esp+0x18], ecx
mov ecx, dword[esp+0x14]
imul ecx, ecx, 0x45
mov dword[esp+0x10], ecx
mov ecx, dword[esp+0x2c]
sub ecx, 0x20
mov dword[esp+0x18], ecx
mov ecx, dword[esp+0x10]
add ecx, eax
mov dword[esp+0x10], ecx
mov eax, dword[esp+0x14]
mov dword[esp+0x14], eax
mov eax, dword[esp+0x1c]
sub eax, 0x22
mov dword[esp+0x18], eax
mov eax, dword[esp+0x10]
mov ecx, dword[esp+0x10]
imul eax, ecx
mov ecx, 0xffffff68
sub ecx, eax
mov eax, dword[esp+0x1c]
mov edx, dword[esp+0x18]
imul eax, edx
sub ecx, eax
add ecx, dword[esp+0x1c]
add ecx, dword[esp+0x10]
mov dword[esp+0x14], ecx
mov dword[esp+0x14], 0x29
mov dword[esp+0x18], 0x37
mov dword[esp+0x10], 0xc
mov dword[esp+0x1c], 0x31
mov eax, dword[esp+0x1c]
mov ecx, dword[esp+0x18]
imul eax, ecx
mov ecx, dword[esp+0x18]
imul eax, eax, 0xffffffd3
imul ecx, ecx, 0x37
sub eax, ecx
mov ecx, dword[esp+0x14]
sub eax, ecx
add eax, dword[esp+0x1c]
mov ecx, dword[esp+0x10]
lea eax, [eax+ecx+1]
mov dword[esp+0x1c], eax
mov eax, dword[esp+0x10]
mov ecx, dword[esp+0x14]
imul eax, ecx
mov ecx, dword[esp+0x10]
sub eax, ecx
add eax, dword[esp+0x18]
add eax, dword[esp+0x18]
add eax, dword[esp+0x14]
mov dword[esp+0x10], eax
mov eax, dword[esp+0x18]
mov eax, dword[esp+0x14]
mov eax, dword[esp+0x10]
mov ecx, dword[esp+0x14]
cmp ecx, eax
jl off.b652
mov eax, dword[esp+0x10]
imul eax, eax, 0x5e
mov dword[esp+0x14], eax
mov ecx, dword[ebx+0x64]
mov eax, dword[ebx+0x60]
cmp eax, ecx
je off.b706
push ecx
call fcn.004035a7
mov esi, dword[ebx+0x64]
mov edi, eax
pop ecx
mov dword[esp+0x2c], edi
jmp off.b695
mov eax, dword[edi]
test eax, eax
je off.b692
mov ecx, dword[eax]
push eax
call dword[ecx+8]
add edi, 4
cmp edi, esi
jne off.b680
mov eax, dword[esp+0x2c]
mov dword[ebx+0x64], eax
fld qword[0x46f970]
lea esi, [esp+0x3c]
fstp qword[esp+0x2c]
fld qword[esp+0x2c]
fld qword[0x46f968]
fadd st(1), st(0)
fld qword[esp+0x2c]
fmul qword[esp+0x2c]
fmul qword[esp+0x2c]
fdivrp st(1)
fsubp st(1)
fstp qword[esp+0x2c]
fld qword[esp+0x2c]
fld qword[esp+0x2c]
fmul qword[esp+0x2c]
fmul qword[esp+0x2c]
fsubp st(1)
fadd qword[esp+0x2c]
fadd qword[0x46f960]
fld qword[esp+0x2c]
fdiv qword[0x46f910]
fsubp st(1)
fadd qword[esp+0x2c]
fadd qword[esp+0x2c]
fsub qword[0x46f958]
fstp qword[esp+0x2c]
fld qword[esp+0x2c]
fadd qword[esp+0x2c]
fstp qword[esp+0x2c]
fld qword[esp+0x2c]
fsub qword[0x46f950]
fstp qword[esp+0x2c]
fld qword[esp+0x2c]
fsub qword[0x46f920]
fld qword[esp+0x2c]
fmul qword[esp+0x2c]
fsubp st(1)
fstp qword[esp+0x2c]
mov byte[esp+0x80], 0
call fcn.00402e45
mov eax, dword[ebx+0xa8]
test eax, eax
je off.b896
mov ecx, dword[eax]
push eax
call dword[ecx+8]
and dword[ebx+0xa8], 0
lea eax, [ebx+0xac]
xor ecx, ecx
cmp dword[eax], ecx
je off.b915
push ecx
push ecx
call fcn.00403cf5
mov esi, dword[ebx+0x20]
test esi, esi
je off.b927
call fcn.0042ecef
mov dword[esp+0x18], 0x2d
mov dword[esp+0x2c], 0x17
mov dword[esp+0x1c], 0
mov eax, dword[esp+0x18]
mov ecx, dword[esp+0x1c]
imul eax, eax, 0x60
sub eax, ecx
add eax, dword[esp+0x1c]
mov dword[esp+0x18], eax
mov eax, dword[ebx+0x20]
test eax, eax
je off.b989
mov ecx, dword[eax]
push eax
call dword[ecx+8]
and dword[ebx+0x20], 0
mov eax, dword[ebx+0xe0]
test eax, eax
je off.b1331
push eax
push dword[0x476128]
push 0
call fcn.0043a48f
fld qword[0x46f948]
fstp qword[esp+0x38]
add esp, 0xc
fld qword[esp+0x2c]
fadd qword[esp+0x2c]
fstp qword[esp+0x2c]
fld qword[esp+0x2c]
fsub qword[0x46f940]
fstp qword[esp+0x2c]
fld qword[esp+0x2c]
fadd qword[0x46f938]
fstp qword[esp+0x2c]
fld qword[esp+0x2c]
fadd qword[0x46f930]
fsub qword[esp+0x2c]
fadd qword[esp+0x2c]
fadd qword[esp+0x2c]
fadd qword[0x46f928]
fsub qword[esp+0x2c]
mov eax, dword[ebx+0xdc]
mov ecx, dword[eax]
mov dword[esp+0x28], ecx
fstp qword[esp+0x2c]
cmp ecx, eax
je off.b1179
mov esi, dword[ecx+0x10]
test esi, esi
je off.b1158
lea eax, [esi+8]
push eax
call dword[sym.imp.OLEAUT32.dll_VariantCopy]
mov eax, dword[esi]
test eax, eax
je off.b1151
mov ecx, dword[eax]
push eax
call dword[ecx+8]
push esi
call fcn.00410b32
pop ecx
lea eax, [esp+0x28]
call fcn.00402f37
mov ecx, dword[esp+0x28]
cmp ecx, dword[ebx+0xdc]
jne off.b1122
mov dword[esp+0x10], 0x29
mov dword[esp+0x18], 0x37
mov dword[esp+0x14], 0xc
mov dword[esp+0x1c], 0x31
mov eax, dword[esp+0x1c]
mov ecx, dword[esp+0x18]
imul eax, ecx
mov ecx, dword[esp+0x18]
imul eax, eax, 0xffffffd3
imul ecx, ecx, 0x37
sub eax, ecx
mov ecx, dword[esp+0x10]
sub eax, ecx
add eax, dword[esp+0x1c]
mov ecx, dword[esp+0x14]
lea eax, [eax+ecx+1]
mov dword[esp+0x1c], eax
mov eax, dword[esp+0x14]
mov ecx, dword[esp+0x10]
imul eax, ecx
mov ecx, dword[esp+0x14]
sub eax, ecx
add eax, dword[esp+0x18]
add eax, dword[esp+0x18]
add eax, dword[esp+0x10]
mov dword[esp+0x14], eax
mov eax, dword[esp+0x18]
mov eax, dword[esp+0x10]
mov eax, dword[esp+0x14]
mov ecx, dword[esp+0x10]
cmp ecx, eax
jl off.b1320
mov eax, dword[esp+0x14]
imul eax, eax, 0x5e
mov dword[esp+0x10], eax
lea edi, [ebx+0xd8]
call fcn.00402c0d
and dword[0x477fb4], 0
mov dword[esp+0x2c], 0x2b
mov dword[esp+0x10], 0x47
mov dword[esp+0x14], 0x5b
push 0x56
pop eax
mov dword[esp+0x18], eax
mov dword[esp+0x1c], 0x27
mov dword[esp+0x10], 6
mov ecx, dword[esp+0x18]
add ecx, 0xa
mov dword[esp+0x14], ecx
mov ecx, dword[esp+0x18]
imul ecx, ecx, 0x45
mov dword[esp+0x10], ecx
mov ecx, dword[esp+0x2c]
sub ecx, 0x20
mov dword[esp+0x14], ecx
mov ecx, dword[esp+0x10]
add ecx, eax
mov dword[esp+0x10], ecx
mov eax, dword[esp+0x18]
mov dword[esp+0x18], eax
mov eax, dword[esp+0x1c]
sub eax, 0x22
mov dword[esp+0x14], eax
mov eax, dword[esp+0x10]
mov ecx, dword[esp+0x10]
imul eax, ecx
mov ecx, 0xffffff68
sub ecx, eax
mov eax, dword[esp+0x1c]
mov edx, dword[esp+0x14]
imul eax, edx
sub ecx, eax
add ecx, dword[esp+0x1c]
add ecx, dword[esp+0x10]
push dword[ebx+0x2c]
mov dword[esp+0x1c], ecx
call dword[sym.imp.USER32.dll_DestroyWindow]
fld qword[0x46f920]
fstp qword[esp+0x1c]
push 0
fld qword[0x46f918]
lea eax, [esp+0x50]
fstp qword[esp+0x30]
fld qword[esp+0x30]
fsub qword[esp+0x30]
fld qword[esp+0x30]
fmul qword[0x46f910]
fsubp st(1)
fld qword[esp+0x30]
fmul qword[0x46f908]
fmul qword[esp+0x30]
fsubp st(1)
fld qword[esp+0x30]
fmul qword[esp+0x20]
fsubp st(1)
fadd qword[0x46f900]
fstp qword[esp+0x20]
call fcn.0043d595
mov eax, dword[esp+0x50]
mov dword[ebx+0x2c], eax
mov eax, dword[esp+0x64]
lea edi, [ebx+0x30]
lea esi, [esp+0x54]
movsd dword
mov dword[ebx+0x40], eax
mov eax, dword[esp+0x68]
movsd dword
mov dword[ebx+0x44], eax
mov eax, dword[esp+0x6c]
mov dword[ebx+0x48], eax
mov eax, dword[esp+0x70]
movsd dword
mov dword[ebx+0x4c], eax
lea eax, [esp+0x4c]
movsd dword
call fcn.0043d5bf
fld qword[0x46f920]
fstp qword[esp+0x1c]
fld qword[0x46f918]
fstp qword[esp+0x2c]
fld qword[esp+0x2c]
fsub qword[esp+0x2c]
fld qword[esp+0x2c]
fmul qword[0x46f910]
fsubp st(1)
fld qword[esp+0x2c]
fmul qword[0x46f908]
fmul qword[esp+0x2c]
fsubp st(1)
fld qword[esp+0x2c]
fmul qword[esp+0x1c]
mov esi, dword[ebx+0x24]
fsubp st(1)
fadd qword[0x46f900]
fstp qword[esp+0x1c]
test esi, esi
je off.b1737
push esi
call fcn.00439729
push esi
call fcn.00410b32
pop ecx
mov dword[esp+0x18], 0x2d
mov dword[esp+0x2c], 0x17
mov dword[esp+0x1c], 0
mov eax, dword[esp+0x18]
mov ecx, dword[esp+0x1c]
imul eax, eax, 0x60
sub eax, ecx
add eax, dword[esp+0x1c]
and dword[ebx+0x24], ecx
mov dword[esp+0x18], eax
or dword[esp+0x80], 0xffffffff
lea esi, [esp+0x38]
call fcn.0040462e
mov ecx, dword[esp+0x78]
mov dword
pop ecx
pop edi
pop esi
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/9571c7458fae91969aaed3955e433f49