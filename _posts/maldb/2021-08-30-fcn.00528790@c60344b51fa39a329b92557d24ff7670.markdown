---
layout: post
title:  "fcn.00528790 @ c60344b51fa39a329b92557d24ff7670"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00528790
- **Origin (md5):** c60344b51fa39a329b92557d24ff7670
- **VirusTotal:** [virustotal.com/gui/file/c60344b51fa39a329b92557d24ff7670][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.00528790@c60344b51fa39a329b92557d24ff7670">fcn.00528790</a><br>@c60344b51fa39a329b92557d24ff7670</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
and esp, 0xfffffff8
push 0xffffffffffffffff
push 0x5b0ee8
mov eax, dword
push eax
push ecx
mov eax, 0x416c
call fcn.0057aa20
mov eax, dword[0x5ffcc0]
xor eax, esp
mov dword[esp+0x4168], eax
push ebx
push esi
push edi
mov eax, dword[0x5ffcc0]
xor eax, esp
push eax
lea eax, [esp+0x4180]
mov dword
mov eax, dword[ebp+8]
xor edi, edi
push edi
mov esi, ecx
mov ebx, edx
mov dword[esp+0x4c], eax
call fcn.00572311
add esp, 4
push esi
lea ecx, [esp+0x50]
mov dword[esp+0x58], eax
mov dword[esp+0x38], edi
mov dword[esp+0x3c], edi
mov dword[esp+0x50], edi
mov dword[esp+0x54], edi
call fcn.00528510
add esp, 4
push ebx
lea ecx, [esp+0x120]
call fcn.00402060
lea eax, [esp+0x11c]
lea ecx, [esp+0x78]
mov dword[esp+0x4188], edi
call fcn.00527dc0
push 0x5de088
push eax
mov byte[esp+0x4190], 1
call fcn.00453fc0
add esp, 8
test al, al
lea ecx, [esp+0x78]
sete bl
mov byte[esp+0x4188], 0
call fcn.004020a0
test bl, bl
je off.b225
push 0x5de088
lea ecx, [esp+0x120]
call fcn.00422010
push esi
lea ecx, [esp+0x7c]
call fcn.00402060
lea ecx, [esp+0x78]
lea esi, [esp+0x138]
mov byte[esp+0x4188], 2
call fcn.00518e20
lea ecx, [esp+0x78]
mov byte[esp+0x4188], 4
call fcn.004020a0
lea eax, [esp+0x11c]
lea esi, [esp+0x100]
call fcn.00518da0
mov ecx, esi
mov byte[esp+0x4188], 5
call fcn.004020c0
push eax
call fcn.00528350
add esp, 4
lea ecx, [esp+0xe4]
call fcn.00402030
mov byte[esp+0x4188], 6
lea ecx, [esp+0x138]
xor ebx, ebx
mov dword[esp+0x40], edi
mov dword[esp+0x28], 0x5312f0
mov dword[esp+0x2c], 0x546620
mov dword[esp+0x58], 0x5312f0
mov dword[esp+0x5c], 0x546620
call fcn.00402010
push edi
push 0x80
push 3
push edi
push 1
push 0x80000000
push eax
call dword[sym.imp.KERNEL32.dll_CreateFileA]
mov dword[esp+0x74], eax
cmp eax, 0xffffffff
jne off.b482
call dword[sym.imp.KERNEL32.dll_GetLastError]
cmp eax, edi
je off.b482
lea ecx, [esp+0xe4]
call fcn.004020a0
mov ecx, esi
call fcn.004020a0
lea ecx, [esp+0x138]
call fcn.00401ff0
lea ecx, [esp+0x11c]
call fcn.004020a0
lea eax, [ebx+1]
jmp off.b1681
lea ecx, [esp+0x6c]
mov dword[esp+0x6c], 0x5312a0
mov dword[esp+0x70], 0x5312d0
mov dword[esp+0x154], 0x533b00
mov dword[esp+0x158], 0x533b60
mov dword[esp+0x15c], 0x533b70
mov dword[esp+0x160], 0x533bd0
mov dword[esp+0x164], ecx
mov dword[esp+0x16c], edi
mov dword[esp+0x168], edi
call fcn.00533bf0
lea edx, [esp+0x154]
push edx
lea eax, [esp+0x98]
push eax
lea edx, [esp+0x60]
lea ecx, [esp+0x30]
mov dword[esp+0x9c], edi
mov dword[esp+0xa0], edi
mov dword[esp+0xa4], edi
mov dword[esp+0xa8], edi
mov dword[esp+0xac], edi
mov dword[esp+0xb0], edi
mov dword[esp+0xb4], edi
mov dword[esp+0xb8], edi
mov dword[esp+0xcc], edi
mov dword[esp+0xd0], edi
mov dword[esp+0xd4], edi
mov dword[esp+0xd8], edi
mov dword[esp+0xdc], edi
mov dword[esp+0xe0], edi
mov dword[esp+0xe4], edi
call fcn.00533440
mov esi, eax
add esp, 8
cmp esi, edi
je off.b733
lea edi, [esp+0x28]
lea eax, [esp+0x94]
call fcn.005314f0
xor edi, edi
mov dword[esp+0x14], esi
cmp esi, edi
jne off.b1558
xor eax, eax
mov dword[esp+0x68], 0xffffffff
mov dword[esp+0x30], edi
mov dword[esp+0x64], edi
mov dword[esp+0x20], edi
cmp dword[esp+0xb0], eax
jbe off.b1541
mov ecx, dword[esp+0xa4]
mov dword[esp+0x18], ecx
jmp off.b800
mov dword[esp+0x44], eax
mov dword[esp+0x24], eax
mov eax, dword[esp+0xd4]
mov esi, dword[eax+edi*4+4]
sub esi, dword[eax+edi*4]
cmp esi, dword[esp+0x40]
jbe off.b868
push ebx
call fcn.0057250f
add esp, 4
mov dword[esp+0x40], esi
add esi, esi
je off.b1521
push esi
call fcn.005731f2
mov ebx, eax
add esp, 4
test ebx, ebx
je off.b1523
mov ecx, ebx
mov eax, edi
lea edx, [esp+0x94]
call fcn.00532c00
mov edx, dword[esp+0x18]
cmp byte[edx+0x19], 0
jne off.b968
lea eax, [esp+0x58]
push eax
lea ecx, [esp+0x2c]
push ecx
lea edx, [esp+0x2c]
push edx
lea eax, [esp+0x50]
push eax
lea ecx, [esp+0x74]
push ecx
lea edx, [esp+0x44]
push edx
lea eax, [esp+0x80]
push eax
lea ecx, [esp+0x170]
push edi
push ecx
lea eax, [esp+0xb8]
call fcn.00533860
add esp, 0x24
mov dword[esp+0x14], eax
test eax, eax
jne off.b1541
mov edx, dword[esp+0x24]
add dword[esp+0x34], edx
mov eax, 0
mov dword[esp+0x1c], eax
adc dword[esp+0x38], eax
cmp word[ebx], ax
je off.b1137
mov edi, ebx
cmp word[edi], 0x2f
jne off.b1110
lea ecx, [esp+0x100]
xor eax, eax
push ebx
push ecx
lea esi, [esp+0x80]
mov word[edi], ax
call fcn.00526d60
add esp, 8
push eax
lea ecx, [esp+0xe8]
mov byte[esp+0x418c], 7
call fcn.00403010
mov ecx, esi
mov byte[esp+0x4188], 6
call fcn.004020a0
lea ecx, [esp+0xe4]
call fcn.004020c0
push 0
push eax
call dword[sym.imp.KERNEL32.dll_CreateDirectoryW]
test eax, eax
jne off.b1102
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov edx, 0x5c
mov word[edi], dx
mov eax, dword[esp+0x1c]
inc eax
cmp word[ebx+eax*2], 0
lea edi, [ebx+eax*2]
mov dword[esp+0x1c], eax
jne off.b1000
mov edi, dword[esp+0x20]
lea eax, [esp+0x100]
push ebx
push eax
lea esi, [esp+0x80]
call fcn.00526d60
add esp, 8
push eax
lea ecx, [esp+0xe8]
mov byte[esp+0x418c], 8
call fcn.00403010
mov ecx, esi
mov byte[esp+0x4188], 6
call fcn.004020a0
mov ecx, dword[esp+0x18]
cmp byte[ecx+0x19], 0
lea ecx, [esp+0xe4]
je off.b1247
call fcn.004020c0
push 0
push eax
call dword[sym.imp.KERNEL32.dll_CreateDirectoryW]
test eax, eax
jne off.b1495
call dword[sym.imp.KERNEL32.dll_GetLastError]
jmp off.b1495
call fcn.004020c0
push 0
push 0x80
push 2
push 0
push 1
push 0x40000000
push eax
call dword[sym.imp.KERNEL32.dll_CreateFileW]
mov esi, eax
mov dword[esp+0x60], esi
cmp esi, 0xffffffff
jne off.b1302
call dword[sym.imp.KERNEL32.dll_GetLastError]
test eax, eax
jne off.b1533
mov edx, dword[esp+0x24]
mov ecx, dword[esp+0x30]
mov eax, dword[esp+0x44]
mov dword[esp+0x1c], edx
lea edx, [esp+0x60]
add eax, ecx
push edx
lea edi, [esp+0x20]
call fcn.00531190
add esp, 4
test eax, eax
jne off.b1533
mov eax, dword[esp+0x24]
cmp dword[esp+0x1c], eax
jne off.b1533
cmp esi, 0xffffffff
je off.b1389
push esi
call dword[sym.imp.KERNEL32.dll_CloseHandle]
test eax, eax
jne off.b1389
call dword[sym.imp.KERNEL32.dll_GetLastError]
test eax, eax
jne off.b1533
mov eax, dword[esp+0x18]
cmp byte[eax+0x1d], 0
je off.b1422
mov ecx, dword[eax+0x14]
push ecx
lea ecx, [esp+0xe8]
call fcn.004020c0
push eax
call dword[sym.imp.KERNEL32.dll_SetFileAttributesW]
cmp dword[esp+0x48], 0
je off.b1491
push 0
call fcn.00572311
sub eax, dword[esp+0x58]
add esp, 4
test eax, eax
jg off.b1452
mov eax, 1
mov edx, dword[esp+0x50]
mov ecx, dword[esp+0x4c]
mov esi, dword[esp+0x38]
push edx
push ecx
mov ecx, dword[esp+0x3c]
push esi
push ecx
cdq
push edx
push eax
push esi
push ecx
call fcn.00580a70
push edx
push eax
call dword[esp+0x60]
add esp, 0x18
mov edi, dword[esp+0x20]
add dword[esp+0x18], 0x20
inc edi
mov dword[esp+0x20], edi
cmp edi, dword[esp+0xb0]
jae off.b1541
xor eax, eax
jmp off.b800
xor ebx, ebx
mov dword[esp+0x14], 2
jmp off.b1541
mov dword[esp+0x14], 0xb
mov edx, dword[esp+0x30]
push edx
lea eax, [esp+0x2c]
push eax
call dword[esp+0x34]
add esp, 8
lea edi, [esp+0x28]
lea eax, [esp+0x94]
call fcn.005314f0
push ebx
call fcn.0057250f
mov eax, dword[esp+0x78]
add esp, 4
cmp eax, 0xffffffff
je off.b1619
push eax
call dword[sym.imp.KERNEL32.dll_CloseHandle]
test eax, eax
jne off.b1611
call dword[sym.imp.KERNEL32.dll_GetLastError]
jmp off.b1619
mov dword[esp+0x74], 0xffffffff
mov esi, dword[esp+0x14]
lea ecx, [esp+0xe4]
call fcn.004020a0
lea ecx, [esp+0x100]
call fcn.004020a0
lea ecx, [esp+0x138]
call fcn.00401ff0
lea ecx, [esp+0x11c]
call fcn.004020a0
test esi, esi
jne off.b1679
xor eax, eax
jmp off.b1681
mov eax, esi
mov ecx, dword[esp+0x4180]
mov dword
pop ecx
pop edi
pop esi
pop ebx
mov ecx, dword[esp+0x4168]
xor ecx, esp
call fcn.005713ed
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/c60344b51fa39a329b92557d24ff7670