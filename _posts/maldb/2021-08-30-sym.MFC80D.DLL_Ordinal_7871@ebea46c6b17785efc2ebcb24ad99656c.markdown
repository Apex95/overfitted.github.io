---
layout: post
title:  "sym.MFC80D.DLL_Ordinal_7871 @ ebea46c6b17785efc2ebcb24ad99656c"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** sym.MFC80D.DLL\_Ordinal\_7871
- **Origin (md5):** ebea46c6b17785efc2ebcb24ad99656c
- **VirusTotal:** [virustotal.com/gui/file/ebea46c6b17785efc2ebcb24ad99656c][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/sym.MFC80D.DLL_Ordinal_7871@ebea46c6b17785efc2ebcb24ad99656c">sym.MFC80D.DLL_Ordinal_7871</a><br>@ebea46c6b17785efc2ebcb24ad99656c</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
sub esp, 0x33c
mov eax, dword[0x783e90cc]
xor eax, ebp
mov dword[ebp-0xc], eax
mov dword[ebp-0x33c], ecx
call sym.MFC80D.DLL_Ordinal_1442
mov ecx, dword[ebp-0x33c]
cmp ecx, dword[eax+4]
je off.b58
push 0x41
push 0x781e4e2c
call sym.MFC80D.DLL_Ordinal_1363
test eax, eax
je off.b58
int3
call sym.MFC80D.DLL_Ordinal_1442
cmp dword[eax+0x10], 0
je off.b86
push 0x42
push 0x781e4e2c
call sym.MFC80D.DLL_Ordinal_1363
test eax, eax
je off.b86
int3
mov ecx, dword[ebp-0x33c]
mov edx, dword[ecx+0x1c]
mov dword[ebp-4], edx
mov eax, dword[ebp-4]
mov ecx, dword[ebp-0x33c]
mov edx, dword[ecx+0x44]
mov dword[eax+8], edx
mov eax, dword[ebp-4]
mov ecx, dword[ebp-0x33c]
mov edx, dword[ecx+0x44]
mov dword[eax+0xc], edx
push 0x104
lea eax, [ebp-0x118]
push eax
mov ecx, dword[ebp-0x33c]
mov edx, dword[ecx+0x44]
push edx
call dword[sym.imp.KERNEL32.dll_GetModuleFileNameA]
mov dword[ebp-8], eax
cmp dword[ebp-8], 0
je off.b174
cmp dword[ebp-8], 0x104
jne off.b191
push 0x53
push 0x781e4e2c
call sym.MFC80D.DLL_Ordinal_1363
test eax, eax
je off.b191
int3
cmp dword[ebp-8], 0
je off.b206
cmp dword[ebp-8], 0x104
jne off.b211
call sym.MFC80D.DLL_Ordinal_1571
lea ecx, [ebp-0x118]
push ecx
call dword[sym.imp.SHLWAPI.dll_PathFindExtensionA]
mov dword[ebp-0x21c], eax
cmp dword[ebp-0x21c], 0
jne off.b256
push 0x58
push 0x781e4e2c
call sym.MFC80D.DLL_Ordinal_1363
test eax, eax
je off.b256
int3
cmp dword[ebp-0x21c], 0
jne off.b270
call sym.MFC80D.DLL_Ordinal_1571
mov eax, dword[ebp-0x21c]
movsx ecx, byte[eax]
cmp ecx, 0x2e
je off.b301
push 0x5c
push 0x781e4e2c
call sym.MFC80D.DLL_Ordinal_1363
test eax, eax
je off.b301
int3
mov eax, dword[ebp-0x21c]
mov byte[eax], 0
push 0x104
lea ecx, [ebp-0x328]
push ecx
lea edx, [ebp-0x118]
push edx
call sym.MFC80D.DLL_Ordinal_1431
mov dword[ebp-8], eax
cmp dword[ebp-8], 0
je off.b360
push 0x63
push 0x781e4e2c
call sym.MFC80D.DLL_Ordinal_1363
test eax, eax
je off.b360
int3
cmp dword[ebp-8], 0
je off.b371
call sym.MFC80D.DLL_Ordinal_1571
mov ecx, dword[ebp-0x33c]
cmp dword[ecx+0x60], 0
jne off.b459
push 0
call sym.MFC80D.DLL_Ordinal_1404
mov dword[ebp-0x32c], eax
push 0x6a
push 0x781e4e2c
push 1
lea edx, [ebp-0x328]
push edx
call dword[sym.imp.MSVCR80D.dll__strdup_dbg]
add esp, 0x10
mov ecx, dword[ebp-0x33c]
mov dword[ecx+0x60], eax
mov edx, dword[ebp-0x32c]
push edx
call sym.MFC80D.DLL_Ordinal_1404
mov eax, dword[ebp-0x33c]
cmp dword[eax+0x60], 0
jne off.b459
call sym.MFC80D.DLL_Ordinal_1565
mov ecx, dword[ebp-0x33c]
cmp dword[ecx+0x50], 0
jne off.b616
push 0
call sym.MFC80D.DLL_Ordinal_1404
mov dword[ebp-0x330], eax
push 0x100
lea edx, [ebp-0x218]
push edx
push 0xe000
call sym.MFC80D.DLL_Ordinal_1482
test eax, eax
je off.b550
push 0x78
push 0x781e4e2c
push 1
lea eax, [ebp-0x218]
push eax
call dword[sym.imp.MSVCR80D.dll__strdup_dbg]
add esp, 0x10
mov ecx, dword[ebp-0x33c]
mov dword[ecx+0x50], eax
jmp off.b587
push 0x7c
push 0x781e4e2c
push 1
mov edx, dword[ebp-0x33c]
mov eax, dword[edx+0x60]
push eax
call dword[sym.imp.MSVCR80D.dll__strdup_dbg]
add esp, 0x10
mov ecx, dword[ebp-0x33c]
mov dword[ecx+0x50], eax
mov edx, dword[ebp-0x330]
push edx
call sym.MFC80D.DLL_Ordinal_1404
mov eax, dword[ebp-0x33c]
cmp dword[eax+0x50], 0
jne off.b616
call sym.MFC80D.DLL_Ordinal_1565
mov ecx, dword[ebp-4]
mov edx, dword[ebp-0x33c]
mov eax, dword[edx+0x50]
mov dword[ecx+0x10], eax
call sym.MFC80D.DLL_Ordinal_1442
cmp dword[eax+0x10], 0
jne off.b662
push 0x86
push 0x781e4e2c
call sym.MFC80D.DLL_Ordinal_1363
test eax, eax
je off.b662
int3
mov edx, dword[ebp-0x33c]
cmp dword[edx+0x64], 0
jne off.b864
mov eax, dword[ebp-0x33c]
cmp dword[eax+0x6c], 1
jne off.b734
push 0x781e4e74
mov ecx, dword[ebp-0x21c]
lea edx, [ebp-0x118]
sub ecx, edx
mov eax, 0x104
sub eax, ecx
push eax
mov ecx, dword[ebp-0x21c]
push ecx
call fcn.782321f0
add esp, 0xc
jmp off.b776
push 0x781e4e6c
mov edx, dword[ebp-0x21c]
lea eax, [ebp-0x118]
sub edx, eax
mov ecx, 0x104
sub ecx, edx
push ecx
mov edx, dword[ebp-0x21c]
push edx
call fcn.782321f0
add esp, 0xc
push 0
call sym.MFC80D.DLL_Ordinal_1404
mov dword[ebp-0x334], eax
push 0x90
push 0x781e4e2c
push 1
lea eax, [ebp-0x118]
push eax
call dword[sym.imp.MSVCR80D.dll__strdup_dbg]
add esp, 0x10
mov ecx, dword[ebp-0x33c]
mov dword[ecx+0x64], eax
mov edx, dword[ebp-0x334]
push edx
call sym.MFC80D.DLL_Ordinal_1404
mov eax, dword[ebp-0x33c]
cmp dword[eax+0x64], 0
jne off.b855
call sym.MFC80D.DLL_Ordinal_1565
mov ecx, dword[ebp-0x21c]
mov byte[ecx], 0
mov edx, dword[ebp-0x33c]
cmp dword[edx+0x68], 0
jne off.b980
push 0x781e4e64
push 0x104
lea eax, [ebp-0x328]
push eax
call fcn.7825e2c0
add esp, 0xc
push 0
call sym.MFC80D.DLL_Ordinal_1404
mov dword[ebp-0x338], eax
push 0x9d
push 0x781e4e2c
push 1
lea ecx, [ebp-0x328]
push ecx
call dword[sym.imp.MSVCR80D.dll__strdup_dbg]
add esp, 0x10
mov edx, dword[ebp-0x33c]
mov dword[edx+0x68], eax
mov eax, dword[ebp-0x338]
push eax
call sym.MFC80D.DLL_Ordinal_1404
mov ecx, dword[ebp-0x33c]
cmp dword[ecx+0x68], 0
jne off.b980
call sym.MFC80D.DLL_Ordinal_1565
mov ecx, dword[ebp-0xc]
xor ecx, ebp
call fcn.783a2cd0
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/ebea46c6b17785efc2ebcb24ad99656c