---
layout: post
title:  "fcn.0044abc0 @ 3e981d1767f44f5fe2446a49ffe52f4e"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0044abc0
- **Origin (md5):** 3e981d1767f44f5fe2446a49ffe52f4e
- **VirusTotal:** [virustotal.com/gui/file/3e981d1767f44f5fe2446a49ffe52f4e][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Behaviour Tags
<span class="bhv-tag" id="CREATES_SOCKET_LISTENER">CREATES_SOCKET_LISTENER / 0.18787712554041305</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [65.92166137695312, 1.8082246780395508, '<b><a href="/report/fcn.0044abc0@3e981d1767f44f5fe2446a49ffe52f4e">fcn.0044abc0</a><br>@3e981d1767f44f5fe2446a49ffe52f4e</b><br>', 'point { fill-color: #e0440e; }'],
[61.89433670043945, 178.05990600585938, '<b><a href="/report/fcn.004c5230@279a61b1e76da49531f1f16fd1102a2d">fcn.004c5230</a><br>@279a61b1e76da49531f1f16fd1102a2d</b><br>', 'null'],
[-17.546438217163086, -83.82990264892578, '<b><a href="/report/fcn.00434fe0@3e981d1767f44f5fe2446a49ffe52f4e">fcn.00434fe0</a><br>@3e981d1767f44f5fe2446a49ffe52f4e</b><br>', 'null'],
[130.1604461669922, -54.787906646728516, '<b><a href="/report/fcn.1000ebe0@4c3818fdf32d89a09257dbc9d3e142ea">fcn.1000ebe0</a><br>@4c3818fdf32d89a09257dbc9d3e142ea</b><br>', 'null'],
[65.05995178222656, -63.351444244384766, '<b><a href="/report/fcn.00437fb0@3e981d1767f44f5fe2446a49ffe52f4e">fcn.00437fb0</a><br>@3e981d1767f44f5fe2446a49ffe52f4e</b><br>', 'null'],
[137.1136474609375, 112.13745880126953, '<b><a href="/report/fcn.0052a880@c60344b51fa39a329b92557d24ff7670">fcn.0052a880</a><br>@c60344b51fa39a329b92557d24ff7670</b><br>', 'null'],
[59.21592712402344, 71.35861206054688, '<b><a href="/report/fcn.00442d70@3e981d1767f44f5fe2446a49ffe52f4e">fcn.00442d70</a><br>@3e981d1767f44f5fe2446a49ffe52f4e</b><br>', 'null'],
[-19.819791793823242, -6.746188640594482, '<b><a href="/report/fcn.0043aa60@3e981d1767f44f5fe2446a49ffe52f4e">fcn.0043aa60</a><br>@3e981d1767f44f5fe2446a49ffe52f4e</b><br>', 'null'],
[-93.44088745117188, 17.6064395904541, '<b><a href="/report/fcn.0048c570@3e981d1767f44f5fe2446a49ffe52f4e">fcn.0048c570</a><br>@3e981d1767f44f5fe2446a49ffe52f4e</b><br>', 'null'],
[-82.16996002197266, 94.8047866821289, '<b><a href="/report/fcn.00496370@3e981d1767f44f5fe2446a49ffe52f4e">fcn.00496370</a><br>@3e981d1767f44f5fe2446a49ffe52f4e</b><br>', 'null'],
[159.05148315429688, 46.11128234863281, '<b><a href="/report/fcn.00463e91@d96761eb00d2d97e2b6f5ffffed0b46a">fcn.00463e91</a><br>@d96761eb00d2d97e2b6f5ffffed0b46a</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push 0xffffffffffffffff
push 0x4c1c7f
mov eax, dword
push eax
mov dword
sub esp, 0x26c
push ebp
push esi
mov esi, ecx
push edi
push esi
lea ecx, [esp+0xbc]
call fcn.004ba7e6
lea eax, [esp+0x1b0]
xor ebp, ebp
push eax
lea ecx, [esp+0xbc]
mov dword[esp+0x284], ebp
call fcn.004ba397
mov ecx, esi
call fcn.0044a7a0
mov edi, eax
cmp edi, ebp
mov dword[esp+0x4c], edi
je 0x44c1cd
mov ecx, edi
call fcn.00447a00
test eax, eax
je 0x44c1cd
mov ecx, edi
call fcn.00447a40
test eax, eax
je 0x44c1cd
cmp dword[esi+0x44c], ebp
je 0x44ac4c
mov ecx, esi
call fcn.0044c300
push ebx
mov ecx, esi
call fcn.0044a730
push ebp
mov ecx, esi
mov dword[esp+0x190], eax
call fcn.0044a740
mov ecx, dword[esi+0x5c]
mov edx, dword[esi+0x58]
push ecx
lea eax, [esp+0xc0]
push edx
push eax
call fcn.00461e40
add esp, 0xc
lea ecx, [esp+0xbc]
push ecx
lea ecx, [esp+0x1ac]
call fcn.0044a200
mov eax, dword[esp+0x1b8]
mov ecx, dword[esp+0x1bc]
mov edx, dword[esp+0x1b4]
mov edi, dword[sym.imp.GDI32.dll_DPtoLP]
mov dword[esp+0x78], eax
mov dword[esp+0x7c], ecx
mov ecx, dword[esp+0xc4]
lea eax, [esp+0x74]
mov dword[esp+0x74], edx
mov edx, dword[esp+0x1c0]
push 2
push eax
push ecx
mov byte[esp+0x290], 2
mov dword[esp+0x8c], edx
call edi
mov eax, dword[esi+0x1c]
lea edx, [esp+0x98]
push edx
push eax
call dword[sym.imp.USER32.dll_GetClientRect]
mov edx, dword[esp+0xc4]
lea ecx, [esp+0x98]
push 2
push ecx
push edx
call edi
mov eax, dword[esp+0x98]
mov ecx, dword[esp+0x9c]
mov edx, dword[esp+0xa0]
mov edi, dword[esp+0xa4]
mov dword[esp+0x118], eax
mov dword[esp+0x128], eax
lea eax, [esp+0xb4]
mov dword[esp+0x11c], ecx
mov dword[esp+0x12c], ecx
push eax
mov ecx, esi
mov dword[esp+0x124], edx
mov dword[esp+0x128], edi
mov dword[esp+0x134], edx
mov dword[esp+0x138], edi
call fcn.0044c250
mov edi, dword[eax]
mov ecx, dword[esp+0x98]
add ecx, edi
lea edx, [esp+0x98]
mov ebx, dword[eax+4]
mov eax, dword[esp+0x9c]
mov dword[esp+0x98], ecx
add eax, ebx
lea ecx, [esp+0x74]
mov dword[esp+0x9c], eax
push ecx
lea eax, [esp+0x9c]
push edx
push eax
call dword[sym.imp.USER32.dll_IntersectRect]
mov ecx, dword[esp+0x98]
mov edx, dword[esp+0x9c]
mov dword[esp+0x14], ecx
mov eax, dword[esp+0xa0]
mov ecx, dword[esp+0xa4]
mov dword[esp+0x18], edx
mov dword[esp+0x1c], eax
mov eax, dword[esp+0xc4]
lea edx, [esp+0x14]
push 2
push edx
push eax
mov dword[esp+0x2c], ecx
call dword[sym.imp.GDI32.dll_LPtoDP]
mov dword[esp+0x14c], ebp
mov dword[esp+method.CRgn.virtual_0], 0x4d7894
lea ecx, [esp+0x14]
mov byte[esp+0x284], 3
push ecx
call dword[sym.imp.GDI32.dll_CreateRectRgnIndirect]
push eax
lea ecx, [esp+0x14c]
call fcn.004ba926
mov eax, dword[esp+0x118]
lea edx, [esp+0x74]
add eax, edi
push edx
mov dword[esp+0x11c], eax
lea eax, [esp+0x11c]
lea ecx, [esp+0x11c]
push eax
push ecx
call dword[sym.imp.USER32.dll_IntersectRect]
mov eax, dword[esp+0x11c]
mov ecx, dword[esp+0x120]
mov edx, dword[esp+0x118]
mov dword[esp+0x18], eax
mov dword[esp+0x1c], ecx
mov ecx, dword[esp+0xc4]
lea eax, [esp+0x14]
mov dword[esp+0x14], edx
mov edx, dword[esp+0x124]
push 2
push eax
push ecx
mov dword[esp+0x2c], edx
call dword[sym.imp.GDI32.dll_LPtoDP]
mov dword[esp+0x154], ebp
mov dword[esp+method.CRgn.virtual_0], 0x4d7894
mov edi, dword[sym.imp.GDI32.dll_CreateRectRgnIndirect]
lea edx, [esp+0x14]
push edx
mov byte[esp+0x288], 4
call edi
push eax
lea ecx, [esp+0x154]
call fcn.004ba926
mov edx, dword[esp+0x12c]
lea eax, [esp+0x74]
add edx, ebx
lea ecx, [esp+0x128]
mov dword[esp+0x12c], edx
push eax
lea edx, [esp+0x12c]
push ecx
push edx
call dword[sym.imp.USER32.dll_IntersectRect]
mov ecx, dword[esp+0x12c]
mov edx, dword[esp+0x130]
mov eax, dword[esp+0x128]
mov dword[esp+0x18], ecx
mov dword[esp+0x1c], edx
mov edx, dword[esp+0xc4]
lea ecx, [esp+0x14]
mov dword[esp+0x14], eax
mov eax, dword[esp+0x134]
push 2
push ecx
push edx
mov dword[esp+0x2c], eax
call dword[sym.imp.GDI32.dll_LPtoDP]
mov dword[esp+0x160], ebp
mov ebx, vtable.CRgn.0
mov dword[esp+0x15c], ebx
lea eax, [esp+0x14]
mov byte[esp+0x284], 5
push eax
call edi
push eax
lea ecx, [esp+0x160]
call fcn.004ba926
mov dword[esp+0x6c], ebp
mov dword[esp+0x68], ebx
mov dword[esp+0x4c], ebp
mov dword[esp+0x48], ebx
lea ecx, [esp+0x1b4]
mov byte[esp+0x284], 7
push ecx
call edi
push eax
lea ecx, [esp+0x6c]
call fcn.004ba926
mov edx, dword[esp+0xc4]
mov edi, dword[sym.imp.GDI32.dll_GetCurrentObject]
push 6
push edx
call edi
push eax
call fcn.004ba911
mov dword[esp+0x190], eax
mov eax, dword[esp+0xc4]
push 1
push eax
call edi
push eax
call fcn.004ba911
mov ecx, dword[esp+0xc4]
push 2
push ecx
mov dword[esp+0x19c], eax
call edi
push eax
call fcn.004ba911
push 1
lea ecx, [esp+0xc0]
mov dword[esp+0x1b4], eax
call fcn.004ba056
mov eax, dword[esi+0x44]
mov edi, dword[esp+0x50]
shr eax, 1
and eax, 1
mov ecx, edi
mov dword[esp+0x144], eax
call fcn.00447a00
mov ecx, edi
mov dword[esp+0x64], eax
call fcn.00447ac0
mov ebx, eax
mov ecx, edi
mov dword[esp+0x58], ebx
call fcn.00447a40
mov ecx, edi
mov dword[esp+0x44], eax
call fcn.00447ad0
mov edi, eax
push 1
mov ecx, esi
mov dword[esp+0x3c], edi
call fcn.004b6dba
add eax, ebx
push ebp
mov ecx, esi
mov dword[esp+0x2c], eax
call fcn.004b6dba
lea edx, [esp+0xb4]
add eax, edi
push edx
mov ecx, esi
mov dword[esp+0x14], eax
call fcn.0044a3f0
mov ecx, dword[eax]
mov dword[esp+0x3c], ecx
mov edx, dword[eax+4]
mov dword[esp+0x94], ebp
mov dword[esp+0x40], edx
mov dword[esp+0x90], 0x4cf5b8
lea eax, [esp+0x90]
mov ecx, esi
push eax
mov byte[esp+0x288], 8
call fcn.0044a7f0
push 0xf
call dword[sym.imp.USER32.dll_GetSysColor]
push eax
lea ecx, [esp+0x178]
call fcn.004ba9e3
push 0xffffff
push ebp
push ebp
lea ecx, [esp+0x144]
mov byte[esp+0x290], 9
call fcn.004ba993
push 0x808080
push ebp
push ebp
lea ecx, [esp+0x11c]
mov byte[esp+0x290], 0xa
call fcn.004ba993
push ebp
push ebp
push ebp
lea ecx, [esp+0x1d0]
mov byte[esp+0x290], 0xb
call fcn.004ba993
mov eax, 5
mov dword[esp+0x164], ebp
mov dword[esp+0x16c], ebp
mov dword[esp+0x168], ebp
mov dword[esp+0x170], eax
mov dword[esp+0x17c], ebp
mov dword[esp+0x184], ebp
mov dword[esp+0x180], ebp
mov dword[esp+0x188], eax
lea ecx, [esp+0x1ec]
mov byte[esp+0x284], 0xe
call fcn.00449760
mov ecx, dword[0x4f5b20]
mov dword[esp+0xb0], ecx
mov byte[esp+0x284], 0x10
mov dword[esp+0x54], 1
mov edi, dword[esp+0x54]
cmp edi, 2
jne 0x44b1e7
push 1
lea ecx, [esp+0xc0]
call fcn.004ba13d
mov edx, dword[esi+0x40]
lea ecx, [esp+0xb4]
push edx
call fcn.004ba9e3
cmp eax, ebp
jne 0x44b187
xor ecx, ecx
jmp 0x44b18a
mov ecx, dword[eax+4]
mov edx, dword[esp+0x6c]
lea eax, [esp+0x68]
neg eax
sbb eax, eax
push ecx
and eax, edx
push eax
mov eax, dword[esp+0xc8]
push eax
call dword[sym.imp.GDI32.dll_FillRgn]
mov dword[esp+0xb4], 0x4d6ac8
lea ecx, [esp+0xb4]
mov byte[esp+0x284], 0x11
call fcn.004ba97d
mov ecx, dword[esi+0x5c]
mov edx, dword[esi+0x58]
push ecx
lea eax, [esp+0xc0]
push edx
push eax
mov byte[esp+0x290], 0x10
call fcn.00461e40
add esp, 0xc
cmp dword[esp+0x144], 1
jne 0x44b9b5
mov ecx, dword[esp+0x78]
mov eax, dword[esp+0x40]
cmp ecx, eax
jg 0x44b6cc
cmp edi, 1
jne 0x44b353
mov eax, dword[esp+0x38]
xor edi, edi
xor ebx, ebx
cmp eax, ebp
jle 0x44b236
push ebx
mov ecx, esi
call fcn.0044a310
push eax
push edi
mov ecx, esi
call fcn.0044a4d0
mov edi, eax
mov eax, dword[esp+0x38]
inc ebx
cmp ebx, eax
jl 0x44b21a
mov ebx, dword[esp+0x10]
mov eax, dword[esp+0x44]
cmp ebx, eax
jge 0x44b25e
push ebx
mov ecx, esi
call fcn.0044a310
push eax
push edi
mov ecx, esi
call fcn.0044a4d0
mov edi, eax
mov eax, dword[esp+0x44]
inc ebx
cmp ebx, eax
jl 0x44b242
mov edx, dword[esp+0x3c]
mov eax, dword[esp+0x40]
add edi, edx
lea ecx, [esp+0x74]
mov dword[esp+0x20], eax
lea edx, [esp+0x14]
push ecx
lea eax, [esp+0x18]
push edx
push eax
mov dword[esp+0x20], ebp
mov dword[esp+0x28], edi
mov dword[esp+0x24], ebp
call dword[sym.imp.USER32.dll_IntersectRect]
lea ecx, [esp+0x14]
push ecx
call dword[sym.imp.USER32.dll_IsRectEmpty]
test eax, eax
jne 0x44b6cc
mov eax, dword[esp+0xc4]
lea edx, [esp+0x14]
push 2
push edx
push eax
call dword[sym.imp.GDI32.dll_LPtoDP]
lea ecx, [esp+0x14]
push ecx
call dword[sym.imp.GDI32.dll_CreateRectRgnIndirect]
push eax
lea ecx, [esp+0x4c]
call fcn.004ba926
mov edi, dword[esp+0x4c]
lea eax, [esp+0x48]
mov edx, dword[esp+0x6c]
lea ecx, [esp+0x68]
neg eax
sbb eax, eax
push 4
and eax, edi
neg ecx
sbb ecx, ecx
push eax
and ecx, edx
push ecx
push edx
call dword[sym.imp.GDI32.dll_CombineRgn]
lea ecx, [esp+0x48]
call fcn.004ba97d
mov eax, dword[esp+0xc4]
lea edx, [esp+0x14]
push 2
push edx
push eax
call dword[sym.imp.GDI32.dll_DPtoLP]
lea ecx, [esp+0x174]
push ecx
lea ecx, [esp+0xc0]
call fcn.004b9f7a
mov eax, dword[esp+0x20]
mov edx, dword[esp+0x18]
mov ecx, dword[esp+0x1c]
mov edi, dword[esp+0x14]
sub eax, edx
sub ecx, edi
push 0xf00021
push eax
push ecx
push edx
mov edx, dword[esp+0xd0]
push edi
push edx
call dword[sym.imp.GDI32.dll_PatBlt]
jmp 0x44b6cc
mov eax, dword[esp+0x10]
mov edx, dword[esp+0x38]
mov ecx, dword[esp+0x44]
sub eax, edx
xor ebx, ebx
mov dword[esp+0x2c], eax
lea edi, [eax-1]
cmp edi, ecx
mov dword[esp+0x24], edi
jge 0x44b6cc
jmp 0x44b37c
mov eax, dword[esp+0x2c]
cmp ebx, dword[esp+0x7c]
jg 0x44b6cc
cmp edi, eax
jl 0x44b49a
mov eax, dword[esp+0x10]
cmp edi, eax
mov edi, dword[esp+0x24]
jge 0x44b3a4
mov ecx, eax
mov eax, dword[esp+0x38]
sub edi, ecx
add edi, eax
push edi
mov ecx, esi
mov dword[esp+0x18], ebx
call fcn.0044a310
push eax
push ebx
mov ecx, esi
call fcn.0044a4d0
mov dword[esp+0x1c], eax
mov eax, dword[esp+0x40]
lea ecx, [esp+0x74]
mov dword[esp+0x20], eax
lea edx, [esp+0x14]
push ecx
lea eax, [esp+0x1d0]
push edx
push eax
mov dword[esp+0x24], ebp
call dword[sym.imp.USER32.dll_IntersectRect]
mov edx, dword[esp+0x1d0]
mov ecx, dword[esp+0x1cc]
mov eax, dword[esp+0x1d4]
mov dword[esp+0x1e0], edx
mov dword[esp+0x1dc], ecx
mov ecx, dword[esp+0x1d8]
lea edx, [esp+0x1dc]
mov dword[esp+0x1e4], eax
push edx
mov dword[esp+0x1ec], ecx
call dword[sym.imp.USER32.dll_IsRectEmpty]
test eax, eax
jne 0x44b496
mov ecx, dword[esp+0x50]
lea eax, [esp+0xb0]
push eax
push edi
call fcn.00447a80
lea ecx, [esp+0x90]
test ecx, ecx
je 0x44b462
mov eax, dword[esp+0x94]
cmp eax, ebp
je 0x44b462
mov edx, dword[esp+0xc0]
push eax
push edx
call dword[sym.imp.GDI32.dll_SelectObject]
push ebp
lea ecx, [esp+0xc0]
call fcn.004ba10e
mov eax, dword[esp+0xb0]
lea edx, [esp+0x14]
push 0x825
push edx
mov ecx, dword[eax-8]
push ecx
push eax
mov eax, dword[esp+0xcc]
lea ecx, [esp+0xcc]
call dword[eax+0x68]
mov edi, dword[esp+0x24]
lea ecx, [esp+0x110]
push ecx
lea ecx, [esp+0xc0]
call fcn.004b9f7a
mov edx, dword[esp+0x2c]
lea eax, [edx-1]
cmp edi, eax
jne 0x44b5bf
mov eax, dword[esp+0x3c]
mov ecx, dword[esp+0x74]
cmp eax, ecx
jl 0x44b5b6
mov edx, dword[esp+0xc4]
mov eax, 1
lea ecx, [esp+0x30]
push eax
push ecx
push edx
mov dword[esp+0x3c], eax
mov dword[esp+0x40], eax
call dword[sym.imp.GDI32.dll_DPtoLP]
lea eax, [esp+0x138]
lea ecx, [esp+0xbc]
push eax
call fcn.004b9f7a
mov ebx, dword[esp+0x40]
mov ecx, dword[esp+0x30]
push ebx
lea edx, [esp+0x22c]
push ecx
push edx
lea ecx, [esp+0xc8]
call fcn.004ba46b
mov eax, dword[esp+0x34]
mov ecx, dword[esp+0x30]
push eax
push ecx
lea ecx, [esp+0xc4]
call fcn.004ba4b7
mov edx, dword[esp+0x34]
mov eax, dword[esp+0x3c]
push edx
push eax
lea ecx, [esp+0xc4]
call fcn.004ba4b7
lea ecx, [esp+0x110]
push ecx
lea ecx, [esp+0xc0]
call fcn.004b9f7a
push ebx
lea edx, [esp+0x23c]
push ebp
push edx
lea ecx, [esp+0xc8]
call fcn.004ba46b
push ebp
push ebp
lea ecx, [esp+0xc4]
call fcn.004ba4b7
mov eax, dword[esp+0x3c]
push ebp
push eax
lea ecx, [esp+0xc4]
call fcn.004ba4b7
mov ecx, dword[esp+0x3c]
push ebx
push ecx
lea ecx, [esp+0xc4]
call fcn.004ba4b7
push ebx
push ebp
lea ecx, [esp+0xc4]
call fcn.004ba4b7
mov ebx, dword[esp+0x3c]
jmp 0x44b6bb
mov ecx, dword[esp+0x10]
mov eax, edi
cmp edi, ecx
jge 0x44b5d1
sub eax, ecx
mov ecx, dword[esp+0x38]
add eax, ecx
push eax
mov ecx, esi
call fcn.0044a310
push eax
push ebx
mov ecx, esi
call fcn.0044a4d0
mov edi, eax
mov eax, dword[esp+0x74]
cmp edi, eax
jl 0x44b6b5
mov eax, dword[esp+0xc4]
lea edx, [esp+0x30]
push 1
push edx
push eax
mov dword[esp+0x3c], ebx
mov dword[esp+0x40], ebp
call dword[sym.imp.GDI32.dll_LPtoDP]
mov ecx, dword[esp+0x30]
mov edx, dword[esp+0xc4]
inc ecx
push 1
mov dword[esp+0x34], ecx
lea ecx, [esp+0x34]
push ecx
push edx
call dword[sym.imp.GDI32.dll_DPtoLP]
lea eax, [esp+0x138]
lea ecx, [esp+0xbc]
push eax
call fcn.004b9f7a
mov ecx, dword[esp+0x40]
mov edx, dword[esp+0x30]
push ecx
lea eax, [esp+0x244]
push edx
push eax
lea ecx, [esp+0xc8]
call fcn.004ba46b
mov ecx, dword[esp+0x30]
push ebp
push ecx
lea ecx, [esp+0xc4]
call fcn.004ba4b7
lea edx, [esp+0x110]
lea ecx, [esp+0xbc]
push edx
call fcn.004b9f7a
push ebp
push edi
lea ecx, [esp+0xc4]
call fcn.004ba4b7
mov eax, dword[esp+0x40]
lea ecx, [esp+0xbc]
push eax
push edi
call fcn.004ba4b7
mov ecx, dword[esp+0x40]
push ecx
push ebx
lea ecx, [esp+0xc4]
call fcn.004ba4b7
mov ebx, edi
mov edi, dword[esp+0x24]
mov eax, dword[esp+0x44]
inc edi
cmp edi, eax
mov dword[esp+0x24], edi
jl 0x44b378
mov edx, dword[esp+0x74]
mov eax, dword[esp+0x3c]
cmp edx, eax
jg 0x44b9ac
mov ebx, dword[esp+0x28]
mov ecx, dword[esp+0x58]
mov eax, dword[esp+0x64]
mov edi, dword[esp+0x40]
sub ebx, ecx
cmp ebx, eax
mov dword[esp+0x24], ebx
jge 0x44b9ac
jmp 0x44b702
mov ebx, dword[esp+0x24]
xor ebp, ebp
cmp edi, dword[esp+0x80]
jg 0x44b9ac
mov eax, dword[esp+0x28]
cmp ebx, eax
jge 0x44b71f
sub ebx, eax
mov eax, dword[esp+0x58]
add ebx, eax
push ebx
mov ecx, esi
call fcn.0044a230
push eax
push edi
mov ecx, esi
call fcn.0044a600
mov ebp, eax
mov eax, dword[esp+0x78]
cmp ebp, eax
jl 0x44b993
mov eax, dword[esp+0x3c]
mov dword[esp+0x14], 0
mov dword[esp+0x1c], eax
mov eax, dword[esp+0x54]
cmp eax, 1
mov dword[esp+0x18], edi
mov dword[esp+0x20], ebp
jne 0x44b829
lea ecx, [esp+0x74]
lea edx, [esp+0x14]
push ecx
lea eax, [esp+0x18]
push edx
push eax
call dword[sym.imp.USER32.dll_IntersectRect]
lea ecx, [esp+0x14]
push ecx
call dword[sym.imp.USER32.dll_IsRectEmpty]
test eax, eax
jne 0x44b993
lea edx, [esp+0x174]
lea ecx, [esp+0xbc]
push edx
call fcn.004b9f7a
mov eax, dword[esp+0x20]
mov edx, dword[esp+0x18]
mov ecx, dword[esp+0x1c]
mov edi, dword[esp+0x14]
sub eax, edx
sub ecx, edi
push 0xf00021
push eax
mov eax, dword[esp+0xc8]
push ecx
push edx
push edi
push eax
call dword[sym.imp.GDI32.dll_PatBlt]
mov edx, dword[esp+0xc4]
lea ecx, [esp+0x14]
push 2
push ecx
push edx
call dword[sym.imp.GDI32.dll_LPtoDP]
lea eax, [esp+0x14]
push eax
call dword[sym.imp.GDI32.dll_CreateRectRgnIndirect]
push eax
lea ecx, [esp+0x4c]
call fcn.004ba926
mov edi, dword[esp+0x4c]
lea eax, [esp+0x48]
mov edx, dword[esp+0x6c]
lea ecx, [esp+0x68]
neg eax
sbb eax, eax
push 4
and eax, edi
neg ecx
sbb ecx, ecx
push eax
and ecx, edx
push ecx
push edx
call dword[sym.imp.GDI32.dll_CombineRgn]
lea ecx, [esp+0x48]
call fcn.004ba97d
jmp 0x44b993
mov edx, dword[esp+0xc4]
lea ecx, [esp+0x30]
push 1
push ecx
push edx
mov dword[esp+0x3c], 0
mov dword[esp+0x40], edi
call dword[sym.imp.GDI32.dll_LPtoDP]
mov eax, dword[esp+0x34]
mov ecx, dword[esp+0xc4]
inc eax
push 1
mov dword[esp+0x38], eax
lea eax, [esp+0x34]
push eax
push ecx
call dword[sym.imp.GDI32.dll_DPtoLP]
lea edx, [esp+0x138]
lea ecx, [esp+0xbc]
push edx
call fcn.004b9f7a
mov eax, dword[esp+0x34]
lea ecx, [esp+0x230]
push eax
push 0
push ecx
lea ecx, [esp+0xc8]
call fcn.004ba46b
mov edx, dword[esp+0x34]
mov eax, dword[esp+0x3c]
push edx
push eax
lea ecx, [esp+0xc4]
call fcn.004ba4b7
lea ecx, [esp+0x110]
push ecx
lea ecx, [esp+0xc0]
call fcn.004b9f7a
mov edx, dword[esp+0x3c]
push ebp
push edx
lea ecx, [esp+0xc4]
call fcn.004ba4b7
push ebp
push 0
lea ecx, [esp+0xc4]
call fcn.004ba4b7
push edi
push 0
lea ecx, [esp+0xc4]
call fcn.004ba4b7
inc ebx
lea eax, [esp+0x248]
push ebx
push 0x4e9d60
push eax
call dword[sym.imp.USER32.dll_wsprintfA]
lea ecx, [esp+0x9c]
add esp, 0xc
test ecx, ecx
je 0x44b92e
mov eax, dword[esp+0x94]
test eax, eax
je 0x44b92e
mov edx, dword[esp+0xc0]
push eax
push edx
call dword[sym.imp.GDI32.dll_SelectObject]
push 0
lea ecx, [esp+0xc0]
call fcn.004ba10e
lea eax, [esp+0x248]
lea ecx, [esp+0x158]
push eax
call fcn.004b3b7a
mov eax, dword[esp+0x158]
lea edx, [esp+0x14]
push 0x825
push edx
mov ecx, dword[eax-8]
mov byte[esp+0x28c], 0x12
push ecx
push eax
mov eax, dword[esp+0xcc]
lea ecx, [esp+0xcc]
call dword[eax+0x68]
lea ecx, [esp+0x158]
mov byte[esp+0x284], 0x10
call fcn.004b3b0c
mov eax, dword[esp+0x24]
mov ecx, dword[esp+0x64]
inc eax
mov edi, ebp
cmp eax, ecx
mov dword[esp+0x24], eax
jl 0x44b6fc
xor ebp, ebp
mov ebx, dword[esp+0x40]
jmp 0x44bb2a
cmp edi, 2
jne 0x44bb28
cmp dword[esp+0x78], 4
jg 0x44ba73
cmp dword[esp+0x58], ebp
jne 0x44ba73
cmp dword[esp+0x28], ebp
jle 0x44ba73
mov ebx, dword[esp+0x10]
mov ecx, dword[esp+0x38]
mov eax, dword[esp+0x44]
sub ebx, ecx
cmp ebx, eax
mov dword[esp+0x2c], ebp
mov dword[esp+0xac], ebp
jge 0x44ba73
mov eax, dword[esp+0x10]
mov edi, ebx
cmp ebx, eax
jge 0x44ba0e
mov ecx, eax
mov eax, dword[esp+0x38]
sub edi, ecx
add edi, eax
push edi
mov ecx, esi
call fcn.0044a310
mov ecx, dword[esp+0x28]
mov dword[esp+0xa8], eax
push edi
lea eax, [ecx-1]
mov ecx, dword[esp+0x54]
push eax
call fcn.00447b20
push eax
mov eax, dword[esp+0x2c]
lea edx, [esp+0xac]
push 0x10
push edx
dec eax
push edi
mov edi, dword[esp+0x3c]
push eax
push ebp
lea ecx, [esp+0xd4]
push edi
push ecx
mov ecx, esi
call fcn.0044ddf0
mov edx, dword[esp+0xa8]
mov ecx, esi
push edx
push edi
call fcn.0044a4d0
mov dword[esp+0x2c], eax
mov eax, dword[esp+0x44]
inc ebx
cmp ebx, eax
jl 0x44b9fa
cmp dword[esp+0x74], 4
jg 0x44bb28
cmp dword[esp+0x38], ebp
jne 0x44bb28
cmp dword[esp+0x10], ebp
jle 0x44bb28
mov ebx, dword[esp+0x28]
mov ecx, dword[esp+0x58]
mov eax, dword[esp+0x64]
sub ebx, ecx
cmp ebx, eax
mov dword[esp+0x2c], ebp
mov dword[esp+0xa8], ebp
jge 0x44bb28
mov eax, dword[esp+0x28]
mov edi, ebx
cmp ebx, eax
jge 0x44bac3
mov ecx, eax
mov eax, dword[esp+0x58]
sub edi, ecx
add edi, eax
push edi
mov ecx, esi
call fcn.0044a230
mov ecx, dword[esp+0x50]
mov dword[esp+0xac], eax
mov eax, dword[esp+0x10]
dec eax
push eax
push edi
call fcn.00447b20
mov edx, dword[esp+0x10]
push eax
lea ecx, [esp+0xac]
push 8
lea eax, [edx-1]
push ecx
push eax
push edi
mov edi, dword[esp+0x40]
lea eax, [esp+0xd0]
push edi
push ebp
push eax
mov ecx, esi
call fcn.0044ddf0
mov ecx, dword[esp+0xac]
push ecx
push edi
mov ecx, esi
call fcn.0044a600
mov dword[esp+0x2c], eax
mov eax, dword[esp+0x64]
inc ebx
cmp ebx, eax
jl 0x44baaf
xor ebx, ebx
push 0xffffffffffffffff
push ebp
lea ecx, [esp+0x16c]
mov dword[esp+0x90], ebx
call fcn.0044a0d0
push 0xffffffffffffffff
push ebp
lea ecx, [esp+0x184]
call fcn.0044a0d0
mov edi, dword[esp+0x28]
mov ecx, dword[esp+0x58]
mov eax, dword[esp+0x64]
sub edi, ecx
cmp edi, eax
mov dword[esp+0x24], edi
jge 0x44bfdf
jmp 0x44bb6d
xor ebp, ebp
cmp ebx, dword[esp+0x80]
jg 0x44bfdf
mov eax, dword[esp+0x28]
mov ebp, edi
cmp edi, eax
jge 0x44bb8c
sub ebp, eax
mov eax, dword[esp+0x58]
add ebp, eax
push ebp
mov ecx, esi
mov dword[esp+0x60], ebp
call fcn.0044a230
push eax
push ebx
mov ecx, esi
call fcn.0044a600
mov ecx, eax
mov eax, dword[esp+0x78]
cmp ecx, eax
mov dword[esp+0x1ac], ecx
jl 0x44bfc3
mov edx, dword[esp+0x3c]
mov eax, dword[esp+0x10]
mov ebx, dword[esp+0x38]
mov dword[esp+0x8c], edx
mov edx, dword[esp+0x44]
sub eax, ebx
cmp eax, edx
mov dword[esp+0x2c], eax
jge 0x44bfc3
mov ecx, dword[esp+0x10]
jmp 0x44bbed
mov ecx, dword[esp+0x10]
mov ebp, dword[esp+0x5c]
mov eax, dword[esp+0x2c]
cmp eax, ecx
jge 0x44bbf9
mov edx, dword[esp+0x38]
sub eax, ecx
add eax, edx
mov edx, dword[esp+0x28]
mov dword[esp+0x60], eax
cmp ebp, edx
jge 0x44bc18
cmp eax, ecx
jge 0x44bc0f
lea eax, [esp+0x74]
jmp 0x44bc2a
lea eax, [esp+0x118]
jmp 0x44bc2a
cmp eax, ecx
lea eax, [esp+0x128]
jl 0x44bc2a
lea eax, [esp+0x98]
mov ecx, dword[eax]
mov edx, dword[eax+4]
mov edi, dword[esp+0x60]
mov ebp, dword[esp+0x5c]
mov dword[esp+0x198], ecx
mov ecx, dword[eax+8]
mov ebx, dword[esp+0x88]
mov dword[esp+0x1a0], ecx
push 0
mov dword[esp+0x1a0], edx
mov edx, dword[eax+0xc]
mov eax, dword[esp+0x90]
push edi
lea ecx, [esp+0x1f4]
push ebp
push ecx
mov ecx, dword[esp+0x60]
mov dword[esp+0x1b4], edx
mov dword[esp+0x94], eax
call fcn.00447ae0
lea ecx, [esp+0x1ec]
call fcn.00449840
test eax, 0x3c0000
je 0x44bdef
lea ecx, [esp+0x1ec]
call fcn.00449840
test eax, 0x40000
je 0x44bcfb
mov edx, dword[esp+0x5c]
mov ecx, dword[esp+0x50]
dec edi
push 0
push edi
lea eax, [esp+0x1f4]
push edx
push eax
call fcn.00447ae0
push edi
mov ecx, esi
call fcn.0044a310
mov ecx, dword[esp+0x84]
neg eax
push eax
push ecx
mov ecx, esi
call fcn.0044a4d0
lea ecx, [esp+0x1ec]
mov dword[esp+0x84], eax
call fcn.00449840
test eax, 0x40000
jne 0x44bcad
lea ecx, [esp+0x1ec]
call fcn.00449840
test eax, 0x80000
je 0x44bd4c
mov ecx, dword[esp+0x50]
dec ebp
push 0
push edi
lea edx, [esp+0x1f4]
push ebp
push edx
call fcn.00447ae0
push ebp
mov ecx, esi
call fcn.0044a230
neg eax
push eax
push ebx
mov ecx, esi
call fcn.0044a600
lea ecx, [esp+0x1ec]
mov ebx, eax
call fcn.00449840
test eax, 0x80000
jne 0x44bd0e
mov edx, dword[esp+0x168]
mov dword[esp+0x140], 0
test edx, edx
jle 0x44bd9f
mov eax, dword[esp+0x17c]
mov ecx, dword[esp+0x164]
sub ecx, eax
mov dword[esp+0x70], ecx
jmp 0x44bd7c
mov ecx, dword[esp+0x70]
cmp dword[ecx+eax], ebp
jne 0x44bd89
cmp dword[eax], edi
je 0x44be1d
mov ecx, dword[esp+0x140]
add eax, 4
inc ecx
cmp ecx, edx
mov dword[esp+0x140], ecx
jl 0x44bd78
cmp ebp, 0xffffffff
je 0x44bdef
mov dword[esp+0x70], edx
inc edx
push 0xffffffffffffffff
push edx
lea ecx, [esp+0x16c]
call fcn.0044a0d0
mov eax, dword[esp+0x164]
mov ecx, dword[esp+0x70]
push 0xffffffffffffffff
mov dword[eax+ecx*4], ebp
mov eax, dword[esp+0x184]
mov dword[esp+0x74], eax
inc eax
push eax
lea ecx, [esp+0x184]
call fcn.0044a0d0
mov edx, dword[esp+0x17c]
mov eax, dword[esp+0x70]
mov dword[edx+eax*4], edi
cmp dword[esp+0x54], 2
jne 0x44be49
mov ecx, dword[esp+0x28]
mov eax, dword[esp+0x5c]
cmp eax, ecx
jge 0x44be22
mov edx, dword[esp+0x10]
mov ecx, dword[esp+0x60]
xor eax, eax
cmp ecx, edx
setl al
dec eax
lea ecx, [esp+0x150]
and eax, ecx
jmp 0x44be3c
or ebp, 0xffffffff
jmp 0x44bdef
mov edx, dword[esp+0x10]
mov eax, dword[esp+0x60]
cmp eax, edx
lea eax, [esp+0x15c]
jl 0x44be3c
lea eax, [esp+0x148]
push eax
lea ecx, [esp+0xc0]
call fcn.004ba3a7
cmp ebp, 0xffffffff
je 0x44bf33
cmp dword[esp+0x54], 1
jne 0x44bf0d
mov edx, dword[esp+0x84]
lea eax, [esp+0x14]
lea ecx, [esp+0x198]
push eax
push ecx
push 0x20
push edi
push ebp
push ebx
lea eax, [esp+0xd4]
push edx
push eax
mov ecx, esi
call fcn.0044d4b0
lea ecx, [esp+0x198]
lea edx, [esp+0x14]
push ecx
lea eax, [esp+0x18]
push edx
push eax
call dword[sym.imp.USER32.dll_IntersectRect]
lea ecx, [esp+0x14]
push ecx
call dword[sym.imp.USER32.dll_IsRectEmpty]
test eax, eax
jne 0x44bf80
mov eax, dword[esp+0xc4]
lea edx, [esp+0x14]
push 2
push edx
push eax
call dword[sym.imp.GDI32.dll_LPtoDP]
lea ecx, [esp+0x14]
push ecx
call dword[sym.imp.GDI32.dll_CreateRectRgnIndirect]
push eax
lea ecx, [esp+0x4c]
call fcn.004ba926
mov ebp, dword[esp+0x4c]
lea eax, [esp+0x48]
mov edx, dword[esp+0x6c]
lea ecx, [esp+0x68]
neg eax
sbb eax, eax
push 4
and eax, ebp
neg ecx
sbb ecx, ecx
push eax
and ecx, edx
push ecx
push edx
call dword[sym.imp.GDI32.dll_CombineRgn]
lea ecx, [esp+0x48]
call fcn.004ba97d
jmp 0x44bf80
mov eax, dword[esp+0x84]
lea edx, [esp+0x198]
push 0
push edx
push 1
push edi
push ebp
push ebx
lea ecx, [esp+0xd4]
push eax
push ecx
mov ecx, esi
call fcn.0044d4b0
cmp dword[esp+0x54], 2
jne 0x44bf80
mov eax, dword[esp+0x144]
mov ecx, dword[esp+0x60]
dec eax
lea edx, [esp+0x198]
neg eax
sbb eax, eax
push 0
and eax, 6
push edx
mov edx, dword[esp+0x64]
add eax, 0x18
push eax
mov eax, dword[esp+0x94]
push ecx
mov ecx, dword[esp+0x9c]
push edx
push eax
lea edx, [esp+0xd4]
push ecx
push edx
mov ecx, esi
call fcn.0044d4b0
mov eax, dword[esp+0x60]
mov ecx, esi
push eax
call fcn.0044a310
mov ecx, dword[esp+0x8c]
push eax
push ecx
mov ecx, esi
call fcn.0044a4d0
mov ecx, dword[esp+0x44]
mov dword[esp+0x8c], eax
mov eax, dword[esp+0x2c]
inc eax
cmp eax, ecx
mov dword[esp+0x2c], eax
jl 0x44bbe1
mov edi, dword[esp+0x24]
mov ecx, dword[esp+0x1ac]
mov eax, dword[esp+0x64]
inc edi
mov ebx, ecx
cmp edi, eax
mov dword[esp+0x88], ebx
mov dword[esp+0x24], edi
jl 0x44bb6b
xor ebp, ebp
push ebp
lea ecx, [esp+0xc0]
call fcn.004ba3a7
mov eax, dword[esp+0x54]
inc eax
cmp eax, 2
mov dword[esp+0x54], eax
jle 0x44b154
mov eax, dword[esi+0x44c]
pop ebx
cmp eax, ebp
je 0x44c010
mov ecx, esi
call fcn.0044c300
push ebp
lea ecx, [esp+0xbc]
call fcn.004ba3a7
mov edx, dword[esp+0x18c]
lea ecx, [esp+0xb8]
push edx
call fcn.004b9f7a
mov eax, dword[esp+0x190]
lea ecx, [esp+0xb8]
push eax
call fcn.004b9f7a
mov ecx, dword[esp+0x1ac]
push ecx
lea ecx, [esp+0xbc]
call fcn.004b9f7a
mov edx, dword[esp+0x188]
mov ecx, esi
push edx
call fcn.0044a740
lea ecx, [esp+0xac]
mov byte[esp+0x280], 0xf
call fcn.004b3b0c
lea ecx, [esp+0x1e8]
mov byte[esp+0x280], 0xe
call fcn.00449790
mov eax, dword[esp+0x178]
cmp eax, ebp
je 0x44c0a4
push eax
call fcn.004b3876
add esp, 4
mov eax, dword[esp+0x160]
cmp eax, ebp
je 0x44c0b8
push eax
call fcn.004b3876
add esp, 4
mov esi, vtable.CGdiObject.0
mov dword[esp+0x1c0], esi
lea ecx, [esp+0x1c0]
mov byte[esp+0x280], 0x13
call fcn.004ba97d
mov dword[esp+0x10c], esi
lea ecx, [esp+0x10c]
mov byte[esp+0x280], 0x14
call fcn.004ba97d
mov dword[esp+0x134], esi
lea ecx, [esp+0x134]
mov byte[esp+0x280], 0x15
call fcn.004ba97d
mov dword[esp+0x170], esi
lea ecx, [esp+0x170]
mov byte[esp+0x280], 0x16
call fcn.004ba97d
mov dword[esp+0x8c], esi
lea ecx, [esp+0x8c]
mov byte[esp+0x280], 0x17
call fcn.004ba97d
mov dword[esp+0x44], esi
lea ecx, [esp+0x44]
mov byte[esp+0x280], 0x18
call fcn.004ba97d
mov dword[esp+0x64], esi
lea ecx, [esp+0x64]
mov byte[esp+0x280], 0x19
call fcn.004ba97d
mov dword[esp+0x158], esi
lea ecx, [esp+0x158]
mov byte[esp+0x280], 0x1a
call fcn.004ba97d
mov dword[esp+0x14c], esi
lea ecx, [esp+0x14c]
mov byte[esp+0x280], 0x1b
call fcn.004ba97d
mov dword[esp+0x144], esi
lea ecx, [esp+0x144]
mov byte[esp+0x280], 0x1c
call fcn.004ba97d
lea ecx, [esp+0x1a4]
call fcn.0044a220
jmp 0x44c21e
mov eax, dword[esi+0x40]
lea ecx, [esp+0xb0]
push eax
call fcn.004ba9e3
cmp eax, ebp
jne 0x44c1e5
xor eax, eax
jmp 0x44c1e8
mov eax, dword[eax+4]
mov edx, dword[esp+0xbc]
lea ecx, [esp+0x1b0]
push eax
push ecx
push edx
call dword[sym.imp.USER32.dll_FillRect]
mov dword[esp+0xb0], 0x4d6ac8
lea ecx, [esp+0xb0]
mov byte[esp+0x280], 1
call fcn.004ba97d
lea ecx, [esp+0xb8]
mov dword[esp+0x280], 0xffffffff
call fcn.004ba858
mov ecx, dword[esp+0x278]
pop edi
pop esi
pop ebp
mov dword
add esp, 0x278
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/3e981d1767f44f5fe2446a49ffe52f4e