---
layout: post
title:  "fcn.00430f54 @ 96a869ae624ddb4834a1d5a829f85469"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00430f54
- **Origin (md5):** 96a869ae624ddb4834a1d5a829f85469
- **VirusTotal:** [virustotal.com/gui/file/96a869ae624ddb4834a1d5a829f85469][virustotal_ref]

# Code Tags
<span class="tag" id="LINKING">LINKING</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [253.94424438476562, -102.95361328125, '<b><a href="/report/fcn.00430f54@96a869ae624ddb4834a1d5a829f85469">fcn.00430f54</a><br>@96a869ae624ddb4834a1d5a829f85469</b><br>', 'point { fill-color: #e0440e; }'],
[170.20321655273438, 275.7720947265625, '<b><a href="/report/fcn.00430f54@c077742bdc6d4f2c0ca7d0e2a6a94acf">fcn.00430f54</a><br>@c077742bdc6d4f2c0ca7d0e2a6a94acf</b><br>', 'null'],
[-115.91412353515625, 13.886402130126953, '<b><a href="/report/fcn.00430f54@505be53c36227b94e2fcc406f247f6e5">fcn.00430f54</a><br>@505be53c36227b94e2fcc406f247f6e5</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push 0xb4
mov eax, 0x458adf
call fcn.00453b49
push dword[0x47e694]
mov edi, ecx
push dword[0x47e108]
xor ebx, ebx
push ebx
mov dword[ebp-0xac], edi
call fcn.0043f1ab
mov dword[ebp-0x9c], 0x2c
mov dword[ebp-0x94], 0x62
mov eax, dword[ebp-0x94]
mov ecx, dword[ebp-0x94]
sub eax, ecx
mov dword[ebp-0x94], eax
mov eax, dword[ebp-0x94]
mov ecx, dword[ebp-0x9c]
imul eax, ecx
mov ecx, dword[ebp-0x94]
imul eax, eax, 0x51
imul ecx, ecx, 0xffffffba
sub ecx, eax
mov eax, dword[ebp-0x9c]
imul eax, eax, 0x35
add ecx, eax
mov eax, dword[ebp-0x94]
sub ecx, eax
mov eax, dword[ebp-0x9c]
lea eax, [ecx+eax-0x20]
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0x94]
mov ecx, dword[ebp-0x9c]
imul eax, eax, 0x2e
sub ecx, eax
mov eax, dword[ebp-0x9c]
sub ecx, eax
add ecx, dword[ebp-0x9c]
add esp, 0xc
mov dword[ebp-0x94], ecx
mov eax, dword[ebp-0x94]
sub eax, 0x52
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0x9c]
mov ecx, dword[ebp-0x94]
lea eax, [ecx+eax+0x32]
mov dword[ebp-0x94], eax
mov eax, dword[ebp-0x94]
push 0x3f
pop ecx
sub ecx, eax
mov eax, dword[ebp-0x94]
sub ecx, eax
add ecx, dword[ebp-0x9c]
push 0x25
add ecx, dword[ebp-0x9c]
mov dword[ebp-0x9c], ecx
mov eax, dword[ebp-0x9c]
mov ecx, dword[ebp-0x9c]
imul eax, ecx
mov ecx, dword[ebp-0x9c]
imul eax, eax, 0x3e
sub eax, ecx
mov ecx, dword[ebp-0x94]
sub eax, ecx
add eax, dword[ebp-0x9c]
pop ecx
mov dword[ebp-0x94], eax
mov eax, dword[ebp-0x9c]
cdq
idiv ecx
mov ecx, dword[ebp-0x9c]
sub eax, ecx
mov dword[ebp-0x94], eax
add dword[ebp-0x94], 0xffffffb1
mov esi, dword[0x47e970]
mov eax, 0x6ac0
mov dword[ebp-0x20], 0xf414c260
mov word[ebp-0x1c], ax
mov dword[ebp-0x1a], 0xd1b611cf
mov dword[ebp-0x16], 0xbb00aa00
mov word[ebp-0x12], 0x58bb
call fcn.0043fb02
lea ecx, [ebp-0x4c]
push ecx
push esi
call dword[eax+0x1dc]
fld qword[0x4778d8]
fstp qword[ebp-0x90]
fld qword[ebp-0x90]
fadd qword[ebp-0x90]
fsub qword[ebp-0x90]
fsub qword[ebp-0x90]
fstp qword[ebp-0x90]
fld qword[ebp-0x90]
fadd qword[ebp-0x90]
fld qword[ebp-0x90]
fmul qword[0x4778d0]
fsubp st(1)
fadd qword[ebp-0x90]
fld qword[ebp-0x90]
fmul qword[ebp-0x90]
fdiv qword[0x4778c8]
fsubp st(1)
fadd qword[ebp-0x90]
fsub qword[ebp-0x90]
fadd qword[ebp-0x90]
fld qword[ebp-0x90]
fmul qword[0x4778c0]
faddp st(1)
fstp qword[ebp-0x90]
fld qword[ebp-0x90]
fmul qword[ebp-0x90]
fmul qword[ebp-0x90]
fld qword[ebp-0x90]
fmul qword[ebp-0x90]
faddp st(1)
fld qword[ebp-0x90]
fmul qword[ebp-0x90]
fdiv qword[0x4778b8]
fmul qword[ebp-0x90]
faddp st(1)
fld qword[ebp-0x90]
fmul qword[0x4778b0]
fmul qword[0x4778a8]
faddp st(1)
fsub qword[ebp-0x90]
fld qword[ebp-0x90]
fmul qword[ebp-0x90]
faddp st(1)
fstp qword[ebp-0x90]
fld qword[ebp-0x90]
fsub qword[ebp-0x90]
fsub qword[0x4778a0]
fstp qword[ebp-0x90]
fld qword[ebp-0x90]
fadd qword[ebp-0x90]
fstp qword[ebp-0x90]
cmp eax, ebx
jge off.b702
push eax
push dword[0x47e698]
push 1
call fcn.0043f1ab
add esp, 0xc
jmp off.b889
lea eax, [edi+0x10]
push eax
lea eax, [ebp-0x4c]
push eax
call fcn.0043ffdd
mov esi, eax
cmp esi, ebx
jge off.b2985
lea eax, [ebp-0xb8]
push eax
mov dword[ebp-0xb8], ebx
lea eax, [ebp-0x4c]
mov dword[ebp-0xa4], 0x54
add dword[ebp-0xa4], 0x13
push eax
call dword[sym.imp.ole32.dll_StringFromCLSID]
mov eax, dword[ebp-0xb8]
cmp eax, ebx
jne off.b780
mov eax, dword[0x47e8a8]
push eax
lea eax, [ebp-0x68]
call fcn.0040529b
lea eax, [ebp-0x68]
push eax
mov edx, 0xfde9
lea ecx, [ebp-0x84]
mov dword[ebp-4], ebx
call fcn.0044d9e8
pop ecx
mov byte[ebp-4], 1
cmp dword[eax+0x14], 0x10
jb off.b825
mov eax, dword[eax]
push esi
push eax
push dword[0x47e69c]
push 1
call fcn.0043f1ab
add esp, 0x10
push 1
xor edi, edi
lea esi, [ebp-0x84]
call fcn.00404e30
or dword[ebp-4], 0xffffffff
push 1
lea esi, [ebp-0x68]
call fcn.00405174
push dword[ebp-0xb8]
call fcn.0043ff78
mov edi, dword[ebp-0xac]
lea eax, [edi+0x10]
push eax
lea eax, [ebp-0x20]
push eax
call fcn.0043ffdd
mov dword[ebp-0x9c], 0x4a
mov dword[ebp-0x8c], 0xf
mov dword[ebp-0x94], 0x3a
mov dword[ebp-0xa4], 0x42
mov ecx, dword[ebp-0x94]
mov edx, dword[ebp-0x9c]
imul ecx, edx
mov dword[ebp-0x8c], ecx
mov ecx, dword[ebp-0x94]
mov edx, dword[ebp-0x9c]
cmp ecx, edx
jge off.b1050
mov ecx, dword[ebp-0x94]
mov edx, dword[ebp-0x8c]
imul ecx, edx
mov edx, dword[ebp-0xa4]
imul ecx, ecx, 0x2b
sub ecx, edx
mov dword[ebp-0x9c], ecx
mov ecx, dword[ebp-0xa4]
mov edx, dword[ebp-0x94]
imul ecx, ecx, 0x5e
sub edx, ecx
mov ecx, dword[ebp-0xa4]
sub edx, ecx
mov ecx, dword[ebp-0x9c]
sub edx, ecx
mov dword[ebp-0x94], edx
cmp eax, ebx
jge off.b2985
push eax
push dword[0x47e6a0]
push 1
call fcn.0043f1ab
add esp, 0xc
push dword[0x47e6a4]
lea eax, [ebp-0x3c]
call fcn.00404917
mov dword[ebp-4], 2
push dword[0x47e974]
call dword[sym.imp.KERNEL32.dll_LoadLibraryW]
fld qword[0x4778d8]
fstp qword[ebp-0x90]
mov dword[ebp-0xa4], eax
fld qword[ebp-0x90]
fadd qword[ebp-0x90]
fsub qword[ebp-0x90]
fsub qword[ebp-0x90]
fstp qword[ebp-0x90]
fld qword[ebp-0x90]
fadd qword[ebp-0x90]
fld qword[ebp-0x90]
fmul qword[0x4778d0]
fsubp st(1)
fadd qword[ebp-0x90]
fld qword[ebp-0x90]
fmul qword[ebp-0x90]
fdiv qword[0x4778c8]
fsubp st(1)
fadd qword[ebp-0x90]
fsub qword[ebp-0x90]
fadd qword[ebp-0x90]
fld qword[ebp-0x90]
fmul qword[0x4778c0]
faddp st(1)
fstp qword[ebp-0x90]
fld qword[ebp-0x90]
fmul qword[ebp-0x90]
fmul qword[ebp-0x90]
fld qword[ebp-0x90]
fmul qword[ebp-0x90]
faddp st(1)
fld qword[ebp-0x90]
fmul qword[ebp-0x90]
fdiv qword[0x4778b8]
fmul qword[ebp-0x90]
faddp st(1)
fld qword[ebp-0x90]
fmul qword[0x4778b0]
fmul qword[0x4778a8]
faddp st(1)
fsub qword[ebp-0x90]
fld qword[ebp-0x90]
fmul qword[ebp-0x90]
faddp st(1)
fstp qword[ebp-0x90]
fld qword[ebp-0x90]
fsub qword[ebp-0x90]
fsub qword[0x4778a0]
fstp qword[ebp-0x90]
fld qword[ebp-0x90]
fadd qword[ebp-0x90]
fstp qword[ebp-0x90]
cmp eax, ebx
je off.b2595
mov eax, dword[str.kCCJHF_J_J_YJ__]
push eax
mov esi, eax
call fcn.00413080
pop ecx
mov ecx, esi
lea esi, [ebp-0x3c]
call fcn.004048ae
push dword[0x47e6a8]
push dword[ebp-0xa4]
call dword[sym.imp.KERNEL32.dll_GetProcAddress]
fldz
fstp qword[ebp-0x90]
mov ecx, eax
fld qword[0x477948]
fstp qword[ebp-0x90]
fld qword[0x477940]
fst qword[ebp-0xa0]
fld qword[0x477938]
fstp qword[ebp-0x98]
fld qword[0x477930]
fstp qword[ebp-0xc0]
fld qword[ebp-0x90]
fld qword[ebp-0x90]
fucompp
fnstsw ax
test ah, 0x44
jp off.b1587
fld qword[ebp-0x98]
fsub qword[0x477978]
fsub qword[ebp-0xa0]
fsub qword[ebp-0x98]
fsub qword[ebp-0xa0]
fld qword[ebp-0x90]
fdivrp st(2)
fsubrp st(1)
fsub qword[ebp-0x98]
fsub qword[0x477928]
fadd qword[ebp-0x90]
fstp qword[ebp-0xa0]
jmp off.b1589
fstp st(0)
cmp ecx, ebx
je off.b1618
call ecx
xor ecx, ecx
cmp eax, ebx
setl cl
push eax
push dword[0x47e6ac]
push ecx
call fcn.0043f1ab
add esp, 0xc
mov eax, dword[str.EmmFduBm_rrNckdbu]
push eax
mov esi, eax
call fcn.00413080
pop ecx
mov ecx, esi
lea esi, [ebp-0x3c]
call fcn.004048ae
fld qword[0x4779a8]
mov dword[ebp-0x8c], 0x54
add dword[ebp-0x8c], 0x13
fstp qword[ebp-0xc0]
fld qword[0x4779a0]
fstp qword[ebp-0xa0]
fld qword[0x4779d0]
fstp qword[ebp-0x90]
fld qword[0x477998]
fstp qword[ebp-0x98]
fld qword[ebp-0x90]
fmul qword[ebp-0x90]
fld qword[ebp-0x90]
fsub qword[0x4779c8]
faddp st(1)
fld qword[ebp-0x98]
fmul qword[ebp-0x98]
fsubp st(1)
fsub qword[0x477990]
fstp qword[ebp-0x98]
fld qword[ebp-0x98]
fcomp qword[ebp-0x90]
fnstsw ax
test ah, 0x41
jp off.b1796
fld qword[ebp-0x90]
fmul qword[ebp-0xa0]
fstp qword[ebp-0x98]
push dword[0x47e6b0]
push dword[ebp-0xa4]
call dword[sym.imp.KERNEL32.dll_GetProcAddress]
mov dword[ebp-0x8c], eax
cmp eax, ebx
je off.b2562
mov dword[ebp-0xb4], ebx
lea ecx, [ebp-0xb4]
push ecx
mov esi, 0x45b3f0
push esi
lea ecx, [ebp-0x4c]
push ecx
mov byte[ebp-4], 3
call eax
cmp eax, ebx
jge off.b1893
lea eax, [ebp-0xb4]
push eax
push esi
lea eax, [ebp-0x20]
push eax
call dword[ebp-0x8c]
mov dword[ebp-0x94], eax
cmp eax, ebx
jl off.b2533
mov eax, dword[0x47e6b4]
push eax
mov esi, eax
call fcn.00413080
pop ecx
mov ecx, esi
lea esi, [ebp-0x3c]
call fcn.004048ae
fld qword[0x4778d8]
fstp qword[ebp-0x90]
lea eax, [edi+0x10]
fld qword[ebp-0x90]
push eax
fadd qword[ebp-0x90]
push 0x45b400
push ebx
fsub qword[ebp-0x90]
fsub qword[ebp-0x90]
fstp qword[ebp-0x90]
fld qword[ebp-0x90]
fadd qword[ebp-0x90]
fld qword[ebp-0x90]
fmul qword[0x4778d0]
fsubp st(1)
fadd qword[ebp-0x90]
fld qword[ebp-0x90]
fmul qword[ebp-0x90]
fdiv qword[0x4778c8]
fsubp st(1)
fadd qword[ebp-0x90]
fsub qword[ebp-0x90]
fadd qword[ebp-0x90]
fld qword[ebp-0x90]
fmul qword[0x4778c0]
faddp st(1)
fstp qword[ebp-0x90]
fld qword[ebp-0x90]
fmul qword[ebp-0x90]
fmul qword[ebp-0x90]
fld qword[ebp-0x90]
fmul qword[ebp-0x90]
faddp st(1)
fld qword[ebp-0x90]
fmul qword[ebp-0x90]
fdiv qword[0x4778b8]
fmul qword[ebp-0x90]
faddp st(1)
fld qword[ebp-0x90]
fmul qword[0x4778b0]
fmul qword[0x4778a8]
faddp st(1)
fsub qword[ebp-0x90]
fld qword[ebp-0x90]
fmul qword[ebp-0x90]
faddp st(1)
fstp qword[ebp-0x90]
fld qword[ebp-0x90]
fsub qword[ebp-0x90]
fsub qword[0x4778a0]
fstp qword[ebp-0x90]
fld qword[ebp-0x90]
fadd qword[ebp-0x90]
mov ecx, dword[ebp-0xb4]
mov edx, dword[ecx]
push ecx
fstp qword[ebp-0x90]
call dword[edx+0xc]
fld qword[0x477920]
mov dword[ebp-0x94], eax
fstp qword[ebp-0x90]
fld qword[ebp-0x90]
fmul qword[0x477918]
fsub qword[ebp-0x90]
fstp qword[ebp-0x90]
fld qword[ebp-0x90]
fmul qword[ebp-0x90]
fadd qword[0x477910]
fadd qword[ebp-0x90]
fld qword[ebp-0x90]
fld qword[0x477908]
fmul st(1), st(0)
fxch st(2)
faddp st(1)
fsub qword[ebp-0x90]
fsub qword[0x477900]
fld qword[ebp-0x90]
fmul qword[0x4779b0]
fsubp st(1)
fadd qword[ebp-0x90]
fld qword[ebp-0x90]
fmul qword[ebp-0x90]
faddp st(1)
fsub qword[0x4779c0]
fadd qword[ebp-0x90]
fstp qword[ebp-0x90]
fld qword[ebp-0x90]
fadd qword[ebp-0x90]
fstp qword[ebp-0x90]
fld qword[ebp-0x90]
fdiv qword[0x4778f8]
fsub qword[ebp-0x90]
fstp qword[ebp-0x90]
fld qword[ebp-0x90]
fsub qword[ebp-0x90]
fld qword[ebp-0x90]
fmul qword[ebp-0x90]
fmul qword[ebp-0x90]
fsubp st(1)
fstp qword[ebp-0x90]
fld qword[ebp-0x90]
fld qword[ebp-0x90]
fmul qword[ebp-0x90]
fdiv qword[0x4778c8]
fmul qword[ebp-0x90]
fsubp st(1)
fsub qword[ebp-0x90]
fsub qword[0x477940]
fsub qword[ebp-0x90]
fstp qword[ebp-0x90]
fld qword[ebp-0x90]
fmul qword[ebp-0x90]
fmulp st(1)
fmul qword[ebp-0x90]
fadd qword[ebp-0x90]
fstp qword[ebp-0x90]
mov byte[ebp-4], 2
mov eax, dword[ebp-0xb4]
cmp eax, ebx
je off.b2768
mov ecx, dword[eax]
push eax
call dword[ecx+8]
jmp off.b2768
call fcn.0043fb02
call dword[eax+0x3c]
cmp eax, ebx
jle off.b2584
and eax, 0xffff
or eax, 0x80070000
mov dword[ebp-0x94], eax
jmp off.b2768
call fcn.0043fb02
call dword[eax+0x3c]
cmp eax, ebx
jle off.b2617
and eax, 0xffff
or eax, 0x80070000
fldz
mov dword[ebp-0x94], eax
fstp qword[ebp-0xc0]
fld qword[0x477948]
fstp qword[ebp-0x90]
fld qword[0x477940]
fst qword[ebp-0xa0]
fld qword[0x477938]
fstp qword[ebp-0xa8]
fld qword[0x477930]
fstp qword[ebp-0xc0]
fld qword[ebp-0x90]
fld qword[ebp-0x90]
fucompp
fnstsw ax
test ah, 0x44
jp off.b2766
fld qword[ebp-0xa8]
fsub qword[0x477978]
fsub qword[ebp-0xa0]
fsub qword[ebp-0xa8]
fsub qword[ebp-0xa0]
fld qword[ebp-0x90]
fdivrp st(2)
fsubrp st(1)
fsub qword[ebp-0xa8]
fsub qword[0x477928]
fadd qword[ebp-0x90]
fstp qword[ebp-0xa0]
jmp off.b2768
fstp st(0)
cmp dword[ebp-0x94], ebx
jge off.b2811
cmp dword[ebp-0x28], 0x10
mov eax, dword[ebp-0x3c]
jae off.b2788
lea eax, [ebp-0x3c]
push eax
push dword[ebp-0x94]
push dword[0x47e6b8]
push 1
call fcn.0043f1ab
add esp, 0x10
fld qword[0x4779a8]
fstp qword[ebp-0xc0]
fld qword[0x4779a0]
fstp qword[ebp-0xa0]
fld qword[0x4779d0]
fstp qword[ebp-0x90]
fld qword[0x477998]
fstp qword[ebp-0xa8]
fld qword[ebp-0x90]
fmul qword[ebp-0x90]
fld qword[ebp-0x90]
fsub qword[0x4779c8]
faddp st(1)
fld qword[ebp-0xa8]
fmul qword[ebp-0xa8]
fsubp st(1)
fsub qword[0x477990]
fstp qword[ebp-0xa8]
fld qword[ebp-0xa8]
fcomp qword[ebp-0x90]
fnstsw ax
test ah, 0x41
jp off.b2948
fld qword[ebp-0x90]
fmul qword[ebp-0xa0]
fstp qword[ebp-0xa8]
or dword[ebp-4], 0xffffffff
push 1
xor edi, edi
lea esi, [ebp-0x3c]
call fcn.00404e30
cmp dword[ebp-0x94], ebx
jge off.b2979
xor eax, eax
jmp off.b3733
mov edi, dword[ebp-0xac]
lea ecx, [edi+0x14]
push ecx
lea esi, [edi+0x10]
mov eax, dword[esi]
mov edx, dword[eax]
push 0x45b410
push eax
call dword[edx]
cmp eax, ebx
jge off.b3044
push eax
push dword[0x47e6bc]
push 1
call fcn.0043f1ab
mov dword[ebp-0xac], 0x54
add esp, 0xc
add dword[ebp-0xac], 0x13
jmp off.b2972
mov eax, dword[esi]
mov ecx, dword[eax]
push edi
push eax
call dword[ecx+0xc]
cmp eax, ebx
jge off.b3224
push eax
push dword[0x47e6c0]
push 1
call fcn.0043f1ab
fld qword[0x4779a8]
fstp qword[ebp-0xc0]
add esp, 0xc
fld qword[0x4779a0]
fstp qword[ebp-0xa8]
fld qword[0x4779d0]
fstp qword[ebp-0xb0]
fld qword[0x477998]
fstp qword[ebp-0x90]
fld qword[ebp-0xb0]
fmul qword[ebp-0xb0]
fld qword[ebp-0xb0]
fsub qword[0x4779c8]
faddp st(1)
fld qword[ebp-0x90]
fmul qword[ebp-0x90]
fsubp st(1)
fsub qword[0x477990]
fstp qword[ebp-0x90]
fld qword[ebp-0x90]
fcomp qword[ebp-0xb0]
fnstsw ax
test ah, 0x41
jp off.b2972
fld qword[ebp-0xb0]
fmul qword[ebp-0xa8]
fstp qword[ebp-0x90]
jmp off.b2972
mov eax, dword[edi+0x14]
mov ecx, dword[eax]
push eax
call dword[ecx+0xc]
fldz
fstp qword[ebp-0xc0]
mov ecx, eax
fld qword[0x477948]
fstp qword[ebp-0xb0]
fld qword[0x477940]
fst qword[ebp-0xa8]
fld qword[0x477938]
fstp qword[ebp-0x90]
fld qword[0x477930]
fstp qword[ebp-0xc0]
fld qword[ebp-0xb0]
fld qword[ebp-0xb0]
fucompp
fnstsw ax
test ah, 0x44
jp off.b3378
fld qword[ebp-0x90]
fsub qword[0x477978]
fsub qword[ebp-0xa8]
fsub qword[ebp-0x90]
fsub qword[ebp-0xa8]
fld qword[ebp-0xb0]
fdivrp st(2)
fsubrp st(1)
fsub qword[ebp-0x90]
fsub qword[0x477928]
fadd qword[ebp-0xb0]
fstp qword[ebp-0xa8]
jmp off.b3380
fstp st(0)
cmp ecx, ebx
jge off.b3704
push ecx
push dword[0x47e6c4]
push 1
call fcn.0043f1ab
mov dword[ebp-0x94], 0x2c
mov dword[ebp-0x9c], 0x62
mov eax, dword[ebp-0x9c]
mov ecx, dword[ebp-0x9c]
sub eax, ecx
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0x9c]
mov ecx, dword[ebp-0x94]
imul eax, ecx
mov ecx, dword[ebp-0x9c]
imul eax, eax, 0x51
imul ecx, ecx, 0xffffffba
sub ecx, eax
mov eax, dword[ebp-0x94]
imul eax, eax, 0x35
add ecx, eax
mov eax, dword[ebp-0x9c]
sub ecx, eax
mov eax, dword[ebp-0x94]
lea eax, [ecx+eax-0x20]
mov dword[ebp-0x94], eax
mov eax, dword[ebp-0x9c]
mov ecx, dword[ebp-0x94]
imul eax, eax, 0x2e
sub ecx, eax
mov eax, dword[ebp-0x94]
sub ecx, eax
add ecx, dword[ebp-0x94]
add esp, 0xc
mov dword[ebp-0x9c], ecx
mov eax, dword[ebp-0x9c]
sub eax, 0x52
mov dword[ebp-0x94], eax
mov eax, dword[ebp-0x94]
mov ecx, dword[ebp-0x9c]
lea eax, [ecx+eax+0x32]
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0x9c]
push 0x3f
pop ecx
sub ecx, eax
mov eax, dword[ebp-0x9c]
sub ecx, eax
add ecx, dword[ebp-0x94]
push 0x25
add ecx, dword[ebp-0x94]
mov dword[ebp-0x94], ecx
mov eax, dword[ebp-0x94]
mov ecx, dword[ebp-0x94]
imul eax, ecx
mov ecx, dword[ebp-0x94]
imul eax, eax, 0x3e
sub eax, ecx
mov ecx, dword[ebp-0x9c]
sub eax, ecx
add eax, dword[ebp-0x94]
pop ecx
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0x94]
cdq
idiv ecx
mov ecx, dword[ebp-0x94]
sub eax, ecx
mov dword[ebp-0x9c], eax
add dword[ebp-0x9c], 0xffffffb1
jmp off.b2972
cmp dword[edi+0xc], ebx
je off.b3720
mov edi, dword[edi+0xc]
push dword[esi]
mov eax, dword[edi]
mov ecx, edi
call dword[eax]
mov esi, dword[esi]
mov eax, dword[esi]
push 2
push esi
call dword[eax+0x14]
xor eax, eax
inc eax
call fcn.00453bcc
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/96a869ae624ddb4834a1d5a829f85469