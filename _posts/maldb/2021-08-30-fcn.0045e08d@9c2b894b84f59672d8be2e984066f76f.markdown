---
layout: post
title:  "fcn.0045e08d @ 9c2b894b84f59672d8be2e984066f76f"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0045e08d
- **Origin (md5):** 9c2b894b84f59672d8be2e984066f76f
- **VirusTotal:** [virustotal.com/gui/file/9c2b894b84f59672d8be2e984066f76f][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.0045e08d@9c2b894b84f59672d8be2e984066f76f">fcn.0045e08d</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push 0x118
mov eax, 0x578464
call fcn.00553908
mov edi, ecx
mov dword[ebp-0x90], edi
lea eax, [ebp-0xec]
push eax
lea eax, [ebp-0xfc]
push eax
lea eax, [ebp-0xdc]
push eax
push dword[ebp+8]
call fcn.0046d6c8
lea eax, [ebp-0xe4]
push eax
lea eax, [ebp-0xf4]
push eax
lea eax, [ebp-0xac]
push eax
push dword[ebp+0xc]
call fcn.0046d6c8
fld qword[ebp-0xac]
fsub qword[ebp-0xdc]
push 0x20
pop esi
fstp qword[ebp-0xc4]
fld qword[ebp-0xe4]
fsub qword[ebp-0xec]
fstp qword[ebp-0xd4]
fld qword[ebp-0xf4]
fsub qword[ebp-0xfc]
fstp qword[ebp-0xcc]
cmp dword[edi+8], esi
jne off.b545
lea eax, [ebp-0x64]
push eax
push 0x54
push dword[edi+0x8c]
call dword[sym.imp.GDI32.dll_GetObjectW]
test eax, eax
je off.b1321
cmp word[ebp-0x52], si
jne off.b1321
mov esi, dword[ebp-0x50]
test esi, esi
je off.b1321
mov ecx, dword[ebp-0x5c]
xor edi, edi
mov edx, dword[ebp-0x60]
mov eax, ecx
imul eax, edx
test eax, eax
jle off.b1321
add esi, 2
cmp byte[esi+1], 0
je off.b523
movzx ecx, byte[esi-2]
lea eax, [ebp-0x94]
push eax
lea eax, [ebp-0x9c]
shl ecx, 8
push eax
lea eax, [ebp-0xa4]
push eax
movzx eax, byte[esi-1]
or ecx, eax
movzx eax, byte[esi]
shl ecx, 8
or ecx, eax
push ecx
call fcn.0046d6c8
fld qword[ebp-0xa4]
fadd qword[ebp-0xc4]
fld1
fcom st(1)
fnstsw ax
fldz
test ah, 5
jnp off.b316
fcom st(2)
fnstsw ax
test ah, 0x41
jne off.b316
fstp st(2)
fld st(1)
jmp off.b337
fxch st(1)
fcom st(2)
fnstsw ax
test ah, 5
jp off.b373
fstp st(2)
fld st(1)
fxch st(1)
fxch st(2)
fxch st(1)
fld qword[ebp-0x9c]
fadd qword[ebp-0xcc]
fcom st(2)
fnstsw ax
test ah, 0x41
je off.b379
fcom st(3)
fnstsw ax
test ah, 5
jp off.b379
fstp st(0)
fld st(2)
jmp off.b392
fxch st(1)
fxch st(2)
jmp off.b337
fcom st(2)
fnstsw ax
test ah, 0x41
jne off.b392
fstp st(0)
fld st(1)
fld qword[ebp-0x94]
fld st(0)
fadd qword[ebp-0xd4]
fcom st(4)
fnstsw ax
test ah, 0x41
je off.b430
fcom st(5)
fnstsw ax
test ah, 5
jp off.b430
fstp st(4)
fstp st(3)
jmp off.b449
fstp st(5)
fxch st(3)
fcom st(4)
fnstsw ax
test ah, 5
jp off.b447
fstp st(4)
jmp off.b449
fstp st(0)
fld qword[0x5b9908]
fcomp qword[ebp-0xac]
fnstsw ax
test ah, 5
jp off.b472
fstp st(3)
jmp off.b480
fstp st(2)
fxch st(1)
fxch st(2)
fxch st(1)
sub esp, 0x18
fxch st(2)
fstp qword[esp+0x10]
fstp qword[esp+8]
fstp qword[esp]
call fcn.0046c6a8
mov ecx, eax
mov byte[esi], al
shr ecx, 8
shr eax, 0x10
mov byte[esi-1], cl
mov byte[esi-2], al
mov ecx, dword[ebp-0x5c]
mov edx, dword[ebp-0x60]
mov eax, ecx
inc edi
imul eax, edx
add esi, 4
cmp edi, eax
jl off.b218
jmp off.b1321
lea ecx, [ebp-0x8c]
call fcn.004119b2
and dword[ebp-4], 0
push 0
call dword[sym.imp.GDI32.dll_CreateCompatibleDC]
push eax
lea ecx, [ebp-0x8c]
call fcn.004122af
lea eax, [ebp-0x124]
push eax
push 0x18
push dword[edi+0x8c]
call dword[sym.imp.GDI32.dll_GetObjectW]
test eax, eax
je off.b1310
mov eax, dword[edi+0x8c]
test eax, eax
je off.b639
push eax
push dword[ebp-0x88]
call dword[sym.imp.GDI32.dll_SelectObject]
mov esi, eax
mov dword[ebp-0x74], eax
jmp off.b644
xor esi, esi
mov dword[ebp-0x74], esi
test esi, esi
je off.b1310
mov ecx, dword[ebp-0x11c]
mov eax, dword[ebp-0x120]
push ecx
push eax
push dword[ebp-0x88]
mov dword[ebp-0x68], eax
mov dword[ebp-0x78], ecx
call dword[sym.imp.GDI32.dll_CreateCompatibleBitmap]
mov ebx, eax
mov dword[ebp-0x98], ebx
test ebx, ebx
jne off.b714
push esi
push dword[ebp-0x88]
call dword[sym.imp.GDI32.dll_SelectObject]
jmp off.b1310
lea ecx, [ebp-0xbc]
call fcn.004119b2
push dword[ebp-0x88]
mov byte[ebp-4], 1
call dword[sym.imp.GDI32.dll_CreateCompatibleDC]
push eax
lea ecx, [ebp-0xbc]
call fcn.004122af
push ebx
push dword[ebp-0xb8]
call dword[sym.imp.GDI32.dll_SelectObject]
mov dword[ebp-0xa0], eax
test eax, eax
jne off.b801
push esi
push dword[ebp-0x88]
call dword[sym.imp.GDI32.dll_SelectObject]
push ebx
call dword[sym.imp.GDI32.dll_DeleteObject]
jmp off.b1299
push 0xcc0020
xor eax, eax
push eax
push eax
push dword[ebp-0x88]
push dword[ebp-0x78]
push dword[ebp-0x68]
push eax
push eax
push dword[ebp-0xb8]
call dword[sym.imp.GDI32.dll_BitBlt]
mov ecx, dword[edi+0xa8]
mov dword[ebp-0x70], ecx
cmp ecx, 0xffffffff
jne off.b861
call fcn.00410017
mov eax, dword[eax+0x1c]
mov dword[ebp-0x70], eax
and dword[ebp-0x6c], 0
mov eax, dword[ebp-0x68]
test eax, eax
jle off.b1220
mov edi, dword[ebp-0x6c]
mov esi, dword[ebp-0x78]
xor ebx, ebx
test esi, esi
jle off.b1196
push ebx
push edi
push dword[ebp-0xb8]
call dword[sym.imp.GDI32.dll_GetPixel]
mov dword[ebp-0x6c], eax
cmp eax, dword[ebp-0x70]
je off.b1184
lea ecx, [ebp-0x10c]
push ecx
lea ecx, [ebp-0x104]
push ecx
lea ecx, [ebp-0x7c]
push ecx
push eax
call fcn.0046d6c8
fld qword[ebp-0x7c]
fadd qword[ebp-0xc4]
fld1
fcom st(1)
fnstsw ax
fldz
test ah, 5
jnp off.b979
fcom st(2)
fnstsw ax
test ah, 0x41
jne off.b979
fstp st(2)
fld st(1)
jmp off.b1000
fxch st(1)
fcom st(2)
fnstsw ax
test ah, 5
jp off.b1036
fstp st(2)
fld st(1)
fxch st(1)
fxch st(2)
fxch st(1)
fld qword[ebp-0x104]
fadd qword[ebp-0xcc]
fcom st(2)
fnstsw ax
test ah, 0x41
je off.b1042
fcom st(3)
fnstsw ax
test ah, 5
jp off.b1042
fstp st(0)
fld st(2)
jmp off.b1055
fxch st(1)
fxch st(2)
jmp off.b1000
fcom st(2)
fnstsw ax
test ah, 0x41
jne off.b1055
fstp st(0)
fld st(1)
fld qword[ebp-0x10c]
fld st(0)
fadd qword[ebp-0xd4]
fcom st(4)
fnstsw ax
test ah, 0x41
je off.b1093
fcom st(5)
fnstsw ax
test ah, 5
jp off.b1093
fstp st(0)
fstp st(3)
jmp off.b1112
fstp st(5)
fxch st(3)
fcom st(4)
fnstsw ax
test ah, 5
jp off.b1110
fstp st(4)
jmp off.b1112
fstp st(0)
fld qword[0x5b9908]
fcomp qword[ebp-0xac]
fnstsw ax
test ah, 5
jp off.b1135
fstp st(3)
jmp off.b1143
fstp st(2)
fxch st(1)
fxch st(2)
fxch st(1)
sub esp, 0x18
fxch st(2)
fstp qword[esp+0x10]
fstp qword[esp+8]
fstp qword[esp]
call fcn.0046c6a8
cmp dword[ebp-0x6c], eax
je off.b1184
push eax
push ebx
push edi
push dword[ebp-0xb8]
call dword[sym.imp.GDI32.dll_SetPixel]
inc ebx
cmp ebx, esi
jl off.b892
mov eax, dword[ebp-0x68]
inc edi
cmp edi, eax
jl off.b882
mov edi, dword[ebp-0x90]
mov esi, dword[ebp-0x74]
mov ebx, dword[ebp-0x98]
push dword[ebp-0xa0]
push dword[ebp-0xb8]
call dword[sym.imp.GDI32.dll_SelectObject]
push esi
push dword[ebp-0x88]
call dword[sym.imp.GDI32.dll_SelectObject]
push dword[edi+0x8c]
call dword[sym.imp.GDI32.dll_DeleteObject]
lea esi, [edi+0x90]
mov dword[edi+0x8c], ebx
push esi
call fcn.00431269
and dword[esi], 0
lea esi, [edi+0x94]
push esi
call fcn.00431269
and dword[esi], 0
lea ecx, [ebp-0xbc]
call fcn.00411b08
lea ecx, [ebp-0x8c]
call fcn.00411b08
call fcn.005538b2
ret 8

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/9c2b894b84f59672d8be2e984066f76f