---
layout: post
title:  "fcn.004213ec @ f5b8476c36459986b226c45654aeb016"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.004213ec
- **Origin (md5):** f5b8476c36459986b226c45654aeb016
- **VirusTotal:** [virustotal.com/gui/file/f5b8476c36459986b226c45654aeb016][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-60.620811462402344, -49.616111755371094, '<b><a href="/report/fcn.004213ec@f5b8476c36459986b226c45654aeb016">fcn.004213ec</a><br>@f5b8476c36459986b226c45654aeb016</b><br>', 'point { fill-color: #e0440e; }'],
[206.178466796875, 34.10236358642578, '<b><a href="/report/fcn.0058cd66@c60344b51fa39a329b92557d24ff7670">fcn.0058cd66</a><br>@c60344b51fa39a329b92557d24ff7670</b><br>', 'null'],
[-205.48899841308594, 48.23881912231445, '<b><a href="/report/fcn.0048a28f@289859175c221b107317af7727d26c17">fcn.0048a28f</a><br>@289859175c221b107317af7727d26c17</b><br>', 'null'],
[-109.24462890625, 146.3257598876953, '<b><a href="/report/fcn.004094c5@6c5b0418e4a4c57d99cda47d2717045d">fcn.004094c5</a><br>@6c5b0418e4a4c57d99cda47d2717045d</b><br>', 'null'],
[-297.6864318847656, 135.3478240966797, '<b><a href="/report/fcn.00575f48@c60344b51fa39a329b92557d24ff7670">fcn.00575f48</a><br>@c60344b51fa39a329b92557d24ff7670</b><br>', 'null'],
[305.0126037597656, 86.16638946533203, '<b><a href="/report/fcn.00438ee5@9964b63070116cfb2469e51850178af1">fcn.00438ee5</a><br>@9964b63070116cfb2469e51850178af1</b><br>', 'null'],
[-188.1263885498047, -85.82343292236328, '<b><a href="/report/fcn.0041fd5c@b8b9cf6862b0d68d10750002e5baaf97">fcn.0041fd5c</a><br>@b8b9cf6862b0d68d10750002e5baaf97</b><br>', 'null'],
[-333.64959716796875, -4.858015537261963, '<b><a href="/report/fcn.101109f6@89dc67d2f980e8488f97b1bf8cb24258">fcn.101109f6</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>', 'null'],
[-268.306640625, -183.6588134765625, '<b><a href="/report/fcn.0041fd5c@146b14fc12cf789043a79d4f548a23bf">fcn.0041fd5c</a><br>@146b14fc12cf789043a79d4f548a23bf</b><br>', 'null'],
[-107.98603820800781, -192.02842712402344, '<b><a href="/report/fcn.0041fd5c@3d7f25d788af3e7f7707a736ac852465">fcn.0041fd5c</a><br>@3d7f25d788af3e7f7707a736ac852465</b><br>', 'null'],
[198.63980102539062, 175.08262634277344, '<b><a href="/report/fcn.004290be@de21a548b66aa6c0b17491b6a31e14fa">fcn.004290be</a><br>@de21a548b66aa6c0b17491b6a31e14fa</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

mov edi, edi
push ebp
mov ebp, esp
sub esp, 0x1c
mov edx, dword[ebp+0x10]
push esi
mov esi, dword[ebp+8]
push 0xfffffffffffffffe
pop eax
mov dword[ebp-0x14], eax
mov dword[ebp-0x1c], edx
cmp esi, eax
jne 0x421423
call fcn.0041619a
and dword[eax], 0
call fcn.00416187
mov dword[eax], 9
or eax, 0xffffffff
jmp 0x4219a0
push ebx
xor ebx, ebx
cmp esi, ebx
jl 0x421432
cmp esi, dword[0x482808]
jb 0x421451
call fcn.0041619a
mov dword[eax], ebx
call fcn.00416187
mov dword[eax], 9
call fcn.00416135
or eax, 0xffffffff
jmp 0x42199f
mov eax, esi
sar eax, 5
push edi
and esi, 0x1f
lea edi, [eax*4+0x482820]
mov eax, dword[edi]
shl esi, 6
mov cl, byte[eax+esi+4]
test cl, 1
jne 0x421483
call fcn.0041619a
mov dword[eax], ebx
call fcn.00416187
mov dword[eax], 9
jmp 0x4214eb
cmp edx, 0x7fffffff
ja 0x4214d9
mov dword[ebp-0xc], ebx
cmp edx, ebx
je 0x42199c
test cl, 2
jne 0x42199c
cmp dword[ebp+0xc], ebx
je 0x4214d9
mov al, byte[eax+esi+0x24]
add al, al
sar al, 1
mov byte[ebp-2], al
movsx eax, al
dec eax
push 4
pop ecx
je 0x4214d1
dec eax
jne 0x4214c9
mov eax, edx
not eax
test al, 1
je 0x4214d9
and edx, 0xfffffffe
mov dword[ebp+0x10], edx
mov ebx, dword[ebp+0xc]
mov dword[ebp-0x10], ebx
jmp 0x42154b
mov eax, edx
not eax
test al, 1
jne 0x4214f2
call fcn.0041619a
mov dword[eax], ebx
call fcn.00416187
mov dword[eax], 0x16
call fcn.00416135
jmp 0x421528
mov eax, edx
shr eax, 1
mov dword[ebp+0x10], ecx
cmp eax, ecx
jb 0x421500
mov dword[ebp+0x10], eax
push dword[ebp+0x10]
call fcn.00415aa2
mov ebx, eax
pop ecx
mov dword[ebp-0x10], ebx
test ebx, ebx
jne 0x421530
call fcn.00416187
mov dword[eax], 0xc
call fcn.0041619a
mov dword[eax], 8
or eax, 0xffffffff
jmp 0x42199e
push 1
push 0
push 0
push dword[ebp+8]
call fcn.0041d6a2
mov ecx, dword[edi]
mov dword[esi+ecx+0x28], eax
add esp, 0x10
mov dword[esi+ecx+0x2c], edx
mov ecx, dword[edi]
add ecx, esi
test byte[ecx+4], 0x48
mov eax, ebx
je 0x4215d1
mov cl, byte[ecx+5]
cmp cl, 0xa
je 0x4215d1
cmp dword[ebp+0x10], 0
je 0x4215d1
dec dword[ebp+0x10]
cmp byte[ebp-2], 0
mov byte[ebx], cl
mov ecx, dword[edi]
lea eax, [ebx+1]
mov dword[ebp-0xc], 1
mov byte[esi+ecx+5], 0xa
je 0x4215d1
mov ecx, dword[edi]
mov cl, byte[esi+ecx+0x25]
cmp cl, 0xa
je 0x4215d1
cmp dword[ebp+0x10], 0
je 0x4215d1
mov byte[eax], cl
mov ecx, dword[edi]
inc eax
dec dword[ebp+0x10]
cmp byte[ebp-2], 1
mov dword[ebp-0xc], 2
mov byte[esi+ecx+0x25], 0xa
jne 0x4215d1
mov ecx, dword[edi]
mov cl, byte[esi+ecx+0x26]
cmp cl, 0xa
je 0x4215d1
cmp dword[ebp+0x10], 0
je 0x4215d1
mov byte[eax], cl
mov ecx, dword[edi]
inc eax
dec dword[ebp+0x10]
mov dword[ebp-0xc], 3
mov byte[esi+ecx+0x26], 0xa
push 0
lea ecx, [ebp-0x18]
push ecx
push dword[ebp+0x10]
push eax
mov eax, dword[edi]
push dword[esi+eax]
call dword[sym.imp.KERNEL32.dll_ReadFile]
test eax, eax
je 0x421966
mov ecx, dword[ebp-0x18]
test ecx, ecx
js 0x421966
cmp ecx, dword[ebp+0x10]
ja 0x421966
mov eax, dword[edi]
add dword[ebp-0xc], ecx
lea eax, [esi+eax+4]
test byte[eax], 0x80
je 0x4217f8
cmp byte[ebp-2], 2
je 0x421832
test ecx, ecx
je 0x42162c
cmp byte[ebx], 0xa
jne 0x42162c
or byte[eax], 4
jmp 0x42162f
and byte[eax], 0xfb
mov ebx, dword[ebp-0x10]
mov eax, dword[ebp-0xc]
add eax, ebx
mov dword[ebp+0x10], ebx
mov dword[ebp-0xc], eax
cmp ebx, eax
jae 0x421716
mov ecx, dword[ebp+0x10]
mov al, byte[ecx]
cmp al, 0x1a
je 0x421701
cmp al, 0xd
je 0x421662
mov byte[ebx], al
inc ebx
inc ecx
mov dword[ebp+0x10], ecx
jmp 0x4216f3
mov eax, dword[ebp-0xc]
dec eax
cmp ecx, eax
jae 0x421682
lea eax, [ecx+1]
cmp byte[eax], 0xa
jne 0x42167d
add ecx, 2
mov dword[ebp+0x10], ecx
mov byte[ebx], 0xa
jmp 0x4216f2
mov dword[ebp+0x10], eax
jmp 0x4216ef
inc dword[ebp+0x10]
push 0
lea eax, [ebp-0x18]
push eax
push 1
lea eax, [ebp-1]
push eax
mov eax, dword[edi]
push dword[esi+eax]
call dword[sym.imp.KERNEL32.dll_ReadFile]
test eax, eax
jne 0x4216aa
call dword[sym.imp.KERNEL32.dll_GetLastError]
test eax, eax
jne 0x4216ef
cmp dword[ebp-0x18], 0
je 0x4216ef
mov eax, dword[edi]
test byte[esi+eax+4], 0x48
je 0x4216cd
cmp byte[ebp-1], 0xa
je 0x421678
mov byte[ebx], 0xd
mov eax, dword[edi]
mov cl, byte[ebp-1]
mov byte[esi+eax+5], cl
jmp 0x4216f2
cmp ebx, dword[ebp-0x10]
jne 0x4216d8
cmp byte[ebp-1], 0xa
je 0x421678
push 1
push 0xffffffffffffffff
push 0xffffffffffffffff
push dword[ebp+8]
call fcn.0041d6a2
add esp, 0x10
cmp byte[ebp-1], 0xa
je 0x4216f3
mov byte[ebx], 0xd
inc ebx
mov eax, dword[ebp-0xc]
cmp dword[ebp+0x10], eax
jb 0x421645
jmp 0x421716
mov eax, dword[edi]
lea eax, [esi+eax+4]
test byte[eax], 0x40
jne 0x421711
or byte[eax], 2
jmp 0x421716
mov al, byte[ecx]
mov byte[ebx], al
inc ebx
mov eax, ebx
sub eax, dword[ebp-0x10]
cmp byte[ebp-2], 1
mov dword[ebp-0xc], eax
jne 0x4217f8
test eax, eax
je 0x4217f8
dec ebx
mov cl, byte[ebx]
test cl, cl
js 0x42173d
inc ebx
jmp 0x4217c3
xor eax, eax
inc eax
movzx ecx, cl
jmp 0x421754
cmp eax, 4
jg 0x42175d
cmp ebx, dword[ebp-0x10]
jb 0x42175d
dec ebx
movzx ecx, byte[ebx]
inc eax
cmp byte[ecx+0x47ee20], 0
je 0x421745
mov dl, byte[ebx]
movzx ecx, dl
movsx ecx, byte[ecx+0x47ee20]
test ecx, ecx
jne 0x42177a
call fcn.00416187
mov dword[eax], 0x2a
jmp 0x4217f4
inc ecx
cmp ecx, eax
jne 0x421783
add ebx, eax
jmp 0x4217c3
mov ecx, dword[edi]
test byte[ecx+esi+4], 0x48
je 0x4217b1
inc ebx
mov byte[ecx+esi+5], dl
cmp eax, 2
jl 0x42179f
mov dl, byte[ebx]
mov ecx, dword[edi]
mov byte[esi+ecx+0x25], dl
inc ebx
cmp eax, 3
jne 0x4217ad
mov dl, byte[ebx]
mov ecx, dword[edi]
mov byte[esi+ecx+0x26], dl
inc ebx
sub ebx, eax
jmp 0x4217c3
neg eax
cdq
push 1
push edx
push eax
push dword[ebp+8]
call fcn.0041d6a2
add esp, 0x10
mov eax, dword[ebp-0x1c]
sub ebx, dword[ebp-0x10]
shr eax, 1
push eax
push dword[ebp+0xc]
push ebx
push dword[ebp-0x10]
push 0
push 0xfde9
call dword[sym.imp.KERNEL32.dll_MultiByteToWideChar]
mov dword[ebp-0xc], eax
test eax, eax
jne 0x42181b
call dword[sym.imp.KERNEL32.dll_GetLastError]
push eax
call fcn.004161ad
pop ecx
or dword[ebp-0x14], 0xffffffff
mov eax, dword[ebp-0x10]
cmp eax, dword[ebp+0xc]
je 0x421807
push eax
call fcn.0041436c
pop ecx
mov eax, dword[ebp-0x14]
cmp eax, 0xfffffffe
jne 0x42199e
mov eax, dword[ebp-0xc]
jmp 0x42199e
mov eax, dword[ebp-0xc]
mov edx, dword[edi]
xor ecx, ecx
cmp eax, ebx
setne cl
add eax, eax
mov dword[ebp-0xc], eax
mov dword[esi+edx+0x30], ecx
jmp 0x4217f8
test ecx, ecx
je 0x421841
cmp word[ebx], 0xa
jne 0x421841
or byte[eax], 4
jmp 0x421844
and byte[eax], 0xfb
mov ebx, dword[ebp-0x10]
mov eax, dword[ebp-0xc]
add eax, ebx
mov dword[ebp+0x10], ebx
mov dword[ebp-0xc], eax
cmp ebx, eax
jae 0x42195b
mov eax, dword[ebp+0x10]
movzx ecx, word[eax]
cmp ecx, 0x1a
je 0x421942
cmp ecx, 0xd
je 0x42187f
mov word[ebx], cx
add ebx, 2
add eax, 2
mov dword[ebp+0x10], eax
jmp 0x421934
mov ecx, dword[ebp-0xc]
add ecx, 0xfffffffe
cmp eax, ecx
jae 0x4218a7
lea ecx, [eax+2]
cmp word[ecx], 0xa
jne 0x42189f
add eax, 4
mov dword[ebp+0x10], eax
push 0xa
jmp 0x42192d
mov dword[ebp+0x10], ecx
jmp 0x42192b
add dword[ebp+0x10], 2
push 0
lea eax, [ebp-0x18]
push eax
push 2
lea eax, [ebp-8]
push eax
mov eax, dword[edi]
push dword[esi+eax]
call dword[sym.imp.KERNEL32.dll_ReadFile]
test eax, eax
jne 0x4218d0
call dword[sym.imp.KERNEL32.dll_GetLastError]
test eax, eax
jne 0x42192b
cmp dword[ebp-0x18], 0
je 0x42192b
mov eax, dword[edi]
test byte[esi+eax+4], 0x48
je 0x421907
cmp word[ebp-8], 0xa
je 0x421898
push 0xd
pop eax
mov word[ebx], ax
mov eax, dword[edi]
mov cl, byte[ebp-8]
mov byte[esi+eax+5], cl
mov eax, dword[edi]
mov cl, byte[ebp-7]
mov byte[esi+eax+0x25], cl
mov eax, dword[edi]
mov byte[esi+eax+0x26], 0xa
jmp 0x421931
cmp ebx, dword[ebp-0x10]
jne 0x421913
cmp word[ebp-8], 0xa
je 0x421898
push 1
push 0xffffffffffffffff
push 0xfffffffffffffffe
push dword[ebp+8]
call fcn.0041d6a2
add esp, 0x10
cmp word[ebp-8], 0xa
je 0x421934
push 0xd
pop eax
mov word[ebx], ax
add ebx, 2
mov eax, dword[ebp-0xc]
cmp dword[ebp+0x10], eax
jb 0x42185a
jmp 0x42195b
mov ecx, dword[edi]
lea esi, [esi+ecx+4]
test byte[esi], 0x40
jne 0x421952
or byte[esi], 2
jmp 0x42195b
mov ax, word[eax]
mov word[ebx], ax
add ebx, 2
sub ebx, dword[ebp-0x10]
mov dword[ebp-0xc], ebx
jmp 0x4217f8
call dword[sym.imp.KERNEL32.dll_GetLastError]
push 5
pop esi
cmp eax, esi
jne 0x42198a
call fcn.00416187
mov dword[eax], 9
call fcn.0041619a
mov dword[eax], esi
jmp 0x4217f4
cmp eax, 0x6d
jne 0x4217ed
and dword[ebp-0x14], 0
jmp 0x4217f8
xor eax, eax
pop edi
pop ebx
pop esi
leave
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/f5b8476c36459986b226c45654aeb016