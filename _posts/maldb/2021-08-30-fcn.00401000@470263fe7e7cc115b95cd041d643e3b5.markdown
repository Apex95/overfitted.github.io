---
layout: post
title:  "fcn.00401000 @ 470263fe7e7cc115b95cd041d643e3b5"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00401000
- **Origin (md5):** 470263fe7e7cc115b95cd041d643e3b5
- **VirusTotal:** [virustotal.com/gui/file/470263fe7e7cc115b95cd041d643e3b5][virustotal_ref]

# Code Tags
<span class="tag" id="MEMORY">MEMORY</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-233.3504180908203, 42.368736267089844, '<b><a href="/report/fcn.00401000@470263fe7e7cc115b95cd041d643e3b5">fcn.00401000</a><br>@470263fe7e7cc115b95cd041d643e3b5</b><br>push ebp<br>mov ebp, esp<br>sub esp, 0x1c<br>push ebx<br>push esi<br>mov ebx, edx<br>mov dword[ebp-0x14], ecx<br>push edi<br>push 3<br>pop edi<br>lea eax, [ebx+2]<br>xor esi, esi<br>cdq <br>idiv edi<br>mov eax, ebx<br>and dword[ebp-0xc], esi<br>sub eax, edx<br>push 4<br>push 0x3000<br>lea eax, [eax*4+8]<br>cdq <br>idiv edi<br>mov dword[ebp-0x1c], eax<br>lea ecx, [eax+1]<br>push ecx<br>push esi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>mov ecx, eax<br>mov dword[ebp-0x10], ecx<br>test ecx, ecx<br>je 0x401179<br>test ebx, ebx<br>je 0x40116f<br>mov ecx, dword[ebp-0x14]<br>jmp 0x40105c<br>mov ebx, dword[ebp-0x18]<br>mov al, byte[ecx]<br>dec ebx<br>mov byte[ebp+esi-4], al<br>inc esi<br>mov dh, byte[ebp-2]<br>inc ecx<br>mov dl, byte[ebp-3]<br>mov dword[ebp-0x18], ebx<br>mov bl, byte[ebp-4]<br>mov dword[ebp-0x14], ecx<br>cmp esi, edi<br>jne 0x4010d3<br>mov esi, dword[ebp-0x10]<br>mov al, bl<br>shr al, 2<br>mov cl, bl<br>and cl, 3<br>mov byte[ebp-8], al<br>shl cl, 4<br>mov al, dl<br>shr al, 4<br>add cl, al<br>mov al, dh<br>mov byte[ebp-7], cl<br>mov cl, dl<br>and cl, 0xf<br>shr al, 6<br>shl cl, 2<br>add cl, al<br>mov al, dh<br>and al, 0x3f<br>mov byte[ebp-6], cl<br>mov ecx, dword[ebp-0xc]<br>xor edi, edi<br>mov byte[ebp-5], al<br>movzx eax, byte[ebp+edi-8]<br>mov al, byte[eax+str.ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_]<br>mov byte[esi+ecx], al<br>inc ecx<br>inc edi<br>cmp edi, 4<br>jl 0x4010b3<br>push 3<br>mov dword[ebp-0xc], ecx<br>xor esi, esi<br>mov ecx, dword[ebp-0x14]<br>pop edi<br>cmp dword[ebp-0x18], 0<br>jne 0x401059<br>test esi, esi<br>je 0x40116f<br>cmp esi, edi<br>jge 0x401103<br>mov eax, edi<br>lea ecx, [ebp-4]<br>sub eax, esi<br>add ecx, esi<br>push eax<br>push 0<br>push ecx<br>call fcn.0040de40<br>mov dh, byte[ebp-2]<br>add esp, 0xc<br>mov dl, byte[ebp-3]<br>mov bl, byte[ebp-4]<br>mov ecx, dword[ebp-0xc]<br>mov al, bl<br>shr al, 2<br>and bl, 3<br>mov byte[ebp-8], al<br>mov al, dl<br>shr al, 4<br>and dl, 0xf<br>shl bl, 4<br>add bl, al<br>shl dl, 2<br>mov al, dh<br>mov byte[ebp-7], bl<br>shr al, 6<br>and dh, 0x3f<br>add dl, al<br>mov byte[ebp-5], dh<br>lea eax, [esi+1]<br>mov byte[ebp-6], dl<br>mov edx, dword[ebp-0x10]<br>xor ebx, ebx<br>test eax, eax<br>jle 0x40115a<br>lea edi, [esi+1]<br>movzx eax, byte[ebp+ebx-8]<br>mov al, byte[eax+str.ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_]<br>mov byte[edx+ecx], al<br>inc ecx<br>inc ebx<br>cmp ebx, edi<br>jl 0x401143<br>push 3<br>pop edi<br>cmp esi, edi<br>jge 0x40116f<br>sub edi, esi<br>lea eax, [edx+ecx]<br>push edi<br>push 0x3d<br>push eax<br>call fcn.0040de40<br>add esp, 0xc<br>mov eax, dword[ebp-0x10]<br>mov ecx, dword[ebp-0x1c]<br>mov byte[eax+ecx], 0<br>pop edi<br>pop esi<br>pop ebx<br>mov esp, ebp<br>pop ebp<br>ret <br><eoc> ', 'point { fill-color: #e0440e; }'],
[-89.63294219970703, -254.2457275390625, '<b><a href="/report/fcn.00458b9e@d96761eb00d2d97e2b6f5ffffed0b46a">fcn.00458b9e</a><br>@d96761eb00d2d97e2b6f5ffffed0b46a</b><br>push ebp<br>mov ebp, esp<br>sub esp, 0x1c<br>and dword[ebp-0x10], 0<br>mov eax, ecx<br>and dword[ebp-4], 0<br>lea ecx, [ebp-0x10]<br>push ebx<br>push esi<br>push edi<br>push ecx<br>push ecx<br>lea ecx, [ebp-4]<br>mov dword[ebp-0xc], eax<br>push ecx<br>mov ecx, dword[eax+0xc]<br>xor bl, bl<br>call fcn.00458652<br>mov esi, dword[ebp-4]<br>add esp, 0xc<br>test al, al<br>je 0x458c3d<br>mov eax, dword[ebp-0xc]<br>xor edi, edi<br>mov dword[ebp-8], edi<br>cmp dword[eax+4], edi<br>jbe 0x458c3d<br>mov eax, dword[eax]<br>lea ecx, [ebp-0x1c]<br>push ecx<br>xor bl, bl<br>push dword[eax+edi*4]<br>push 0<br>call dword[sym.imp.ADVAPI32.dll_LookupPrivilegeValueW]<br>test eax, eax<br>je 0x458c3d<br>and dword[ebp-0x14], 0<br>cmp dword[esi], 0<br>jbe 0x458c3d<br>mov edi, dword[ebp-0x14]<br>lea eax, [esi+4]<br>mov dword[ebp-4], eax<br>push 8<br>lea ecx, [ebp-0x1c]<br>push ecx<br>push eax<br>call fcn.004216c4<br>add esp, 0xc<br>test eax, eax<br>jne 0x458c1c<br>mov bl, 1<br>mov eax, dword[ebp-4]<br>inc edi<br>add eax, 0xc<br>mov dword[ebp-4], eax<br>cmp edi, dword[esi]<br>jb 0x458c07<br>mov edi, dword[ebp-8]<br>test bl, bl<br>je 0x458c3d<br>mov eax, dword[ebp-0xc]<br>inc edi<br>mov dword[ebp-8], edi<br>cmp edi, dword[eax+4]<br>jb 0x458bde<br>test esi, esi<br>je 0x458c51<br>push esi<br>push 0<br>call dword[sym.imp.KERNEL32.dll_GetProcessHeap]<br>push eax<br>call dword[sym.imp.KERNEL32.dll_HeapFree]<br>pop edi<br>pop esi<br>mov al, bl<br>pop ebx<br>mov esp, ebp<br>pop ebp<br>ret <br><eoc> ', 'null'],
[206.99412536621094, -110.55477905273438, '<b><a href="/report/fcn.0045e200@418e0921f3a9bd4f5bc0dcc59623b5a1">fcn.0045e200</a><br>@418e0921f3a9bd4f5bc0dcc59623b5a1</b><br>push 0xffffffffffffffff<br>push 0x475b48<br>mov eax, dword<br>push eax<br>sub esp, 0x30<br>push ebx<br>push ebp<br>push esi<br>push edi<br>mov eax, dword[0x4a83f0]<br>xor eax, esp<br>push eax<br>lea eax, [esp+0x44]<br>mov dword<br>mov ebx, ecx<br>lea eax, [esp+0x14]<br>push eax<br>call fcn.0045c640<br>mov ebp, dword[esp+0x14]<br>xor eax, eax<br>mov dword[esp+0x4c], eax<br>cmp ebp, eax<br>je 0x45e310<br>mov dword[esp+0x24], eax<br>or eax, 0xffffffff<br>lea ecx, [esp+0x1c]<br>push ecx<br>mov dword[esp+0x30], eax<br>mov dword[esp+0x34], eax<br>mov eax, 0xfffffffe<br>lea edx, [esp+0x1c]<br>push edx<br>lea ecx, [esp+0x44]<br>mov byte[esp+0x3c], 1<br>mov dword[esp+0x24], eax<br>mov dword[esp+0x28], 0x7fffffff<br>mov dword[esp+0x20], eax<br>call fcn.004160a7<br>mov eax, dword[ebp+8]<br>sub esp, 0x20<br>mov edi, esp<br>mov ecx, 8<br>lea esi, [esp+0x44]<br>push eax<br>rep movsd<br>call fcn.0045df60<br>mov esi, dword[ebx]<br>mov edi, dword[sym.imp.KERNEL32.dll_HeapFree]<br>add esp, 0x24<br>mov dword[ebx], 0<br>mov ebx, dword[sym.imp.KERNEL32.dll_GetProcessHeap]<br>test esi, esi<br>je 0x45e2d3<br>lea eax, [esi+4]<br>or ecx, 0xffffffff<br>lock xadd<br>jne 0x45e2d3<br>mov edx, dword[esi]<br>mov eax, dword[edx]<br>push 0<br>mov ecx, esi<br>call eax<br>push esi<br>push 0<br>call ebx<br>push eax<br>call edi<br>mov dword[esp+0x4c], 0xffffffff<br>lea ecx, [ebp+4]<br>or edx, 0xffffffff<br>lock xadd<br>jne 0x45e2fa<br>mov eax, dword[ebp]<br>mov edx, dword[eax]<br>push 0<br>mov ecx, ebp<br>call edx<br>push ebp<br>push 0<br>call ebx<br>push eax<br>call edi<br>mov al, 1<br>mov ecx, dword[esp+0x44]<br>mov dword<br>pop ecx<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0x3c<br>ret <br>xor al, al<br>mov ecx, dword[esp+0x44]<br>mov dword<br>pop ecx<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0x3c<br>ret <br><eoc> ', 'null'],
[63.276790618896484, 186.05978393554688, '<b><a href="/report/fcn.00438430@4fe6510221c33bf023f6abed461fc13f">fcn.00438430</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>push ebp<br>mov ebp, esp<br>sub esp, 0x460<br>push ebx<br>push esi<br>push edi<br>push eax<br>call dword[sym.imp.GDI32.dll_CreateCompatibleDC]<br>mov esi, eax<br>mov dword[ebp-0x10], esi<br>test esi, esi<br>jne 0x438459<br>lea esp, [ebp-0x46c]<br>pop edi<br>pop esi<br>pop ebx<br>mov esp, ebp<br>pop ebp<br>ret <br>mov eax, dword[ebp+8]<br>xor ecx, ecx<br>push ecx<br>lea edx, [ebp-0x45c]<br>push edx<br>push ecx<br>push ecx<br>push ecx<br>push eax<br>xor ebx, ebx<br>push esi<br>mov byte[ebp-5], bl<br>mov dword[ebp-0x45c], 0x28<br>mov word[ebp-0x44e], cx<br>call dword[sym.imp.GDI32.dll_GetDIBits]<br>test eax, eax<br>je 0x438612<br>mov ax, word[ebp-0x44e]<br>movzx ecx, ax<br>cmp ecx, dword[ebp+0x18]<br>jl 0x438612<br>mov esi, dword[ebp-0x454]<br>mov ecx, dword[ebp+0xc]<br>cmp ax, 0x10<br>mov eax, dword[ebp+0x14]<br>sete dl<br>mov byte[eax], dl<br>mov eax, dword[ebp-0x458]<br>mov edx, dword[ebp+0x10]<br>mov edi, esi<br>imul edi, eax<br>mov dword[ecx], eax<br>lea eax, [edi*4]<br>push eax<br>mov dword[edx], esi<br>mov dword[ebp-0xc], eax<br>call fcn.0048cdd4<br>mov ebx, eax<br>add esp, 4<br>mov dword[ebp-0x1c], ebx<br>test ebx, ebx<br>je 0x43860f<br>cmp word[ebp-0x44e], 8<br>sete al<br>mov byte[ebp-6], al<br>test al, al<br>jne 0x438507<br>mov eax, 0x20<br>mov word[ebp-0x44e], ax<br>mov ecx, dword[ebp+8]<br>neg esi<br>mov dword[ebp-0x454], esi<br>mov esi, dword[ebp-0x10]<br>push ecx<br>push esi<br>call dword[sym.imp.GDI32.dll_SelectObject]<br>push 0<br>lea edx, [ebp-0x45c]<br>push edx<br>mov edx, dword[ebp+8]<br>mov dword[ebp-0x20], eax<br>mov eax, dword[ebp+0x10]<br>mov ecx, dword[eax]<br>push ebx<br>push ecx<br>push 0<br>push edx<br>push esi<br>call dword[sym.imp.GDI32.dll_GetDIBits]<br>test eax, eax<br>je 0x4385fd<br>cmp byte[ebp-6], 0<br>je 0x4385f9<br>mov eax, 0x400<br>call fcn.00494320<br>mov eax, esp<br>push eax<br>push 0x100<br>push 0<br>push esi<br>mov dword[ebp-0x18], eax<br>call dword[sym.imp.GDI32.dll_GetSystemPaletteEntries]<br>mov eax, dword[ebp+0xc]<br>mov eax, dword[eax]<br>mov dword[ebp-0x24], eax<br>and eax, 0x80000003<br>jns 0x438581<br>dec eax<br>or eax, 0xfffffffc<br>inc eax<br>je 0x43858c<br>mov edx, 4<br>sub edx, eax<br>jmp 0x43858e<br>xor edx, edx<br>mov ecx, dword[ebp+0x10]<br>mov eax, dword[ecx]<br>mov esi, dword[ebp-0xc]<br>mov ecx, eax<br>imul ecx, edx<br>add ecx, edi<br>mov dword[ebp-0x14], edx<br>lea ecx, [ecx+ebx-1]<br>lea esi, [esi+ebx-4]<br>test eax, eax<br>jle 0x4385f9<br>mov eax, dword[ebp+0x10]<br>mov eax, dword[eax]<br>mov dword[ebp-0xc], eax<br>sub ecx, edx<br>cmp dword[ebp-0x24], 0<br>jle 0x4385f4<br>mov edx, dword[ebp+0xc]<br>mov edi, dword[edx]<br>movzx eax, byte[ecx]<br>mov edx, dword[ebp-0x18]<br>mov eax, dword[edx+eax*4]<br>mov edx, eax<br>shr edx, 8<br>movzx ebx, al<br>movzx edx, dl<br>shl ebx, 8<br>shr eax, 0x10<br>or edx, ebx<br>movzx eax, al<br>shl edx, 8<br>or edx, eax<br>mov dword[esi], edx<br>sub esi, 4<br>dec ecx<br>dec edi<br>jne 0x4385c1<br>mov ebx, dword[ebp-0x1c]<br>mov edx, dword[ebp-0x14]<br>dec dword[ebp-0xc]<br>jne 0x4385b4<br>mov byte[ebp-5], 1<br>mov eax, dword[ebp-0x20]<br>test eax, eax<br>je 0x43860f<br>mov ecx, dword[ebp-0x10]<br>push eax<br>push ecx<br>call dword[sym.imp.GDI32.dll_SelectObject]<br>mov esi, dword[ebp-0x10]<br>push esi<br>call dword[sym.imp.GDI32.dll_DeleteDC]<br>cmp byte[ebp-5], 0<br>jne 0x43862e<br>test ebx, ebx<br>je 0x43862e<br>push ebx<br>call fcn.0048e3af<br>add esp, 4<br>xor ebx, ebx<br>mov eax, ebx<br>lea esp, [ebp-0x46c]<br>pop edi<br>pop esi<br>pop ebx<br>mov esp, ebp<br>pop ebp<br>ret <br><eoc> ', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
sub esp, 0x1c
push ebx
push esi
mov ebx, edx
mov dword[ebp-0x14], ecx
push edi
push 3
pop edi
lea eax, [ebx+2]
xor esi, esi
cdq
idiv edi
mov eax, ebx
and dword[ebp-0xc], esi
sub eax, edx
push 4
push 0x3000
lea eax, [eax*4+8]
cdq
idiv edi
mov dword[ebp-0x1c], eax
lea ecx, [eax+1]
push ecx
push esi
call dword[sym.imp.KERNEL32.dll_VirtualAlloc]
mov ecx, eax
mov dword[ebp-0x10], ecx
test ecx, ecx
je 0x401179
test ebx, ebx
je 0x40116f
mov ecx, dword[ebp-0x14]
jmp 0x40105c
mov ebx, dword[ebp-0x18]
mov al, byte[ecx]
dec ebx
mov byte[ebp+esi-4], al
inc esi
mov dh, byte[ebp-2]
inc ecx
mov dl, byte[ebp-3]
mov dword[ebp-0x18], ebx
mov bl, byte[ebp-4]
mov dword[ebp-0x14], ecx
cmp esi, edi
jne 0x4010d3
mov esi, dword[ebp-0x10]
mov al, bl
shr al, 2
mov cl, bl
and cl, 3
mov byte[ebp-8], al
shl cl, 4
mov al, dl
shr al, 4
add cl, al
mov al, dh
mov byte[ebp-7], cl
mov cl, dl
and cl, 0xf
shr al, 6
shl cl, 2
add cl, al
mov al, dh
and al, 0x3f
mov byte[ebp-6], cl
mov ecx, dword[ebp-0xc]
xor edi, edi
mov byte[ebp-5], al
movzx eax, byte[ebp+edi-8]
mov al, byte[eax+str.ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_]
mov byte[esi+ecx], al
inc ecx
inc edi
cmp edi, 4
jl 0x4010b3
push 3
mov dword[ebp-0xc], ecx
xor esi, esi
mov ecx, dword[ebp-0x14]
pop edi
cmp dword[ebp-0x18], 0
jne 0x401059
test esi, esi
je 0x40116f
cmp esi, edi
jge 0x401103
mov eax, edi
lea ecx, [ebp-4]
sub eax, esi
add ecx, esi
push eax
push 0
push ecx
call fcn.0040de40
mov dh, byte[ebp-2]
add esp, 0xc
mov dl, byte[ebp-3]
mov bl, byte[ebp-4]
mov ecx, dword[ebp-0xc]
mov al, bl
shr al, 2
and bl, 3
mov byte[ebp-8], al
mov al, dl
shr al, 4
and dl, 0xf
shl bl, 4
add bl, al
shl dl, 2
mov al, dh
mov byte[ebp-7], bl
shr al, 6
and dh, 0x3f
add dl, al
mov byte[ebp-5], dh
lea eax, [esi+1]
mov byte[ebp-6], dl
mov edx, dword[ebp-0x10]
xor ebx, ebx
test eax, eax
jle 0x40115a
lea edi, [esi+1]
movzx eax, byte[ebp+ebx-8]
mov al, byte[eax+str.ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_]
mov byte[edx+ecx], al
inc ecx
inc ebx
cmp ebx, edi
jl 0x401143
push 3
pop edi
cmp esi, edi
jge 0x40116f
sub edi, esi
lea eax, [edx+ecx]
push edi
push 0x3d
push eax
call fcn.0040de40
add esp, 0xc
mov eax, dword[ebp-0x10]
mov ecx, dword[ebp-0x1c]
mov byte[eax+ecx], 0
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/470263fe7e7cc115b95cd041d643e3b5