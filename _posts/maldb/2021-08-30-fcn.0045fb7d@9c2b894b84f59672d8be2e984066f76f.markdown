---
layout: post
title:  "fcn.0045fb7d @ 9c2b894b84f59672d8be2e984066f76f"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0045fb7d
- **Origin (md5):** 9c2b894b84f59672d8be2e984066f76f
- **VirusTotal:** [virustotal.com/gui/file/9c2b894b84f59672d8be2e984066f76f][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-218.08348083496094, 224.606201171875, '<b><a href="/report/fcn.0045fb7d@9c2b894b84f59672d8be2e984066f76f">fcn.0045fb7d</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'point { fill-color: #e0440e; }'],
[-191.70187377929688, 431.6775817871094, '<b><a href="/report/fcn.0042921a@7b00dd8f2abf54a73bfb09681334ff78">fcn.0042921a</a><br>@7b00dd8f2abf54a73bfb09681334ff78</b><br>', 'null'],
[17.616235733032227, 378.5408020019531, '<b><a href="/report/fcn.100ea61b@e5d49e0823e602f2ee948ac39d32c1eb">fcn.100ea61b</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],
[58.88737869262695, 174.5302734375, '<b><a href="/report/fcn.10016d64@481b545f5c18f2fce1caac67ddc419e8">fcn.10016d64</a><br>@481b545f5c18f2fce1caac67ddc419e8</b><br>', 'null'],
[-113.22979736328125, 44.099491119384766, '<b><a href="/report/fcn.10036bba@e5d49e0823e602f2ee948ac39d32c1eb">fcn.10036bba</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push 0xc4
mov eax, 0x5785e7
call fcn.00553908
mov ebx, ecx
mov eax, dword[ebp+8]
mov edx, dword[ebp+0xc]
mov esi, dword[ebp+0x10]
mov dword[ebp-0x80], eax
mov eax, dword[ebp+0x14]
mov dword[ebp-0x7c], edx
mov dword[ebp-0x88], esi
test eax, eax
js 0x4603e5
cmp eax, dword[ebx+4]
jge 0x4603e5
cmp dword[ebp+0x24], 0
je 0x45fbd6
call fcn.00410017
cmp dword[eax+0x1ac], 8
jg 0x45fbd3
xor eax, eax
inc eax
jmp 0x4603e7
mov edx, dword[ebp-0x7c]
mov ecx, dword[ebx+0x68]
lea edi, [ebx+0x6c]
mov eax, dword[ebx+0x64]
add eax, edx
mov dword[ebp-0x1c], esi
mov dword[ebp-0x18], eax
lea eax, [esi+ecx]
mov dword[ebp-0x20], edx
mov dword[ebp-0x14], eax
lea esi, [ebp-0x20]
mov eax, dword[ebx+0x20]
mov ecx, eax
movsd dword
neg ecx
push 0x20
sbb ecx, ecx
not ecx
and ecx, dword[ebp+0x18]
neg eax
movsd dword
sbb eax, eax
mov dword[ebp-0x6c], ecx
not eax
and eax, dword[ebp+0x20]
movsd dword
mov dword[ebp-0x58], eax
movsd dword
xor esi, esi
mov dword[ebp-0x98], esi
pop edi
cmp dword[ebp+0x28], esi
je 0x45fc29
cmp dword[ebp+0x1c], esi
je 0x45fc4e
cmp dword[ebx+0x2c], esi
je 0x45fc4e
cmp dword[ebx+8], edi
jge 0x45fc4e
push dword[ebx+0x8c]
push dword[0x5e0b68]
call dword[sym.imp.GDI32.dll_SelectObject]
mov edx, dword[ebp-0x7c]
mov dword[ebp-0x98], eax
mov eax, dword[ebx+0x20]
xor ecx, ecx
inc ecx
mov dword[ebp-0xa8], eax
cmp dword[ebx+8], edi
jne 0x45fc6b
test eax, eax
je 0x45fc6b
mov dword[ebp-0x5c], ecx
mov dword[ebx+0x20], esi
jmp 0x45fc6e
mov dword[ebp-0x5c], esi
cmp dword[ebx+8], edi
je 0x45fc83
cmp dword[0x5e0b40], esi
jne 0x45fc83
mov ecx, dword[ebx+0xa8]
jmp 0x45fc86
or ecx, 0xffffffff
mov eax, dword[ebx+0x20]
mov dword[ebp-0x68], ecx
mov dword[ebp-0x70], ecx
test eax, eax
jne 0x45fc9b
mov edi, dword[ebp-0x80]
cmp ecx, 0xffffffff
je 0x45fc9e
lea edi, [ebx+0x44]
mov dword[ebp-0x84], edi
test eax, eax
jne 0x45fcb0
mov dword[ebp-0x64], edx
cmp ecx, 0xffffffff
je 0x45fcb3
mov dword[ebp-0x64], esi
test eax, eax
jne 0x45fcc7
cmp ecx, 0xffffffff
jne 0x45fcc7
mov eax, dword[ebp-0x88]
mov dword[ebp-0x60], eax
jmp 0x45fcca
mov dword[ebp-0x60], esi
lea esi, [ebx+0x7c]
mov eax, dword[esi]
mov dword[ebp-0x78], eax
mov eax, dword[ebx+0x80]
push esi
mov dword[ebp-0x74], eax
call dword[sym.imp.USER32.dll_IsRectEmpty]
test eax, eax
je 0x45fceb
mov eax, dword[ebx+0x54]
jmp 0x45fcf0
mov eax, dword[esi+8]
sub eax, dword[esi]
push esi
mov dword[ebp-0x54], eax
call dword[sym.imp.USER32.dll_IsRectEmpty]
test eax, eax
je 0x45fd03
mov eax, dword[ebx+0x58]
jmp 0x45fd09
mov eax, dword[esi+0xc]
sub eax, dword[esi+4]
mov esi, dword[ebp-0x68]
xor edx, edx
mov dword[ebp-0x50], eax
cmp dword[ebx+0x20], edx
jne 0x45fd1f
cmp esi, 0xffffffff
je 0x45ff7e
mov eax, dword[ebx+0x54]
mov ecx, dword[ebx+0x58]
mov dword[ebp-0x20], edx
mov dword[ebp-0x18], eax
mov dword[ebp-0x1c], edx
mov dword[ebp-0x14], ecx
cmp esi, 0xffffffff
je 0x45fd76
call fcn.00410017
cmp esi, dword[eax+0x1c]
je 0x45fd76
push esi
lea ecx, [ebp-0xb0]
call fcn.0041191b
push dword[ebp-0xac]
lea eax, [ebp-0x20]
push eax
push dword[edi+4]
call dword[sym.imp.USER32.dll_FillRect]
lea ecx, [ebp-0xb0]
mov dword[ebp-0xb0], 0x584f04
call fcn.00404d00
jmp 0x45fd93
call fcn.00410017
add eax, 0x98
je 0x45fd85
mov eax, dword[eax+4]
push eax
lea eax, [ebp-0x20]
push eax
push dword[edi+4]
call dword[sym.imp.USER32.dll_FillRect]
mov esi, dword[ebp+0x1c]
test esi, esi
je 0x45fdba
call fcn.00410017
cmp dword[eax+0x1ac], 0x10
jne 0x45fdba
push dword[ebp-0x1c]
push dword[ebp-0x20]
push dword[edi+4]
call dword[sym.imp.GDI32.dll_GetPixel]
mov dword[ebp-0x70], eax
xor edx, edx
mov ecx, edx
mov dword[ebp-0x94], ecx
test esi, esi
je 0x45fddc
cmp dword[ebx+8], 0x18
jl 0x45fddc
xor esi, esi
mov dword[ebp+0x1c], edx
inc esi
mov ecx, esi
mov dword[ebp-0x94], esi
mov esi, dword[ebp+0x24]
test esi, esi
je 0x45fdef
mov eax, dword[ebx+8]
sub eax, 0x20
neg eax
sbb eax, eax
and esi, eax
cmp dword[ebp-0x6c], 0
jne 0x460181
cmp dword[ebp+0x1c], 0
jne 0x460181
test esi, esi
jne 0x460185
push 0x20
pop eax
cmp dword[ebx+8], eax
je 0x45fe1f
cmp dword[0x5e0b40], esi
je 0x46007b
mov al, byte[ebp+0x2c]
mov byte[ebp-0x56], al
xor eax, eax
inc eax
mov word[ebp-0x58], 0
mov byte[ebp-0x55], al
test ecx, ecx
je 0x45fe3d
mov al, byte[0x5d85d4]
mov byte[ebp-0x56], al
cmp dword[ebp+0x28], 0
je 0x45fe50
cmp dword[ebx+0x2c], edx
je 0x45fe50
mov al, byte[0x5d85d5]
mov byte[ebp-0x56], al
mov eax, dword[ebp-0x5c]
neg eax
push 0x20
sbb eax, eax
and eax, 0x10
mov esi, dword[eax+ebx+0x54]
mov eax, dword[eax+ebx+0x58]
mov dword[ebp-0x6c], eax
pop eax
mov dword[ebp-0xa4], esi
cmp dword[ebx+8], eax
je 0x46003d
mov eax, dword[ebp-0x50]
xor esi, esi
mov ecx, dword[ebp-0x54]
inc esi
push 0x20
mov word[ebp-0x40], si
pop esi
push edx
mov word[ebp-0x3e], si
mov esi, eax
push edx
mov dword[ebp-0x44], eax
lea eax, [ebp-0x5c]
push eax
imul esi, ecx
lea eax, [ebp-0x4c]
push edx
push eax
push edx
mov dword[ebp-0x4c], 0x28
mov dword[ebp-0x48], ecx
mov dword[ebp-0x3c], edx
mov dword[ebp-0x38], esi
mov dword[ebp-0x34], edx
mov dword[ebp-0x30], edx
mov dword[ebp-0x2c], edx
mov dword[ebp-0x28], edx
mov dword[ebp-0x5c], edx
call dword[sym.imp.GDI32.dll_CreateDIBSection]
test eax, eax
je 0x4603e5
and dword[ebp-0x9c], 0
mov dword[ebp-0xa0], 0x585684
and dword[ebp-4], 0
lea ecx, [ebp-0xa0]
push eax
call fcn.004122f0
lea ecx, [ebp-0xc0]
call fcn.004119b2
xor eax, eax
inc eax
push 0
mov byte[ebp-4], al
call dword[sym.imp.GDI32.dll_CreateCompatibleDC]
push eax
lea ecx, [ebp-0xc0]
call fcn.004122af
push dword[ebp-0x9c]
push dword[ebp-0xbc]
call fcn.00412959
mov ecx, dword[ebx+0x54]
imul ecx, dword[ebp+0x14]
push 0xcc0020
push dword[ebp-0x74]
mov dword[ebp-0x8c], eax
add ecx, dword[ebp-0x78]
push ecx
push dword[0x5e0b68]
push dword[ebp-0x50]
push dword[ebp-0x54]
push 0
push 0
push dword[ebp-0xbc]
call dword[sym.imp.GDI32.dll_BitBlt]
cmp dword[ebx+0xa8], 0xffffffff
jne 0x45ff86
test esi, esi
jle 0x45ffcd
mov eax, dword[ebp-0x5c]
or dword[eax], 0xff000000
mov eax, dword[ebp-0x5c]
add eax, 4
mov dword[ebp-0x5c], eax
sub esi, 1
jne 0x45ff68
jmp 0x45ffcd
mov esi, dword[ebp+0x1c]
jmp 0x45fdbc
movzx ecx, byte[ebx+0xa8]
movzx eax, byte[ebx+0xa9]
shl ecx, 8
or ecx, eax
movzx eax, byte[ebx+0xaa]
shl ecx, 8
or ecx, eax
test esi, esi
jle 0x45ffcd
mov eax, dword[ebp-0x5c]
mov edx, dword[eax]
cmp edx, ecx
je 0x45ffbc
or edx, 0xff000000
mov dword[eax], edx
jmp 0x45ffbf
and dword[eax], 0
mov eax, dword[ebp-0x5c]
add eax, 4
mov dword[ebp-0x5c], eax
sub esi, 1
jne 0x45ffac
push dword[ebp-0x58]
push dword[ebp-0x50]
push dword[ebp-0x54]
push 0
push 0
push dword[ebp-0xbc]
push dword[ebp-0x6c]
push dword[ebp-0xa4]
push dword[ebp-0x60]
push dword[ebp-0x64]
push dword[edi+4]
call dword[sym.imp.MSIMG32.dll_AlphaBlend]
mov esi, eax
mov eax, dword[ebp-0x8c]
test eax, eax
jne 0x460008
xor ecx, ecx
jmp 0x46000b
mov ecx, dword[eax+4]
push ecx
push dword[ebp-0xbc]
call fcn.00412959
lea ecx, [ebp-0xc0]
call fcn.00411b08
or dword[ebp-4], 0xffffffff
lea ecx, [ebp-0xa0]
mov dword[ebp-0xa0], 0x585684
call fcn.00404d00
jmp 0x460073
push dword[ebp-0x58]
mov eax, dword[ebx+0x54]
push dword[ebp-0x50]
imul eax, dword[ebp+0x14]
push dword[ebp-0x54]
push dword[ebp-0x74]
add eax, dword[ebp-0x78]
push eax
push dword[0x5e0b68]
call fcn.0041252c
push eax
push dword[ebp-0x6c]
mov ecx, edi
push esi
push dword[ebp-0x60]
push dword[ebp-0x64]
call fcn.0045eb50
mov esi, eax
test esi, esi
jne 0x46014f
mov eax, dword[ebx+0x54]
imul eax, dword[ebp+0x14]
mov esi, dword[ebp-0x50]
push 0xcc0020
push dword[ebp-0x74]
add eax, dword[ebp-0x78]
push eax
push dword[0x5e0b68]
push esi
push dword[ebp-0x54]
push dword[ebp-0x60]
push dword[ebp-0x64]
push dword[edi+4]
call dword[sym.imp.GDI32.dll_BitBlt]
cmp dword[ebp-0x94], 0
je 0x460152
push edi
lea ecx, [ebp-0x90]
call fcn.00469bad
cmp dword[ebp-0x70], 0xffffffff
mov dword[ebp-4], 2
jne 0x4600db
call fcn.00410017
mov eax, dword[eax+0x1c]
mov dword[ebp-0x70], eax
call fcn.00437068
mov edx, dword[ebp-0x60]
mov edi, eax
mov eax, dword[ebp-0x54]
mov ecx, dword[ebp-0x64]
add eax, 2
mov dword[ebp-0xd0], ecx
add ecx, eax
mov dword[ebp-0xc8], ecx
lea ecx, [edx+2]
add ecx, esi
mov dword[ebp-0xcc], edx
mov dword[ebp-0xc4], ecx
mov ecx, dword[edi]
mov esi, dword[ecx+0xb8]
mov ecx, esi
call fcn.00553897
mov ecx, edi
call esi
push eax
push dword[ebp-0x70]
lea esi, [ebp-0xd0]
push 0xffffffffffffffff
sub esp, 0x10
lea ecx, [ebp-0x90]
mov edi, esp
movsd dword
movsd dword
movsd dword
movsd dword
call fcn.0046c3a2
or dword[ebp-4], 0xffffffff
lea ecx, [ebp-0x90]
call fcn.00469bc2
mov esi, dword[ebp-0x50]
mov ecx, dword[ebp-0x68]
xor edx, edx
cmp dword[ebx+0x20], edx
je 0x46038d
cmp ecx, 0xffffffff
jne 0x46016f
call fcn.00410017
xor edx, edx
mov ecx, dword[eax+0x1c]
mov eax, dword[ebp-0x80]
test eax, eax
jne 0x460382
mov eax, edx
jmp 0x460385
test esi, esi
je 0x4601de
mov eax, dword[ebx+0x94]
test eax, eax
je 0x4601de
push eax
push dword[0x5e0b68]
call dword[sym.imp.GDI32.dll_SelectObject]
mov ecx, dword[ebx+0x54]
mov esi, eax
imul ecx, dword[ebp+0x14]
push 0xcc0020
push dword[ebp-0x74]
add ecx, dword[ebp-0x78]
push ecx
push dword[0x5e0b68]
push dword[ebp-0x50]
push dword[ebp-0x54]
push dword[ebp-0x60]
push dword[ebp-0x64]
push dword[edi+4]
call dword[sym.imp.GDI32.dll_BitBlt]
push esi
push dword[0x5e0b68]
call dword[sym.imp.GDI32.dll_SelectObject]
jmp 0x46014f
cmp dword[ebp+0x1c], 0
jne 0x4601f3
mov eax, dword[ebp-0x58]
test eax, eax
jne 0x4601f3
test esi, esi
je 0x4602e0
xor eax, eax
mov ecx, ebx
push edx
inc eax
push eax
push dword[ebp+0x14]
call fcn.0045f95e
test esi, esi
je 0x46020e
mov ecx, dword[ebx+0xb0]
jmp 0x460210
xor ecx, ecx
mov eax, dword[edi]
push ecx
mov esi, dword[eax+0x30]
mov ecx, esi
call fcn.00553897
mov ecx, edi
call esi
mov eax, dword[edi]
push 0xffffff
mov esi, dword[eax+0x2c]
mov ecx, esi
call fcn.00553897
mov ecx, edi
call esi
cmp dword[ebp+0x1c], 0
je 0x460294
call fcn.00437068
cmp dword[eax+0x58], 0
je 0x460294
call fcn.00410017
mov ecx, edi
push dword[eax+0x10]
call fcn.00462524
mov esi, eax
test esi, esi
je 0x460294
mov ecx, dword[ebp-0x50]
mov eax, dword[ebp-0x54]
add ecx, 2
push 0xb8074a
push 0
push 0
push dword[0x5e0b6c]
add eax, 2
push ecx
push eax
mov eax, dword[ebp-0x60]
inc eax
push eax
mov eax, dword[ebp-0x64]
inc eax
push eax
push dword[edi+4]
call dword[sym.imp.GDI32.dll_BitBlt]
push esi
mov ecx, edi
call fcn.00462524
call fcn.00410017
mov ecx, edi
push dword[eax+0x14]
call fcn.00462524
mov esi, eax
test esi, esi
je 0x4602dd
mov ecx, dword[ebp-0x50]
mov eax, dword[ebp-0x54]
add ecx, 2
push 0xb8074a
push 0
push 0
push dword[0x5e0b6c]
add eax, 2
push ecx
push eax
push dword[ebp-0x60]
push dword[ebp-0x64]
push dword[edi+4]
call dword[sym.imp.GDI32.dll_BitBlt]
push esi
mov ecx, edi
call fcn.00462524
mov eax, dword[ebp-0x58]
cmp dword[ebp-0x6c], 0
jne 0x4602ee
test eax, eax
je 0x46014f
call fcn.00410017
add eax, 0xa8
mov ecx, edi
push eax
call fcn.004129b8
mov dword[ebp-0x8c], eax
test eax, eax
je 0x46014f
push dword[ebp+0x1c]
xor ecx, ecx
cmp dword[ebp-0x58], ecx
sete cl
push ecx
push dword[ebp+0x14]
mov ecx, ebx
call fcn.0045f95e
mov eax, dword[edi]
push 0
mov esi, dword[eax+0x30]
mov ecx, esi
call fcn.00553897
mov ecx, edi
call esi
mov eax, dword[edi]
push 0xffffff
mov esi, dword[eax+0x2c]
mov ecx, esi
call fcn.00553897
mov ecx, edi
call esi
mov esi, dword[ebp-0x50]
push 0xe20746
push 0
push 0
push dword[0x5e0b6c]
push esi
push dword[ebp-0x54]
push dword[ebp-0x60]
push dword[ebp-0x64]
push dword[edi+4]
call dword[sym.imp.GDI32.dll_BitBlt]
push dword[ebp-0x8c]
mov ecx, edi
call fcn.004129b8
jmp 0x460152
mov eax, dword[eax+4]
push dword[ebx+0x68]
push dword[ebx+0x64]
jmp 0x4603a4
cmp ecx, 0xffffffff
je 0x4603c0
mov eax, dword[ebp-0x80]
test eax, eax
jne 0x46039d
mov eax, edx
jmp 0x4603a0
mov eax, dword[eax+4]
push 0xffffffffffffffff
push 0xffffffffffffffff
push ecx
push edx
push edx
push dword[ebp-0x84]
push esi
push dword[ebp-0x54]
push dword[ebp-0x88]
push dword[ebp-0x7c]
push eax
call fcn.00462c45
mov eax, dword[ebp-0x98]
test eax, eax
je 0x4603d7
push eax
push dword[0x5e0b68]
call dword[sym.imp.GDI32.dll_SelectObject]
mov ecx, dword[ebp-0xa8]
mov dword[ebx+0x20], ecx
jmp 0x45fbcb
xor eax, eax
call fcn.005538b2
ret 0x28

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/9c2b894b84f59672d8be2e984066f76f