---
layout: post
title:  "fcn.005bcbe0 @ a5905e3c253c25bbaf727a1a18fe8ed1"
date:   2021-08-30 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.005bcbe0
- **Origin (md5):** a5905e3c253c25bbaf727a1a18fe8ed1
- **VirusTotal:** [virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1][virustotal_ref]

# Code Tags
<span class="tag" id="THREAD">THREAD</span>


# Similar Functions

1. [fcn.0067de20][similar_1_ref] (sim.: 0.9681669594789578)
2. [fcn.0060ab90][similar_2_ref] (sim.: 0.9642461889928373)
3. [fcn.00607950][similar_3_ref] (sim.: 0.9640629999990667)
4. [fcn.00617220][similar_4_ref] (sim.: 0.9609743244233635)
5. [fcn.005f0650][similar_5_ref] (sim.: 0.9602057004687647)


# Disassembled Code

{% highlight nasm %}
push r15
push r14
push r13
push r12
push rbp
push rdi
push rsi
push rbx
sub rsp,0x88
movzx r12d,byte[rsp+0xf8]
mov rbp,qword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
mov rbx,rcx
mov r15,rdx
mov qword[rsp+0xe0],r8
lea rdi,[rbx+0x3c]
mov qword[rsp+0xe8],r9
call rbp
mov r13d,eax
xor eax,eax
lock cmpxchg dword[rdi],eax
cmp r13d,eax
je 0x5bcf6e
lea rsi,[rbx+0x40]
mov r14d,dword[rbx+0x40]
jmp 0x5bcc43
mov r14d,eax
mov edx,r14d
mov r8d,r14d
mov rcx,rsi
or edx,0x80000000
call fcn.008eebc0
cmp r14d,eax
jne 0x5bcc40
test r14d,r14d
js 0x5bcffa
xchg dword[rdi],r13d
mov dword[rbx+0x38],1
lea rax,[rbx+8]
lea rsi,[rbx+0x20]
lea r14,[0x00937190]
mov rcx,rsi
mov rdx,rax
mov qword[rsp+0x30],rsi
mov qword[rsp+0x28],rax
call fcn.00a21530
mov r13,qword[rbx+0x28]
mov rsi,qword[rbx+0x20]
cmp rsi,r13
jne 0x5bccab
jmp 0x5bccd0
add rsi,8
cmp r13,rsi
je 0x5bccd0
mov rcx,qword[rsi]
mov rax,qword[rcx]
mov rax,qword[rax+0x10]
cmp rax,r14
je 0x5bcca2
add rsi,8
xor edx,edx
call rax
cmp r13,rsi
jne 0x5bccab
nop word[rax+rax]
mov eax,dword[rbx+0x38]
sub eax,1
test eax,eax
mov dword[rbx+0x38],eax
je 0x5bcf80
call fcn.006896a0
lea rsi,[rax+0x7530]
lea rax,[rbx+0x118]
mov dword[rbx+0x168],1
mov r14,rax
call fcn.006896a0
cmp rsi,rax
jbe 0x5bd4a6
test r12b,r12b
mov rcx,qword[rbx+0x160]
je 0x5bcf50
mov r8,qword[rsp+0xe0]
mov r9d,0x7530
mov rdx,r15
call fcn.00672980
mov rax,qword[0x00a7d820]
cmp byte[rax+0x1996],0
je 0x5bcf40
mov r8d,dword[rax+0xae0]
test r8d,r8d
jle 0x5bcd6d
mov rcx,qword[rbx+0x160]
mov edx,0x1002
call fcn.00671490
mov rax,qword[0x00a7d820]
cmp byte[rax+0x1997],0
je 0x5bcf30
mov r8d,dword[rax+0xae4]
test r8d,r8d
jle 0x5bcda0
mov rcx,qword[rbx+0x160]
mov edx,0x1001
call fcn.00671490
nop word[rax+rax]
mov rcx,qword[rbx+0x160]
mov edx,0xfa
mov rax,qword[rcx]
call qword[rax+0x38]
test al,al
je 0x5bcf10
mov rcx,qword[rbx+0x160]
mov edx,0x1002
call fcn.00671a10
mov rcx,qword[rbx+0x118]
mov rdx,qword[rbx+0x120]
cdqe
sub rdx,rcx
cmp rax,rdx
ja 0x5bd0d0
jae 0x5bcdf3
add rax,rcx
mov qword[rbx+0x120],rax
call rbp
mov r12d,eax
xor eax,eax
lock cmpxchg dword[rdi],eax
cmp r12d,eax
je 0x5bcf77
lea rbp,[rbx+0x40]
mov esi,dword[rbx+0x40]
jmp 0x5bce12
mov esi,eax
mov edx,esi
mov r8d,esi
mov rcx,rbp
or edx,0x80000000
call fcn.008eebc0
cmp esi,eax
jne 0x5bce10
test esi,esi
js 0x5bd0f5
xchg dword[rdi],r12d
mov dword[rbx+0x38],1
mov rdx,qword[rsp+0x28]
mov rcx,qword[rsp+0x30]
lea r12,[0x009371a0]
call fcn.00a21530
mov rbp,qword[rbx+0x28]
mov rsi,qword[rbx+0x20]
cmp rsi,rbp
jne 0x5bce69
jmp 0x5bce85
add rsi,8
cmp rbp,rsi
je 0x5bce85
mov rcx,qword[rsi]
mov rax,qword[rcx]
mov rax,qword[rax+0x18]
cmp rax,r12
je 0x5bce60
add rsi,8
xor edx,edx
call rax
cmp rbp,rsi
jne 0x5bce69
mov eax,dword[rbx+0x38]
sub eax,1
test eax,eax
mov dword[rbx+0x38],eax
jne 0x5bcef6
xchg dword[rdi],eax
mov eax,0x80000000
lea rdi,[rbx+0x40]
lock xadd dword[rdi],eax
test eax,0x40000000
jne 0x5bcef6
cmp eax,0x80000000
je 0x5bcef6
mov esi,dword[rbx+0x40]
jmp 0x5bceb6
mov esi,eax
mov edx,esi
mov r8d,esi
mov rcx,rdi
or edx,0x40000000
call fcn.008eebc0
cmp esi,eax
jne 0x5bceb4
and esi,0x40000000
jne 0x5bcef6
add rbx,0x48
xor eax,eax
lock cmpxchg qword[rbx],rax
test rax,rax
mov rsi,rax
mov rcx,rax
je 0x5bd37a
call qword[sym.imp.KERNEL32.dll_SetEvent]
nop
add rsp,0x88
pop rbx
pop rsi
pop rdi
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
call fcn.006896a0
cmp rsi,rax
jb 0x5bcd01
movzx eax,byte[rbx+0x16c]
test al,al
je 0x5bcda0
jmp 0x5bcef6
mov r8d,dword[rax+0x1754]
jmp 0x5bcd81
mov r8d,dword[rax+0x1750]
jmp 0x5bcd50
mov rax,qword[rcx]
mov r9,qword[rsp+0xe8]
mov rdx,r15
mov r8,qword[rsp+0xe0]
call qword[rax+0x10]
jmp 0x5bcd35
add dword[rbx+0x38],1
jmp 0x5bcc6f
add dword[rbx+0x38],1
jmp 0x5bce3b
xchg dword[rdi],eax
mov eax,0x80000000
lea r13,[rbx+0x40]
lock xadd dword[r13],eax
test eax,0x40000000
jne 0x5bcce1
cmp eax,0x80000000
je 0x5bcce1
mov esi,dword[rbx+0x40]
jmp 0x5bcfb2
mov esi,eax
mov edx,esi
mov r8d,esi
mov rcx,r13
or edx,0x40000000
call fcn.008eebc0
cmp esi,eax
jne 0x5bcfb0
and esi,0x40000000
jne 0x5bcce1
lea r10,[rbx+0x48]
xor eax,eax
lock cmpxchg qword[r10],rax
test rax,rax
mov rsi,rax
mov rcx,rax
je 0x5bd1c9
call qword[sym.imp.KERNEL32.dll_SetEvent]
jmp 0x5bcce1
mov edx,dword[rbx+0x40]
jmp 0x5bd002
mov edx,eax
lea eax,[rdx+1]
mov r10d,edx
or r10d,0x80000000
test edx,edx
cmovs r10d,eax
mov eax,edx
lock cmpxchg dword[rsi],r10d
cmp eax,edx
jne 0x5bd000
shr edx,0x1f
test dl,dl
je 0x5bcc65
mov eax,r10d
shr eax,0x1f
test al,al
je 0x5bcc65
lea r11,[rbx+0x48]
xor eax,eax
lock cmpxchg qword[r11],rax
test rax,rax
mov r14,rax
mov r9,rax
je 0x5bd211
mov rax,qword[sym.imp.KERNEL32.dll_WaitForSingleObjectEx]
mov qword[rsp+0x28],rdi
mov r14d,0xffffffff
mov qword[rsp+0xd0],rbx
mov edi,r10d
mov rbx,r9
mov qword[rsp+0x38],rax
and edi,0x7fffffff
xor r8d,r8d
mov edx,r14d
mov rcx,rbx
call rax
mov edx,edi
or edx,0x40000000
test edx,edx
js 0x5bd0b4
lea ecx,[rdx-1]
mov eax,edx
and ecx,0x3fffffff
or ecx,0x80000000
lock cmpxchg dword[rsi],ecx
cmp edx,eax
je 0x5bd0e3
mov edx,eax
test edx,edx
jns 0x5bd095
mov ecx,edx
mov eax,edx
and ecx,0xbfffffff
lock cmpxchg dword[rsi],ecx
cmp eax,edx
jne 0x5bd0ae
mov edi,eax
mov rax,qword[rsp+0x38]
jmp 0x5bd078
sub rax,rdx
mov rcx,r14
mov rdx,rax
call fcn.00a2a8f0
jmp 0x5bcdf3
mov rdi,qword[rsp+0x28]
mov rbx,qword[rsp+0xd0]
jmp 0x5bcc65
mov edx,dword[rbx+0x40]
jmp 0x5bd102
mov edx,eax
lea eax,[rdx+1]
mov r15d,edx
or r15d,0x80000000
test edx,edx
cmovs r15d,eax
mov eax,edx
lock cmpxchg dword[rbp],r15d
cmp eax,edx
jne 0x5bd100
mov eax,r15d
shr eax,0x1f
test al,al
je 0x5bce31
shr edx,0x1f
test dl,dl
je 0x5bce31
lea r10,[rbx+0x48]
xor eax,eax
lock cmpxchg qword[r10],rax
test rax,rax
mov rsi,rax
mov r9,rax
je 0x5bd333
mov rax,qword[sym.imp.KERNEL32.dll_WaitForSingleObjectEx]
mov esi,0xffffffff
mov r13,r9
mov qword[rsp+0x38],rax
and r15d,0x7fffffff
mov edx,esi
xor r8d,r8d
mov rcx,r13
call rax
mov edx,r15d
or edx,0x40000000
jmp 0x5bd1a8
lea ecx,[rdx-1]
mov eax,edx
and ecx,0x3fffffff
or ecx,0x80000000
lock cmpxchg dword[rbp],ecx
cmp eax,edx
mov r15d,eax
je 0x5bce31
mov edx,r15d
test edx,edx
jns 0x5bd184
mov ecx,edx
mov eax,edx
and ecx,0xbfffffff
lock cmpxchg dword[rbp],ecx
cmp eax,edx
mov r15d,eax
jne 0x5bd1a5
mov rax,qword[rsp+0x38]
jmp 0x5bd168
xor ecx,ecx
mov qword[rsp+0x38],r10
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
mov r10,qword[rsp+0x38]
je 0x5bd270
mov rax,rsi
lock cmpxchg qword[r10],rcx
test rax,rax
mov rsi,rax
je 0x5bcfef
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rcx,rsi
jmp 0x5bcfef
xor r9d,r9d
mov dword[rsp+0x30],r10d
mov qword[rsp+0x28],r11
xor r8d,r8d
xor edx,edx
xor ecx,ecx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov r9,rax
mov r11,qword[rsp+0x28]
mov r10d,dword[rsp+0x30]
je 0x5bd2c4
mov rax,r14
lock cmpxchg qword[r11],r9
test rax,rax
mov r14,rax
je 0x5bd053
mov dword[rsp+0x28],r10d
mov rcx,r9
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov r9,r14
mov r10d,dword[rsp+0x28]
jmp 0x5bd053
lea rbx,[rsp+0x40]
call fcn.006ea660
lea rdx,[0x00aa940a]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0x50],0xb
mov qword[rsp+0x58],rsi
mov qword[rsp+0x68],0
mov qword[rsp+0x60],rax
lea rax,[0x00b72480]
mov byte[rsp+0x70],0
mov qword[rsp+0x40],rax
call fcn.00947760
lea rbx,[rsp+0x40]
call fcn.006ea660
lea rdx,[0x00aa940a]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0x50],0xb
mov qword[rsp+0x58],rsi
mov qword[rsp+0x68],0
mov qword[rsp+0x60],rax
lea rax,[0x00b72480]
mov byte[rsp+0x70],0
mov qword[rsp+0x40],rax
call fcn.00947760
lea rax,[0x00b72450]
mov rcx,rbx
mov qword[rsp+0x40],rax
call fcn.00962490
call fcn.00a55e20
jmp 0x5bd318
xor r9d,r9d
mov qword[rsp+0x38],r10
xor r8d,r8d
xor edx,edx
xor ecx,ecx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov r9,rax
mov r10,qword[rsp+0x38]
je 0x5bd3b4
mov rax,rsi
lock cmpxchg qword[r10],r9
test rax,rax
mov rsi,rax
je 0x5bd154
mov rcx,r9
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov r9,rsi
jmp 0x5bd154
xor ecx,ecx
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
je 0x5bd408
mov rax,rsi
lock cmpxchg qword[rbx],rcx
test rax,rax
mov rsi,rax
je 0x5bceef
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rcx,rsi
jmp 0x5bceef
lea rbx,[rsp+0x40]
call fcn.006ea660
lea rdx,[0x00aa940a]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0x50],0xb
mov qword[rsp+0x58],rsi
mov qword[rsp+0x68],0
mov qword[rsp+0x60],rax
lea rax,[0x00b72480]
mov byte[rsp+0x70],0
mov qword[rsp+0x40],rax
call fcn.00947760
lea rbx,[rsp+0x40]
call fcn.006ea660
lea rdx,[0x00aa940a]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0x50],0xb
mov qword[rsp+0x58],rsi
mov qword[rsp+0x68],0
mov qword[rsp+0x60],rax
lea rax,[0x00b72480]
mov byte[rsp+0x70],0
mov qword[rsp+0x40],rax
call fcn.00947760
jmp 0x5bd318
mov ecx,0x28
call fcn.00a5b090
lea rdx,[0x00aa9441]
lea rcx,[0x00aa9454]
mov rsi,rax
call fcn.007502b0
lea rbx,[rsp+0x40]
mov rdx,rax
mov rcx,rbx
call fcn.00a5fcd0
mov rdx,rbx
mov rcx,rsi
add rbx,0x10
call fcn.00940160
mov rcx,qword[rsp+0x40]
lea rax,[0x00b70110]
mov qword[rsi],rax
cmp rcx,rbx
je 0x5bd4fe
call fcn.00a5af30
lea r8,[0x009340a0]
lea rdx,[0x00b49f30]
mov rcx,rsi
call fcn.00a5b6d0
mov rbx,rax
mov rcx,rsi
call fcn.00a5b440
mov rcx,rbx
call fcn.008da260
call fcn.00a5b170
call fcn.00a5b680
mov rbx,rax
call fcn.00a5b390
mov rcx,rbx
call fcn.008da260
call fcn.00a5b680
jmp 0x5bd531
{% endhighlight %}


[similar_1_ref]: /report/fcn.0067de20@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_2_ref]: /report/fcn.0060ab90@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_3_ref]: /report/fcn.00607950@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_4_ref]: /report/fcn.00617220@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_5_ref]: /report/fcn.005f0650@a5905e3c253c25bbaf727a1a18fe8ed1
[virustotal_ref]: https://www.virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1