---
layout: post
title:  "fcn.00406ed0 @ 4fe6510221c33bf023f6abed461fc13f"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00406ed0
- **Origin (md5):** 4fe6510221c33bf023f6abed461fc13f
- **VirusTotal:** [virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f][virustotal_ref]

# Code Tags
<span class="tag" id="PROCESS">PROCESS</span>
<span class="tag" id="SCREEN">SCREEN</span>


# Behaviour Tags
<span class="bhv-tag" id="SCREENSHOTS_FOREGROUND_WINDOW">SCREENSHOTS_FOREGROUND_WINDOW / 0.4824262547077534</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [417.4661560058594, -396.1692810058594, '<b><a href="/report/fcn.00406ed0@4fe6510221c33bf023f6abed461fc13f">fcn.00406ed0</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>mov ecx, dword[0x4c6eec]<br>sub esp, 0x120<br>push ebx<br>mov bl, byte[esp+0x12c]<br>push ebp<br>mov bp, word[esp+0x134]<br>push edi<br>mov edi, dword[0x4c8600]<br>cmp edi, 1<br>jne 0x406f16<br>cmp byte[0x4c8630], 0<br>jne 0x406f16<br>movzx eax, bl<br>lea eax, [eax+eax*8]<br>shl eax, 5<br>cmp dword[eax+ecx], 0<br>mov byte[esp+0xe], 0<br>je 0x406f1b<br>mov byte[esp+0xe], 1<br>cmp byte[esp+0x13c], 0<br>je 0x406f49<br>movzx eax, bl<br>lea edx, [eax+eax*8]<br>shl edx, 5<br>cmp byte[edx+ecx+4], 0<br>mov al, 1<br>jne 0x407920<br>mov al, byte[esp+0xe]<br>pop edi<br>pop ebp<br>pop ebx<br>add esp, 0x120<br>ret <br>cmp dword[0x4c7eb4], 0<br>je 0x406f61<br>test dl, dl<br>jne 0x406f61<br>mov byte[esp+0xf], 1<br>cmp byte[esp+0xe], dl<br>jne 0x406f66<br>mov byte[esp+0xf], 0<br>mov al, byte[0x4c64b5]<br>push esi<br>cmp edi, 1<br>jne 0x407048<br>cmp byte[0x4c862e], 0<br>je 0x406f86<br>test dl, dl<br>jne 0x407048<br>mov byte[esp+0x14], 1<br>cmp bl, 0xe7<br>je 0x407027<br>mov edx, dword[0x4c8604]<br>mov esi, dword[0x4c8608]<br>movzx ecx, bl<br>mov cl, byte[ecx+edx]<br>test cl, cl<br>jne 0x406fb4<br>movzx ecx, bp<br>mov cl, byte[ecx+esi]<br>test cl, cl<br>je 0x407027<br>mov dl, cl<br>shr cl, 2<br>shr dl, 1<br>and cl, 1<br>and dl, 1<br>je 0x40704f<br>test cl, cl<br>jne 0x406fd7<br>test al, 0x30<br>jne 0x406fd7<br>test cl, cl<br>je 0x407027<br>test al, 0x30<br>jne 0x407027<br>movzx ecx, bp<br>mov edi, 4<br>mov dword[0x4c8600], edi<br>cmp byte[ecx+esi], 0<br>mov byte[0x4c8610], bl<br>setne cl<br>mov byte[0x4c8616], cl<br>xor ecx, ecx<br>mov word[0x4c8612], bp<br>mov word[0x4c8614], cx<br>test dl, dl<br>je 0x407017<br>mov byte[0x4c8617], 1<br>test al, 0x30<br>jne 0x40701d<br>mov byte[0x4c8617], cl<br>cmp byte[esp+0x13], cl<br>je 0x40791b<br>movzx ebx, byte[esp+0x138]<br>lea ecx, [ebx-0x21]<br>cmp ecx, 0x84<br>ja case.0x407041.41<br>movzx edx, byte[ecx+0x407938]<br>jmp dword[edx*4+0x40792c]<br>mov byte[esp+0x14], 0<br>jmp 0x407027<br>test cl, cl<br>je 0x406fd7<br>jmp 0x406fd3<br>pop esi<br>pop edi<br>pop ebp<br>mov al, 1<br>pop ebx<br>add esp, 0x120<br>ret <br>cmp byte[esp+0x13], 0<br>je case.0x407041.41<br>mov ecx, dword[0x4c5204]<br>test ecx, ecx<br>je 0x40708d<br>xor ecx, ecx<br>mov word[0x4c5208], cx<br>mov dword[0x4c5204], ecx<br>jmp 0x40708d<br>mov ecx, dword[0x4c5204]<br>test al, al<br>je 0x4070b7<br>cmp edi, 1<br>jne 0x40709f<br>cmp byte[0x4c862f], 0<br>jne 0x4070b7<br>cmp al, 0x10<br>je 0x4070b7<br>cmp al, 0x20<br>je 0x4070b7<br>test al, 0xc<br>je 0x40791b<br>test al, 3<br>je 0x40791b<br>cmp byte[esp+0x138], 8<br>jne 0x407132<br>test al, al<br>jne 0x407132<br>cmp byte[esp+0x14], al<br>je 0x4070f3<br>cmp edi, 1<br>jne 0x4070f3<br>cmp byte[0x4c862c], al<br>je 0x4070f3<br>mov eax, dword[0x4c8638]<br>test eax, eax<br>je 0x4070f3<br>mov esi, dword[0x4c8634]<br>dec eax<br>xor edx, edx<br>mov dword[0x4c8638], eax<br>mov word[esi+eax*2], dx<br>cmp byte[esp+0x13], 0<br>je 0x40710f<br>test ecx, ecx<br>je 0x40710f<br>dec ecx<br>xor eax, eax<br>mov dword[0x4c5204], ecx<br>mov word[ecx*2+0x4c5208], ax<br>cmp byte[0x4c92f0], 0<br>je 0x40791b<br>mov al, byte[esp+0x12]<br>pop esi<br>pop edi<br>pop ebp<br>mov byte[0x4c92f0], 0<br>pop ebx<br>add esp, 0x120<br>ret <br>mov ecx, 0x40<br>mov esi, 0x4c64d8<br>lea edi, [esp+0x30]<br>rep movsd<br>lea ecx, [esp+0x30]<br>call fcn.00411a40<br>push 0x14<br>call dword[sym.imp.USER32.dll_GetKeyState]<br>test al, 1<br>je 0x40715e<br>or byte[esp+0x44], 1<br>jmp 0x407163<br>and byte[esp+0x44], 0xfe<br>call dword[sym.imp.USER32.dll_GetForegroundWindow]<br>mov ebp, eax<br>test ebp, ebp<br>je 0x40717a<br>push 0<br>push ebp<br>call dword[sym.imp.USER32.dll_GetWindowThreadProcessId]<br>jmp 0x40717c<br>xor eax, eax<br>push eax<br>call dword[sym.imp.USER32.dll_GetKeyboardLayout]<br>cmp byte[esp+0x138], 0xe7<br>mov edi, dword[sym.imp.USER32.dll_ToUnicodeEx]<br>mov esi, eax<br>mov dword[esp+0x2c], esi<br>jne 0x4071b1<br>mov cx, word[esp+0x13c]<br>mov eax, 1<br>mov dword[esp+0x28], eax<br>mov word[esp+0x18], cx<br>jmp 0x4071e4<br>xor edx, edx<br>cmp dword[0x4c6648], edx<br>push esi<br>setne dl<br>lea eax, [esp+0x1c]<br>lea ecx, [esp+0x34]<br>push edx<br>mov edx, dword[esp+0x13c]<br>push 2<br>push eax<br>mov eax, dword[edx+4]<br>push ecx<br>push eax<br>push ebx<br>call edi<br>mov dword[esp+0x28], eax<br>test eax, eax<br>je 0x40791b<br>cmp byte[0x4c92f0], 0<br>mov cl, byte[esp+0x138]<br>je 0x407203<br>cmp cl, 9<br>je 0x407203<br>mov byte[esp+0x17], 1<br>cmp cl, 0x1b<br>jne 0x407208<br>mov byte[esp+0x17], 0<br>test eax, eax<br>jns 0x407288<br>cmp byte[esp+0x12], 0<br>je 0x40791b<br>mov al, byte[0x4c64b5]<br>test al, 0x30<br>mov byte[0x4c92f0], cl<br>mov cx, word[esp+0x13c]<br>setne dl<br>mov word[0x4c92f4], cx<br>mov byte[0x4c92f6], dl<br>test al, 3<br>je 0x40724b<br>mov byte[0x4c92f7], 1<br>test al, 0xc<br>jne 0x407252<br>mov byte[0x4c92f7], 0<br>xor eax, eax<br>cmp dword[0x4c6648], eax<br>push esi<br>setne al<br>lea ecx, [esp+0x1c]<br>lea edx, [esp+0x34]<br>push eax<br>mov eax, dword[esp+0x13c]<br>push 2<br>push ecx<br>mov ecx, dword[eax+4]<br>push edx<br>push ecx<br>push ebx<br>call edi<br>mov al, byte[esp+0x12]<br>pop esi<br>pop edi<br>pop ebp<br>pop ebx<br>add esp, 0x120<br>ret <br>test byte[0x4c64b5], 3<br>jne 0x4072b8<br>mov eax, 0xd<br>cmp word[esp+0x18], ax<br>jne 0x4072a7<br>mov edx, 0xa<br>mov word[esp+0x18], dx<br>cmp word[esp+0x1a], ax<br>jne 0x4072b8<br>mov eax, 0xa<br>mov word[esp+0x1a], ax<br>cmp byte[esp+0x13], 0<br>mov byte[esp+0x15], 0<br>je 0x407686<br>cmp ebp, dword[0x4c5200]<br>je 0x4072e1<br>xor ecx, ecx<br>mov dword[0x4c5200], ebp<br>mov word[0x4c5208], cx<br>jmp 0x407331<br>mov ecx, dword[0x4c5204]<br>mov edx, 0x5a<br>sub edx, ecx<br>cmp edx, 3<br>jge 0x407331<br>mov eax, 0x4c5262<br>lea edx, [eax+2]<br>jmp 0x407300<br>mov cx, word[eax]<br>add eax, 2<br>test cx, cx<br>jne 0x407300<br>sub eax, edx<br>sar eax, 1<br>mov dword[0x4c5204], eax<br>lea eax, [eax+eax+2]<br>push eax<br>push 0x4c5262<br>push 0x4c5208<br>call fcn.0048d7c0<br>mov ecx, dword[0x4c5204]<br>add esp, 0xc<br>mov dx, word[esp+0x18]<br>mov word[ecx*2+0x4c5208], dx<br>inc ecx<br>cmp dword[esp+0x28], 1<br>mov dword[0x4c5204], ecx<br>jle 0x407360<br>mov ax, word[esp+0x1a]<br>mov word[ecx*2+0x4c5208], ax<br>inc ecx<br>mov dword[0x4c5204], ecx<br>xor edx, edx<br>mov word[ecx*2+0x4c5208], dx<br>test ecx, ecx<br>je 0x407686<br>mov dword[esp+0x24], edx<br>cmp dword[0x4c7eb8], edx<br>jbe 0x407686<br>mov eax, dword[0x4c7eb4]<br>mov edx, dword[esp+0x24]<br>mov ebp, dword[eax+edx*4]<br>cmp byte[ebp+0x27], 0<br>jne 0x4074a2<br>cmp byte[ebp+0x2f], 0<br>je 0x4073d7<br>movzx eax, byte[ebp+0x26]<br>cmp ecx, eax<br>jle 0x4074a2<br>movzx eax, word[ecx*2+0x4c5206]<br>push eax<br>push 0x4c28f0<br>call fcn.0048db21<br>add esp, 8<br>test eax, eax<br>je 0x40749c<br>mov ecx, dword[0x4c5204]<br>lea edi, [ecx*2+0x4c5204]<br>jmp 0x4073ea<br>movzx edx, byte[ebp+0x26]<br>cmp ecx, edx<br>jl 0x4074a2<br>lea edi, [ecx*2+0x4c5206]<br>cmp byte[ebp+0x2a], 0<br>movzx edx, byte[ebp+0x26]<br>mov eax, dword[ebp+4]<br>lea esi, [eax+edx*2-2]<br>je 0x407414<br>cmp esi, eax<br>jb 0x407450<br>nop <br>mov dx, word[edi]<br>cmp dx, word[esi]<br>jne 0x407450<br>sub esi, 2<br>sub edi, 2<br>cmp esi, eax<br>jae 0x407400<br>jmp 0x407450<br>cmp esi, eax<br>jb 0x407450<br>jmp 0x407420<br>movzx eax, word[esi]<br>mov ebx, dword[sym.imp.USER32.dll_CharLowerW]<br>push eax<br>call ebx<br>movzx ecx, word[edi]<br>push ecx<br>mov dword[esp+0x24], eax<br>call ebx<br>mov ecx, dword[esp+0x20]<br>cmp ax, cx<br>jne 0x40744a<br>sub esi, 2<br>sub edi, 2<br>cmp esi, dword[ebp+4]<br>jae 0x407420<br>mov ecx, dword[0x4c5204]<br>cmp esi, dword[ebp+4]<br>jae 0x4074a2<br>cmp byte[ebp+0x30], 0<br>jne 0x407471<br>cmp edi, 0x4c5208<br>jb 0x407471<br>movzx edx, word[edi]<br>push edx<br>call dword[sym.imp.USER32.dll_IsCharAlphaNumericW]<br>test eax, eax<br>jne 0x40749c<br>mov eax, dword[ebp]<br>test eax, eax<br>je 0x40747d<br>mov eax, dword[eax+4]<br>jmp 0x407482<br>mov eax, 0x4ab02c<br>mov edx, dword[ebp+0xc]<br>mov bl, byte[ebp+0x24]<br>push eax<br>mov eax, dword[ebp+0x1c]<br>push eax<br>mov eax, dword[ebp+0x10]<br>call fcn.00409920<br>add esp, 8<br>test eax, eax<br>jne 0x4074bc<br>mov ecx, dword[0x4c5204]<br>mov eax, dword[esp+0x24]<br>inc eax<br>mov dword[esp+0x24], eax<br>cmp eax, dword[0x4c7eb8]<br>jb 0x407382<br>jmp 0x407686<br>movzx edx, byte[ebp+0x25]<br>mov ecx, dword[esp+0x144]<br>mov eax, dword[esp+0x134]<br>mov eax, dword[eax+0x10]<br>add ecx, 4<br>push edx<br>call fcn.0040a400<br>add esp, 4<br>test al, al<br>je 0x407686<br>xor edi, edi<br>cmp byte[ebp+0x2b], 0<br>je 0x4075cd<br>cmp byte[ebp+0x2f], 0<br>mov ebx, dword[0x4c5204]<br>lea ebx, [ebx*2+0x4c5208]<br>je 0x407507<br>sub ebx, 2<br>movzx ecx, byte[ebp+0x26]<br>add ecx, ecx<br>mov esi, ebx<br>sub esi, ecx<br>mov dword[esp+0x20], edi<br>mov byte[esp+0x16], 0<br>mov byte[esp+0x13], 0<br>cmp esi, ebx<br>jae 0x407576<br>mov edi, dword[sym.imp.USER32.dll_IsCharUpperW]<br>lea esp, [esp]<br>movzx edx, word[esi]<br>push edx<br>call dword[sym.imp.USER32.dll_IsCharLowerW]<br>test eax, eax<br>jne 0x407548<br>movzx eax, word[esi]<br>push eax<br>call edi<br>test eax, eax<br>je 0x407567<br>cmp byte[esp+0x16], 0<br>jne 0x407563<br>movzx ecx, word[esi]<br>push ecx<br>mov byte[esp+0x1a], 1<br>call edi<br>test eax, eax<br>je 0x407563<br>mov byte[esp+0x13], 1<br>inc dword[esp+0x20]<br>add esi, 2<br>cmp esi, ebx<br>jb 0x407530<br>mov eax, dword[esp+0x20]<br>test eax, eax<br>jne 0x40757a<br>xor edi, edi<br>jmp 0x4075cd<br>cmp eax, 1<br>jne 0x40758d<br>movzx edi, byte[esp+0x13]<br>neg edi<br>sbb edi, edi<br>and edi, 2<br>jmp 0x4075cd<br>cmp byte[esp+0x13], 0<br>jne 0x407598<br>xor edi, edi<br>jmp 0x4075cd<br>movzx edx, byte[ebp+0x26]<br>add edx, edx<br>mov esi, ebx<br>sub esi, edx<br>mov edi, 2<br>cmp esi, ebx<br>jae 0x4075c6<br>jmp 0x4075b0<br>movzx eax, word[esi]<br>push eax<br>call dword[sym.imp.USER32.dll_IsCharLowerW]<br>test eax, eax<br>jne 0x4075c4<br>add esi, edi<br>cmp esi, ebx<br>jb 0x4075b0<br>cmp esi, ebx<br>jne 0x4075cd<br>mov edi, 1<br>mov dl, byte[ebp+0x2c]<br>test dl, dl<br>jne 0x4075d9<br>cmp byte[ebp+0x2d], dl<br>je 0x4075e3<br>mov byte[esp+0x12], 0<br>mov byte[esp+0x15], 1<br>mov eax, dword[esp+0x24]<br>mov ecx, dword[esp+0x148]<br>mov dword[ecx], eax<br>mov al, byte[ebp+0x2f]<br>test al, al<br>je 0x407607<br>mov ecx, dword[0x4c5204]<br>movzx ecx, word[ecx*2+0x4c5206]<br>jmp 0x407609<br>xor ecx, ecx<br>movzx esi, di<br>movzx ecx, cx<br>shl esi, 0x10<br>or esi, ecx<br>mov ecx, dword[esp+0x14c]<br>mov dword[ecx], esi<br>mov esi, dword[ebp+8]<br>xor ecx, ecx<br>cmp word[esi], cx<br>je 0x407653<br>test al, al<br>je 0x40764b<br>mov edx, dword[0x4c5204]<br>mov ax, word[edx*2+0x4c5206]<br>mov word[0x4c5208], ax<br>mov dword[0x4c5204], 1<br>jmp 0x40766b<br>mov dword[0x4c5204], ecx<br>jmp 0x40766b<br>test dl, dl<br>je 0x40766b<br>movzx edx, byte[ebp+0x26]<br>sub dword[0x4c5204], edx<br>test al, al<br>je 0x40766b<br>dec dword[0x4c5204]<br>cmp byte[ebp+0x31], cl<br>je 0x407676<br>mov dword[0x4c5204], ecx<br>mov ecx, dword[0x4c5204]<br>xor eax, eax<br>mov word[ecx*2+0x4c5208], ax<br>cmp byte[esp+0x17], 0<br>je 0x4076f9<br>cmp byte[esp+0x12], 0<br>mov bl, byte[0x4c92f0]<br>mov byte[0x4c92f0], 0<br>je 0x4076f9<br>push 0x100<br>lea edx, [esp+0x34]<br>push 0<br>push edx<br>call fcn.00495c20<br>mov al, byte[0x4c92f6]<br>mov cl, byte[0x4c92f7]<br>add esp, 0xc<br>neg al<br>sbb al, al<br>and al, 0x20<br>neg cl<br>sbb cl, cl<br>and cl, 9<br>or al, cl<br>lea ecx, [esp+0x30]<br>call fcn.00411a40<br>mov edx, dword[esp+0x2c]<br>push edx<br>movzx edx, word[0x4c92f4]<br>push 0<br>push 2<br>lea eax, [esp+0x38]<br>push eax<br>push ecx<br>movzx eax, bl<br>push edx<br>push eax<br>call dword[sym.imp.USER32.dll_ToUnicodeEx]<br>cmp byte[esp+0x14], 0<br>je 0x40791b<br>cmp dword[0x4c8600], 1<br>jne 0x40791b<br>cmp byte[esp+0x15], 0<br>jne 0x40791b<br>mov edi, dword[esp+0x28]<br>xor esi, esi<br>test edi, edi<br>jle 0x40779a<br>jmp 0x407730<br>cmp byte[0x4c862d], 0<br>mov ecx, dword[0x4c860c]<br>je 0x407750<br>movzx eax, word[esp+esi*2+0x18]<br>push eax<br>push ecx<br>call fcn.0048db21<br>add esp, 8<br>jmp 0x40775a<br>mov ax, word[esp+esi*2+0x18]<br>call fcn.00473ef0<br>test eax, eax<br>jne 0x4077ea<br>mov eax, dword[0x4c8638]<br>cmp eax, dword[0x4c863c]<br>je 0x40779a<br>mov dx, word[esp+esi*2+0x18]<br>mov ecx, dword[0x4c8634]<br>mov word[ecx+eax*2], dx<br>mov eax, dword[0x4c8638]<br>mov ecx, dword[0x4c8634]<br>inc eax<br>xor edx, edx<br>inc esi<br>mov dword[0x4c8638], eax<br>mov word[ecx+eax*2], dx<br>cmp esi, edi<br>jl 0x407730<br>xor esi, esi<br>cmp byte[0x4c8631], 0<br>je 0x407869<br>cmp byte[0x4c862d], 0<br>je 0x407828<br>cmp dword[0x4c861c], esi<br>jbe 0x407903<br>mov edi, edi<br>mov eax, dword[0x4c8618]<br>mov eax, dword[eax+esi*4]<br>mov ecx, dword[0x4c8634]<br>push eax<br>push ecx<br>call fcn.0048db48<br>add esp, 8<br>test eax, eax<br>jne 0x40780f<br>inc esi<br>cmp esi, dword[0x4c861c]<br>jb 0x4077c0<br>jmp 0x407903<br>mov dx, word[esp+esi*2+0x18]<br>mov al, byte[esp+0x12]<br>pop esi<br>pop edi<br>pop ebp<br>mov dword[0x4c8600], 4<br>mov word[0x4c8614], dx<br>pop ebx<br>add esp, 0x120<br>ret <br>mov al, byte[esp+0x12]<br>pop esi<br>pop edi<br>pop ebp<br>mov dword[0x4c8600], 3<br>pop ebx<br>add esp, 0x120<br>ret <br>cmp dword[0x4c861c], esi<br>jbe 0x407903<br>jmp 0x407840<br>mov edx, dword[0x4c8634]<br>mov eax, dword[0x4c8618]<br>mov eax, dword[eax+esi*4]<br>push edx<br>call fcn.00473f40<br>add esp, 4<br>test eax, eax<br>jne 0x40780f<br>inc esi<br>cmp esi, dword[0x4c861c]<br>jb 0x407840<br>jmp 0x407903<br>cmp byte[0x4c862d], 0<br>je 0x4078cf<br>mov ebp, dword[0x4c861c]<br>test ebp, ebp<br>je 0x407903<br>mov edi, dword[0x4c8634]<br>mov ebx, dword[0x4c8618]<br>lea esp, [esp]<br>mov ecx, dword[ebx+esi*4]<br>mov eax, edi<br>mov dx, word[eax]<br>cmp dx, word[ecx]<br>jne 0x4078bb<br>test dx, dx<br>je 0x4078b7<br>mov dx, word[eax+2]<br>cmp dx, word[ecx+2]<br>jne 0x4078bb<br>add eax, 4<br>add ecx, 4<br>test dx, dx<br>jne 0x407895<br>xor eax, eax<br>jmp 0x4078c0<br>sbb eax, eax<br>sbb eax, 0xffffffff<br>test eax, eax<br>je 0x40780f<br>inc esi<br>cmp esi, ebp<br>jb 0x407890<br>jmp 0x407903<br>cmp dword[0x4c861c], esi<br>jbe 0x407903<br>mov edi, dword[sym.imp.KERNEL32.dll_lstrcmpiW]<br>lea ecx, [ecx]<br>mov ecx, dword[0x4c8618]<br>mov edx, dword[ecx+esi*4]<br>mov eax, dword[0x4c8634]<br>push edx<br>push eax<br>call edi<br>test eax, eax<br>je 0x40780f<br>inc esi<br>cmp esi, dword[0x4c861c]<br>jb 0x4078e0<br>mov ecx, dword[0x4c863c]<br>cmp dword[0x4c8638], ecx<br>jl 0x40791b<br>mov dword[0x4c8600], 5<br>mov al, byte[esp+0x12]<br>pop esi<br>pop edi<br>pop ebp<br>pop ebx<br>add esp, 0x120<br>ret <br><eoc> ', 'point { fill-color: #e0440e; }'],
[-1434.258544921875, -396.1412048339844, '<b><a href="/report/fcn.00438d70@4fe6510221c33bf023f6abed461fc13f">fcn.00438d70</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>push ebp<br>mov ebp, esp<br>and esp, 0xfffffff8<br>sub esp, 0xdc<br>mov edx, dword[ebp+8]<br>mov ecx, dword[0x4c6400]<br>mov al, 1<br>cmp al, byte[edx+1]<br>push ebx<br>push esi<br>sbb esi, esi<br>and esi, dword[0x4c6404]<br>push edi<br>mov dword[esp+0x8c], ecx<br>mov dword[esp+0x90], esi<br>test ecx, ecx<br>je 0x438dac<br>call fcn.00413110<br>test esi, esi<br>je 0x438db7<br>mov ecx, esi<br>call fcn.00413110<br>mov eax, dword[0x4c28ec]<br>movzx ebx, word[eax+0xec]<br>xor esi, esi<br>xor edi, edi<br>and ebx, 3<br>mov dword[esp+0x60], esi<br>mov dword[esp+0x64], edi<br>cmp ebx, 2<br>je 0x438e3f<br>call dword[sym.imp.USER32.dll_GetForegroundWindow]<br>mov dword[esp+0x14], eax<br>test eax, eax<br>je 0x438e3f<br>mov ecx, eax<br>push ecx<br>call dword[sym.imp.USER32.dll_IsIconic]<br>test eax, eax<br>jne 0x438e3f<br>test ebx, ebx<br>jne 0x438e08<br>mov eax, dword[esp+0x14]<br>lea edx, [esp+0x7c]<br>push edx<br>push eax<br>call dword[sym.imp.USER32.dll_GetWindowRect]<br>jmp 0x438e28<br>mov edx, dword[esp+0x14]<br>lea ecx, [esp+0x7c]<br>xor eax, eax<br>push ecx<br>push edx<br>mov dword[esp+0x84], eax<br>mov dword[esp+0x88], eax<br>call dword[sym.imp.USER32.dll_ClientToScreen]<br>test eax, eax<br>je 0x438e3f<br>add esi, dword[esp+0x7c]<br>add edi, dword[esp+0x80]<br>mov dword[esp+0x60], esi<br>mov dword[esp+0x64], edi<br>mov ebx, dword[ebp+0x1c]<br>add dword[ebp+0xc], esi<br>add dword[ebp+0x10], edi<br>add dword[ebp+0x14], esi<br>add dword[ebp+0x18], edi<br>xor eax, eax<br>push 0x2e<br>push ebx<br>mov dword[esp+0x18], eax<br>mov dword[esp+0x3c], 0xffffffff<br>mov dword[esp+0x1c], eax<br>mov dword[esp+0x2c], eax<br>mov dword[esp+0x30], eax<br>call fcn.0048e91d<br>mov esi, eax<br>add esp, 8<br>test esi, esi<br>je 0x438ec8<br>add esi, 2<br>push 0x4a9bb0<br>push esi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>je 0x438eb2<br>push 0x4a9bb8<br>push esi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>je 0x438eb2<br>push 0x4a9bc0<br>push esi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x438ec8<br>mov esi, dword[sym.imp.USER32.dll_GetSystemMetrics]<br>push 0x31<br>call esi<br>push 0x32<br>mov dword[esp+0x28], eax<br>call esi<br>mov dword[esp+0x28], eax<br>mov edi, ebx<br>lea ebx, [ebx]<br>movzx eax, word[edi]<br>cmp eax, 0x20<br>je 0x438edd<br>cmp eax, 9<br>jne 0x438ee2<br>add edi, 2<br>jmp 0x438ed0<br>cmp word[edi], 0x2a<br>jne 0x4391c2<br>movzx eax, word[edi+2]<br>add edi, 2<br>push eax<br>call fcn.0048ee9d<br>movzx eax, ax<br>add esp, 4<br>cmp eax, 0x48<br>je 0x4390be<br>cmp eax, 0x57<br>je 0x43904b<br>push 4<br>push str.Icon<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x438f58<br>add edi, 8<br>mov eax, edi<br>call fcn.0040d200<br>test al, al<br>je 0x438f49<br>push 0x10<br>push 0<br>push edi<br>call fcn.0048e37b<br>add esp, 0xc<br>mov dword[esp+0x14], eax<br>jmp 0x43912f<br>push edi<br>call fcn.0048dfe6<br>mov dword[esp+0x18], eax<br>jmp 0x43912c<br>push 5<br>push str.Trans<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x438ff7<br>push 0x1f<br>add edi, 0xa<br>lea ecx, [esp+0xac]<br>push edi<br>push ecx<br>call fcn.0048fa44<br>xor edx, edx<br>add esp, 0xc<br>mov ebx, 0x4a352c<br>lea eax, [esp+0xa8]<br>mov word[esp+0xe6], dx<br>call fcn.004095d0<br>test eax, eax<br>je 0x438faa<br>xor ecx, ecx<br>mov word[eax], cx<br>lea esi, [esp+0xa8]<br>call fcn.00474a80<br>cmp eax, 0xffffffff<br>jne 0x438fd3<br>push 0x10<br>mov edx, esi<br>push 0<br>push edx<br>call fcn.0048e37b<br>add esp, 0xc<br>mov dword[esp+0x34], eax<br>jmp 0x43912f<br>mov ecx, eax<br>shr ecx, 8<br>movzx edx, al<br>movzx ecx, cl<br>shl edx, 8<br>shr eax, 0x10<br>or ecx, edx<br>movzx eax, al<br>shl ecx, 8<br>or ecx, eax<br>mov dword[esp+0x34], ecx<br>jmp 0x43912f<br>mov eax, edi<br>call fcn.0040d200<br>test al, al<br>je 0x439015<br>push 0x10<br>push 0<br>push edi<br>call fcn.0048e37b<br>add esp, 0xc<br>mov dword[esp+0x10], eax<br>jmp 0x439022<br>push edi<br>call fcn.0048dfe6<br>add esp, 4<br>mov dword[esp+0x10], eax<br>test eax, eax<br>jns 0x439033<br>mov dword[esp+0x10], 0<br>jmp 0x43912f<br>cmp eax, 0xff<br>jle 0x43912f<br>mov dword[esp+0x10], 0xff<br>jmp 0x43912f<br>lea esi, [edi+2]<br>mov eax, esi<br>movzx ecx, word[eax]<br>cmp ecx, 0x20<br>je 0x43905d<br>cmp ecx, 9<br>jne 0x439062<br>add eax, 2<br>jmp 0x439050<br>movzx ecx, word[eax]<br>test cx, cx<br>je 0x4390b2<br>cmp ecx, 0x2d<br>je 0x439074<br>cmp ecx, 0x2b<br>jne 0x439077<br>add eax, 2<br>cmp word[eax], 0x30<br>jne 0x4390b2<br>movzx ecx, word[eax+2]<br>cmp ecx, 0x78<br>je 0x43908b<br>cmp ecx, 0x58<br>jne 0x4390b2<br>movzx ecx, word[eax+4]<br>push ecx<br>call fcn.0048e189<br>add esp, 4<br>test eax, eax<br>je 0x4390b2<br>push 0x10<br>push 0<br>push esi<br>call fcn.0048e37b<br>add esp, 0xc<br>mov dword[esp+0x24], eax<br>jmp 0x43912f<br>push esi<br>call fcn.0048dfe6<br>mov dword[esp+0x28], eax<br>jmp 0x43912c<br>lea esi, [edi+2]<br>mov eax, esi<br>movzx ecx, word[eax]<br>cmp ecx, 0x20<br>je 0x4390d0<br>cmp ecx, 9<br>jne 0x4390d5<br>add eax, 2<br>jmp 0x4390c3<br>movzx ecx, word[eax]<br>test cx, cx<br>je 0x439122<br>cmp ecx, 0x2d<br>je 0x4390e7<br>cmp ecx, 0x2b<br>jne 0x4390ea<br>add eax, 2<br>cmp word[eax], 0x30<br>jne 0x439122<br>movzx ecx, word[eax+2]<br>cmp ecx, 0x78<br>je 0x4390fe<br>cmp ecx, 0x58<br>jne 0x439122<br>movzx edx, word[eax+4]<br>push edx<br>call fcn.0048e189<br>add esp, 4<br>test eax, eax<br>je 0x439122<br>push 0x10<br>push 0<br>push esi<br>call fcn.0048e37b<br>add esp, 0xc<br>mov dword[esp+0x28], eax<br>jmp 0x43912f<br>push esi<br>call fcn.0048dfe6<br>mov dword[esp+0x2c], eax<br>add esp, 4<br>test edi, edi<br>je 0x43916d<br>movzx eax, word[edi]<br>test ax, ax<br>je 0x43916d<br>jmp 0x439140<br>movzx edx, ax<br>mov ecx, 0x4a352c<br>mov eax, 0x20<br>lea ecx, [ecx]<br>cmp dx, ax<br>je 0x43919f<br>movzx eax, word[ecx+2]<br>add ecx, 2<br>test ax, ax<br>jne 0x439150<br>movzx eax, word[edi+2]<br>add edi, 2<br>test ax, ax<br>jne 0x439140<br>mov eax, dword[0x4c28ec]<br>cmp byte[eax+0x104], 0<br>jne 0x439845<br>mov ecx, dword[0x4c6cb4]<br>push 1<br>push 0<br>push 0xffffffffffffffff<br>push 0x4a358c<br>push ecx<br>call fcn.00476680<br>pop edi<br>pop esi<br>pop ebx<br>mov esp, ebp<br>pop ebp<br>ret 0x18<br>lea ebx, [edi+2]<br>mov eax, ebx<br>movzx ecx, word[eax]<br>cmp ecx, 0x20<br>je 0x4391b1<br>cmp ecx, 9<br>jne 0x4391b6<br>add eax, 2<br>jmp 0x4391a4<br>cmp word[eax], 0x2a<br>mov edi, eax<br>je 0x438eec<br>mov ecx, dword[esp+0x14]<br>lea eax, [esp+0x1c]<br>push eax<br>mov eax, dword[esp+0x2c]<br>push 0<br>push ecx<br>mov ecx, dword[esp+0x30]<br>lea edx, [esp+0x38]<br>push edx<br>push eax<br>push ecx<br>push ebx<br>call fcn.00474f00<br>mov esi, eax<br>add esp, 0x1c<br>mov dword[esp+0x68], esi<br>test esi, esi<br>je 0x43916d<br>push 0<br>call dword[sym.imp.USER32.dll_GetDC]<br>mov edi, eax<br>mov dword[esp+0x48], edi<br>test edi, edi<br>jne 0x43922e<br>cmp byte[esp+0x1c], al<br>jne 0x43916d<br>cmp dword[esp+0x2c], 1<br>push esi<br>jne 0x439223<br>call dword[sym.imp.USER32.dll_DestroyIcon]<br>jmp 0x43916d<br>call dword[sym.imp.GDI32.dll_DeleteObject]<br>jmp 0x43916d<br>mov ebx, dword[sym.imp.GDI32.dll_DeleteObject]<br>xor eax, eax<br>cmp dword[esp+0x2c], 1<br>mov dword[esp+0x78], eax<br>mov dword[esp+0x14], eax<br>mov dword[esp+0x28], eax<br>mov dword[esp+0x38], eax<br>mov dword[esp+0x6c], eax<br>mov byte[esp+0xd], al<br>jne 0x4392ba<br>lea edx, [esp+0x94]<br>push edx<br>push esi<br>call dword[sym.imp.USER32.dll_GetIconInfo]<br>test eax, eax<br>je 0x4392a3<br>push 1<br>lea eax, [esp+0x12]<br>push eax<br>mov eax, dword[esp+0xa8]<br>lea ecx, [esp+0x54]<br>push ecx<br>lea edx, [esp+0x4c]<br>push edx<br>push eax<br>mov eax, edi<br>call fcn.00438430<br>mov ecx, dword[esp+0xb8]<br>add esp, 0x14<br>push ecx<br>mov dword[esp+0x3c], eax<br>call ebx<br>mov edx, dword[esp+0xa0]<br>push edx<br>call ebx<br>push esi<br>call fcn.004757f0<br>mov esi, eax<br>add esp, 4<br>mov dword[esp+0x68], eax<br>test esi, esi<br>je 0x43916d<br>push 8<br>lea eax, [esp+0x12]<br>push eax<br>lea ecx, [esp+0x54]<br>push ecx<br>lea edx, [esp+0x4c]<br>push edx<br>push esi<br>mov eax, edi<br>call fcn.00438430<br>add esp, 0x14<br>mov dword[esp+0x3c], eax<br>test eax, eax<br>je 0x439517<br>mov esi, dword[ebp+0x14]<br>mov ebx, dword[ebp+0x18]<br>mov eax, dword[esp+0x48]<br>sub esi, dword[ebp+0xc]<br>sub ebx, dword[ebp+0x10]<br>push eax<br>inc esi<br>inc ebx<br>call dword[sym.imp.GDI32.dll_CreateCompatibleDC]<br>mov edi, eax<br>mov dword[esp+0x78], edi<br>test edi, edi<br>je 0x439517<br>mov ecx, dword[esp+0x48]<br>push ebx<br>push esi<br>push ecx<br>call dword[sym.imp.GDI32.dll_CreateCompatibleBitmap]<br>mov dword[esp+0x14], eax<br>test eax, eax<br>je 0x439517<br>mov edx, eax<br>push edx<br>push edi<br>call dword[sym.imp.GDI32.dll_SelectObject]<br>mov dword[esp+0x6c], eax<br>test eax, eax<br>je 0x439517<br>mov eax, dword[ebp+0x10]<br>mov ecx, dword[ebp+0xc]<br>mov edx, dword[esp+0x48]<br>push 0xcc0020<br>push eax<br>push ecx<br>push edx<br>push ebx<br>push esi<br>push 0<br>push 0<br>push edi<br>call dword[sym.imp.GDI32.dll_BitBlt]<br>test eax, eax<br>je 0x439517<br>push 8<br>lea eax, [esp+0x13]<br>push eax<br>mov eax, dword[esp+0x1c]<br>lea ecx, [esp+0x64]<br>push ecx<br>lea edx, [esp+0x3c]<br>push edx<br>push eax<br>mov eax, edi<br>call fcn.00438430<br>mov esi, eax<br>add esp, 0x14<br>mov dword[esp+0x28], esi<br>test esi, esi<br>je 0x439517<br>mov ecx, dword[esp+0x40]<br>mov edx, dword[esp+0x30]<br>imul ecx, dword[esp+0x4c]<br>imul edx, dword[esp+0x5c]<br>cmp byte[esp+0xe], 0<br>mov dword[esp+0x44], ecx<br>mov dword[esp+0x70], edx<br>jne 0x4393b5<br>cmp byte[esp+0xf], 0<br>je 0x4393f4<br>cmp dword[esp+0x34], 0xffffffff<br>je 0x4393c4<br>and dword[esp+0x34], 0xf8f8f8<br>xor eax, eax<br>test edx, edx<br>jle 0x4393dc<br>lea ebx, [ebx]<br>and dword[esi+eax*4], 0xf8f8f8<br>inc eax<br>cmp eax, edx<br>jl 0x4393d0<br>mov edi, dword[esp+0x3c]<br>xor eax, eax<br>test ecx, ecx<br>jle 0x439409<br>and dword[edi+eax*4], 0xf8f8f8<br>inc eax<br>cmp eax, ecx<br>jl 0x4393e6<br>jmp 0x4393f8<br>mov edi, dword[esp+0x3c]<br>test ecx, ecx<br>jle 0x439409<br>lea eax, [edi+3]<br>nop <br>mov byte[eax], 0<br>add eax, 4<br>dec ecx<br>jne 0x439400<br>mov ebx, dword[esp+0x10]<br>cmp ebx, 1<br>jge 0x4395d9<br>test edx, edx<br>jle 0x439429<br>lea eax, [esi+3]<br>mov ecx, edx<br>nop <br>mov byte[eax], 0<br>add eax, 4<br>dec ecx<br>jne 0x439420<br>xor esi, esi<br>mov dword[esp+0x20], esi<br>test edx, edx<br>jle 0x4397bd<br>mov ebx, dword[edi]<br>mov dword[esp+0x50], ebx<br>lea ecx, [ecx]<br>mov ecx, dword[esp+0x28]<br>lea edi, [esi*4]<br>cmp dword[edi+ecx], ebx<br>je 0x439467<br>mov eax, dword[esp+0x38]<br>test eax, eax<br>je 0x43945d<br>cmp dword[eax], 0<br>jne 0x439467<br>cmp ebx, dword[esp+0x34]<br>jne 0x4395c5<br>mov ecx, dword[esp+0x30]<br>mov eax, esi<br>cdq <br>idiv ecx<br>mov esi, dword[esp+0x5c]<br>sub esi, eax<br>cmp dword[esp+0x4c], esi<br>jg 0x4395c1<br>sub ecx, edx<br>cmp dword[esp+0x40], ecx<br>jg 0x4395c1<br>mov esi, dword[esp+0x20]<br>xor ebx, ebx<br>mov byte[esp+0xd], 1<br>mov dword[esp+0x24], ebx<br>cmp dword[esp+0x44], ebx<br>jle 0x43951b<br>mov eax, dword[esp+0x3c]<br>mov edx, dword[esp+0x38]<br>sub edx, eax<br>mov byte[esp+0xd], 1<br>mov ecx, esi<br>mov dword[esp+0x2c], edi<br>mov dword[esp+0x58], edx<br>mov edi, edi<br>mov edx, dword[eax]<br>mov edi, dword[esp+0x28]<br>cmp dword[edi+esi*4], edx<br>je 0x4394e6<br>cmp dword[esp+0x38], 0<br>je 0x4394dc<br>mov edi, dword[esp+0x58]<br>cmp dword[edi+eax], 0<br>jne 0x4394e6<br>cmp edx, dword[esp+0x34]<br>jne 0x4395b8<br>inc ebx<br>cmp ebx, dword[esp+0x40]<br>jge 0x4394f0<br>inc esi<br>jmp 0x439505<br>mov edx, dword[esp+0x30]<br>lea esi, [edx*4]<br>add dword[esp+0x2c], esi<br>xor ebx, ebx<br>add ecx, edx<br>mov esi, ecx<br>mov edx, dword[esp+0x24]<br>inc edx<br>add eax, 4<br>mov dword[esp+0x24], edx<br>cmp edx, dword[esp+0x44]<br>jl 0x4394c0<br>mov esi, dword[esp+0x20]<br>mov eax, dword[esp+0x48]<br>push eax<br>push 0<br>call dword[sym.imp.USER32.dll_ReleaseDC]<br>cmp byte[esp+0x1c], 0<br>jne 0x43953a<br>mov ecx, dword[esp+0x68]<br>push ecx<br>call dword[sym.imp.GDI32.dll_DeleteObject]<br>mov edi, dword[esp+0x78]<br>test edi, edi<br>je 0x439559<br>mov eax, dword[esp+0x6c]<br>test eax, eax<br>je 0x439552<br>push eax<br>push edi<br>call dword[sym.imp.GDI32.dll_SelectObject]<br>push edi<br>call dword[sym.imp.GDI32.dll_DeleteDC]<br>mov eax, dword[esp+0x14]<br>test eax, eax<br>je 0x439568<br>push eax<br>call dword[sym.imp.GDI32.dll_DeleteObject]<br>mov eax, dword[esp+0x3c]<br>test eax, eax<br>je 0x439579<br>push eax<br>call fcn.0048e3af<br>add esp, 4<br>mov eax, dword[esp+0x38]<br>test eax, eax<br>je 0x43958a<br>push eax<br>call fcn.0048e3af<br>add esp, 4<br>mov eax, dword[esp+0x28]<br>test eax, eax<br>je 0x43916d<br>push eax<br>call fcn.0048e3af<br>add esp, 4<br>cmp byte[esp+0xd], 0<br>jne 0x4397d9<br>mov eax, 1<br>pop edi<br>pop esi<br>pop ebx<br>mov esp, ebp<br>pop ebp<br>ret 0x18<br>mov ebx, dword[esp+0x50]<br>mov byte[esp+0xd], 0<br>mov esi, dword[esp+0x20]<br>inc esi<br>mov dword[esp+0x20], esi<br>cmp esi, dword[esp+0x70]<br>jl 0x439440<br>jmp 0x4397bd<br>xor esi, esi<br>mov dword[esp+0x20], esi<br>test edx, edx<br>jle 0x4397bd<br>mov eax, esi<br>cdq <br>idiv dword[esp+0x30]<br>mov ecx, dword[esp+0x5c]<br>sub ecx, eax<br>cmp dword[esp+0x4c], ecx<br>jg 0x4397ae<br>mov eax, dword[esp+0x30]<br>sub eax, edx<br>cmp dword[esp+0x40], eax<br>jg 0x4397ae<br>xor eax, eax<br>mov byte[esp+0xd], 1<br>mov dword[esp+0x54], eax<br>mov dword[esp+0x24], eax<br>mov dword[esp+0x2c], esi<br>cmp dword[esp+0x44], eax<br>jle 0x43951b<br>mov eax, dword[esp+0x38]<br>lea ecx, [esi*4]<br>sub eax, edi<br>mov byte[esp+0xd], 1<br>mov dword[esp+0x50], esi<br>mov dword[esp+0x74], ecx<br>mov dword[esp+0x58], eax<br>lea esp, [esp]<br>movzx eax, byte[edi+2]<br>mov dl, byte[edi+1]<br>cmp ebx, eax<br>jle 0x439662<br>mov byte[esp+0xe], 0<br>jmp 0x43966a<br>mov cl, al<br>sub cl, bl<br>mov byte[esp+0xe], cl<br>movzx edx, dl<br>mov dword[esp+0x7c], edx<br>cmp ebx, edx<br>jle 0x43967c<br>mov byte[esp+0x1e], 0<br>jmp 0x43968a<br>mov ebx, dword[esp+0x10]<br>mov cl, dl<br>sub cl, byte[esp+0x10]<br>mov byte[esp+0x1e], cl<br>movzx ecx, byte[edi]<br>cmp ebx, ecx<br>jle 0x439698<br>mov byte[esp+0x1f], 0<br>jmp 0x4396a6<br>mov dl, cl<br>sub dl, byte[esp+0x10]<br>mov byte[esp+0x1f], dl<br>mov edx, dword[esp+0x7c]<br>mov ebx, dword[esp+0x10]<br>mov esi, 0xff<br>sub esi, eax<br>cmp ebx, esi<br>jle 0x4396c0<br>mov eax, 0xff<br>mov byte[esp+0x1d], al<br>jmp 0x4396cb<br>add al, bl<br>mov byte[esp+0x1d], al<br>mov eax, 0xff<br>mov esi, eax<br>sub esi, edx<br>cmp ebx, esi<br>jle 0x4396d9<br>mov byte[esp+0x1b], al<br>jmp 0x4396df<br>add dl, bl<br>mov byte[esp+0x1b], dl<br>mov edx, eax<br>sub edx, ecx<br>cmp ebx, edx<br>jle 0x4396ed<br>mov byte[esp+0xf], al<br>jmp 0x4396f3<br>add cl, bl<br>mov byte[esp+0xf], cl<br>mov eax, dword[esp+0x28]<br>mov esi, dword[esp+0x2c]<br>mov cl, byte[eax+esi*4+2]<br>mov dl, byte[eax+esi*4+1]<br>mov al, byte[eax+esi*4]<br>cmp cl, byte[esp+0xe]<br>jb 0x43972a<br>cmp cl, byte[esp+0x1d]<br>ja 0x43972a<br>cmp dl, byte[esp+0x1e]<br>jb 0x43972a<br>cmp dl, byte[esp+0x1b]<br>ja 0x43972a<br>cmp al, byte[esp+0x1f]<br>jb 0x43972a<br>cmp al, byte[esp+0xf]<br>jbe 0x439743<br>cmp dword[esp+0x38], 0<br>je 0x43973b<br>mov eax, dword[esp+0x58]<br>cmp dword[edi+eax], 0<br>jne 0x439743<br>mov ecx, dword[esp+0x34]<br>cmp dword[edi], ecx<br>jne 0x43979d<br>mov eax, dword[esp+0x54]<br>inc eax<br>mov dword[esp+0x54], eax<br>cmp eax, dword[esp+0x40]<br>jge 0x439759<br>inc esi<br>mov dword[esp+0x2c], esi<br>jmp 0x43977e<br>mov eax, dword[esp+0x30]<br>lea ecx, [eax*4]<br>add dword[esp+0x74], ecx<br>mov ecx, dword[esp+0x50]<br>add ecx, eax<br>mov dword[esp+0x54], 0<br>mov dword[esp+0x50], ecx<br>mov dword[esp+0x2c], ecx<br>mov eax, dword[esp+0x24]<br>inc eax<br>add edi, 4<br>mov dword[esp+0x24], eax<br>cmp eax, dword[esp+0x44]<br>jge 0x439517<br>mov ebx, dword[esp+0x10]<br>jmp 0x439650<br>mov ebx, dword[esp+0x10]<br>mov esi, dword[esp+0x20]<br>mov edi, dword[esp+0x3c]<br>mov byte[esp+0xd], 0<br>inc esi<br>mov dword[esp+0x20], esi<br>cmp esi, dword[esp+0x70]<br>jl 0x4395e7<br>mov edx, dword[0x4c6cb4]<br>push 1<br>push 0<br>push 0xffffffffffffffff<br>push 0x4a331c<br>push edx<br>call fcn.00476680<br>jmp 0x43951b<br>mov ecx, dword[esp+0x8c]<br>test ecx, ecx<br>je 0x439800<br>mov eax, esi<br>cdq <br>idiv dword[esp+0x30]<br>push 0x18<br>mov eax, edx<br>sub eax, dword[esp+0x64]<br>add eax, dword[ebp+0xc]<br>cdq <br>push edx<br>push eax<br>mov eax, ecx<br>call fcn.004010e0<br>mov ecx, dword[esp+0x90]<br>test ecx, ecx<br>je 0x439825<br>mov eax, esi<br>cdq <br>idiv dword[esp+0x30]<br>push 0x18<br>sub eax, dword[esp+0x68]<br>add eax, dword[ebp+0x10]<br>cdq <br>push edx<br>push eax<br>mov eax, ecx<br>call fcn.004010e0<br>mov edx, dword[0x4c6cb4]<br>push 1<br>push 0<br>push 0xffffffffffffffff<br>push 0x4a0900<br>push edx<br>call fcn.00476680<br>pop edi<br>pop esi<br>pop ebx<br>mov esp, ebp<br>pop ebp<br>ret 0x18<br>mov ecx, dword[ebp+8]<br>push 0x4ab02c<br>push 0<br>push 0x4a358c<br>call fcn.0042dc50<br>pop edi<br>pop esi<br>pop ebx<br>mov esp, ebp<br>pop ebp<br>ret 0x18<br><eoc> ', 'null'],
[-508.4197692871094, 1207.6761474609375, '<b><a href="/report/fcn.004069e0@4fe6510221c33bf023f6abed461fc13f">fcn.004069e0</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>sub esp, 0xc<br>push ebx<br>push ebp<br>push esi<br>mov ebx, ecx<br>mov ecx, dword[esp+0x1c]<br>push edi<br>mov esi, eax<br>mov edi, edx<br>mov dword[esp+0x14], 0x7fffffff<br>cmp ecx, dword[0x4c65ec]<br>je 0x406e03<br>mov eax, dword[edi+0x10]<br>cmp eax, 0xffc3d44f<br>je 0x406a64<br>cmp eax, 0xffc3d44e<br>je 0x406a64<br>cmp eax, 0xffc3d44d<br>je 0x406a64<br>mov ebp, dword[0x4c6eec]<br>movzx eax, bl<br>lea eax, [eax+eax*8]<br>shl eax, 5<br>mov eax, dword[eax+ebp]<br>xor ebp, ebp<br>xor dl, dl<br>cmp eax, ebp<br>je 0x406a68<br>cmp dword[eax], 7<br>je 0x406a68<br>mov edx, dword[esp+0x34]<br>mov eax, dword[esp+0x2c]<br>push ebp<br>push 0x7fffffff<br>push edx<br>push eax<br>push esi<br>push ebx<br>mov ebx, dword[esp+0x48]<br>mov eax, edi<br>call fcn.004068b0<br>add esp, 0x18<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0xc<br>ret <br>mov dl, 1<br>xor ebp, ebp<br>cmp byte[0x4c6efe], 0<br>je 0x406a75<br>test dl, dl<br>je 0x406a8b<br>cmp dword[0x4c8600], 1<br>jne 0x406ade<br>cmp byte[0x4c862e], 0<br>je 0x406a8b<br>test dl, dl<br>jne 0x406ade<br>lea ecx, [esp+0x18]<br>push ecx<br>mov ecx, dword[esp+0x34]<br>lea eax, [esp+0x18]<br>push eax<br>mov eax, dword[esp+0x34]<br>push ecx<br>push eax<br>push esi<br>push ebx<br>push edi<br>call fcn.00406ed0<br>add esp, 0x1c<br>test al, al<br>jne 0x406ade<br>mov ecx, dword[esp+0x18]<br>mov edx, dword[esp+0x14]<br>mov eax, dword[esp+0x34]<br>push ecx<br>mov ecx, dword[esp+0x30]<br>push edx<br>push eax<br>push ecx<br>mov ecx, dword[esp+0x30]<br>push esi<br>push ebx<br>mov ebx, dword[esp+0x48]<br>mov eax, edi<br>call fcn.004068b0<br>add esp, 0x18<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0xc<br>ret <br>mov edx, dword[esp+0x2c]<br>push ebp<br>push edx<br>push esi<br>push ebx<br>call fcn.004079c0<br>add esp, 0x10<br>cmp bl, 0x4c<br>jne 0x406c00<br>cmp byte[esp+0x2c], 0<br>jne 0x406d39<br>mov al, byte[0x4c64b5]<br>cmp al, 0x40<br>je 0x406b17<br>cmp al, 0x80<br>je 0x406b17<br>cmp al, 0xc0<br>jne 0x406d39<br>cmp byte[0x4c92ca], 0<br>je 0x406d39<br>push 0x100<br>push ebp<br>push 0x4c64d8<br>mov dword[0x4c53c8], ebp<br>mov byte[0x4c64b7], 0<br>mov byte[0x4c64b6], 0<br>mov byte[0x4c64b5], 0<br>call fcn.00495c20<br>add esp, 0xc<br>push ebp<br>push str.32771<br>mov byte[0x4c53ce], 0<br>mov byte[0x4c53cd], 0<br>mov byte[0x4c53cc], 0<br>mov byte[0x4c53c7], 0<br>call dword[sym.imp.USER32.dll_FindWindowW]<br>test eax, eax<br>setne al<br>mov byte[0x4c53c6], al<br>xor eax, eax<br>xor ecx, ecx<br>mov dword[0x4c53a4], eax<br>mov dword[0x4c53a8], eax<br>mov dword[0x4c53ac], eax<br>mov dword[0x4c53b0], eax<br>mov dword[0x4c53b4], eax<br>mov word[0x4c53b8], ax<br>mov word[0x4c5208], cx<br>mov dword[0x4c5204], ebp<br>call dword[sym.imp.USER32.dll_GetForegroundWindow]<br>xor edx, edx<br>mov dword[0x4c5200], eax<br>mov byte[0x4c53c3], 0<br>mov byte[0x4c53c2], 0<br>mov word[0x4c53c4], dx<br>mov byte[0x4c53c1], dl<br>mov byte[0x4c53c0], dl<br>mov dword[0x4c53bc], ebp<br>mov byte[0x4c53bb], dl<br>mov byte[0x4c53ba], dl<br>mov byte[0x4c52c7], dl<br>jmp 0x406d39<br>cmp bl, 0x2e<br>je 0x406c0e<br>cmp bl, 0x6e<br>jne 0x406d10<br>cmp byte[esp+0x2c], 0<br>jne 0x406d10<br>mov al, byte[0x4c64b7]<br>test al, 3<br>je 0x406d10<br>test al, 0xc<br>je 0x406d10<br>test al, 0x30<br>jne 0x406d10<br>push 0x100<br>push ebp<br>push 0x4c64d8<br>mov dword[0x4c53c8], ebp<br>mov byte[0x4c64b7], 0<br>mov byte[0x4c64b6], 0<br>mov byte[0x4c64b5], 0<br>call fcn.00495c20<br>add esp, 0xc<br>push ebp<br>push str.32771<br>mov byte[0x4c53ce], 0<br>mov byte[0x4c53cd], 0<br>mov byte[0x4c53cc], 0<br>mov byte[0x4c53c7], 0<br>call dword[sym.imp.USER32.dll_FindWindowW]<br>test eax, eax<br>setne al<br>mov byte[0x4c53c6], al<br>xor eax, eax<br>xor ecx, ecx<br>mov dword[0x4c53a4], eax<br>mov dword[0x4c53a8], eax<br>mov dword[0x4c53ac], eax<br>mov dword[0x4c53b0], eax<br>mov dword[0x4c53b4], eax<br>mov word[0x4c53b8], ax<br>mov word[0x4c5208], cx<br>mov dword[0x4c5204], ebp<br>call dword[sym.imp.USER32.dll_GetForegroundWindow]<br>xor edx, edx<br>mov dword[0x4c5200], eax<br>mov byte[0x4c53c3], 0<br>mov byte[0x4c53c2], 0<br>mov word[0x4c53c4], dx<br>mov byte[0x4c53c1], dl<br>mov byte[0x4c53c0], dl<br>mov dword[0x4c53bc], ebp<br>mov byte[0x4c53bb], dl<br>mov byte[0x4c53ba], dl<br>mov byte[0x4c52c7], dl<br>lea esp, [esp]<br>cmp bl, 9<br>jne 0x406d39<br>cmp byte[esp+0x2c], 0<br>jne 0x406d39<br>cmp byte[0x4c53c6], 0<br>jne 0x406d39<br>mov al, byte[0x4c64b5]<br>test al, 0xc<br>je 0x406d39<br>test al, 3<br>jne 0x406d39<br>mov byte[0x4c53c6], 1<br>mov ecx, dword[0x4c6eec]<br>movzx eax, bl<br>lea eax, [eax+eax*8]<br>shl eax, 5<br>cmp byte[eax+ecx+4], 0<br>je 0x406e05<br>cmp byte[0x4c53c6], 0<br>je 0x406d92<br>cmp byte[esp+0x2c], 0<br>je 0x406d74<br>cmp bl, 0xa4<br>je 0x406d79<br>cmp bl, 0xa5<br>je 0x406d79<br>cmp bl, 0x12<br>je 0x406d79<br>jmp 0x406d92<br>cmp bl, 0x1b<br>jne 0x406d92<br>mov edx, dword[esp+0x30]<br>movzx eax, word[edx+4]<br>cmp eax, 0x68<br>je 0x406d92<br>cmp eax, 0x73<br>je 0x406d92<br>mov byte[0x4c53c6], 0<br>cmp bl, 0x5b<br>je 0x406da1<br>mov byte[esp+0x13], 0<br>cmp bl, 0x5c<br>jne 0x406da6<br>mov byte[esp+0x13], 1<br>cmp byte[esp+0x38], 0<br>je 0x406e05<br>cmp byte[esp+0x2c], 0<br>je 0x406e05<br>cmp byte[esp+0x13], 0<br>jne 0x406dd3<br>cmp bl, 0x12<br>je 0x406dd3<br>cmp bl, 0xa4<br>je 0x406dd3<br>cmp bl, 0xa5<br>jne 0x406e05<br>call fcn.00411ed0<br>test al, al<br>jne 0x406e05<br>mov al, byte[0x4c64b5]<br>test al, 3<br>jne 0x406e05<br>cmp byte[esp+0x13], 0<br>je 0x406de7<br>test al, 0x3c<br>jne 0x406e05<br>movzx eax, byte[0x4c2385]<br>push 0xffc3d44d<br>push ebp<br>push ebp<br>push ebp<br>push eax<br>push 2<br>call fcn.0040f3b0<br>add esp, 0x18<br>jmp 0x406e05<br>xor ebp, ebp<br>cmp byte[0x4c28e2], 0<br>je 0x406e27<br>cmp bl, 1<br>je 0x406e18<br>cmp bl, 2<br>jne 0x406e27<br>xor ecx, ecx<br>mov word[0x4c5208], cx<br>mov dword[0x4c5204], ebp<br>mov edx, dword[esp+0x28]<br>mov eax, dword[esp+0x24]<br>mov ecx, dword[esp+0x20]<br>push edi<br>push edx<br>push eax<br>push ecx<br>call dword[sym.imp.USER32.dll_CallNextHookEx]<br>mov ebx, dword[esp+0x34]<br>mov esi, dword[sym.imp.USER32.dll_PostMessageW]<br>mov edi, eax<br>cmp ebx, 0x3fff<br>je 0x406e9c<br>mov ebp, dword[esp+0x30]<br>movzx edx, word[ebp+2]<br>mov eax, dword[0x4c64b8]<br>push edx<br>push ebx<br>push 0x400<br>push eax<br>call esi<br>cmp byte[esp+0x2c], 0<br>je 0x406e9c<br>mov ecx, dword[0x4c6ee8]<br>and ebx, 0x3fff<br>movzx eax, word[ecx+ebx*2]<br>mov edx, 0x3fff<br>cmp ax, dx<br>je 0x406e9c<br>movzx ecx, word[ebp+2]<br>push ecx<br>push eax<br>mov eax, dword[0x4c64b8]<br>push 0x400<br>push eax<br>call esi<br>mov eax, dword[esp+0x14]<br>cmp eax, 0x7fffffff<br>je 0x406ebb<br>mov ecx, dword[esp+0x18]<br>mov edx, dword[0x4c64b8]<br>push ecx<br>push eax<br>push 0x401<br>push edx<br>call esi<br>mov eax, edi<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0xc<br>ret <br><eoc> ', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

mov ecx, dword[0x4c6eec]
sub esp, 0x120
push ebx
mov bl, byte[esp+0x12c]
push ebp
mov bp, word[esp+0x134]
push edi
mov edi, dword[0x4c8600]
cmp edi, 1
jne 0x406f16
cmp byte[0x4c8630], 0
jne 0x406f16
movzx eax, bl
lea eax, [eax+eax*8]
shl eax, 5
cmp dword[eax+ecx], 0
mov byte[esp+0xe], 0
je 0x406f1b
mov byte[esp+0xe], 1
cmp byte[esp+0x13c], 0
je 0x406f49
movzx eax, bl
lea edx, [eax+eax*8]
shl edx, 5
cmp byte[edx+ecx+4], 0
mov al, 1
jne 0x407920
mov al, byte[esp+0xe]
pop edi
pop ebp
pop ebx
add esp, 0x120
ret
cmp dword[0x4c7eb4], 0
je 0x406f61
test dl, dl
jne 0x406f61
mov byte[esp+0xf], 1
cmp byte[esp+0xe], dl
jne 0x406f66
mov byte[esp+0xf], 0
mov al, byte[0x4c64b5]
push esi
cmp edi, 1
jne 0x407048
cmp byte[0x4c862e], 0
je 0x406f86
test dl, dl
jne 0x407048
mov byte[esp+0x14], 1
cmp bl, 0xe7
je 0x407027
mov edx, dword[0x4c8604]
mov esi, dword[0x4c8608]
movzx ecx, bl
mov cl, byte[ecx+edx]
test cl, cl
jne 0x406fb4
movzx ecx, bp
mov cl, byte[ecx+esi]
test cl, cl
je 0x407027
mov dl, cl
shr cl, 2
shr dl, 1
and cl, 1
and dl, 1
je 0x40704f
test cl, cl
jne 0x406fd7
test al, 0x30
jne 0x406fd7
test cl, cl
je 0x407027
test al, 0x30
jne 0x407027
movzx ecx, bp
mov edi, 4
mov dword[0x4c8600], edi
cmp byte[ecx+esi], 0
mov byte[0x4c8610], bl
setne cl
mov byte[0x4c8616], cl
xor ecx, ecx
mov word[0x4c8612], bp
mov word[0x4c8614], cx
test dl, dl
je 0x407017
mov byte[0x4c8617], 1
test al, 0x30
jne 0x40701d
mov byte[0x4c8617], cl
cmp byte[esp+0x13], cl
je 0x40791b
movzx ebx, byte[esp+0x138]
lea ecx, [ebx-0x21]
cmp ecx, 0x84
ja case.0x407041.41
movzx edx, byte[ecx+0x407938]
jmp dword[edx*4+0x40792c]
mov byte[esp+0x14], 0
jmp 0x407027
test cl, cl
je 0x406fd7
jmp 0x406fd3
pop esi
pop edi
pop ebp
mov al, 1
pop ebx
add esp, 0x120
ret
cmp byte[esp+0x13], 0
je case.0x407041.41
mov ecx, dword[0x4c5204]
test ecx, ecx
je 0x40708d
xor ecx, ecx
mov word[0x4c5208], cx
mov dword[0x4c5204], ecx
jmp 0x40708d
mov ecx, dword[0x4c5204]
test al, al
je 0x4070b7
cmp edi, 1
jne 0x40709f
cmp byte[0x4c862f], 0
jne 0x4070b7
cmp al, 0x10
je 0x4070b7
cmp al, 0x20
je 0x4070b7
test al, 0xc
je 0x40791b
test al, 3
je 0x40791b
cmp byte[esp+0x138], 8
jne 0x407132
test al, al
jne 0x407132
cmp byte[esp+0x14], al
je 0x4070f3
cmp edi, 1
jne 0x4070f3
cmp byte[0x4c862c], al
je 0x4070f3
mov eax, dword[0x4c8638]
test eax, eax
je 0x4070f3
mov esi, dword[0x4c8634]
dec eax
xor edx, edx
mov dword[0x4c8638], eax
mov word[esi+eax*2], dx
cmp byte[esp+0x13], 0
je 0x40710f
test ecx, ecx
je 0x40710f
dec ecx
xor eax, eax
mov dword[0x4c5204], ecx
mov word[ecx*2+0x4c5208], ax
cmp byte[0x4c92f0], 0
je 0x40791b
mov al, byte[esp+0x12]
pop esi
pop edi
pop ebp
mov byte[0x4c92f0], 0
pop ebx
add esp, 0x120
ret
mov ecx, 0x40
mov esi, 0x4c64d8
lea edi, [esp+0x30]
rep movsd
lea ecx, [esp+0x30]
call fcn.00411a40
push 0x14
call dword[sym.imp.USER32.dll_GetKeyState]
test al, 1
je 0x40715e
or byte[esp+0x44], 1
jmp 0x407163
and byte[esp+0x44], 0xfe
call dword[sym.imp.USER32.dll_GetForegroundWindow]
mov ebp, eax
test ebp, ebp
je 0x40717a
push 0
push ebp
call dword[sym.imp.USER32.dll_GetWindowThreadProcessId]
jmp 0x40717c
xor eax, eax
push eax
call dword[sym.imp.USER32.dll_GetKeyboardLayout]
cmp byte[esp+0x138], 0xe7
mov edi, dword[sym.imp.USER32.dll_ToUnicodeEx]
mov esi, eax
mov dword[esp+0x2c], esi
jne 0x4071b1
mov cx, word[esp+0x13c]
mov eax, 1
mov dword[esp+0x28], eax
mov word[esp+0x18], cx
jmp 0x4071e4
xor edx, edx
cmp dword[0x4c6648], edx
push esi
setne dl
lea eax, [esp+0x1c]
lea ecx, [esp+0x34]
push edx
mov edx, dword[esp+0x13c]
push 2
push eax
mov eax, dword[edx+4]
push ecx
push eax
push ebx
call edi
mov dword[esp+0x28], eax
test eax, eax
je 0x40791b
cmp byte[0x4c92f0], 0
mov cl, byte[esp+0x138]
je 0x407203
cmp cl, 9
je 0x407203
mov byte[esp+0x17], 1
cmp cl, 0x1b
jne 0x407208
mov byte[esp+0x17], 0
test eax, eax
jns 0x407288
cmp byte[esp+0x12], 0
je 0x40791b
mov al, byte[0x4c64b5]
test al, 0x30
mov byte[0x4c92f0], cl
mov cx, word[esp+0x13c]
setne dl
mov word[0x4c92f4], cx
mov byte[0x4c92f6], dl
test al, 3
je 0x40724b
mov byte[0x4c92f7], 1
test al, 0xc
jne 0x407252
mov byte[0x4c92f7], 0
xor eax, eax
cmp dword[0x4c6648], eax
push esi
setne al
lea ecx, [esp+0x1c]
lea edx, [esp+0x34]
push eax
mov eax, dword[esp+0x13c]
push 2
push ecx
mov ecx, dword[eax+4]
push edx
push ecx
push ebx
call edi
mov al, byte[esp+0x12]
pop esi
pop edi
pop ebp
pop ebx
add esp, 0x120
ret
test byte[0x4c64b5], 3
jne 0x4072b8
mov eax, 0xd
cmp word[esp+0x18], ax
jne 0x4072a7
mov edx, 0xa
mov word[esp+0x18], dx
cmp word[esp+0x1a], ax
jne 0x4072b8
mov eax, 0xa
mov word[esp+0x1a], ax
cmp byte[esp+0x13], 0
mov byte[esp+0x15], 0
je 0x407686
cmp ebp, dword[0x4c5200]
je 0x4072e1
xor ecx, ecx
mov dword[0x4c5200], ebp
mov word[0x4c5208], cx
jmp 0x407331
mov ecx, dword[0x4c5204]
mov edx, 0x5a
sub edx, ecx
cmp edx, 3
jge 0x407331
mov eax, 0x4c5262
lea edx, [eax+2]
jmp 0x407300
mov cx, word[eax]
add eax, 2
test cx, cx
jne 0x407300
sub eax, edx
sar eax, 1
mov dword[0x4c5204], eax
lea eax, [eax+eax+2]
push eax
push 0x4c5262
push 0x4c5208
call fcn.0048d7c0
mov ecx, dword[0x4c5204]
add esp, 0xc
mov dx, word[esp+0x18]
mov word[ecx*2+0x4c5208], dx
inc ecx
cmp dword[esp+0x28], 1
mov dword[0x4c5204], ecx
jle 0x407360
mov ax, word[esp+0x1a]
mov word[ecx*2+0x4c5208], ax
inc ecx
mov dword[0x4c5204], ecx
xor edx, edx
mov word[ecx*2+0x4c5208], dx
test ecx, ecx
je 0x407686
mov dword[esp+0x24], edx
cmp dword[0x4c7eb8], edx
jbe 0x407686
mov eax, dword[0x4c7eb4]
mov edx, dword[esp+0x24]
mov ebp, dword[eax+edx*4]
cmp byte[ebp+0x27], 0
jne 0x4074a2
cmp byte[ebp+0x2f], 0
je 0x4073d7
movzx eax, byte[ebp+0x26]
cmp ecx, eax
jle 0x4074a2
movzx eax, word[ecx*2+0x4c5206]
push eax
push 0x4c28f0
call fcn.0048db21
add esp, 8
test eax, eax
je 0x40749c
mov ecx, dword[0x4c5204]
lea edi, [ecx*2+0x4c5204]
jmp 0x4073ea
movzx edx, byte[ebp+0x26]
cmp ecx, edx
jl 0x4074a2
lea edi, [ecx*2+0x4c5206]
cmp byte[ebp+0x2a], 0
movzx edx, byte[ebp+0x26]
mov eax, dword[ebp+4]
lea esi, [eax+edx*2-2]
je 0x407414
cmp esi, eax
jb 0x407450
nop
mov dx, word[edi]
cmp dx, word[esi]
jne 0x407450
sub esi, 2
sub edi, 2
cmp esi, eax
jae 0x407400
jmp 0x407450
cmp esi, eax
jb 0x407450
jmp 0x407420
movzx eax, word[esi]
mov ebx, dword[sym.imp.USER32.dll_CharLowerW]
push eax
call ebx
movzx ecx, word[edi]
push ecx
mov dword[esp+0x24], eax
call ebx
mov ecx, dword[esp+0x20]
cmp ax, cx
jne 0x40744a
sub esi, 2
sub edi, 2
cmp esi, dword[ebp+4]
jae 0x407420
mov ecx, dword[0x4c5204]
cmp esi, dword[ebp+4]
jae 0x4074a2
cmp byte[ebp+0x30], 0
jne 0x407471
cmp edi, 0x4c5208
jb 0x407471
movzx edx, word[edi]
push edx
call dword[sym.imp.USER32.dll_IsCharAlphaNumericW]
test eax, eax
jne 0x40749c
mov eax, dword[ebp]
test eax, eax
je 0x40747d
mov eax, dword[eax+4]
jmp 0x407482
mov eax, 0x4ab02c
mov edx, dword[ebp+0xc]
mov bl, byte[ebp+0x24]
push eax
mov eax, dword[ebp+0x1c]
push eax
mov eax, dword[ebp+0x10]
call fcn.00409920
add esp, 8
test eax, eax
jne 0x4074bc
mov ecx, dword[0x4c5204]
mov eax, dword[esp+0x24]
inc eax
mov dword[esp+0x24], eax
cmp eax, dword[0x4c7eb8]
jb 0x407382
jmp 0x407686
movzx edx, byte[ebp+0x25]
mov ecx, dword[esp+0x144]
mov eax, dword[esp+0x134]
mov eax, dword[eax+0x10]
add ecx, 4
push edx
call fcn.0040a400
add esp, 4
test al, al
je 0x407686
xor edi, edi
cmp byte[ebp+0x2b], 0
je 0x4075cd
cmp byte[ebp+0x2f], 0
mov ebx, dword[0x4c5204]
lea ebx, [ebx*2+0x4c5208]
je 0x407507
sub ebx, 2
movzx ecx, byte[ebp+0x26]
add ecx, ecx
mov esi, ebx
sub esi, ecx
mov dword[esp+0x20], edi
mov byte[esp+0x16], 0
mov byte[esp+0x13], 0
cmp esi, ebx
jae 0x407576
mov edi, dword[sym.imp.USER32.dll_IsCharUpperW]
lea esp, [esp]
movzx edx, word[esi]
push edx
call dword[sym.imp.USER32.dll_IsCharLowerW]
test eax, eax
jne 0x407548
movzx eax, word[esi]
push eax
call edi
test eax, eax
je 0x407567
cmp byte[esp+0x16], 0
jne 0x407563
movzx ecx, word[esi]
push ecx
mov byte[esp+0x1a], 1
call edi
test eax, eax
je 0x407563
mov byte[esp+0x13], 1
inc dword[esp+0x20]
add esi, 2
cmp esi, ebx
jb 0x407530
mov eax, dword[esp+0x20]
test eax, eax
jne 0x40757a
xor edi, edi
jmp 0x4075cd
cmp eax, 1
jne 0x40758d
movzx edi, byte[esp+0x13]
neg edi
sbb edi, edi
and edi, 2
jmp 0x4075cd
cmp byte[esp+0x13], 0
jne 0x407598
xor edi, edi
jmp 0x4075cd
movzx edx, byte[ebp+0x26]
add edx, edx
mov esi, ebx
sub esi, edx
mov edi, 2
cmp esi, ebx
jae 0x4075c6
jmp 0x4075b0
movzx eax, word[esi]
push eax
call dword[sym.imp.USER32.dll_IsCharLowerW]
test eax, eax
jne 0x4075c4
add esi, edi
cmp esi, ebx
jb 0x4075b0
cmp esi, ebx
jne 0x4075cd
mov edi, 1
mov dl, byte[ebp+0x2c]
test dl, dl
jne 0x4075d9
cmp byte[ebp+0x2d], dl
je 0x4075e3
mov byte[esp+0x12], 0
mov byte[esp+0x15], 1
mov eax, dword[esp+0x24]
mov ecx, dword[esp+0x148]
mov dword[ecx], eax
mov al, byte[ebp+0x2f]
test al, al
je 0x407607
mov ecx, dword[0x4c5204]
movzx ecx, word[ecx*2+0x4c5206]
jmp 0x407609
xor ecx, ecx
movzx esi, di
movzx ecx, cx
shl esi, 0x10
or esi, ecx
mov ecx, dword[esp+0x14c]
mov dword[ecx], esi
mov esi, dword[ebp+8]
xor ecx, ecx
cmp word[esi], cx
je 0x407653
test al, al
je 0x40764b
mov edx, dword[0x4c5204]
mov ax, word[edx*2+0x4c5206]
mov word[0x4c5208], ax
mov dword[0x4c5204], 1
jmp 0x40766b
mov dword[0x4c5204], ecx
jmp 0x40766b
test dl, dl
je 0x40766b
movzx edx, byte[ebp+0x26]
sub dword[0x4c5204], edx
test al, al
je 0x40766b
dec dword[0x4c5204]
cmp byte[ebp+0x31], cl
je 0x407676
mov dword[0x4c5204], ecx
mov ecx, dword[0x4c5204]
xor eax, eax
mov word[ecx*2+0x4c5208], ax
cmp byte[esp+0x17], 0
je 0x4076f9
cmp byte[esp+0x12], 0
mov bl, byte[0x4c92f0]
mov byte[0x4c92f0], 0
je 0x4076f9
push 0x100
lea edx, [esp+0x34]
push 0
push edx
call fcn.00495c20
mov al, byte[0x4c92f6]
mov cl, byte[0x4c92f7]
add esp, 0xc
neg al
sbb al, al
and al, 0x20
neg cl
sbb cl, cl
and cl, 9
or al, cl
lea ecx, [esp+0x30]
call fcn.00411a40
mov edx, dword[esp+0x2c]
push edx
movzx edx, word[0x4c92f4]
push 0
push 2
lea eax, [esp+0x38]
push eax
push ecx
movzx eax, bl
push edx
push eax
call dword[sym.imp.USER32.dll_ToUnicodeEx]
cmp byte[esp+0x14], 0
je 0x40791b
cmp dword[0x4c8600], 1
jne 0x40791b
cmp byte[esp+0x15], 0
jne 0x40791b
mov edi, dword[esp+0x28]
xor esi, esi
test edi, edi
jle 0x40779a
jmp 0x407730
cmp byte[0x4c862d], 0
mov ecx, dword[0x4c860c]
je 0x407750
movzx eax, word[esp+esi*2+0x18]
push eax
push ecx
call fcn.0048db21
add esp, 8
jmp 0x40775a
mov ax, word[esp+esi*2+0x18]
call fcn.00473ef0
test eax, eax
jne 0x4077ea
mov eax, dword[0x4c8638]
cmp eax, dword[0x4c863c]
je 0x40779a
mov dx, word[esp+esi*2+0x18]
mov ecx, dword[0x4c8634]
mov word[ecx+eax*2], dx
mov eax, dword[0x4c8638]
mov ecx, dword[0x4c8634]
inc eax
xor edx, edx
inc esi
mov dword[0x4c8638], eax
mov word[ecx+eax*2], dx
cmp esi, edi
jl 0x407730
xor esi, esi
cmp byte[0x4c8631], 0
je 0x407869
cmp byte[0x4c862d], 0
je 0x407828
cmp dword[0x4c861c], esi
jbe 0x407903
mov edi, edi
mov eax, dword[0x4c8618]
mov eax, dword[eax+esi*4]
mov ecx, dword[0x4c8634]
push eax
push ecx
call fcn.0048db48
add esp, 8
test eax, eax
jne 0x40780f
inc esi
cmp esi, dword[0x4c861c]
jb 0x4077c0
jmp 0x407903
mov dx, word[esp+esi*2+0x18]
mov al, byte[esp+0x12]
pop esi
pop edi
pop ebp
mov dword[0x4c8600], 4
mov word[0x4c8614], dx
pop ebx
add esp, 0x120
ret
mov al, byte[esp+0x12]
pop esi
pop edi
pop ebp
mov dword[0x4c8600], 3
pop ebx
add esp, 0x120
ret
cmp dword[0x4c861c], esi
jbe 0x407903
jmp 0x407840
mov edx, dword[0x4c8634]
mov eax, dword[0x4c8618]
mov eax, dword[eax+esi*4]
push edx
call fcn.00473f40
add esp, 4
test eax, eax
jne 0x40780f
inc esi
cmp esi, dword[0x4c861c]
jb 0x407840
jmp 0x407903
cmp byte[0x4c862d], 0
je 0x4078cf
mov ebp, dword[0x4c861c]
test ebp, ebp
je 0x407903
mov edi, dword[0x4c8634]
mov ebx, dword[0x4c8618]
lea esp, [esp]
mov ecx, dword[ebx+esi*4]
mov eax, edi
mov dx, word[eax]
cmp dx, word[ecx]
jne 0x4078bb
test dx, dx
je 0x4078b7
mov dx, word[eax+2]
cmp dx, word[ecx+2]
jne 0x4078bb
add eax, 4
add ecx, 4
test dx, dx
jne 0x407895
xor eax, eax
jmp 0x4078c0
sbb eax, eax
sbb eax, 0xffffffff
test eax, eax
je 0x40780f
inc esi
cmp esi, ebp
jb 0x407890
jmp 0x407903
cmp dword[0x4c861c], esi
jbe 0x407903
mov edi, dword[sym.imp.KERNEL32.dll_lstrcmpiW]
lea ecx, [ecx]
mov ecx, dword[0x4c8618]
mov edx, dword[ecx+esi*4]
mov eax, dword[0x4c8634]
push edx
push eax
call edi
test eax, eax
je 0x40780f
inc esi
cmp esi, dword[0x4c861c]
jb 0x4078e0
mov ecx, dword[0x4c863c]
cmp dword[0x4c8638], ecx
jl 0x40791b
mov dword[0x4c8600], 5
mov al, byte[esp+0x12]
pop esi
pop edi
pop ebp
pop ebx
add esp, 0x120
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f