---
layout: post
title:  "fcn.004b6540 @ 279a61b1e76da49531f1f16fd1102a2d"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.004b6540
- **Origin (md5):** 279a61b1e76da49531f1f16fd1102a2d
- **VirusTotal:** [virustotal.com/gui/file/279a61b1e76da49531f1f16fd1102a2d][virustotal_ref]

# Code Tags
<span class="tag" id="SOCKET">SOCKET</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [488.4452209472656, 26.673208236694336, '<b><a href="/report/fcn.004b6540@279a61b1e76da49531f1f16fd1102a2d">fcn.004b6540</a><br>@279a61b1e76da49531f1f16fd1102a2d</b><br>', 'point { fill-color: #e0440e; }'],
[-488.4454650878906, -26.673437118530273, '<b><a href="/report/fcn.00446990@289859175c221b107317af7727d26c17">fcn.00446990</a><br>@289859175c221b107317af7727d26c17</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

sub esp, 0x324
push ebx
mov ebx, dword[esp+0x32c]
push esi
xor esi, esi
mov dword[esp+0x10], esi
mov dword[esp+0x14], esi
mov dword[esp+8], esi
cmp ebx, esi
je off.b59
mov ecx, dword[esp+0x334]
xor eax, eax
cmp ecx, esi
jbe off.b59
mov edi, edi
cmp dword[ebx+eax*8], 0xffffffff
jne off.b84
inc eax
cmp eax, ecx
jb off.b48
mov eax, dword[esp+0x338]
push eax
call fcn.004b61e0
add esp, 4
pop esi
pop ebx
add esp, 0x324
ret
mov eax, dword[esp+0x338]
cmp eax, esi
jle off.b112
mov dword[esp+8], eax
call fcn.004bffa0
mov dword[esp+0x10], eax
mov dword[esp+0x14], edx
push ebp
push edi
xor ecx, ecx
xor edi, edi
or eax, 0xffffffff
mov dword[esp+0x12c], ecx
mov dword[esp+0x28], esi
mov dword[esp+0x230], edi
mov dword[esp+0x14], eax
xor ebp, ebp
xor edx, edx
mov word[ebx+ebp*8+6], dx
mov edx, dword[ebx+ebp*8]
cmp edx, 0xffffffff
je off.b360
movzx ebx, word[ebx+ebp*8+4]
test bl, 7
je off.b349
cmp edx, eax
jbe off.b186
mov dword[esp+0x14], edx
test bl, 1
je off.b242
xor eax, eax
test ecx, ecx
jbe off.b211
cmp dword[esp+eax*4+0x130], edx
je off.b211
inc eax
cmp eax, ecx
jb off.b197
cmp eax, ecx
jne off.b242
cmp ecx, 0x40
jae off.b242
mov dword[esp+eax*4+0x130], edx
mov ecx, dword[esp+0x12c]
inc ecx
mov dword[esp+0x12c], ecx
test bl, 4
je off.b289
xor eax, eax
test esi, esi
jbe off.b267
lea ecx, [ecx]
cmp dword[esp+eax*4+0x2c], edx
je off.b267
inc eax
cmp eax, esi
jb off.b256
cmp eax, esi
jne off.b289
cmp esi, 0x40
jae off.b289
mov dword[esp+eax*4+0x2c], edx
mov esi, dword[esp+0x28]
inc esi
mov dword[esp+0x28], esi
test bl, 2
je off.b349
xor eax, eax
test edi, edi
jbe off.b318
lea esp, [esp]
cmp dword[esp+eax*4+0x234], edx
je off.b318
inc eax
cmp eax, edi
jb off.b304
cmp eax, edi
jne off.b349
cmp edi, 0x40
jae off.b349
mov dword[esp+eax*4+0x234], edx
mov edi, dword[esp+0x230]
inc edi
mov dword[esp+0x230], edi
mov ebx, dword[esp+0x338]
mov eax, dword[esp+0x14]
inc ebp
cmp ebp, dword[esp+0x33c]
jb off.b145
test ecx, ecx
jne off.b413
test esi, esi
jne off.b413
test edi, edi
jne off.b413
mov eax, dword[esp+0x340]
push eax
call fcn.004b61e0
add esp, 4
pop edi
pop ebp
pop esi
pop ebx
add esp, 0x324
ret
xor ebx, ebx
cmp dword[esp+0x340], ebx
lea edx, [esp+0x20]
setl bl
lea ebp, [eax+1]
dec ebx
and ebx, edx
jmp off.b464
mov edi, dword[esp+0x230]
mov esi, dword[esp+0x28]
mov ecx, dword[esp+0x12c]
jmp off.b464
mov eax, dword[esp+0x340]
xor edx, edx
cmp eax, edx
jle off.b520
mov eax, 0x10624dd3
imul dword[esp+0x10]
sar edx, 6
mov eax, edx
shr eax, 0x1f
add eax, edx
mov edx, dword[esp+0x10]
mov dword[esp+0x20], eax
imul eax, eax, 0x3e8
sub edx, eax
imul edx, edx, 0x3e8
jmp off.b526
jne off.b530
mov dword[esp+0x20], edx
mov dword[esp+0x24], edx
neg edi
sbb edi, edi
lea eax, [esp+0x230]
and edi, eax
neg esi
sbb esi, esi
push ebx
lea edx, [esp+0x2c]
and esi, edx
neg ecx
push edi
sbb ecx, ecx
lea eax, [esp+0x134]
push esi
and ecx, eax
push ecx
push ebp
call dword[sym.imp.WS2_32.dll_select]
cmp eax, 0xffffffff
jne off.b669
call dword[sym.imp.WS2_32.dll_WSAGetLastError]
test eax, eax
je off.b608
cmp dword[0x5446d0], 0
jne off.b673
cmp eax, 0x2714
jne off.b673
cmp dword[esp+0x340], 0
jle off.b437
mov ecx, dword[esp+0x1c]
mov edx, dword[esp+0x18]
push ecx
push edx
call fcn.004bffa0
push edx
push eax
call fcn.004bffd0
mov ecx, dword[esp+0x350]
sub ecx, eax
add esp, 0x10
mov dword[esp+0x10], ecx
test ecx, ecx
jle off.b689
jmp off.b437
test eax, eax
jge off.b687
pop edi
pop ebp
pop esi
or eax, 0xffffffff
pop ebx
add esp, 0x324
ret
jne off.b702
pop edi
pop ebp
pop esi
xor eax, eax
pop ebx
add esp, 0x324
ret
mov esi, dword[esp+0x338]
mov edi, dword[esp+0x33c]
xor ebx, ebx
add esi, 6
xor eax, eax
mov word[esi], ax
mov eax, dword[esi-6]
cmp eax, 0xffffffff
je off.b810
lea ecx, [esp+0x12c]
push ecx
push eax
call sub.WS2_32.dll___WSAFDIsSet
test eax, eax
je off.b756
or word[esi], 1
mov eax, dword[esi-6]
lea edx, [esp+0x28]
push edx
push eax
call sub.WS2_32.dll___WSAFDIsSet
test eax, eax
je off.b778
or word[esi], 4
mov edx, dword[esi-6]
lea ecx, [esp+0x230]
push ecx
push edx
call sub.WS2_32.dll___WSAFDIsSet
test eax, eax
je off.b803
or word[esi], 2
cmp word[esi], 0
je off.b810
inc ebx
add esi, 8
sub edi, 1
jne off.b721
pop edi
pop ebp
pop esi
mov eax, ebx
pop ebx
add esp, 0x324
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/279a61b1e76da49531f1f16fd1102a2d