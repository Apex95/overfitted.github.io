---
layout: post
title:  "fcn.0048adf1 @ d96761eb00d2d97e2b6f5ffffed0b46a"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0048adf1
- **Origin (md5):** d96761eb00d2d97e2b6f5ffffed0b46a
- **VirusTotal:** [virustotal.com/gui/file/d96761eb00d2d97e2b6f5ffffed0b46a][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-10316.671875, 6036.52294921875, '<b><a href="/report/fcn.0048adf1@d96761eb00d2d97e2b6f5ffffed0b46a">fcn.0048adf1</a><br>@d96761eb00d2d97e2b6f5ffffed0b46a</b><br>push ebp<br>mov ebp, esp<br>sub esp, 0x20<br>push ebx<br>mov ebx, dword[ebp+8]<br>or eax, 0xffffffff<br>push esi<br>push edi<br>or edi, eax<br>mov dword[ebp-8], eax<br>mov ecx, dword[ebx]<br>lea eax, [ebp+0xc]<br>push eax<br>mov eax, dword[0x4c6810]<br>mov dword[ebp-0xc], edi<br>mov eax, dword[eax+ecx*4]<br>mov eax, dword[eax]<br>push dword[eax]<br>call dword[sym.imp.USER32.dll_ClientToScreen]<br>mov eax, dword[0x4c6814]<br>xor esi, esi<br>mov dword[ebp-0x10], eax<br>test eax, eax<br>jle 0x48af0f<br>mov eax, dword[0x4c6810]<br>mov eax, dword[eax+esi*4]<br>mov edx, dword[eax]<br>mov dword[ebp+8], edx<br>test edx, edx<br>je 0x48aee9<br>push 3<br>pop edi<br>cmp dword[0x4c6834], edi<br>jl 0x48aee9<br>mov eax, dword[0x4c6824]<br>mov eax, dword[eax+edi*4]<br>mov ecx, dword[eax]<br>test ecx, ecx<br>je 0x48aedc<br>mov eax, dword[ecx+4]<br>cmp eax, dword[edx+4]<br>jne 0x48aedc<br>test byte[ecx+0x92], 0x20<br>jne 0x48aedc<br>mov al, byte[ecx+0x93]<br>cmp al, 0xff<br>je 0x48ae8a<br>movzx eax, al<br>cmp eax, dword[edx+0x190]<br>jne 0x48aedc<br>lea eax, [ebp-0x20]<br>push eax<br>push dword[ecx]<br>call dword[sym.imp.USER32.dll_GetWindowRect]<br>push dword[ebp+0x10]<br>lea eax, [ebp-0x20]<br>push dword[ebp+0xc]<br>push eax<br>call dword[sym.imp.USER32.dll_PtInRect]<br>test eax, eax<br>je 0x48aed9<br>cmp dword[ebx], esi<br>je 0x48aeb5<br>mov ecx, esi<br>mov dword[ebp-0xc], ecx<br>jmp 0x48aeb8<br>mov ecx, dword[ebp-0xc]<br>mov eax, dword[0x4c6824]<br>mov eax, dword[eax+edi*4]<br>mov eax, dword[eax]<br>test byte[eax+0x92], 8<br>jne 0x48af05<br>cmp dword[ebp-8], 0<br>mov edx, dword[ebp+8]<br>jge 0x48aedc<br>mov dword[ebp-8], edi<br>jmp 0x48aedc<br>mov edx, dword[ebp+8]<br>inc edi<br>cmp edi, dword[0x4c6834]<br>jle 0x48ae56<br>inc esi<br>cmp esi, dword[ebp-0x10]<br>jl 0x48ae32<br>mov eax, dword[ebp-8]<br>test eax, eax<br>js 0x48af0f<br>mov edi, dword[ebp-0xc]<br>test edi, edi<br>js 0x48af1a<br>mov dword[ebx], edi<br>jmp 0x48af1a<br>cmp dword[ebx], esi<br>je 0x48af0b<br>mov dword[ebx], ecx<br>mov eax, edi<br>jmp 0x48af1a<br>push 0<br>call dword[sym.imp.USER32.dll_MessageBeep]<br>or eax, 0xffffffff<br>pop edi<br>pop esi<br>pop ebx<br>mov esp, ebp<br>pop ebp<br>ret 0xc<br><eoc> ', 'point { fill-color: #e0440e; }'],
[10316.6728515625, -6036.52294921875, '<b><a href="/report/fcn.00401db3@d96761eb00d2d97e2b6f5ffffed0b46a">fcn.00401db3</a><br>@d96761eb00d2d97e2b6f5ffffed0b46a</b><br>push ebp<br>mov ebp, esp<br>sub esp, 0x38<br>push ebx<br>push esi<br>mov esi, dword[ebp+8]<br>push edi<br>cmp byte[esi+0x3a], 0<br>jne 0x401f36<br>mov ebx, dword[ebp+0xc]<br>movzx eax, word[ebx+0x86]<br>mov dword[ebp-0x14], eax<br>lea eax, [ebp-0x34]<br>push eax<br>push dword[esi]<br>call dword[sym.imp.USER32.dll_GetClientRect]<br>mov ecx, dword[ebp-0x2c]<br>mov eax, dword[ebp-0x28]<br>mov edx, dword[esi+0x44]<br>mov edi, dword[esi+0x48]<br>mov dword[ebp+0x10], ecx<br>mov dword[ebp+0xc], eax<br>mov dword[ebp-8], edx<br>mov dword[ebp+8], edi<br>test ecx, ecx<br>je 0x43bd51<br>test eax, eax<br>je 0x43bd68<br>cmp dword[esi+0x19c], 0<br>jne 0x43bd7f<br>lea eax, [ebp-0x34]<br>push eax<br>push dword[ebx]<br>call dword[sym.imp.USER32.dll_GetWindowRect]<br>mov eax, dword[ebp-0x2c]<br>mov ecx, dword[ebp-0x34]<br>sub eax, ecx<br>mov edx, dword[ebp-0x28]<br>mov dword[ebp-0xc], eax<br>mov eax, dword[ebp-0x30]<br>sub edx, eax<br>mov dword[ebp-0x18], eax<br>lea eax, [ebp-0x1c]<br>push eax<br>push dword[esi]<br>mov dword[ebp-0x10], edx<br>mov dword[ebp-0x1c], ecx<br>call dword[sym.imp.USER32.dll_ScreenToClient]<br>mov edi, dword[ebp-0x1c]<br>mov eax, edi<br>imul eax, dword[ebp-8]<br>mov esi, dword[ebp-0x18]<br>mov ecx, dword[ebp-0x14]<br>cdq <br>idiv dword[ebp+0x10]<br>mov word[ebx+0x88], ax<br>mov eax, esi<br>imul eax, dword[ebp+8]<br>cdq <br>idiv dword[ebp+0xc]<br>mov word[ebx+0x8a], ax<br>mov eax, dword[ebp-0xc]<br>imul eax, dword[ebp-8]<br>cdq <br>idiv dword[ebp+0x10]<br>mov word[ebx+0x8c], ax<br>mov eax, dword[ebp-0x10]<br>imul eax, dword[ebp+8]<br>cdq <br>idiv dword[ebp+0xc]<br>mov word[ebx+0x8e], ax<br>test cx, cx<br>je 0x401f2d<br>test ecx, 0x100<br>je 0x401ed3<br>mov eax, dword[ebp-0xc]<br>mov word[ebx+0x8c], ax<br>test cl, 6<br>jne 0x401ed3<br>test cl, 8<br>jne 0x43bd91<br>mov eax, dword[ebp+0x10]<br>cdq <br>sub eax, edx<br>sar eax, 1<br>cmp edi, eax<br>jg 0x43bdaf<br>test ecx, 0x200<br>je 0x401f02<br>mov eax, dword[ebp-0x10]<br>mov word[ebx+0x8e], ax<br>test cl, 0x60<br>jne 0x401f02<br>test cl, cl<br>js 0x43bdd1<br>mov eax, dword[ebp+0xc]<br>cdq <br>sub eax, edx<br>sar eax, 1<br>cmp esi, eax<br>jg 0x43bdef<br>mov edx, dword[ebp+8]<br>mov eax, ecx<br>and eax, 2<br>jne 0x43be13<br>test cl, 4<br>jne 0x43be1f<br>mov eax, ecx<br>and eax, 0x20<br>jne 0x43be61<br>test cl, 0x40<br>jne 0x43be6d<br>pop edi<br>pop esi<br>pop ebx<br>mov esp, ebp<br>pop ebp<br>ret 0xc<br>mov edi, dword[ebp+0xc]<br>mov ax, word[esi+0x58]<br>cmp byte[edi+0x90], 7<br>mov word[edi+0x88], ax<br>mov ax, word[esi+0x5c]<br>mov word[edi+0x8a], ax<br>je 0x401fb7<br>mov ax, word[esi+0x60]<br>mov word[edi+0x8c], ax<br>mov ax, word[esi+0x64]<br>mov word[edi+0x8e], ax<br>lea eax, [ebp-0x24]<br>push eax<br>push dword[edi]<br>call dword[sym.imp.USER32.dll_GetClientRect]<br>or ebx, 0xffffffff<br>cmp dword[esi+0x58], ebx<br>je 0x401fbf<br>cmp dword[esi+0x5c], ebx<br>je 0x401fcc<br>lea eax, [ebp-0x24]<br>push eax<br>push dword[edi]<br>call dword[sym.imp.USER32.dll_GetWindowRect]<br>cmp dword[esi+0x60], ebx<br>je 0x43bd2d<br>cmp dword[esi+0x64], ebx<br>je 0x43bd3f<br>cmp byte[edi+0x90], 0<br>jne 0x401f2d<br>jmp 0x43bd3f<br>cmp byte[ebp+0x10], 0<br>je 0x401f6e<br>jmp 0x401f58<br>mov ax, word[ebp-0x24]<br>mov word[edi+0x88], ax<br>jmp 0x401f82<br>mov ax, word[ebp-0x20]<br>mov word[edi+0x8a], ax<br>jmp 0x401f87<br>mov eax, dword[ebp-0x1c]<br>sub eax, dword[ebp-0x24]<br>mov word[edi+0x8c], ax<br>jmp 0x401f9c<br>mov eax, dword[ebp-0x18]<br>sub eax, dword[ebp-0x20]<br>mov word[edi+0x8e], ax<br>jmp 0x401f2d<br>mov dword[ebp+0x10], 1<br>test edx, edx<br>je 0x401e02<br>mov dword[ebp+0x10], edx<br>jmp 0x401e02<br>mov dword[ebp+0xc], 1<br>test edi, edi<br>je 0x401e0a<br>mov dword[ebp+0xc], edi<br>jmp 0x401e0a<br>push 0xf<br>call dword[sym.imp.USER32.dll_GetSystemMetrics]<br>sub edi, eax<br>mov dword[ebp+8], edi<br>jmp 0x401e17<br>mov eax, dword[ebp-8]<br>mov ecx, edi<br>sub eax, dword[ebp+0x10]<br>cdq <br>sub eax, edx<br>sar eax, 1<br>sub ecx, eax<br>mov word[ebx+0x88], cx<br>mov ecx, dword[ebp-0x14]<br>jmp 0x401ed3<br>mov eax, edi<br>sub eax, dword[ebp+0x10]<br>add eax, dword[ebp-0xc]<br>imul eax, dword[ebp-8]<br>cdq <br>idiv dword[ebp+0x10]<br>sub eax, dword[ebp-0xc]<br>add eax, dword[ebp-8]<br>mov word[ebx+0x88], ax<br>jmp 0x401ed3<br>mov eax, dword[ebp+8]<br>mov ecx, esi<br>sub eax, dword[ebp+0xc]<br>cdq <br>sub eax, edx<br>sar eax, 1<br>sub ecx, eax<br>mov word[ebx+0x8a], cx<br>mov ecx, dword[ebp-0x14]<br>jmp 0x401f02<br>mov eax, esi<br>sub eax, dword[ebp+0xc]<br>add eax, dword[ebp-0x10]<br>imul eax, dword[ebp+8]<br>cdq <br>idiv dword[ebp+0xc]<br>mov edx, dword[ebp+8]<br>sub eax, dword[ebp-0x10]<br>add eax, edx<br>mov word[ebx+0x8a], ax<br>jmp 0x401f05<br>mov word[ebx+0x88], di<br>jmp 0x401f10<br>test ax, ax<br>je 0x43be43<br>sub di, word[ebx+0x88]<br>sub di, word[ebp+0x10]<br>add di, word[ebp-8]<br>add di, word[ebp-0xc]<br>mov word[ebx+0x8c], di<br>jmp 0x401f19<br>sub edi, dword[ebp+0x10]<br>sub di, word[ebx+0x8c]<br>add di, word[ebp-8]<br>add di, word[ebp-0xc]<br>mov word[ebx+0x88], di<br>jmp 0x401f19<br>mov word[ebx+0x8a], si<br>jmp 0x401f24<br>test ax, ax<br>je 0x43be90<br>sub si, word[ebx+0x8a]<br>sub si, word[ebp+0xc]<br>add si, dx<br>add si, word[ebp-0x10]<br>mov word[ebx+0x8e], si<br>jmp 0x401f2d<br>sub si, word[ebx+0x8e]<br>sub si, word[ebp+0xc]<br>add si, dx<br>add si, word[ebp-0x10]<br>mov word[ebx+0x8a], si<br>jmp 0x401f2d<br><eoc> ', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
sub esp, 0x20
push ebx
mov ebx, dword[ebp+8]
or eax, 0xffffffff
push esi
push edi
or edi, eax
mov dword[ebp-8], eax
mov ecx, dword[ebx]
lea eax, [ebp+0xc]
push eax
mov eax, dword[0x4c6810]
mov dword[ebp-0xc], edi
mov eax, dword[eax+ecx*4]
mov eax, dword[eax]
push dword[eax]
call dword[sym.imp.USER32.dll_ClientToScreen]
mov eax, dword[0x4c6814]
xor esi, esi
mov dword[ebp-0x10], eax
test eax, eax
jle 0x48af0f
mov eax, dword[0x4c6810]
mov eax, dword[eax+esi*4]
mov edx, dword[eax]
mov dword[ebp+8], edx
test edx, edx
je 0x48aee9
push 3
pop edi
cmp dword[0x4c6834], edi
jl 0x48aee9
mov eax, dword[0x4c6824]
mov eax, dword[eax+edi*4]
mov ecx, dword[eax]
test ecx, ecx
je 0x48aedc
mov eax, dword[ecx+4]
cmp eax, dword[edx+4]
jne 0x48aedc
test byte[ecx+0x92], 0x20
jne 0x48aedc
mov al, byte[ecx+0x93]
cmp al, 0xff
je 0x48ae8a
movzx eax, al
cmp eax, dword[edx+0x190]
jne 0x48aedc
lea eax, [ebp-0x20]
push eax
push dword[ecx]
call dword[sym.imp.USER32.dll_GetWindowRect]
push dword[ebp+0x10]
lea eax, [ebp-0x20]
push dword[ebp+0xc]
push eax
call dword[sym.imp.USER32.dll_PtInRect]
test eax, eax
je 0x48aed9
cmp dword[ebx], esi
je 0x48aeb5
mov ecx, esi
mov dword[ebp-0xc], ecx
jmp 0x48aeb8
mov ecx, dword[ebp-0xc]
mov eax, dword[0x4c6824]
mov eax, dword[eax+edi*4]
mov eax, dword[eax]
test byte[eax+0x92], 8
jne 0x48af05
cmp dword[ebp-8], 0
mov edx, dword[ebp+8]
jge 0x48aedc
mov dword[ebp-8], edi
jmp 0x48aedc
mov edx, dword[ebp+8]
inc edi
cmp edi, dword[0x4c6834]
jle 0x48ae56
inc esi
cmp esi, dword[ebp-0x10]
jl 0x48ae32
mov eax, dword[ebp-8]
test eax, eax
js 0x48af0f
mov edi, dword[ebp-0xc]
test edi, edi
js 0x48af1a
mov dword[ebx], edi
jmp 0x48af1a
cmp dword[ebx], esi
je 0x48af0b
mov dword[ebx], ecx
mov eax, edi
jmp 0x48af1a
push 0
call dword[sym.imp.USER32.dll_MessageBeep]
or eax, 0xffffffff
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 0xc

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/d96761eb00d2d97e2b6f5ffffed0b46a