---
layout: post
title:  "fcn.0042b730 @ a5905e3c253c25bbaf727a1a18fe8ed1"
date:   2021-08-30 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0042b730
- **Origin (md5):** a5905e3c253c25bbaf727a1a18fe8ed1
- **VirusTotal:** [virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>
<span class="tag" id="PROCESS">PROCESS</span>


# Similar Functions

1. [fcn.006ad640][similar_1_ref] (sim.: 0.9646316464497788)
2. [fcn.00656050][similar_2_ref] (sim.: 0.9628196731539652)
3. [fcn.005ba960][similar_3_ref] (sim.: 0.9562746846988893)
4. [fcn.0054f1a0][similar_4_ref] (sim.: 0.9535596560446877)
5. [fcn.005c9510][similar_5_ref] (sim.: 0.9516718771354609)


# Disassembled Code

{% highlight nasm %}
push r15
push r14
push r13
push r12
push rbp
push rdi
push rsi
push rbx
sub rsp,0xba8
movaps xmmword[rsp+0xb80],xmm6
movaps xmmword[rsp+0xb90],xmm7
mov r13,rcx
call qword[sym.imp.KERNEL32.dll_GetCurrentProcess]
mov r12,rax
call qword[sym.imp.KERNEL32.dll_GetCurrentThread]
mov ecx,4
mov qword[rsp+0x58],rax
call qword[sym.imp.imagehlp.dll_SymSetOptions]
xor edx,edx
mov r8d,1
mov rcx,r12
call qword[sym.imp.imagehlp.dll_SymInitialize]
test eax,eax
je 0x42bf40
lea rdi,[rsp+0x2c0]
xor eax,eax
mov ecx,0x21
movq xmm0,qword[0x00a838b0]
mov ebp,0x80
mov qword[rsp+0x60],rdi
movdqa xmm7,xmm0
rep stosq qword[rdi],rax
mov rax,qword[r13+0xf8]
movq xmm0,qword[0x00a838b8]
movdqa xmm6,xmm0
mov dword[rsp+0x2cc],3
mov dword[rsp+0x2ec],3
mov dword[rsp+0x2fc],3
mov qword[rsp+0x2c0],rax
mov rax,qword[r13+0xa0]
mov r14,qword[sym.imp.imagehlp.dll_SymFunctionTableAccess64]
mov qword[rsp+0x2e0],rax
mov rax,qword[r13+0x98]
mov qword[rsp+0x2f0],rax
lea rax,[0x0042aa50]
mov qword[rsp+0x68],rax
lea rax,[0x0042aa60]
movhps xmm7,qword[rsp+0x68]
mov qword[rsp+0x68],rax
movhps xmm6,qword[rsp+0x68]
jmp 0x42b875
mov rcx,qword[rsp+0x180]
add rsi,0x10
cmp rcx,rsi
je 0x42b856
call fcn.00a5af30
mov rcx,qword[rsp+0x160]
add rbx,0x10
cmp rcx,rbx
je 0x42b86c
call fcn.00a5af30
sub ebp,1
je 0x42bc70
mov rcx,qword[0x00c17000]
call sub.msvcrt.dll_fflush
mov rax,qword[sym.imp.imagehlp.dll_SymGetModuleBase64]
mov qword[rsp+0x40],0
mov rdx,r12
mov qword[rsp+0x30],r14
mov qword[rsp+0x28],0
mov ecx,0x8664
mov qword[rsp+0x20],r13
mov r9,qword[rsp+0x60]
mov qword[rsp+0x38],rax
mov r8,qword[rsp+0x58]
call qword[sym.imp.imagehlp.dll_StackWalk64]
test eax,eax
je 0x42bc70
lea rbx,[rsp+0x160]
lea rsi,[rsp+0x180]
lea rdi,[rsp+0x4f0]
mov ecx,0xd1
mov qword[rsp+0x168],0
mov byte[rsp+0x170],0
lea rax,[rbx+0x10]
mov qword[rsp+0x188],0
mov byte[rsp+0x190],0
mov rdx,qword[rsp+0x2c0]
mov qword[rsp+0x160],rax
lea rax,[rsi+0x10]
mov qword[rsp+0x180],rax
xor eax,eax
rep stosq qword[rdi],rax
lea rdi,[rsp+0x4f0]
mov dword[rsp+0x4f0],0x688
mov rcx,r12
mov r8,rdi
call qword[sym.imp.imagehlp.dll_SymGetModuleInfo64]
test eax,eax
je 0x42b840
mov rcx,qword[0x00c17000]
lea r8,[rdi+0x24]
lea rdx,str._s:_
call fcn.0042aad0
cmp byte[rsp+0x634],0
je 0x42bc40
mov rax,qword[rsp+0x2c0]
lea rcx,[rdi+0x144]
mov r15,rcx
mov qword[rsp+0x70],rax
lea rax,[rsp+0x1a0]
mov qword[rsp+0x68],rax
lea rax,[rsp+0x1b0]
mov qword[rsp+0x1a0],rax
mov edx,dword[r15]
add r15,4
lea eax,[rdx-0x1010101]
not edx
and eax,edx
and eax,0x80808080
je 0x42b9b3
mov edx,eax
shr edx,0x10
test eax,0x8080
cmove eax,edx
lea rdx,[r15+2]
cmove r15,rdx
mov edx,eax
add dl,al
sbb r15,3
sub r15,rcx
cmp r15,0xf
mov qword[rsp+0xd0],r15
ja 0x42bea0
cmp r15,1
je 0x42bf61
mov rax,qword[rsp+0x68]
add rax,0x10
test r15,r15
jne 0x42c004
mov qword[rsp+0x1a8],r15
mov byte[rax+r15],0
cmp qword[rsp+0x1a8],0
jne 0x42bca0
mov edi,0xffffffff
mov r15d,edi
mov rax,qword[rsp+0x68]
mov rcx,qword[rsp+0x1a0]
add rax,0x10
cmp rcx,rax
je 0x42ba58
call fcn.00a5af30
cmp qword[rsp+0x168],0
je 0x42baf0
mov r8,qword[rsp+0x160]
mov rcx,qword[0x00c17000]
lea rdx,[0x00a8378f]
call fcn.0042aad0
test r15d,r15d
js 0x42bac8
mov rcx,qword[0x00c17000]
lea rdx,[0x00a83792]
mov r8d,r15d
call fcn.0042aad0
test edi,edi
js 0x42bab7
mov rcx,qword[0x00c17000]
lea rdx,[0x00a83797]
mov r8d,edi
call fcn.0042aad0
mov rdx,qword[0x00c17000]
mov ecx,0x29
call sub.msvcrt.dll_fputc
cmp qword[rsp+0x188],0
jne 0x42bc20
mov rdx,qword[0x00c17000]
mov ecx,0xa
call sub.msvcrt.dll_fputc
jmp 0x42b840
lea rax,[rsp+0x3d0]
mov dword[rsp+0x3d0],0x20
mov dword[rsp+0x3e8],0xfe
xor r8d,r8d
mov rdx,qword[rsp+0x2c0]
mov rcx,r12
mov qword[rsp+0x68],rax
mov r9,rax
call qword[sym.imp.imagehlp.dll_SymGetSymFromAddr64]
test eax,eax
je 0x42bb91
mov rax,qword[rsp+0x68]
lea r8,[rax+0x1c]
mov rdx,r8
mov ecx,dword[rdx]
add rdx,4
lea eax,[rcx-0x1010101]
not ecx
and eax,ecx
and eax,0x80808080
je 0x42bb3a
mov ecx,eax
shr ecx,0x10
test eax,0x8080
cmove eax,ecx
lea rcx,[rdx+2]
cmove rdx,rcx
mov ecx,eax
add cl,al
mov rax,qword[rsp+0x68]
mov rcx,rbx
sbb rdx,3
sub rdx,r8
mov r8,qword[rsp+0x168]
lea r9,[rax+0x1c]
mov qword[rsp+0x20],rdx
xor edx,edx
call fcn.00a2c0d0
mov qword[rsp+0x280],0
mov qword[rsp+0x288],0
lea r9,[rsp+0x280]
mov qword[rsp+0x290],0
mov qword[rsp+0x298],0
lea r8,[rsp+0x260]
mov qword[rsp+0x2a0],0
mov dword[rsp+0x280],0x28
mov rcx,r12
mov rdx,qword[rsp+0x2c0]
call qword[sym.imp.imagehlp.dll_SymGetLineFromAddr64]
test eax,eax
jne 0x42bef4
cmp qword[rsp+0x168],0
jne 0x42ba67
lea r8,[0x00a8369a]
jmp 0x42ba6f
mov r8,qword[rsp+0x180]
mov rcx,qword[0x00c17000]
lea rdx,str.__function:__s
call fcn.0042aad0
jmp 0x42bad7
lea rdx,[rdi+0x144]
mov r8d,0x100
mov rcx,qword[rsp+0x4f8]
call qword[sym.imp.KERNEL32.dll_GetModuleFileNameA]
test eax,eax
jne 0x42b97f
mov edi,0xffffffff
mov r15d,edi
jmp 0x42ba58
mov rcx,r12
call qword[sym.imp.imagehlp.dll_SymCleanup]
nop
movaps xmm6,xmmword[rsp+0xb80]
movaps xmm7,xmmword[rsp+0xb90]
add rsp,0xba8
pop rbx
pop rsi
pop rdi
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov rcx,qword[rsp+0x68]
mov r8,0xffffffffffffffff
mov edx,0x2e
call fcn.00978e10
cmp rax,0xffffffffffffffff
je 0x42bcf0
mov r9,qword[rsp+0x1a8]
mov r8,r9
sub r8,rax
cmp rax,r9
ja 0x42c9b1
mov rcx,qword[rsp+0x68]
lea r9,str..pdb
mov qword[rsp+0x20],4
mov rdx,rax
call fcn.00a2c0d0
xor edx,edx
mov rcx,qword[rsp+0x1a0]
call qword[sym.imp.imagehlp.dll_ImageLoad]
test rax,rax
mov qword[rsp+0x78],rax
je 0x42bfe3
lea rdi,[rsp+0x280]
xor eax,eax
mov ecx,7
movq xmm0,qword[0x00a838c0]
lea r9,[rsp+0xd8]
rep stosq qword[rdi],rax
lea rax,[0x0042aa80]
lea rcx,[rsp+0x150]
xor r8d,r8d
xor edx,edx
mov qword[rsp+0xe0],0
mov qword[rsp+0x80],rax
mov rax,qword[rsp+0x78]
movhps xmm0,qword[rsp+0x80]
movaps xmmword[rsp+0x280],xmm7
mov qword[rsp+0x150],rax
lea rax,[rsp+0x280]
movaps xmmword[rsp+0x290],xmm6
movaps xmmword[rsp+0x2a0],xmm0
mov qword[rsp+0x158],rax
lea rax,[rsp+0xe0]
mov qword[rsp+0x20],rax
mov rdi,rax
mov qword[rsp+0x80],rax
call fcn.006cb130
test eax,eax
jne 0x42bf80
mov rcx,qword[rsp+0xd8]
lea rdx,[rsp+0xe8]
lea r8,[rsp+0xf0]
mov r9,rdi
call fcn.006c2630
test eax,eax
jne 0x42bfc4
mov eax,dword[rsp+0x70]
mov rdx,qword[rsp+0xf0]
lea r9,[rsp+0xf8]
mov rcx,qword[rsp+0xe8]
mov qword[rsp+0x20],rdi
mov r8,rax
mov qword[rsp+0x90],rax
call fcn.006c2900
mov edi,0xffffffff
test eax,eax
mov r15d,edi
je 0x42c00c
cmp qword[rsp+0xf0],0
mov qword[rsp+0x70],0
jle 0x42be79
nop word[rax+rax]
mov rax,qword[rsp+0xe8]
mov rdx,qword[rsp+0x70]
mov r8d,0x11
mov rcx,qword[rsp+0xd8]
mov rdx,qword[rax+rdx*8]
call fcn.006c16c0
add qword[rsp+0x70],1
mov rdx,qword[rsp+0x70]
cmp qword[rsp+0xf0],rdx
jg 0x42be40
mov rdx,qword[rsp+0xe8]
mov rcx,qword[rsp+0xd8]
mov r8d,0xf
call fcn.006c16c0
jmp 0x42bfcc
mov rcx,qword[rsp+0x68]
lea rdx,[rsp+0xd0]
xor r8d,r8d
call fcn.00a2dfc0
mov rcx,rax
mov qword[rsp+0x1a0],rax
mov rax,qword[rsp+0xd0]
mov qword[rsp+0x1b0],rax
lea rdx,[rdi+0x144]
mov r8,r15
call sub.msvcrt.dll_memcpy
mov r15,qword[rsp+0xd0]
mov rax,qword[rsp+0x1a0]
jmp 0x42ba19
mov rdx,rbx
mov rcx,rsi
call fcn.00a2df10
mov rdi,qword[rsp+0x298]
mov rcx,rdi
call sub.msvcrt.dll_strlen
mov r8,qword[rsp+0x168]
mov qword[rsp+0x20],rax
mov r9,rdi
xor edx,edx
mov rcx,rbx
call fcn.00a2c0d0
mov r15d,dword[rsp+0x290]
mov edi,dword[rsp+0x260]
jmp 0x42bc01
call qword[sym.imp.KERNEL32.dll_GetLastError]
mov rcx,qword[0x00c17000]
lea rdx,str.Failed_to_initialize_the_symbol_handler__error:__lu__n
mov r8d,eax
call fcn.0042aad0
jmp 0x42bc7a
movzx eax,byte[rsp+0x634]
mov byte[rsp+0x1b0],al
mov rax,qword[rsp+0x68]
add rax,0x10
jmp 0x42ba19
mov edi,0xffffffff
mov r15d,edi
mov rcx,qword[rsp+0x78]
call qword[sym.imp.imagehlp.dll_ImageUnload]
mov rcx,qword[rsp+0xe0]
test rcx,rcx
je 0x42ba3d
call fcn.006c4e40
mov rcx,qword[0x00c17000]
lea rdx,str._libdwarf_error:__s__
mov r8,rax
call fcn.0042aad0
jmp 0x42ba3d
mov edi,0xffffffff
mov r15d,edi
mov rdx,qword[rsp+0x80]
mov rcx,qword[rsp+0xd8]
call fcn.006cbf40
jmp 0x42bf88
call qword[sym.imp.KERNEL32.dll_GetLastError]
mov rcx,qword[0x00c17000]
lea rdx,str._Failed_to_load_the_debugging_data_into_memory__error:__lu___
mov r8d,eax
call fcn.0042aad0
jmp 0x42ba35
mov rcx,rax
jmp 0x42bed0
mov r8,qword[rsp+0x80]
mov rcx,qword[rsp+0xf8]
lea rdx,[rsp+0x100]
call fcn.006c2970
test eax,eax
jne 0x42be23
mov rax,qword[rsp+0x80]
mov rdx,qword[rsp+0x100]
lea r9,[rsp+0x108]
mov rcx,qword[rsp+0xd8]
mov r8d,1
mov qword[rsp+0x20],rax
call fcn.006c4a50
test eax,eax
jne 0x42be23
mov r9,qword[rsp+0x80]
mov rcx,qword[rsp+0x108]
lea rdx,[rsp+0x110]
lea r8,[rsp+0x118]
call fcn.006cf3f0
test eax,eax
jne 0x42c190
mov r8,qword[rsp+0x118]
test r8,r8
jle 0x42c2c4
lea rax,[rsp+0x120]
mov qword[rsp+0x88],0
mov dword[rsp+0x98],0x41
xor r15d,r15d
mov qword[rsp+0xa0],rax
jmp 0x42c0e8
mov dword[rsp+0x98],eax
add r15,1
cmp qword[rsp+0x118],r15
jle 0x42c135
mov rax,qword[rsp+0x110]
mov r8,qword[rsp+0x80]
mov rdx,qword[rsp+0xa0]
lea rdi,[rax+r15*8]
mov rcx,qword[rdi]
call fcn.006cc670
test eax,eax
jne 0x42c0da
mov eax,dword[rsp+0x70]
sub eax,dword[rsp+0x120]
js 0x42c0da
cmp dword[rsp+0x98],eax
jle 0x42c0da
mov rdi,qword[rdi]
test eax,eax
mov qword[rsp+0x88],rdi
jne 0x42c0d3
cmp qword[rsp+0x88],0
je 0x42c35f
mov r8,qword[rsp+0x80]
mov rcx,qword[rsp+0x88]
lea rdx,[rsp+0x128]
call fcn.006cc740
mov edi,0xffffffff
test eax,eax
mov r15d,edi
je 0x42c2d1
mov r8,qword[rsp+0x118]
mov rdx,qword[rsp+0x110]
mov rcx,qword[rsp+0xd8]
call fcn.006ccbc0
jmp 0x42c198
mov edi,0xffffffff
mov r15d,edi
cmp qword[rsp+0x168],0
je 0x42c29f
mov r9,qword[rsp+0x80]
mov r8,qword[rsp+0x108]
mov rdx,qword[rsp+0x90]
mov rcx,qword[rsp+0xd8]
call fcn.0042aca0
test rax,rax
mov qword[rsp+0x90],rax
je 0x42c27f
mov r9,qword[rsp+0x80]
mov rcx,qword[rsp+0xd8]
mov rdx,rax
mov r8d,0x47
call fcn.0042ae90
mov qword[rsp+0xa8],rax
test rax,rax
cmove rax,qword[rsp+0x90]
mov r9,qword[rsp+0x80]
mov rcx,qword[rsp+0xd8]
mov r8,rsi
mov rdx,rax
mov qword[rsp+0x70],rax
call fcn.0042b150
cmp qword[rsp+0x188],0
jne 0x42c374
cmp qword[rsp+0xa8],0
je 0x42c264
mov rdx,qword[rsp+0xa8]
mov rcx,qword[rsp+0xd8]
mov r8d,8
call fcn.006c16c0
mov rdx,qword[rsp+0x90]
mov rcx,qword[rsp+0xd8]
mov r8d,8
call fcn.006c16c0
mov rdx,qword[rsp+0x108]
mov rcx,qword[rsp+0xd8]
mov r8d,8
call fcn.006c16c0
jmp 0x42be23
mov r9,qword[rsp+0x80]
mov rdx,qword[rsp+0x108]
mov r8,rbx
mov rcx,qword[rsp+0xd8]
call fcn.0042b150
jmp 0x42c1a7
mov edi,0xffffffff
mov r15d,edi
jmp 0x42c179
mov rdx,qword[rsp+0x128]
mov rcx,rbx
call fcn.00a2cff0
mov rdx,qword[rsp+0x128]
mov rcx,qword[rsp+0xd8]
mov r8d,1
call fcn.006c16c0
mov r8,qword[rsp+0x80]
mov rcx,qword[rsp+0x88]
lea rdx,[rsp+0x130]
call fcn.006cc5b0
test eax,eax
jne 0x42c171
mov r8,qword[rsp+0x80]
mov rcx,qword[rsp+0x88]
lea rdx,[rsp+0x138]
mov r15d,dword[rsp+0x130]
call fcn.006cc6b0
test eax,eax
mov rax,0xffffffffffffffff
cmove rax,qword[rsp+0x138]
mov edi,eax
jmp 0x42c171
mov edi,0xffffffff
mov r8,qword[rsp+0x118]
mov r15d,edi
jmp 0x42c179
lea rax,[rsp+0x200]
mov r9,qword[rsp+0x80]
mov r8,qword[rsp+0x70]
mov rdx,qword[rsp+0xd8]
mov dword[rsp+0x20],0
mov rcx,rax
mov qword[rsp+0x98],rax
call fcn.0042b1c0
mov rdx,qword[rsp+0x98]
lea rcx,[rsp+0x220]
mov r8d,0x20
mov qword[rsp+0xa0],rcx
call fcn.00a57720
mov r8,qword[rsp+0x188]
mov rdx,qword[rsp+0x180]
mov rcx,qword[rsp+0xa0]
call fcn.00a2de80
lea rdx,[rsp+0x240]
mov qword[rsp+0x70],rdx
lea rdx,[rsp+0x250]
mov qword[rsp+0x240],rdx
mov rcx,qword[rax]
lea rdx,[rax+0x10]
cmp rcx,rdx
je 0x42c9d7
mov qword[rsp+0x240],rcx
mov rcx,qword[rax+0x10]
mov qword[rsp+0x250],rcx
mov rcx,qword[rax+8]
mov r8d,0x28
mov qword[rsp+0x248],rcx
mov qword[rax],rdx
mov qword[rax+8],0
mov byte[rax+0x10],0
lea rax,[rsp+0x260]
mov rdx,qword[rsp+0x70]
mov rcx,rax
mov qword[rsp+0x88],rax
call fcn.00a57720
mov rdx,qword[rsp+0x88]
mov rcx,rsi
call fcn.00a2e890
mov rax,qword[rsp+0x88]
mov rcx,qword[rsp+0x260]
add rax,0x10
cmp rcx,rax
je 0x42c496
call fcn.00a5af30
mov rax,qword[rsp+0x70]
mov rcx,qword[rsp+0x240]
add rax,0x10
cmp rcx,rax
je 0x42c4b1
call fcn.00a5af30
mov rax,qword[rsp+0xa0]
mov rcx,qword[rsp+0x220]
add rax,0x10
cmp rcx,rax
je 0x42c4cf
call fcn.00a5af30
mov rax,qword[rsp+0x98]
mov rcx,qword[rsp+0x200]
add rax,0x10
cmp rcx,rax
je 0x42c4ed
call fcn.00a5af30
mov r8,qword[rsp+0x80]
mov rcx,qword[rsp+0x90]
lea rdx,[rsp+0x140]
call fcn.006c40b0
test eax,eax
jne 0x42c97a
lea rax,[rsp+0x1c0]
mov qword[rsp+0x148],0
mov qword[rsp+0x1c8],0
mov byte[rsp+0x1d0],0
mov rcx,qword[rsp+0x140]
mov qword[rsp+0x98],rax
lea rax,[rsp+0x1d0]
mov qword[rsp+0x1c0],rax
lea rax,[rsp+0x1e0]
mov qword[rsp+0xa0],rax
lea rax,[rsp+0x1f0]
mov qword[rsp+0xb8],rax
lea rax,[rsp+0x148]
mov qword[rsp+0xc0],rax
jmp 0x42c5f6
mov r9,qword[rsp+0x80]
mov r8,qword[rsp+0xc0]
mov rdx,qword[rsp+0x140]
mov rcx,qword[rsp+0xd8]
call fcn.006c4090
mov rdx,qword[rsp+0x140]
mov rcx,qword[rsp+0xd8]
mov r8d,8
mov dword[rsp+0xb0],eax
call fcn.006c16c0
mov eax,dword[rsp+0xb0]
test eax,eax
jne 0x42c95c
mov rcx,qword[rsp+0x148]
mov qword[rsp+0x140],rcx
mov rax,qword[rsp+0xd8]
mov r8,qword[rsp+0x80]
mov rdx,qword[rsp+0x70]
mov qword[rsp+0xb0],rax
call fcn.006d0d00
test eax,eax
jne 0x42c590
mov r9,qword[rsp+0x240]
mov rcx,r9
mov qword[rsp+0xc8],r9
call sub.msvcrt.dll_strlen
mov r9,qword[rsp+0xc8]
mov r8,qword[rsp+0x1c8]
xor edx,edx
mov rcx,qword[rsp+0x98]
mov qword[rsp+0x20],rax
call fcn.00a2c0d0
mov rdx,qword[rsp+0x240]
mov rcx,qword[rsp+0xb0]
mov r8d,1
call fcn.006c16c0
cmp qword[rsp+0x148],0
je 0x42c6b3
movabs rax,0x7fffffffffffffff
sub rax,qword[rsp+0x188]
cmp rax,1
jbe 0x42c948
lea rdx,[0x00a83776]
mov r8d,2
mov rcx,rsi
call fcn.00a2de80
mov r9,qword[rsp+0x80]
mov r8,qword[rsp+0x140]
mov rdx,qword[rsp+0xd8]
mov rcx,qword[rsp+0xa0]
mov dword[rsp+0x20],0
call fcn.0042b1c0
mov rdx,qword[rsp+0x1e8]
mov rcx,qword[rsp+0xa0]
mov r9d,1
mov dword[rsp+0x20],0x20
xor r8d,r8d
call fcn.00a2ca00
mov rdx,qword[rsp+0x70]
add rdx,0x10
mov qword[rsp+0x240],rdx
mov rcx,qword[rax]
lea rdx,[rax+0x10]
cmp rcx,rdx
je 0x42c851
mov qword[rsp+0x240],rcx
mov rcx,qword[rax+0x10]
mov qword[rsp+0x250],rcx
mov rcx,qword[rax+8]
mov qword[rsp+0x248],rcx
mov qword[rax],rdx
mov qword[rax+8],0
mov rdx,qword[rsp+0x1c0]
mov r8,qword[rsp+0x1c8]
mov rcx,qword[rsp+0x70]
mov byte[rax+0x10],0
call fcn.00a2de80
mov rdx,qword[rsp+0x88]
add rdx,0x10
mov qword[rsp+0x260],rdx
mov rcx,qword[rax]
lea rdx,[rax+0x10]
cmp rcx,rdx
je 0x42c834
mov qword[rsp+0x260],rcx
mov rcx,qword[rax+0x10]
mov qword[rsp+0x270],rcx
mov rcx,qword[rax+8]
mov qword[rsp+0x268],rcx
mov byte[rax+0x10],0
mov rcx,rsi
mov qword[rax],rdx
mov qword[rax+8],0
mov rdx,qword[rsp+0x260]
mov r8,qword[rsp+0x268]
call fcn.00a2de80
mov rax,qword[rsp+0x88]
mov rcx,qword[rsp+0x260]
add rax,0x10
cmp rcx,rax
je 0x42c7f9
call fcn.00a5af30
mov rax,qword[rsp+0x70]
mov rcx,qword[rsp+0x240]
add rax,0x10
cmp rcx,rax
je 0x42c814
call fcn.00a5af30
mov rcx,qword[rsp+0x1e0]
cmp rcx,qword[rsp+0xb8]
je 0x42c590
call fcn.00a5af30
jmp 0x42c590
mov r9,qword[rax+0x10]
mov r10,qword[rax+0x18]
mov qword[rsp+0x270],r9
mov qword[rsp+0x278],r10
jmp 0x42c7a8
mov r9,qword[rax+0x10]
mov r10,qword[rax+0x18]
mov qword[rsp+0x250],r9
mov qword[rsp+0x258],r10
jmp 0x42c73b
mov rdi,qword[rsp+0x70]
mov rcx,qword[rsp+0x240]
add rdi,0x10
cmp rcx,rdi
je 0x42c8aa
call fcn.00a5af30
mov rdi,rbp
mov rax,qword[rsp+0xa0]
mov rcx,qword[rsp+0x1e0]
add rax,0x10
cmp rcx,rax
je 0x42c8cb
call fcn.00a5af30
mov rax,qword[rsp+0x98]
mov rcx,qword[rsp+0x1c0]
add rax,0x10
cmp rcx,rax
je 0x42c8e9
call fcn.00a5af30
mov rax,qword[rsp+0x68]
mov rcx,qword[rsp+0x1a0]
add rax,0x10
cmp rcx,rax
je 0x42c904
call fcn.00a5af30
mov rcx,qword[rsp+0x180]
add rsi,0x10
cmp rcx,rsi
je 0x42c91a
call fcn.00a5af30
mov rcx,qword[rsp+0x160]
add rbx,0x10
cmp rcx,rbx
je 0x42c930
call fcn.00a5af30
mov rcx,rdi
call fcn.008da260
mov rbp,rax
jmp 0x42c88f
lea rcx,[0x00a83620]
call fcn.00a4f830
mov rdi,rax
jmp 0x42c8cb
mov rax,qword[rsp+0x98]
mov rcx,qword[rsp+0x1c0]
add rax,0x10
cmp rcx,rax
je 0x42c97a
call fcn.00a5af30
mov edx,0x29
mov rcx,rsi
call fcn.00a2e1a0
jmp 0x42c23e
lea rdx,[0x00a836db]
lea rcx,[0x00a836f8]
mov r8,rax
call fcn.00a4fe30
mov rdi,rax
jmp 0x42c8e9
mov r9,qword[rax+0x10]
mov r10,qword[rax+0x18]
mov qword[rsp+0x250],r9
mov qword[rsp+0x258],r10
jmp 0x42c42a
{% endhighlight %}


[similar_1_ref]: /report/fcn.006ad640@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_2_ref]: /report/fcn.00656050@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_3_ref]: /report/fcn.005ba960@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_4_ref]: /report/fcn.0054f1a0@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_5_ref]: /report/fcn.005c9510@a5905e3c253c25bbaf727a1a18fe8ed1
[virustotal_ref]: https://www.virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1