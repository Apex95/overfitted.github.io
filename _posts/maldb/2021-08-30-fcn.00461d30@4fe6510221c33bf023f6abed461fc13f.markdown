---
layout: post
title:  "fcn.00461d30 @ 4fe6510221c33bf023f6abed461fc13f"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00461d30
- **Origin (md5):** 4fe6510221c33bf023f6abed461fc13f
- **VirusTotal:** [virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Behaviour Tags
<span class="bhv-tag" id="SCREENSHOTS_FOREGROUND_WINDOW">SCREENSHOTS_FOREGROUND_WINDOW / 0.19247532419628546</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [949.8718872070312, -695.748779296875, '<b><a href="/report/fcn.00461d30@4fe6510221c33bf023f6abed461fc13f">fcn.00461d30</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>mov ecx, dword[esp+0xc]<br>mov al, byte[ecx+4]<br>sub esp, 0x60<br>push ebx<br>push ebp<br>mov ebp, dword[esp+0x70]<br>push esi<br>push edi<br>mov edi, edx<br>cmp al, 0xa<br>je 0x461d55<br>cmp al, 2<br>je 0x461d55<br>add ecx, 0x10<br>mov dword[esp+0x18], ecx<br>jmp 0x461d5c<br>lea eax, [ebp+0x5c]<br>mov dword[esp+0x18], eax<br>cmp word[edi], 0<br>je 0x46394c<br>movzx eax, word[edi]<br>cmp eax, 0x2d<br>jne 0x461d75<br>mov byte[esp+0x78], 0<br>jmp 0x461d7f<br>mov byte[esp+0x78], 1<br>cmp eax, 0x2b<br>jne 0x461d82<br>add edi, 2<br>cmp word[edi], 0<br>je 0x46394c<br>mov ebx, 0x4a352c<br>mov eax, edi<br>call fcn.004095d0<br>mov dword[esp+0x14], eax<br>test eax, eax<br>jne 0x461dbd<br>mov eax, edi<br>lea edx, [eax+2]<br>mov cx, word[eax]<br>add eax, 2<br>test cx, cx<br>jne 0x461da5<br>sub eax, edx<br>sar eax, 1<br>lea ecx, [edi+eax*2]<br>mov dword[esp+0x14], ecx<br>mov eax, ecx<br>cmp eax, edi<br>je 0x46392c<br>movzx edx, word[eax]<br>xor ecx, ecx<br>push str.Section<br>push edi<br>mov dword[esp+0x24], edx<br>mov word[eax], cx<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x461def<br>mov byte[ebp+0x190], 1<br>jmp case.0x462f06.1<br>push str.AltSubmit<br>push edi<br>call fcn.0048cd49<br>mov esi, dword[esp+0x84]<br>add esp, 8<br>test eax, eax<br>jne 0x461e21<br>cmp byte[esi+4], 0xc<br>je 0x461e21<br>cmp byte[esp+0x78], al<br>je 0x462720<br>or byte[esi+5], 2<br>jmp case.0x462f06.1<br>push 7<br>push str.Checked<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x461eaf<br>add edi, 0xe<br>push str.Gray<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x461e5e<br>movzx edx, byte[esp+0x78]<br>neg edx<br>sbb edx, edx<br>and edx, 2<br>mov dword[ebp+0x6c], edx<br>jmp case.0x462f06.1<br>cmp byte[esi+4], 0xa<br>jne 0x461e7d<br>cmp byte[esp+0x78], 0<br>je 0x461e74<br>or dword[ebp+0x10], 4<br>jmp case.0x462f06.1<br>and dword[ebp+0x10], 0xfffffffb<br>jmp case.0x462f06.1<br>cmp word[edi], 0<br>je 0x461ea2<br>mov esi, edi<br>call fcn.0040d260<br>mov dword[ebp+0x6c], eax<br>cmp eax, 0xffffffff<br>jne case.0x462f06.1<br>mov dword[ebp+0x6c], 2<br>jmp case.0x462f06.1<br>movzx eax, byte[esp+0x78]<br>mov dword[ebp+0x6c], eax<br>jmp case.0x462f06.1<br>push 6<br>push str.Choose<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x461f68<br>cmp byte[esp+0x78], al<br>je case.0x462f06.1<br>movzx eax, byte[esi+4]<br>add edi, 0xc<br>sub eax, 0xd<br>je 0x461f24<br>dec eax<br>je 0x461eff<br>mov esi, edi<br>call fcn.0040d260<br>mov dword[ebp+0x34], eax<br>cmp eax, 1<br>jge case.0x462f06.1<br>mov dword[ebp+0x34], 0<br>jmp case.0x462f06.1<br>lea eax, [ebp+0x140]<br>mov ecx, edi<br>call fcn.00473320<br>mov dword[ebp+0x180], eax<br>cmp eax, 3<br>jne case.0x462f06.1<br>or dword[ebp], 2<br>jmp case.0x462f06.1<br>push str.None<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x461f42<br>mov dword[ebp+0x34], 2<br>jmp case.0x462f06.1<br>push 1<br>lea esi, [ebp+0x140]<br>mov eax, edi<br>call fcn.004733b0<br>add esp, 4<br>test eax, eax<br>je case.0x462f06.1<br>mov dword[ebp+0x34], 1<br>jmp case.0x462f06.1<br>push str.Border<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x461f98<br>cmp byte[esp+0x78], al<br>je 0x461f8c<br>or dword[ebp], 0x800000<br>jmp case.0x462f06.1<br>or dword[ebp+4], 0x800000<br>jmp case.0x462f06.1<br>push str.VScroll<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x461fc8<br>cmp byte[esp+0x78], al<br>je 0x461fbc<br>or dword[ebp], 0x200000<br>jmp case.0x462f06.1<br>or dword[ebp+4], 0x200000<br>jmp case.0x462f06.1<br>push 7<br>push str.HScroll<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x462034<br>cmp byte[esi+4], 0xb<br>jne 0x461ff8<br>cmp byte[esp+0x78], al<br>je 0x46247f<br>or dword[ebp+4], 0x8000<br>jmp case.0x462f06.1<br>cmp byte[esp+0x78], 0<br>je 0x462028<br>or dword[ebp], 0x100000<br>cmp word[edi+0xe], 0<br>je 0x46201d<br>lea esi, [edi+0xe]<br>call fcn.0040d260<br>mov dword[ebp+0x68], eax<br>jmp case.0x462f06.1<br>or eax, 0xffffffff<br>mov dword[ebp+0x68], eax<br>jmp case.0x462f06.1<br>or dword[ebp+4], 0x100000<br>jmp case.0x462f06.1<br>push str.Tabstop<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x462058<br>cmp byte[esp+0x78], al<br>je 0x462070<br>or dword[ebp], 0x10000<br>jmp case.0x462f06.1<br>push str.NoTab<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x46207c<br>cmp byte[esp+0x78], al<br>je 0x46204c<br>or dword[ebp+4], 0x10000<br>jmp case.0x462f06.1<br>push str.Group<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x4620a5<br>cmp byte[esp+0x78], 0<br>je 0x462321<br>or dword[ebp], 0x20000<br>jmp case.0x462f06.1<br>push str.Redraw<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x4620ce<br>xor ecx, ecx<br>cmp byte[esp+0x78], cl<br>sete cl<br>add ecx, 3<br>mov dword[ebp+0x188], ecx<br>jmp case.0x462f06.1<br>push 8<br>push str.Disabled<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x46213b<br>cmp word[edi+0x10], ax<br>je 0x4620fd<br>lea esi, [edi+0x10]<br>call fcn.0040d260<br>test eax, eax<br>jne 0x4620fd<br>cmp byte[esp+0x78], al<br>sete cl<br>jmp 0x462101<br>mov cl, byte[esp+0x78]<br>mov edx, dword[esp+0x7c]<br>mov eax, dword[edx]<br>test eax, eax<br>je 0x46211f<br>xor edx, edx<br>test cl, cl<br>sete dl<br>push edx<br>push eax<br>call dword[sym.imp.USER32.dll_EnableWindow]<br>jmp case.0x462f06.1<br>test cl, cl<br>je 0x46212f<br>or dword[ebp], 0x8000000<br>jmp case.0x462f06.1<br>or dword[ebp+4], 0x8000000<br>jmp case.0x462f06.1<br>push 6<br>push str.Hidden<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x4621ac<br>cmp word[edi+0xc], ax<br>je 0x46216a<br>lea esi, [edi+0xc]<br>call fcn.0040d260<br>test eax, eax<br>jne 0x46216a<br>cmp byte[esp+0x78], al<br>sete cl<br>jmp 0x46216e<br>mov cl, byte[esp+0x78]<br>mov eax, dword[esp+0x7c]<br>mov eax, dword[eax]<br>test eax, eax<br>je 0x462190<br>xor edx, edx<br>test cl, cl<br>setne dl<br>dec edx<br>and edx, 4<br>push edx<br>push eax<br>call dword[sym.imp.USER32.dll_ShowWindow]<br>jmp case.0x462f06.1<br>test cl, cl<br>je 0x4621a0<br>or dword[ebp+4], 0x10000000<br>jmp case.0x462f06.1<br>or dword[ebp], 0x10000000<br>jmp case.0x462f06.1<br>push str.Wrap<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x462231<br>movzx eax, byte[esi+4]<br>dec eax<br>cmp eax, 0x12<br>ja case.0x462f06.1<br>movzx eax, byte[eax+0x463fec]<br>jmp dword[eax*4+0x463fd4]<br>cmp byte[esp+0x78], 0<br>je 0x4621ea<br>or dword[ebp+4], 0x1f<br>jmp case.0x462f06.1<br>mov ecx, dword[ebp]<br>and ecx, 0xffffffec<br>or ecx, 0xc<br>mov dword[ebp], ecx<br>jmp case.0x462f06.1<br>cmp byte[esp+0x78], 0<br>je 0x46220e<br>or dword[ebp+4], 0x100080<br>jmp case.0x462f06.1<br>or dword[ebp], 0x80<br>jmp case.0x462f06.1<br>cmp byte[esp+0x78], 0<br>je 0x462634<br>or dword[ebp], 0x200<br>jmp case.0x462f06.1<br>mov ebx, 0xa<br>push ebx<br>push str.Background<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x4622ea<br>movzx eax, byte[esi+4]<br>add eax, 0xfffffff6<br>add edi, 0x14<br>cmp eax, 0xe<br>ja case.0x462263.12<br>movzx edx, byte[eax+0x464008]<br>jmp dword[edx*4+0x464000]<br>cmp byte[esp+0x78], 0<br>je 0x4622a0<br>mov esi, edi<br>call fcn.00474a80<br>mov dword[ebp+0x60], eax<br>cmp eax, 0xffffffff<br>jne case.0x462f06.1<br>push 0x10<br>push 0<br>push edi<br>call fcn.0048e37b<br>add esp, 0xc<br>mov ecx, eax<br>call fcn.0042f740<br>mov dword[ebp+0x60], eax<br>jmp case.0x462f06.1<br>mov dword[ebp+0x60], 0xff000000<br>jmp case.0x462f06.1<br>cmp byte[esp+0x78], 0<br>je 0x4622db<br>and byte[esi+5], 0xdf<br>push str.Trans<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x4622d2<br>or byte[esi+5], 0x40<br>jmp case.0x462f06.1<br>and byte[esi+5], 0xbf<br>jmp case.0x462f06.1<br>mov al, byte[esi+5]<br>and al, 0xbf<br>or al, 0x20<br>mov byte[esi+5], al<br>jmp case.0x462f06.1<br>push str.Group<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>je 0x46208e<br>push str.Theme<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x46232d<br>mov cl, byte[esp+0x78]<br>mov byte[ebp+0x191], cl<br>jmp case.0x462f06.1<br>or dword[ebp+4], 0x20000<br>jmp case.0x462f06.1<br>push 4<br>push str.Hwnd<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x46235a<br>push 3<br>push eax<br>add edi, 8<br>push edi<br>mov ecx, 0x4c8640<br>call fcn.00421480<br>mov dword[ebp+0x1c], eax<br>jmp case.0x462f06.1<br>push 4<br>push str.Icon<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x4623b0<br>add edi, 8<br>cmp byte[esi+4], bl<br>jne 0x462396<br>push str.Small<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>neg eax<br>sbb eax, eax<br>and eax, 0xfffffffe<br>add eax, 2<br>mov dword[ebp+0x14], eax<br>jmp case.0x462f06.1<br>cmp byte[esp+0x78], 0<br>je case.0x462f06.1<br>mov esi, edi<br>call fcn.0040d260<br>mov dword[ebp+0x70], eax<br>jmp case.0x462f06.1<br>push str.Report<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x4623ce<br>mov dword[ebp+0x14], 1<br>jmp case.0x462f06.1<br>push str.List<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x4623ec<br>mov dword[ebp+0x14], 3<br>jmp case.0x462f06.1<br>push str.Tile<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x462416<br>cmp byte[0x4c92ca], al<br>je case.0x462f06.1<br>mov dword[ebp+0x14], 4<br>jmp case.0x462f06.1<br>cmp byte[esi+4], bl<br>jne 0x4624c9<br>push 0x4aaaa8<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x462447<br>cmp byte[esp+0x78], al<br>je 0x4627c8<br>or dword[ebp+4], 0x4000<br>jmp case.0x462f06.1<br>cmp byte[esi+4], bl<br>jne 0x4624c9<br>push 6<br>push str.NoSort<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x46249a<br>push 0x4aaaa8<br>add edi, 0xc<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x46248b<br>cmp byte[esp+0x78], al<br>je 0x461fec<br>or dword[ebp], 0x8000<br>jmp case.0x462f06.1<br>mov dl, byte[esp+0x78]<br>mov byte[ebp+0x192], dl<br>jmp case.0x462f06.1<br>cmp byte[esi+4], bl<br>jne 0x4624c9<br>push str.Grid<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x4624c9<br>cmp byte[esp+0x78], al<br>je 0x4624c0<br>or dword[ebp+0x10], 1<br>jmp case.0x462f06.1<br>and dword[ebp+0x10], 0xfffffffe<br>jmp case.0x462f06.1<br>push 5<br>push str.Count<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x4624ed<br>lea esi, [edi+0xa]<br>call fcn.0040d260<br>mov dword[ebp+0x64], eax<br>jmp case.0x462f06.1<br>push 2<br>push 0x4bc338<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x462539<br>push eax<br>push eax<br>push eax<br>push eax<br>lea eax, [edi+4]<br>call fcn.00473730<br>add esp, 0x10<br>test eax, eax<br>je case.0x462f06.1<br>lea esi, [edi+4]<br>call fcn.004130a0<br>cmp byte[esp+0x78], 0<br>je 0x46252f<br>or dword[ebp+0x10], eax<br>jmp case.0x462f06.1<br>not eax<br>and dword[ebp+0x10], eax<br>jmp case.0x462f06.1<br>push 9<br>push str.ImageList<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x462567<br>cmp byte[esp+0x78], al<br>je case.0x462f06.1<br>lea esi, [edi+0x12]<br>call fcn.004130a0<br>mov dword[ebp+0x18], eax<br>jmp case.0x462f06.1<br>cmp byte[esi+4], 4<br>jne 0x462593<br>push str.Default<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x462593<br>cmp byte[esp+0x78], 0<br>je case.0x462f06.11<br>or dword[ebp], 1<br>jmp case.0x462f06.1<br>cmp byte[esi+4], 5<br>jne 0x4625be<br>push str.Check3<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x4625be<br>cmp byte[esp+0x78], al<br>je 0x462ac8<br>or dword[ebp], 6<br>jmp case.0x462f06.1<br>push str.ReadOnly<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x462654<br>movzx eax, byte[esi+4]<br>add eax, 0xfffffff7<br>cmp eax, 3<br>ja case.0x462f06.1<br>jmp dword[eax*4+0x464018]<br>mov esi, dword[esi]<br>test esi, esi<br>je case.0x462676.9<br>movzx eax, byte[esp+0x78]<br>push 0<br>push eax<br>push 0xcf<br>push esi<br>call dword[sym.imp.USER32.dll_SendMessageW]<br>jmp case.0x462f06.1<br>cmp byte[esp+0x78], 0<br>je 0x46261d<br>or dword[ebp], 0x800<br>jmp case.0x462f06.1<br>or dword[ebp+4], 0x800<br>jmp case.0x462f06.1<br>cmp byte[esp+0x78], 0<br>je 0x462225<br>or dword[ebp+4], 0x200<br>jmp case.0x462f06.1<br>cmp byte[esp+0x78], 0<br>je 0x4627f8<br>or dword[ebp+4], 8<br>jmp case.0x462f06.1<br>push str.Multi<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x46269d<br>movzx eax, byte[esi+4]<br>add eax, 0xfffffff7<br>cmp eax, 5<br>ja case.0x462f06.1<br>jmp dword[eax*4+0x464028]<br>cmp byte[esp+0x78], 0<br>je 0x462694<br>or dword[ebp], 4<br>jmp case.0x462f06.1<br>cmp byte[esp+0x78], 0<br>je 0x462684<br>or dword[ebp+4], 4<br>jmp case.0x462f06.1<br>cmp byte[esi+4], 0xc<br>jne 0x462729<br>push str.WantReturn<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x4626d7<br>cmp byte[esp+0x78], al<br>je 0x4626cb<br>or dword[ebp], 0x1000<br>jmp case.0x462f06.1<br>or dword[ebp+4], 0x1000<br>jmp case.0x462f06.1<br>cmp byte[esi+4], 0xc<br>jne 0x462729<br>push str.WantTab<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x4626fe<br>cmp byte[esp+0x78], al<br>je 0x46274c<br>or byte[esi+5], 0x80<br>jmp case.0x462f06.1<br>cmp byte[esi+4], 0xc<br>jne 0x462729<br>push str.WantCtrlA<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x462729<br>cmp byte[esp+0x78], al<br>je 0x461e18<br>and byte[esi+5], 0xfd<br>jmp case.0x462f06.1<br>mov al, byte[esi+4]<br>cmp al, bl<br>je 0x462734<br>cmp al, 0xb<br>jne 0x462755<br>push str.WantF2<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x462755<br>cmp byte[esp+0x78], al<br>je 0x4626f5<br>and byte[esi+5], 0x7f<br>jmp case.0x462f06.1<br>cmp byte[esi+4], 0xc<br>jne 0x462784<br>push str.Number<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x462784<br>cmp byte[esp+0x78], 0<br>je 0x462816<br>or dword[ebp], 0x2000<br>jmp case.0x462f06.1<br>push str.Lowercase<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x4627d4<br>mov al, byte[esi+4]<br>cmp al, 0xc<br>jne 0x4627b1<br>cmp byte[esp+0x78], 0<br>je 0x462a1b<br>or dword[ebp], 0x10<br>jmp case.0x462f06.1<br>cmp al, 8<br>je case.0x4625e4.9<br>cmp al, 7<br>jne case.0x462f06.1<br>cmp byte[esp+0x78], 0<br>je 0x46243b<br>or dword[ebp], 0x4000<br>jmp case.0x462f06.1<br>push str.Uppercase<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x462822<br>mov al, byte[esi+4]<br>cmp al, 0xc<br>jne 0x462801<br>cmp byte[esp+0x78], 0<br>je case.0x462f06.16<br>or dword[ebp], 8<br>jmp case.0x462f06.1<br>cmp al, 8<br>je case.0x4621d3.3<br>cmp al, 7<br>jne case.0x462f06.1<br>jmp case.0x4621d3.3<br>or dword[ebp+4], 0x2000<br>jmp case.0x462f06.1<br>cmp byte[esi+4], 0xc<br>jne 0x4628ae<br>push 8<br>push str.Password<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x4628ae<br>mov cx, word[edi+0x10]<br>mov word[ebp+0x18c], cx<br>cmp byte[esp+0x78], al<br>je 0x46288b<br>or dword[ebp], 0x20<br>cmp dword[esi], eax<br>je case.0x462f06.1<br>test cx, cx<br>jne 0x46286e<br>mov edx, 0x2a<br>mov word[ebp+0x18c], dx<br>movzx eax, word[ebp+0x18c]<br>mov ecx, dword[esi]<br>push 0<br>push eax<br>push 0xcc<br>push ecx<br>call dword[sym.imp.USER32.dll_SendMessageW]<br>jmp case.0x462f06.1<br>or dword[ebp+4], 0x20<br>mov esi, dword[esi]<br>test esi, esi<br>je case.0x462f06.1<br>push 0<br>push 0<br>push 0xcc<br>push esi<br>call dword[sym.imp.USER32.dll_SendMessageW]<br>jmp case.0x462f06.1<br>push 5<br>push str.Limit<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x4628f5<br>cmp byte[esp+0x78], al<br>je 0x4628e9<br>add edi, ebx<br>cmp word[edi], ax<br>je 0x4628de<br>mov esi, edi<br>call fcn.0040d260<br>mov dword[ebp+0x64], eax<br>jmp case.0x462f06.1<br>or eax, 0xffffffff<br>mov dword[ebp+0x64], eax<br>jmp case.0x462f06.1<br>mov dword[ebp+0x64], 0x80000000<br>jmp case.0x462f06.1<br>cmp byte[esi+4], 8<br>jne 0x462920<br>push str.Simple<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x462920<br>cmp byte[esp+0x78], al<br>je case.0x462f06.11<br>or dword[ebp], 1<br>jmp case.0x462f06.1<br>push 4<br>push str.Sort<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x462992<br>movzx eax, byte[esi+4]<br>add eax, 0xfffffff9<br>cmp eax, 3<br>ja case.0x462f06.1<br>jmp dword[eax*4+0x464040]<br>cmp byte[esp+0x78], 0<br>je 0x462eed<br>or dword[ebp], 2<br>jmp case.0x462f06.1<br>cmp byte[esp+0x78], 0<br>je 0x462989<br>push str.Desc<br>add edi, 8<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>neg eax<br>sbb eax, eax<br>and eax, 0xfffffff0<br>add eax, 0x20<br>or dword[ebp], eax<br>jmp case.0x462f06.1<br>or dword[ebp+4], 0x30<br>jmp case.0x462f06.1<br>cmp byte[esi+4], 0x10<br>jne 0x4629c5<br>push str.Horz<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x4629c5<br>cmp byte[esp+0x78], al<br>je 0x462b37<br>mov edx, dword[ebp]<br>and edx, 0xffffffef<br>or edx, 0x40<br>mov dword[ebp], edx<br>jmp case.0x462f06.1<br>mov bl, 0x11<br>cmp byte[esi+4], bl<br>jne 0x462a67<br>push str.Invert<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x4629f5<br>cmp byte[esp+0x78], al<br>je 0x46274c<br>or byte[esi+5], 0x80<br>jmp case.0x462f06.1<br>cmp byte[esi+4], bl<br>jne 0x462a67<br>push str.NoTicks<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x462a24<br>cmp byte[esp+0x78], al<br>je 0x462a1b<br>or dword[ebp], 0x10<br>jmp case.0x462f06.1<br>or dword[ebp+4], 0x10<br>jmp case.0x462f06.1<br>cmp byte[esi+4], bl<br>jne 0x462a67<br>push 0xc<br>push str.TickInterval<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x462a67<br>cmp byte[esp+0x78], al<br>je 0x462a57<br>or dword[ebp], 1<br>lea esi, [edi+0x18]<br>call fcn.0040d260<br>mov dword[ebp+0x40], eax<br>jmp case.0x462f06.1<br>or dword[ebp+4], 1<br>mov dword[ebp+0x40], 0xffffffff<br>jmp case.0x462f06.1<br>push 4<br>push str.Line<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x462ad1<br>mov al, byte[esi+4]<br>cmp al, bl<br>jne 0x462a9d<br>cmp byte[esp+0x78], 0<br>je case.0x462f06.1<br>lea esi, [edi+8]<br>call fcn.0040d260<br>mov dword[ebp+0x44], eax<br>jmp case.0x462f06.1<br>cmp al, 0xb<br>jne case.0x462f06.1<br>mov ax, word[edi+8]<br>call fcn.004095a0<br>cmp ax, 0x53<br>jne case.0x462f06.1<br>cmp byte[esp+0x78], 0<br>je 0x462ac8<br>or dword[ebp], 6<br>jmp case.0x462f06.1<br>or dword[ebp+4], 6<br>jmp case.0x462f06.1<br>cmp byte[esi+4], bl<br>jne 0x462b40<br>push 4<br>push str.Page<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x462b04<br>cmp byte[esp+0x78], al<br>je case.0x462f06.1<br>lea esi, [edi+8]<br>call fcn.0040d260<br>mov dword[ebp+0x48], eax<br>jmp case.0x462f06.1<br>cmp byte[esi+4], bl<br>jne 0x462b40<br>push 5<br>push str.Thick<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x462b40<br>cmp byte[esp+0x78], al<br>je 0x462b37<br>or dword[ebp], 0x40<br>lea esi, [edi+0xa]<br>call fcn.0040d260<br>mov dword[ebp+0x4c], eax<br>jmp case.0x462f06.1<br>or dword[ebp+4], 0x40<br>jmp case.0x462f06.1<br>push 7<br>push str.ToolTip<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x462be0<br>cmp byte[esi+4], bl<br>jne case.0x462f06.1<br>cmp byte[esp+0x78], al<br>je 0x46314c<br>mov dword[ebp+0x50], 0xffffffff<br>mov ax, word[edi+0xe]<br>call fcn.004095a0<br>movzx eax, ax<br>add eax, 0xffffffbe<br>cmp eax, 0x12<br>ja case.0x462b8d.67<br>movzx eax, byte[eax+0x464064]<br>jmp dword[eax*4+0x464050]<br>mov dword[ebp+0x50], 0<br>jmp case.0x462b8d.67<br>mov dword[ebp+0x50], 1<br>jmp case.0x462b8d.67<br>mov dword[ebp+0x50], 2<br>jmp case.0x462b8d.67<br>mov dword[ebp+0x50], 3<br>mov eax, dword[ebp+0x50]<br>test eax, eax<br>jns 0x462bd0<br>or dword[ebp], 0x100<br>mov dword[ebp+0x50], 0<br>jmp case.0x462f06.1<br>inc eax<br>or dword[ebp], 0x100<br>mov dword[ebp+0x50], eax<br>jmp case.0x462f06.1<br>cmp byte[esi+4], bl<br>jne 0x462c85<br>push 5<br>push str.Buddy<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x462c85<br>cmp byte[esp+0x78], al<br>je case.0x462f06.1<br>movzx ebx, word[edi+0xa]<br>test bx, bx<br>je case.0x462f06.1<br>push eax<br>push 1<br>push eax<br>push eax<br>add edi, 0xc<br>push edi<br>mov ecx, 0x4c8640<br>call fcn.004214e0<br>test eax, eax<br>je case.0x462f06.1<br>cmp byte[eax+0x17], 0<br>jne 0x462c3c<br>mov eax, dword[eax+0xc]<br>test byte[eax+0x16], 2<br>jne case.0x462f06.1<br>mov edi, dword[esp+0x74]<br>mov ecx, dword[edi+0x10]<br>lea edx, [ecx-1]<br>cmp edx, ecx<br>jae case.0x462f06.1<br>lea esi, [edx+edx*4]<br>add esi, esi<br>add esi, esi<br>nop <br>mov ecx, dword[edi+0x18]<br>add ecx, esi<br>cmp dword[ecx+8], eax<br>jne 0x462c77<br>cmp ebx, 0x31<br>jne 0x462c74<br>mov dword[ebp+0x54], ecx<br>jmp 0x462c77<br>mov dword[ebp+0x58], ecx<br>dec edx<br>sub esi, 0x14<br>cmp edx, dword[edi+0x10]<br>jb 0x462c60<br>jmp case.0x462f06.1<br>push str.Vertical<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x462cce<br>mov al, byte[esi+4]<br>cmp al, bl<br>jne 0x462cb2<br>cmp byte[esp+0x78], 0<br>je 0x462eed<br>or dword[ebp], 2<br>jmp case.0x462f06.1<br>cmp al, 0x12<br>jne case.0x462f06.1<br>cmp byte[esp+0x78], 0<br>je 0x462694<br>or dword[ebp], 4<br>jmp case.0x462f06.1<br>push 5<br>push str.Range<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x462d87<br>cmp byte[esp+0x78], al<br>je case.0x462f06.1<br>cmp word[edi+0xa], ax<br>je case.0x462f06.1<br>mov al, byte[esi+4]<br>cmp al, 0xd<br>je 0x462d3d<br>cmp al, 0xe<br>je 0x462d3d<br>lea esi, [edi+0xa]<br>mov byte[ebp+0x18e], 1<br>call fcn.0040d260<br>push 0x2d<br>add edi, 0xc<br>push edi<br>mov dword[ebp+0x38], eax<br>call fcn.0048db21<br>add esp, 8<br>test eax, eax<br>je case.0x462f06.1<br>lea esi, [eax+2]<br>call fcn.0040d260<br>mov dword[ebp+0x3c], eax<br>jmp case.0x462f06.1<br>lea ebx, [ebp+0x160]<br>mov eax, ebx<br>lea ecx, [edi+0xa]<br>call fcn.00473320<br>mov dword[ebp+0x184], eax<br>test eax, eax<br>je case.0x462f06.1<br>mov ecx, dword[esi]<br>test ecx, ecx<br>je case.0x462f06.1<br>xor edx, edx<br>cmp byte[esi+4], 0xd<br>push ebx<br>setne dl<br>push eax<br>dec edx<br>and edx, 0xfffffff2<br>add edx, 0x1012<br>push edx<br>push ecx<br>call dword[sym.imp.USER32.dll_SendMessageW]<br>jmp case.0x462f06.1<br>cmp byte[esi+4], 0x12<br>jne 0x462db2<br>push str.Smooth<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x462db2<br>cmp byte[esp+0x78], al<br>je case.0x462f06.11<br>or dword[ebp], 1<br>jmp case.0x462f06.1<br>push str.Buttons<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x462dfe<br>mov al, byte[esi+4]<br>cmp al, 0x13<br>jne 0x462de2<br>cmp byte[esp+0x78], 0<br>je 0x46314c<br>or dword[ebp], 0x100<br>jmp case.0x462f06.1<br>cmp al, 0xb<br>jne case.0x462f06.1<br>cmp byte[esp+0x78], 0<br>je case.0x462f06.11<br>or dword[ebp], 1<br>jmp case.0x462f06.1<br>cmp byte[esi+4], 0x13<br>jne 0x462e30<br>push str.Bottom<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x462e30<br>cmp byte[esp+0x78], al<br>je 0x462eed<br>or dword[ebp], 2<br>or dword[ebp+4], 0x80<br>jmp case.0x462f06.1<br>cmp byte[esi+4], 0x17<br>jne 0x462e8a<br>push 5<br>push str.Class<br>push edi<br>call fcn.0048d597<br>add esp, 0xc<br>test eax, eax<br>jne 0x462e8a<br>mov ecx, dword[0x4c64b0]<br>lea eax, [esp+0x40]<br>push eax<br>add edi, 0xa<br>push edi<br>push ecx<br>call dword[sym.imp.USER32.dll_GetClassInfoExW]<br>mov word[ebp+0x194], ax<br>test ax, ax<br>jne case.0x462f06.1<br>push edi<br>push str.Unregistered_window_class.<br>mov ecx, 0x4c8640<br>call fcn.0042e1d0<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0x60<br>ret 0x14<br>push str.Center<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x462f58<br>movzx eax, byte[esi+4]<br>dec eax<br>cmp byte[esp+0x78], 0<br>je 0x462ef6<br>cmp eax, 0x10<br>ja case.0x462f06.1<br>movzx edx, byte[eax+0x46408c]<br>jmp dword[edx*4+0x464078]<br>or dword[ebp+4], 2<br>jmp case.0x462f06.1<br>cmp eax, 0x10<br>ja case.0x462f06.1<br>movzx eax, byte[eax+0x4640b4]<br>jmp dword[eax*4+0x4640a0]<br>push str.Right<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x463080<br>movzx eax, byte[esi+4]<br>dec eax<br>cmp byte[esp+0x78], 0<br>je 0x462ff8<br>cmp eax, 0x15<br>ja case.0x462f06.1<br>or dword[ebp+4], 1<br>jmp case.0x462f06.1<br>cmp eax, 0x12<br>ja case.0x462f06.1<br>push str.Left<br>push edi<br>call fcn.0048cd49<br>add esp, 8<br>test eax, eax<br>jne 0x46317c<br>cmp byte[esp+0x78], 0<br>movzx eax, byte[esi+4]<br>je 0x46310a<br>or dword[ebp+4], 0x100<br>jmp case.0x462f06.1<br>push 0<br>push 0<br>push 1<br>push 0<br>mov eax, edi<br>call fcn.00473730<br>add esp, 0x10<br>test eax, eax<br>je 0x4631c8<br>mov ecx, dword[esp+0x14]<br>mov ax, word[esp+0x1c]<br>mov word[ecx], ax<br>mov eax, dword[esp+0x14]<br>mov edi, eax<br>mov edi, edi<br>movzx eax, word[edi]<br>cmp eax, 0x20<br>je 0x46393d<br>cmp eax, 9<br>jne 0x463942<br>add edi, 2<br>jmp 0x463930<br>cmp word[edi], 0<br>jne 0x461d66<br>mov esi, dword[esp+0x7c]<br>mov eax, dword[esi]<br>test eax, eax<br>je 0x463fc3<br>push 0xfffffffffffffff0<br>push eax<br>call dword[sym.imp.USER32.dll_GetWindowLongW]<br>mov edx, dword[ebp+4]<br>mov ecx, dword[ebp]<br>mov ebx, eax<br>mov dword[esp+0x78], eax<br>mov eax, edx<br>not eax<br>or ebx, ecx<br>and ebx, eax<br>movzx eax, byte[esi+4]<br>add eax, 0xfffffffe<br>cmp eax, 8<br>ja case.0x463987.9<br>jmp dword[eax*4+0x4641c8]<br>mov ecx, ebx<br>xor ecx, dword[esp+0x78]<br>and ecx, 0xf<br>xor ebx, ecx<br>mov edi, dword[sym.imp.USER32.dll_SendMessageW]<br>mov eax, dword[ebp+0x64]<br>test eax, eax<br>je 0x463c3a<br>mov cl, byte[esi+4]<br>cmp cl, 0xc<br>jne 0x463c16<br>push 0<br>test eax, eax<br>jns 0x463c0b<br>mov eax, dword[esi]<br>push 0<br>push 0xc5<br>push eax<br>call edi<br>cmp dword[ebp+0x64], 0x80000000<br>je 0x463c3a<br>test bl, 4<br>jne 0x463c3a<br>and ebx, 0xffefff7f<br>jmp 0x463c3a<br>and ebx, 0xfffffff7<br>or ebx, 7<br>jmp case.0x463987.9<br>test bl, 1<br>je 0x463ac1<br>and ebx, 0xfffffff1<br>or ebx, 1<br>jmp 0x463ac4<br>and ebx, 0xfffffff0<br>mov edi, dword[esp+0x74]<br>mov eax, dword[edi+0x1c]<br>cmp dword[esp+0x80], eax<br>jne 0x463b05<br>test dl, 1<br>je case.0x463987.9<br>push 0<br>mov eax, edi<br>mov edx, dword[eax+4]<br>mov edi, dword[sym.imp.USER32.dll_SendMessageW]<br>push 1<br>push 0x401<br>push edx<br>mov dword[eax+0x1c], 0xffffffff<br>call edi<br>or dword[esp+0x78], 1<br>jmp 0x463a5e<br>test cl, 1<br>je case.0x463987.9<br>cmp eax, dword[edi+0x10]<br>jae 0x463b49<br>mov ecx, dword[edi+0x18]<br>push 1<br>lea eax, [eax+eax*4]<br>mov edx, dword[ecx+eax*4]<br>push 0xfffffffffffffff0<br>push edx<br>call dword[sym.imp.USER32.dll_GetWindowLongW]<br>mov ecx, dword[edi+0x18]<br>and eax, 0xfffe<br>push eax<br>mov eax, dword[edi+0x1c]<br>mov edi, dword[sym.imp.USER32.dll_SendMessageW]<br>lea eax, [eax+eax*4]<br>mov edx, dword[ecx+eax*4]<br>push 0xf4<br>push edx<br>call edi<br>jmp 0x463b4f<br>mov edi, dword[sym.imp.USER32.dll_SendMessageW]<br>mov ecx, dword[esp+0x74]<br>mov eax, dword[esp+0x80]<br>mov dword[ecx+0x1c], eax<br>push 0<br>add eax, 3<br>push eax<br>mov eax, dword[ecx+4]<br>push 0x401<br>push eax<br>call edi<br>jmp 0x463a5e<br>mov edi, dword[sym.imp.USER32.dll_SendMessageW]<br>mov ecx, ebx<br>and ecx, 6<br>cmp cl, 6<br>jne 0x463b8e<br>and ebx, 0xfffffff6<br>or ebx, 6<br>jmp 0x463a5e<br>and ebx, 0xfffffff3<br>or ebx, 3<br>jmp 0x463a5e<br>and ebx, 0xfffffff9<br>or ebx, 9<br>jmp case.0x463987.9<br>or ebx, 3<br>jmp case.0x463987.9<br>mov edi, dword[sym.imp.USER32.dll_SendMessageW]<br>test bl, 1<br>je 0x463bc2<br>and ebx, 0xfffffff1<br>or ebx, 1<br>jmp 0x463a5e<br>and ebx, 0xfffffff2<br>or ebx, 2<br>jmp 0x463a5e<br>mov eax, dword[ebp+0x14]<br>cmp eax, 0xffffffff<br>je case.0x463987.9<br>cmp byte[0x4c92ca], 0<br>mov edi, dword[sym.imp.USER32.dll_SendMessageW]<br>je 0x463bf5<br>mov edx, dword[esi]<br>push 0<br>push eax<br>push 0x108e<br>push edx<br>call edi<br>mov eax, dword[ebp+0x14]<br>cmp eax, 4<br>je 0x463a5e<br>and ebx, 0xfffffffc<br>or ebx, eax<br>jmp 0x463a5e<br>mov ecx, dword[esi]<br>push eax<br>push 0xc5<br>push ecx<br>jmp 0x463c38<br>cmp cl, 0xf<br>jne 0x463c3a<br>test eax, eax<br>jns 0x463c2d<br>mov edx, dword[esi]<br>push 0<br>push 0<br>push 0x403<br>push edx<br>jmp 0x463c38<br>push 6<br>push eax<br>mov eax, dword[esi]<br>push 0x403<br>push eax<br>call edi<br>mov ecx, dword[esp+0x78]<br>mov byte[esp+0x7c], 0<br>cmp ecx, ebx<br>je 0x463d22<br>mov al, byte[esi+4]<br>mov byte[esp+0x7c], 1<br>mov byte[esp+0x84], 0<br>cmp al, 4<br>je 0x463cd7<br>cmp al, 9<br>je 0x463c7f<br>cmp al, 0x12<br>jne 0x463ce7<br>mov ecx, dword[esi]<br>push 0<br>push 0<br>push 0x408<br>push ecx<br>call edi<br>mov dword[esp+0x18], eax<br>jmp 0x463ce7<br>mov eax, ebx<br>and eax, 0x100000<br>je 0x463cbf<br>test ecx, 0x100000<br>jne 0x463cbf<br>cmp dword[ebp+0x68], 0<br>jge 0x463cb2<br>mov eax, dword[esi]<br>lea edx, [esp+0x30]<br>push edx<br>push eax<br>call dword[sym.imp.USER32.dll_GetWindowRect]<br>mov eax, dword[esp+0x38]<br>sub eax, dword[esp+0x30]<br>lea ecx, [eax+eax*2]<br>mov dword[ebp+0x68], ecx<br>mov edx, dword[ebp+0x68]<br>push 0<br>push edx<br>push 0x194<br>jmp 0x463ce2<br>test eax, eax<br>jne 0x463ce7<br>test ecx, 0x100000<br>je 0x463ce7<br>mov ecx, dword[esi]<br>push eax<br>push eax<br>push 0x194<br>push ecx<br>jmp 0x463ce5<br>movzx edx, bx<br>push 1<br>push edx<br>push 0xf4<br>mov eax, dword[esi]<br>push eax<br>call edi<br>push 0<br>call dword[sym.imp.KERNEL32.dll_SetLastError]<br>mov ecx, dword[esi]<br>push ebx<br>push 0xfffffffffffffff0<br>push ecx<br>call dword[sym.imp.USER32.dll_SetWindowLongW]<br>test eax, eax<br>jne 0x463d09<br>call dword[sym.imp.KERNEL32.dll_GetLastError]<br>test eax, eax<br>jne 0x463d22<br>mov edx, dword[esi]<br>push 0xfffffffffffffff0<br>push edx<br>call dword[sym.imp.USER32.dll_GetWindowLongW]<br>cmp eax, dword[esp+0x78]<br>je 0x463d22<br>mov byte[esp+0x84], 1<br>mov eax, dword[esi]<br>push 0xffffffffffffffec<br>push eax<br>call dword[sym.imp.USER32.dll_GetWindowLongW]<br>mov ecx, dword[ebp+8]<br>mov edx, dword[ebp+0xc]<br>or ecx, eax<br>not edx<br>and ecx, edx<br>mov dword[esp+0x1c], eax<br>mov dword[esp+0x80], ecx<br>cmp eax, ecx<br>je 0x463d9e<br>cmp byte[esp+0x7c], 0<br>jne 0x463d5c<br>mov byte[esp+0x7c], 1<br>mov byte[esp+0x84], 0<br>push 0<br>call dword[sym.imp.KERNEL32.dll_SetLastError]<br>mov eax, dword[esp+0x80]<br>mov ecx, dword[esi]<br>push eax<br>push 0xffffffffffffffec<br>push ecx<br>call dword[sym.imp.USER32.dll_SetWindowLongW]<br>test eax, eax<br>jne 0x463d85<br>call dword[sym.imp.KERNEL32.dll_GetLastError]<br>test eax, eax<br>jne 0x463d9e<br>mov edx, dword[esi]<br>push 0xffffffffffffffec<br>push edx<br>call dword[sym.imp.USER32.dll_GetWindowLongW]<br>cmp eax, dword[esp+0x1c]<br>je 0x463d9e<br>mov byte[esp+0x84], 1<br>cmp byte[esi+4], 0xa<br>jne 0x463e00<br>mov eax, dword[esi]<br>push 0<br>push 0<br>push 0x1037<br>push eax<br>call edi<br>mov ecx, dword[ebp+0x10]<br>mov dword[esp+0x80], eax<br>cmp eax, ecx<br>je 0x463e00<br>cmp byte[esp+0x7c], 0<br>jne 0x463dd4<br>mov byte[esp+0x7c], 1<br>mov byte[esp+0x84], 0<br>push ecx<br>mov ecx, dword[esi]<br>push 0<br>push 0x1036<br>push ecx<br>call edi<br>mov edx, dword[esi]<br>push 0<br>push 0<br>push 0x1037<br>push edx<br>call edi<br>cmp eax, dword[esp+0x80]<br>je 0x463e00<br>mov byte[esp+0x84], 1<br>cmp byte[esp+0x7c], 0<br>je 0x463e19<br>cmp byte[esp+0x84], 0<br>mov byte[esp+0x80], 1<br>jne 0x463e21<br>mov byte[esp+0x80], 0<br>movzx eax, byte[esi+4]<br>add eax, 0xfffffff7<br>cmp eax, 0xf<br>ja case.0x463e38.13<br>movzx eax, byte[eax+0x464210]<br>jmp dword[eax*4+0x4641ec]<br>cmp byte[ebp+0x18e], 0<br>je case.0x463e38.13<br>mov ecx, ebp<br>mov eax, esi<br>call fcn.00468160<br>jmp case.0x463e38.13<br>mov eax, ebp<br>call fcn.00468240<br>test dword[ebp+4], 0x100<br>je case.0x463e38.13<br>mov ecx, dword[esi]<br>push 0<br>push 0<br>push 0x41d<br>push ecx<br>call dword[sym.imp.USER32.dll_SendMessageW]<br>jmp case.0x463e38.13<br>mov eax, ebp<br>mov edi, esi<br>call fcn.00468320<br>jmp case.0x463e38.13<br>mov edi, ebp<br>call fcn.004683d0<br>jmp case.0x463e38.13<br>mov edx, dword[esp+0x74]<br>push ebx<br>push edx<br>mov eax, ebp<br>mov ecx, esi<br>call fcn.00468420<br>cmp dword[esp+0x78], ebx<br>je case.0x463e38.13<br>mov eax, dword[esp+0x18]<br>mov ecx, dword[esi]<br>push 0<br>push eax<br>push 0x402<br>push ecx<br>jmp 0x463f1e<br>mov eax, dword[ebp+0x13c]<br>test eax, eax<br>je case.0x463e38.13<br>lea edx, [ebp+0x74]<br>push edx<br>push eax<br>mov eax, dword[esi]<br>push 0xcb<br>push eax<br>call edi<br>mov byte[esp+0x80], 1<br>jmp case.0x463e38.13<br>mov eax, dword[ebp+0x13c]<br>test eax, eax<br>je case.0x463e38.13<br>mov edx, dword[esi]<br>lea ecx, [ebp+0x74]<br>push ecx<br>push eax<br>push 0x192<br>push edx<br>call edi<br>mov byte[esp+0x80], 1<br>jmp case.0x463e38.13<br>mov eax, dword[ebp+0x60]<br>cmp eax, 0xffffffff<br>je case.0x463e38.13<br>push eax<br>mov eax, dword[esi]<br>push 0<br>push 0x2001<br>push eax<br>call edi<br>mov eax, dword[ebp+0x188]<br>test eax, eax<br>je 0x463f4f<br>mov edx, dword[esi]<br>xor ecx, ecx<br>cmp eax, 3<br>sete cl<br>push 0<br>push ecx<br>push 0xb<br>push edx<br>call dword[sym.imp.USER32.dll_SendMessageW]<br>cmp dword[ebp+0x188], 3<br>jne 0x463f4f<br>cmp byte[esi+4], 0xb<br>jne 0x463f59<br>cmp byte[esp+0x80], 0<br>je 0x463f66<br>mov eax, dword[esi]<br>push 1<br>push 0<br>push eax<br>call dword[sym.imp.USER32.dll_InvalidateRect]<br>cmp byte[esp+0x7c], 0<br>je 0x463fc3<br>cmp byte[esp+0x84], 0<br>jne 0x463fc3<br>mov ecx, dword[0x4c28ec]<br>cmp byte[ecx+0x104], 0<br>jne 0x463fac<br>mov edx, dword[0x4c6cb4]<br>push 1<br>push 0<br>push 0xffffffffffffffff<br>push 0x4a331c<br>push edx<br>call fcn.00476680<br>mov eax, 1<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0x60<br>ret 0x14<br>mov ecx, dword[0x4c8c70]<br>push 0x4ab02c<br>push 0<br>push 0x4a331c<br>call fcn.0042dc50<br>pop edi<br>pop esi<br>pop ebp<br>mov eax, 1<br>pop ebx<br>add esp, 0x60<br>ret 0x14<br><eoc> ', 'point { fill-color: #e0440e; }'],
[-949.8718872070312, 695.7490234375, '<b><a href="/report/fcn.004519f0@4fe6510221c33bf023f6abed461fc13f">fcn.004519f0</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>sub esp, 0x5c<br>push ebx<br>push ebp<br>push esi<br>push edi<br>mov esi, edx<br>mov ebx, ecx<br>call fcn.00450bc0<br>mov ebp, eax<br>test ebp, ebp<br>je 0x45210d<br>mov eax, dword[esp+0x7c]<br>mov ecx, dword[esp+0x84]<br>mov edx, dword[esp+0x78]<br>push eax<br>mov eax, dword[esp+0x84]<br>call fcn.00443160<br>mov dword[esp+0x7c], eax<br>test eax, eax<br>je 0x45210d<br>mov esi, dword[esp+0x74]<br>mov ecx, eax<br>push ecx<br>call fcn.00478020<br>mov edi, eax<br>add esp, 4<br>test edi, edi<br>je 0x45210d<br>lea eax, [ebp-1]<br>cmp eax, 0x10<br>ja case.default.0x451a57<br>jmp dword[eax*4+0x45215c]<br>lea edx, [esp+0x14]<br>push edx<br>push 0x7d0<br>push 2<br>push 0<br>push 0<br>push 0xf0<br>push edi<br>call dword[sym.imp.USER32.dll_SendMessageTimeoutW]<br>test eax, eax<br>je 0x45210d<br>xor eax, eax<br>cmp ebp, 1<br>sete al<br>cmp dword[esp+0x14], eax<br>je case.default.0x451a57<br>mov ecx, dword[esp+0x7c]<br>push 0<br>push ecx<br>xor bl, bl<br>call dword[sym.imp.USER32.dll_GetWindowThreadProcessId]<br>mov ebp, eax<br>mov dword[esp+0x74], ebp<br>test ebp, ebp<br>je 0x451ad7<br>cmp ebp, dword[0x4c85cc]<br>je 0x451ad7<br>mov esi, dword[esp+0x7c]<br>call fcn.00478540<br>test al, al<br>jne 0x451ad7<br>mov edx, dword[0x4c85cc]<br>push 1<br>push ebp<br>push edx<br>call dword[sym.imp.USER32.dll_AttachThreadInput]<br>test eax, eax<br>setne bl<br>mov eax, dword[esp+0x7c]<br>cmp eax, edi<br>jne 0x451ae6<br>mov eax, edi<br>call fcn.004784d0<br>push eax<br>call dword[sym.imp.USER32.dll_SetActiveWindow]<br>lea eax, [esp+0x18]<br>push eax<br>push edi<br>call dword[sym.imp.USER32.dll_GetWindowRect]<br>test eax, eax<br>jne 0x451b0d<br>mov dword[esp+0x1c], eax<br>mov dword[esp+0x20], eax<br>mov dword[esp+0x18], eax<br>mov dword[esp+0x24], eax<br>mov eax, dword[esp+0x24]<br>sub eax, dword[esp+0x1c]<br>mov ebp, dword[sym.imp.USER32.dll_PostMessageW]<br>cdq <br>sub eax, edx<br>sar eax, 1<br>movzx esi, ax<br>mov eax, dword[esp+0x20]<br>sub eax, dword[esp+0x18]<br>shl esi, 0x10<br>cdq <br>sub eax, edx<br>sar eax, 1<br>movzx ecx, ax<br>or esi, ecx<br>push esi<br>push 1<br>push 0x201<br>push edi<br>call ebp<br>push esi<br>push 0<br>push 0x202<br>push edi<br>call ebp<br>test bl, bl<br>je case.default.0x451a57<br>mov edx, dword[esp+0x74]<br>mov eax, dword[0x4c85cc]<br>push 0<br>push edx<br>push eax<br>call dword[sym.imp.USER32.dll_AttachThreadInput]<br>jmp case.default.0x451a57<br>push 1<br>push edi<br>call dword[sym.imp.USER32.dll_EnableWindow]<br>mov eax, dword[0x4c28ec]<br>mov eax, dword[eax+0x58]<br>cmp eax, 0xffffffff<br>jle 0x451b88<br>push 1<br>push eax<br>call fcn.00401340<br>add esp, 8<br>mov ecx, dword[0x4c6cb4]<br>push 1<br>push 0<br>push 0xffffffffffffffff<br>push 0x4a0900<br>push ecx<br>call fcn.00476680<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0x5c<br>ret 0x18<br>push 0<br>jmp 0x451b69<br>push 4<br>push edi<br>call dword[sym.imp.USER32.dll_ShowWindow]<br>jmp case.default.0x451a57<br>push 0<br>push edi<br>call dword[sym.imp.USER32.dll_ShowWindow]<br>jmp case.default.0x451a57<br>cmp word[ebx], 0<br>jne 0x451bd8<br>mov eax, 1<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0x5c<br>ret 0x18<br>xor eax, eax<br>cmp ebp, 7<br>sete al<br>lea eax, [eax*4-0x14]<br>push eax<br>push edi<br>mov dword[esp+0x7c], eax<br>call dword[sym.imp.USER32.dll_GetWindowLongW]<br>movzx ecx, word[ebx]<br>push ecx<br>push 0x4a9af0<br>mov ebp, eax<br>call fcn.0048db21<br>add esp, 8<br>test eax, eax<br>jne 0x451c15<br>mov esi, ebx<br>call fcn.004130a0<br>mov esi, eax<br>jmp 0x451c47<br>lea esi, [ebx+2]<br>call fcn.004130a0<br>movzx ecx, word[ebx]<br>sub ecx, 0x2b<br>je 0x451c3d<br>sub ecx, 2<br>je 0x451c35<br>sub ecx, 0x31<br>jne 0x451c43<br>xor eax, ebp<br>mov esi, eax<br>jmp 0x451c47<br>not eax<br>and eax, ebp<br>mov esi, eax<br>jmp 0x451c47<br>or eax, ebp<br>mov esi, eax<br>jmp 0x451c47<br>mov esi, dword[esp+0x74]<br>cmp esi, ebp<br>jne 0x451c6c<br>mov edx, dword[0x4c6cb4]<br>push 1<br>push 0<br>push 0xffffffffffffffff<br>push 0x4a0900<br>push edx<br>call fcn.00476680<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0x5c<br>ret 0x18<br>push 0<br>call dword[sym.imp.KERNEL32.dll_SetLastError]<br>push esi<br>mov esi, dword[esp+0x78]<br>push esi<br>push edi<br>call dword[sym.imp.USER32.dll_SetWindowLongW]<br>test eax, eax<br>jne 0x451c93<br>call dword[sym.imp.KERNEL32.dll_GetLastError]<br>test eax, eax<br>jne 0x45210d<br>push esi<br>push edi<br>call dword[sym.imp.USER32.dll_GetWindowLongW]<br>cmp eax, ebp<br>je 0x45210d<br>push 1<br>push 0<br>push edi<br>call dword[sym.imp.USER32.dll_InvalidateRect]<br>mov eax, dword[0x4c6cb4]<br>push 1<br>push 0<br>push 0xffffffffffffffff<br>push 0x4a0900<br>push eax<br>call fcn.00476680<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0x5c<br>ret 0x18<br>xor edx, edx<br>lea ecx, [esp+0x14]<br>push ecx<br>push 0x7d0<br>cmp ebp, 9<br>sete dl<br>push 2<br>push 0<br>push edx<br>push 0x14f<br>push edi<br>call dword[sym.imp.USER32.dll_SendMessageTimeoutW]<br>test eax, eax<br>je 0x45210d<br>jmp case.default.0x451a57<br>cmp word[ebx], 0<br>je 0x451d13<br>mov esi, ebx<br>call fcn.0040d260<br>mov esi, eax<br>mov dword[esp+0x7c], eax<br>jmp 0x451d1c<br>mov esi, 1<br>mov dword[esp+0x7c], esi<br>cmp ebp, 0xb<br>setne al<br>xor bl, bl<br>lea eax, [eax+eax+0x25]<br>mov byte[esp+0x74], al<br>mov eax, dword[esp+0x74]<br>push eax<br>call fcn.00412700<br>movzx eax, ax<br>add esp, 4<br>shl eax, 0x10<br>test esi, esi<br>jle case.default.0x451a57<br>mov ecx, dword[esp+0x7c]<br>movzx esi, byte[esp+0x74]<br>mov ebx, dword[sym.imp.USER32.dll_PostMessageW]<br>mov ebp, eax<br>or ebp, 1<br>or eax, 0xc0000001<br>mov dword[esp+0x84], eax<br>mov dword[esp+0x74], ecx<br>jmp 0x451d70<br>push ebp<br>push esi<br>push 0x100<br>push edi<br>call ebx<br>push 1<br>push 0<br>mov dword[0x4c28b4], 0<br>call fcn.00401340<br>mov edx, dword[esp+0x8c]<br>add esp, 8<br>push edx<br>push esi<br>push 0x101<br>push edi<br>mov dword[0x4c28b4], 1<br>call ebx<br>dec dword[esp+0x74]<br>jne 0x451d70<br>jmp case.default.0x451a57<br>cmp word[esi], 0<br>jne 0x451dce<br>push 0x20<br>lea eax, [esp+0x2c]<br>push eax<br>push edi<br>call dword[sym.imp.USER32.dll_GetClassNameW]<br>lea esi, [esp+0x28]<br>mov eax, 0x4aae64<br>mov ecx, esi<br>call fcn.00473c80<br>test eax, eax<br>je 0x451de5<br>mov eax, 0x143<br>jmp 0x451dfe<br>mov eax, str.List<br>mov ecx, esi<br>call fcn.00473c80<br>test eax, eax<br>je 0x45210d<br>mov eax, 0x180<br>lea ecx, [esp+0x14]<br>push ecx<br>push 0x7d0<br>push 2<br>push ebx<br>push 0<br>push eax<br>push edi<br>call dword[sym.imp.USER32.dll_SendMessageTimeoutW]<br>test eax, eax<br>je 0x45210d<br>mov eax, dword[esp+0x14]<br>cmp eax, 0xffffffff<br>je 0x45210d<br>cmp eax, 0xfffffffe<br>jmp 0x452107<br>cmp word[ebx], 0<br>je 0x45210d<br>mov esi, ebx<br>call fcn.0040d260<br>mov esi, eax<br>dec esi<br>js 0x45210d<br>mov ebx, dword[esp+0x74]<br>cmp word[ebx], 0<br>jne 0x451e68<br>push 0x20<br>lea edx, [esp+0x2c]<br>push edx<br>push edi<br>call dword[sym.imp.USER32.dll_GetClassNameW]<br>lea ebx, [esp+0x28]<br>mov eax, 0x4aae64<br>mov ecx, ebx<br>call fcn.00473c80<br>test eax, eax<br>je 0x451e7f<br>mov eax, 0x144<br>jmp 0x451e98<br>mov eax, str.List<br>mov ecx, ebx<br>call fcn.00473c80<br>test eax, eax<br>je 0x45210d<br>mov eax, 0x182<br>lea ecx, [esp+0x14]<br>push ecx<br>push 0x7d0<br>push 2<br>push 0<br>push esi<br>push eax<br>push edi<br>call dword[sym.imp.USER32.dll_SendMessageTimeoutW]<br>test eax, eax<br>je 0x45210d<br>cmp dword[esp+0x14], 0xffffffff<br>je 0x45210d<br>jmp case.default.0x451a57<br>cmp word[ebx], 0<br>je 0x45210d<br>mov esi, ebx<br>call fcn.0040d260<br>mov esi, eax<br>dec esi<br>js 0x45210d<br>mov ebx, dword[esp+0x74]<br>cmp word[ebx], 0<br>jne 0x451efd<br>push 0x20<br>lea edx, [esp+0x2c]<br>push edx<br>push edi<br>call dword[sym.imp.USER32.dll_GetClassNameW]<br>lea ebx, [esp+0x28]<br>mov eax, 0x4aae64<br>mov ecx, ebx<br>call fcn.00473c80<br>test eax, eax<br>je 0x451fbf<br>mov eax, 0x14e<br>mov dword[esp+0x74], 9<br>lea ecx, [esp+0x14]<br>push ecx<br>push 0x7d0<br>push 2<br>push 0<br>push esi<br>push eax<br>mov esi, dword[sym.imp.USER32.dll_SendMessageTimeoutW]<br>push edi<br>call esi<br>test eax, eax<br>je 0x45210d<br>cmp dword[esp+0x14], 0xffffffff<br>je 0x45210d<br>push edi<br>call dword[sym.imp.USER32.dll_GetParent]<br>mov ebp, eax<br>test ebp, ebp<br>je 0x45210d<br>push edi<br>call dword[sym.imp.USER32.dll_GetDlgCtrlID]<br>test eax, eax<br>je 0x45210d<br>lea edx, [esp+0x14]<br>push edx<br>push 0x7d0<br>movzx ebx, ax<br>push 2<br>push edi<br>mov eax, ebx<br>or eax, 0x10000<br>push eax<br>push 0x111<br>push ebp<br>call esi<br>test eax, eax<br>je 0x45210d<br>movzx edx, word[esp+0x74]<br>lea ecx, [esp+0x14]<br>push ecx<br>push 0x7d0<br>push 2<br>push edi<br>shl edx, 0x10<br>or edx, ebx<br>push edx<br>push 0x111<br>push ebp<br>call esi<br>test eax, eax<br>je 0x45210d<br>jmp case.default.0x451a57<br>mov eax, str.List<br>mov ecx, ebx<br>call fcn.00473c80<br>test eax, eax<br>je 0x45210d<br>push 0xfffffffffffffff0<br>push edi<br>call dword[sym.imp.USER32.dll_GetWindowLongW]<br>and eax, 0x808<br>neg eax<br>sbb eax, eax<br>add eax, 0x186<br>mov dword[esp+0x74], 2<br>cmp eax, 0x185<br>jne 0x451f1e<br>lea eax, [esp+0x14]<br>push eax<br>push 0x7d0<br>push 2<br>push esi<br>push 1<br>push 0x185<br>jmp 0x451f2e<br>cmp word[esi], 0<br>jne 0x45202e<br>push 0x20<br>lea eax, [esp+0x2c]<br>push eax<br>push edi<br>call dword[sym.imp.USER32.dll_GetClassNameW]<br>lea esi, [esp+0x28]<br>mov eax, 0x4aae64<br>mov ecx, esi<br>call fcn.00473c80<br>test eax, eax<br>je 0x45205f<br>mov eax, 0x14d<br>mov dword[esp+0x74], 9<br>lea ecx, [esp+0x14]<br>push ecx<br>push 0x7d0<br>push 2<br>push ebx<br>push 1<br>jmp 0x451f2d<br>mov eax, str.List<br>mov ecx, esi<br>call fcn.00473c80<br>test eax, eax<br>je 0x45210d<br>push 0xfffffffffffffff0<br>push edi<br>call dword[sym.imp.USER32.dll_GetWindowLongW]<br>and eax, 0x808<br>neg eax<br>sbb eax, eax<br>and eax, 3<br>add eax, 0x18c<br>mov dword[esp+0x74], 2<br>cmp eax, 0x18f<br>jne 0x45204b<br>mov esi, dword[sym.imp.USER32.dll_SendMessageTimeoutW]<br>lea ecx, [esp+0x7c]<br>push ecx<br>push 0x7d0<br>push 2<br>push ebx<br>push 0xffffffffffffffff<br>push eax<br>push edi<br>call esi<br>test eax, eax<br>je 0x45210d<br>mov eax, dword[esp+0x7c]<br>cmp eax, 0xffffffff<br>je 0x45210d<br>lea edx, [esp+0x14]<br>push edx<br>push 0x7d0<br>push 2<br>push eax<br>push 1<br>push 0x185<br>push edi<br>call esi<br>test eax, eax<br>je 0x45210d<br>cmp dword[esp+0x14], 0xffffffff<br>jne 0x451f4a<br>jmp 0x45210d<br>lea eax, [esp+0x14]<br>push eax<br>push 0x7d0<br>push 2<br>push ebx<br>push 1<br>push 0xc2<br>push edi<br>call dword[sym.imp.USER32.dll_SendMessageTimeoutW]<br>test eax, eax<br>jne case.default.0x451a57<br>mov ecx, dword[0x4c28ec]<br>cmp byte[ecx+0x104], 0<br>jne 0x45213d<br>mov edx, dword[0x4c6cb4]<br>push 1<br>push 0<br>push 0xffffffffffffffff<br>push 0x4a331c<br>push edx<br>call fcn.00476680<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0x5c<br>ret 0x18<br>mov ecx, dword[esp+0x70]<br>push 0x4ab02c<br>push 0<br>push 0x4a331c<br>call fcn.0042dc50<br>pop edi<br>pop esi<br>pop ebp<br>pop ebx<br>add esp, 0x5c<br>ret 0x18<br><eoc> ', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

mov ecx, dword[esp+0xc]
mov al, byte[ecx+4]
sub esp, 0x60
push ebx
push ebp
mov ebp, dword[esp+0x70]
push esi
push edi
mov edi, edx
cmp al, 0xa
je 0x461d55
cmp al, 2
je 0x461d55
add ecx, 0x10
mov dword[esp+0x18], ecx
jmp 0x461d5c
lea eax, [ebp+0x5c]
mov dword[esp+0x18], eax
cmp word[edi], 0
je 0x46394c
movzx eax, word[edi]
cmp eax, 0x2d
jne 0x461d75
mov byte[esp+0x78], 0
jmp 0x461d7f
mov byte[esp+0x78], 1
cmp eax, 0x2b
jne 0x461d82
add edi, 2
cmp word[edi], 0
je 0x46394c
mov ebx, 0x4a352c
mov eax, edi
call fcn.004095d0
mov dword[esp+0x14], eax
test eax, eax
jne 0x461dbd
mov eax, edi
lea edx, [eax+2]
mov cx, word[eax]
add eax, 2
test cx, cx
jne 0x461da5
sub eax, edx
sar eax, 1
lea ecx, [edi+eax*2]
mov dword[esp+0x14], ecx
mov eax, ecx
cmp eax, edi
je 0x46392c
movzx edx, word[eax]
xor ecx, ecx
push str.Section
push edi
mov dword[esp+0x24], edx
mov word[eax], cx
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x461def
mov byte[ebp+0x190], 1
jmp case.0x462f06.1
push str.AltSubmit
push edi
call fcn.0048cd49
mov esi, dword[esp+0x84]
add esp, 8
test eax, eax
jne 0x461e21
cmp byte[esi+4], 0xc
je 0x461e21
cmp byte[esp+0x78], al
je 0x462720
or byte[esi+5], 2
jmp case.0x462f06.1
push 7
push str.Checked
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x461eaf
add edi, 0xe
push str.Gray
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x461e5e
movzx edx, byte[esp+0x78]
neg edx
sbb edx, edx
and edx, 2
mov dword[ebp+0x6c], edx
jmp case.0x462f06.1
cmp byte[esi+4], 0xa
jne 0x461e7d
cmp byte[esp+0x78], 0
je 0x461e74
or dword[ebp+0x10], 4
jmp case.0x462f06.1
and dword[ebp+0x10], 0xfffffffb
jmp case.0x462f06.1
cmp word[edi], 0
je 0x461ea2
mov esi, edi
call fcn.0040d260
mov dword[ebp+0x6c], eax
cmp eax, 0xffffffff
jne case.0x462f06.1
mov dword[ebp+0x6c], 2
jmp case.0x462f06.1
movzx eax, byte[esp+0x78]
mov dword[ebp+0x6c], eax
jmp case.0x462f06.1
push 6
push str.Choose
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x461f68
cmp byte[esp+0x78], al
je case.0x462f06.1
movzx eax, byte[esi+4]
add edi, 0xc
sub eax, 0xd
je 0x461f24
dec eax
je 0x461eff
mov esi, edi
call fcn.0040d260
mov dword[ebp+0x34], eax
cmp eax, 1
jge case.0x462f06.1
mov dword[ebp+0x34], 0
jmp case.0x462f06.1
lea eax, [ebp+0x140]
mov ecx, edi
call fcn.00473320
mov dword[ebp+0x180], eax
cmp eax, 3
jne case.0x462f06.1
or dword[ebp], 2
jmp case.0x462f06.1
push str.None
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x461f42
mov dword[ebp+0x34], 2
jmp case.0x462f06.1
push 1
lea esi, [ebp+0x140]
mov eax, edi
call fcn.004733b0
add esp, 4
test eax, eax
je case.0x462f06.1
mov dword[ebp+0x34], 1
jmp case.0x462f06.1
push str.Border
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x461f98
cmp byte[esp+0x78], al
je 0x461f8c
or dword[ebp], 0x800000
jmp case.0x462f06.1
or dword[ebp+4], 0x800000
jmp case.0x462f06.1
push str.VScroll
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x461fc8
cmp byte[esp+0x78], al
je 0x461fbc
or dword[ebp], 0x200000
jmp case.0x462f06.1
or dword[ebp+4], 0x200000
jmp case.0x462f06.1
push 7
push str.HScroll
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x462034
cmp byte[esi+4], 0xb
jne 0x461ff8
cmp byte[esp+0x78], al
je 0x46247f
or dword[ebp+4], 0x8000
jmp case.0x462f06.1
cmp byte[esp+0x78], 0
je 0x462028
or dword[ebp], 0x100000
cmp word[edi+0xe], 0
je 0x46201d
lea esi, [edi+0xe]
call fcn.0040d260
mov dword[ebp+0x68], eax
jmp case.0x462f06.1
or eax, 0xffffffff
mov dword[ebp+0x68], eax
jmp case.0x462f06.1
or dword[ebp+4], 0x100000
jmp case.0x462f06.1
push str.Tabstop
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x462058
cmp byte[esp+0x78], al
je 0x462070
or dword[ebp], 0x10000
jmp case.0x462f06.1
push str.NoTab
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x46207c
cmp byte[esp+0x78], al
je 0x46204c
or dword[ebp+4], 0x10000
jmp case.0x462f06.1
push str.Group
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x4620a5
cmp byte[esp+0x78], 0
je 0x462321
or dword[ebp], 0x20000
jmp case.0x462f06.1
push str.Redraw
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x4620ce
xor ecx, ecx
cmp byte[esp+0x78], cl
sete cl
add ecx, 3
mov dword[ebp+0x188], ecx
jmp case.0x462f06.1
push 8
push str.Disabled
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x46213b
cmp word[edi+0x10], ax
je 0x4620fd
lea esi, [edi+0x10]
call fcn.0040d260
test eax, eax
jne 0x4620fd
cmp byte[esp+0x78], al
sete cl
jmp 0x462101
mov cl, byte[esp+0x78]
mov edx, dword[esp+0x7c]
mov eax, dword[edx]
test eax, eax
je 0x46211f
xor edx, edx
test cl, cl
sete dl
push edx
push eax
call dword[sym.imp.USER32.dll_EnableWindow]
jmp case.0x462f06.1
test cl, cl
je 0x46212f
or dword[ebp], 0x8000000
jmp case.0x462f06.1
or dword[ebp+4], 0x8000000
jmp case.0x462f06.1
push 6
push str.Hidden
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x4621ac
cmp word[edi+0xc], ax
je 0x46216a
lea esi, [edi+0xc]
call fcn.0040d260
test eax, eax
jne 0x46216a
cmp byte[esp+0x78], al
sete cl
jmp 0x46216e
mov cl, byte[esp+0x78]
mov eax, dword[esp+0x7c]
mov eax, dword[eax]
test eax, eax
je 0x462190
xor edx, edx
test cl, cl
setne dl
dec edx
and edx, 4
push edx
push eax
call dword[sym.imp.USER32.dll_ShowWindow]
jmp case.0x462f06.1
test cl, cl
je 0x4621a0
or dword[ebp+4], 0x10000000
jmp case.0x462f06.1
or dword[ebp], 0x10000000
jmp case.0x462f06.1
push str.Wrap
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x462231
movzx eax, byte[esi+4]
dec eax
cmp eax, 0x12
ja case.0x462f06.1
movzx eax, byte[eax+0x463fec]
jmp dword[eax*4+0x463fd4]
cmp byte[esp+0x78], 0
je 0x4621ea
or dword[ebp+4], 0x1f
jmp case.0x462f06.1
mov ecx, dword[ebp]
and ecx, 0xffffffec
or ecx, 0xc
mov dword[ebp], ecx
jmp case.0x462f06.1
cmp byte[esp+0x78], 0
je 0x46220e
or dword[ebp+4], 0x100080
jmp case.0x462f06.1
or dword[ebp], 0x80
jmp case.0x462f06.1
cmp byte[esp+0x78], 0
je 0x462634
or dword[ebp], 0x200
jmp case.0x462f06.1
mov ebx, 0xa
push ebx
push str.Background
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x4622ea
movzx eax, byte[esi+4]
add eax, 0xfffffff6
add edi, 0x14
cmp eax, 0xe
ja case.0x462263.12
movzx edx, byte[eax+0x464008]
jmp dword[edx*4+0x464000]
cmp byte[esp+0x78], 0
je 0x4622a0
mov esi, edi
call fcn.00474a80
mov dword[ebp+0x60], eax
cmp eax, 0xffffffff
jne case.0x462f06.1
push 0x10
push 0
push edi
call fcn.0048e37b
add esp, 0xc
mov ecx, eax
call fcn.0042f740
mov dword[ebp+0x60], eax
jmp case.0x462f06.1
mov dword[ebp+0x60], 0xff000000
jmp case.0x462f06.1
cmp byte[esp+0x78], 0
je 0x4622db
and byte[esi+5], 0xdf
push str.Trans
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x4622d2
or byte[esi+5], 0x40
jmp case.0x462f06.1
and byte[esi+5], 0xbf
jmp case.0x462f06.1
mov al, byte[esi+5]
and al, 0xbf
or al, 0x20
mov byte[esi+5], al
jmp case.0x462f06.1
push str.Group
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
je 0x46208e
push str.Theme
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x46232d
mov cl, byte[esp+0x78]
mov byte[ebp+0x191], cl
jmp case.0x462f06.1
or dword[ebp+4], 0x20000
jmp case.0x462f06.1
push 4
push str.Hwnd
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x46235a
push 3
push eax
add edi, 8
push edi
mov ecx, 0x4c8640
call fcn.00421480
mov dword[ebp+0x1c], eax
jmp case.0x462f06.1
push 4
push str.Icon
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x4623b0
add edi, 8
cmp byte[esi+4], bl
jne 0x462396
push str.Small
push edi
call fcn.0048cd49
add esp, 8
neg eax
sbb eax, eax
and eax, 0xfffffffe
add eax, 2
mov dword[ebp+0x14], eax
jmp case.0x462f06.1
cmp byte[esp+0x78], 0
je case.0x462f06.1
mov esi, edi
call fcn.0040d260
mov dword[ebp+0x70], eax
jmp case.0x462f06.1
push str.Report
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x4623ce
mov dword[ebp+0x14], 1
jmp case.0x462f06.1
push str.List
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x4623ec
mov dword[ebp+0x14], 3
jmp case.0x462f06.1
push str.Tile
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x462416
cmp byte[0x4c92ca], al
je case.0x462f06.1
mov dword[ebp+0x14], 4
jmp case.0x462f06.1
cmp byte[esi+4], bl
jne 0x4624c9
push 0x4aaaa8
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x462447
cmp byte[esp+0x78], al
je 0x4627c8
or dword[ebp+4], 0x4000
jmp case.0x462f06.1
cmp byte[esi+4], bl
jne 0x4624c9
push 6
push str.NoSort
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x46249a
push 0x4aaaa8
add edi, 0xc
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x46248b
cmp byte[esp+0x78], al
je 0x461fec
or dword[ebp], 0x8000
jmp case.0x462f06.1
mov dl, byte[esp+0x78]
mov byte[ebp+0x192], dl
jmp case.0x462f06.1
cmp byte[esi+4], bl
jne 0x4624c9
push str.Grid
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x4624c9
cmp byte[esp+0x78], al
je 0x4624c0
or dword[ebp+0x10], 1
jmp case.0x462f06.1
and dword[ebp+0x10], 0xfffffffe
jmp case.0x462f06.1
push 5
push str.Count
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x4624ed
lea esi, [edi+0xa]
call fcn.0040d260
mov dword[ebp+0x64], eax
jmp case.0x462f06.1
push 2
push 0x4bc338
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x462539
push eax
push eax
push eax
push eax
lea eax, [edi+4]
call fcn.00473730
add esp, 0x10
test eax, eax
je case.0x462f06.1
lea esi, [edi+4]
call fcn.004130a0
cmp byte[esp+0x78], 0
je 0x46252f
or dword[ebp+0x10], eax
jmp case.0x462f06.1
not eax
and dword[ebp+0x10], eax
jmp case.0x462f06.1
push 9
push str.ImageList
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x462567
cmp byte[esp+0x78], al
je case.0x462f06.1
lea esi, [edi+0x12]
call fcn.004130a0
mov dword[ebp+0x18], eax
jmp case.0x462f06.1
cmp byte[esi+4], 4
jne 0x462593
push str.Default
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x462593
cmp byte[esp+0x78], 0
je case.0x462f06.11
or dword[ebp], 1
jmp case.0x462f06.1
cmp byte[esi+4], 5
jne 0x4625be
push str.Check3
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x4625be
cmp byte[esp+0x78], al
je 0x462ac8
or dword[ebp], 6
jmp case.0x462f06.1
push str.ReadOnly
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x462654
movzx eax, byte[esi+4]
add eax, 0xfffffff7
cmp eax, 3
ja case.0x462f06.1
jmp dword[eax*4+0x464018]
mov esi, dword[esi]
test esi, esi
je case.0x462676.9
movzx eax, byte[esp+0x78]
push 0
push eax
push 0xcf
push esi
call dword[sym.imp.USER32.dll_SendMessageW]
jmp case.0x462f06.1
cmp byte[esp+0x78], 0
je 0x46261d
or dword[ebp], 0x800
jmp case.0x462f06.1
or dword[ebp+4], 0x800
jmp case.0x462f06.1
cmp byte[esp+0x78], 0
je 0x462225
or dword[ebp+4], 0x200
jmp case.0x462f06.1
cmp byte[esp+0x78], 0
je 0x4627f8
or dword[ebp+4], 8
jmp case.0x462f06.1
push str.Multi
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x46269d
movzx eax, byte[esi+4]
add eax, 0xfffffff7
cmp eax, 5
ja case.0x462f06.1
jmp dword[eax*4+0x464028]
cmp byte[esp+0x78], 0
je 0x462694
or dword[ebp], 4
jmp case.0x462f06.1
cmp byte[esp+0x78], 0
je 0x462684
or dword[ebp+4], 4
jmp case.0x462f06.1
cmp byte[esi+4], 0xc
jne 0x462729
push str.WantReturn
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x4626d7
cmp byte[esp+0x78], al
je 0x4626cb
or dword[ebp], 0x1000
jmp case.0x462f06.1
or dword[ebp+4], 0x1000
jmp case.0x462f06.1
cmp byte[esi+4], 0xc
jne 0x462729
push str.WantTab
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x4626fe
cmp byte[esp+0x78], al
je 0x46274c
or byte[esi+5], 0x80
jmp case.0x462f06.1
cmp byte[esi+4], 0xc
jne 0x462729
push str.WantCtrlA
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x462729
cmp byte[esp+0x78], al
je 0x461e18
and byte[esi+5], 0xfd
jmp case.0x462f06.1
mov al, byte[esi+4]
cmp al, bl
je 0x462734
cmp al, 0xb
jne 0x462755
push str.WantF2
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x462755
cmp byte[esp+0x78], al
je 0x4626f5
and byte[esi+5], 0x7f
jmp case.0x462f06.1
cmp byte[esi+4], 0xc
jne 0x462784
push str.Number
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x462784
cmp byte[esp+0x78], 0
je 0x462816
or dword[ebp], 0x2000
jmp case.0x462f06.1
push str.Lowercase
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x4627d4
mov al, byte[esi+4]
cmp al, 0xc
jne 0x4627b1
cmp byte[esp+0x78], 0
je 0x462a1b
or dword[ebp], 0x10
jmp case.0x462f06.1
cmp al, 8
je case.0x4625e4.9
cmp al, 7
jne case.0x462f06.1
cmp byte[esp+0x78], 0
je 0x46243b
or dword[ebp], 0x4000
jmp case.0x462f06.1
push str.Uppercase
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x462822
mov al, byte[esi+4]
cmp al, 0xc
jne 0x462801
cmp byte[esp+0x78], 0
je case.0x462f06.16
or dword[ebp], 8
jmp case.0x462f06.1
cmp al, 8
je case.0x4621d3.3
cmp al, 7
jne case.0x462f06.1
jmp case.0x4621d3.3
or dword[ebp+4], 0x2000
jmp case.0x462f06.1
cmp byte[esi+4], 0xc
jne 0x4628ae
push 8
push str.Password
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x4628ae
mov cx, word[edi+0x10]
mov word[ebp+0x18c], cx
cmp byte[esp+0x78], al
je 0x46288b
or dword[ebp], 0x20
cmp dword[esi], eax
je case.0x462f06.1
test cx, cx
jne 0x46286e
mov edx, 0x2a
mov word[ebp+0x18c], dx
movzx eax, word[ebp+0x18c]
mov ecx, dword[esi]
push 0
push eax
push 0xcc
push ecx
call dword[sym.imp.USER32.dll_SendMessageW]
jmp case.0x462f06.1
or dword[ebp+4], 0x20
mov esi, dword[esi]
test esi, esi
je case.0x462f06.1
push 0
push 0
push 0xcc
push esi
call dword[sym.imp.USER32.dll_SendMessageW]
jmp case.0x462f06.1
push 5
push str.Limit
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x4628f5
cmp byte[esp+0x78], al
je 0x4628e9
add edi, ebx
cmp word[edi], ax
je 0x4628de
mov esi, edi
call fcn.0040d260
mov dword[ebp+0x64], eax
jmp case.0x462f06.1
or eax, 0xffffffff
mov dword[ebp+0x64], eax
jmp case.0x462f06.1
mov dword[ebp+0x64], 0x80000000
jmp case.0x462f06.1
cmp byte[esi+4], 8
jne 0x462920
push str.Simple
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x462920
cmp byte[esp+0x78], al
je case.0x462f06.11
or dword[ebp], 1
jmp case.0x462f06.1
push 4
push str.Sort
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x462992
movzx eax, byte[esi+4]
add eax, 0xfffffff9
cmp eax, 3
ja case.0x462f06.1
jmp dword[eax*4+0x464040]
cmp byte[esp+0x78], 0
je 0x462eed
or dword[ebp], 2
jmp case.0x462f06.1
cmp byte[esp+0x78], 0
je 0x462989
push str.Desc
add edi, 8
push edi
call fcn.0048cd49
add esp, 8
neg eax
sbb eax, eax
and eax, 0xfffffff0
add eax, 0x20
or dword[ebp], eax
jmp case.0x462f06.1
or dword[ebp+4], 0x30
jmp case.0x462f06.1
cmp byte[esi+4], 0x10
jne 0x4629c5
push str.Horz
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x4629c5
cmp byte[esp+0x78], al
je 0x462b37
mov edx, dword[ebp]
and edx, 0xffffffef
or edx, 0x40
mov dword[ebp], edx
jmp case.0x462f06.1
mov bl, 0x11
cmp byte[esi+4], bl
jne 0x462a67
push str.Invert
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x4629f5
cmp byte[esp+0x78], al
je 0x46274c
or byte[esi+5], 0x80
jmp case.0x462f06.1
cmp byte[esi+4], bl
jne 0x462a67
push str.NoTicks
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x462a24
cmp byte[esp+0x78], al
je 0x462a1b
or dword[ebp], 0x10
jmp case.0x462f06.1
or dword[ebp+4], 0x10
jmp case.0x462f06.1
cmp byte[esi+4], bl
jne 0x462a67
push 0xc
push str.TickInterval
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x462a67
cmp byte[esp+0x78], al
je 0x462a57
or dword[ebp], 1
lea esi, [edi+0x18]
call fcn.0040d260
mov dword[ebp+0x40], eax
jmp case.0x462f06.1
or dword[ebp+4], 1
mov dword[ebp+0x40], 0xffffffff
jmp case.0x462f06.1
push 4
push str.Line
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x462ad1
mov al, byte[esi+4]
cmp al, bl
jne 0x462a9d
cmp byte[esp+0x78], 0
je case.0x462f06.1
lea esi, [edi+8]
call fcn.0040d260
mov dword[ebp+0x44], eax
jmp case.0x462f06.1
cmp al, 0xb
jne case.0x462f06.1
mov ax, word[edi+8]
call fcn.004095a0
cmp ax, 0x53
jne case.0x462f06.1
cmp byte[esp+0x78], 0
je 0x462ac8
or dword[ebp], 6
jmp case.0x462f06.1
or dword[ebp+4], 6
jmp case.0x462f06.1
cmp byte[esi+4], bl
jne 0x462b40
push 4
push str.Page
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x462b04
cmp byte[esp+0x78], al
je case.0x462f06.1
lea esi, [edi+8]
call fcn.0040d260
mov dword[ebp+0x48], eax
jmp case.0x462f06.1
cmp byte[esi+4], bl
jne 0x462b40
push 5
push str.Thick
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x462b40
cmp byte[esp+0x78], al
je 0x462b37
or dword[ebp], 0x40
lea esi, [edi+0xa]
call fcn.0040d260
mov dword[ebp+0x4c], eax
jmp case.0x462f06.1
or dword[ebp+4], 0x40
jmp case.0x462f06.1
push 7
push str.ToolTip
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x462be0
cmp byte[esi+4], bl
jne case.0x462f06.1
cmp byte[esp+0x78], al
je 0x46314c
mov dword[ebp+0x50], 0xffffffff
mov ax, word[edi+0xe]
call fcn.004095a0
movzx eax, ax
add eax, 0xffffffbe
cmp eax, 0x12
ja case.0x462b8d.67
movzx eax, byte[eax+0x464064]
jmp dword[eax*4+0x464050]
mov dword[ebp+0x50], 0
jmp case.0x462b8d.67
mov dword[ebp+0x50], 1
jmp case.0x462b8d.67
mov dword[ebp+0x50], 2
jmp case.0x462b8d.67
mov dword[ebp+0x50], 3
mov eax, dword[ebp+0x50]
test eax, eax
jns 0x462bd0
or dword[ebp], 0x100
mov dword[ebp+0x50], 0
jmp case.0x462f06.1
inc eax
or dword[ebp], 0x100
mov dword[ebp+0x50], eax
jmp case.0x462f06.1
cmp byte[esi+4], bl
jne 0x462c85
push 5
push str.Buddy
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x462c85
cmp byte[esp+0x78], al
je case.0x462f06.1
movzx ebx, word[edi+0xa]
test bx, bx
je case.0x462f06.1
push eax
push 1
push eax
push eax
add edi, 0xc
push edi
mov ecx, 0x4c8640
call fcn.004214e0
test eax, eax
je case.0x462f06.1
cmp byte[eax+0x17], 0
jne 0x462c3c
mov eax, dword[eax+0xc]
test byte[eax+0x16], 2
jne case.0x462f06.1
mov edi, dword[esp+0x74]
mov ecx, dword[edi+0x10]
lea edx, [ecx-1]
cmp edx, ecx
jae case.0x462f06.1
lea esi, [edx+edx*4]
add esi, esi
add esi, esi
nop
mov ecx, dword[edi+0x18]
add ecx, esi
cmp dword[ecx+8], eax
jne 0x462c77
cmp ebx, 0x31
jne 0x462c74
mov dword[ebp+0x54], ecx
jmp 0x462c77
mov dword[ebp+0x58], ecx
dec edx
sub esi, 0x14
cmp edx, dword[edi+0x10]
jb 0x462c60
jmp case.0x462f06.1
push str.Vertical
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x462cce
mov al, byte[esi+4]
cmp al, bl
jne 0x462cb2
cmp byte[esp+0x78], 0
je 0x462eed
or dword[ebp], 2
jmp case.0x462f06.1
cmp al, 0x12
jne case.0x462f06.1
cmp byte[esp+0x78], 0
je 0x462694
or dword[ebp], 4
jmp case.0x462f06.1
push 5
push str.Range
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x462d87
cmp byte[esp+0x78], al
je case.0x462f06.1
cmp word[edi+0xa], ax
je case.0x462f06.1
mov al, byte[esi+4]
cmp al, 0xd
je 0x462d3d
cmp al, 0xe
je 0x462d3d
lea esi, [edi+0xa]
mov byte[ebp+0x18e], 1
call fcn.0040d260
push 0x2d
add edi, 0xc
push edi
mov dword[ebp+0x38], eax
call fcn.0048db21
add esp, 8
test eax, eax
je case.0x462f06.1
lea esi, [eax+2]
call fcn.0040d260
mov dword[ebp+0x3c], eax
jmp case.0x462f06.1
lea ebx, [ebp+0x160]
mov eax, ebx
lea ecx, [edi+0xa]
call fcn.00473320
mov dword[ebp+0x184], eax
test eax, eax
je case.0x462f06.1
mov ecx, dword[esi]
test ecx, ecx
je case.0x462f06.1
xor edx, edx
cmp byte[esi+4], 0xd
push ebx
setne dl
push eax
dec edx
and edx, 0xfffffff2
add edx, 0x1012
push edx
push ecx
call dword[sym.imp.USER32.dll_SendMessageW]
jmp case.0x462f06.1
cmp byte[esi+4], 0x12
jne 0x462db2
push str.Smooth
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x462db2
cmp byte[esp+0x78], al
je case.0x462f06.11
or dword[ebp], 1
jmp case.0x462f06.1
push str.Buttons
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x462dfe
mov al, byte[esi+4]
cmp al, 0x13
jne 0x462de2
cmp byte[esp+0x78], 0
je 0x46314c
or dword[ebp], 0x100
jmp case.0x462f06.1
cmp al, 0xb
jne case.0x462f06.1
cmp byte[esp+0x78], 0
je case.0x462f06.11
or dword[ebp], 1
jmp case.0x462f06.1
cmp byte[esi+4], 0x13
jne 0x462e30
push str.Bottom
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x462e30
cmp byte[esp+0x78], al
je 0x462eed
or dword[ebp], 2
or dword[ebp+4], 0x80
jmp case.0x462f06.1
cmp byte[esi+4], 0x17
jne 0x462e8a
push 5
push str.Class
push edi
call fcn.0048d597
add esp, 0xc
test eax, eax
jne 0x462e8a
mov ecx, dword[0x4c64b0]
lea eax, [esp+0x40]
push eax
add edi, 0xa
push edi
push ecx
call dword[sym.imp.USER32.dll_GetClassInfoExW]
mov word[ebp+0x194], ax
test ax, ax
jne case.0x462f06.1
push edi
push str.Unregistered_window_class.
mov ecx, 0x4c8640
call fcn.0042e1d0
pop edi
pop esi
pop ebp
pop ebx
add esp, 0x60
ret 0x14
push str.Center
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x462f58
movzx eax, byte[esi+4]
dec eax
cmp byte[esp+0x78], 0
je 0x462ef6
cmp eax, 0x10
ja case.0x462f06.1
movzx edx, byte[eax+0x46408c]
jmp dword[edx*4+0x464078]
or dword[ebp+4], 2
jmp case.0x462f06.1
cmp eax, 0x10
ja case.0x462f06.1
movzx eax, byte[eax+0x4640b4]
jmp dword[eax*4+0x4640a0]
push str.Right
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x463080
movzx eax, byte[esi+4]
dec eax
cmp byte[esp+0x78], 0
je 0x462ff8
cmp eax, 0x15
ja case.0x462f06.1
or dword[ebp+4], 1
jmp case.0x462f06.1
cmp eax, 0x12
ja case.0x462f06.1
push str.Left
push edi
call fcn.0048cd49
add esp, 8
test eax, eax
jne 0x46317c
cmp byte[esp+0x78], 0
movzx eax, byte[esi+4]
je 0x46310a
or dword[ebp+4], 0x100
jmp case.0x462f06.1
push 0
push 0
push 1
push 0
mov eax, edi
call fcn.00473730
add esp, 0x10
test eax, eax
je 0x4631c8
mov ecx, dword[esp+0x14]
mov ax, word[esp+0x1c]
mov word[ecx], ax
mov eax, dword[esp+0x14]
mov edi, eax
mov edi, edi
movzx eax, word[edi]
cmp eax, 0x20
je 0x46393d
cmp eax, 9
jne 0x463942
add edi, 2
jmp 0x463930
cmp word[edi], 0
jne 0x461d66
mov esi, dword[esp+0x7c]
mov eax, dword[esi]
test eax, eax
je 0x463fc3
push 0xfffffffffffffff0
push eax
call dword[sym.imp.USER32.dll_GetWindowLongW]
mov edx, dword[ebp+4]
mov ecx, dword[ebp]
mov ebx, eax
mov dword[esp+0x78], eax
mov eax, edx
not eax
or ebx, ecx
and ebx, eax
movzx eax, byte[esi+4]
add eax, 0xfffffffe
cmp eax, 8
ja case.0x463987.9
jmp dword[eax*4+0x4641c8]
mov ecx, ebx
xor ecx, dword[esp+0x78]
and ecx, 0xf
xor ebx, ecx
mov edi, dword[sym.imp.USER32.dll_SendMessageW]
mov eax, dword[ebp+0x64]
test eax, eax
je 0x463c3a
mov cl, byte[esi+4]
cmp cl, 0xc
jne 0x463c16
push 0
test eax, eax
jns 0x463c0b
mov eax, dword[esi]
push 0
push 0xc5
push eax
call edi
cmp dword[ebp+0x64], 0x80000000
je 0x463c3a
test bl, 4
jne 0x463c3a
and ebx, 0xffefff7f
jmp 0x463c3a
and ebx, 0xfffffff7
or ebx, 7
jmp case.0x463987.9
test bl, 1
je 0x463ac1
and ebx, 0xfffffff1
or ebx, 1
jmp 0x463ac4
and ebx, 0xfffffff0
mov edi, dword[esp+0x74]
mov eax, dword[edi+0x1c]
cmp dword[esp+0x80], eax
jne 0x463b05
test dl, 1
je case.0x463987.9
push 0
mov eax, edi
mov edx, dword[eax+4]
mov edi, dword[sym.imp.USER32.dll_SendMessageW]
push 1
push 0x401
push edx
mov dword[eax+0x1c], 0xffffffff
call edi
or dword[esp+0x78], 1
jmp 0x463a5e
test cl, 1
je case.0x463987.9
cmp eax, dword[edi+0x10]
jae 0x463b49
mov ecx, dword[edi+0x18]
push 1
lea eax, [eax+eax*4]
mov edx, dword[ecx+eax*4]
push 0xfffffffffffffff0
push edx
call dword[sym.imp.USER32.dll_GetWindowLongW]
mov ecx, dword[edi+0x18]
and eax, 0xfffe
push eax
mov eax, dword[edi+0x1c]
mov edi, dword[sym.imp.USER32.dll_SendMessageW]
lea eax, [eax+eax*4]
mov edx, dword[ecx+eax*4]
push 0xf4
push edx
call edi
jmp 0x463b4f
mov edi, dword[sym.imp.USER32.dll_SendMessageW]
mov ecx, dword[esp+0x74]
mov eax, dword[esp+0x80]
mov dword[ecx+0x1c], eax
push 0
add eax, 3
push eax
mov eax, dword[ecx+4]
push 0x401
push eax
call edi
jmp 0x463a5e
mov edi, dword[sym.imp.USER32.dll_SendMessageW]
mov ecx, ebx
and ecx, 6
cmp cl, 6
jne 0x463b8e
and ebx, 0xfffffff6
or ebx, 6
jmp 0x463a5e
and ebx, 0xfffffff3
or ebx, 3
jmp 0x463a5e
and ebx, 0xfffffff9
or ebx, 9
jmp case.0x463987.9
or ebx, 3
jmp case.0x463987.9
mov edi, dword[sym.imp.USER32.dll_SendMessageW]
test bl, 1
je 0x463bc2
and ebx, 0xfffffff1
or ebx, 1
jmp 0x463a5e
and ebx, 0xfffffff2
or ebx, 2
jmp 0x463a5e
mov eax, dword[ebp+0x14]
cmp eax, 0xffffffff
je case.0x463987.9
cmp byte[0x4c92ca], 0
mov edi, dword[sym.imp.USER32.dll_SendMessageW]
je 0x463bf5
mov edx, dword[esi]
push 0
push eax
push 0x108e
push edx
call edi
mov eax, dword[ebp+0x14]
cmp eax, 4
je 0x463a5e
and ebx, 0xfffffffc
or ebx, eax
jmp 0x463a5e
mov ecx, dword[esi]
push eax
push 0xc5
push ecx
jmp 0x463c38
cmp cl, 0xf
jne 0x463c3a
test eax, eax
jns 0x463c2d
mov edx, dword[esi]
push 0
push 0
push 0x403
push edx
jmp 0x463c38
push 6
push eax
mov eax, dword[esi]
push 0x403
push eax
call edi
mov ecx, dword[esp+0x78]
mov byte[esp+0x7c], 0
cmp ecx, ebx
je 0x463d22
mov al, byte[esi+4]
mov byte[esp+0x7c], 1
mov byte[esp+0x84], 0
cmp al, 4
je 0x463cd7
cmp al, 9
je 0x463c7f
cmp al, 0x12
jne 0x463ce7
mov ecx, dword[esi]
push 0
push 0
push 0x408
push ecx
call edi
mov dword[esp+0x18], eax
jmp 0x463ce7
mov eax, ebx
and eax, 0x100000
je 0x463cbf
test ecx, 0x100000
jne 0x463cbf
cmp dword[ebp+0x68], 0
jge 0x463cb2
mov eax, dword[esi]
lea edx, [esp+0x30]
push edx
push eax
call dword[sym.imp.USER32.dll_GetWindowRect]
mov eax, dword[esp+0x38]
sub eax, dword[esp+0x30]
lea ecx, [eax+eax*2]
mov dword[ebp+0x68], ecx
mov edx, dword[ebp+0x68]
push 0
push edx
push 0x194
jmp 0x463ce2
test eax, eax
jne 0x463ce7
test ecx, 0x100000
je 0x463ce7
mov ecx, dword[esi]
push eax
push eax
push 0x194
push ecx
jmp 0x463ce5
movzx edx, bx
push 1
push edx
push 0xf4
mov eax, dword[esi]
push eax
call edi
push 0
call dword[sym.imp.KERNEL32.dll_SetLastError]
mov ecx, dword[esi]
push ebx
push 0xfffffffffffffff0
push ecx
call dword[sym.imp.USER32.dll_SetWindowLongW]
test eax, eax
jne 0x463d09
call dword[sym.imp.KERNEL32.dll_GetLastError]
test eax, eax
jne 0x463d22
mov edx, dword[esi]
push 0xfffffffffffffff0
push edx
call dword[sym.imp.USER32.dll_GetWindowLongW]
cmp eax, dword[esp+0x78]
je 0x463d22
mov byte[esp+0x84], 1
mov eax, dword[esi]
push 0xffffffffffffffec
push eax
call dword[sym.imp.USER32.dll_GetWindowLongW]
mov ecx, dword[ebp+8]
mov edx, dword[ebp+0xc]
or ecx, eax
not edx
and ecx, edx
mov dword[esp+0x1c], eax
mov dword[esp+0x80], ecx
cmp eax, ecx
je 0x463d9e
cmp byte[esp+0x7c], 0
jne 0x463d5c
mov byte[esp+0x7c], 1
mov byte[esp+0x84], 0
push 0
call dword[sym.imp.KERNEL32.dll_SetLastError]
mov eax, dword[esp+0x80]
mov ecx, dword[esi]
push eax
push 0xffffffffffffffec
push ecx
call dword[sym.imp.USER32.dll_SetWindowLongW]
test eax, eax
jne 0x463d85
call dword[sym.imp.KERNEL32.dll_GetLastError]
test eax, eax
jne 0x463d9e
mov edx, dword[esi]
push 0xffffffffffffffec
push edx
call dword[sym.imp.USER32.dll_GetWindowLongW]
cmp eax, dword[esp+0x1c]
je 0x463d9e
mov byte[esp+0x84], 1
cmp byte[esi+4], 0xa
jne 0x463e00
mov eax, dword[esi]
push 0
push 0
push 0x1037
push eax
call edi
mov ecx, dword[ebp+0x10]
mov dword[esp+0x80], eax
cmp eax, ecx
je 0x463e00
cmp byte[esp+0x7c], 0
jne 0x463dd4
mov byte[esp+0x7c], 1
mov byte[esp+0x84], 0
push ecx
mov ecx, dword[esi]
push 0
push 0x1036
push ecx
call edi
mov edx, dword[esi]
push 0
push 0
push 0x1037
push edx
call edi
cmp eax, dword[esp+0x80]
je 0x463e00
mov byte[esp+0x84], 1
cmp byte[esp+0x7c], 0
je 0x463e19
cmp byte[esp+0x84], 0
mov byte[esp+0x80], 1
jne 0x463e21
mov byte[esp+0x80], 0
movzx eax, byte[esi+4]
add eax, 0xfffffff7
cmp eax, 0xf
ja case.0x463e38.13
movzx eax, byte[eax+0x464210]
jmp dword[eax*4+0x4641ec]
cmp byte[ebp+0x18e], 0
je case.0x463e38.13
mov ecx, ebp
mov eax, esi
call fcn.00468160
jmp case.0x463e38.13
mov eax, ebp
call fcn.00468240
test dword[ebp+4], 0x100
je case.0x463e38.13
mov ecx, dword[esi]
push 0
push 0
push 0x41d
push ecx
call dword[sym.imp.USER32.dll_SendMessageW]
jmp case.0x463e38.13
mov eax, ebp
mov edi, esi
call fcn.00468320
jmp case.0x463e38.13
mov edi, ebp
call fcn.004683d0
jmp case.0x463e38.13
mov edx, dword[esp+0x74]
push ebx
push edx
mov eax, ebp
mov ecx, esi
call fcn.00468420
cmp dword[esp+0x78], ebx
je case.0x463e38.13
mov eax, dword[esp+0x18]
mov ecx, dword[esi]
push 0
push eax
push 0x402
push ecx
jmp 0x463f1e
mov eax, dword[ebp+0x13c]
test eax, eax
je case.0x463e38.13
lea edx, [ebp+0x74]
push edx
push eax
mov eax, dword[esi]
push 0xcb
push eax
call edi
mov byte[esp+0x80], 1
jmp case.0x463e38.13
mov eax, dword[ebp+0x13c]
test eax, eax
je case.0x463e38.13
mov edx, dword[esi]
lea ecx, [ebp+0x74]
push ecx
push eax
push 0x192
push edx
call edi
mov byte[esp+0x80], 1
jmp case.0x463e38.13
mov eax, dword[ebp+0x60]
cmp eax, 0xffffffff
je case.0x463e38.13
push eax
mov eax, dword[esi]
push 0
push 0x2001
push eax
call edi
mov eax, dword[ebp+0x188]
test eax, eax
je 0x463f4f
mov edx, dword[esi]
xor ecx, ecx
cmp eax, 3
sete cl
push 0
push ecx
push 0xb
push edx
call dword[sym.imp.USER32.dll_SendMessageW]
cmp dword[ebp+0x188], 3
jne 0x463f4f
cmp byte[esi+4], 0xb
jne 0x463f59
cmp byte[esp+0x80], 0
je 0x463f66
mov eax, dword[esi]
push 1
push 0
push eax
call dword[sym.imp.USER32.dll_InvalidateRect]
cmp byte[esp+0x7c], 0
je 0x463fc3
cmp byte[esp+0x84], 0
jne 0x463fc3
mov ecx, dword[0x4c28ec]
cmp byte[ecx+0x104], 0
jne 0x463fac
mov edx, dword[0x4c6cb4]
push 1
push 0
push 0xffffffffffffffff
push 0x4a331c
push edx
call fcn.00476680
mov eax, 1
pop edi
pop esi
pop ebp
pop ebx
add esp, 0x60
ret 0x14
mov ecx, dword[0x4c8c70]
push 0x4ab02c
push 0
push 0x4a331c
call fcn.0042dc50
pop edi
pop esi
pop ebp
mov eax, 1
pop ebx
add esp, 0x60
ret 0x14

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f