---
layout: post
title:  "fcn.1011bd6c @ 89dc67d2f980e8488f97b1bf8cb24258"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.1011bd6c
- **Origin (md5):** 89dc67d2f980e8488f97b1bf8cb24258
- **VirusTotal:** [virustotal.com/gui/file/89dc67d2f980e8488f97b1bf8cb24258][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [175.94871520996094, 32.80861282348633, '<b><a href="/report/fcn.1011bd6c@89dc67d2f980e8488f97b1bf8cb24258">fcn.1011bd6c</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>', 'point { fill-color: #e0440e; }'],
[131.11984252929688, 18.18963050842285, '<b><a href="/report/fcn.0058cd66@c60344b51fa39a329b92557d24ff7670">fcn.0058cd66</a><br>@c60344b51fa39a329b92557d24ff7670</b><br>', 'null'],
[-48.8239860534668, 17.52968978881836, '<b><a href="/report/fcn.0048a28f@289859175c221b107317af7727d26c17">fcn.0048a28f</a><br>@289859175c221b107317af7727d26c17</b><br>', 'null'],
[32.07918167114258, 46.14310073852539, '<b><a href="/report/fcn.004094c5@6c5b0418e4a4c57d99cda47d2717045d">fcn.004094c5</a><br>@6c5b0418e4a4c57d99cda47d2717045d</b><br>', 'null'],
[-3.444371461868286, 11.448010444641113, '<b><a href="/report/fcn.00575f48@c60344b51fa39a329b92557d24ff7670">fcn.00575f48</a><br>@c60344b51fa39a329b92557d24ff7670</b><br>', 'null'],
[142.1629180908203, 59.65526580810547, '<b><a href="/report/fcn.00438ee5@9964b63070116cfb2469e51850178af1">fcn.00438ee5</a><br>@9964b63070116cfb2469e51850178af1</b><br>', 'null'],
[40.95880889892578, -9.003349304199219, '<b><a href="/report/fcn.0041fd5c@b8b9cf6862b0d68d10750002e5baaf97">fcn.0041fd5c</a><br>@b8b9cf6862b0d68d10750002e5baaf97</b><br>', 'null'],
[-18.819427490234375, 55.42354965209961, '<b><a href="/report/fcn.101109f6@89dc67d2f980e8488f97b1bf8cb24258">fcn.101109f6</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>', 'null'],
[14.85476016998291, -45.959407806396484, '<b><a href="/report/fcn.0041fd5c@146b14fc12cf789043a79d4f548a23bf">fcn.0041fd5c</a><br>@146b14fc12cf789043a79d4f548a23bf</b><br>', 'null'],
[-28.67873191833496, -32.4904670715332, '<b><a href="/report/fcn.0041fd5c@3d7f25d788af3e7f7707a736ac852465">fcn.0041fd5c</a><br>@3d7f25d788af3e7f7707a736ac852465</b><br>', 'null'],
[165.82432556152344, -16.485183715820312, '<b><a href="/report/fcn.004290be@de21a548b66aa6c0b17491b6a31e14fa">fcn.004290be</a><br>@de21a548b66aa6c0b17491b6a31e14fa</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

mov edi, edi
push ebp
mov ebp, esp
sub esp, 0x30
push ebx
xor ebx, ebx
test byte[ebp+0x10], 0x80
push esi
push edi
mov esi, eax
mov dword[ebp-0x20], ebx
mov byte[ebp-2], bl
mov dword[ebp-0x30], 0xc
mov dword[ebp-0x2c], ebx
je 0x1011bd9a
mov dword[ebp-0x28], ebx
mov byte[ebp-1], 0x10
jmp 0x1011bda4
mov dword[ebp-0x28], 1
mov byte[ebp-1], bl
lea eax, [ebp-0x20]
push eax
call fcn.101227a6
pop ecx
test eax, eax
je 0x1011bdbf
push ebx
push ebx
push ebx
push ebx
push ebx
call fcn.100ff67d
add esp, 0x14
mov ecx, dword[ebp+0x10]
mov eax, 0x8000
test eax, ecx
jne 0x1011bddc
test ecx, 0x74000
jne 0x1011bdd8
cmp dword[ebp-0x20], eax
je 0x1011bddc
or byte[ebp-1], 0x80
mov eax, ecx
and eax, 3
sub eax, ebx
mov edx, 0xc0000000
mov edi, 0x80000000
je 0x1011be36
dec eax
je 0x1011be20
dec eax
je 0x1011be1b
call fcn.10105d39
mov dword[eax], ebx
or dword[esi], 0xffffffff
call fcn.10105d26
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov dword[eax], esi
call fcn.100ff7a5
add esp, 0x14
jmp 0x1011c31b
mov dword[ebp-8], edx
jmp 0x1011be39
test cl, 8
je 0x1011be2d
test ecx, 0x70000
jne 0x1011be1b
mov dword[ebp-8], 0x40000000
jmp 0x1011be39
mov dword[ebp-8], edi
mov eax, dword[ebp+0x14]
push 0x10
pop ecx
sub eax, ecx
je 0x1011be7a
sub eax, ecx
je 0x1011be71
sub eax, ecx
je 0x1011be68
sub eax, ecx
je 0x1011be5f
sub eax, 0x40
jne 0x1011bdf5
cmp dword[ebp-8], edi
sete al
mov dword[ebp-0x10], eax
jmp 0x1011be7d
mov dword[ebp-0x10], 3
jmp 0x1011be7d
mov dword[ebp-0x10], 2
jmp 0x1011be7d
mov dword[ebp-0x10], 1
jmp 0x1011be7d
mov dword[ebp-0x10], ebx
mov eax, dword[ebp+0x10]
mov edx, 0x700
and eax, edx
mov ecx, 0x400
cmp eax, ecx
mov edi, 0x100
jg 0x1011bed0
je 0x1011bec7
cmp eax, ebx
je 0x1011bec7
cmp eax, edi
je 0x1011bebe
cmp eax, 0x200
je 0x1011bf3e
cmp eax, 0x300
jne 0x1011bdf5
mov dword[ebp-0x14], 2
jmp 0x1011beed
mov dword[ebp-0x14], 4
jmp 0x1011beed
mov dword[ebp-0x14], 3
jmp 0x1011beed
cmp eax, 0x500
je 0x1011bee6
cmp eax, 0x600
je 0x1011bf3e
cmp eax, edx
jne 0x1011bdf5
mov dword[ebp-0x14], 1
mov eax, dword[ebp+0x10]
mov dword[ebp-0xc], 0x80
test edi, eax
je 0x1011bf11
mov ecx, dword[0x101b1658]
not ecx
and ecx, dword[ebp+0x18]
test cl, cl
js 0x1011bf11
mov dword[ebp-0xc], 1
test al, 0x40
je 0x1011bf27
or dword[ebp-0xc], 0x4000000
or dword[ebp-8], 0x10000
or dword[ebp-0x10], 4
test eax, 0x1000
je 0x1011bf31
or dword[ebp-0xc], edi
test al, 0x20
je 0x1011bf47
or dword[ebp-0xc], 0x8000000
jmp 0x1011bf52
mov dword[ebp-0x14], 5
jmp 0x1011beed
test al, 0x10
je 0x1011bf52
or dword[ebp-0xc], 0x10000000
call fcn.1011fd39
mov dword[esi], eax
cmp eax, 0xffffffff
jne 0x1011bf78
call fcn.10105d39
mov dword[eax], ebx
or dword[esi], 0xffffffff
call fcn.10105d26
mov dword[eax], 0x18
jmp 0x1011c006
mov eax, dword[ebp+8]
mov edi, dword[sym.imp.KERNEL32.dll_CreateFileA]
push ebx
push dword[ebp-0xc]
mov dword[eax], 1
push dword[ebp-0x14]
lea eax, [ebp-0x30]
push eax
push dword[ebp-0x10]
push dword[ebp-8]
push dword[ebp+0xc]
call edi
mov dword[ebp-0x1c], eax
cmp eax, 0xffffffff
jne 0x1011c012
mov ecx, dword[ebp-8]
mov eax, 0xc0000000
and ecx, eax
cmp ecx, eax
jne 0x1011bfde
test byte[ebp+0x10], 1
je 0x1011bfde
and dword[ebp-8], 0x7fffffff
push ebx
push dword[ebp-0xc]
lea eax, [ebp-0x30]
push dword[ebp-0x14]
push eax
push dword[ebp-0x10]
push dword[ebp-8]
push dword[ebp+0xc]
call edi
mov dword[ebp-0x1c], eax
cmp eax, 0xffffffff
jne 0x1011c012
mov esi, dword[esi]
mov eax, esi
sar eax, 5
mov eax, dword[eax*4+0x102273a0]
and esi, 0x1f
shl esi, 6
lea eax, [eax+esi+4]
and byte[eax], 0xfe
call dword[sym.imp.KERNEL32.dll_GetLastError]
push eax
call fcn.10105d4c
pop ecx
call fcn.10105d26
mov eax, dword[eax]
jmp 0x1011c486
push dword[ebp-0x1c]
call dword[sym.imp.KERNEL32.dll_GetFileType]
cmp eax, ebx
jne 0x1011c063
mov esi, dword[esi]
mov eax, esi
sar eax, 5
mov eax, dword[eax*4+0x102273a0]
and esi, 0x1f
shl esi, 6
lea eax, [eax+esi+4]
and byte[eax], 0xfe
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov esi, eax
push esi
call fcn.10105d4c
pop ecx
push dword[ebp-0x1c]
call dword[sym.imp.KERNEL32.dll_CloseHandle]
cmp esi, ebx
jne 0x1011c006
call fcn.10105d26
mov dword[eax], 0xd
jmp 0x1011c006
cmp eax, 2
jne 0x1011c06e
or byte[ebp-1], 0x40
jmp 0x1011c077
cmp eax, 3
jne 0x1011c077
or byte[ebp-1], 8
push dword[ebp-0x1c]
push dword[esi]
call fcn.1011faf4
mov eax, dword[esi]
mov edx, eax
and eax, 0x1f
sar edx, 5
mov edx, dword[edx*4+0x102273a0]
pop ecx
shl eax, 6
pop ecx
mov cl, byte[ebp-1]
or cl, 1
mov byte[edx+eax+4], cl
mov eax, dword[esi]
mov edx, eax
and eax, 0x1f
sar edx, 5
mov edx, dword[edx*4+0x102273a0]
shl eax, 6
lea eax, [edx+eax+0x24]
and byte[eax], 0x80
mov byte[ebp-3], cl
and byte[ebp-3], 0x48
mov byte[ebp-1], cl
jne 0x1011c14c
test cl, 0x80
je 0x1011c386
test byte[ebp+0x10], 2
je 0x1011c14c
push 2
or edi, 0xffffffff
push edi
push dword[esi]
call fcn.10111ffd
add esp, 0xc
mov dword[ebp-0x18], eax
cmp eax, edi
jne 0x1011c10b
call fcn.10105d39
cmp dword[eax], 0x83
je 0x1011c14c
push dword[esi]
call fcn.101110e7
jmp 0x1011c005
push 1
lea eax, [ebp-4]
push eax
push dword[esi]
mov byte[ebp-4], bl
call fcn.101109f6
add esp, 0xc
test eax, eax
jne 0x1011c13c
cmp byte[ebp-4], 0x1a
jne 0x1011c13c
mov eax, dword[ebp-0x18]
cdq
push edx
push eax
push dword[esi]
call fcn.10122534
add esp, 0xc
cmp eax, edi
je 0x1011c0ff
push ebx
push ebx
push dword[esi]
call fcn.10111ffd
add esp, 0xc
cmp eax, edi
je 0x1011c0ff
test byte[ebp-1], 0x80
je 0x1011c386
mov edi, 0x74000
mov ecx, 0x4000
test dword[ebp+0x10], edi
jne 0x1011c174
mov eax, dword[ebp-0x20]
and eax, edi
jne 0x1011c171
or dword[ebp+0x10], ecx
jmp 0x1011c174
or dword[ebp+0x10], eax
mov eax, dword[ebp+0x10]
and eax, edi
cmp eax, ecx
je 0x1011c1c1
cmp eax, 0x10000
je 0x1011c1ad
cmp eax, 0x14000
je 0x1011c1ad
cmp eax, 0x20000
je 0x1011c1bb
cmp eax, 0x24000
je 0x1011c1bb
cmp eax, 0x40000
je 0x1011c1a7
cmp eax, 0x44000
jne 0x1011c1c4
mov byte[ebp-2], 1
jmp 0x1011c1c4
mov ecx, dword[ebp+0x10]
mov eax, 0x301
and ecx, eax
cmp ecx, eax
jne 0x1011c1c4
mov byte[ebp-2], 2
jmp 0x1011c1c4
mov byte[ebp-2], bl
test dword[ebp+0x10], 0x70000
je 0x1011c386
test byte[ebp-1], 0x40
mov dword[ebp-0x18], ebx
jne 0x1011c386
mov eax, dword[ebp-8]
mov ecx, 0xc0000000
and eax, ecx
cmp eax, 0x40000000
je 0x1011c2aa
cmp eax, 0x80000000
je 0x1011c271
cmp eax, ecx
jne 0x1011c386
mov eax, dword[ebp-0x14]
cmp eax, ebx
jbe 0x1011c386
cmp eax, 2
jbe 0x1011c220
cmp eax, 4
jbe 0x1011c247
cmp eax, 5
jne 0x1011c386
movsx eax, byte[ebp-2]
xor edi, edi
dec eax
je 0x1011c353
dec eax
jne 0x1011c386
mov dword[ebp-0x18], 0xfeff
mov dword[ebp-0x14], 2
jmp 0x1011c361
push 2
push ebx
push ebx
push dword[esi]
call fcn.1011c577
add esp, 0x10
or eax, edx
je 0x1011c220
push ebx
push ebx
push ebx
push dword[esi]
call fcn.1011c577
and eax, edx
add esp, 0x10
cmp eax, 0xffffffff
je 0x1011c0ff
push 3
lea eax, [ebp-0x18]
push eax
push dword[esi]
call fcn.101109f6
add esp, 0xc
cmp eax, 0xffffffff
je 0x1011c0ff
cmp eax, 2
je 0x1011c2fa
cmp eax, 3
jne 0x1011c345
cmp dword[ebp-0x18], 0xbfbbef
jne 0x1011c2fa
mov byte[ebp-2], 1
jmp 0x1011c386
mov eax, dword[ebp-0x14]
cmp eax, ebx
jbe 0x1011c386
cmp eax, 2
jbe 0x1011c220
cmp eax, 4
ja 0x1011c217
push 2
push ebx
push ebx
push dword[esi]
call fcn.1011c577
add esp, 0x10
or eax, edx
je 0x1011c220
push ebx
push ebx
push ebx
push dword[esi]
call fcn.1011c577
add esp, 0x10
and eax, edx
cmp eax, 0xffffffff
jne 0x1011c386
jmp 0x1011c0ff
mov eax, dword[ebp-0x18]
and eax, 0xffff
cmp eax, 0xfffe
jne 0x1011c322
push dword[esi]
call fcn.101110e7
pop ecx
call fcn.10105d26
push 0x16
pop esi
mov dword[eax], esi
mov eax, esi
jmp 0x1011c486
cmp eax, 0xfeff
jne 0x1011c345
push ebx
push 2
push dword[esi]
call fcn.10111ffd
add esp, 0xc
cmp eax, 0xffffffff
je 0x1011c0ff
mov byte[ebp-2], 2
jmp 0x1011c386
push ebx
push ebx
push dword[esi]
call fcn.10111ffd
add esp, 0xc
jmp 0x1011c2ec
mov dword[ebp-0x18], 0xbfbbef
mov dword[ebp-0x14], 3
mov eax, dword[ebp-0x14]
sub eax, edi
push eax
lea eax, [ebp+edi-0x18]
push eax
push dword[esi]
call fcn.1011760a
add esp, 0xc
cmp eax, 0xffffffff
je 0x1011c0ff
add edi, eax
cmp dword[ebp-0x14], edi
jg 0x1011c361
mov eax, dword[esi]
mov ecx, eax
sar ecx, 5
mov ecx, dword[ecx*4+0x102273a0]
and eax, 0x1f
shl eax, 6
lea eax, [ecx+eax+0x24]
mov cl, byte[eax]
xor cl, byte[ebp-2]
and cl, 0x7f
xor byte[eax], cl
mov eax, dword[esi]
mov ecx, eax
sar ecx, 5
mov ecx, dword[ecx*4+0x102273a0]
and eax, 0x1f
shl eax, 6
lea eax, [ecx+eax+0x24]
mov ecx, dword[ebp+0x10]
mov dl, byte[eax]
shr ecx, 0x10
shl cl, 7
and dl, 0x7f
or cl, dl
mov byte[eax], cl
cmp byte[ebp-3], bl
jne 0x1011c3f8
test byte[ebp+0x10], 8
je 0x1011c3f8
mov eax, dword[esi]
mov ecx, eax
and eax, 0x1f
sar ecx, 5
mov ecx, dword[ecx*4+0x102273a0]
shl eax, 6
lea eax, [ecx+eax+4]
or byte[eax], 0x20
mov edi, dword[ebp-8]
mov eax, 0xc0000000
mov ecx, edi
and ecx, eax
cmp ecx, eax
jne 0x1011c484
test byte[ebp+0x10], 1
je 0x1011c484
push dword[ebp-0x1c]
call dword[sym.imp.KERNEL32.dll_CloseHandle]
push ebx
push dword[ebp-0xc]
lea eax, [ebp-0x30]
push 3
push eax
push dword[ebp-0x10]
and edi, 0x7fffffff
push edi
push dword[ebp+0xc]
call dword[sym.imp.KERNEL32.dll_CreateFileA]
cmp eax, 0xffffffff
jne 0x1011c46d
call dword[sym.imp.KERNEL32.dll_GetLastError]
push eax
call fcn.10105d4c
mov eax, dword[esi]
mov ecx, eax
and eax, 0x1f
sar ecx, 5
mov ecx, dword[ecx*4+0x102273a0]
shl eax, 6
lea eax, [ecx+eax+4]
and byte[eax], 0xfe
push dword[esi]
call fcn.1011fb75
pop ecx
jmp 0x1011c005
mov esi, dword[esi]
mov ecx, esi
sar ecx, 5
mov ecx, dword[ecx*4+0x102273a0]
and esi, 0x1f
shl esi, 6
mov dword[esi+ecx], eax
mov eax, ebx
pop edi
pop esi
pop ebx
leave
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/89dc67d2f980e8488f97b1bf8cb24258