---
layout: post
title:  "main @ 20a93604f17ee6f3c2aa7b1f7a497fcf"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** main
- **Origin (md5):** 20a93604f17ee6f3c2aa7b1f7a497fcf
- **VirusTotal:** [virustotal.com/gui/file/20a93604f17ee6f3c2aa7b1f7a497fcf][virustotal_ref]

# Code Tags
<span class="tag" id="THREAD">THREAD</span>


# Behaviour Tags
<span class="bhv-tag" id="MODIFIES_DACL">MODIFIES_DACL / 0.03562882787727236</span><span class="bhv-tag" id="GENERATES_CANNARIES">GENERATES_CANNARIES / 0.02533687455680418</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-92.5508041381836, 5.878223896026611, '<b><a href="/report/main@20a93604f17ee6f3c2aa7b1f7a497fcf">main</a><br>@20a93604f17ee6f3c2aa7b1f7a497fcf</b><br>', 'point { fill-color: #e0440e; }'],
[-32.353885650634766, 40.029029846191406, '<b><a href="/report/main@e16f74a2849182d98050864255e902f8">main</a><br>@e16f74a2849182d98050864255e902f8</b><br>', 'null'],
[-64.51864624023438, -65.92986297607422, '<b><a href="/report/fcn.00442172@3d7f25d788af3e7f7707a736ac852465">fcn.00442172</a><br>@3d7f25d788af3e7f7707a736ac852465</b><br>', 'null'],
[-201.5803985595703, -108.84867858886719, '<b><a href="/report/fcn.0042f902@6e426bd8e348fab7a17ba317fb0f2d87">fcn.0042f902</a><br>@6e426bd8e348fab7a17ba317fb0f2d87</b><br>', 'null'],
[97.05599212646484, -5.0479254722595215, '<b><a href="/report/main@a314f14b11fc4f772a3e30c11b5cb1d4">main</a><br>@a314f14b11fc4f772a3e30c11b5cb1d4</b><br>', 'null'],
[-4.633025169372559, -30.370193481445312, '<b><a href="/report/fcn.00442172@6e426bd8e348fab7a17ba317fb0f2d87">fcn.00442172</a><br>@6e426bd8e348fab7a17ba317fb0f2d87</b><br>', 'null'],
[-267.552490234375, -91.45175170898438, '<b><a href="/report/fcn.0042f902@3aa98225e51cbcae2d334c8b6b4ed9fd">fcn.0042f902</a><br>@3aa98225e51cbcae2d334c8b6b4ed9fd</b><br>', 'null'],
[40.18480682373047, -80.9470443725586, '<b><a href="/report/fcn.00442172@a314f14b11fc4f772a3e30c11b5cb1d4">fcn.00442172</a><br>@a314f14b11fc4f772a3e30c11b5cb1d4</b><br>', 'null'],
[60.54125213623047, 52.992122650146484, '<b><a href="/report/main@7307643b343733b7fbd7b4b4fb482515">main</a><br>@7307643b343733b7fbd7b4b4fb482515</b><br>', 'null'],
[-221.5315704345703, -40.86860275268555, '<b><a href="/report/fcn.0042f902@146b14fc12cf789043a79d4f548a23bf">fcn.0042f902</a><br>@146b14fc12cf789043a79d4f548a23bf</b><br>', 'null'],
[-20.106081008911133, -116.66403198242188, '<b><a href="/report/fcn.00442172@b8b9cf6862b0d68d10750002e5baaf97">fcn.00442172</a><br>@b8b9cf6862b0d68d10750002e5baaf97</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push 0x11c
mov eax, 0x45ea01
call fcn.00458b40
xor edi, edi
push edi
call fcn.00413de1
pop ecx
mov esi, eax
mov dword[ebp-0xe0], edx
call fcn.004446f3
add eax, esi
push eax
call fcn.00413dae
pop ecx
call fcn.00442fc2
mov dword[ebp-0xac], 0x2b
mov dword[ebp-0x98], 0x11
mov dword[ebp-0xa0], 0x12
mov dword[ebp-0xbc], 0x49
mov eax, dword[ebp-0xa0]
mov ecx, dword[ebp-0x98]
imul eax, ecx
mov ecx, dword[ebp-0x98]
imul ecx, ecx, 0x1e
sub eax, ecx
mov ecx, dword[ebp-0xa0]
sub eax, ecx
mov dword[ebp-0xac], eax
mov eax, dword[ebp-0xbc]
mov ecx, dword[ebp-0xa0]
imul eax, ecx
mov dword[ebp-0xac], eax
mov eax, dword[ebp-0xac]
imul eax, eax, 0x13
push 0xffffffffffffffa0
pop ecx
sub ecx, eax
add ecx, dword[ebp-0xa0]
push 0xfffffffffffffff6
add ecx, dword[ebp-0x98]
add ecx, dword[ebp-0x98]
mov dword[ebp-0x98], ecx
mov eax, dword[ebp-0xa0]
mov ecx, dword[ebp-0xac]
imul eax, ecx
imul eax, eax, 0x41
mov dword[ebp-0x98], eax
mov eax, dword[ebp-0xa0]
mov ecx, dword[ebp-0xa0]
imul eax, ecx
pop ecx
sub ecx, eax
add ecx, dword[ebp-0xa0]
add ecx, dword[ebp-0xa0]
add ecx, dword[ebp-0xa0]
mov dword[ebp-0x98], ecx
mov eax, dword[ebp-0x98]
mov ecx, dword[ebp-0x98]
sub eax, ecx
add eax, dword[ebp-0xa0]
mov dword[ebp-0xa0], eax
mov eax, dword[ebp-0xbc]
mov ecx, dword[ebp-0xa0]
cmp ecx, eax
jg 0x444fea
mov eax, dword[ebp-0x98]
mov eax, dword[ebp-0xa0]
mov eax, dword[ebp-0xa0]
push 0x1e
cdq
pop ecx
idiv ecx
mov dword[ebp-0xa0], eax
call fcn.00406513
call fcn.004585d0
mov esi, eax
call fcn.004585d0
mov ebx, eax
call fcn.004585d0
mov dword[ebp-0xbc], eax
call fcn.00458634
mov dword[ebp-0xa4], eax
call fcn.00458634
push dword[eax+4]
mov eax, dword[ebp-0xa4]
push dword[eax]
call fcn.00458628
push eax
push dword[esi+0xc]
mov eax, dword[ebp-0xbc]
push dword[ebx+8]
push dword[eax+4]
push 0x462830
push dword[0x4831dc]
push edi
call fcn.00442225
add esp, 0x24
call fcn.00458600
test al, al
je 0x445066
call fcn.00458634
cmp dword[eax], 6
mov byte[ebp-0xc1], 1
jge 0x44506d
mov byte[ebp-0xc1], 0
mov dword[ebp-0xb4], 0x36
mov dword[ebp-0xac], 0xa
mov dword[ebp-0x98], 0x2e
mov dword[ebp-0xa0], 0x28
push 5
pop ebx
mov dword[ebp-0x9c], ebx
mov dword[ebp-0xc8], 0x20
mov eax, dword[ebp-0x98]
mov ecx, dword[ebp-0xac]
imul eax, ecx
mov ecx, dword[ebp-0x98]
sub eax, ecx
mov ecx, dword[ebp-0xa0]
sub eax, ecx
mov ecx, dword[ebp-0xa0]
sub eax, ecx
mov ecx, dword[ebp-0xc8]
sub eax, ecx
mov ecx, dword[ebp-0x9c]
lea eax, [eax+ecx-0x55]
add eax, dword[ebp-0xa0]
push 0x64
add eax, dword[ebp-0x98]
pop esi
add eax, dword[ebp-0xb4]
add eax, dword[ebp-0xb4]
mov dword[ebp-0xc8], eax
mov ecx, dword[ebp-0xa0]
mov eax, dword[ebp-0xac]
imul ecx, eax
mov eax, dword[ebp-0xac]
imul ecx, eax
imul ecx, ecx, 0x12
add ecx, dword[ebp-0x98]
mov eax, dword[ebp-0xac]
cdq
imul ecx, ecx, 5
idiv esi
sub eax, ecx
mov ecx, dword[ebp-0x9c]
mov edx, dword[ebp-0x98]
imul ecx, edx
add eax, ecx
mov ecx, dword[ebp-0x98]
imul ecx, ecx, 0x36
add eax, ecx
mov ecx, dword[ebp-0xa0]
sub eax, ecx
mov ecx, dword[ebp-0x9c]
lea eax, [eax+ecx-0x26]
add eax, dword[ebp-0xac]
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0x98]
mov ecx, dword[ebp-0x98]
cmp eax, ecx
jle 0x445204
mov eax, dword[ebp-0xa0]
add eax, dword[ebp-0xa0]
mov dword[ebp-0xb4], eax
mov eax, dword[ebp-0xa0]
mov eax, dword[ebp-0xa0]
mov eax, dword[ebp-0x9c]
mov ecx, dword[ebp-0xa0]
sub eax, ecx
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0xc8]
mov ecx, dword[ebp-0xb4]
imul eax, ecx
mov ecx, dword[ebp-0x9c]
imul eax, eax, 0x38
sub eax, ecx
mov ecx, dword[ebp-0xb4]
sub eax, ecx
add eax, dword[ebp-0x9c]
mov dword[ebp-0xb4], eax
mov eax, dword[ebp-0x98]
mov ecx, dword[ebp-0xac]
cmp ecx, eax
je 0x445204
mov eax, dword[ebp-0x9c]
mov ecx, dword[ebp-0x98]
imul eax, ecx
mov dword[ebp-0xa0], eax
cmp byte[ebp-0xc1], 0
je 0x445d0a
mov dword[ebp-0x124], 0x462b00
mov dword[ebp-0x120], edi
mov dword[ebp-0x11c], edi
mov dword[ebp-0x118], edi
mov dword[ebp-0x114], edi
mov dword[ebp-0x110], edi
mov dword[ebp-0x10c], edi
mov dword[ebp-4], edi
lea eax, [ebp-0x124]
mov dword[ebp-0xdc], eax
mov eax, dword[0x484fa8]
add eax, 0x10
push eax
mov dword[ebp-0xa8], eax
call dword[sym.imp.KERNEL32.dll_EnterCriticalSection]
call dword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
mov esi, dword[0x485010]
mov dword[ebp-0xe0], eax
lea eax, [ebp-0xdc]
push eax
lea eax, [ebp-0xe0]
push eax
call fcn.004064b1
push dword[ebp-0xa8]
call dword[sym.imp.KERNEL32.dll_LeaveCriticalSection]
mov dword[ebp-0xd0], edi
lea eax, [ebp-0xd0]
push eax
mov byte[ebp-4], 1
call fcn.00406030
fld qword[0x47c9b0]
fstp qword[ebp-0xa8]
fld qword[ebp-0xa8]
fsub qword[0x47c9a8]
fstp qword[ebp-0xa8]
fld qword[ebp-0xa8]
fsub qword[0x47c9a0]
fstp qword[ebp-0xa8]
fld qword[ebp-0xa8]
fsub qword[ebp-0xa8]
fld qword[0x47c998]
fadd st(1), st(0)
fld qword[ebp-0xa8]
faddp st(2)
fxch st(1)
fadd qword[0x47c990]
fadd qword[ebp-0xa8]
fsub qword[0x47c988]
fadd qword[ebp-0xa8]
fsub qword[ebp-0xa8]
fld qword[0x47c980]
fsub st(1), st(0)
fld qword[ebp-0xa8]
faddp st(2)
fxch st(1)
fstp qword[ebp-0xa8]
fld qword[ebp-0xa8]
fsub qword[ebp-0xa8]
fld qword[ebp-0xa8]
fmul qword[0x47c978]
faddp st(1)
fsub qword[ebp-0xa8]
fadd qword[ebp-0xa8]
fld qword[ebp-0xa8]
fmul qword[0x47c970]
faddp st(1)
fadd qword[ebp-0xa8]
fadd qword[ebp-0xa8]
fsub qword[0x47c968]
fstp qword[ebp-0xa8]
fld qword[ebp-0xa8]
fmul qword[ebp-0xa8]
fstp qword[ebp-0xa8]
fld qword[ebp-0xa8]
fsub qword[ebp-0xa8]
fstp qword[ebp-0xa8]
fld qword[ebp-0xa8]
fdiv qword[0x47c960]
fsub qword[ebp-0xa8]
fadd qword[0x47c958]
xor eax, eax
xor esi, esi
fsub qword[ebp-0xa8]
fadd qword[ebp-0xa8]
mov dword[ebp-0x40], edi
lea edi, [ebp-0x3c]
stosd dword
fsub qword[0x47c950]
stosd dword
fstp qword[ebp-0xa8]
stosd dword
fld qword[0x47ca58]
fstp qword[ebp-0xa8]
fld qword[ebp-0xa8]
xor eax, eax
fadd qword[ebp-0xa8]
fsub qword[0x47ca50]
fsub qword[ebp-0xa8]
fadd qword[0x47ca48]
fstp qword[ebp-0xa8]
fld qword[ebp-0xa8]
fmul qword[ebp-0xa8]
fadd qword[ebp-0xa8]
faddp st(2)
fld qword[ebp-0xa8]
fmul qword[ebp-0xa8]
faddp st(2)
fld qword[ebp-0xa8]
fsubp st(2)
fld qword[ebp-0xa8]
fld qword[0x47ca40]
fmul st(1), st(0)
fxch st(3)
faddp st(1)
fsubrp st(2)
fld qword[ebp-0xa8]
faddp st(2)
fld qword[ebp-0xa8]
fsubp st(2)
fxch st(1)
fsub qword[0x47ca38]
fadd qword[ebp-0xa8]
fstp qword[ebp-0xa8]
fadd qword[ebp-0xa8]
fstp qword[ebp-0xa8]
fld qword[ebp-0xa8]
fsub qword[0x47ca10]
fstp qword[ebp-0xa8]
fld qword[ebp-0xa8]
fmul qword[ebp-0xa8]
fadd qword[ebp-0xa8]
mov dword[ebp-0x1c], 7
mov dword[ebp-0x20], esi
mov word[ebp-0x30], ax
fstp qword[ebp-0xa8]
mov byte[ebp-4], 2
call fcn.004448e5
mov edi, eax
push 0x7b
push edi
call fcn.00413fd4
push 0x7d
push edi
mov dword[ebp-0xa4], eax
call fcn.00413fd4
add esp, 0x10
mov dword[ebp-0x9c], ebx
push 0x60
pop edi
mov dword[ebp-0x98], edi
mov dword[ebp-0xbc], eax
mov eax, dword[ebp-0x98]
push 0xffffffffffffffa9
pop ecx
sub ecx, eax
add ecx, dword[ebp-0x98]
add ecx, dword[ebp-0x9c]
mov dword[ebp-0x98], ecx
mov eax, dword[ebp-0x98]
sub dword[ebp-0x9c], eax
mov eax, dword[ebp-0x9c]
cdq
push 0x2f
pop ecx
idiv ecx
mov ecx, dword[ebp-0x98]
lea eax, [eax+ecx+0x54]
mov dword[ebp-0x98], eax
mov eax, dword[ebp-0x98]
mov ecx, dword[ebp-0x98]
imul eax, ecx
mov ecx, dword[ebp-0x98]
imul eax, eax, 0x4f
imul ecx, ecx, 0x26
sub eax, ecx
mov ecx, dword[ebp-0x9c]
mov edx, dword[ebp-0x9c]
imul ecx, edx
add eax, ecx
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0x9c]
imul eax, eax, 0x2d
add eax, dword[ebp-0x98]
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0xa4]
cmp eax, esi
je 0x44575f
cmp dword[ebp-0xbc], eax
jbe 0x44575f
mov dword[ebp-0xac], 0x36
mov dword[ebp-0xb4], 0xa
mov dword[ebp-0x98], 0x2e
mov dword[ebp-0xa0], 0x28
mov dword[ebp-0x9c], ebx
mov dword[ebp-0xc8], 0x20
mov eax, dword[ebp-0x98]
mov ecx, dword[ebp-0xb4]
imul eax, ecx
mov ecx, dword[ebp-0x98]
sub eax, ecx
mov ecx, dword[ebp-0xa0]
sub eax, ecx
mov ecx, dword[ebp-0xa0]
sub eax, ecx
mov ecx, dword[ebp-0xc8]
sub eax, ecx
mov ecx, dword[ebp-0x9c]
lea eax, [eax+ecx-0x55]
add eax, dword[ebp-0xa0]
push 0x64
add eax, dword[ebp-0x98]
pop esi
add eax, dword[ebp-0xac]
add eax, dword[ebp-0xac]
mov dword[ebp-0xc8], eax
mov ecx, dword[ebp-0xa0]
mov eax, dword[ebp-0xb4]
imul ecx, eax
mov eax, dword[ebp-0xb4]
imul ecx, eax
imul ecx, ecx, 0x12
add ecx, dword[ebp-0x98]
mov eax, dword[ebp-0xb4]
cdq
imul ecx, ecx, 5
idiv esi
sub eax, ecx
mov ecx, dword[ebp-0x9c]
mov edx, dword[ebp-0x98]
imul ecx, edx
add eax, ecx
mov ecx, dword[ebp-0x98]
imul ecx, ecx, 0x36
add eax, ecx
mov ecx, dword[ebp-0xa0]
sub eax, ecx
mov ecx, dword[ebp-0x9c]
lea eax, [eax+ecx-0x26]
add eax, dword[ebp-0xb4]
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0x98]
mov ecx, dword[ebp-0x98]
cmp eax, ecx
jle 0x445728
mov eax, dword[ebp-0xa0]
add eax, dword[ebp-0xa0]
mov dword[ebp-0xac], eax
mov eax, dword[ebp-0xa0]
mov eax, dword[ebp-0xa0]
mov eax, dword[ebp-0x9c]
mov ecx, dword[ebp-0xa0]
sub eax, ecx
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0xc8]
mov ecx, dword[ebp-0xac]
imul eax, ecx
mov ecx, dword[ebp-0x9c]
imul eax, eax, 0x38
sub eax, ecx
mov ecx, dword[ebp-0xac]
sub eax, ecx
add eax, dword[ebp-0x9c]
mov dword[ebp-0xac], eax
mov eax, dword[ebp-0x98]
mov ecx, dword[ebp-0xb4]
cmp ecx, eax
je 0x445728
mov eax, dword[ebp-0x9c]
mov ecx, dword[ebp-0x98]
imul eax, ecx
mov dword[ebp-0xa0], eax
mov ecx, dword[ebp-0xa4]
mov eax, dword[ebp-0xbc]
sub eax, ecx
sar eax, 1
inc eax
lea esi, [ebp-0x30]
call fcn.004057c9
cmp dword[ebp-0x1c], 8
mov esi, dword[ebp-0x30]
jae 0x44574d
lea esi, [ebp-0x30]
call fcn.004429a6
lea ecx, [ebp-0x40]
push ecx
push esi
call dword[eax+0x208]
xor esi, esi
mov eax, dword[ebp-0xd0]
mov dword[ebp-0xe8], eax
mov dword[ebp-0xec], 0x462c00
mov dword[ebp-0x9c], ebx
mov dword[ebp-0x98], edi
mov eax, dword[ebp-0x98]
push 0xffffffffffffffa9
pop ecx
sub ecx, eax
add ecx, dword[ebp-0x98]
push 0x2f
add ecx, dword[ebp-0x9c]
mov dword[ebp-0xbc], esi
mov dword[ebp-0x98], ecx
mov eax, dword[ebp-0x98]
sub dword[ebp-0x9c], eax
mov eax, dword[ebp-0x9c]
cdq
pop ecx
idiv ecx
mov ecx, dword[ebp-0x98]
push 0xffffffffffffffa9
lea eax, [eax+ecx+0x54]
mov dword[ebp-0x98], eax
mov eax, dword[ebp-0x98]
mov ecx, dword[ebp-0x98]
imul eax, ecx
mov ecx, dword[ebp-0x98]
imul eax, eax, 0x4f
imul ecx, ecx, 0x26
sub eax, ecx
mov ecx, dword[ebp-0x9c]
mov edx, dword[ebp-0x9c]
imul ecx, edx
add eax, ecx
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0x9c]
imul eax, eax, 0x2d
add eax, dword[ebp-0x98]
mov dword[ebp-0xd8], esi
mov dword[ebp-0x9c], eax
mov dword[ebp-0x9c], ebx
mov dword[ebp-0x98], edi
mov eax, dword[ebp-0x98]
pop ecx
sub ecx, eax
add ecx, dword[ebp-0x98]
push 0x2f
add ecx, dword[ebp-0x9c]
mov dword[ebp-0x98], ecx
mov eax, dword[ebp-0x98]
sub dword[ebp-0x9c], eax
mov eax, dword[ebp-0x9c]
cdq
pop ecx
idiv ecx
mov ecx, dword[ebp-0x98]
lea eax, [eax+ecx+0x54]
mov dword[ebp-0x98], eax
mov eax, dword[ebp-0x98]
mov ecx, dword[ebp-0x98]
imul eax, ecx
mov ecx, dword[ebp-0x98]
imul eax, eax, 0x4f
imul ecx, ecx, 0x26
sub eax, ecx
mov ecx, dword[ebp-0x9c]
mov edx, dword[ebp-0x9c]
imul ecx, edx
add eax, ecx
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0x9c]
imul eax, eax, 0x2d
add eax, dword[ebp-0x98]
mov dword[ebp-0x9c], eax
cmp dword[ebp-0x20], esi
je 0x4459c3
call fcn.004429a6
lea ecx, [ebp-0xd8]
push ecx
push esi
push 4
lea ecx, [ebp-0xec]
push ecx
lea ecx, [ebp-0x40]
push ecx
call dword[eax+0x1ec]
mov dword[ebp-0xbc], eax
cmp eax, esi
jge 0x4459c3
fld qword[0x47c9d8]
fstp qword[ebp-0xcc]
fld qword[0x47c9d0]
fstp qword[ebp-0xa8]
fld qword[0x47c9c8]
fstp qword[ebp-0xa8]
fld qword[0x47c9c0]
fstp qword[ebp-0xb0]
fld qword[ebp-0xa8]
fdiv qword[0x47c9b8]
fstp qword[ebp-0xa8]
fld qword[ebp-0xcc]
fadd qword[0x47c9f0]
cmp dword[ebp-0x1c], 8
mov eax, dword[ebp-0x30]
fstp qword[ebp-0xa8]
jae 0x44594c
lea eax, [ebp-0x30]
cmp eax, esi
je 0x445960
cmp dword[ebp-0x1c], 8
jb 0x44595b
mov eax, dword[ebp-0x30]
jmp 0x445965
lea eax, [ebp-0x30]
jmp 0x445965
mov eax, dword[0x4838d8]
push eax
lea eax, [ebp-0x78]
call fcn.00405844
lea eax, [ebp-0x78]
push eax
mov ecx, 0xfde9
lea edx, [ebp-0x94]
mov byte[ebp-4], 3
call fcn.00452a24
pop ecx
mov byte[ebp-4], 4
cmp dword[eax+0x14], 0x10
jb 0x445993
mov eax, dword[eax]
push eax
push dword[ebp-0xbc]
push dword[0x4831e0]
push 1
call fcn.00442225
add esp, 0x10
push 1
xor edi, edi
lea esi, [ebp-0x94]
call fcn.004053d9
push 1
lea esi, [ebp-0x78]
call fcn.0040571d
mov byte[ebp-4], bl
push dword[ebp-0xd0]
lea eax, [ebp-0xd4]
push eax
call fcn.00405d0e
mov byte[ebp-4], 6
mov dword[ebp-0xac], 0x36
mov dword[ebp-0xb4], 0xa
mov dword[ebp-0x98], 0x2e
mov dword[ebp-0xa0], 0x28
mov dword[ebp-0x9c], ebx
mov dword[ebp-0xc8], 0x20
mov eax, dword[ebp-0x98]
mov ecx, dword[ebp-0xb4]
imul eax, ecx
mov ecx, dword[ebp-0x98]
sub eax, ecx
mov ecx, dword[ebp-0xa0]
sub eax, ecx
mov ecx, dword[ebp-0xa0]
sub eax, ecx
mov ecx, dword[ebp-0xc8]
sub eax, ecx
mov ecx, dword[ebp-0x9c]
lea eax, [eax+ecx-0x55]
add eax, dword[ebp-0xa0]
push 0x64
add eax, dword[ebp-0x98]
pop esi
add eax, dword[ebp-0xac]
add eax, dword[ebp-0xac]
mov dword[ebp-0xc8], eax
mov ecx, dword[ebp-0xa0]
mov eax, dword[ebp-0xb4]
imul ecx, eax
mov eax, dword[ebp-0xb4]
imul ecx, eax
imul ecx, ecx, 0x12
add ecx, dword[ebp-0x98]
mov eax, dword[ebp-0xb4]
cdq
imul ecx, ecx, 5
idiv esi
sub eax, ecx
mov ecx, dword[ebp-0x9c]
mov edx, dword[ebp-0x98]
imul ecx, edx
add eax, ecx
mov ecx, dword[ebp-0x98]
imul ecx, ecx, 0x36
add eax, ecx
mov ecx, dword[ebp-0xa0]
sub eax, ecx
mov ecx, dword[ebp-0x9c]
lea eax, [eax+ecx-0x26]
add eax, dword[ebp-0xb4]
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0x98]
mov ecx, dword[ebp-0x98]
cmp eax, ecx
jle 0x445b70
mov eax, dword[ebp-0xa0]
add eax, dword[ebp-0xa0]
mov dword[ebp-0xac], eax
mov eax, dword[ebp-0xa0]
mov eax, dword[ebp-0xa0]
mov eax, dword[ebp-0x9c]
mov ecx, dword[ebp-0xa0]
sub eax, ecx
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0xc8]
mov ecx, dword[ebp-0xac]
imul eax, ecx
mov ecx, dword[ebp-0x9c]
imul eax, eax, 0x38
sub eax, ecx
mov ecx, dword[ebp-0xac]
sub eax, ecx
add eax, dword[ebp-0x9c]
mov dword[ebp-0xac], eax
mov eax, dword[ebp-0x98]
mov ecx, dword[ebp-0xb4]
cmp ecx, eax
je 0x445b70
mov eax, dword[ebp-0x9c]
mov ecx, dword[ebp-0x98]
imul eax, ecx
mov dword[ebp-0xa0], eax
lea esi, [ebp-0x124]
call fcn.00406421
mov byte[ebp-4], 7
mov eax, dword[ebp-0xd4]
test eax, eax
je 0x445b8e
lea ebx, [eax-4]
jmp 0x445b90
xor ebx, ebx
call fcn.0044c5d0
mov byte[ebp-4], 5
mov eax, dword[ebp-0xd4]
xor ebx, ebx
cmp eax, ebx
je 0x445bab
mov ecx, dword[eax]
push eax
call dword[ecx+8]
mov dword[ebp-4], 2
jmp 0x445bfa
cmp dword[ebp-0x20], ebx
je 0x445c8f
cmp dword[ebp-0xbc], ebx
jl 0x445c8f
mov dword[ebp-0xa4], 0x28
mov dword[ebp-0xbc], 0x23
mov dword[ebp-0xc8], 0x57
mov dword[ebp-0xa4], 8
mov dword[ebp-0xa4], 0x2a
mov dword[ebp-0xac], 0x16
mov eax, dword[ebp-0xbc]
imul eax, eax, 0x27
mov dword[ebp-0xa4], eax
mov eax, dword[ebp-0xc8]
mov ecx, dword[ebp-0xbc]
cmp ecx, eax
jle 0x445c84
mov eax, dword[ebp-0xbc]
mov ecx, dword[ebp-0xac]
imul eax, eax, 0x44
sub eax, ecx
sub eax, 0x1e
mov dword[ebp-0xa4], eax
push dword[ebp-0xd8]
call fcn.0044303c
call fcn.00406329
push 1
xor edi, edi
lea esi, [ebp-0x30]
call fcn.0040571d
mov byte[ebp-4], bl
mov eax, dword[ebp-0xd0]
cmp eax, ebx
je 0x445cb3
mov ecx, dword[eax]
push eax
call dword[ecx+8]
or dword[ebp-4], 0xffffffff
cmp dword[ebp-0x114], ebx
je 0x445cd1
push dword[ebp-0x114]
call fcn.004139cc
pop ecx
mov dword[ebp-0x114], ebx
mov dword[ebp-0x110], ebx
mov dword[ebp-0x10c], ebx
cmp dword[ebp-0x120], ebx
je 0x445cf7
push dword[ebp-0x120]
call fcn.004139cc
pop ecx
mov dword[ebp-0x120], ebx
push 5
mov dword[ebp-0x11c], ebx
mov dword[ebp-0x118], ebx
pop ebx
xor edi, edi
jmp 0x445d1b
push dword[0x4838c0]
push dword[0x4838bc]
call fcn.00443f95
fld qword[0x47ca30]
fstp qword[ebp-0xcc]
fld qword[0x47ca28]
fstp qword[ebp-0xa8]
fld qword[0x47ca20]
fstp qword[ebp-0xb8]
fld qword[0x47ca18]
fstp qword[ebp-0xc0]
fld qword[0x47c970]
fstp qword[ebp-0xb0]
fld qword[0x47ca10]
fstp qword[ebp-0xb8]
fld qword[ebp-0xa8]
fmul qword[0x47ca08]
fmul qword[ebp-0xc0]
fmul qword[ebp-0xa8]
fmul qword[0x47ca00]
fmul qword[ebp-0xc0]
fadd qword[0x47c9f8]
fsub qword[ebp-0xb8]
fstp qword[ebp-0xb8]
fld qword[ebp-0xb0]
fld qword[ebp-0xa8]
fucompp
fnstsw ax
test ah, 0x44
jp 0x445df6
fld qword[ebp-0xa8]
fmul qword[ebp-0xa8]
fmul qword[0x47c9e8]
fmul qword[ebp-0xa8]
fmul qword[ebp-0xcc]
fsub qword[ebp-0xc0]
fadd qword[0x47c9e0]
fstp qword[ebp-0xcc]
fld qword[ebp-0xb0]
fadd qword[0x47c9f0]
fadd qword[ebp-0xcc]
fstp qword[ebp-0xb8]
push dword[0x4831e8]
push edi
call fcn.00442225
pop ecx
pop ecx
call fcn.004061a4
call fcn.00442f04
mov eax, dword[0x484fcc]
cmp eax, edi
je 0x445e22
mov esi, eax
call fcn.004429a6
push esi
call dword[eax+0x44]
mov dword[ebp-0xac], 0x36
mov dword[ebp-0xb4], 0xa
mov dword[ebp-0x98], 0x2e
mov dword[ebp-0xa0], 0x28
mov dword[ebp-0x9c], ebx
mov dword[ebp-0xbc], 0x20
mov eax, dword[ebp-0x98]
mov ecx, dword[ebp-0xb4]
imul eax, ecx
mov ecx, dword[ebp-0x98]
sub eax, ecx
mov ecx, dword[ebp-0xa0]
sub eax, ecx
mov ecx, dword[ebp-0xa0]
sub eax, ecx
mov ecx, dword[ebp-0xbc]
sub eax, ecx
mov ecx, dword[ebp-0x9c]
lea eax, [eax+ecx-0x55]
add eax, dword[ebp-0xa0]
push 0x64
add eax, dword[ebp-0x98]
pop esi
add eax, dword[ebp-0xac]
add eax, dword[ebp-0xac]
mov dword[ebp-0xbc], eax
mov ecx, dword[ebp-0xa0]
mov eax, dword[ebp-0xb4]
imul ecx, eax
mov eax, dword[ebp-0xb4]
imul ecx, eax
imul ecx, ecx, 0x12
add ecx, dword[ebp-0x98]
mov eax, dword[ebp-0xb4]
cdq
imul ecx, ecx, 5
idiv esi
sub eax, ecx
mov ecx, dword[ebp-0x9c]
mov edx, dword[ebp-0x98]
imul ecx, edx
add eax, ecx
mov ecx, dword[ebp-0x98]
imul ecx, ecx, 0x36
add eax, ecx
mov ecx, dword[ebp-0xa0]
sub eax, ecx
mov ecx, dword[ebp-0x9c]
lea eax, [eax+ecx-0x26]
add eax, dword[ebp-0xb4]
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0x98]
mov ecx, dword[ebp-0x98]
cmp eax, ecx
jle 0x445fb6
mov eax, dword[ebp-0xa0]
add eax, dword[ebp-0xa0]
mov dword[ebp-0xac], eax
mov eax, dword[ebp-0xa0]
mov eax, dword[ebp-0xa0]
mov eax, dword[ebp-0x9c]
mov ecx, dword[ebp-0xa0]
sub eax, ecx
mov dword[ebp-0x9c], eax
mov eax, dword[ebp-0xbc]
mov ecx, dword[ebp-0xac]
imul eax, ecx
mov ecx, dword[ebp-0x9c]
imul eax, eax, 0x38
sub eax, ecx
mov ecx, dword[ebp-0xac]
sub eax, ecx
add eax, dword[ebp-0x9c]
mov dword[ebp-0xac], eax
mov eax, dword[ebp-0x98]
mov ecx, dword[ebp-0xb4]
cmp ecx, eax
je 0x445fb6
mov eax, dword[ebp-0x9c]
mov ecx, dword[ebp-0x98]
imul eax, ecx
mov dword[ebp-0xa0], eax
mov eax, dword[0x484fd0]
cmp eax, edi
je 0x445fca
mov esi, eax
call fcn.004429a6
push esi
call dword[eax+0x44]
xor eax, eax
call fcn.00458b9c
ret 0x10

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/20a93604f17ee6f3c2aa7b1f7a497fcf