---
layout: post
title:  "fcn.10a6c13a @ 89dc67d2f980e8488f97b1bf8cb24258"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.10a6c13a
- **Origin (md5):** 89dc67d2f980e8488f97b1bf8cb24258
- **VirusTotal:** [virustotal.com/gui/file/89dc67d2f980e8488f97b1bf8cb24258][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [307.3021240234375, 265.1888122558594, '<b><a href="/report/fcn.10a6c13a@89dc67d2f980e8488f97b1bf8cb24258">fcn.10a6c13a</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>push 0x5c50d058<br>push ebp<br>lea ebp, [esp-0x78]<br>sub esp, 0x11c<br>push edi<br>call fcn.10a74e29<br>call fcn.10abade6<br>jge 0x10a6c1ad<br>je 0x10a909f8<br>jmp 0x10ac1f01<br>sub eax, 0xf2f606be<br>and edi, dword[ebx+0x251a4306]<br>mov ebx, 0x772ef71b<br>shl byte[ebx], cl<br>lahf <br>bound ebp, qword[ecx+0x4d]<br>out dx, al<br>and bh, byte[ebx+0x269fa80a]<br>mov ebx, 0xc900b30a<br>movsb byte<br>out dx, al<br>mov byte[0xbdfdf080], al<br>into <br>movsb byte<br>dec edx<br>cmpsb byte[esi], byte<br>xor al, 0xd6<br>add eax, 0x8736e5a7<br>retf 0xeba4<br>mov eax, dword[ebp-4]<br>jmp 0x1006df79<br>pop eax<br>push ss<br>arpl word[esi-0x41d245a0], sp<br>sbb al, 0x6f<br>dec edi<br>sub bh, byte[esi+0x787bde38]<br>sar byte[edi+edx*2+0x60], cl<br>imul ebx, dword[ecx], 0x38bb26a1<br>jne 0x10a909db<br>lodsb al, byte[esi]<br>retf 0xe6d5<br>push ecx<br>or eax, 0xbb81efe7<br>mov ebp, 0x79a32be3<br>shl byte[edi+0x39695edf], cl<br>sbb esi, dword[edx+edx*8-0x71]<br>push edi<br>call fcn.10acfbf5<br>mov esi, eax<br>pop ecx<br>test esi, esi<br>je 0x10a6eff1<br>call[eax+ebp*8+1] <br>pushfd <br>call 0x10a90a10<br>je 0x10a90992<br>add al, 0x24<br>loope 0x10a90a2d<br>add byte[eax], al<br>ret <br>inc ebx<br>sbb ah, byte[0xaf8e38bb]<br>jae 0x10a90a08<br>popfd <br>push edx<br>pushal <br>imul ebx, dword[0x40d279ff], 0x25696047<br>mov esp, 0xc1e9c252<br>mov bl, 0x58<br>push eax<br>mov eax, 0x39c024e9<br>lea eax, [eax-0x39c023e5]<br>xchg dword[esp], eax<br>lea ecx, [ebp-0x110]<br>push ecx<br>push eax<br>call dword[sym.imp.KERNEL32.dll_GetModuleFileNameA]<br>push edx<br>call 0x10ac1f26<br>jecxz 0x10ac1f81<br>add bl, ah<br>pop edx<br>lea edx, [edx-0x5adca]<br>jmp edx<br>and al, 0xc<br>add byte[eax], al<br>add byte[edi-0x48], bl<br>sub eax, 0x24bc8b3b<br>adc byte[eax], al<br>add byte[eax], al<br>mov dword[esp+8], edi<br>pop edi<br>pop ebx<br>pop ebp<br>pushfd <br>call 0x10ac1fa2<br>jne 0x10ac1f24<br>add al, 0x24<br>jp 0x10ac1f81<br>pop esp<br>inc ebx<br>jo 0x10ac2008<br>mov ebx, dword[esi]<br>add ebx, 0x62416ffd<br>add ebx, dword[edi]<br>add esi, 4<br>jmp 0x10a5665a<br>jae 0x10ac206d<br>cmpsb byte[esi], byte<br>cmp dword[esi+0x2c], ebx<br>mov esi, 0xa3988b1a<br>test dl, bl<br>call 0x61fff1a2<br>pop es<br>cmp byte[edx+0x3e540c1a], 0xdc<br>std <br>mov ebp, 0x4b73a4ce<br>xor eax, 0x12<br>mov dword[ebp+0x737993e5], esp<br>sal cl, cl<br>inc eax<br>pop ebp<br>imul esp, dword[0xd4e5a3c7], 0x1cbe2cdc<br>pushal <br>sahf <br>ret 0x1c9a<br>jns 0x10ac20cf<br>imul edx, dword[eax-0x352d84d8], 0x5ea51831<br>sub al, 0x2b<br>movsb byte<br>xor esp, esp<br>xchg ecx, edx<br>imul eax, edi, 0x1cbb1ef0<br>push eax<br>hlt <br>add edi, edx<br>rcr dword[ecx+0x43], 1<br>pop ebp<br>imul esi, esi, 0xbfefe361<br>sbb ebp, dword[edi]<br>mov esi, 0x23f2f631<br>mov ebx, 0x81ae1131<br>mov edx, 0xd701d508<br>aad 1<br>xlatb <br>shl dword[edx+0x40], 1<br>pop ebp<br>imul edx, dword[edx-0x1d1019e8], 0xf4f086cf<br>inc esi<br>js 0x10ac20b5<br>iretd <br>in eax, dx<br>jl 0x10ac2142<br>imul edi, dword[edi+0x7be2f1b], 0xbb1f26a6<br>or ah, bl<br>fdiv dword[ebx-0x2e]<br>push esp<br>inc eax<br>pop ebp<br>imul ebp, dword[ecx+0x15], 0xa895efe4<br>test eax, esi<br>in al, 0x22<br>and eax, 0xb26908bb<br>js 0x10ac20dc<br>imul esi, dword[edx+0x4033d278], 0x5b48695d<br>loopne 0x10ac2101<br>xor eax, dword[eax+0x5d]<br>imul ecx, dword[eax+0x5b], 0x5baeefe0<br>scasb al, byte<br>pop ebx<br>test al, dh<br>adc dword[esi+0x6908ba81], ebp<br>mov dl, 0x78<br>shl byte[esi], cl<br>inc eax<br>pop ebp<br>imul ebp, dword[ecx+0x15], 0xa3ecefe4<br>test al, dh<br>inc ebx<br>sbb ah, byte[0xff1d07bb]<br>jns 0x10ac2106<br>sar dword[ebx], 0x5d<br>imul edi, dword[edx], 0xebc25319<br>xchg edi, eax<br>mov al, 0x58<br>xor byte[esi+0x52013d30], bh<br>ret 0x7663<br><eoc> ', 'point { fill-color: #e0440e; }'],
[-382.8343200683594, -91.30455780029297, '<b><a href="/report/fcn.10a5987f@89dc67d2f980e8488f97b1bf8cb24258">fcn.10a5987f</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>ror byte[eax+eax*8+0x547b6963], cl<br>mov dword[0x2356e1e5], eax<br>mov ebx, 0xc900b31a<br>movsb byte<br>in al, 0xed<br>xchg al, dh<br>aam 0x8c<br>lahf <br>in eax, 0x93<br>jns 0x10a5990f<br>rcr byte[edx+0x1b6963d0], cl<br>fild word[edx]<br>in eax, 0xf6<br>popal <br>jecxz 0x10a59898<br>cmp dword[esi+0x2c], ebx<br>mov esi, 0xa5f0d71a<br>test byte[ecx], dh<br>in al, 0x87<br>sal dword[ebp-0x457df8af], 1<br>sbb al, byte[ebp+0xb]<br>cmp ebx, esp<br>std <br>mov ebp, 0xede4a4ce<br>xchg al, dh<br>aam 0x8c<br>lahf <br>in eax, 0x93<br>jns 0x10a59942<br>rcl byte[ebx-0x38], cl<br>arpl word[ecx+0x3a], bp<br>and al, 0xa4<br>in eax, 0xd4<br>fsubr qword[esi+edi*4]<br>aam 0xdc<br>sub al, 0xbe<br>sbb al, 0xba<br>rol ecx, 1<br>lcall 0x7ad5, 0x69dc1f1c<br>lea ecx, [ebx-0x42]<br>sbb al, 0xcd<br>add eax, 0x479d184<br>inc edx<br>lds ebx, [edx+0x2a4f6f1c]<br>mov esi, 0x73af8e1c<br>ror byte[edi-0x3395ff43], cl<br>stosd dword<br>jns 0x10a598d8<br>js 0x10a59908<br>sbb esp, dword[ebp-0x2d865434]<br>imul edi<br>out dx, eax<br>bound ebp, qword[ecx+0x37]<br>jbe 0x10a59988<br>sar dh, cl<br>and al, 0x17<br>movsd dword<br>rol dword[ecx], 1<br>in al, dx<br>fadd st(3), st(0)<br>dec esi<br>call fcn.10a5a1df<br>add byte[eax], al<br>add byte[ebx+0x53], bh<br>xchg edx, eax<br>or byte[eax], al<br>add byte[eax], al<br>add byte[eax], al<br>jnp 0x10a599a5<br>lea esi, [ebp-0x30]<br>mov dword[ebp-0x14], edi<br>call fcn.100038eb<br>mov edi, dword[eax+0x14]<br>push 4<br>push eax<br>mov eax, 0x4efb96ee<br>lea eax, [eax-0x4efb66ee]<br>xchg dword[esp], eax<br>inc edi<br>jmp 0x10a921bf<br>mov dword[esp+8], ecx<br>pop ecx<br>pop dword[esp+8]<br>push edx<br>mov edx, dword[esp]<br>push edx<br>mov dword[esp+4], 0x38a7bea6<br>push eax<br>mov eax, dword[esp+0xc]<br>mov dword[esp], eax<br>pop eax<br>pop edx<br>cmpsd dword[esi], dword<br>cmp byte[eax-0x75], dl<br>test byte[esp+ecx], ah<br>add byte[eax], al<br>add byte[ecx+0x5a582404], cl<br>pushfd <br>lea esp, [esp+0xc]<br>push ebx<br>mov ebx, dword[esp]<br>pushfd <br>call 0x10a599c7<br>jns 0x10a59949<br>add al, 0x24<br>hlt <br>push edi<br>push 0<br>push eax<br>call fcn.10109950<br>add esp, 0xc<br>push ebx<br>push ebx<br>call 0x10a81741<br>js 0x10a8179d<br>lea ebx, [ebx-0x1a43]<br>jmp ebx<br>pop ds<br>mov ebx, 0x73d8dc1c<br>sal byte[ecx+ecx*2+0x61], cl<br>imul edx, dword[edx+0x36efe618], 0x16f08447<br>pop ss<br>mov esi, 0x20240308<br>mov ebx, 0x6a736e08<br>cli <br>out 0x76, eax<br>out 0xea, eax<br>add edi, esi<br>sub al, 0xbe<br>and ch, bl<br>imul ebp, ebp, 0x76e722f0<br>out 0xea, eax<br>push ss<br>pop ss<br>mov esi, 0x251a431f<br>mov ebx, 0x78b2691c<br>sal byte[esi], cl<br>dec ecx<br>popal <br>imul edx, dword[edx+0x36efe618], 0xd8f08447<br>into <br>sub eax, 0xee4d22be<br>and bh, byte[ebx+0x2356e11f]<br>mov ebx, 0xcebdfd22<br>movsb byte<br>jae 0x10a8184b<br>xor eax, 0x47<br>pop es<br>cmpsd dword[esi], dword<br>in eax, 0x75<br>sub al, 0xac<br>retf 0xc871<br>in eax, 0x2d<br>sar dword[ecx-0x2e], 0xef<br>push eax<br>popal <br>imul ebx, dword[edi+0x14], 0x61f6e5a6<br>jecxz 0x10a81843<br>cmp dword[0x8b37be2f], edi<br>cwde <br>mov dword[0x879bf384], eax<br>rol dword[edi], 1<br>mov dh, 5<br>cmp byte[edx+0x3b0b4537], 0xdc<br>mov bl, 0<br>leave <br>movsb byte<br>dec edx<br>cmpsb byte[esi], byte<br>xor al, 0x71<br>and byte[ebp+0x737993e5], 0xd2<br>test al, 0x48<br>popal <br>imul esp, dword[0xd4e5a3c7], 0x1bbe2cdc<br>xor eax, 0x1b9ac2ad<br>push es<br>pop es<br>lodsb al, byte[esi]<br>mov ebp, 0x86a9ef1b<br>rcl edx, 1<br>add al, 0x42<br>lds ebx, [edx+0x30430c1b]<br>mov esi, 0x79abcc1b<br>rol byte[eax+0x2b6961a1], cl<br>mov dword[0x3893d279], eax<br>sbb byte[ebp-0x2e29c907], ah<br>sub ch, bh<br>popal <br>imul edx, dword[eax-0x252d84d8], 0x86a51733<br>pop edx<br>enter 0x31a4, 0xffffffffffffffe4<br>xchg ecx, edx<br>and byte[0x1bbb22fb], bl<br>push eax<br>hlt <br>push edi<br>push 0<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>mov dword[ebp-0x10], eax<br>test eax, eax<br>je fcn.10a77406<br>jmp 0x10a8172d<br><eoc> ', 'null'],
[270.9664306640625, -510.7427062988281, '<b><a href="/report/fcn.1060e28c@89dc67d2f980e8488f97b1bf8cb24258">fcn.1060e28c</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>push eax<br>call fcn.1001041e<br>jmp 0x10679ea5<br>mov esp, 0x824<br>add byte[ecx-0x75], dl<br>mov word[esp+eax], fs<br>add byte[eax], al<br>add byte[ecx-0x75], dl<br>mov word[esp+eax], fs<br>add byte[eax], al<br>add byte[ebx-0x18], dl<br>add dword[eax], eax<br>add byte[eax], al<br>jne 0x1060e2de<br>lea ebx, [ebx-0x2c212]<br>jmp ebx<br>lea esp, [esp+4]<br>push ebx<br>push eax<br>push esi<br>call fcn.105d2593<br>jae 0x1060e2f4<br>inc edx<br>cld <br>push dword[ebx+0x5a]<br>pop edx<br>cmp eax, ebx<br>je 0x10639289<br>jmp 0x105e5970<br>std <br>push dword[edi+0x1d]<br>jo 0x1060e295<br>mov edx, 0xdd310d17<br>mov edx, 0x354bc720<br>rcr byte[eax+0x1d69a87e], cl<br>loope 0x1060e265<br>out dx, eax<br>out dx, al<br>out dx, al<br>jo 0x1060e2b0<br>daa <br>dec ebp<br>fdivr dword[edx-0x209fdae9]<br>mov edx, 0x2e44f620<br>fistp qword[edx+0x2e44f620]<br>shl byte[esi+0x2b69a87e], cl<br>fdivr qword[edx]<br>out dx, eax<br>out dx, al<br>imul ebp, dword[ebx], 0x65ef3adc<br>out dx, al<br>jo 0x1060e2ca<br>ret 0xdf15<br>lea ebx, [ecx+0x68]<br>jmp 0x1060e331<br>push 0xa2f03aeb<br>into <br>mov ah, byte[edx+ebp+0x32f03ae6]<br>cwde <br>popal <br>in eax, 0x2d<br>xor dword[edx-0x36], ebp<br>xor cl, byte[ebx+ebp*8]<br>mov ebp, 0x87cb2e1f<br>movsb byte<br>mov dword[0xeb2ae207], esp<br>sbb byte[esi-0x5b7e5f72], ah<br>mov ch, 0xdc<br>cmp al, 0xf0<br>cmp edx, dword[edi-0x50011aa3]<br>das <br>shl bl, cl<br>jne 0x1060e2d4<br>pop es<br>loop 0x1060e340<br>jmp 0x1060e330<br>imul eax, esi, 0x69e5589e<br>in eax, 0x69<br>imul esp, ebx, 0xa21fbadf<br>into <br>mov ah, byte[ecx+0x7bf0407f]<br>jnp 0x1060e3a1<br>jecxz 0x1060e313<br>mov edx, 0x8acea21f<br>movsb byte<br>and dword[edi+0x40], edi<br>pushal <br>in eax, 0xfe<br>scasd eax, dword<br>das <br>sal cl, cl<br>test dword[eax+0x5fd26169], ebp<br>in eax, 0xc0<br>jno 0x1060e2f2<br>out dx, eax<br>pop edi<br>shl cl, cl<br>mov ebp, 0x64d58a1f<br>test byte[ebx], cl<br>inc ebx<br>cmp eax, 0x68750cd1<br>fnstsw word[edx-0x9704ce1]<br>fld xword[ebx]<br>cmp esp, dword[ebx]<br>movsb byte<br>and dword[edi+0x40], edi<br>mov ebp, 0x83274e34<br>lcall 0x34be, 0x871c434<br>cld <br>inc eax<br>cmp al, 0xd1<br>aam 0x69<br>leave <br>sbb dword[edx-0x157711cc], 0xc0ba34bd<br>sub eax, 0x8e593d2<br>push 0x35<br>sahf <br>xor al, 0xd2<br>dec edx<br>and ebp, dword[edx+0x33e90da5]<br>ror byte[edx+0x516a08d3], cl<br>push 0x51<br>insb byte<br>xor al, 0xd2<br>mov ch, 0xeb<br>mov byte[0x899785a5], al<br>movsb byte<br>add dword[esi+0x44], esp<br>shl dword[edx], 1<br>aad 0x57<br>fstp xword[edx-0xb9f95cc]<br>or eax, 0xffffffb3<br>mov al, byte[0x805c61ef]<br>movsb byte<br>dec ecx<br>mov edi, dword[ebx-0x24]<br>mov esi, esi<br>mov dh, 0x97<br>out dx, eax<br>out 0x82, eax<br>ja 0x1060e3c2<br>pushal <br>hlt <br>jle 0x1060e3b9<br>insb byte<br>mov eax, dword[0xa32284dc]<br>xchg edx, eax<br>or byte[eax], al<br>add byte[eax], al<br>add byte[eax], al<br>jl 0x1060e384<br>and al, 4<br>pop esi<br>pop ebp<br>pop eax<br>call dword[sym.imp.USER32.dll_GetWindowThreadProcessId]<br>call dword[sym.imp.KERNEL32.dll_GetCurrentProcessId]<br>push eax<br>mov eax, dword[esp]<br>push edi<br>push ebp<br>pushfd <br>xor edi, edi<br>add edi, dword[esp+4]<br>mov ebp, 0x5f761d58<br>lea ebp, [ebp+0x2bb44424]<br>add edi, ebp<br>mov ebp, 0x2490c010<br>pushfd <br>call 0x1060e434<br>je 0x1060e3b6<br>add al, 0x24<br>loopne 0x1060e43d<br>push es<br>add bl, al<br>jnp 0x1060e3ce<br>nop <br>xor eax, eax<br>mov al, byte[esi+4]<br>nop <br>rol eax, 2<br>add eax, edi<br>mov al, byte[eax]<br>and eax, 0xff<br>jmp 0x106473ee<br>push edx<br>mov edx, dword[esp+4]<br>lea esp, [esp-4]<br>push eax<br>push edx<br>mov edx, dword[esp+0xc]<br>ret 0x10<br>xor eax, eax<br>jmp 0x10679ea5<br>push ax<br>mov edx, dword[esi]<br>add edx, dword[edi]<br>add edx, 0x75e3d117<br>lea esi, [esi+5]<br>push 0x6b1a724a<br>mov dword[esp], edx<br>jmp 0x106105bb<br>mov byte[ebp-4], 0<br>push 0x20<br>mov dword[esi+4], eax<br>call fcn.100ff54d<br>pop ecx<br>mov dword[ebp-0x10], eax<br>mov byte[ebp-4], 2<br>cmp eax, ebx<br>pushfd <br>call 0x10679ec4<br>jecxz 0x10679e46<br>add al, 0x24<br>mov esp, dword[ebx]<br>idiv bh<br>ret <br><eoc> ', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push 0x5c50d058
push ebp
lea ebp, [esp-0x78]
sub esp, 0x11c
push edi
call fcn.10a74e29
call fcn.10abade6
jge 0x10a6c1ad
je 0x10a909f8
jmp 0x10ac1f01
sub eax, 0xf2f606be
and edi, dword[ebx+0x251a4306]
mov ebx, 0x772ef71b
shl byte[ebx], cl
lahf
bound ebp, qword[ecx+0x4d]
out dx, al
and bh, byte[ebx+0x269fa80a]
mov ebx, 0xc900b30a
movsb byte
out dx, al
mov byte[0xbdfdf080], al
into
movsb byte
dec edx
cmpsb byte[esi], byte
xor al, 0xd6
add eax, 0x8736e5a7
retf 0xeba4
mov eax, dword[ebp-4]
jmp 0x1006df79
pop eax
push ss
arpl word[esi-0x41d245a0], sp
sbb al, 0x6f
dec edi
sub bh, byte[esi+0x787bde38]
sar byte[edi+edx*2+0x60], cl
imul ebx, dword[ecx], 0x38bb26a1
jne 0x10a909db
lodsb al, byte[esi]
retf 0xe6d5
push ecx
or eax, 0xbb81efe7
mov ebp, 0x79a32be3
shl byte[edi+0x39695edf], cl
sbb esi, dword[edx+edx*8-0x71]
push edi
call fcn.10acfbf5
mov esi, eax
pop ecx
test esi, esi
je 0x10a6eff1
call[eax+ebp*8+1]
pushfd
call 0x10a90a10
je 0x10a90992
add al, 0x24
loope 0x10a90a2d
add byte[eax], al
ret
inc ebx
sbb ah, byte[0xaf8e38bb]
jae 0x10a90a08
popfd
push edx
pushal
imul ebx, dword[0x40d279ff], 0x25696047
mov esp, 0xc1e9c252
mov bl, 0x58
push eax
mov eax, 0x39c024e9
lea eax, [eax-0x39c023e5]
xchg dword[esp], eax
lea ecx, [ebp-0x110]
push ecx
push eax
call dword[sym.imp.KERNEL32.dll_GetModuleFileNameA]
push edx
call 0x10ac1f26
jecxz 0x10ac1f81
add bl, ah
pop edx
lea edx, [edx-0x5adca]
jmp edx
and al, 0xc
add byte[eax], al
add byte[edi-0x48], bl
sub eax, 0x24bc8b3b
adc byte[eax], al
add byte[eax], al
mov dword[esp+8], edi
pop edi
pop ebx
pop ebp
pushfd
call 0x10ac1fa2
jne 0x10ac1f24
add al, 0x24
jp 0x10ac1f81
pop esp
inc ebx
jo 0x10ac2008
mov ebx, dword[esi]
add ebx, 0x62416ffd
add ebx, dword[edi]
add esi, 4
jmp 0x10a5665a
jae 0x10ac206d
cmpsb byte[esi], byte
cmp dword[esi+0x2c], ebx
mov esi, 0xa3988b1a
test dl, bl
call 0x61fff1a2
pop es
cmp byte[edx+0x3e540c1a], 0xdc
std
mov ebp, 0x4b73a4ce
xor eax, 0x12
mov dword[ebp+0x737993e5], esp
sal cl, cl
inc eax
pop ebp
imul esp, dword[0xd4e5a3c7], 0x1cbe2cdc
pushal
sahf
ret 0x1c9a
jns 0x10ac20cf
imul edx, dword[eax-0x352d84d8], 0x5ea51831
sub al, 0x2b
movsb byte
xor esp, esp
xchg ecx, edx
imul eax, edi, 0x1cbb1ef0
push eax
hlt
add edi, edx
rcr dword[ecx+0x43], 1
pop ebp
imul esi, esi, 0xbfefe361
sbb ebp, dword[edi]
mov esi, 0x23f2f631
mov ebx, 0x81ae1131
mov edx, 0xd701d508
aad 1
xlatb
shl dword[edx+0x40], 1
pop ebp
imul edx, dword[edx-0x1d1019e8], 0xf4f086cf
inc esi
js 0x10ac20b5
iretd
in eax, dx
jl 0x10ac2142
imul edi, dword[edi+0x7be2f1b], 0xbb1f26a6
or ah, bl
fdiv dword[ebx-0x2e]
push esp
inc eax
pop ebp
imul ebp, dword[ecx+0x15], 0xa895efe4
test eax, esi
in al, 0x22
and eax, 0xb26908bb
js 0x10ac20dc
imul esi, dword[edx+0x4033d278], 0x5b48695d
loopne 0x10ac2101
xor eax, dword[eax+0x5d]
imul ecx, dword[eax+0x5b], 0x5baeefe0
scasb al, byte
pop ebx
test al, dh
adc dword[esi+0x6908ba81], ebp
mov dl, 0x78
shl byte[esi], cl
inc eax
pop ebp
imul ebp, dword[ecx+0x15], 0xa3ecefe4
test al, dh
inc ebx
sbb ah, byte[0xff1d07bb]
jns 0x10ac2106
sar dword[ebx], 0x5d
imul edi, dword[edx], 0xebc25319
xchg edi, eax
mov al, 0x58
xor byte[esi+0x52013d30], bh
ret 0x7663

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/89dc67d2f980e8488f97b1bf8cb24258