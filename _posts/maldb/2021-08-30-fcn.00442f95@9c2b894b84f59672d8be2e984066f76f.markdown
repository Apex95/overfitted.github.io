---
layout: post
title:  "fcn.00442f95 @ 9c2b894b84f59672d8be2e984066f76f"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00442f95
- **Origin (md5):** 9c2b894b84f59672d8be2e984066f76f
- **VirusTotal:** [virustotal.com/gui/file/9c2b894b84f59672d8be2e984066f76f][virustotal_ref]

# Code Tags
<span class="tag" id="SYSTEM-INFO">SYSTEM-INFO</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.00442f95@9c2b894b84f59672d8be2e984066f76f">fcn.00442f95</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
sub esp, 0x40
mov eax, dword[0x5d9004]
xor eax, ebp
mov dword[ebp-4], eax
push ebx
mov ebx, ecx
push esi
push edi
mov eax, dword[ebx]
mov esi, dword[eax+0x1c8]
mov ecx, esi
call fcn.00553897
mov ecx, ebx
call esi
mov dword[ebp-0x38], eax
xor edi, edi
lea eax, [ebp-0x14]
mov dword[ebp-0x14], edi
push eax
push dword[ebx+0x20]
mov dword[ebp-0x10], edi
mov dword[ebp-0xc], edi
mov dword[ebp-8], edi
call dword[sym.imp.USER32.dll_GetClientRect]
cmp dword[0x5dfe28], edi
jne off.b90
mov eax, dword[ebx+0x105c]
sub dword[ebp-0xc], eax
sub dword[ebp-8], eax
mov eax, dword[ebx]
mov esi, dword[eax+0x20c]
mov ecx, esi
call fcn.00553897
mov ecx, ebx
call esi
mov dword[ebp-0x3c], eax
neg eax
push eax
push eax
lea eax, [ebp-0x14]
push eax
call dword[sym.imp.USER32.dll_InflateRect]
mov ecx, dword[ebx+0xf60]
sub ecx, edi
je off.b184
sub ecx, 1
je off.b173
sub ecx, 1
je off.b162
sub ecx, 1
jne off.b193
mov eax, dword[ebx+0xf58]
sub dword[ebp-8], eax
jmp off.b193
mov eax, dword[ebx+0xf58]
add dword[ebp-0x10], eax
jmp off.b193
mov eax, dword[ebx+0xf58]
sub dword[ebp-0xc], eax
jmp off.b193
mov eax, dword[ebx+0xf58]
add dword[ebp-0x14], eax
mov eax, dword[ebx+0x1088]
sub eax, dword[ebx+0x1080]
add dword[ebp-0x10], eax
cmp dword[ebx+0x1138], edi
je off.b233
mov eax, dword[ebx+0x115c]
sub eax, dword[ebx+0x1154]
add dword[ebp-0x10], eax
jmp off.b248
mov eax, dword[ebx+0x1154]
sub eax, dword[ebx+0x115c]
add dword[ebp-8], eax
lea ecx, [ebx+0xf84]
mov esi, ecx
lea edi, [ebp-0x24]
push ecx
movsd dword
movsd dword
movsd dword
movsd dword
lea esi, [ebx+0xf94]
lea edi, [ebp-0x34]
movsd dword
movsd dword
movsd dword
movsd dword
call dword[sym.imp.USER32.dll_SetRectEmpty]
lea edi, [ebx+0xf94]
push edi
call dword[sym.imp.USER32.dll_SetRectEmpty]
xor esi, esi
mov dword[ebp-0x40], 0x14
cmp dword[ebx+0xf7c], esi
je off.b478
cmp dword[ebx+0xf80], esi
je off.b341
push 2
call dword[sym.imp.USER32.dll_GetSystemMetrics]
sub dword[ebp-0xc], eax
jmp off.b513
mov eax, dword[ebx]
mov esi, dword[eax+0x1e4]
mov ecx, esi
call fcn.00553897
mov ecx, ebx
call esi
test eax, eax
je off.b418
mov edx, dword[ebp-0x3c]
lea esi, [ebp-0x14]
mov ecx, dword[ebx+0xfa8]
lea edi, [ebx+0xf84]
movsd dword
movsd dword
movsd dword
movsd dword
add dword[ebx+0xf88], edx
lea edi, [ebx+0xf94]
mov eax, dword[ebx+0xf88]
add eax, ecx
mov dword[ebx+0xf90], eax
lea eax, [ecx+edx]
add dword[ebp-0x10], eax
mov eax, dword[ebx]
mov esi, dword[eax+0x1e8]
mov ecx, esi
call fcn.00553897
mov ecx, ebx
call esi
test eax, eax
je off.b513
mov ecx, dword[ebx+0xfa8]
lea esi, [ebp-0x14]
movsd dword
movsd dword
movsd dword
movsd dword
mov eax, dword[ebx+0xfa0]
sub eax, ecx
mov dword[ebx+0xf98], eax
mov eax, dword[ebp-0x3c]
add eax, ecx
sub dword[ebp-8], eax
jmp off.b513
cmp dword[ebx+0xf74], esi
jne off.b513
push 0xec16
push dword[ebx+0x20]
mov dword[ebp-0x40], 0x1c
call dword[sym.imp.USER32.dll_KillTimer]
mov dword[ebx+0xfa4], esi
cmp dword[ebp+8], 0
jne off.b586
lea eax, [ebx+0xf84]
push eax
lea eax, [ebp-0x24]
push eax
call dword[sym.imp.USER32.dll_EqualRect]
lea edi, [ebx+0xf94]
test eax, eax
je off.b592
push edi
lea eax, [ebp-0x34]
push eax
call dword[sym.imp.USER32.dll_EqualRect]
test eax, eax
je off.b592
mov eax, dword[ebp-0x38]
mov eax, dword[eax]
mov esi, dword[eax+0x20c]
mov ecx, esi
call fcn.00553897
mov ecx, dword[ebp-0x38]
call esi
jmp off.b654
lea edi, [ebx+0xf94]
mov eax, dword[ebp-0x38]
xor ecx, ecx
push ecx
push dword[ebp-0x40]
mov esi, dword[eax]
mov eax, dword[ebp-8]
sub eax, dword[ebp-0x10]
push eax
mov eax, dword[ebp-0xc]
sub eax, dword[ebp-0x14]
mov esi, dword[esi+0x238]
push eax
push dword[ebp-0x10]
push dword[ebp-0x14]
push ecx
mov ecx, esi
call fcn.00553897
mov ecx, dword[ebp-0x38]
call esi
mov eax, dword[ebp-8]
sub eax, dword[ebp-0x10]
mov dword[ebx+0xf50], eax
lea esi, [ebx+0xf84]
push esi
lea eax, [ebp-0x24]
push eax
call dword[sym.imp.USER32.dll_EqualRect]
test eax, eax
jne off.b707
push 1
lea eax, [ebp-0x24]
push eax
push dword[ebx+0x20]
call dword[sym.imp.USER32.dll_InvalidateRect]
push 1
push esi
push dword[ebx+0x20]
call dword[sym.imp.USER32.dll_InvalidateRect]
xor esi, esi
inc esi
jmp off.b709
xor esi, esi
push edi
lea eax, [ebp-0x34]
push eax
call dword[sym.imp.USER32.dll_EqualRect]
test eax, eax
jne off.b754
push 1
lea eax, [ebp-0x34]
push eax
push dword[ebx+0x20]
call dword[sym.imp.USER32.dll_InvalidateRect]
push 1
push edi
push dword[ebx+0x20]
call dword[sym.imp.USER32.dll_InvalidateRect]
xor esi, esi
inc esi
test esi, esi
je off.b767
push dword[ebx+0x20]
call dword[sym.imp.USER32.dll_UpdateWindow]
mov ecx, dword[ebp-4]
mov eax, esi
pop edi
pop esi
xor ecx, ebp
pop ebx
call fcn.00553199
mov esp, ebp
pop ebp
ret 4

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/9c2b894b84f59672d8be2e984066f76f