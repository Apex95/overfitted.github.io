---
layout: post
title:  "fcn.00618280 @ a5905e3c253c25bbaf727a1a18fe8ed1"
date:   2021-08-30 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00618280
- **Origin (md5):** a5905e3c253c25bbaf727a1a18fe8ed1
- **VirusTotal:** [virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1][virustotal_ref]

# Code Tags
<span class="tag" id="THREAD">THREAD</span>


# Similar Functions

1. [fcn.0069ed20][similar_1_ref] (sim.: 0.9560774108115491)
2. [fcn.0069c090][similar_2_ref] (sim.: 0.9548909595208486)
3. [fcn.004815b0][similar_3_ref] (sim.: 0.9546899100567171)
4. [fcn.0093dcb0][similar_4_ref] (sim.: 0.9522072074412213)
5. [fcn.00617220][similar_5_ref] (sim.: 0.9515468467281541)


# Disassembled Code

{% highlight nasm %}
push r15
push r14
push r13
push r12
push rbp
push rdi
push rsi
push rbx
sub rsp,0xf8
mov rax,qword[0x00a7d820]
mov rbx,rcx
mov rsi,rdx
cmp byte[rax+0x1a24],0
je 0x618690
movzx eax,byte[rax+0xc5d]
test al,al
je 0x618500
lea r12,[rsp+0xb0]
lea rdi,[rsp+0x60]
mov edx,0x6761
mov dword[rsp+0x70],0x7373656d
mov qword[rsp+0xb8],1
lea rax,[r12+0x30]
mov rcx,r12
mov qword[rsp+0xc0],0
mov qword[rsp+0xc8],0
mov dword[rsp+0xd0],0x3f800000
mov qword[rsp+0xb0],rax
lea rax,[rdi+0x10]
mov qword[rsp+0xd8],0
mov qword[rsp+0xe0],0
mov qword[rsp+0x60],rax
mov word[rax+4],dx
mov rdx,rdi
mov byte[rax+6],0x65
mov qword[rsp+0x68],7
mov byte[rsp+0x77],0
call fcn.00a48100
mov rbp,rax
lea r13,[rax+8]
mov eax,dword[rax]
cdq
xor eax,edx
cmp eax,0x13
ja case.default.0x618377
lea rdx,[0x00aaf8f4]
movsxd rax,dword[rdx+rax*4]
add rax,rdx
jmp rax
mov rdx,rsi
mov rcx,r13
call fcn.00a2df10
lea r14,[rsp+0x80]
mov rcx,qword[rsp+0x60]
lea rax,[rdi+0x10]
cmp rcx,rax
je 0x61839f
call fcn.00a5af30
movsxd rax,dword[rbx+0xec]
mov rdx,qword[0x00a7d820]
lea rbp,[rsp+0x40]
mov rcx,rax
shl rcx,5
lea r8,[rdx+rcx+0x58]
mov rcx,rax
shl rcx,5
cmp byte[rdx+rax+0x1938],0
lea rcx,[rdx+rcx+0xcc8]
mov rdx,r8
mov r8,r12
cmove rdx,rcx
xor r9d,r9d
mov rcx,rbp
call fcn.006a8680
movsxd rax,dword[rbx+0xe8]
mov rdx,qword[0x00a7d820]
lea r9,[fcn.006a51f0]
mov rcx,rax
shl rcx,5
lea r8,[rdx+rcx+0x58]
mov rcx,rax
shl rcx,5
cmp byte[rdx+rax+0x1938],0
lea rcx,[rdx+rcx+0xcc8]
mov rdx,r8
mov r8,r12
cmove rdx,rcx
mov rcx,r14
call fcn.006a8680
mov rdx,qword[0x00a7d820]
cmp byte[rdx+0x195f],0
lea rcx,[rdx+0x538]
lea rax,[rdx+0x11a8]
cmovne rax,rcx
xor r8d,r8d
mov rcx,r14
mov rdx,qword[rax+8]
mov qword[rsp+0x20],rdx
mov r9,qword[rax]
xor edx,edx
call fcn.00a2c0d0
lea rdx,[rdi+0x10]
mov qword[rsp+0x60],rdx
mov rcx,qword[rax]
lea rdx,[rax+0x10]
cmp rcx,rdx
je 0x618d18
mov qword[rsp+0x60],rcx
mov rcx,qword[rax+0x10]
mov qword[rsp+0x70],rcx
mov rcx,qword[rax+8]
add r14,0x10
mov qword[rsp+0x68],rcx
mov qword[rax],rdx
mov byte[rax+0x10],0
mov rcx,qword[rsp+0x80]
mov qword[rax+8],0
cmp rcx,r14
je 0x6184c2
call fcn.00a5af30
mov rdx,rdi
mov rcx,rbx
mov r8,rbp
call fcn.00617220
mov rcx,qword[rsp+0x60]
add rdi,0x10
cmp rcx,rdi
je 0x6184e3
call fcn.00a5af30
mov rcx,qword[rsp+0x40]
add rbp,0x10
cmp rcx,rbp
je 0x6184f6
call fcn.00a5af30
mov rcx,r12
call fcn.009c1d80
nop
xor ecx,ecx
lea rbp,[rbx+0x5c]
call qword[sym.imp.msvcrt.dll__time64]
mov r12,qword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
mov qword[rsp+0x80],rax
call r12
mov r13d,eax
xor eax,eax
lock cmpxchg dword[rbp],eax
cmp r13d,eax
je 0x618830
lea rdi,[rbx+0x60]
mov r14d,dword[rbx+0x60]
jmp 0x618543
mov r14d,eax
mov edx,r14d
mov r8d,r14d
mov rcx,rdi
or edx,0x80000000
call fcn.008eebc0
cmp r14d,eax
jne 0x618540
test r14d,r14d
js 0x6189b0
xchg dword[rbp],r13d
mov dword[rbx+0x58],1
mov r11,qword[rbx+0xb8]
mov r9,qword[rbx+0x98]
movabs r13,0xcccccccccccccccd
mov rdi,qword[rbx+0xa0]
mov r10,qword[rbx+0xa8]
mov r8,qword[rbx+0x90]
mov rax,qword[rbx+0x80]
jmp 0x618604
lea rdx,[r8-0x28]
mov rcx,qword[rax+8]
cmp rax,rdx
je 0x6187c0
lea rdx,[rax+0x18]
cmp rcx,rdx
je 0x6185f9
call fcn.00a5af30
mov rax,qword[rbx+0x80]
mov r11,qword[rbx+0xb8]
mov r9,qword[rbx+0x98]
mov rdi,qword[rbx+0xa0]
mov r10,qword[rbx+0xa8]
mov r8,qword[rbx+0x90]
add rax,0x28
mov qword[rbx+0x80],rax
mov rdx,r11
sub rdx,r9
sar rdx,3
lea rcx,[rdx+rdx*2-3]
mov rdx,rdi
sub rdx,r10
sar rdx,3
imul rdx,r13
lea rcx,[rdx+rcx*4]
mov rdx,r8
sub rdx,rax
sar rdx,3
imul rdx,r13
add rdx,rcx
cmp rdx,0x64
ja 0x6185b0
mov rax,qword[rbx+0xb0]
sub rax,0x28
cmp rdi,rax
je 0x618c30
test rdi,rdi
je 0x6186d4
mov rax,qword[rsp+0x80]
mov qword[rdi],rax
lea rax,[rdi+0x18]
mov r13,qword[rsi+8]
mov qword[rdi+8],rax
mov r14,qword[rsi]
mov rcx,r14
add rcx,r13
je 0x61869c
test r14,r14
jne 0x61869c
lea rcx,[0x00aaf7a0]
call fcn.00a4f4e0
nop dword[rax]
movzx eax,byte[rax+0x18cd]
jmp 0x6182b4
cmp r13,0xf
mov qword[rsp+0xb0],r13
ja 0x618860
cmp r13,1
je 0x618840
test r13,r13
mov rdx,rax
jne 0x618cb0
mov qword[rdi+0x10],r13
mov byte[rdx+r13],0
mov rdi,qword[rbx+0xa0]
add rdi,0x28
mov qword[rbx+0xa0],rdi
mov eax,dword[rbx+0x58]
sub eax,1
test eax,eax
mov dword[rbx+0x58],eax
je 0x618920
lea rbp,[rbx+0x44]
call r12
mov r13d,eax
xor eax,eax
lock cmpxchg dword[rbp],eax
cmp r13d,eax
je 0x618850
lea r12,[rbx+0x48]
mov edi,dword[rbx+0x48]
jmp 0x618715
mov edi,eax
mov edx,edi
mov r8d,edi
mov rcx,r12
or edx,0x80000000
call fcn.008eebc0
cmp edi,eax
jne 0x618713
test edi,edi
js 0x618a85
xchg dword[rbp],r13d
mov dword[rbx+0x40],1
lea rdx,[rbx+0x10]
lea rcx,[rbx+0x28]
lea r13,[0x009356b0]
call fcn.00a20330
mov r12,qword[rbx+0x30]
mov rdi,qword[rbx+0x28]
cmp rdi,r12
jne 0x61876b
jmp 0x618792
add rdi,8
cmp r12,rdi
je 0x618792
mov rcx,qword[rdi]
mov rax,qword[rcx]
mov rax,qword[rax+0x10]
cmp rax,r13
je 0x618762
add rdi,8
xor edx,edx
mov r9,rsi
mov r8,qword[rsp+0x80]
call rax
cmp r12,rdi
jne 0x61876b
mov eax,dword[rbx+0x40]
sub eax,1
test eax,eax
mov dword[rbx+0x40],eax
je 0x6188a3
add rsp,0xf8
pop rbx
pop rsi
pop rdi
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
add rax,0x18
cmp rcx,rax
je 0x6187ce
call fcn.00a5af30
mov rcx,qword[rbx+0x88]
call fcn.00a5af30
mov rax,qword[rbx+0x98]
mov r11,qword[rbx+0xb8]
mov rdi,qword[rbx+0xa0]
mov r10,qword[rbx+0xa8]
lea r9,[rax+8]
mov rax,qword[rax+8]
mov qword[rbx+0x98],r9
lea r8,[rax+0x1e0]
mov qword[rbx+0x88],rax
mov qword[rbx+0x80],rax
mov qword[rbx+0x90],r8
jmp 0x618604
add dword[rbx+0x58],1
jmp 0x618570
movzx edx,byte[r14]
mov byte[rdi+0x18],dl
mov rdx,rax
jmp 0x6186c4
add dword[rbx+0x40],1
jmp 0x61873f
lea rdx,[rsp+0xb0]
lea rcx,[rdi+8]
xor r8d,r8d
call fcn.00a2dfc0
mov rcx,rax
mov qword[rdi+8],rax
mov rax,qword[rsp+0xb0]
mov qword[rdi+0x18],rax
mov r8,r13
mov rdx,r14
call sub.msvcrt.dll_memcpy
mov r13,qword[rsp+0xb0]
mov rdx,qword[rdi+8]
jmp 0x6186c4
xchg dword[rbp],eax
mov eax,0x80000000
lea rdi,[rbx+0x48]
lock xadd dword[rdi],eax
test eax,0x40000000
jne 0x6187a3
cmp eax,0x80000000
je 0x6187a3
mov esi,dword[rbx+0x48]
jmp 0x6188d2
mov esi,eax
mov edx,esi
mov r8d,esi
mov rcx,rdi
or edx,0x40000000
call fcn.008eebc0
cmp esi,eax
jne 0x6188d0
and esi,0x40000000
jne 0x6187a3
add rbx,0x50
xor eax,eax
lock cmpxchg qword[rbx],rax
test rax,rax
mov rsi,rax
mov rcx,rax
je 0x618d6e
call qword[sym.imp.KERNEL32.dll_SetEvent]
jmp 0x6187a3
xchg dword[rbp],eax
mov eax,0x80000000
lea rbp,[rbx+0x60]
lock xadd dword[rbp],eax
test eax,0x40000000
jne 0x6186f0
cmp eax,0x80000000
je 0x6186f0
mov edi,dword[rbx+0x60]
jmp 0x618952
mov edi,eax
mov edx,edi
mov r8d,edi
mov rcx,rbp
or edx,0x40000000
call fcn.008eebc0
cmp edi,eax
jne 0x618950
and edi,0x40000000
jne 0x6186f0
lea rbp,[rbx+0x68]
xor eax,eax
lock cmpxchg qword[rbp],rax
test rax,rax
mov rdi,rax
mov rcx,rax
je 0x618d2f
call qword[sym.imp.KERNEL32.dll_SetEvent]
jmp 0x6186f0
mov edx,dword[rbx+0x60]
jmp 0x6189b7
mov edx,eax
lea eax,[rdx+1]
mov r10d,edx
or r10d,0x80000000
test edx,edx
cmovns eax,r10d
mov r15d,eax
mov eax,edx
lock cmpxchg dword[rdi],r15d
cmp eax,edx
jne 0x6189b5
shr edx,0x1f
test dl,dl
je 0x618565
mov eax,r15d
shr eax,0x1f
test al,al
je 0x618565
lea r11,[rbx+0x68]
xor eax,eax
lock cmpxchg qword[r11],rax
test rax,rax
mov r14,rax
mov qword[rsp+0x30],rax
je 0x618e2b
mov r14,qword[sym.imp.KERNEL32.dll_WaitForSingleObjectEx]
and r15d,0x7fffffff
xor r8d,r8d
mov edx,0xffffffff
mov rcx,qword[rsp+0x30]
call r14
mov r10d,r15d
or r10d,0x40000000
jmp 0x618a66
lea ecx,[r10-1]
mov eax,r10d
and ecx,0x3fffffff
or ecx,0x80000000
lock cmpxchg dword[rdi],ecx
cmp eax,r10d
mov r15d,eax
je 0x618565
mov r10d,r15d
test r10d,r10d
jns 0x618a40
mov ecx,r10d
mov eax,r10d
and ecx,0xbfffffff
lock cmpxchg dword[rdi],ecx
cmp eax,r10d
mov r15d,eax
jne 0x618a63
jmp 0x618a14
mov edx,dword[rbx+0x48]
jmp 0x618a92
mov edx,eax
lea eax,[rdx+1]
mov r10d,edx
or r10d,0x80000000
test edx,edx
cmovns eax,r10d
mov r15d,eax
mov eax,edx
lock cmpxchg dword[r12],r15d
cmp eax,edx
jne 0x618a90
shr edx,0x1f
test dl,dl
je 0x618734
mov eax,r15d
shr eax,0x1f
test al,al
je 0x618734
lea r10,[rbx+0x50]
xor eax,eax
lock cmpxchg qword[r10],rax
test rax,rax
mov r14,rax
mov rdi,rax
je 0x618de0
mov r14,qword[sym.imp.KERNEL32.dll_WaitForSingleObjectEx]
and r15d,0x7fffffff
xor r8d,r8d
mov edx,0xffffffff
mov rcx,rdi
call r14
mov r10d,r15d
or r10d,0x40000000
jmp 0x618b38
lea ecx,[r10-1]
mov eax,r10d
and ecx,0x3fffffff
or ecx,0x80000000
lock cmpxchg dword[r12],ecx
cmp eax,r10d
mov r15d,eax
je 0x618734
mov r10d,r15d
test r10d,r10d
jns 0x618b10
mov ecx,r10d
mov eax,r10d
and ecx,0xbfffffff
lock cmpxchg dword[r12],ecx
cmp eax,r10d
mov r15d,eax
jne 0x618b35
jmp 0x618aee
call sub.msvcrt.dll_abort
call sub.msvcrt.dll_abort
call sub.msvcrt.dll_abort
call sub.msvcrt.dll_abort
call sub.msvcrt.dll_abort
call sub.msvcrt.dll_abort
lea r14,[rsp+0x80]
mov r15,qword[rsi+8]
lea rax,[r14+0x18]
mov qword[rsp+0x88],rax
mov rax,qword[rsi]
mov rcx,rax
mov qword[rsp+0x30],rax
add rcx,r15
je 0x618c49
test rax,rax
jne 0x618c49
lea rcx,[0x00aaf7a0]
call fcn.00a4f4e0
nop dword[rax+rax]
call sub.msvcrt.dll_abort
call sub.msvcrt.dll_abort
call sub.msvcrt.dll_abort
call sub.msvcrt.dll_abort
call sub.msvcrt.dll_abort
call sub.msvcrt.dll_abort
call sub.msvcrt.dll_abort
call sub.msvcrt.dll_abort
call sub.msvcrt.dll_abort
call sub.msvcrt.dll_abort
call sub.msvcrt.dll_abort
call sub.msvcrt.dll_abort
call sub.msvcrt.dll_abort
mov rcx,qword[rsp+0x60]
add rdi,0x10
mov rbx,rax
cmp rcx,rdi
je 0x618c17
call fcn.00a5af30
mov rcx,r12
call fcn.009c1d80
mov rcx,rbx
call fcn.008da260
nop word[rax+rax]
lea rdx,[rsp+0x80]
lea rcx,[rbx+0x70]
mov r8,rsi
call fcn.00a081c0
jmp 0x6186df
cmp r15,0xf
mov qword[rsp+0x40],r15
ja 0x618cb8
cmp r15,1
je 0x618d00
test r15,r15
lea rax,[r14+0x18]
jne 0x618cde
mov qword[rsp+0x90],r15
mov byte[rax+r15],0
mov dword[rsp+0x80],0
mov eax,dword[rbp]
test eax,eax
je 0x618dac
cdq
xor eax,edx
cmp eax,0x13
ja case.0x618ca0.2
lea rdx,[0x00aaf944]
movsxd rax,dword[rdx+rax*4]
add rax,rdx
jmp rax
call sub.msvcrt.dll_abort
nop word[rax+rax]
mov rcx,rax
jmp 0x618887
lea rdx,[rsp+0x40]
lea rcx,[r14+8]
xor r8d,r8d
call fcn.00a2dfc0
mov rdx,qword[rsp+0x40]
mov qword[rsp+0x88],rax
mov qword[rsp+0x98],rdx
mov rdx,qword[rsp+0x30]
mov r8,r15
mov rcx,rax
call sub.msvcrt.dll_memcpy
mov r15,qword[rsp+0x40]
mov rax,qword[rsp+0x88]
jmp 0x618c67
mov rax,qword[rsp+0x30]
movzx eax,byte[rax]
mov byte[rsp+0x98],al
lea rax,[r14+0x18]
jmp 0x618c67
mov r9,qword[rax+0x10]
mov r10,qword[rax+0x18]
mov qword[rsp+0x70],r9
mov qword[rsp+0x78],r10
jmp 0x618494
xor ecx,ecx
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
je 0x618ede
mov rax,rdi
lock cmpxchg qword[rbp],rcx
test rax,rax
mov rdi,rax
je 0x618990
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rcx,rdi
jmp 0x618990
xor ecx,ecx
xor r9d,r9d
xor r8d,r8d
xor edx,edx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rcx,rax
je 0x61904f
mov rax,rsi
lock cmpxchg qword[rbx],rcx
test rax,rax
mov rsi,rax
je 0x61890f
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov rcx,rsi
jmp 0x61890f
lea rdx,[r14+8]
mov rcx,r13
call fcn.00a2e890
mov eax,dword[rsp+0x80]
cdq
xor eax,edx
cmp eax,0x13
ja case.0x618dd5.2
lea rdx,[0x00aaf994]
movsxd rax,dword[rdx+rax*4]
add rax,rdx
jmp rax
call sub.msvcrt.dll_abort
nop dword[rax]
mov qword[rsp+0x30],r10
xor r9d,r9d
xor r8d,r8d
xor edx,edx
xor ecx,ecx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov rdi,rax
mov r10,qword[rsp+0x30]
je 0x618f47
mov rax,r14
lock cmpxchg qword[r10],rdi
test rax,rax
mov r14,rax
je 0x618ae7
mov rcx,rdi
mov rdi,r14
call qword[sym.imp.KERNEL32.dll_CloseHandle]
jmp 0x618ae7
mov qword[rsp+0x38],r11
xor r9d,r9d
xor r8d,r8d
xor edx,edx
xor ecx,ecx
call qword[sym.imp.KERNEL32.dll_CreateEventA]
test rax,rax
mov qword[rsp+0x30],rax
mov r11,qword[rsp+0x38]
je 0x6190b8
mov rcx,rax
mov rax,r14
lock cmpxchg qword[r11],rcx
test rax,rax
mov r14,rax
je 0x618a0d
mov rcx,qword[rsp+0x30]
call qword[sym.imp.KERNEL32.dll_CloseHandle]
mov qword[rsp+0x30],r14
jmp 0x618a0d
call fcn.00a55e20
mov rax,qword[rsp+0x98]
test rax,rax
je 0x61838c
lea rcx,[r14+8]
mov r8d,3
mov rdx,rcx
call rax
jmp 0x61838c
mov rcx,qword[rsp+0x88]
lea rax,[r14+0x18]
cmp rcx,rax
je 0x61838c
call fcn.00a5af30
jmp 0x61838c
lea rbx,[rsp+0xb0]
call fcn.006ea660
lea rdx,[0x00aaf81c]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0xc0],0xb
mov qword[rsp+0xc8],rsi
mov qword[rsp+0xd8],0
mov qword[rsp+0xd0],rax
lea rax,[0x00b72480]
mov byte[rsp+0xe0],0
mov qword[rsp+0xb0],rax
call fcn.00947760
lea rbx,[rsp+0xb0]
call fcn.006ea660
lea rdx,[0x00aaf81c]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0xc0],0xb
mov qword[rsp+0xc8],rsi
mov qword[rsp+0xd8],0
mov qword[rsp+0xd0],rax
lea rax,[0x00b72480]
mov byte[rsp+0xe0],0
mov qword[rsp+0xb0],rax
call fcn.00947760
lea rax,[0x00b72450]
mov rcx,rbx
mov qword[rsp+0xb0],rax
call fcn.00962490
jmp 0x618e95
mov rax,qword[rbp+0x18]
test rax,rax
je 0x618fe5
mov r8d,3
mov rdx,r13
mov rcx,r13
call rax
test r13,r13
je 0x619043
lea rax,[rbp+0x18]
lea rdx,[r14+0x18]
mov qword[rbp+8],rax
mov rax,qword[rsp+0x88]
cmp rax,rdx
je 0x619163
mov qword[rbp+8],rax
mov rax,qword[rsp+0x98]
mov qword[rbp+0x18],rax
mov rax,qword[rsp+0x90]
mov qword[rbp+0x10],rax
lea rax,[r14+0x18]
mov qword[rsp+0x90],0
mov byte[rsp+0x98],0
mov qword[rsp+0x88],rax
mov dword[rbp],0
jmp 0x618db8
lea rbx,[rsp+0xb0]
call fcn.006ea660
lea rdx,[0x00aaf81c]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0xc0],0xb
mov qword[rsp+0xc8],rsi
mov qword[rsp+0xd8],0
mov qword[rsp+0xd0],rax
lea rax,[0x00b72480]
mov byte[rsp+0xe0],0
mov qword[rsp+0xb0],rax
call fcn.00947760
lea rbx,[rsp+0xb0]
call fcn.006ea660
lea rdx,[0x00aaf81c]
mov rcx,rbx
mov rsi,rax
call fcn.009de540
lea rax,[rbx+0x30]
mov rcx,rbx
mov dword[rsp+0xc0],0xb
mov qword[rsp+0xc8],rsi
mov qword[rsp+0xd8],0
mov qword[rsp+0xd0],rax
lea rax,[0x00b72480]
mov byte[rsp+0xe0],0
mov qword[rsp+0xb0],rax
call fcn.00947760
jmp 0x618fb0
mov rcx,qword[rbp+8]
lea rax,[rbp+0x18]
cmp rcx,rax
je 0x618fe5
call fcn.00a5af30
jmp 0x618fe5
mov rax,qword[rsp+0x98]
mov rdx,qword[rsp+0xa0]
mov qword[rbp+0x18],rax
mov qword[rbp+0x20],rdx
jmp 0x619017
{% endhighlight %}


[similar_1_ref]: /report/fcn.0069ed20@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_2_ref]: /report/fcn.0069c090@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_3_ref]: /report/fcn.004815b0@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_4_ref]: /report/fcn.0093dcb0@a5905e3c253c25bbaf727a1a18fe8ed1
[similar_5_ref]: /report/fcn.00617220@a5905e3c253c25bbaf727a1a18fe8ed1
[virustotal_ref]: https://www.virustotal.com/gui/file/a5905e3c253c25bbaf727a1a18fe8ed1