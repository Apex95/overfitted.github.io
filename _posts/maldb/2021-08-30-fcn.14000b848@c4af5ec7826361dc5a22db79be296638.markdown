---
layout: post
title:  "fcn.14000b848 @ c4af5ec7826361dc5a22db79be296638"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.14000b848
- **Origin (md5):** c4af5ec7826361dc5a22db79be296638
- **VirusTotal:** [virustotal.com/gui/file/c4af5ec7826361dc5a22db79be296638][virustotal_ref]

# Code Tags
<span class="tag" id="MEMORY">MEMORY</span>


# Behaviour Tags
<span class="bhv-tag" id="GENERATES_CANNARIES">GENERATES_CANNARIES / 0.049145541148601396</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-48.74553680419922, -25.28435516357422, '<b><a href="/report/fcn.14000b848@c4af5ec7826361dc5a22db79be296638">fcn.14000b848</a><br>@c4af5ec7826361dc5a22db79be296638</b><br>mov qword[rsp+8], rbx<br>mov qword[rsp+0x10], rbp<br>mov qword[rsp+0x18], rsi<br>push rdi<br>push r14<br>push r15<br>sub rsp, 0x20<br>mov r14, rcx<br>mov rcx, qword[r9]<br>mov rsi, r9<br>mov rbp, r8<br>mov r15d, edx<br>call fcn.14000b9a0<br>mov rcx, qword[0x14001e444]<br>xor edx, edx<br>lea r8d, [rdx+0x60]<br>call qword[sym.imp.KERNEL32.dll_HeapAlloc]<br>mov rdi, rax<br>test rax, rax<br>je 0x14000b950<br>mov ebx, dword[rsp+0x60]<br>mov rcx, qword[0x14001e444]<br>mov eax, 1<br>test ebx, ebx<br>lea edx, [rax+7]<br>cmovle ebx, eax<br>movsxd r8, ebx<br>shl r8, 3<br>call qword[sym.imp.KERNEL32.dll_HeapAlloc]<br>mov qword[rdi+8], rax<br>test rax, rax<br>je 0x14000b93c<br>and qword[rdi], 0<br>and dword[rdi+0x40], 0<br>and dword[rdi+0x44], 0<br>and qword[rdi+0x50], 0<br>mov rcx, rbp<br>mov dword[rdi+0x3c], ebx<br>mov qword[rdi+0x30], r14<br>mov dword[rdi+0x38], r15d<br>mov qword[rdi+0x20], rbp<br>mov qword[rdi+0x48], rsi<br>call fcn.1400150e0<br>test rax, rax<br>je 0x14000b8f6<br>or dword[rdi+0x44], 2<br>mov edx, 0x10<br>lea rcx, [r14+0x10]<br>mov r8d, 0x10000<br>lea r9d, [rdx-0xc]<br>call fcn.14001040c<br>lea r8, [r14+0x10]<br>mov edx, 8<br>mov qword[rdi+0x58], rax<br>mov rcx, qword[0x14001e444]<br>call qword[sym.imp.KERNEL32.dll_HeapAlloc]<br>lea rcx, [0x1400175f4]<br>mov qword[rdi+0x18], rax<br>mov qword[rax+8], rcx<br>mov qword[rsi], rdi<br>jmp 0x14000b950<br>mov rcx, qword[0x14001e444]<br>mov r8, rdi<br>xor edx, edx<br>call qword[sym.imp.KERNEL32.dll_HeapFree]<br>xor edi, edi<br>mov rbx, qword[rsp+0x40]<br>mov rbp, qword[rsp+0x48]<br>mov rsi, qword[rsp+0x50]<br>mov rax, rdi<br>add rsp, 0x20<br>pop r15<br>pop r14<br>pop rdi<br>ret <br><eoc> ', 'point { fill-color: #e0440e; }'],
[6.633716583251953, -357.4459533691406, '<b><a href="/report/fcn.14000d1a0@c4af5ec7826361dc5a22db79be296638">fcn.14000d1a0</a><br>@c4af5ec7826361dc5a22db79be296638</b><br>mov qword[rsp+8], rbx<br>mov qword[rsp+0x18], rsi<br>push rdi<br>sub rsp, 0x30<br>xor ebx, ebx<br>mov edi, r8d<br>mov rsi, rdx<br>mov dword[rsp+0x48], ebx<br>test rdx, rdx<br>je 0x14000d218<br>test r8d, r8d<br>je 0x14000d218<br>mov rdx, rcx<br>mov rcx, qword[0x14001f2f0]<br>call fcn.14000fe58<br>test rax, rax<br>je 0x14000d214<br>mov r8d, edi<br>mov rdx, rsi<br>cmp qword[rax+8], rbx<br>je 0x14000d201<br>mov rcx, rax<br>call fcn.14000d230<br>mov ebx, eax<br>cdqe <br>mov rbx, qword[rsp+0x40]<br>mov rsi, qword[rsp+0x50]<br>add rsp, 0x30<br>pop rdi<br>ret <br>mov rcx, qword[rax]<br>lea r9, [rsp+0x48]<br>mov qword[rsp+0x20], rbx<br>call qword[sym.imp.KERNEL32.dll_WriteFile]<br>mov ebx, dword[rsp+0x48]<br>mov rsi, qword[rsp+0x50]<br>movsxd rax, ebx<br>mov rbx, qword[rsp+0x40]<br>add rsp, 0x30<br>pop rdi<br>ret <br><eoc> ', 'null'],
[-169.92181396484375, -305.989990234375, '<b><a href="/report/fcn.14000bfb4@c4af5ec7826361dc5a22db79be296638">fcn.14000bfb4</a><br>@c4af5ec7826361dc5a22db79be296638</b><br>mov rax, rsp<br>mov qword[rax+8], rbx<br>mov qword[rax+0x10], rbp<br>mov qword[rax+0x18], rsi<br>mov qword[rax+0x20], rdi<br>push r14<br>sub rsp, 0x20<br>mov rsi, rdx<br>xor edx, edx<br>mov rbx, rcx<br>mov rcx, qword[0x14001e444]<br>mov rbp, r8<br>lea r8d, [rdx+0x60]<br>mov r14d, r9d<br>call qword[sym.imp.KERNEL32.dll_HeapAlloc]<br>mov rdi, rax<br>test rsi, rsi<br>jne 0x14000c010<br>mov rcx, qword[0x14001e444]<br>lea r8d, [rsi+0x10]<br>xor edx, edx<br>call qword[sym.imp.KERNEL32.dll_HeapAlloc]<br>mov byte[rdi+0x5e], 1<br>mov rsi, rax<br>jmp 0x14000c014<br>mov byte[rax+0x5e], 0<br>and qword[rdi+0x10], 0<br>and qword[rdi], 0<br>and qword[rdi+8], 0<br>and qword[rdi+0x20], 0<br>lea rax, [rsi+8]<br>add rbx, 0x10<br>mov rcx, rbp<br>mov qword[rdi+0x50], rbx<br>mov qword[rdi+0x30], rbp<br>mov qword[rdi+0x18], rax<br>mov byte[rdi+0x5c], 1<br>mov dword[rdi+0x58], r14d<br>call fcn.1400150e0<br>and qword[rdi+0x40], 0<br>mov edx, 0x10<br>mov qword[rdi+0x48], rsi<br>mov byte[rdi+0x5d], al<br>lea r9d, [rdx-0xc]<br>mov r8d, 0x10000<br>mov rcx, rbx<br>mov qword[rsi], rdi<br>call fcn.14001040c<br>mov rbx, qword[rsp+0x30]<br>mov rbp, qword[rsp+0x38]<br>mov rsi, qword[rsp+0x40]<br>mov qword[rdi+0x38], rax<br>mov rax, rdi<br>mov rdi, qword[rsp+0x48]<br>add rsp, 0x20<br>pop r14<br>ret <br><eoc> ', 'null'],
[35.18260955810547, -181.98472595214844, '<b><a href="/report/fcn.14000d150@c4af5ec7826361dc5a22db79be296638">fcn.14000d150</a><br>@c4af5ec7826361dc5a22db79be296638</b><br>push rbx<br>sub rsp, 0x30<br>mov rbx, rcx<br>mov dword[rsp+0x48], 0<br>test rdx, rdx<br>je 0x14000d103<br>cmp word[rdx], 0<br>je 0x14000d103<br>cmp r8d, 0x19<br>jne 0x14000d093<br>or rax, 0xffffffffffffffff<br>cmp qword[rcx+8], 0<br>je 0x14000d061<br>nop word[rax+rax]<br>cmp word[rdx+rax*2+2], 0<br>lea rax, [rax+1]<br>jne 0x14000d040<br>lea r8d, [rax+rax]<br>call fcn.14000d230<br>mov dword[rsp+0x48], eax<br>cdqe <br>add rsp, 0x30<br>pop rbx<br>ret <br>cmp word[rdx+rax*2+2], 0<br>lea rax, [rax+1]<br>jne 0x14000d061<br>mov rcx, qword[rcx]<br>lea r8d, [rax+rax]<br>lea r9, [rsp+0x48]<br>mov qword[rsp+0x20], 0<br>call qword[sym.imp.KERNEL32.dll_WriteFile]<br>movsxd rax, dword[rsp+0x48]<br>add rsp, 0x30<br>pop rbx<br>ret <br>xor ecx, ecx<br>cmp r8d, 2<br>mov eax, 0xfde9<br>lea r8, [rsp+0x58]<br>cmove ecx, eax<br>mov qword[rsp+0x40], rdi<br>call fcn.14000d380<br>mov rdi, rax<br>test rax, rax<br>je 0x14000d0fe<br>cmp qword[rbx+8], 0<br>mov r8d, dword[rsp+0x58]<br>mov rdx, rax<br>je 0x14000d0d5<br>mov rcx, rbx<br>call fcn.14000d230<br>mov dword[rsp+0x48], eax<br>jmp 0x14000d0ec<br>mov rcx, qword[rbx]<br>lea r9, [rsp+0x48]<br>mov qword[rsp+0x20], 0<br>call qword[sym.imp.KERNEL32.dll_WriteFile]<br>mov rcx, qword[0x14001e444]<br>mov r8, rdi<br>xor edx, edx<br>call qword[sym.imp.KERNEL32.dll_HeapFree]<br>mov rdi, qword[rsp+0x40]<br>movsxd rax, dword[rsp+0x48]<br>add rsp, 0x30<br>pop rbx<br>ret <br>mov qword[rsp+8], rbx<br>push rdi<br>sub rsp, 0x20<br>mov rdi, rdx<br>mov rdx, rcx<br>mov rcx, qword[0x14001f2f0]<br>mov ebx, r8d<br>call fcn.14000fe58<br>test rax, rax<br>je 0x14000d18c<br>mov r8d, ebx<br>mov rdx, rdi<br>mov rcx, rax<br>mov rbx, qword[rsp+0x30]<br>add rsp, 0x20<br>pop rdi<br>jmp 0x14000d000<br>mov rbx, qword[rsp+0x30]<br>add rsp, 0x20<br>pop rdi<br>ret <br><eoc> ', 'null'],
[-199.11509704589844, -131.16079711914062, '<b><a href="/report/fcn.140010940@c4af5ec7826361dc5a22db79be296638">fcn.140010940</a><br>@c4af5ec7826361dc5a22db79be296638</b><br>mov qword[rsp+8], rbx<br>mov qword[rsp+0x10], rbp<br>mov qword[rsp+0x18], rsi<br>push rdi<br>push r12<br>push r13<br>push r14<br>push r15<br>sub rsp, 0x20<br>mov r15, qword[rsp+0x70]<br>mov r14, rcx<br>xor edi, edi<br>mov rcx, qword[r15]<br>mov r12, r9<br>mov r13d, r8d<br>mov rsi, rdx<br>mov ebx, edi<br>call fcn.140010b04<br>test rsi, rsi<br>jle 0x1400109fc<br>mov rcx, qword[0x14001e444]<br>mov rbp, r14<br>xor edx, edx<br>imul rbp, rsi<br>lea r8, [rbp+0x30]<br>call qword[sym.imp.KERNEL32.dll_HeapAlloc]<br>mov rbx, rax<br>test rax, rax<br>je 0x1400109fc<br>add rbx, 0x30<br>mov r8, rbp<br>xor edx, edx<br>mov rcx, rbx<br>mov qword[rax+8], r14<br>mov qword[rax+0x20], rsi<br>mov dword[rax+0x28], r13d<br>mov qword[rax+0x10], r12<br>mov qword[rax+0x18], r15<br>mov dword[rax], 1<br>call sub.msvcrt.dll_memset<br>mov rcx, r12<br>mov qword[r15], rbx<br>call fcn.1400150e0<br>test rax, rax<br>je 0x1400109fc<br>test rsi, rsi<br>jle 0x1400109fc<br>mov eax, edi<br>imul rax, r14<br>mov rdx, r12<br>lea rcx, [rbx+rax]<br>call fcn.14001561c<br>inc edi<br>movsxd rax, edi<br>cmp rax, rsi<br>jl 0x1400109e2<br>mov rbp, qword[rsp+0x58]<br>mov rsi, qword[rsp+0x60]<br>mov rax, rbx<br>mov rbx, qword[rsp+0x50]<br>add rsp, 0x20<br>pop r15<br>pop r14<br>pop r13<br>pop r12<br>pop rdi<br>ret <br><eoc> ', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

mov qword[rsp+8], rbx
mov qword[rsp+0x10], rbp
mov qword[rsp+0x18], rsi
push rdi
push r14
push r15
sub rsp, 0x20
mov r14, rcx
mov rcx, qword[r9]
mov rsi, r9
mov rbp, r8
mov r15d, edx
call fcn.14000b9a0
mov rcx, qword[0x14001e444]
xor edx, edx
lea r8d, [rdx+0x60]
call qword[sym.imp.KERNEL32.dll_HeapAlloc]
mov rdi, rax
test rax, rax
je 0x14000b950
mov ebx, dword[rsp+0x60]
mov rcx, qword[0x14001e444]
mov eax, 1
test ebx, ebx
lea edx, [rax+7]
cmovle ebx, eax
movsxd r8, ebx
shl r8, 3
call qword[sym.imp.KERNEL32.dll_HeapAlloc]
mov qword[rdi+8], rax
test rax, rax
je 0x14000b93c
and qword[rdi], 0
and dword[rdi+0x40], 0
and dword[rdi+0x44], 0
and qword[rdi+0x50], 0
mov rcx, rbp
mov dword[rdi+0x3c], ebx
mov qword[rdi+0x30], r14
mov dword[rdi+0x38], r15d
mov qword[rdi+0x20], rbp
mov qword[rdi+0x48], rsi
call fcn.1400150e0
test rax, rax
je 0x14000b8f6
or dword[rdi+0x44], 2
mov edx, 0x10
lea rcx, [r14+0x10]
mov r8d, 0x10000
lea r9d, [rdx-0xc]
call fcn.14001040c
lea r8, [r14+0x10]
mov edx, 8
mov qword[rdi+0x58], rax
mov rcx, qword[0x14001e444]
call qword[sym.imp.KERNEL32.dll_HeapAlloc]
lea rcx, [0x1400175f4]
mov qword[rdi+0x18], rax
mov qword[rax+8], rcx
mov qword[rsi], rdi
jmp 0x14000b950
mov rcx, qword[0x14001e444]
mov r8, rdi
xor edx, edx
call qword[sym.imp.KERNEL32.dll_HeapFree]
xor edi, edi
mov rbx, qword[rsp+0x40]
mov rbp, qword[rsp+0x48]
mov rsi, qword[rsp+0x50]
mov rax, rdi
add rsp, 0x20
pop r15
pop r14
pop rdi
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/c4af5ec7826361dc5a22db79be296638