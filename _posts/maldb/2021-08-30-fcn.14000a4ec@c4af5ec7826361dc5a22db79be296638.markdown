---
layout: post
title:  "fcn.14000a4ec @ c4af5ec7826361dc5a22db79be296638"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.14000a4ec
- **Origin (md5):** c4af5ec7826361dc5a22db79be296638
- **VirusTotal:** [virustotal.com/gui/file/c4af5ec7826361dc5a22db79be296638][virustotal_ref]

# Code Tags
<span class="tag" id="MEMORY">MEMORY</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.14000a4ec@c4af5ec7826361dc5a22db79be296638">fcn.14000a4ec</a><br>@c4af5ec7826361dc5a22db79be296638</b><br>mov rax, rsp<br>mov qword[rax+0x10], rbx<br>mov qword[rax+0x18], rsi<br>mov qword[rax+0x20], rdi<br>push rbp<br>push r12<br>push r13<br>push r14<br>push r15<br>lea rbp, [rax-0x57]<br>sub rsp, 0xf0<br>xor r13d, r13d<br>mov r12d, r9d<br>mov rdi, r8<br>mov qword[rbp+0x5f], r13<br>mov rbx, rdx<br>call fcn.14000a36c<br>mov rcx, rbx<br>mov r14, rax<br>call fcn.14000a36c<br>mov rcx, rdi<br>mov r15, rax<br>call fcn.14000a36c<br>cmp qword[0x14001e5c0], r13<br>mov rsi, rax<br>jne 0x14000a557<br>lea ecx, [r13+0x11]<br>call qword[sym.imp.GDI32.DLL_GetStockObject]<br>mov qword[0x14001e5c0], rax<br>mov rcx, qword[0x14001e44c]<br>lea rax, [0x14000a3e0]<br>mov ebx, 1<br>mov edx, ebx<br>mov dword[rbp-0x51], 0x50<br>mov dword[rbp-0x4d], 3<br>mov qword[rbp-0x39], rcx<br>mov qword[rbp-0x49], rax<br>mov qword[rbp-0x41], r13<br>call qword[sym.imp.USER32.DLL_LoadIconW]<br>mov edx, 0x7f00<br>xor ecx, ecx<br>mov qword[rbp-0x31], rax<br>call qword[sym.imp.USER32.DLL_LoadCursorW]<br>lea rcx, [rbp-0x51]<br>movdqa xmm0, xmmword[0x1400176a0]<br>movdqa xmmword[rbp-0x21], xmm0<br>mov qword[rbp-0x29], rax<br>mov rax, qword[str.InputRequester]<br>mov qword[rbp-9], r13<br>mov qword[rbp-0x11], rax<br>call qword[sym.imp.USER32.DLL_RegisterClassExW]<br>mov dword[0x14001e5c8], r13d<br>call fcn.14000a9cc<br>mov ecx, ebx<br>mov qword[0x14001e5e8], rax<br>call fcn.14000aab4<br>mov rcx, qword[0x14001e5e8]<br>test rcx, rcx<br>je 0x14000a60e<br>call qword[sym.imp.USER32.DLL_IsWindowEnabled]<br>test eax, eax<br>je 0x14000a60e<br>mov rcx, qword[0x14001e5e8]<br>xor edx, edx<br>call qword[sym.imp.USER32.DLL_EnableWindow]<br>mov dword[0x14001e5cc], ebx<br>jmp 0x14000a615<br>mov dword[0x14001e5cc], r13d<br>call fcn.14000a9cc<br>mov ecx, ebx<br>mov rdi, rax<br>call qword[sym.imp.USER32.DLL_GetSystemMetrics]<br>xor ecx, ecx<br>cdq <br>sub eax, edx<br>sar eax, 1<br>lea ebx, [rax-0x41]<br>call qword[sym.imp.USER32.DLL_GetSystemMetrics]<br>mov rcx, qword[0x14001e44c]<br>mov qword[rsp+0x58], r13<br>mov qword[rsp+0x50], rcx<br>cdq <br>mov qword[rsp+0x48], r13<br>sub eax, edx<br>mov rdx, qword[str.InputRequester]<br>mov qword[rsp+0x40], rdi<br>mov dword[rsp+0x38], 0x82<br>sar eax, 1<br>sub eax, 0x96<br>mov dword[rsp+0x30], 0x12c<br>mov r9d, 0x10c80000<br>mov r8, r14<br>xor ecx, ecx<br>mov dword[rsp+0x28], ebx<br>mov dword[rsp+0x20], eax<br>call qword[sym.imp.USER32.DLL_CreateWindowExW]<br>mov rdi, rax<br>test rax, rax<br>je 0x14000a92a<br>lea r8, [rbp+0x5f]<br>mov edx, 0xffffffeb<br>mov rcx, rax<br>call qword[sym.imp.USER32.DLL_SetWindowLongPtrW]<br>mov rcx, qword[0x14001e44c]<br>mov qword[rsp+0x58], r13<br>mov qword[rsp+0x50], rcx<br>mov qword[rsp+0x48], r13<br>mov qword[rsp+0x40], rdi<br>mov dword[rsp+0x38], 0x16<br>mov ebx, 0xa<br>mov dword[rsp+0x30], 0x118<br>lea rdx, str.STATIC<br>mov r9d, 0x5000000b<br>mov r8, r15<br>xor ecx, ecx<br>mov dword[rsp+0x28], ebx<br>mov dword[rsp+0x20], ebx<br>call qword[sym.imp.USER32.DLL_CreateWindowExW]<br>mov r8, qword[0x14001e5c0]<br>lea r9d, [rbx-9]<br>lea edx, [rbx+0x26]<br>mov rcx, rax<br>mov qword[0x14001e5e0], rax<br>call qword[sym.imp.USER32.DLL_SendMessageW]<br>mov rax, qword[0x14001e44c]<br>mov qword[rsp+0x58], r13<br>mov qword[rsp+0x50], rax<br>mov qword[rsp+0x48], rbx<br>lea ecx, [rbx+0x16]<br>mov qword[rsp+0x40], rdi<br>mov dword[rsp+0x38], 0x15<br>mov r9d, r13d<br>mov dword[rsp+0x30], 0x113<br>mov dword[rsp+0x28], ecx<br>test r12b, 1<br>cmovne r9d, ecx<br>lea rdx, str.EDIT<br>mov ecx, 0x200<br>or r9d, 0x50010080<br>xor r8d, r8d<br>mov dword[rsp+0x20], ebx<br>call qword[sym.imp.USER32.DLL_CreateWindowExW]<br>mov r8, qword[0x14001e5c0]<br>lea r12d, [rbx-9]<br>lea edx, [rbx+0x26]<br>mov r9d, r12d<br>mov rcx, rax<br>mov qword[0x14001e5d8], rax<br>call qword[sym.imp.USER32.DLL_SendMessageW]<br>mov rcx, qword[0x14001e5d8]<br>call qword[sym.imp.USER32.DLL_SetFocus]<br>test rsi, rsi<br>je 0x14000a7e7<br>mov rcx, qword[0x14001e5d8]<br>lea edx, [rbx+2]<br>mov r9, rsi<br>xor r8d, r8d<br>call qword[sym.imp.USER32.DLL_SendMessageW]<br>mov rcx, rsi<br>call sub.msvcrt.dll_wcslen<br>mov rcx, rsi<br>mov rbx, rax<br>call sub.msvcrt.dll_wcslen<br>mov rcx, qword[0x14001e5d8]<br>mov r9, rbx<br>mov edx, 0xb1<br>mov r8, rax<br>call qword[sym.imp.USER32.DLL_SendMessageW]<br>mov rax, qword[0x14001e44c]<br>mov qword[rsp+0x58], r13<br>mov ebx, 0x3e8<br>mov qword[rsp+0x50], rax<br>mov qword[rsp+0x48], rbx<br>mov qword[rsp+0x40], rdi<br>mov dword[rsp+0x38], 0x19<br>mov dword[rsp+0x30], 0x50<br>lea r8, [0x140017684]<br>lea rdx, str.BUTTON<br>mov r9d, 0x50010001<br>xor ecx, ecx<br>mov dword[rsp+0x28], 0x43<br>mov dword[rsp+0x20], 0x6e<br>call qword[sym.imp.USER32.DLL_CreateWindowExW]<br>mov r8, qword[0x14001e5c0]<br>mov r9, r12<br>mov edx, 0x30<br>mov rcx, rax<br>mov qword[0x14001e5d0], rax<br>call qword[sym.imp.USER32.DLL_SendMessageW]<br>lea rcx, [rbp-0x61]<br>mov edx, 2<br>mov byte[rbp-0x61], r12b<br>mov dword[rbp-0x5f], 0x3e8000d<br>mov byte[rbp-0x5b], r12b<br>mov dword[rbp-0x59], 0x3e9001b<br>call qword[sym.imp.USER32.DLL_CreateAcceleratorTableW]<br>mov rcx, rdi<br>mov rbx, rax<br>call qword[sym.imp.USER32.DLL_SetForegroundWindow]<br>mov rcx, rdi<br>call qword[sym.imp.USER32.DLL_BringWindowToTop]<br>jmp 0x14000a8dc<br>lea rcx, [rbp-1]<br>xor r9d, r9d<br>xor r8d, r8d<br>xor edx, edx<br>call qword[sym.imp.USER32.DLL_GetMessageW]<br>test eax, eax<br>je 0x14000a8e5<br>lea r8, [rbp-1]<br>mov rdx, rbx<br>mov rcx, rdi<br>call qword[sym.imp.USER32.DLL_TranslateAcceleratorW]<br>test eax, eax<br>jne 0x14000a8dc<br>lea rcx, [rbp-1]<br>call qword[sym.imp.USER32.DLL_TranslateMessage]<br>lea rcx, [rbp-1]<br>call qword[sym.imp.USER32.DLL_DispatchMessageW]<br>cmp dword[0x14001e5c8], r13d<br>je 0x14000a89e<br>test rbx, rbx<br>je 0x14000a8f3<br>mov rcx, rbx<br>call qword[sym.imp.USER32.DLL_DestroyAcceleratorTable]<br>mov rcx, qword[rbp+0x5f]<br>test rcx, rcx<br>je 0x14000a930<br>call sub.msvcrt.dll_wcslen<br>mov edx, dword[rbp+0x7f]<br>mov ecx, eax<br>call fcn.1400112e0<br>mov rdx, qword[rbp+0x5f]<br>mov rcx, rax<br>call sub.msvcrt.dll_wcscpy<br>mov r8, qword[rbp+0x5f]<br>mov rcx, qword[0x14001e444]<br>xor edx, edx<br>call qword[sym.imp.KERNEL32.dll_HeapFree]<br>cmp qword[rbp+0x5f], r13<br>jne 0x14000a938<br>mov ecx, dword[rbp+0x7f]<br>call fcn.1400113c0<br>test r14, r14<br>je 0x14000a94f<br>mov rcx, qword[0x14001e444]<br>mov r8, r14<br>xor edx, edx<br>call qword[sym.imp.KERNEL32.dll_HeapFree]<br>test r15, r15<br>je 0x14000a966<br>mov rcx, qword[0x14001e444]<br>mov r8, r15<br>xor edx, edx<br>call qword[sym.imp.KERNEL32.dll_HeapFree]<br>test rsi, rsi<br>je 0x14000a97d<br>mov rcx, qword[0x14001e444]<br>mov r8, rsi<br>xor edx, edx<br>call qword[sym.imp.KERNEL32.dll_HeapFree]<br>lea r11, [rsp+0xf0]<br>mov rbx, qword[r11+0x38]<br>mov rsi, qword[r11+0x40]<br>mov rdi, qword[r11+0x48]<br>mov rsp, r11<br>pop r15<br>pop r14<br>pop r13<br>pop r12<br>pop rbp<br>ret <br><eoc> ', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

mov rax, rsp
mov qword[rax+0x10], rbx
mov qword[rax+0x18], rsi
mov qword[rax+0x20], rdi
push rbp
push r12
push r13
push r14
push r15
lea rbp, [rax-0x57]
sub rsp, 0xf0
xor r13d, r13d
mov r12d, r9d
mov rdi, r8
mov qword[rbp+0x5f], r13
mov rbx, rdx
call fcn.14000a36c
mov rcx, rbx
mov r14, rax
call fcn.14000a36c
mov rcx, rdi
mov r15, rax
call fcn.14000a36c
cmp qword[0x14001e5c0], r13
mov rsi, rax
jne 0x14000a557
lea ecx, [r13+0x11]
call qword[sym.imp.GDI32.DLL_GetStockObject]
mov qword[0x14001e5c0], rax
mov rcx, qword[0x14001e44c]
lea rax, [0x14000a3e0]
mov ebx, 1
mov edx, ebx
mov dword[rbp-0x51], 0x50
mov dword[rbp-0x4d], 3
mov qword[rbp-0x39], rcx
mov qword[rbp-0x49], rax
mov qword[rbp-0x41], r13
call qword[sym.imp.USER32.DLL_LoadIconW]
mov edx, 0x7f00
xor ecx, ecx
mov qword[rbp-0x31], rax
call qword[sym.imp.USER32.DLL_LoadCursorW]
lea rcx, [rbp-0x51]
movdqa xmm0, xmmword[0x1400176a0]
movdqa xmmword[rbp-0x21], xmm0
mov qword[rbp-0x29], rax
mov rax, qword[str.InputRequester]
mov qword[rbp-9], r13
mov qword[rbp-0x11], rax
call qword[sym.imp.USER32.DLL_RegisterClassExW]
mov dword[0x14001e5c8], r13d
call fcn.14000a9cc
mov ecx, ebx
mov qword[0x14001e5e8], rax
call fcn.14000aab4
mov rcx, qword[0x14001e5e8]
test rcx, rcx
je 0x14000a60e
call qword[sym.imp.USER32.DLL_IsWindowEnabled]
test eax, eax
je 0x14000a60e
mov rcx, qword[0x14001e5e8]
xor edx, edx
call qword[sym.imp.USER32.DLL_EnableWindow]
mov dword[0x14001e5cc], ebx
jmp 0x14000a615
mov dword[0x14001e5cc], r13d
call fcn.14000a9cc
mov ecx, ebx
mov rdi, rax
call qword[sym.imp.USER32.DLL_GetSystemMetrics]
xor ecx, ecx
cdq
sub eax, edx
sar eax, 1
lea ebx, [rax-0x41]
call qword[sym.imp.USER32.DLL_GetSystemMetrics]
mov rcx, qword[0x14001e44c]
mov qword[rsp+0x58], r13
mov qword[rsp+0x50], rcx
cdq
mov qword[rsp+0x48], r13
sub eax, edx
mov rdx, qword[str.InputRequester]
mov qword[rsp+0x40], rdi
mov dword[rsp+0x38], 0x82
sar eax, 1
sub eax, 0x96
mov dword[rsp+0x30], 0x12c
mov r9d, 0x10c80000
mov r8, r14
xor ecx, ecx
mov dword[rsp+0x28], ebx
mov dword[rsp+0x20], eax
call qword[sym.imp.USER32.DLL_CreateWindowExW]
mov rdi, rax
test rax, rax
je 0x14000a92a
lea r8, [rbp+0x5f]
mov edx, 0xffffffeb
mov rcx, rax
call qword[sym.imp.USER32.DLL_SetWindowLongPtrW]
mov rcx, qword[0x14001e44c]
mov qword[rsp+0x58], r13
mov qword[rsp+0x50], rcx
mov qword[rsp+0x48], r13
mov qword[rsp+0x40], rdi
mov dword[rsp+0x38], 0x16
mov ebx, 0xa
mov dword[rsp+0x30], 0x118
lea rdx, str.STATIC
mov r9d, 0x5000000b
mov r8, r15
xor ecx, ecx
mov dword[rsp+0x28], ebx
mov dword[rsp+0x20], ebx
call qword[sym.imp.USER32.DLL_CreateWindowExW]
mov r8, qword[0x14001e5c0]
lea r9d, [rbx-9]
lea edx, [rbx+0x26]
mov rcx, rax
mov qword[0x14001e5e0], rax
call qword[sym.imp.USER32.DLL_SendMessageW]
mov rax, qword[0x14001e44c]
mov qword[rsp+0x58], r13
mov qword[rsp+0x50], rax
mov qword[rsp+0x48], rbx
lea ecx, [rbx+0x16]
mov qword[rsp+0x40], rdi
mov dword[rsp+0x38], 0x15
mov r9d, r13d
mov dword[rsp+0x30], 0x113
mov dword[rsp+0x28], ecx
test r12b, 1
cmovne r9d, ecx
lea rdx, str.EDIT
mov ecx, 0x200
or r9d, 0x50010080
xor r8d, r8d
mov dword[rsp+0x20], ebx
call qword[sym.imp.USER32.DLL_CreateWindowExW]
mov r8, qword[0x14001e5c0]
lea r12d, [rbx-9]
lea edx, [rbx+0x26]
mov r9d, r12d
mov rcx, rax
mov qword[0x14001e5d8], rax
call qword[sym.imp.USER32.DLL_SendMessageW]
mov rcx, qword[0x14001e5d8]
call qword[sym.imp.USER32.DLL_SetFocus]
test rsi, rsi
je 0x14000a7e7
mov rcx, qword[0x14001e5d8]
lea edx, [rbx+2]
mov r9, rsi
xor r8d, r8d
call qword[sym.imp.USER32.DLL_SendMessageW]
mov rcx, rsi
call sub.msvcrt.dll_wcslen
mov rcx, rsi
mov rbx, rax
call sub.msvcrt.dll_wcslen
mov rcx, qword[0x14001e5d8]
mov r9, rbx
mov edx, 0xb1
mov r8, rax
call qword[sym.imp.USER32.DLL_SendMessageW]
mov rax, qword[0x14001e44c]
mov qword[rsp+0x58], r13
mov ebx, 0x3e8
mov qword[rsp+0x50], rax
mov qword[rsp+0x48], rbx
mov qword[rsp+0x40], rdi
mov dword[rsp+0x38], 0x19
mov dword[rsp+0x30], 0x50
lea r8, [0x140017684]
lea rdx, str.BUTTON
mov r9d, 0x50010001
xor ecx, ecx
mov dword[rsp+0x28], 0x43
mov dword[rsp+0x20], 0x6e
call qword[sym.imp.USER32.DLL_CreateWindowExW]
mov r8, qword[0x14001e5c0]
mov r9, r12
mov edx, 0x30
mov rcx, rax
mov qword[0x14001e5d0], rax
call qword[sym.imp.USER32.DLL_SendMessageW]
lea rcx, [rbp-0x61]
mov edx, 2
mov byte[rbp-0x61], r12b
mov dword[rbp-0x5f], 0x3e8000d
mov byte[rbp-0x5b], r12b
mov dword[rbp-0x59], 0x3e9001b
call qword[sym.imp.USER32.DLL_CreateAcceleratorTableW]
mov rcx, rdi
mov rbx, rax
call qword[sym.imp.USER32.DLL_SetForegroundWindow]
mov rcx, rdi
call qword[sym.imp.USER32.DLL_BringWindowToTop]
jmp 0x14000a8dc
lea rcx, [rbp-1]
xor r9d, r9d
xor r8d, r8d
xor edx, edx
call qword[sym.imp.USER32.DLL_GetMessageW]
test eax, eax
je 0x14000a8e5
lea r8, [rbp-1]
mov rdx, rbx
mov rcx, rdi
call qword[sym.imp.USER32.DLL_TranslateAcceleratorW]
test eax, eax
jne 0x14000a8dc
lea rcx, [rbp-1]
call qword[sym.imp.USER32.DLL_TranslateMessage]
lea rcx, [rbp-1]
call qword[sym.imp.USER32.DLL_DispatchMessageW]
cmp dword[0x14001e5c8], r13d
je 0x14000a89e
test rbx, rbx
je 0x14000a8f3
mov rcx, rbx
call qword[sym.imp.USER32.DLL_DestroyAcceleratorTable]
mov rcx, qword[rbp+0x5f]
test rcx, rcx
je 0x14000a930
call sub.msvcrt.dll_wcslen
mov edx, dword[rbp+0x7f]
mov ecx, eax
call fcn.1400112e0
mov rdx, qword[rbp+0x5f]
mov rcx, rax
call sub.msvcrt.dll_wcscpy
mov r8, qword[rbp+0x5f]
mov rcx, qword[0x14001e444]
xor edx, edx
call qword[sym.imp.KERNEL32.dll_HeapFree]
cmp qword[rbp+0x5f], r13
jne 0x14000a938
mov ecx, dword[rbp+0x7f]
call fcn.1400113c0
test r14, r14
je 0x14000a94f
mov rcx, qword[0x14001e444]
mov r8, r14
xor edx, edx
call qword[sym.imp.KERNEL32.dll_HeapFree]
test r15, r15
je 0x14000a966
mov rcx, qword[0x14001e444]
mov r8, r15
xor edx, edx
call qword[sym.imp.KERNEL32.dll_HeapFree]
test rsi, rsi
je 0x14000a97d
mov rcx, qword[0x14001e444]
mov r8, rsi
xor edx, edx
call qword[sym.imp.KERNEL32.dll_HeapFree]
lea r11, [rsp+0xf0]
mov rbx, qword[r11+0x38]
mov rsi, qword[r11+0x40]
mov rdi, qword[r11+0x48]
mov rsp, r11
pop r15
pop r14
pop r13
pop r12
pop rbp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/c4af5ec7826361dc5a22db79be296638