---
layout: post
title:  "fcn.00414f7f @ c299206e1e94de2392d4dd9464d03d54"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00414f7f
- **Origin (md5):** c299206e1e94de2392d4dd9464d03d54
- **VirusTotal:** [virustotal.com/gui/file/c299206e1e94de2392d4dd9464d03d54][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [110.42841339111328, -0.5273919105529785, '<b><a href="/report/fcn.00414f7f@c299206e1e94de2392d4dd9464d03d54">fcn.00414f7f</a><br>@c299206e1e94de2392d4dd9464d03d54</b><br>', 'point { fill-color: #e0440e; }'],
[5.382399082183838, 97.02872467041016, '<b><a href="/report/fcn.10133bf7@e5d49e0823e602f2ee948ac39d32c1eb">fcn.10133bf7</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],
[-159.2638702392578, 94.79349517822266, '<b><a href="/report/fcn.00409b83@6c5b0418e4a4c57d99cda47d2717045d">fcn.00409b83</a><br>@6c5b0418e4a4c57d99cda47d2717045d</b><br>', 'null'],
[-8.131479263305664, -220.20297241210938, '<b><a href="/report/fcn.00421918@7dfa91bbba8f79a5b19b642937435ac0">fcn.00421918</a><br>@7dfa91bbba8f79a5b19b642937435ac0</b><br>', 'null'],
[80.69265747070312, -254.96026611328125, '<b><a href="/report/fcn.00420458@597d9ee507d1b2a81775aa98c4a2271a">fcn.00420458</a><br>@597d9ee507d1b2a81775aa98c4a2271a</b><br>', 'null'],
[138.4393768310547, -180.0373077392578, '<b><a href="/report/fcn.0044d3fe@c2f40b3bc10e39d3d975422ee4d09bab">fcn.0044d3fe</a><br>@c2f40b3bc10e39d3d975422ee4d09bab</b><br>', 'null'],
[95.77043914794922, 83.57836151123047, '<b><a href="/report/fcn.0048840f@fb9b7d22bc1c143ac66b0575cbdd088d">fcn.0048840f</a><br>@fb9b7d22bc1c143ac66b0575cbdd088d</b><br>', 'null'],
[20.542299270629883, 7.603648662567139, '<b><a href="/report/fcn.0048840f@152885a790b99953ce23874f0947b7bd">fcn.0048840f</a><br>@152885a790b99953ce23874f0947b7bd</b><br>', 'null'],
[-95.61808776855469, 17.48920440673828, '<b><a href="/report/fcn.004ad178@3e981d1767f44f5fe2446a49ffe52f4e">fcn.004ad178</a><br>@3e981d1767f44f5fe2446a49ffe52f4e</b><br>', 'null'],
[85.34172821044922, 192.73387145996094, '<b><a href="/report/fcn.00410637@c299206e1e94de2392d4dd9464d03d54">fcn.00410637</a><br>@c299206e1e94de2392d4dd9464d03d54</b><br>', 'null'],
[50.23576354980469, -150.1902313232422, '<b><a href="/report/fcn.0042493a@64e5091c15839d4b2093890f73869f28">fcn.0042493a</a><br>@64e5091c15839d4b2093890f73869f28</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
sub esp, 0x28
mov eax, dword[ebp+8]
push ebx
push esi
mov esi, dword[ebp+0x10]
push edi
push 0xfffffffffffffffe
pop ecx
xor edi, edi
mov dword[ebp-0x18], ecx
mov dword[ebp-0x20], edi
mov dword[ebp-0x28], esi
cmp eax, ecx
jne 0x414fb7
call fcn.0040a35b
mov dword[eax], edi
call fcn.0040a38f
mov dword[eax], 9
jmp 0x415706
test eax, eax
js 0x4156ef
cmp eax, dword[0x441524]
jae 0x4156ef
mov ecx, eax
mov ebx, eax
sar ecx, 5
and ebx, 0x1f
shl ebx, 6
mov dword[ebp-0xc], ecx
mov dword[ebp-0x24], ebx
mov edx, dword[ecx*4+0x4399c8]
mov al, byte[edx+ebx+4]
test al, 1
je 0x4156ef
cmp esi, 0x7fffffff
jbe 0x415010
call fcn.0040a35b
mov dword[eax], edi
call fcn.0040a38f
mov dword[eax], 0x16
jmp 0x415701
test esi, esi
je 0x4156eb
test al, 2
jne 0x4156eb
cmp dword[ebp+0xc], edi
jne 0x41502e
call fcn.0040a35b
and dword[eax], edi
jmp 0x415000
mov al, byte[edx+ebx+0x24]
add al, al
sar al, 1
mov byte[ebp+0x13], al
movsx eax, al
dec eax
je 0x415055
dec eax
jne 0x41504d
mov eax, esi
not eax
test al, 1
je 0x415025
and esi, 0xfffffffe
mov eax, dword[ebp+0xc]
mov dword[ebp-0x10], eax
jmp 0x4150b9
mov eax, esi
not eax
test al, 1
je 0x415025
shr esi, 1
cmp esi, 4
jae 0x415067
push 4
pop esi
push esi
call fcn.0040a2ca
mov dword[ebp-0x10], eax
pop ecx
test eax, eax
jne 0x415090
call fcn.0040a38f
mov dword[eax], 0xc
call fcn.0040a35b
mov dword[eax], 8
jmp 0x415706
push 1
push 0
push 0
push dword[ebp+8]
call fcn.00410b08
mov ecx, dword[ebp-0xc]
add esp, 0x10
mov ecx, dword[ecx*4+0x4399c8]
mov dword[ecx+ebx+0x28], eax
mov eax, dword[ebp-0x10]
mov dword[ecx+ebx+0x2c], edx
mov ecx, dword[ebp-0xc]
mov edx, dword[ecx*4+0x4399c8]
mov ecx, dword[ebp-0xc]
mov dword[ebp-0x1c], eax
test byte[edx+ebx+4], 0x48
je 0x415156
mov dl, byte[edx+ebx+5]
cmp dl, 0xa
je 0x415156
test esi, esi
je 0x415156
mov byte[eax], dl
xor edi, edi
lea edx, [eax+1]
inc edi
mov eax, dword[ecx*4+0x4399c8]
dec esi
cmp byte[ebp+0x13], 0
mov dword[ebp-0x1c], edx
mov byte[eax+ebx+5], 0xa
je 0x415156
mov eax, dword[ecx*4+0x4399c8]
mov al, byte[eax+ebx+0x25]
cmp al, 0xa
je 0x415156
test esi, esi
je 0x415156
mov byte[edx], al
inc edx
mov eax, dword[ecx*4+0x4399c8]
dec esi
cmp byte[ebp+0x13], 1
push 2
mov dword[ebp-0x1c], edx
pop edi
mov byte[eax+ebx+0x25], 0xa
jne 0x415156
mov eax, dword[ecx*4+0x4399c8]
mov al, byte[eax+ebx+0x26]
cmp al, 0xa
je 0x415156
test esi, esi
je 0x415156
push 3
mov byte[edx], al
inc edx
mov eax, dword[ecx*4+0x4399c8]
dec esi
pop edi
push 0xa
pop ecx
mov dword[ebp-0x1c], edx
mov byte[eax+ebx+0x26], cl
push dword[ebp+8]
call fcn.00414da6
test eax, eax
mov eax, dword[ebp-0xc]
pop ecx
je 0x4151d7
mov ecx, dword[eax*4+0x4399c8]
test byte[ecx+ebx+4], 0x80
je 0x4151d7
lea eax, [ebp-0x20]
push eax
push dword[ecx+ebx]
call dword[sym.imp.KERNEL32.dll_GetConsoleMode]
mov dword[ebp-0x20], eax
test eax, eax
je 0x4151d4
cmp byte[ebp+0x13], 2
jne 0x4151d4
push 0
lea eax, [ebp-0x14]
shr esi, 1
push eax
mov eax, dword[ebp-0xc]
push esi
push dword[ebp-0x1c]
mov eax, dword[eax*4+0x4399c8]
push dword[eax+ebx]
call dword[sym.imp.KERNEL32.dll_ReadConsoleW]
test eax, eax
jne 0x4151c9
call dword[sym.imp.KERNEL32.dll_GetLastError]
push eax
call fcn.0040a36e
pop ecx
or ebx, 0xffffffff
mov eax, dword[ebp-0x10]
jmp 0x415481
mov eax, dword[ebp-0x14]
lea ecx, [eax+eax]
mov dword[ebp-0x14], ecx
jmp 0x41520c
mov eax, dword[ebp-0xc]
mov eax, dword[eax*4+0x4399c8]
lea ecx, [ebp-0x14]
push 0
push ecx
push esi
push dword[ebp-0x1c]
push dword[eax+ebx]
call dword[sym.imp.KERNEL32.dll_ReadFile]
test eax, eax
je 0x4156b7
mov ecx, dword[ebp-0x14]
test ecx, ecx
js 0x4156b7
cmp ecx, esi
ja 0x4156b7
mov edx, dword[ebp-0xc]
add edi, ecx
mov esi, dword[edx*4+0x4399c8]
mov al, byte[esi+ebx+4]
test al, al
jns 0x41547b
cmp byte[ebp+0x13], 2
je 0x41549b
test ecx, ecx
je 0x41523e
mov ecx, dword[ebp-0x10]
cmp byte[ecx], 0xa
jne 0x41523e
or al, 4
jmp 0x415240
and al, 0xfb
mov byte[esi+ebx+4], al
mov eax, dword[ebp-0x10]
mov esi, eax
mov dword[ebp-0x20], eax
lea ecx, [eax+edi]
mov dword[ebp-0x1c], ecx
cmp eax, ecx
jae 0x415368
push 0xd
pop ecx
mov edi, eax
mov al, byte[edi]
cmp al, 0x1a
je 0x41534c
cmp al, cl
je 0x415276
mov byte[esi], al
inc esi
inc edi
jmp 0x415312
mov eax, dword[ebp-0x1c]
dec eax
cmp edi, eax
jae 0x41529a
lea eax, [edi+1]
cmp byte[eax], 0xa
jne 0x415293
push 0xa
pop eax
add edi, 2
mov byte[esi], al
jmp 0x41533e
mov byte[esi], cl
mov edi, eax
inc esi
jmp 0x415312
push 0
lea eax, [ebp-0x14]
inc edi
push eax
push 1
lea eax, [ebp-1]
push eax
mov eax, dword[edx*4+0x4399c8]
push dword[eax+ebx]
call dword[sym.imp.KERNEL32.dll_ReadFile]
test eax, eax
jne 0x4152c5
call dword[sym.imp.KERNEL32.dll_GetLastError]
test eax, eax
jne 0x415341
cmp dword[ebp-0x14], 0
je 0x415341
mov edx, dword[ebp-0xc]
mov eax, dword[edx*4+0x4399c8]
test byte[eax+ebx+4], 0x48
je 0x4152ff
push 0xa
pop eax
push 0xd
cmp byte[ebp-1], al
jne 0x4152eb
mov byte[esi], al
inc esi
jmp 0x415311
mov byte[esi], 0xd
inc esi
mov ecx, dword[edx*4+0x4399c8]
mov al, byte[ebp-1]
mov byte[ecx+ebx+5], al
jmp 0x415311
cmp esi, dword[ebp-0x10]
jne 0x41531d
push 0xa
pop eax
cmp byte[ebp-1], al
jne 0x41531d
mov byte[esi], al
inc esi
push 0xd
pop ecx
cmp edi, dword[ebp-0x1c]
jb 0x41525f
jmp 0x415368
push 1
push 0xffffffffffffffff
push 0xffffffffffffffff
push dword[ebp+8]
call fcn.00410b08
mov edx, dword[ebp-0xc]
add esp, 0x10
push 0xa
pop eax
cmp byte[ebp-1], al
je 0x41530f
push 0xd
pop ecx
mov byte[esi], cl
inc esi
jmp 0x415312
mov edx, dword[ebp-0xc]
push 0xd
pop ecx
mov byte[esi], cl
inc esi
jmp 0x415312
mov ecx, dword[edx*4+0x4399c8]
mov al, byte[ecx+ebx+4]
test al, 0x40
jne 0x415363
or al, 2
mov byte[ecx+ebx+4], al
jmp 0x415368
mov al, byte[edi]
mov byte[esi], al
inc esi
mov eax, dword[ebp-0x10]
mov edi, esi
sub edi, eax
cmp byte[ebp+0x13], 1
jne 0x41547e
test edi, edi
je 0x41547e
dec esi
mov al, byte[esi]
test al, al
js 0x41538e
inc esi
jmp 0x41543d
movzx eax, al
xor edx, edx
inc edx
cmp byte[eax+0x438140], 0
jne 0x4153ba
mov ebx, dword[ebp-0x10]
cmp edx, 4
jg 0x4153b7
cmp esi, ebx
jb 0x4153b7
dec esi
inc edx
movzx eax, byte[esi]
cmp byte[eax+0x438140], 0
je 0x4153a0
mov ebx, dword[ebp-0x24]
movzx eax, byte[esi]
movsx eax, byte[eax+0x438140]
test eax, eax
jne 0x4153d8
call fcn.0040a38f
mov dword[eax], 0x2a
jmp 0x4151be
inc eax
cmp eax, edx
jne 0x4153e1
add esi, edx
jmp 0x41543d
mov eax, dword[ebp-0xc]
mov ecx, dword[eax*4+0x4399c8]
test byte[ecx+ebx+4], 0x48
je 0x415429
mov al, byte[esi]
inc esi
mov byte[ecx+ebx+5], al
mov eax, dword[ebp-0xc]
cmp edx, 2
jl 0x415412
mov ecx, dword[eax*4+0x4399c8]
mov al, byte[esi]
inc esi
mov byte[ecx+ebx+0x25], al
mov eax, dword[ebp-0xc]
cmp edx, 3
jne 0x415425
mov ecx, dword[eax*4+0x4399c8]
mov al, byte[esi]
inc esi
mov byte[ecx+ebx+0x26], al
sub esi, edx
jmp 0x41543d
neg edx
mov eax, edx
push 1
cdq
push edx
push eax
push dword[ebp+8]
call fcn.00410b08
add esp, 0x10
mov eax, dword[ebp-0x28]
mov edi, dword[ebp-0x10]
sub esi, edi
shr eax, 1
push eax
push dword[ebp+0xc]
push esi
push edi
push 0
push 0xfde9
call dword[sym.imp.KERNEL32.dll_MultiByteToWideChar]
mov edi, eax
test edi, edi
je 0x4151b1
mov eax, dword[ebp-0xc]
xor ecx, ecx
cmp edi, esi
setne cl
add edi, edi
mov eax, dword[eax*4+0x4399c8]
mov dword[eax+ebx+0x30], ecx
mov eax, dword[ebp-0x10]
mov ebx, dword[ebp-0x18]
cmp eax, dword[ebp+0xc]
je 0x41548d
push eax
call fcn.004066f4
pop ecx
cmp ebx, 0xfffffffe
je 0x415494
mov edi, ebx
mov eax, edi
jmp 0x415709
cmp dword[ebp-0x20], 0
je 0x41551a
mov esi, dword[ebp-0x10]
mov eax, edi
cdq
mov edi, esi
sub eax, edx
mov ecx, esi
sar eax, 1
lea edx, [edi+eax*2]
cmp edi, edx
jae 0x41550b
push 0xd
mov dword[ebp+0x10], 0x1a
pop edi
movzx eax, word[ecx]
cmp ax, word[ebp+0x10]
je 0x4154fc
cmp ax, di
je 0x4154d9
mov word[esi], ax
add esi, 2
add ecx, 2
jmp 0x4154f6
lea eax, [edx-2]
cmp ecx, eax
jae 0x4154f6
add ecx, 2
push 0xa
pop eax
cmp word[ecx], ax
je 0x4154f0
push 0xd
pop eax
push eax
pop edi
mov word[esi], ax
add esi, 2
cmp ecx, edx
jb 0x4154c0
jmp 0x41550b
mov eax, dword[ebp-0xc]
mov eax, dword[eax*4+0x4399c8]
or byte[eax+ebx+4], 2
mov eax, dword[ebp-0x10]
mov edi, esi
sub edi, eax
and edi, 0xfffffffe
jmp 0x41547e
test ecx, ecx
je 0x415530
mov ecx, dword[ebp-0x10]
push 0xa
pop edx
cmp word[ecx], dx
mov edx, dword[ebp-0xc]
jne 0x415530
or al, 4
jmp 0x415532
and al, 0xfb
mov byte[esi+ebx+4], al
mov eax, dword[ebp-0x10]
mov esi, eax
mov dword[ebp-0x28], eax
lea ecx, [eax+edi]
mov dword[ebp-0x20], ecx
cmp eax, ecx
jae 0x4156ab
push 0xd
pop ecx
mov dword[ebp+0x10], 0x1a
mov edi, eax
movzx eax, word[edi]
cmp ax, word[ebp+0x10]
je 0x41568b
cmp ax, cx
je 0x41556f
mov word[esi], ax
jmp 0x415596
mov eax, dword[ebp-0x20]
add eax, 0xfffffffe
cmp edi, eax
jae 0x4155a1
push 0xa
pop edx
cmp word[edi+2], dx
mov edx, dword[ebp-0xc]
jne 0x415593
push 0xa
pop eax
add edi, 4
mov word[esi], ax
jmp 0x415678
mov word[esi], cx
add esi, 2
add edi, 2
jmp 0x415634
push 0
lea eax, [ebp-0x14]
add edi, 2
push eax
push 2
lea eax, [ebp-8]
push eax
mov eax, dword[edx*4+0x4399c8]
push dword[eax+ebx]
call dword[sym.imp.KERNEL32.dll_ReadFile]
test eax, eax
jne 0x4155d2
call dword[sym.imp.KERNEL32.dll_GetLastError]
test eax, eax
jne 0x41567d
cmp dword[ebp-0x14], 0
je 0x41567d
mov edx, dword[ebp-0xc]
mov eax, dword[edx*4+0x4399c8]
test byte[eax+ebx+4], 0x48
je 0x41563f
push 0xa
pop eax
push 0xd
cmp word[ebp-8], ax
jne 0x415600
mov word[esi], ax
add esi, 2
jmp 0x415633
pop eax
mov word[esi], ax
add esi, 2
mov ecx, dword[edx*4+0x4399c8]
mov al, byte[ebp-8]
push 0xa
mov byte[ecx+ebx+5], al
mov ecx, dword[edx*4+0x4399c8]
mov al, byte[ebp-7]
mov byte[ecx+ebx+0x25], al
mov eax, dword[edx*4+0x4399c8]
pop ecx
mov byte[eax+ebx+0x26], cl
push 0xd
pop ecx
cmp edi, dword[ebp-0x20]
jb 0x415558
jmp 0x4156ab
cmp esi, dword[ebp-0x10]
jne 0x415655
push 0xa
pop eax
cmp word[ebp-8], ax
jne 0x415655
mov word[esi], ax
add esi, 2
jmp 0x415631
push 1
push 0xffffffffffffffff
push 0xfffffffffffffffe
push dword[ebp+8]
call fcn.00410b08
mov edx, dword[ebp-0xc]
add esp, 0x10
push 0xa
pop eax
cmp word[ebp-8], ax
je 0x415631
push 0xd
pop ecx
mov word[esi], cx
add esi, 2
jmp 0x415634
mov edx, dword[ebp-0xc]
push 0xd
pop ecx
mov word[esi], cx
add esi, 2
jmp 0x415634
mov ecx, dword[edx*4+0x4399c8]
mov al, byte[ecx+ebx+4]
test al, 0x40
jne 0x4156a2
or al, 2
mov byte[ecx+ebx+4], al
jmp 0x4156ab
mov ax, word[edi]
mov word[esi], ax
add esi, 2
mov eax, dword[ebp-0x10]
mov edi, esi
sub edi, eax
jmp 0x41547e
call dword[sym.imp.KERNEL32.dll_GetLastError]
push 5
pop esi
cmp eax, esi
jne 0x4156db
call fcn.0040a38f
mov dword[eax], 9
call fcn.0040a35b
mov dword[eax], esi
jmp 0x4151be
cmp eax, 0x6d
jne 0x4151b7
xor ebx, ebx
jmp 0x4151c1
xor eax, eax
jmp 0x415709
call fcn.0040a35b
mov dword[eax], edi
call fcn.0040a38f
mov dword[eax], 9
call fcn.0040f85a
or eax, 0xffffffff
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/c299206e1e94de2392d4dd9464d03d54