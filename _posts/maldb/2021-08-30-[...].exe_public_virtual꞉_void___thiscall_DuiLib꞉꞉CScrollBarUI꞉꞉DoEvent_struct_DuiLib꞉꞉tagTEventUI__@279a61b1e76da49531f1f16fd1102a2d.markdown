---
layout: post
title:  "[...].exe_public_virtual꞉_void___thiscall_DuiLib꞉꞉CScrollBarUI꞉꞉DoEvent_struct_DuiLib꞉꞉tagTEventUI__ @ 279a61b1e76da49531f1f16fd1102a2d"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** [...].exe\_public\_virtual꞉\_void\_\_\_thiscall\_DuiLib꞉꞉CScrollBarUI꞉꞉DoEvent\_struct\_DuiLib꞉꞉tagTEventUI\_\_
- **Origin (md5):** 279a61b1e76da49531f1f16fd1102a2d
- **VirusTotal:** [virustotal.com/gui/file/279a61b1e76da49531f1f16fd1102a2d][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [176.29251098632812, -106.28231048583984, '<b><a href="/report/sym.Install.exe_public_virtual:_void___thiscall_DuiLib::CScrollBarUI::DoEvent_struct_DuiLib::tagTEventUI__@279a61b1e76da49531f1f16fd1102a2d">sym.Install.exe_public_virtual:_void___thiscall_DuiLib::CScrollBarUI::DoEvent_struct_DuiLib::tagTEventUI__</a><br>@279a61b1e76da49531f1f16fd1102a2d</b><br>', 'point { fill-color: #e0440e; }'],
[-176.29251098632812, 106.28231048583984, '<b><a href="/report/sym.tpop2.exe_public_virtual:_void___thiscall_DuiLib::CScrollBarUI::DoEvent_struct_DuiLib::tagTEventUI__@289859175c221b107317af7727d26c17">sym.tpop2.exe_public_virtual:_void___thiscall_DuiLib::CScrollBarUI::DoEvent_struct_DuiLib::tagTEventUI__</a><br>@289859175c221b107317af7727d26c17</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
sub esp, 0x10
push ebx
push esi
mov esi, ecx
mov eax, dword[esi]
push edi
call dword[eax+0xdc]
mov edi, dword[ebp+8]
push 8
pop ebx
test al, al
jne off.b44
mov eax, dword[edi]
cmp eax, ebx
jle off.b44
cmp eax, 0x13
jl off.b988
mov eax, dword[edi]
cmp eax, 0x15
je off.b1498
cmp eax, 0x14
je off.b1498
cmp eax, 0xd
je off.b1024
cmp eax, 0x10
je off.b1024
cmp eax, 0xe
jne off.b174
mov ecx, dword[esi+0x40]
and dword[esi+0x4c4], 0
and dword[esi+0x4c0], 0
push 0xa
push esi
call sym
lea ecx, [esi+0xb38]
mov eax, dword[ecx]
test al, 0x40
je off.b129
and eax, 0xffffffaf
jmp off.b160
lea ecx, [esi+0x6ec]
mov eax, dword[ecx]
test al, 0x10
jne off.b157
lea ecx, [esi+0x914]
mov eax, dword[ecx]
test al, 0x10
je off.b1498
and eax, 0xffffffef
mov dword[ecx], eax
mov ecx, esi
call sym
jmp off.b1498
cmp eax, 9
jne off.b419
mov eax, dword[esi+0xb38]
test al, 0x40
je off.b327
cmp byte[esi+0x4a0], 0
jne off.b257
mov ecx, dword[esi+0x17c]
neg ecx
add ecx, ecx
sub ecx, dword[esi+0xb34]
sub ecx, dword[esi+0x158]
add ecx, dword[esi+0xb2c]
add ecx, dword[esi+0x160]
je off.b1498
mov eax, dword[edi+0x10]
sub eax, dword[esi+0x4b8]
jmp off.b306
mov ecx, dword[esi+0x180]
neg ecx
add ecx, ecx
sub ecx, dword[esi+0xb30]
sub ecx, dword[esi+0x154]
add ecx, dword[esi+0xb28]
add ecx, dword[esi+0x15c]
je off.b1498
mov eax, dword[edi+0xc]
sub eax, dword[esi+0x4b4]
imul eax, dword[esi+0x4a4]
cdq
idiv ecx
mov dword[esi+0x4c0], eax
jmp off.b1498
test bl, al
je off.b363
push dword[edi+0x10]
lea eax, [esi+0xb28]
push dword[edi+0xc]
push eax
call dword[sym.imp.USER32.dll_PtInRect]
test eax, eax
jne off.b1498
jmp off.b976
mov eax, dword[esi]
mov ecx, esi
call dword[eax+0xd4]
test al, al
je off.b1498
push dword[edi+0x10]
lea eax, [esi+0xb28]
push dword[edi+0xc]
push eax
call dword[sym.imp.USER32.dll_PtInRect]
test eax, eax
je off.b1498
or dword[esi+0xb38], ebx
jmp off.b162
cmp eax, 0x11
je off.b1498
cmp eax, 0x18
jne off.b872
cmp dword[edi+0x18], 0xa
jne off.b872
lea eax, [esi+0x4c4]
inc dword[eax]
test byte[esi+0xb38], 0x40
mov eax, dword[eax]
je off.b614
cmp byte[esi+0x4a0], 0
mov ecx, dword[esi+0x4b0]
jne off.b521
test ecx, ecx
je off.b582
mov eax, dword[ecx]
lea edx, [ebp-8]
push edx
call dword[eax+0x160]
mov ecx, dword[esi+0x4c0]
add ecx, dword[esi+0x4bc]
push ecx
push dword[eax]
lea ecx, [ebp-0x10]
jmp off.b556
test ecx, ecx
je off.b582
mov eax, dword[ecx]
lea edx, [ebp-0x10]
push edx
call dword[eax+0x160]
push dword[eax+4]
mov eax, dword[esi+0x4c0]
add eax, dword[esi+0x4bc]
lea ecx, [ebp-8]
push eax
call sym
push dword[eax+4]
mov ecx, dword[esi+0x4b0]
push dword[eax]
mov edx, dword[ecx]
call dword[edx+0x168]
jmp off.b602
mov eax, dword[esi+0x4c0]
add eax, dword[esi+0x4bc]
mov ecx, esi
push eax
call sym
mov ecx, esi
call sym
jmp off.b1467
test byte[esi+0x6ec], 0x10
je off.b654
cmp eax, 5
jle off.b1498
jmp off.b1101
mov eax, dword[esi+0x4a8]
sub eax, dword[esi+0x4ac]
jmp off.b1459
test byte[esi+0x914], 0x10
je off.b694
cmp eax, 5
jle off.b1498
jmp off.b1184
mov eax, dword[esi+0x4ac]
add eax, dword[esi+0x4a8]
jmp off.b1459
cmp eax, 5
jle off.b1498
and dword[ebp-8], 0
xor eax, eax
lea edi, [ebp-4]
stosd dword
lea eax, [ebp-8]
push eax
call dword[sym.imp.USER32.dll_GetCursorPos]
mov ecx, dword[esi+0x40]
lea eax, [ebp-8]
push eax
call sym
push eax
call dword[sym.imp.USER32.dll_ScreenToClient]
cmp byte[esi+0x4a0], 0
jne off.b823
mov eax, dword[ebp-4]
cmp eax, dword[esi+0xb2c]
jl off.b1322
cmp eax, dword[esi+0xb34]
jmp off.b1352
mov eax, dword[esi+0x4a8]
sub eax, dword[esi+0x160]
add eax, dword[esi+0x158]
jmp off.b1459
mov eax, dword[esi+0x4a8]
sub eax, dword[esi+0x158]
add eax, dword[esi+0x160]
jmp off.b1459
mov eax, dword[ebp-8]
cmp eax, dword[esi+0xb28]
jl off.b1389
cmp eax, dword[esi+0xb30]
jmp off.b1419
mov eax, dword[esi+0x4a8]
sub eax, dword[esi+0x15c]
add eax, dword[esi+0x154]
jmp off.b1459
cmp eax, 0xb
jne off.b939
mov eax, dword[esi]
mov ecx, esi
call dword[eax+0xd4]
test al, al
je off.b1498
or dword[esi+0x6ec], ebx
or dword[esi+0x914], ebx
push dword[edi+0x10]
lea eax, [esi+0xb28]
push dword[edi+0xc]
push eax
call dword[sym.imp.USER32.dll_PtInRect]
test eax, eax
je off.b162
jmp off.b408
cmp eax, 0xa
jne off.b988
mov eax, dword[esi]
mov ecx, esi
call dword[eax+0xd4]
test al, al
je off.b1498
and dword[esi+0x6ec], 0xfffffff7
and dword[esi+0x914], 0xfffffff7
and dword[esi+0xb38], 0xfffffff7
jmp off.b162
mov ecx, dword[esi+0x4b0]
push edi
test ecx, ecx
je off.b1012
mov eax, dword[ecx]
call dword[eax+0x10c]
jmp off.b1498
mov ecx, esi
call method
jmp off.b1498
mov eax, dword[esi]
mov ecx, esi
call dword[eax+0xd4]
test al, al
je off.b1498
mov ecx, dword[esi+0x40]
and dword[esi+0x4c0], 0
and dword[esi+0x4c4], 0
push 0x32
push 0xa
push esi
call sym
push dword[edi+0x10]
mov ebx, dword[sym.imp.USER32.dll_PtInRect]
push dword[edi+0xc]
lea eax, [esi+0x6dc]
push eax
call ebx
test eax, eax
je off.b1158
or dword[esi+0x6ec], 0x10
cmp byte[esi+0x4a0], 0
mov ecx, dword[esi+0x4b0]
jne off.b1137
test ecx, ecx
je off.b637
mov eax, dword[ecx]
call dword[eax+0x16c]
jmp off.b1467
test ecx, ecx
je off.b637
mov eax, dword[ecx]
call dword[eax+0x184]
jmp off.b1467
push dword[edi+0x10]
lea eax, [esi+0x904]
push dword[edi+0xc]
push eax
call ebx
test eax, eax
je off.b1241
or dword[esi+0x914], 0x10
cmp byte[esi+0x4a0], 0
mov ecx, dword[esi+0x4b0]
jne off.b1220
test ecx, ecx
je off.b677
mov eax, dword[ecx]
call dword[eax+0x170]
jmp off.b1467
test ecx, ecx
je off.b677
mov eax, dword[ecx]
call dword[eax+0x188]
jmp off.b1467
push dword[edi+0x10]
lea eax, [esi+0xb28]
push dword[edi+0xc]
push eax
call ebx
test eax, eax
je off.b1302
or dword[esi+0xb38], 0x50
mov eax, dword[edi+0xc]
mov dword[esi+0x4b4], eax
mov eax, dword[edi+0x10]
mov dword[esi+0x4b8], eax
mov eax, dword[esi+0x4a8]
mov dword[esi+0x4bc], eax
jmp off.b1467
cmp byte[esi+0x4a0], 0
jne off.b1378
mov edi, dword[edi+0x10]
cmp edi, dword[esi+0xb2c]
jge off.b1346
mov ecx, dword[esi+0x4b0]
test ecx, ecx
je off.b777
mov eax, dword[ecx]
call dword[eax+0x174]
jmp off.b1467
cmp edi, dword[esi+0xb34]
jle off.b1467
mov ecx, dword[esi+0x4b0]
test ecx, ecx
je off.b800
mov eax, dword[ecx]
call dword[eax+0x178]
jmp off.b1467
mov edi, dword[edi+0xc]
cmp edi, dword[esi+0xb28]
jge off.b1413
mov ecx, dword[esi+0x4b0]
test ecx, ecx
je off.b849
mov eax, dword[ecx]
call dword[eax+0x18c]
jmp off.b1467
cmp edi, dword[esi+0xb30]
jle off.b1467
mov ecx, dword[esi+0x4b0]
test ecx, ecx
je off.b1441
mov eax, dword[ecx]
call dword[eax+0x190]
jmp off.b1467
mov eax, dword[esi+0x4a8]
sub eax, dword[esi+0x154]
add eax, dword[esi+0x15c]
push eax
mov ecx, esi
call sym
mov ecx, dword[esi+0x40]
xor eax, eax
cmp ecx, eax
je off.b1498
cmp dword[esi+0x4b0], eax
jne off.b1498
push eax
push eax
push eax
push str.scroll
push esi
call sym
pop edi
pop esi
pop ebx
leave
ret 4

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/279a61b1e76da49531f1f16fd1102a2d