---
layout: post
title:  "fcn.0048d74c @ d96761eb00d2d97e2b6f5ffffed0b46a"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0048d74c
- **Origin (md5):** d96761eb00d2d97e2b6f5ffffed0b46a
- **VirusTotal:** [virustotal.com/gui/file/d96761eb00d2d97e2b6f5ffffed0b46a][virustotal_ref]

# Code Tags
<span class="tag" id="SYSTEM-INFO">SYSTEM-INFO</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [0, 0, '<b><a href="/report/fcn.0048d74c@d96761eb00d2d97e2b6f5ffffed0b46a">fcn.0048d74c</a><br>@d96761eb00d2d97e2b6f5ffffed0b46a</b><br>', 'point { fill-color: #e0440e; }'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
sub esp, 0x10
mov ecx, 0x4c67b0
push ebx
push esi
push edi
push dword[ebp+8]
call fcn.00402612
mov ecx, dword[0x4c6810]
mov esi, dword[ebp+0x10]
mov ebx, dword[ebp+0x14]
mov eax, dword[ecx+eax*4]
mov edi, dword[eax]
cmp byte[edi+0x3a], 0
je off.b71
cmp dword[edi+0x19c], 0
mov dword[edi+0x44], esi
mov dword[edi+0x48], ebx
je off.b71
push 0xf
call dword[sym.imp.USER32.dll_GetSystemMetrics]
add dword[edi+0x48], eax
cmp dword[edi+0x19c], 0
mov eax, dword[edi+0x44]
mov ecx, dword[edi+0x48]
mov dword[ebp-8], eax
mov dword[ebp-4], ecx
je off.b111
push 0xf
call dword[sym.imp.USER32.dll_GetSystemMetrics]
mov ecx, dword[ebp-4]
sub ecx, eax
mov eax, dword[ebp-8]
mov dword[ebp-4], ecx
test eax, eax
jle off.b811
test ecx, ecx
jle off.b811
test esi, esi
jle off.b811
test ebx, ebx
jle off.b811
cmp dword[ebp+0xc], 1
je off.b811
push 3
pop ebx
mov dword[ebp-0x10], ebx
cmp dword[0x4c6834], ebx
jl off.b790
mov eax, dword[0x4c6824]
mov eax, dword[eax+ebx*4]
mov ebx, dword[eax]
test ebx, ebx
je off.b771
mov eax, dword[ebx+4]
cmp eax, dword[edi+4]
jne off.b771
cmp dword[ebx], 0
je off.b771
movsx eax, word[ebx+0x88]
mov dword[ebp-0xc], eax
imul eax, esi
cdq
idiv dword[ebp-8]
mov esi, eax
movsx eax, word[ebx+0x8a]
imul eax, dword[ebp+0x14]
cdq
idiv ecx
mov ecx, eax
movsx eax, word[ebx+0x8c]
imul eax, dword[ebp+0x10]
cdq
idiv dword[ebp-8]
mov dword[ebp+8], eax
movsx eax, word[ebx+0x8e]
imul eax, dword[ebp+0x14]
cdq
idiv dword[ebp-4]
movzx edx, word[ebx+0x86]
mov dword[ebp+0xc], eax
test dx, dx
je off.b655
test edx, 0x100
je off.b405
movsx edx, word[ebx+0x8c]
mov dword[ebp+8], edx
movzx edx, word[ebx+0x86]
test dl, 6
jne off.b405
mov eax, dword[ebp+0x10]
test dl, 8
je off.b356
sub eax, dword[ebp-8]
cdq
sub eax, edx
mov esi, eax
movsx eax, word[ebx+0x88]
sar esi, 1
add esi, eax
jmp off.b395
cdq
sub eax, edx
sar eax, 1
cmp esi, eax
jle off.b395
movsx edx, word[ebx+0x88]
mov eax, dword[ebp-8]
mov esi, dword[ebp+0x10]
sub eax, edx
sub eax, dword[ebp+8]
imul eax, esi
cdq
idiv dword[ebp-8]
sub esi, eax
sub esi, dword[ebp+8]
mov eax, dword[ebp+0xc]
movzx edx, word[ebx+0x86]
test edx, 0x200
je off.b464
movsx eax, word[ebx+0x8e]
mov dword[ebp+0xc], eax
test dl, 0x60
jne off.b464
mov eax, dword[ebp+0x14]
test dl, dl
jns off.b522
sub eax, dword[ebp-4]
cdq
sub eax, edx
mov ecx, eax
movsx eax, word[ebx+0x8a]
sar ecx, 1
add ecx, eax
mov eax, dword[ebp+0xc]
movzx edx, word[ebx+0x86]
mov dword[ebp+0xc], edx
and dword[ebp+0xc], 2
je off.b480
movsx esi, word[ebx+0x88]
test dl, 4
je off.b584
cmp word[ebp+0xc], 0
je off.b565
movsx edx, word[ebx+0x8c]
sub edx, esi
sub edx, dword[ebp-8]
add edx, dword[ebp-0xc]
add edx, dword[ebp+0x10]
mov dword[ebp+8], edx
movzx edx, word[ebx+0x86]
jmp off.b584
cdq
sub eax, edx
sar eax, 1
cmp ecx, eax
jle off.b454
movsx ecx, word[ebx+0x8a]
mov eax, dword[ebp-4]
sub eax, ecx
mov ecx, dword[ebp+0x14]
sub eax, dword[ebp+0xc]
imul eax, ecx
cdq
idiv dword[ebp-4]
sub ecx, eax
mov eax, dword[ebp+0xc]
sub ecx, eax
jmp off.b457
movsx esi, word[ebx+0x8c]
sub esi, dword[ebp+8]
sub esi, dword[ebp-8]
add esi, dword[ebp-0xc]
add esi, dword[ebp+0x10]
mov dword[ebp+0xc], edx
and dword[ebp+0xc], 0x20
je off.b600
movsx ecx, word[ebx+0x8a]
test dl, 0x40
je off.b655
cmp word[ebp+0xc], 0
movsx edx, word[ebx+0x8a]
je off.b638
movsx eax, word[ebx+0x8e]
sub eax, ecx
sub eax, dword[ebp-4]
add eax, edx
add eax, dword[ebp+0x14]
jmp off.b655
movsx ecx, word[ebx+0x8e]
sub ecx, eax
sub ecx, dword[ebp-4]
add ecx, edx
add ecx, dword[ebp+0x14]
push 0
push eax
push dword[ebp+8]
push ecx
push esi
push dword[ebx]
call dword[sym.imp.USER32.dll_MoveWindow]
mov al, byte[ebx+0x90]
test al, al
jne off.b703
push 0xffff
push 0
push 0x142
push dword[ebx]
call dword[sym.imp.USER32.dll_SendMessageW]
jmp off.b765
cmp al, 0x16
jne off.b765
test byte[ebx+0x92], 0x20
jne off.b765
push 0
push dword[ebx+0x34]
push 0x469
push dword[ebx]
call dword[sym.imp.USER32.dll_SendMessageW]
mov al, byte[ebx+0x93]
cmp al, 0xff
je off.b765
movzx eax, al
cmp eax, dword[edi+0x190]
je off.b765
push 0
push dword[ebx]
call dword[sym.imp.USER32.dll_ShowWindow]
mov ecx, dword[ebp-4]
mov esi, dword[ebp+0x10]
mov ebx, dword[ebp-0x10]
inc ebx
mov dword[ebp-0x10], ebx
cmp ebx, dword[0x4c6834]
jle off.b171
push 1
push 0
push dword[edi]
call dword[sym.imp.USER32.dll_InvalidateRect]
mov byte[edi+0x184], 1
jmp off.b837
movzx ecx, bx
shl ecx, 0x10
movzx eax, si
or ecx, eax
push ecx
push dword[ebp+0xc]
push 5
push dword[ebp+8]
call dword[sym.imp.USER32.dll_DefDlgProcW]
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret 0x10

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/d96761eb00d2d97e2b6f5ffffed0b46a