---
layout: post
title:  "fcn.0065ba65 @ bcba729302fe28f65deb2b102a06324a"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0065ba65
- **Origin (md5):** bcba729302fe28f65deb2b102a06324a
- **VirusTotal:** [virustotal.com/gui/file/bcba729302fe28f65deb2b102a06324a][virustotal_ref]

# Code Tags
<span class="tag" id="MEMORY">MEMORY</span>


# Behaviour Tags
<span class="bhv-tag" id="MODIFIES_DACL">MODIFIES_DACL / 0.08326733785695571</span><span class="bhv-tag" id="GENERATES_CANNARIES">GENERATES_CANNARIES / 0.21472250414685545</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-94.53594970703125, 103.04779815673828, '<b><a href="/report/fcn.0065ba65@bcba729302fe28f65deb2b102a06324a">fcn.0065ba65</a><br>@bcba729302fe28f65deb2b102a06324a</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>mov ecx, dword[ebp+8]<br>push ebx<br>push esi<br>push edi<br>mov esi, dword[ecx+0x10]<br>mov eax, dword[ecx+8]<br>xor ebx, ebx<br>test eax, eax<br>jl 0x65ba80<br>shl eax, 1<br>inc ebx<br>jmp 0x65ba77<br>mov eax, ebx<br>push 0x3f<br>imul eax, eax, 0x204<br>pop edx<br>lea eax, [eax+esi+0x144]<br>mov dword[ebp-4], eax<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x65ba95<br>mov edi, ebx<br>push 4<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x1000<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x65bac8<br>or eax, 0xffffffff<br>jmp 0x65bb5b<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>ja 0x65bb0e<br>lea eax, [edi+0x10]<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea ecx, [eax+0xffc]<br>mov dword[eax-4], 0xff0<br>mov dword[eax], ecx<br>lea ecx, [eax-0x1004]<br>mov dword[eax+4], ecx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>lea ecx, [eax-0x10]<br>cmp ecx, edx<br>jbe 0x65bad5<br>mov eax, dword[ebp-4]<br>lea ecx, [edi+0xc]<br>add eax, 0x1f8<br>push 1<br>pop edi<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x65bb4b<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'point { fill-color: #e0440e; }'],
[-73.15485382080078, 108.06082916259766, '<b><a href="/report/fcn.005966e5@009ea4ad185ccb9becba67b3b2163e8b">fcn.005966e5</a><br>@009ea4ad185ccb9becba67b3b2163e8b</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>mov ecx, dword[ebp+8]<br>push ebx<br>push esi<br>push edi<br>mov esi, dword[ecx+0x10]<br>mov eax, dword[ecx+8]<br>xor ebx, ebx<br>test eax, eax<br>jl 0x596700<br>shl eax, 1<br>inc ebx<br>jmp 0x5966f7<br>mov eax, ebx<br>push 0x3f<br>imul eax, eax, 0x204<br>pop edx<br>lea eax, [eax+esi+0x144]<br>mov dword[ebp-4], eax<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x596715<br>mov edi, ebx<br>push 4<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x1000<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x596748<br>or eax, 0xffffffff<br>jmp 0x5967db<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>ja 0x59678e<br>lea eax, [edi+0x10]<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea ecx, [eax+0xffc]<br>mov dword[eax-4], 0xff0<br>mov dword[eax], ecx<br>lea ecx, [eax-0x1004]<br>mov dword[eax+4], ecx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>lea ecx, [eax-0x10]<br>cmp ecx, edx<br>jbe 0x596755<br>mov eax, dword[ebp-4]<br>lea ecx, [edi+0xc]<br>add eax, 0x1f8<br>push 1<br>pop edi<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x5967cb<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[85.4153060913086, -147.4940185546875, '<b><a href="/report/fcn.0041aee6@1123b7aa5760238fe93045e585b8234c">fcn.0041aee6</a><br>@1123b7aa5760238fe93045e585b8234c</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>push ecx<br>mov ecx, dword[ebp+8]<br>mov eax, dword[ecx+8]<br>push ebx<br>push esi<br>mov esi, dword[ecx+0x10]<br>push edi<br>xor ebx, ebx<br>jmp 0x41aefe<br>shl eax, 1<br>inc ebx<br>test eax, eax<br>jge 0x41aefb<br>mov eax, ebx<br>imul eax, eax, 0x204<br>lea eax, [eax+esi+0x144]<br>push 0x3f<br>mov dword[ebp-8], eax<br>pop edx<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x41af17<br>push 4<br>mov edi, ebx<br>push 0x1000<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x41af4a<br>or eax, 0xffffffff<br>jmp 0x41afe7<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>mov dword[ebp-4], edx<br>ja 0x41af9a<br>mov ecx, edx<br>sub ecx, edi<br>shr ecx, 0xc<br>lea eax, [edi+0x10]<br>inc ecx<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea edx, [eax+0xffc]<br>mov dword[eax], edx<br>lea edx, [eax-0x1004]<br>mov dword[eax-4], 0xff0<br>mov dword[eax+4], edx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>dec ecx<br>jne 0x41af62<br>mov edx, dword[ebp-4]<br>mov eax, dword[ebp-8]<br>add eax, 0x1f8<br>lea ecx, [edi+0xc]<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>xor edi, edi<br>inc edi<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x41afd7<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[-94.35565185546875, 111.5339584350586, '<b><a href="/report/fcn.00599555@140d3779c34998b2115004c062b02ca8">fcn.00599555</a><br>@140d3779c34998b2115004c062b02ca8</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>mov ecx, dword[ebp+8]<br>push ebx<br>push esi<br>push edi<br>mov esi, dword[ecx+0x10]<br>mov eax, dword[ecx+8]<br>xor ebx, ebx<br>test eax, eax<br>jl 0x599570<br>shl eax, 1<br>inc ebx<br>jmp 0x599567<br>mov eax, ebx<br>push 0x3f<br>imul eax, eax, 0x204<br>pop edx<br>lea eax, [eax+esi+0x144]<br>mov dword[ebp-4], eax<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x599585<br>mov edi, ebx<br>push 4<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x1000<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x5995b8<br>or eax, 0xffffffff<br>jmp 0x59964b<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>ja 0x5995fe<br>lea eax, [edi+0x10]<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea ecx, [eax+0xffc]<br>mov dword[eax-4], 0xff0<br>mov dword[eax], ecx<br>lea ecx, [eax-0x1004]<br>mov dword[eax+4], ecx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>lea ecx, [eax-0x10]<br>cmp ecx, edx<br>jbe 0x5995c5<br>mov eax, dword[ebp-4]<br>lea ecx, [edi+0xc]<br>add eax, 0x1f8<br>push 1<br>pop edi<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x59963b<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[96.46524047851562, -145.373046875, '<b><a href="/report/fcn.0040661c@e38ba004520fa1a86a35b63e8d5843ef">fcn.0040661c</a><br>@e38ba004520fa1a86a35b63e8d5843ef</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>push ecx<br>mov ecx, dword[ebp+8]<br>mov eax, dword[ecx+8]<br>push ebx<br>push esi<br>mov esi, dword[ecx+0x10]<br>push edi<br>xor ebx, ebx<br>jmp 0x406634<br>add eax, eax<br>inc ebx<br>test eax, eax<br>jge 0x406631<br>mov eax, ebx<br>imul eax, eax, 0x204<br>lea eax, [eax+esi+0x144]<br>push 0x3f<br>mov dword[ebp-8], eax<br>pop edx<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x40664d<br>push 4<br>mov edi, ebx<br>push 0x1000<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x406680<br>or eax, 0xffffffff<br>jmp 0x40671d<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>mov dword[ebp-4], edx<br>ja 0x4066d0<br>mov ecx, edx<br>sub ecx, edi<br>shr ecx, 0xc<br>lea eax, [edi+0x10]<br>inc ecx<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea edx, [eax+0xffc]<br>mov dword[eax], edx<br>lea edx, [eax-0x1004]<br>mov dword[eax-4], 0xff0<br>mov dword[eax+4], edx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>dec ecx<br>jne 0x406698<br>mov edx, dword[ebp-4]<br>mov eax, dword[ebp-8]<br>add eax, 0x1f8<br>lea ecx, [edi+0xc]<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>xor edi, edi<br>inc edi<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x40670d<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[-102.02188110351562, 106.64697265625, '<b><a href="/report/fcn.00520545@da37d90419c1292c0f16cbfd1f66402d">fcn.00520545</a><br>@da37d90419c1292c0f16cbfd1f66402d</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>mov ecx, dword[ebp+8]<br>push ebx<br>push esi<br>push edi<br>mov esi, dword[ecx+0x10]<br>mov eax, dword[ecx+8]<br>xor ebx, ebx<br>test eax, eax<br>jl 0x520560<br>shl eax, 1<br>inc ebx<br>jmp 0x520557<br>mov eax, ebx<br>push 0x3f<br>imul eax, eax, 0x204<br>pop edx<br>lea eax, [eax+esi+0x144]<br>mov dword[ebp-4], eax<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x520575<br>mov edi, ebx<br>push 4<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x1000<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x5205a8<br>or eax, 0xffffffff<br>jmp 0x52063b<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>ja 0x5205ee<br>lea eax, [edi+0x10]<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea ecx, [eax+0xffc]<br>mov dword[eax-4], 0xff0<br>mov dword[eax], ecx<br>lea ecx, [eax-0x1004]<br>mov dword[eax+4], ecx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>lea ecx, [eax-0x10]<br>cmp ecx, edx<br>jbe 0x5205b5<br>mov eax, dword[ebp-4]<br>lea ecx, [edi+0xc]<br>add eax, 0x1f8<br>push 1<br>pop edi<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x52062b<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[91.46295928955078, -149.5839080810547, '<b><a href="/report/fcn.0040f3b6@59aef7c08025d70f84c85db2092fc99e">fcn.0040f3b6</a><br>@59aef7c08025d70f84c85db2092fc99e</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>push ecx<br>mov ecx, dword[ebp+8]<br>mov eax, dword[ecx+8]<br>push ebx<br>push esi<br>mov esi, dword[ecx+0x10]<br>push edi<br>xor ebx, ebx<br>jmp 0x40f3ce<br>shl eax, 1<br>inc ebx<br>test eax, eax<br>jge 0x40f3cb<br>mov eax, ebx<br>imul eax, eax, 0x204<br>lea eax, [eax+esi+0x144]<br>push 0x3f<br>mov dword[ebp-8], eax<br>pop edx<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x40f3e7<br>push 4<br>mov edi, ebx<br>push 0x1000<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x40f41a<br>or eax, 0xffffffff<br>jmp 0x40f4b7<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>mov dword[ebp-4], edx<br>ja 0x40f46a<br>mov ecx, edx<br>sub ecx, edi<br>shr ecx, 0xc<br>lea eax, [edi+0x10]<br>inc ecx<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea edx, [eax+0xffc]<br>mov dword[eax], edx<br>lea edx, [eax-0x1004]<br>mov dword[eax-4], 0xff0<br>mov dword[eax+4], edx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>dec ecx<br>jne 0x40f432<br>mov edx, dword[ebp-4]<br>mov eax, dword[ebp-8]<br>add eax, 0x1f8<br>lea ecx, [edi+0xc]<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>xor edi, edi<br>inc edi<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x40f4a7<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[115.7779541015625, -169.6842498779297, '<b><a href="/report/fcn.004841e1@289859175c221b107317af7727d26c17">fcn.004841e1</a><br>@289859175c221b107317af7727d26c17</b><br>mov edi, edi<br>push ebp<br>mov ebp, esp<br>push ecx<br>push ecx<br>mov ecx, dword[ebp+8]<br>mov eax, dword[ecx+8]<br>push ebx<br>push esi<br>mov esi, dword[ecx+0x10]<br>push edi<br>xor ebx, ebx<br>jmp 0x4841fb<br>add eax, eax<br>inc ebx<br>test eax, eax<br>jge 0x4841f8<br>mov eax, ebx<br>imul eax, eax, 0x204<br>lea eax, [eax+esi+0x144]<br>push 0x3f<br>mov dword[ebp-8], eax<br>pop edx<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x484214<br>push 4<br>mov edi, ebx<br>push 0x1000<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x484247<br>or eax, 0xffffffff<br>jmp 0x4842e4<br>lea edx, [edi+0x7000]<br>mov dword[ebp-4], edx<br>cmp edi, edx<br>ja 0x484297<br>mov ecx, edx<br>sub ecx, edi<br>shr ecx, 0xc<br>lea eax, [edi+0x10]<br>inc ecx<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea edx, [eax+0xffc]<br>mov dword[eax], edx<br>lea edx, [eax-0x1004]<br>mov dword[eax-4], 0xff0<br>mov dword[eax+4], edx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>dec ecx<br>jne 0x48425f<br>mov edx, dword[ebp-4]<br>mov eax, dword[ebp-8]<br>add eax, 0x1f8<br>lea ecx, [edi+0xc]<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>xor edi, edi<br>inc edi<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x4842d4<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[-73.8505630493164, 116.40576171875, '<b><a href="/report/fcn.00403855@7dd153bad1771b9e8d5266a341ebf949">fcn.00403855</a><br>@7dd153bad1771b9e8d5266a341ebf949</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>mov ecx, dword[ebp+8]<br>push ebx<br>push esi<br>push edi<br>mov esi, dword[ecx+0x10]<br>mov eax, dword[ecx+8]<br>xor ebx, ebx<br>test eax, eax<br>jl 0x403870<br>shl eax, 1<br>inc ebx<br>jmp 0x403867<br>mov eax, ebx<br>push 0x3f<br>imul eax, eax, 0x204<br>pop edx<br>lea eax, [eax+esi+0x144]<br>mov dword[ebp-4], eax<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x403885<br>mov edi, ebx<br>push 4<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x1000<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x4038b8<br>or eax, 0xffffffff<br>jmp 0x40394b<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>ja 0x4038fe<br>lea eax, [edi+0x10]<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea ecx, [eax+0xffc]<br>mov dword[eax-4], 0xff0<br>mov dword[eax], ecx<br>lea ecx, [eax-0x1004]<br>mov dword[eax+4], ecx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>lea ecx, [eax-0x10]<br>cmp ecx, edx<br>jbe 0x4038c5<br>mov eax, dword[ebp-4]<br>lea ecx, [edi+0xc]<br>add eax, 0x1f8<br>push 1<br>pop edi<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x40393b<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[-80.12245178222656, 103.72738647460938, '<b><a href="/report/fcn.005d3ee5@36725a4ae161c6e8a09f5f34ebd6f2e0">fcn.005d3ee5</a><br>@36725a4ae161c6e8a09f5f34ebd6f2e0</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>mov ecx, dword[ebp+8]<br>push ebx<br>push esi<br>push edi<br>mov esi, dword[ecx+0x10]<br>mov eax, dword[ecx+8]<br>xor ebx, ebx<br>test eax, eax<br>jl 0x5d3f00<br>shl eax, 1<br>inc ebx<br>jmp 0x5d3ef7<br>mov eax, ebx<br>push 0x3f<br>imul eax, eax, 0x204<br>pop edx<br>lea eax, [eax+esi+0x144]<br>mov dword[ebp-4], eax<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x5d3f15<br>mov edi, ebx<br>push 4<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x1000<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x5d3f48<br>or eax, 0xffffffff<br>jmp 0x5d3fdb<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>ja 0x5d3f8e<br>lea eax, [edi+0x10]<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea ecx, [eax+0xffc]<br>mov dword[eax-4], 0xff0<br>mov dword[eax], ecx<br>lea ecx, [eax-0x1004]<br>mov dword[eax+4], ecx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>lea ecx, [eax-0x10]<br>cmp ecx, edx<br>jbe 0x5d3f55<br>mov eax, dword[ebp-4]<br>lea ecx, [edi+0xc]<br>add eax, 0x1f8<br>push 1<br>pop edi<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x5d3fcb<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[-73.93663787841797, 124.76351165771484, '<b><a href="/report/fcn.004038a5@faca7110288761a0f664158c1f6c3986">fcn.004038a5</a><br>@faca7110288761a0f664158c1f6c3986</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>mov ecx, dword[ebp+8]<br>push ebx<br>push esi<br>push edi<br>mov esi, dword[ecx+0x10]<br>mov eax, dword[ecx+8]<br>xor ebx, ebx<br>test eax, eax<br>jl 0x4038c0<br>shl eax, 1<br>inc ebx<br>jmp 0x4038b7<br>mov eax, ebx<br>push 0x3f<br>imul eax, eax, 0x204<br>pop edx<br>lea eax, [eax+esi+0x144]<br>mov dword[ebp-4], eax<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x4038d5<br>mov edi, ebx<br>push 4<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x1000<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x403908<br>or eax, 0xffffffff<br>jmp 0x40399b<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>ja 0x40394e<br>lea eax, [edi+0x10]<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea ecx, [eax+0xffc]<br>mov dword[eax-4], 0xff0<br>mov dword[eax], ecx<br>lea ecx, [eax-0x1004]<br>mov dword[eax+4], ecx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>lea ecx, [eax-0x10]<br>cmp ecx, edx<br>jbe 0x403915<br>mov eax, dword[ebp-4]<br>lea ecx, [edi+0xc]<br>add eax, 0x1f8<br>push 1<br>pop edi<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x40398b<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[92.64616394042969, -155.89779663085938, '<b><a href="/report/fcn.0043b156@7b00dd8f2abf54a73bfb09681334ff78">fcn.0043b156</a><br>@7b00dd8f2abf54a73bfb09681334ff78</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>push ecx<br>mov ecx, dword[ebp+8]<br>mov eax, dword[ecx+8]<br>push ebx<br>push esi<br>mov esi, dword[ecx+0x10]<br>push edi<br>xor ebx, ebx<br>jmp 0x43b16e<br>add eax, eax<br>inc ebx<br>test eax, eax<br>jge 0x43b16b<br>mov eax, ebx<br>imul eax, eax, 0x204<br>lea eax, [eax+esi+0x144]<br>push 0x3f<br>mov dword[ebp-8], eax<br>pop edx<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x43b187<br>push 4<br>mov edi, ebx<br>push 0x1000<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x43b1ba<br>or eax, 0xffffffff<br>jmp 0x43b257<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>mov dword[ebp-4], edx<br>ja 0x43b20a<br>mov ecx, edx<br>sub ecx, edi<br>shr ecx, 0xc<br>lea eax, [edi+0x10]<br>inc ecx<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea edx, [eax+0xffc]<br>mov dword[eax], edx<br>lea edx, [eax-0x1004]<br>mov dword[eax-4], 0xff0<br>mov dword[eax+4], edx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>dec ecx<br>jne 0x43b1d2<br>mov edx, dword[ebp-4]<br>mov eax, dword[ebp-8]<br>add eax, 0x1f8<br>lea ecx, [edi+0xc]<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>xor edi, edi<br>inc edi<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x43b247<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[-94.77255249023438, 119.3017349243164, '<b><a href="/report/fcn.005ae9d5@4e8d6f73c8261716f687f8d06429ef4d">fcn.005ae9d5</a><br>@4e8d6f73c8261716f687f8d06429ef4d</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>mov ecx, dword[ebp+8]<br>push ebx<br>push esi<br>push edi<br>mov esi, dword[ecx+0x10]<br>mov eax, dword[ecx+8]<br>xor ebx, ebx<br>test eax, eax<br>jl 0x5ae9f0<br>shl eax, 1<br>inc ebx<br>jmp 0x5ae9e7<br>mov eax, ebx<br>push 0x3f<br>imul eax, eax, 0x204<br>pop edx<br>lea eax, [eax+esi+0x144]<br>mov dword[ebp-4], eax<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x5aea05<br>mov edi, ebx<br>push 4<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x1000<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x5aea38<br>or eax, 0xffffffff<br>jmp 0x5aeacb<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>ja 0x5aea7e<br>lea eax, [edi+0x10]<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea ecx, [eax+0xffc]<br>mov dword[eax-4], 0xff0<br>mov dword[eax], ecx<br>lea ecx, [eax-0x1004]<br>mov dword[eax+4], ecx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>lea ecx, [eax-0x10]<br>cmp ecx, edx<br>jbe 0x5aea45<br>mov eax, dword[ebp-4]<br>lea ecx, [edi+0xc]<br>add eax, 0x1f8<br>push 1<br>pop edi<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x5aeabb<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[-87.2032699584961, 99.22818756103516, '<b><a href="/report/fcn.00403855@cbc200f66cbffbddf5df52f7c0da283a">fcn.00403855</a><br>@cbc200f66cbffbddf5df52f7c0da283a</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>mov ecx, dword[ebp+8]<br>push ebx<br>push esi<br>push edi<br>mov esi, dword[ecx+0x10]<br>mov eax, dword[ecx+8]<br>xor ebx, ebx<br>test eax, eax<br>jl 0x403870<br>shl eax, 1<br>inc ebx<br>jmp 0x403867<br>mov eax, ebx<br>push 0x3f<br>imul eax, eax, 0x204<br>pop edx<br>lea eax, [eax+esi+0x144]<br>mov dword[ebp-4], eax<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x403885<br>mov edi, ebx<br>push 4<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x1000<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x4038b8<br>or eax, 0xffffffff<br>jmp 0x40394b<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>ja 0x4038fe<br>lea eax, [edi+0x10]<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea ecx, [eax+0xffc]<br>mov dword[eax-4], 0xff0<br>mov dword[eax], ecx<br>lea ecx, [eax-0x1004]<br>mov dword[eax+4], ecx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>lea ecx, [eax-0x10]<br>cmp ecx, edx<br>jbe 0x4038c5<br>mov eax, dword[ebp-4]<br>lea ecx, [edi+0xc]<br>add eax, 0x1f8<br>push 1<br>pop edi<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x40393b<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[-96.08806610107422, 127.7184829711914, '<b><a href="/report/fcn.00403855@96146d48f33d2b81d37cf455f4bd8c4b">fcn.00403855</a><br>@96146d48f33d2b81d37cf455f4bd8c4b</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>mov ecx, dword[ebp+8]<br>push ebx<br>push esi<br>push edi<br>mov esi, dword[ecx+0x10]<br>mov eax, dword[ecx+8]<br>xor ebx, ebx<br>test eax, eax<br>jl 0x403870<br>shl eax, 1<br>inc ebx<br>jmp 0x403867<br>mov eax, ebx<br>push 0x3f<br>imul eax, eax, 0x204<br>pop edx<br>lea eax, [eax+esi+0x144]<br>mov dword[ebp-4], eax<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x403885<br>mov edi, ebx<br>push 4<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x1000<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x4038b8<br>or eax, 0xffffffff<br>jmp 0x40394b<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>ja 0x4038fe<br>lea eax, [edi+0x10]<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea ecx, [eax+0xffc]<br>mov dword[eax-4], 0xff0<br>mov dword[eax], ecx<br>lea ecx, [eax-0x1004]<br>mov dword[eax+4], ecx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>lea ecx, [eax-0x10]<br>cmp ecx, edx<br>jbe 0x4038c5<br>mov eax, dword[ebp-4]<br>lea ecx, [edi+0xc]<br>add eax, 0x1f8<br>push 1<br>pop edi<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x40393b<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[-101.95807647705078, 114.90872192382812, '<b><a href="/report/fcn.005d3ee5@4179b381a87b74dcd140154f9010ef86">fcn.005d3ee5</a><br>@4179b381a87b74dcd140154f9010ef86</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>mov ecx, dword[ebp+8]<br>push ebx<br>push esi<br>push edi<br>mov esi, dword[ecx+0x10]<br>mov eax, dword[ecx+8]<br>xor ebx, ebx<br>test eax, eax<br>jl 0x5d3f00<br>shl eax, 1<br>inc ebx<br>jmp 0x5d3ef7<br>mov eax, ebx<br>push 0x3f<br>imul eax, eax, 0x204<br>pop edx<br>lea eax, [eax+esi+0x144]<br>mov dword[ebp-4], eax<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x5d3f15<br>mov edi, ebx<br>push 4<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x1000<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x5d3f48<br>or eax, 0xffffffff<br>jmp 0x5d3fdb<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>ja 0x5d3f8e<br>lea eax, [edi+0x10]<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea ecx, [eax+0xffc]<br>mov dword[eax-4], 0xff0<br>mov dword[eax], ecx<br>lea ecx, [eax-0x1004]<br>mov dword[eax+4], ecx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>lea ecx, [eax-0x10]<br>cmp ecx, edx<br>jbe 0x5d3f55<br>mov eax, dword[ebp-4]<br>lea ecx, [edi+0xc]<br>add eax, 0x1f8<br>push 1<br>pop edi<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x5d3fcb<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[109.94615936279297, -169.3402862548828, '<b><a href="/report/fcn.0043370e@9964b63070116cfb2469e51850178af1">fcn.0043370e</a><br>@9964b63070116cfb2469e51850178af1</b><br>mov edi, edi<br>push ebp<br>mov ebp, esp<br>push ecx<br>push ecx<br>mov ecx, dword[ebp+8]<br>mov eax, dword[ecx+8]<br>push ebx<br>push esi<br>mov esi, dword[ecx+0x10]<br>push edi<br>xor ebx, ebx<br>jmp 0x433728<br>add eax, eax<br>inc ebx<br>test eax, eax<br>jge 0x433725<br>mov eax, ebx<br>imul eax, eax, 0x204<br>lea eax, [eax+esi+0x144]<br>push 0x3f<br>mov dword[ebp-8], eax<br>pop edx<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x433741<br>push 4<br>mov edi, ebx<br>push 0x1000<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x433774<br>or eax, 0xffffffff<br>jmp 0x433811<br>lea edx, [edi+0x7000]<br>mov dword[ebp-4], edx<br>cmp edi, edx<br>ja 0x4337c4<br>mov ecx, edx<br>sub ecx, edi<br>shr ecx, 0xc<br>lea eax, [edi+0x10]<br>inc ecx<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea edx, [eax+0xffc]<br>mov dword[eax], edx<br>lea edx, [eax-0x1004]<br>mov dword[eax-4], 0xff0<br>mov dword[eax+4], edx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>dec ecx<br>jne 0x43378c<br>mov edx, dword[ebp-4]<br>mov eax, dword[ebp-8]<br>add eax, 0x1f8<br>lea ecx, [edi+0xc]<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>xor edi, edi<br>inc edi<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x433801<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[115.28363037109375, -160.04222106933594, '<b><a href="/report/fcn.004a43f2@279a61b1e76da49531f1f16fd1102a2d">fcn.004a43f2</a><br>@279a61b1e76da49531f1f16fd1102a2d</b><br>mov edi, edi<br>push ebp<br>mov ebp, esp<br>push ecx<br>push ecx<br>mov ecx, dword[ebp+8]<br>mov eax, dword[ecx+8]<br>push ebx<br>push esi<br>mov esi, dword[ecx+0x10]<br>push edi<br>xor ebx, ebx<br>jmp 0x4a440c<br>add eax, eax<br>inc ebx<br>test eax, eax<br>jge 0x4a4409<br>mov eax, ebx<br>imul eax, eax, 0x204<br>lea eax, [eax+esi+0x144]<br>push 0x3f<br>mov dword[ebp-8], eax<br>pop edx<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x4a4425<br>push 4<br>mov edi, ebx<br>push 0x1000<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x4a4458<br>or eax, 0xffffffff<br>jmp 0x4a44f5<br>lea edx, [edi+0x7000]<br>mov dword[ebp-4], edx<br>cmp edi, edx<br>ja 0x4a44a8<br>mov ecx, edx<br>sub ecx, edi<br>shr ecx, 0xc<br>lea eax, [edi+0x10]<br>inc ecx<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea edx, [eax+0xffc]<br>mov dword[eax], edx<br>lea edx, [eax-0x1004]<br>mov dword[eax-4], 0xff0<br>mov dword[eax+4], edx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>dec ecx<br>jne 0x4a4470<br>mov edx, dword[ebp-4]<br>mov eax, dword[ebp-8]<br>add eax, 0x1f8<br>lea ecx, [edi+0xc]<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>xor edi, edi<br>inc edi<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x4a44e5<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[-89.10762023925781, 132.38803100585938, '<b><a href="/report/fcn.00403855@48bb9a03c360009e9463dfd5be4e0ca0">fcn.00403855</a><br>@48bb9a03c360009e9463dfd5be4e0ca0</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>mov ecx, dword[ebp+8]<br>push ebx<br>push esi<br>push edi<br>mov esi, dword[ecx+0x10]<br>mov eax, dword[ecx+8]<br>xor ebx, ebx<br>test eax, eax<br>jl 0x403870<br>shl eax, 1<br>inc ebx<br>jmp 0x403867<br>mov eax, ebx<br>push 0x3f<br>imul eax, eax, 0x204<br>pop edx<br>lea eax, [eax+esi+0x144]<br>mov dword[ebp-4], eax<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x403885<br>mov edi, ebx<br>push 4<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x1000<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x4038b8<br>or eax, 0xffffffff<br>jmp 0x40394b<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>ja 0x4038fe<br>lea eax, [edi+0x10]<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea ecx, [eax+0xffc]<br>mov dword[eax-4], 0xff0<br>mov dword[eax], ecx<br>lea ecx, [eax-0x1004]<br>mov dword[eax+4], ecx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>lea ecx, [eax-0x10]<br>cmp ecx, edx<br>jbe 0x4038c5<br>mov eax, dword[ebp-4]<br>lea ecx, [edi+0xc]<br>add eax, 0x1f8<br>push 1<br>pop edi<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x40393b<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[-88.35792541503906, 123.73426818847656, '<b><a href="/report/fcn.00403855@8912a6bd1add3d8b86feb51a00252709">fcn.00403855</a><br>@8912a6bd1add3d8b86feb51a00252709</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>mov ecx, dword[ebp+8]<br>push ebx<br>push esi<br>push edi<br>mov esi, dword[ecx+0x10]<br>mov eax, dword[ecx+8]<br>xor ebx, ebx<br>test eax, eax<br>jl 0x403870<br>shl eax, 1<br>inc ebx<br>jmp 0x403867<br>mov eax, ebx<br>push 0x3f<br>imul eax, eax, 0x204<br>pop edx<br>lea eax, [eax+esi+0x144]<br>mov dword[ebp-4], eax<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x403885<br>mov edi, ebx<br>push 4<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x1000<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x4038b8<br>or eax, 0xffffffff<br>jmp 0x40394b<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>ja 0x4038fe<br>lea eax, [edi+0x10]<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea ecx, [eax+0xffc]<br>mov dword[eax-4], 0xff0<br>mov dword[eax], ecx<br>lea ecx, [eax-0x1004]<br>mov dword[eax+4], ecx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>lea ecx, [eax-0x10]<br>cmp ecx, edx<br>jbe 0x4038c5<br>mov eax, dword[ebp-4]<br>lea ecx, [edi+0xc]<br>add eax, 0x1f8<br>push 1<br>pop edi<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x40393b<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[86.69023895263672, -153.86050415039062, '<b><a href="/report/fcn.0043be3c@46f6c2adf1fd4d1453ed312ca79dd9bf">fcn.0043be3c</a><br>@46f6c2adf1fd4d1453ed312ca79dd9bf</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>push ecx<br>mov ecx, dword[ebp+8]<br>mov eax, dword[ecx+8]<br>push ebx<br>push esi<br>mov esi, dword[ecx+0x10]<br>push edi<br>xor ebx, ebx<br>jmp 0x43be54<br>add eax, eax<br>inc ebx<br>test eax, eax<br>jge 0x43be51<br>mov eax, ebx<br>imul eax, eax, 0x204<br>lea eax, [eax+esi+0x144]<br>push 0x3f<br>mov dword[ebp-8], eax<br>pop edx<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x43be6d<br>push 4<br>mov edi, ebx<br>push 0x1000<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x43bea0<br>or eax, 0xffffffff<br>jmp 0x43bf3d<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>mov dword[ebp-4], edx<br>ja 0x43bef0<br>mov ecx, edx<br>sub ecx, edi<br>shr ecx, 0xc<br>lea eax, [edi+0x10]<br>inc ecx<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea edx, [eax+0xffc]<br>mov dword[eax], edx<br>lea edx, [eax-0x1004]<br>mov dword[eax-4], 0xff0<br>mov dword[eax+4], edx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>dec ecx<br>jne 0x43beb8<br>mov edx, dword[ebp-4]<br>mov eax, dword[ebp-8]<br>add eax, 0x1f8<br>lea ecx, [edi+0xc]<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>xor edi, edi<br>inc edi<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x43bf2d<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[-81.40283966064453, 128.6852264404297, '<b><a href="/report/fcn.004f8675@ef3a0211d1ddb224667e2aa0d915337b">fcn.004f8675</a><br>@ef3a0211d1ddb224667e2aa0d915337b</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>mov ecx, dword[ebp+8]<br>push ebx<br>push esi<br>push edi<br>mov esi, dword[ecx+0x10]<br>mov eax, dword[ecx+8]<br>xor ebx, ebx<br>test eax, eax<br>jl 0x4f8690<br>shl eax, 1<br>inc ebx<br>jmp 0x4f8687<br>mov eax, ebx<br>push 0x3f<br>imul eax, eax, 0x204<br>pop edx<br>lea eax, [eax+esi+0x144]<br>mov dword[ebp-4], eax<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x4f86a5<br>mov edi, ebx<br>push 4<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x1000<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x4f86d8<br>or eax, 0xffffffff<br>jmp 0x4f876b<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>ja 0x4f871e<br>lea eax, [edi+0x10]<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea ecx, [eax+0xffc]<br>mov dword[eax-4], 0xff0<br>mov dword[eax], ecx<br>lea ecx, [eax-0x1004]<br>mov dword[eax+4], ecx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>lea ecx, [eax-0x10]<br>cmp ecx, edx<br>jbe 0x4f86e5<br>mov eax, dword[ebp-4]<br>lea ecx, [edi+0xc]<br>add eax, 0x1f8<br>push 1<br>pop edi<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x4f875b<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[-81.08062744140625, 112.06458282470703, '<b><a href="/report/fcn.004ab50b@3e981d1767f44f5fe2446a49ffe52f4e">fcn.004ab50b</a><br>@3e981d1767f44f5fe2446a49ffe52f4e</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>mov ecx, dword[ebp+8]<br>push ebx<br>push esi<br>push edi<br>mov esi, dword[ecx+0x10]<br>mov eax, dword[ecx+8]<br>xor ebx, ebx<br>test eax, eax<br>jl 0x4ab526<br>shl eax, 1<br>inc ebx<br>jmp 0x4ab51d<br>mov eax, ebx<br>push 0x3f<br>imul eax, eax, 0x204<br>pop edx<br>lea eax, [eax+esi+0x144]<br>mov dword[ebp-4], eax<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x4ab53b<br>mov edi, ebx<br>push 4<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x1000<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x4ab56e<br>or eax, 0xffffffff<br>jmp 0x4ab601<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>ja 0x4ab5b4<br>lea eax, [edi+0x10]<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea ecx, [eax+0xffc]<br>mov dword[eax-4], 0xff0<br>mov dword[eax], ecx<br>lea ecx, [eax-0x1004]<br>mov dword[eax+4], ecx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>lea ecx, [eax-0x10]<br>cmp ecx, edx<br>jbe 0x4ab57b<br>mov eax, dword[ebp-4]<br>lea ecx, [edi+0xc]<br>add eax, 0x1f8<br>push 1<br>pop edi<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x4ab5f1<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[90.39448547363281, -143.20655822753906, '<b><a href="/report/fcn.459c3379@284c9c9722cef7520dddfe58806fd72f">fcn.459c3379</a><br>@284c9c9722cef7520dddfe58806fd72f</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>push ecx<br>mov ecx, dword[ebp+8]<br>mov eax, dword[ecx+8]<br>push ebx<br>push esi<br>mov esi, dword[ecx+0x10]<br>push edi<br>xor ebx, ebx<br>jmp 0x459c3391<br>add eax, eax<br>inc ebx<br>test eax, eax<br>jge 0x459c338e<br>mov eax, ebx<br>imul eax, eax, 0x204<br>lea eax, [eax+esi+0x144]<br>push 0x3f<br>mov dword[ebp-8], eax<br>pop edx<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x459c33aa<br>push 4<br>mov edi, ebx<br>push 0x1000<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x459c33dd<br>or eax, 0xffffffff<br>jmp 0x459c347a<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>mov dword[ebp-4], edx<br>ja 0x459c342d<br>mov ecx, edx<br>sub ecx, edi<br>shr ecx, 0xc<br>lea eax, [edi+0x10]<br>inc ecx<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea edx, [eax+0xffc]<br>mov dword[eax], edx<br>lea edx, [eax-0x1004]<br>mov dword[eax-4], 0xff0<br>mov dword[eax+4], edx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>dec ecx<br>jne 0x459c33f5<br>mov edx, dword[ebp-4]<br>mov eax, dword[ebp-8]<br>add eax, 0x1f8<br>lea ecx, [edi+0xc]<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>xor edi, edi<br>inc edi<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x459c346a<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[97.47938537597656, -151.6800537109375, '<b><a href="/report/fcn.00413051@6c5b0418e4a4c57d99cda47d2717045d">fcn.00413051</a><br>@6c5b0418e4a4c57d99cda47d2717045d</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>push ecx<br>mov ecx, dword[ebp+8]<br>mov eax, dword[ecx+8]<br>push ebx<br>push esi<br>mov esi, dword[ecx+0x10]<br>push edi<br>xor ebx, ebx<br>jmp 0x413069<br>add eax, eax<br>inc ebx<br>test eax, eax<br>jge 0x413066<br>mov eax, ebx<br>imul eax, eax, 0x204<br>lea eax, [eax+esi+0x144]<br>push 0x3f<br>mov dword[ebp-8], eax<br>pop edx<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x413082<br>push 4<br>mov edi, ebx<br>push 0x1000<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x4130b5<br>or eax, 0xffffffff<br>jmp 0x413152<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>mov dword[ebp-4], edx<br>ja 0x413105<br>mov ecx, edx<br>sub ecx, edi<br>shr ecx, 0xc<br>lea eax, [edi+0x10]<br>inc ecx<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea edx, [eax+0xffc]<br>mov dword[eax], edx<br>lea edx, [eax-0x1004]<br>mov dword[eax-4], 0xff0<br>mov dword[eax+4], edx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>dec ecx<br>jne 0x4130cd<br>mov edx, dword[ebp-4]<br>mov eax, dword[ebp-8]<br>add eax, 0x1f8<br>lea ecx, [edi+0xc]<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>xor edi, edi<br>inc edi<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x413142<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[-87.9065170288086, 115.8875503540039, '<b><a href="/report/fcn.004fff45@557dcbbf2711fedc520328fbbc657056">fcn.004fff45</a><br>@557dcbbf2711fedc520328fbbc657056</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>mov ecx, dword[ebp+8]<br>push ebx<br>push esi<br>push edi<br>mov esi, dword[ecx+0x10]<br>mov eax, dword[ecx+8]<br>xor ebx, ebx<br>test eax, eax<br>jl 0x4fff60<br>shl eax, 1<br>inc ebx<br>jmp 0x4fff57<br>mov eax, ebx<br>push 0x3f<br>imul eax, eax, 0x204<br>pop edx<br>lea eax, [eax+esi+0x144]<br>mov dword[ebp-4], eax<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x4fff75<br>mov edi, ebx<br>push 4<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x1000<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x4fffa8<br>or eax, 0xffffffff<br>jmp 0x50003b<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>ja 0x4fffee<br>lea eax, [edi+0x10]<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea ecx, [eax+0xffc]<br>mov dword[eax-4], 0xff0<br>mov dword[eax], ecx<br>lea ecx, [eax-0x1004]<br>mov dword[eax+4], ecx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>lea ecx, [eax-0x10]<br>cmp ecx, edx<br>jbe 0x4fffb5<br>mov eax, dword[ebp-4]<br>lea ecx, [edi+0xc]<br>add eax, 0x1f8<br>push 1<br>pop edi<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x50002b<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[111.09761047363281, -163.90768432617188, '<b><a href="/report/fcn.1010f93d@89dc67d2f980e8488f97b1bf8cb24258">fcn.1010f93d</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>mov edi, edi<br>push ebp<br>mov ebp, esp<br>push ecx<br>push ecx<br>mov ecx, dword[ebp+8]<br>mov eax, dword[ecx+8]<br>push ebx<br>push esi<br>mov esi, dword[ecx+0x10]<br>push edi<br>xor ebx, ebx<br>jmp 0x1010f957<br>add eax, eax<br>inc ebx<br>test eax, eax<br>jge 0x1010f954<br>mov eax, ebx<br>imul eax, eax, 0x204<br>lea eax, [eax+esi+0x144]<br>push 0x3f<br>mov dword[ebp-8], eax<br>pop edx<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x1010f970<br>push 4<br>mov edi, ebx<br>push 0x1000<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x1010f9a3<br>or eax, 0xffffffff<br>jmp 0x1010fa40<br>lea edx, [edi+0x7000]<br>mov dword[ebp-4], edx<br>cmp edi, edx<br>ja 0x1010f9f3<br>mov ecx, edx<br>sub ecx, edi<br>shr ecx, 0xc<br>lea eax, [edi+0x10]<br>inc ecx<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea edx, [eax+0xffc]<br>mov dword[eax], edx<br>lea edx, [eax-0x1004]<br>mov dword[eax-4], 0xff0<br>mov dword[eax+4], edx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>dec ecx<br>jne 0x1010f9bb<br>mov edx, dword[ebp-4]<br>mov eax, dword[ebp-8]<br>add eax, 0x1f8<br>lea ecx, [edi+0xc]<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>xor edi, edi<br>inc edi<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x1010fa30<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[-87.5299072265625, 108.06877899169922, '<b><a href="/report/fcn.00405bc1@d4e56c7d970c209a3a2b3c4b4cc5e586">fcn.00405bc1</a><br>@d4e56c7d970c209a3a2b3c4b4cc5e586</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>mov ecx, dword[ebp+8]<br>push ebx<br>push esi<br>push edi<br>mov esi, dword[ecx+0x10]<br>mov eax, dword[ecx+8]<br>xor ebx, ebx<br>test eax, eax<br>jl 0x405bdc<br>shl eax, 1<br>inc ebx<br>jmp 0x405bd3<br>mov eax, ebx<br>push 0x3f<br>imul eax, eax, 0x204<br>pop edx<br>lea eax, [eax+esi+0x144]<br>mov dword[ebp-4], eax<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x405bf1<br>mov edi, ebx<br>push 4<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x1000<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x405c24<br>or eax, 0xffffffff<br>jmp 0x405cb7<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>ja 0x405c6a<br>lea eax, [edi+0x10]<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea ecx, [eax+0xffc]<br>mov dword[eax-4], 0xff0<br>mov dword[eax], ecx<br>lea ecx, [eax-0x1004]<br>mov dword[eax+4], ecx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>lea ecx, [eax-0x10]<br>cmp ecx, edx<br>jbe 0x405c31<br>mov eax, dword[ebp-4]<br>lea ecx, [edi+0xc]<br>add eax, 0x1f8<br>push 1<br>pop edi<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x405ca7<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[-103.10118103027344, 122.99411010742188, '<b><a href="/report/fcn.0069f2a5@0fb0e1c162f9df68f5d89a2b2a71a217">fcn.0069f2a5</a><br>@0fb0e1c162f9df68f5d89a2b2a71a217</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>mov ecx, dword[ebp+8]<br>push ebx<br>push esi<br>push edi<br>mov esi, dword[ecx+0x10]<br>mov eax, dword[ecx+8]<br>xor ebx, ebx<br>test eax, eax<br>jl 0x69f2c0<br>shl eax, 1<br>inc ebx<br>jmp 0x69f2b7<br>mov eax, ebx<br>push 0x3f<br>imul eax, eax, 0x204<br>pop edx<br>lea eax, [eax+esi+0x144]<br>mov dword[ebp-4], eax<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x69f2d5<br>mov edi, ebx<br>push 4<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x1000<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x69f308<br>or eax, 0xffffffff<br>jmp 0x69f39b<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>ja 0x69f34e<br>lea eax, [edi+0x10]<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea ecx, [eax+0xffc]<br>mov dword[eax-4], 0xff0<br>mov dword[eax], ecx<br>lea ecx, [eax-0x1004]<br>mov dword[eax+4], ecx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>lea ecx, [eax-0x10]<br>cmp ecx, edx<br>jbe 0x69f315<br>mov eax, dword[ebp-4]<br>lea ecx, [edi+0xc]<br>add eax, 0x1f8<br>push 1<br>pop edi<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x69f38b<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[-81.48103332519531, 120.03941345214844, '<b><a href="/report/fcn.004f8675@a9a3c47f5c08fef0f0f69b66c17916ac">fcn.004f8675</a><br>@a9a3c47f5c08fef0f0f69b66c17916ac</b><br>push ebp<br>mov ebp, esp<br>push ecx<br>mov ecx, dword[ebp+8]<br>push ebx<br>push esi<br>push edi<br>mov esi, dword[ecx+0x10]<br>mov eax, dword[ecx+8]<br>xor ebx, ebx<br>test eax, eax<br>jl 0x4f8690<br>shl eax, 1<br>inc ebx<br>jmp 0x4f8687<br>mov eax, ebx<br>push 0x3f<br>imul eax, eax, 0x204<br>pop edx<br>lea eax, [eax+esi+0x144]<br>mov dword[ebp-4], eax<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x4f86a5<br>mov edi, ebx<br>push 4<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x1000<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x4f86d8<br>or eax, 0xffffffff<br>jmp 0x4f876b<br>lea edx, [edi+0x7000]<br>cmp edi, edx<br>ja 0x4f871e<br>lea eax, [edi+0x10]<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea ecx, [eax+0xffc]<br>mov dword[eax-4], 0xff0<br>mov dword[eax], ecx<br>lea ecx, [eax-0x1004]<br>mov dword[eax+4], ecx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>lea ecx, [eax-0x10]<br>cmp ecx, edx<br>jbe 0x4f86e5<br>mov eax, dword[ebp-4]<br>lea ecx, [edi+0xc]<br>add eax, 0x1f8<br>push 1<br>pop edi<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x4f875b<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],
[118.57671356201172, -164.82110595703125, '<b><a href="/report/fcn.100037a4@dc3e2cdf680078d293de3e2d92ba613c">fcn.100037a4</a><br>@dc3e2cdf680078d293de3e2d92ba613c</b><br>mov edi, edi<br>push ebp<br>mov ebp, esp<br>push ecx<br>push ecx<br>mov ecx, dword[ebp+8]<br>mov eax, dword[ecx+8]<br>push ebx<br>push esi<br>mov esi, dword[ecx+0x10]<br>push edi<br>xor ebx, ebx<br>jmp 0x100037be<br>add eax, eax<br>inc ebx<br>test eax, eax<br>jge 0x100037bb<br>mov eax, ebx<br>imul eax, eax, 0x204<br>lea eax, [eax+esi+0x144]<br>push 0x3f<br>mov dword[ebp-8], eax<br>pop edx<br>mov dword[eax+8], eax<br>mov dword[eax+4], eax<br>add eax, 8<br>dec edx<br>jne 0x100037d7<br>push 4<br>mov edi, ebx<br>push 0x1000<br>shl edi, 0xf<br>add edi, dword[ecx+0xc]<br>push 0x8000<br>push edi<br>call dword[sym.imp.KERNEL32.dll_VirtualAlloc]<br>test eax, eax<br>jne 0x1000380a<br>or eax, 0xffffffff<br>jmp 0x100038a7<br>lea edx, [edi+0x7000]<br>mov dword[ebp-4], edx<br>cmp edi, edx<br>ja 0x1000385a<br>mov ecx, edx<br>sub ecx, edi<br>shr ecx, 0xc<br>lea eax, [edi+0x10]<br>inc ecx<br>or dword[eax-8], 0xffffffff<br>or dword[eax+0xfec], 0xffffffff<br>lea edx, [eax+0xffc]<br>mov dword[eax], edx<br>lea edx, [eax-0x1004]<br>mov dword[eax-4], 0xff0<br>mov dword[eax+4], edx<br>mov dword[eax+0xfe8], 0xff0<br>add eax, 0x1000<br>dec ecx<br>jne 0x10003822<br>mov edx, dword[ebp-4]<br>mov eax, dword[ebp-8]<br>add eax, 0x1f8<br>lea ecx, [edi+0xc]<br>mov dword[eax+4], ecx<br>mov dword[ecx+8], eax<br>lea ecx, [edx+0xc]<br>mov dword[eax+8], ecx<br>mov dword[ecx+4], eax<br>and dword[esi+ebx*4+0x44], 0<br>xor edi, edi<br>inc edi<br>mov dword[esi+ebx*4+0xc4], edi<br>mov al, byte[esi+0x43]<br>mov cl, al<br>inc cl<br>test al, al<br>mov eax, dword[ebp+8]<br>mov byte[esi+0x43], cl<br>jne 0x10003897<br>or dword[eax+4], edi<br>mov edx, 0x80000000<br>mov ecx, ebx<br>shr edx, cl<br>not edx<br>and dword[eax+8], edx<br>mov eax, ebx<br>pop edi<br>pop esi<br>pop ebx<br>leave <br>ret <br><eoc> ', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
push ecx
mov ecx, dword[ebp+8]
push ebx
push esi
push edi
mov esi, dword[ecx+0x10]
mov eax, dword[ecx+8]
xor ebx, ebx
test eax, eax
jl 0x65ba80
shl eax, 1
inc ebx
jmp 0x65ba77
mov eax, ebx
push 0x3f
imul eax, eax, 0x204
pop edx
lea eax, [eax+esi+0x144]
mov dword[ebp-4], eax
mov dword[eax+8], eax
mov dword[eax+4], eax
add eax, 8
dec edx
jne 0x65ba95
mov edi, ebx
push 4
shl edi, 0xf
add edi, dword[ecx+0xc]
push 0x1000
push 0x8000
push edi
call dword[sym.imp.KERNEL32.dll_VirtualAlloc]
test eax, eax
jne 0x65bac8
or eax, 0xffffffff
jmp 0x65bb5b
lea edx, [edi+0x7000]
cmp edi, edx
ja 0x65bb0e
lea eax, [edi+0x10]
or dword[eax-8], 0xffffffff
or dword[eax+0xfec], 0xffffffff
lea ecx, [eax+0xffc]
mov dword[eax-4], 0xff0
mov dword[eax], ecx
lea ecx, [eax-0x1004]
mov dword[eax+4], ecx
mov dword[eax+0xfe8], 0xff0
add eax, 0x1000
lea ecx, [eax-0x10]
cmp ecx, edx
jbe 0x65bad5
mov eax, dword[ebp-4]
lea ecx, [edi+0xc]
add eax, 0x1f8
push 1
pop edi
mov dword[eax+4], ecx
mov dword[ecx+8], eax
lea ecx, [edx+0xc]
mov dword[eax+8], ecx
mov dword[ecx+4], eax
and dword[esi+ebx*4+0x44], 0
mov dword[esi+ebx*4+0xc4], edi
mov al, byte[esi+0x43]
mov cl, al
inc cl
test al, al
mov eax, dword[ebp+8]
mov byte[esi+0x43], cl
jne 0x65bb4b
or dword[eax+4], edi
mov edx, 0x80000000
mov ecx, ebx
shr edx, cl
not edx
and dword[eax+8], edx
mov eax, ebx
pop edi
pop esi
pop ebx
leave
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/bcba729302fe28f65deb2b102a06324a