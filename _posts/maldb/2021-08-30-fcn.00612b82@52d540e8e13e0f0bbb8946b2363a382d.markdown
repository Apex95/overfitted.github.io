---
layout: post
title:  "fcn.00612b82 @ 52d540e8e13e0f0bbb8946b2363a382d"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00612b82
- **Origin (md5):** 52d540e8e13e0f0bbb8946b2363a382d
- **VirusTotal:** [virustotal.com/gui/file/52d540e8e13e0f0bbb8946b2363a382d][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [171.01385498046875, -85.83292388916016, '<b><a href="/report/fcn.00612b82@52d540e8e13e0f0bbb8946b2363a382d">fcn.00612b82</a><br>@52d540e8e13e0f0bbb8946b2363a382d</b><br>', 'point { fill-color: #e0440e; }'],
[-190.53367614746094, 133.3495635986328, '<b><a href="/report/fcn.0040db80@fca52b995e756cff97168f6fef94b37d">fcn.0040db80</a><br>@fca52b995e756cff97168f6fef94b37d</b><br>', 'null'],
[143.8106231689453, -233.46786499023438, '<b><a href="/report/fcn.0041c4e3@505be53c36227b94e2fcc406f247f6e5">fcn.0041c4e3</a><br>@505be53c36227b94e2fcc406f247f6e5</b><br>', 'null'],
[73.73028564453125, 57.10942840576172, '<b><a href="/report/fcn.0040d95d@03a5d7e745838b7e7a4c7d09dcb64e60">fcn.0040d95d</a><br>@03a5d7e745838b7e7a4c7d09dcb64e60</b><br>', 'null'],
[-209.7009735107422, 30.332040786743164, '<b><a href="/report/fcn.0040a9a0@48311276b3cd8adebcd777f7aad326b2">fcn.0040a9a0</a><br>@48311276b3cd8adebcd777f7aad326b2</b><br>', 'null'],
[-98.44479370117188, 16.163681030273438, '<b><a href="/report/fcn.004321c5@368dd66411b8b6ce2bcd15b0e14af5c0">fcn.004321c5</a><br>@368dd66411b8b6ce2bcd15b0e14af5c0</b><br>', 'null'],
[84.64051055908203, -119.7579116821289, '<b><a href="/report/fcn.004332fd@ba86269e5231930ee4def4088ddb8d19">fcn.004332fd</a><br>@ba86269e5231930ee4def4088ddb8d19</b><br>', 'null'],
[-95.13302612304688, 195.5745849609375, '<b><a href="/report/fcn.004321d7@adc325bca51b67a67785e7e986af8b4d">fcn.004321d7</a><br>@adc325bca51b67a67785e7e986af8b4d</b><br>', 'null'],
[-55.22696304321289, 105.40300750732422, '<b><a href="/report/fcn.00413280@b9e7701b101639a92238161f00b7471e">fcn.00413280</a><br>@b9e7701b101639a92238161f00b7471e</b><br>', 'null'],
[162.58843994140625, 64.98567199707031, '<b><a href="/report/fcn.10009f5e@b74a1e462e0b6bacec09e2503391e156">fcn.10009f5e</a><br>@b74a1e462e0b6bacec09e2503391e156</b><br>', 'null'],
[233.76364135742188, -187.20623779296875, '<b><a href="/report/fcn.0047e540@289859175c221b107317af7727d26c17">fcn.0047e540</a><br>@289859175c221b107317af7727d26c17</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
mov eax, 0x1af0
call fcn.00607200
mov eax, dword[section..data]
xor eax, ebp
mov dword[ebp-4], eax
and dword[ebp-0x1abc], 0
mov eax, dword[ebp+8]
mov ecx, dword[ebp+0xc]
push esi
xor esi, esi
mov dword[ebp-0x1ac8], eax
push edi
xor edi, edi
mov dword[ebp-0x1ad0], ecx
mov dword[ebp-0x1ac0], esi
cmp dword[ebp+0x10], esi
jne 0x612bca
xor eax, eax
jmp 0x6133d7
test ecx, ecx
jne 0x612bed
call fcn.0060a5f0
and dword[eax], esi
call fcn.0060a624
mov dword[eax], 0x16
call fcn.0060ab57
or eax, 0xffffffff
jmp 0x6133d7
mov edx, eax
mov ecx, eax
sar edx, 5
and ecx, 0x1f
shl ecx, 6
mov dword[ebp-0x1ad8], edx
push ebx
mov edx, dword[edx*4+0x6a1200]
mov dword[ebp-0x1adc], ecx
mov bl, byte[ecx+edx+0x24]
add bl, bl
sar bl, 1
cmp bl, 2
je 0x612c20
cmp bl, 1
jne 0x612c4b
mov eax, dword[ebp+0x10]
not eax
test al, 1
jne 0x612c45
call fcn.0060a5f0
and dword[eax], esi
call fcn.0060a624
mov dword[eax], 0x16
call fcn.0060ab57
jmp 0x6133cd
mov eax, dword[ebp-0x1ac8]
test byte[ecx+edx+4], 0x20
je 0x612c61
push 2
push 0
push 0
push eax
call fcn.00613767
add esp, 0x10
push dword[ebp-0x1ac8]
call fcn.00610bee
pop ecx
test eax, eax
je 0x612fc5
mov eax, dword[ebp-0x1ad8]
mov ecx, dword[ebp-0x1adc]
mov eax, dword[eax*4+0x6a1200]
test byte[ecx+eax+4], 0x80
je 0x612fc5
call fcn.00608087
xor ecx, ecx
mov eax, dword[eax+0x6c]
cmp dword[eax+0xa8], ecx
lea eax, [ebp-0x1ae8]
push eax
mov eax, dword[ebp-0x1ad8]
sete cl
mov dword[ebp-0x1ac4], ecx
mov ecx, dword[ebp-0x1adc]
mov eax, dword[eax*4+0x6a1200]
push dword[ecx+eax]
call dword[sym.imp.KERNEL32.dll_GetConsoleMode]
test eax, eax
je 0x612fc5
cmp dword[ebp-0x1ac4], esi
je 0x612ce7
test bl, bl
je 0x612fc5
call dword[sym.imp.KERNEL32.dll_GetConsoleCP]
mov edx, dword[ebp-0x1ad0]
xor ecx, ecx
and dword[ebp-0x1ac8], ecx
mov dword[ebp-0x1af0], eax
mov dword[ebp-0x1acc], ecx
mov dword[ebp-0x1ad4], edx
cmp dword[ebp+0x10], ecx
jbe 0x613397
mov eax, dword[ebp-0x1ad4]
xor edx, edx
mov dword[ebp-0x1ac0], edx
mov dword[ebp-0x1aec], 0xa
and dword[ebp-0x1ac4], edi
test bl, bl
jne 0x612eea
mov dl, byte[eax]
xor eax, eax
mov ecx, dword[ebp-0x1adc]
cmp dl, 0xa
sete al
mov dword[ebp-0x1ae8], eax
mov eax, dword[ebp-0x1ad8]
mov eax, dword[eax*4+0x6a1200]
mov dword[ebp-0x1ac4], eax
cmp dword[ecx+eax+0x38], edi
je 0x612d87
mov al, byte[ecx+eax+0x34]
mov byte[ebp-0xc], al
mov eax, dword[ebp-0x1ac4]
mov byte[ebp-0xb], dl
push 2
and dword[ecx+eax+0x38], edi
lea eax, [ebp-0xc]
push eax
jmp 0x612de1
movsx eax, dl
push eax
call fcn.0060eb17
pop ecx
test eax, eax
je 0x612dd9
mov eax, dword[ebp-0x1ad0]
mov edx, dword[ebp-0x1ad4]
sub eax, edx
add eax, dword[ebp+0x10]
cmp eax, 1
jbe 0x612f8a
push 2
push edx
lea eax, [ebp-0x1acc]
push eax
call fcn.006138cf
add esp, 0xc
cmp eax, 0xffffffff
je 0x6130cf
mov eax, dword[ebp-0x1ad4]
inc eax
inc dword[ebp-0x1ac0]
jmp 0x612dff
push 1
push dword[ebp-0x1ad4]
lea eax, [ebp-0x1acc]
push eax
call fcn.006138cf
add esp, 0xc
cmp eax, 0xffffffff
je 0x6130cf
mov eax, dword[ebp-0x1ad4]
xor ecx, ecx
inc eax
inc dword[ebp-0x1ac0]
push ecx
push ecx
push 5
mov dword[ebp-0x1ad4], eax
lea eax, [ebp-0xc]
push eax
push 1
lea eax, [ebp-0x1acc]
push eax
push ecx
push dword[ebp-0x1af0]
call dword[sym.imp.KERNEL32.dll_WideCharToMultiByte]
mov dword[ebp-0x1ac4], eax
test eax, eax
je 0x6130cf
push 0
lea ecx, [ebp-0x1ac8]
push ecx
mov ecx, dword[ebp-0x1adc]
push eax
lea eax, [ebp-0xc]
push eax
mov eax, dword[ebp-0x1ad8]
mov eax, dword[eax*4+0x6a1200]
push dword[ecx+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je 0x612fb8
mov esi, dword[ebp-0x1ac0]
mov ecx, dword[ebp-0x1abc]
add esi, ecx
mov eax, dword[ebp-0x1ac4]
cmp dword[ebp-0x1ac8], eax
jl 0x6130d5
cmp dword[ebp-0x1ae8], edi
je 0x612edf
mov ecx, dword[ebp-0x1adc]
lea eax, [ebp-0x1ac8]
push 0
push eax
push 1
lea eax, [ebp-0xc]
mov byte[ebp-0xc], 0xd
push eax
mov eax, dword[ebp-0x1ad8]
mov eax, dword[eax*4+0x6a1200]
push dword[ecx+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je 0x612fb8
cmp dword[ebp-0x1ac8], 1
jl 0x6130cf
inc dword[ebp-0x1abc]
inc esi
mov ecx, dword[ebp-0x1acc]
jmp 0x612f70
cmp bl, 1
je 0x612ef4
cmp bl, 2
jne 0x612f27
movzx ecx, word[eax]
xor edx, edx
cmp cx, word[ebp-0x1aec]
mov dword[ebp-0x1acc], ecx
sete dl
add eax, 2
mov dword[ebp-0x1ac4], edx
mov edx, dword[ebp-0x1ac0]
add edx, 2
mov dword[ebp-0x1ad4], eax
mov dword[ebp-0x1ac0], edx
cmp bl, 1
je 0x612f31
cmp bl, 2
jne 0x612f7c
push ecx
call fcn.006138e7
pop ecx
mov ecx, dword[ebp-0x1acc]
cmp ax, cx
jne 0x612fb8
add esi, 2
cmp dword[ebp-0x1ac4], edi
je 0x612f70
push 0xd
pop eax
push eax
mov dword[ebp-0x1acc], eax
call fcn.006138e7
pop ecx
mov ecx, dword[ebp-0x1acc]
cmp ax, cx
jne 0x612fb8
inc esi
inc dword[ebp-0x1abc]
mov edx, dword[ebp-0x1ac0]
mov eax, dword[ebp-0x1ad4]
cmp edx, dword[ebp+0x10]
jb 0x612d2e
jmp 0x6130cf
mov ebx, dword[ebp-0x1ad8]
inc esi
mov al, byte[edx]
mov edx, dword[ebp-0x1adc]
mov ecx, dword[ebx*4+0x6a1200]
mov byte[edx+ecx+0x34], al
mov eax, dword[ebx*4+0x6a1200]
mov dword[edx+eax+0x38], 1
jmp 0x6130cf
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov edi, eax
jmp 0x6130cf
mov eax, dword[ebp-0x1ad8]
mov ecx, dword[eax*4+0x6a1200]
mov eax, dword[ebp-0x1adc]
test byte[eax+ecx+4], 0x80
je 0x613358
mov edx, dword[ebp-0x1ad0]
xor edi, edi
mov dword[ebp-0x1acc], edi
test bl, bl
jne 0x613107
mov ebx, dword[ebp+0x10]
mov dword[ebp-0x1ac8], edx
test ebx, ebx
je 0x613397
xor ecx, ecx
lea edi, [ebp-0x140c]
mov eax, edx
mov dword[ebp-0x1ac4], ecx
sub eax, dword[ebp-0x1ad0]
cmp eax, ebx
jae 0x613068
mov cl, byte[edx]
inc edx
inc eax
mov byte[ebp-0x1ae1], cl
cmp cl, 0xa
mov dword[ebp-0x1ac8], edx
mov ecx, dword[ebp-0x1ac4]
jne 0x61304a
inc dword[ebp-0x1abc]
mov byte[edi], 0xd
inc edi
inc ecx
mov dl, byte[ebp-0x1ae1]
mov byte[edi], dl
inc edi
mov edx, dword[ebp-0x1ac8]
inc ecx
mov dword[ebp-0x1ac4], ecx
cmp ecx, 0x13ff
jb 0x613020
mov ecx, dword[ebp-0x1adc]
lea eax, [ebp-0x140c]
sub edi, eax
lea eax, [ebp-0x1ae0]
push 0
push eax
push edi
lea eax, [ebp-0x140c]
push eax
mov eax, dword[ebp-0x1ad8]
mov eax, dword[eax*4+0x6a1200]
push dword[ecx+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je 0x612fb8
add esi, dword[ebp-0x1ae0]
cmp dword[ebp-0x1ae0], edi
jl 0x6130c9
mov edx, dword[ebp-0x1ac8]
mov eax, edx
sub eax, dword[ebp-0x1ad0]
cmp eax, ebx
jb 0x61300a
mov edi, dword[ebp-0x1acc]
mov ecx, dword[ebp-0x1abc]
test esi, esi
jne 0x6133d2
test edi, edi
je 0x613391
push 5
pop ebx
cmp edi, ebx
jne 0x613388
call fcn.0060a624
mov dword[eax], 9
call fcn.0060a5f0
mov dword[eax], ebx
jmp 0x6133cd
mov ecx, edx
cmp bl, 2
jne 0x6131fc
cmp dword[ebp+0x10], esi
jbe 0x613397
mov dword[ebp-0x1aec], 0xa
and dword[ebp-0x1ae8], 0
lea ebx, [ebp-0x140c]
mov eax, ecx
push 0xd
sub eax, edx
mov edx, dword[ebp-0x1ae8]
pop esi
cmp eax, dword[ebp+0x10]
jae 0x613177
movzx edi, word[ecx]
add eax, 2
add ecx, 2
cmp di, word[ebp-0x1aec]
jne 0x613166
add dword[ebp-0x1abc], 2
mov word[ebx], si
add ebx, 2
add edx, 2
mov word[ebx], di
add edx, 2
add ebx, 2
cmp edx, 0x13fe
jb 0x61313f
lea eax, [ebp-0x140c]
mov dword[ebp-0x1ac4], ecx
mov ecx, dword[ebp-0x1adc]
sub ebx, eax
push 0
lea eax, [ebp-0x1ae0]
push eax
push ebx
lea eax, [ebp-0x140c]
push eax
mov eax, dword[ebp-0x1ad8]
mov eax, dword[eax*4+0x6a1200]
push dword[ecx+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
mov esi, dword[ebp-0x1ac0]
mov edi, dword[ebp-0x1acc]
test eax, eax
je 0x612fb8
add esi, dword[ebp-0x1ae0]
mov dword[ebp-0x1ac0], esi
cmp dword[ebp-0x1ae0], ebx
jl 0x6130cf
mov ecx, dword[ebp-0x1ac4]
mov eax, ecx
mov edx, dword[ebp-0x1ad0]
sub eax, edx
cmp eax, dword[ebp+0x10]
jb 0x613125
jmp 0x6130cf
mov ebx, dword[ebp+0x10]
mov dword[ebp-0x1ac8], ecx
test ebx, ebx
je 0x613397
mov dword[ebp-0x1aec], 0xa
and dword[ebp-0x1ae8], 0
lea eax, [ebp-0x1ab8]
mov edi, dword[ebp-0x1ac8]
sub ecx, edx
mov edx, dword[ebp-0x1ae8]
cmp ecx, ebx
jae 0x613271
movzx esi, word[edi]
add ecx, 2
add edi, 2
mov dword[ebp-0x1ac8], edi
cmp si, word[ebp-0x1aec]
jne 0x613260
push 0xd
pop edi
mov word[eax], di
add eax, 2
mov edi, dword[ebp-0x1ac8]
add edx, 2
mov word[eax], si
add edx, 2
add eax, 2
cmp edx, 0x6a8
jb 0x613232
xor esi, esi
lea ecx, [ebp-0xd64]
push esi
push esi
push 0xd55
push ecx
lea ecx, [ebp-0x1ab8]
sub eax, ecx
cdq
sub eax, edx
sar eax, 1
push eax
mov eax, ecx
push eax
push esi
push 0xfde9
call dword[sym.imp.KERNEL32.dll_WideCharToMultiByte]
mov esi, dword[ebp-0x1ac0]
mov edi, dword[ebp-0x1acc]
mov dword[ebp-0x1ac4], eax
test eax, eax
je 0x612fb8
xor ecx, ecx
mov dword[ebp-0x1ac0], ecx
push 0
sub eax, ecx
lea edx, [ebp-0x1ae0]
push edx
push eax
lea eax, [ebp-0xd64]
add eax, ecx
mov ecx, dword[ebp-0x1adc]
push eax
mov eax, dword[ebp-0x1ad8]
mov eax, dword[eax*4+0x6a1200]
push dword[ecx+eax]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je 0x613313
mov ecx, dword[ebp-0x1ac0]
add ecx, dword[ebp-0x1ae0]
mov eax, dword[ebp-0x1ac4]
mov dword[ebp-0x1ac0], ecx
cmp eax, ecx
jg 0x6132c0
jmp 0x61332d
call dword[sym.imp.KERNEL32.dll_GetLastError]
mov ecx, dword[ebp-0x1ac0]
mov edi, eax
mov eax, dword[ebp-0x1ac4]
mov dword[ebp-0x1acc], edi
cmp eax, ecx
jg 0x6130cf
mov ecx, dword[ebp-0x1ac8]
mov esi, ecx
mov edx, dword[ebp-0x1ad0]
sub esi, edx
mov dword[ebp-0x1ac0], esi
cmp esi, ebx
jb 0x613217
jmp 0x6130cf
push 0
lea edx, [ebp-0x1ae0]
push edx
push dword[ebp+0x10]
push dword[ebp-0x1ad0]
push dword[eax+ecx]
call dword[sym.imp.KERNEL32.dll_WriteFile]
test eax, eax
je 0x612fb8
mov esi, dword[ebp-0x1ae0]
xor edi, edi
jmp 0x6130cf
push edi
call fcn.0060a603
pop ecx
jmp 0x6133cd
mov edx, dword[ebp-0x1ad0]
mov eax, dword[ebp-0x1ad8]
mov ecx, dword[ebp-0x1adc]
mov eax, dword[eax*4+0x6a1200]
test byte[ecx+eax+4], 0x40
je 0x6133ba
cmp byte[edx], 0x1a
jne 0x6133ba
xor eax, eax
jmp 0x6133d6
call fcn.0060a624
mov dword[eax], 0x1c
call fcn.0060a5f0
and dword[eax], 0
or eax, 0xffffffff
jmp 0x6133d6
sub esi, ecx
mov eax, esi
pop ebx
mov ecx, dword[ebp-4]
pop edi
xor ecx, ebp
pop esi
call fcn.006060c4
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/52d540e8e13e0f0bbb8946b2363a382d