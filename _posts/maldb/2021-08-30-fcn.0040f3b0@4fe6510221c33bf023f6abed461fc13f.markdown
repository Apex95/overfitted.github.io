---
layout: post
title:  "fcn.0040f3b0 @ 4fe6510221c33bf023f6abed461fc13f"
date:   2021-08-30 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0040f3b0
- **Origin (md5):** 4fe6510221c33bf023f6abed461fc13f
- **VirusTotal:** [virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f][virustotal_ref]

# Code Tags
<span class="tag" id="PROCESS">PROCESS</span>
<span class="tag" id="THREAD">THREAD</span>
<span class="tag" id="LINKING">LINKING</span>


# Similar Functions

1. [fcn.00401340][similar_1_ref] (sim.: 0.8918886163409209)
2. [fcn.00409b83][similar_2_ref] (sim.: 0.8816132512944321)
3. [fcn.1003b3e7][similar_3_ref] (sim.: 0.8816132512944321)
4. [fcn.00447f0c][similar_4_ref] (sim.: 0.8816132512944321)
5. [fcn.00426345][similar_5_ref] (sim.: 0.8816132512944321)


# Disassembled Code

{% highlight nasm %}
push ebp
mov ebp,esp
and esp,0xfffffff8
movzx eax,byte[ebp+0xc]
sub esp,0x11c
push ebx
mov ebx,dword[ebp+0x10]
or ax,bx
push esi
push edi
je 0x40f9c7
cmp dword[ebp+0x1c],0
jne 0x40f3dc
mov dword[ebp+0x1c],0xffc3d44d
call dword[sym.imp.KERNEL32.dll_GetCurrentThreadId]
cmp eax,dword[0x4c53a0]
mov eax,dword[0x4c7f18]
sete byte[esp+0x11]
test eax,eax
je 0x40f402
cmp byte[esp+0x11],0
mov byte[esp+0x12],1
je 0x40f407
mov byte[esp+0x12],0
cmp eax,1
je 0x40f413
cmp byte[esp+0x11],0
je 0x40f417
mov byte[ebp+0x18],0
cmp byte[ebp+0xc],0
jne 0x40f429
mov ecx,ebx
call fcn.00412980
mov byte[ebp+0xc],al
jmp 0x40f442
test bx,bx
jne 0x40f442
mov ecx,dword[ebp+0xc]
push ecx
xor bl,bl
call fcn.00412700
movzx ebx,ax
add esp,4
mov dword[ebp+0x10],ebx
mov edx,ebx
xor eax,eax
shr edx,8
test dl,dl
setne al
cmp dword[0x4c7f18],2
mov dword[esp+0x1c],eax
jne case.default.0x40f469
movzx eax,byte[ebp+0xc]
add eax,0xffffff60
cmp eax,5
ja case.default.0x40f469
jmp dword[eax*4+0x40f9d0]
mov byte[ebp+0xc],0x11
jmp case.default.0x40f469
mov byte[ebp+0xc],0x10
jmp case.default.0x40f469
mov byte[ebp+0xc],0x12
cmp dword[ebp+0x14],0
mov al,byte[ebp+0xc]
je 0x40f5b5
xor ecx,ecx
mov edx,ebx
call fcn.00411b10
mov ebx,dword[ebp+8]
test al,al
je 0x40f54b
lea ecx,[esp+0x28]
push ecx
call dword[sym.imp.USER32.dll_GetKeyboardState]
mov cl,0x80
mov dl,0x7f
test ebx,ebx
jne 0x40f4c2
movzx eax,byte[ebp+0xc]
or byte[esp+eax+0x28],cl
lea eax,[esp+eax+0x28]
jmp 0x40f4d3
cmp ebx,1
jne 0x40f4d3
movzx eax,byte[ebp+0xc]
and byte[esp+eax+0x28],dl
lea eax,[esp+eax+0x28]
movzx eax,byte[ebp+0xc]
add eax,0xffffff60
cmp eax,5
ja case.default.0x40f4e1
jmp dword[eax*4+0x40f9e8]
test byte[esp+0xca],cl
jne 0x40f500
test byte[esp+0xcb],cl
jne 0x40f500
and byte[esp+0x39],dl
jmp case.default.0x40f4e1
or byte[esp+0x39],cl
jmp case.default.0x40f4e1
test byte[esp+0xc8],cl
jne 0x40f51e
test byte[esp+0xc9],cl
jne 0x40f51e
and byte[esp+0x38],dl
jmp case.default.0x40f4e1
or byte[esp+0x38],cl
jmp case.default.0x40f4e1
test byte[esp+0xcc],cl
jne 0x40f53c
test byte[esp+0xcd],cl
jne 0x40f53c
and byte[esp+0x3a],dl
jmp case.default.0x40f4e1
or byte[esp+0x3a],cl
lea edx,[esp+0x28]
push edx
call dword[sym.imp.USER32.dll_SetKeyboardState]
movzx esi,word[ebp+0x10]
mov edi,dword[sym.imp.USER32.dll_PostMessageW]
shl esi,0x10
cmp ebx,1
je 0x40f573
movzx ecx,byte[ebp+0xc]
mov edx,dword[ebp+0x14]
mov eax,esi
or eax,1
push eax
push ecx
push 0x100
push edx
call edi
cmp byte[ebp+0x18],0
je 0x40f591
cmp ebx,2
jne 0x40f591
mov eax,dword[0x4c28ec]
mov ecx,dword[eax+0x64]
push ecx
call fcn.00410e40
add esp,4
jmp 0x40f599
test ebx,ebx
je 0x40f98e
movzx edx,byte[ebp+0xc]
mov eax,dword[ebp+0x14]
or esi,0xc0000001
push esi
push edx
push 0x101
push eax
call edi
jmp 0x40f98e
cmp byte[0x4c6ec4],0
mov ecx,dword[ebp+8]
mov dword[0x4c53f8],ecx
mov byte[0x4c6eff],al
je 0x40f612
cmp al,0x12
je 0x40f5d8
cmp al,0xa4
je 0x40f5d8
cmp al,0xa5
jne 0x40f612
cmp byte[esp+0x11],0
jne 0x40f612
test byte[0x4c9b80],1
mov byte[esp+0x16],1
jne 0x40f643
or dword[0x4c9b80],1
push str.BlockInput
push str.user32
call dword[sym.imp.KERNEL32.dll_GetModuleHandleW]
push eax
call dword[sym.imp.KERNEL32.dll_GetProcAddress]
mov dword[0x4c9b7c],eax
jmp 0x40f648
cmp byte[esp+0x11],0
mov byte[esp+0x16],0
lea esi,[esp+0x24]
jne 0x40f627
mov esi,0x4c53f0
mov dword[esp+0x18],esi
cmp al,0xa5
jne 0x40f65c
cmp byte[esp+0x12],0
jne 0x40f65c
cmp dword[0x4c65e8],0
je 0x40f65c
mov al,1
jmp 0x40f65e
mov eax,dword[0x4c9b7c]
test eax,eax
je 0x40f650
push 0
call eax
mov al,byte[ebp+0xc]
mov byte[0x4c6ec4],0
jmp 0x40f622
xor al,al
mov byte[esp+0x14],al
mov byte[esp+0x13],al
test al,al
je 0x40f6d6
cmp byte[esp+0x11],0
jne 0x40f679
mov edi,dword[0x4c53f4]
jmp 0x40f6a6
call dword[sym.imp.USER32.dll_GetForegroundWindow]
test eax,eax
je 0x40f68e
push 0
push eax
call dword[sym.imp.USER32.dll_GetWindowThreadProcessId]
jmp 0x40f690
xor eax,eax
push eax
call dword[sym.imp.USER32.dll_GetKeyboardLayout]
mov edi,eax
push edi
xor eax,eax
call fcn.00411f10
add esp,4
mov dword[esi],eax
cmp dword[esi],0
je 0x40f6b2
mov byte[esp+0x13],0
jmp 0x40f6da
push 0xa2
mov byte[esp+0x19],0xa2
call dword[sym.imp.USER32.dll_GetAsyncKeyState]
mov edx,dword[ebp+0x1c]
mov dword[0x4c65dc],edx
shr eax,0xf
and al,1
mov byte[esp+0x17],al
jmp 0x40f6da
mov edi,dword[esp+0x24]
cmp byte[esp+0x12],0
je 0x40f6f3
mov al,byte[ebp+0xc]
xor ecx,ecx
mov edx,ebx
call fcn.00411b10
mov byte[esp+0x20],al
jmp 0x40f6f8
mov byte[esp+0x20],0
cmp byte[esp+0x11],0
jne 0x40f71e
mov eax,dword[0x4c7f18]
cmp eax,2
je 0x40f71e
cmp dword[0x4c65e8],0
je 0x40f717
cmp eax,1
jne 0x40f71e
mov byte[esp+0x11],1
jmp 0x40f723
mov byte[esp+0x11],0
cmp dword[ebp+8],1
mov esi,dword[sym.imp.USER32.dll_keybd_event]
mov ebx,dword[esp+0x20]
je 0x40f812
cmp byte[esp+0x12],0
je 0x40f75d
mov eax,dword[ebp+0x1c]
mov ecx,dword[esp+0x1c]
mov edx,dword[ebp+0x10]
push eax
mov eax,dword[ebp+0xc]
push ecx
push edx
push eax
push ebx
call fcn.00410920
add esp,0x14
jmp 0x40f7f9
cmp byte[esp+0x14],0
je 0x40f776
mov ecx,dword[esp+0x18]
cmp dword[ecx],3
jne 0x40f776
mov edx,dword[ebp+0x1c]
mov dword[0x4c65e0],edx
mov eax,dword[ebp+0x1c]
mov ecx,dword[esp+0x1c]
mov edx,dword[ebp+0x10]
push eax
mov eax,dword[ebp+0xc]
push ecx
push edx
push eax
call esi
cmp byte[esp+0x13],0
mov dword[0x4c65e0],0
je 0x40f7f9
cmp dword[0x4c65dc],0
mov byte[esp+0x13],0
je 0x40f7c5
push edi
mov eax,4
mov dword[0x4c65dc],0
call fcn.00411f10
mov ecx,dword[esp+0x1c]
mov dword[ecx],eax
jmp 0x40f7f6
cmp byte[esp+0x17],0
jne 0x40f7f9
movzx edx,byte[esp+0x15]
push edx
call dword[sym.imp.USER32.dll_GetAsyncKeyState]
mov ecx,0x8000
and ax,cx
movzx eax,ax
neg eax
sbb eax,eax
add eax,4
push edi
call fcn.00411f10
mov edx,dword[esp+0x1c]
mov dword[edx],eax
add esp,4
cmp byte[esp+0x11],0
je 0x40f812
mov eax,dword[ebp+0x10]
mov ecx,dword[ebp+0xc]
push eax
push ecx
xor dl,dl
call fcn.00411010
add esp,8
cmp byte[ebp+0x18],0
je 0x40f851
mov eax,2
cmp dword[ebp+8],eax
jne 0x40f851
cmp dword[0x4c7f18],eax
jne 0x40f83e
mov edx,dword[0x4c28ec]
mov eax,dword[edx+0x68]
push eax
call fcn.00410e40
add esp,4
jmp 0x40f85b
mov eax,dword[0x4c28ec]
mov eax,dword[eax+0x64]
push eax
call fcn.00410e40
add esp,4
jmp 0x40f85b
cmp dword[ebp+8],0
je 0x40f945
or dword[esp+0x1c],2
cmp byte[esp+0x12],0
je 0x40f889
mov ecx,dword[ebp+0x1c]
mov edx,dword[esp+0x1c]
mov eax,dword[ebp+0x10]
push ecx
mov ecx,dword[ebp+0xc]
push edx
push eax
push ecx
push ebx
call fcn.00410920
mov ebx,dword[ebp+0x10]
add esp,0x14
jmp 0x40f915
cmp byte[esp+0x14],0
je 0x40f8a1
mov edx,dword[esp+0x18]
cmp dword[edx],3
jne 0x40f8a1
mov eax,dword[ebp+0x1c]
mov dword[0x4c65e4],eax
mov ecx,dword[ebp+0x1c]
mov edx,dword[esp+0x1c]
mov ebx,dword[ebp+0x10]
mov eax,dword[ebp+0xc]
push ecx
push edx
push ebx
push eax
call esi
xor eax,eax
mov dword[0x4c65e4],eax
cmp byte[esp+0x13],al
je 0x40f915
cmp dword[0x4c65dc],eax
je 0x40f8e1
mov dword[0x4c65dc],eax
push edi
mov eax,4
call fcn.00411f10
mov ecx,dword[esp+0x1c]
mov dword[ecx],eax
jmp 0x40f912
cmp byte[esp+0x17],al
je 0x40f915
movzx edx,byte[esp+0x15]
push edx
call dword[sym.imp.USER32.dll_GetAsyncKeyState]
mov ecx,0x8000
test cx,ax
mov eax,0
setne al
push edi
add eax,3
call fcn.00411f10
mov edx,dword[esp+0x1c]
mov dword[edx],eax
add esp,4
mov eax,dword[esp+0x18]
cmp dword[eax],0
je 0x40f92f
mov ecx,0x138
cmp bx,cx
jne 0x40f92f
and byte[0x4c53d7],0xfe
cmp byte[esp+0x11],0
je 0x40f945
mov edx,dword[ebp+0xc]
push ebx
push edx
mov dl,1
call fcn.00411010
add esp,8
cmp byte[esp+0x16],0
je 0x40f98e
test byte[0x4c9b80],1
jne 0x40f97a
or dword[0x4c9b80],1
push str.BlockInput
push str.user32
call dword[sym.imp.KERNEL32.dll_GetModuleHandleW]
push eax
call dword[sym.imp.KERNEL32.dll_GetProcAddress]
mov dword[0x4c9b7c],eax
jmp 0x40f97f
mov eax,dword[0x4c9b7c]
test eax,eax
je 0x40f987
push 1
call eax
mov byte[0x4c6ec4],1
cmp byte[ebp+0x18],0
je 0x40f9c7
cmp dword[0x4c7f18],2
jne 0x40f9b5
mov eax,dword[0x4c28ec]
mov eax,dword[eax+0x60]
push eax
call fcn.00410e40
add esp,4
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov ecx,dword[0x4c28ec]
mov eax,dword[ecx+0x5c]
push eax
call fcn.00410e40
add esp,4
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
{% endhighlight %}


[similar_1_ref]: /report/fcn.00401340@4fe6510221c33bf023f6abed461fc13f
[similar_2_ref]: /report/fcn.00409b83@6c5b0418e4a4c57d99cda47d2717045d
[similar_3_ref]: /report/fcn.1003b3e7@481b545f5c18f2fce1caac67ddc419e8
[similar_4_ref]: /report/fcn.00447f0c@44e1ffcf4e71f4505c09d520fd75f1e4
[similar_5_ref]: /report/fcn.00426345@0aa2d73a5300dff2412388945614b507
[virustotal_ref]: https://www.virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f