---
layout: post
title:  "fcn.004310ab @ d96761eb00d2d97e2b6f5ffffed0b46a"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.004310ab
- **Origin (md5):** d96761eb00d2d97e2b6f5ffffed0b46a
- **VirusTotal:** [virustotal.com/gui/file/d96761eb00d2d97e2b6f5ffffed0b46a][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [36.88926696777344, -2.503035545349121, '<b><a href="/report/fcn.004310ab@d96761eb00d2d97e2b6f5ffffed0b46a">fcn.004310ab</a><br>@d96761eb00d2d97e2b6f5ffffed0b46a</b><br>', 'point { fill-color: #e0440e; }'],
[16.460121154785156, 74.34904479980469, '<b><a href="/report/fcn.10133bf7@e5d49e0823e602f2ee948ac39d32c1eb">fcn.10133bf7</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],
[-78.49239349365234, -14.489492416381836, '<b><a href="/report/fcn.00409b83@6c5b0418e4a4c57d99cda47d2717045d">fcn.00409b83</a><br>@6c5b0418e4a4c57d99cda47d2717045d</b><br>', 'null'],
[79.80817413330078, -153.079833984375, '<b><a href="/report/fcn.00421918@7dfa91bbba8f79a5b19b642937435ac0">fcn.00421918</a><br>@7dfa91bbba8f79a5b19b642937435ac0</b><br>', 'null'],
[36.309059143066406, -213.3866729736328, '<b><a href="/report/fcn.00420458@597d9ee507d1b2a81775aa98c4a2271a">fcn.00420458</a><br>@597d9ee507d1b2a81775aa98c4a2271a</b><br>', 'null'],
[3.510690927505493, -146.6769561767578, '<b><a href="/report/fcn.0044d3fe@c2f40b3bc10e39d3d975422ee4d09bab">fcn.0044d3fe</a><br>@c2f40b3bc10e39d3d975422ee4d09bab</b><br>', 'null'],
[83.06501007080078, 122.04389190673828, '<b><a href="/report/fcn.00414f7f@c299206e1e94de2392d4dd9464d03d54">fcn.00414f7f</a><br>@c299206e1e94de2392d4dd9464d03d54</b><br>', 'null'],
[152.7239532470703, 80.90995025634766, '<b><a href="/report/fcn.0048840f@fb9b7d22bc1c143ac66b0575cbdd088d">fcn.0048840f</a><br>@fb9b7d22bc1c143ac66b0575cbdd088d</b><br>', 'null'],
[90.26080322265625, 44.44841766357422, '<b><a href="/report/fcn.0048840f@152885a790b99953ce23874f0947b7bd">fcn.0048840f</a><br>@152885a790b99953ce23874f0947b7bd</b><br>', 'null'],
[140.42337036132812, -32.7950553894043, '<b><a href="/report/fcn.004ad178@3e981d1767f44f5fe2446a49ffe52f4e">fcn.004ad178</a><br>@3e981d1767f44f5fe2446a49ffe52f4e</b><br>', 'null'],
[-3.3658416271209717, 171.5908660888672, '<b><a href="/report/fcn.00410637@c299206e1e94de2392d4dd9464d03d54">fcn.00410637</a><br>@c299206e1e94de2392d4dd9464d03d54</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
sub esp, 0x28
mov eax, dword[ebp+8]
push ebx
push esi
mov esi, dword[ebp+0x10]
push edi
push 0xfffffffffffffffe
pop ecx
xor edi, edi
mov dword[ebp-0x18], ecx
mov dword[ebp-0x20], edi
mov dword[ebp-0x28], esi
cmp eax, ecx
jne 0x4310e3
call fcn.00428d34
mov dword[eax], edi
call fcn.00428d68
mov dword[eax], 9
jmp 0x431832
test eax, eax
js 0x43181b
cmp eax, dword[0x4c518c]
jae 0x43181b
mov ecx, eax
mov ebx, eax
sar ecx, 5
and ebx, 0x1f
shl ebx, 6
mov dword[ebp-0xc], ecx
mov dword[ebp-0x24], ebx
mov edx, dword[ecx*4+0x4c49e0]
mov al, byte[edx+ebx+4]
test al, 1
je 0x43181b
cmp esi, 0x7fffffff
jbe 0x43113c
call fcn.00428d34
mov dword[eax], edi
call fcn.00428d68
mov dword[eax], 0x16
jmp 0x43182d
test esi, esi
je 0x431817
test al, 2
jne 0x431817
cmp dword[ebp+0xc], edi
jne 0x43115a
call fcn.00428d34
and dword[eax], edi
jmp 0x43112c
mov al, byte[edx+ebx+0x24]
add al, al
sar al, 1
mov byte[ebp+0x13], al
movsx eax, al
dec eax
je 0x431181
dec eax
jne 0x431179
mov eax, esi
not eax
test al, 1
je 0x431151
and esi, 0xfffffffe
mov eax, dword[ebp+0xc]
mov dword[ebp-0x10], eax
jmp 0x4311e5
mov eax, esi
not eax
test al, 1
je 0x431151
shr esi, 1
cmp esi, 4
jae 0x431193
push 4
pop esi
push esi
call fcn.00428a5d
mov dword[ebp-0x10], eax
pop ecx
test eax, eax
jne 0x4311bc
call fcn.00428d68
mov dword[eax], 0xc
call fcn.00428d34
mov dword[eax], 8
jmp 0x431832
push 1
push 0
push 0
push dword[ebp+8]
call fcn.00431b11
mov ecx, dword[ebp-0xc]
add esp, 0x10
mov ecx, dword[ecx*4+0x4c49e0]
mov dword[ecx+ebx+0x28], eax
mov eax, dword[ebp-0x10]
mov dword[ecx+ebx+0x2c], edx
mov ecx, dword[ebp-0xc]
mov edx, dword[ecx*4+0x4c49e0]
mov ecx, dword[ebp-0xc]
mov dword[ebp-0x1c], eax
test byte[edx+ebx+4], 0x48
je 0x431282
mov dl, byte[edx+ebx+5]
cmp dl, 0xa
je 0x431282
test esi, esi
je 0x431282
mov byte[eax], dl
xor edi, edi
lea edx, [eax+1]
inc edi
mov eax, dword[ecx*4+0x4c49e0]
dec esi
cmp byte[ebp+0x13], 0
mov dword[ebp-0x1c], edx
mov byte[eax+ebx+5], 0xa
je 0x431282
mov eax, dword[ecx*4+0x4c49e0]
mov al, byte[eax+ebx+0x25]
cmp al, 0xa
je 0x431282
test esi, esi
je 0x431282
mov byte[edx], al
inc edx
mov eax, dword[ecx*4+0x4c49e0]
dec esi
cmp byte[ebp+0x13], 1
push 2
mov dword[ebp-0x1c], edx
pop edi
mov byte[eax+ebx+0x25], 0xa
jne 0x431282
mov eax, dword[ecx*4+0x4c49e0]
mov al, byte[eax+ebx+0x26]
cmp al, 0xa
je 0x431282
test esi, esi
je 0x431282
push 3
mov byte[edx], al
inc edx
mov eax, dword[ecx*4+0x4c49e0]
dec esi
pop edi
push 0xa
pop ecx
mov dword[ebp-0x1c], edx
mov byte[eax+ebx+0x26], cl
push dword[ebp+8]
call fcn.00435ebb
test eax, eax
mov eax, dword[ebp-0xc]
pop ecx
je 0x431303
mov ecx, dword[eax*4+0x4c49e0]
test byte[ecx+ebx+4], 0x80
je 0x431303
lea eax, [ebp-0x20]
push eax
push dword[ecx+ebx]
call dword[sym.imp.KERNEL32.dll_GetConsoleMode]
mov dword[ebp-0x20], eax
test eax, eax
je 0x431300
cmp byte[ebp+0x13], 2
jne 0x431300
push 0
lea eax, [ebp-0x14]
shr esi, 1
push eax
mov eax, dword[ebp-0xc]
push esi
push dword[ebp-0x1c]
mov eax, dword[eax*4+0x4c49e0]
push dword[eax+ebx]
call dword[sym.imp.KERNEL32.dll_ReadConsoleW]
test eax, eax
jne 0x4312f5
call dword[sym.imp.KERNEL32.dll_GetLastError]
push eax
call fcn.00428d47
pop ecx
or ebx, 0xffffffff
mov eax, dword[ebp-0x10]
jmp 0x4315ad
mov eax, dword[ebp-0x14]
lea ecx, [eax+eax]
mov dword[ebp-0x14], ecx
jmp 0x431338
mov eax, dword[ebp-0xc]
mov eax, dword[eax*4+0x4c49e0]
lea ecx, [ebp-0x14]
push 0
push ecx
push esi
push dword[ebp-0x1c]
push dword[eax+ebx]
call dword[sym.imp.KERNEL32.dll_ReadFile]
test eax, eax
je 0x4317e3
mov ecx, dword[ebp-0x14]
test ecx, ecx
js 0x4317e3
cmp ecx, esi
ja 0x4317e3
mov edx, dword[ebp-0xc]
add edi, ecx
mov esi, dword[edx*4+0x4c49e0]
mov al, byte[esi+ebx+4]
test al, al
jns 0x4315a7
cmp byte[ebp+0x13], 2
je 0x4315c7
test ecx, ecx
je 0x43136a
mov ecx, dword[ebp-0x10]
cmp byte[ecx], 0xa
jne 0x43136a
or al, 4
jmp 0x43136c
and al, 0xfb
mov byte[esi+ebx+4], al
mov eax, dword[ebp-0x10]
mov esi, eax
mov dword[ebp-0x20], eax
lea ecx, [eax+edi]
mov dword[ebp-0x1c], ecx
cmp eax, ecx
jae 0x431494
push 0xd
pop ecx
mov edi, eax
mov al, byte[edi]
cmp al, 0x1a
je 0x431478
cmp al, cl
je 0x4313a2
mov byte[esi], al
inc esi
inc edi
jmp 0x43143e
mov eax, dword[ebp-0x1c]
dec eax
cmp edi, eax
jae 0x4313c6
lea eax, [edi+1]
cmp byte[eax], 0xa
jne 0x4313bf
push 0xa
pop eax
add edi, 2
mov byte[esi], al
jmp 0x43146a
mov byte[esi], cl
mov edi, eax
inc esi
jmp 0x43143e
push 0
lea eax, [ebp-0x14]
inc edi
push eax
push 1
lea eax, [ebp-1]
push eax
mov eax, dword[edx*4+0x4c49e0]
push dword[eax+ebx]
call dword[sym.imp.KERNEL32.dll_ReadFile]
test eax, eax
jne 0x4313f1
call dword[sym.imp.KERNEL32.dll_GetLastError]
test eax, eax
jne 0x43146d
cmp dword[ebp-0x14], 0
je 0x43146d
mov edx, dword[ebp-0xc]
mov eax, dword[edx*4+0x4c49e0]
test byte[eax+ebx+4], 0x48
je 0x43142b
push 0xa
pop eax
push 0xd
cmp byte[ebp-1], al
jne 0x431417
mov byte[esi], al
inc esi
jmp 0x43143d
mov byte[esi], 0xd
inc esi
mov ecx, dword[edx*4+0x4c49e0]
mov al, byte[ebp-1]
mov byte[ecx+ebx+5], al
jmp 0x43143d
cmp esi, dword[ebp-0x10]
jne 0x431449
push 0xa
pop eax
cmp byte[ebp-1], al
jne 0x431449
mov byte[esi], al
inc esi
push 0xd
pop ecx
cmp edi, dword[ebp-0x1c]
jb 0x43138b
jmp 0x431494
push 1
push 0xffffffffffffffff
push 0xffffffffffffffff
push dword[ebp+8]
call fcn.00431b11
mov edx, dword[ebp-0xc]
add esp, 0x10
push 0xa
pop eax
cmp byte[ebp-1], al
je 0x43143b
push 0xd
pop ecx
mov byte[esi], cl
inc esi
jmp 0x43143e
mov edx, dword[ebp-0xc]
push 0xd
pop ecx
mov byte[esi], cl
inc esi
jmp 0x43143e
mov ecx, dword[edx*4+0x4c49e0]
mov al, byte[ecx+ebx+4]
test al, 0x40
jne 0x43148f
or al, 2
mov byte[ecx+ebx+4], al
jmp 0x431494
mov al, byte[edi]
mov byte[esi], al
inc esi
mov eax, dword[ebp-0x10]
mov edi, esi
sub edi, eax
cmp byte[ebp+0x13], 1
jne 0x4315aa
test edi, edi
je 0x4315aa
dec esi
mov al, byte[esi]
test al, al
js 0x4314ba
inc esi
jmp 0x431569
movzx eax, al
xor edx, edx
inc edx
cmp byte[eax+0x4bfee0], 0
jne 0x4314e6
mov ebx, dword[ebp-0x10]
cmp edx, 4
jg 0x4314e3
cmp esi, ebx
jb 0x4314e3
dec esi
inc edx
movzx eax, byte[esi]
cmp byte[eax+0x4bfee0], 0
je 0x4314cc
mov ebx, dword[ebp-0x24]
movzx eax, byte[esi]
movsx eax, byte[eax+0x4bfee0]
test eax, eax
jne 0x431504
call fcn.00428d68
mov dword[eax], 0x2a
jmp 0x4312ea
inc eax
cmp eax, edx
jne 0x43150d
add esi, edx
jmp 0x431569
mov eax, dword[ebp-0xc]
mov ecx, dword[eax*4+0x4c49e0]
test byte[ecx+ebx+4], 0x48
je 0x431555
mov al, byte[esi]
inc esi
mov byte[ecx+ebx+5], al
mov eax, dword[ebp-0xc]
cmp edx, 2
jl 0x43153e
mov ecx, dword[eax*4+0x4c49e0]
mov al, byte[esi]
inc esi
mov byte[ecx+ebx+0x25], al
mov eax, dword[ebp-0xc]
cmp edx, 3
jne 0x431551
mov ecx, dword[eax*4+0x4c49e0]
mov al, byte[esi]
inc esi
mov byte[ecx+ebx+0x26], al
sub esi, edx
jmp 0x431569
neg edx
mov eax, edx
push 1
cdq
push edx
push eax
push dword[ebp+8]
call fcn.00431b11
add esp, 0x10
mov eax, dword[ebp-0x28]
mov edi, dword[ebp-0x10]
sub esi, edi
shr eax, 1
push eax
push dword[ebp+0xc]
push esi
push edi
push 0
push 0xfde9
call dword[sym.imp.KERNEL32.dll_MultiByteToWideChar]
mov edi, eax
test edi, edi
je 0x4312dd
mov eax, dword[ebp-0xc]
xor ecx, ecx
cmp edi, esi
setne cl
add edi, edi
mov eax, dword[eax*4+0x4c49e0]
mov dword[eax+ebx+0x30], ecx
mov eax, dword[ebp-0x10]
mov ebx, dword[ebp-0x18]
cmp eax, dword[ebp+0xc]
je 0x4315b9
push eax
call fcn.00422f95
pop ecx
cmp ebx, 0xfffffffe
je 0x4315c0
mov edi, ebx
mov eax, edi
jmp 0x431835
cmp dword[ebp-0x20], 0
je 0x431646
mov esi, dword[ebp-0x10]
mov eax, edi
cdq
mov edi, esi
sub eax, edx
mov ecx, esi
sar eax, 1
lea edx, [edi+eax*2]
cmp edi, edx
jae 0x431637
push 0xd
mov dword[ebp+0x10], 0x1a
pop edi
movzx eax, word[ecx]
cmp ax, word[ebp+0x10]
je 0x431628
cmp ax, di
je 0x431605
mov word[esi], ax
add esi, 2
add ecx, 2
jmp 0x431622
lea eax, [edx-2]
cmp ecx, eax
jae 0x431622
add ecx, 2
push 0xa
pop eax
cmp word[ecx], ax
je 0x43161c
push 0xd
pop eax
push eax
pop edi
mov word[esi], ax
add esi, 2
cmp ecx, edx
jb 0x4315ec
jmp 0x431637
mov eax, dword[ebp-0xc]
mov eax, dword[eax*4+0x4c49e0]
or byte[eax+ebx+4], 2
mov eax, dword[ebp-0x10]
mov edi, esi
sub edi, eax
and edi, 0xfffffffe
jmp 0x4315aa
test ecx, ecx
je 0x43165c
mov ecx, dword[ebp-0x10]
push 0xa
pop edx
cmp word[ecx], dx
mov edx, dword[ebp-0xc]
jne 0x43165c
or al, 4
jmp 0x43165e
and al, 0xfb
mov byte[esi+ebx+4], al
mov eax, dword[ebp-0x10]
mov esi, eax
mov dword[ebp-0x28], eax
lea ecx, [eax+edi]
mov dword[ebp-0x20], ecx
cmp eax, ecx
jae 0x4317d7
push 0xd
pop ecx
mov dword[ebp+0x10], 0x1a
mov edi, eax
movzx eax, word[edi]
cmp ax, word[ebp+0x10]
je 0x4317b7
cmp ax, cx
je 0x43169b
mov word[esi], ax
jmp 0x4316c2
mov eax, dword[ebp-0x20]
add eax, 0xfffffffe
cmp edi, eax
jae 0x4316cd
push 0xa
pop edx
cmp word[edi+2], dx
mov edx, dword[ebp-0xc]
jne 0x4316bf
push 0xa
pop eax
add edi, 4
mov word[esi], ax
jmp 0x4317a4
mov word[esi], cx
add esi, 2
add edi, 2
jmp 0x431760
push 0
lea eax, [ebp-0x14]
add edi, 2
push eax
push 2
lea eax, [ebp-8]
push eax
mov eax, dword[edx*4+0x4c49e0]
push dword[eax+ebx]
call dword[sym.imp.KERNEL32.dll_ReadFile]
test eax, eax
jne 0x4316fe
call dword[sym.imp.KERNEL32.dll_GetLastError]
test eax, eax
jne 0x4317a9
cmp dword[ebp-0x14], 0
je 0x4317a9
mov edx, dword[ebp-0xc]
mov eax, dword[edx*4+0x4c49e0]
test byte[eax+ebx+4], 0x48
je 0x43176b
push 0xa
pop eax
push 0xd
cmp word[ebp-8], ax
jne 0x43172c
mov word[esi], ax
add esi, 2
jmp 0x43175f
pop eax
mov word[esi], ax
add esi, 2
mov ecx, dword[edx*4+0x4c49e0]
mov al, byte[ebp-8]
push 0xa
mov byte[ecx+ebx+5], al
mov ecx, dword[edx*4+0x4c49e0]
mov al, byte[ebp-7]
mov byte[ecx+ebx+0x25], al
mov eax, dword[edx*4+0x4c49e0]
pop ecx
mov byte[eax+ebx+0x26], cl
push 0xd
pop ecx
cmp edi, dword[ebp-0x20]
jb 0x431684
jmp 0x4317d7
cmp esi, dword[ebp-0x10]
jne 0x431781
push 0xa
pop eax
cmp word[ebp-8], ax
jne 0x431781
mov word[esi], ax
add esi, 2
jmp 0x43175d
push 1
push 0xffffffffffffffff
push 0xfffffffffffffffe
push dword[ebp+8]
call fcn.00431b11
mov edx, dword[ebp-0xc]
add esp, 0x10
push 0xa
pop eax
cmp word[ebp-8], ax
je 0x43175d
push 0xd
pop ecx
mov word[esi], cx
add esi, 2
jmp 0x431760
mov edx, dword[ebp-0xc]
push 0xd
pop ecx
mov word[esi], cx
add esi, 2
jmp 0x431760
mov ecx, dword[edx*4+0x4c49e0]
mov al, byte[ecx+ebx+4]
test al, 0x40
jne 0x4317ce
or al, 2
mov byte[ecx+ebx+4], al
jmp 0x4317d7
mov ax, word[edi]
mov word[esi], ax
add esi, 2
mov eax, dword[ebp-0x10]
mov edi, esi
sub edi, eax
jmp 0x4315aa
call dword[sym.imp.KERNEL32.dll_GetLastError]
push 5
pop esi
cmp eax, esi
jne 0x431807
call fcn.00428d68
mov dword[eax], 9
call fcn.00428d34
mov dword[eax], esi
jmp 0x4312ea
cmp eax, 0x6d
jne 0x4312e3
xor ebx, ebx
jmp 0x4312ed
xor eax, eax
jmp 0x431835
call fcn.00428d34
mov dword[eax], edi
call fcn.00428d68
mov dword[eax], 9
call fcn.00428ff6
or eax, 0xffffffff
pop edi
pop esi
pop ebx
mov esp, ebp
pop ebp
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/d96761eb00d2d97e2b6f5ffffed0b46a