---
layout: post
title:  "fcn.00499a34 @ 4fe6510221c33bf023f6abed461fc13f"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.00499a34
- **Origin (md5):** 4fe6510221c33bf023f6abed461fc13f
- **VirusTotal:** [virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f][virustotal_ref]

# Code Tags
<span class="tag" id="FILE">FILE</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-37.29250717163086, 2.31150484085083, '<b><a href="/report/fcn.00499a34@4fe6510221c33bf023f6abed461fc13f">fcn.00499a34</a><br>@4fe6510221c33bf023f6abed461fc13f</b><br>', 'point { fill-color: #e0440e; }'],
[-171.0484161376953, 160.83737182617188, '<b><a href="/report/fcn.0058cd66@c60344b51fa39a329b92557d24ff7670">fcn.0058cd66</a><br>@c60344b51fa39a329b92557d24ff7670</b><br>', 'null'],
[178.78790283203125, 27.489891052246094, '<b><a href="/report/fcn.0048a28f@289859175c221b107317af7727d26c17">fcn.0048a28f</a><br>@289859175c221b107317af7727d26c17</b><br>', 'null'],
[59.71474075317383, 94.47557830810547, '<b><a href="/report/fcn.004094c5@6c5b0418e4a4c57d99cda47d2717045d">fcn.004094c5</a><br>@6c5b0418e4a4c57d99cda47d2717045d</b><br>', 'null'],
[93.42760467529297, 4.826660633087158, '<b><a href="/report/fcn.00575f48@c60344b51fa39a329b92557d24ff7670">fcn.00575f48</a><br>@c60344b51fa39a329b92557d24ff7670</b><br>', 'null'],
[-109.43257141113281, 212.326416015625, '<b><a href="/report/fcn.00438ee5@9964b63070116cfb2469e51850178af1">fcn.00438ee5</a><br>@9964b63070116cfb2469e51850178af1</b><br>', 'null'],
[28.661401748657227, -63.64802169799805, '<b><a href="/report/fcn.0041fd5c@b8b9cf6862b0d68d10750002e5baaf97">fcn.0041fd5c</a><br>@b8b9cf6862b0d68d10750002e5baaf97</b><br>', 'null'],
[149.51644897460938, -72.71478271484375, '<b><a href="/report/fcn.101109f6@89dc67d2f980e8488f97b1bf8cb24258">fcn.101109f6</a><br>@89dc67d2f980e8488f97b1bf8cb24258</b><br>', 'null'],
[-56.211238861083984, -101.14414978027344, '<b><a href="/report/fcn.0041fd5c@146b14fc12cf789043a79d4f548a23bf">fcn.0041fd5c</a><br>@146b14fc12cf789043a79d4f548a23bf</b><br>', 'null'],
[43.91932678222656, -152.1482391357422, '<b><a href="/report/fcn.0041fd5c@3d7f25d788af3e7f7707a736ac852465">fcn.0041fd5c</a><br>@3d7f25d788af3e7f7707a736ac852465</b><br>', 'null'],
[-196.25672912597656, 254.81198120117188, '<b><a href="/report/fcn.004290be@de21a548b66aa6c0b17491b6a31e14fa">fcn.004290be</a><br>@de21a548b66aa6c0b17491b6a31e14fa</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

mov edi, edi
push ebp
mov ebp, esp
sub esp, 0x1c
mov edx, dword[ebp+0x10]
push esi
mov esi, dword[ebp+8]
push 0xfffffffffffffffe
pop eax
mov dword[ebp-0x14], eax
mov dword[ebp-0x1c], edx
cmp esi, eax
jne 0x499a6b
call fcn.00490ed5
and dword[eax], 0
call fcn.00490ec2
mov dword[eax], 9
or eax, 0xffffffff
jmp 0x499fe8
push ebx
xor ebx, ebx
cmp esi, ebx
jl 0x499a7a
cmp esi, dword[0x4c9f08]
jb 0x499a99
call fcn.00490ed5
mov dword[eax], ebx
call fcn.00490ec2
mov dword[eax], 9
call fcn.00490e70
or eax, 0xffffffff
jmp 0x499fe7
mov eax, esi
sar eax, 5
push edi
and esi, 0x1f
lea edi, [eax*4+0x4c9f20]
mov eax, dword[edi]
shl esi, 6
mov cl, byte[eax+esi+4]
test cl, 1
jne 0x499acb
call fcn.00490ed5
mov dword[eax], ebx
call fcn.00490ec2
mov dword[eax], 9
jmp 0x499b33
cmp edx, 0x7fffffff
ja 0x499b21
mov dword[ebp-0xc], ebx
cmp edx, ebx
je 0x499fe4
test cl, 2
jne 0x499fe4
cmp dword[ebp+0xc], ebx
je 0x499b21
mov al, byte[eax+esi+0x24]
add al, al
sar al, 1
mov byte[ebp-2], al
movsx eax, al
dec eax
push 4
pop ecx
je 0x499b19
dec eax
jne 0x499b11
mov eax, edx
not eax
test al, 1
je 0x499b21
and edx, 0xfffffffe
mov dword[ebp+0x10], edx
mov ebx, dword[ebp+0xc]
mov dword[ebp-0x10], ebx
jmp 0x499b93
mov eax, edx
not eax
test al, 1
jne 0x499b3a
call fcn.00490ed5
mov dword[eax], ebx
call fcn.00490ec2
mov dword[eax], 0x16
call fcn.00490e70
jmp 0x499b70
mov eax, edx
shr eax, 1
mov dword[ebp+0x10], ecx
cmp eax, ecx
jb 0x499b48
mov dword[ebp+0x10], eax
push dword[ebp+0x10]
call fcn.004927d7
mov ebx, eax
pop ecx
mov dword[ebp-0x10], ebx
test ebx, ebx
jne 0x499b78
call fcn.00490ec2
mov dword[eax], 0xc
call fcn.00490ed5
mov dword[eax], 8
or eax, 0xffffffff
jmp 0x499fe6
push 1
push 0
push 0
push dword[ebp+8]
call fcn.00496529
mov ecx, dword[edi]
mov dword[esi+ecx+0x28], eax
add esp, 0x10
mov dword[esi+ecx+0x2c], edx
mov ecx, dword[edi]
add ecx, esi
test byte[ecx+4], 0x48
mov eax, ebx
je 0x499c19
mov cl, byte[ecx+5]
cmp cl, 0xa
je 0x499c19
cmp dword[ebp+0x10], 0
je 0x499c19
dec dword[ebp+0x10]
cmp byte[ebp-2], 0
mov byte[ebx], cl
mov ecx, dword[edi]
lea eax, [ebx+1]
mov dword[ebp-0xc], 1
mov byte[esi+ecx+5], 0xa
je 0x499c19
mov ecx, dword[edi]
mov cl, byte[esi+ecx+0x25]
cmp cl, 0xa
je 0x499c19
cmp dword[ebp+0x10], 0
je 0x499c19
mov byte[eax], cl
mov ecx, dword[edi]
inc eax
dec dword[ebp+0x10]
cmp byte[ebp-2], 1
mov dword[ebp-0xc], 2
mov byte[esi+ecx+0x25], 0xa
jne 0x499c19
mov ecx, dword[edi]
mov cl, byte[esi+ecx+0x26]
cmp cl, 0xa
je 0x499c19
cmp dword[ebp+0x10], 0
je 0x499c19
mov byte[eax], cl
mov ecx, dword[edi]
inc eax
dec dword[ebp+0x10]
mov dword[ebp-0xc], 3
mov byte[esi+ecx+0x26], 0xa
push 0
lea ecx, [ebp-0x18]
push ecx
push dword[ebp+0x10]
push eax
mov eax, dword[edi]
push dword[esi+eax]
call dword[sym.imp.KERNEL32.dll_ReadFile]
test eax, eax
je 0x499fae
mov ecx, dword[ebp-0x18]
test ecx, ecx
js 0x499fae
cmp ecx, dword[ebp+0x10]
ja 0x499fae
mov eax, dword[edi]
add dword[ebp-0xc], ecx
lea eax, [esi+eax+4]
test byte[eax], 0x80
je 0x499e40
cmp byte[ebp-2], 2
je 0x499e7a
test ecx, ecx
je 0x499c74
cmp byte[ebx], 0xa
jne 0x499c74
or byte[eax], 4
jmp 0x499c77
and byte[eax], 0xfb
mov ebx, dword[ebp-0x10]
mov eax, dword[ebp-0xc]
add eax, ebx
mov dword[ebp+0x10], ebx
mov dword[ebp-0xc], eax
cmp ebx, eax
jae 0x499d5e
mov ecx, dword[ebp+0x10]
mov al, byte[ecx]
cmp al, 0x1a
je 0x499d49
cmp al, 0xd
je 0x499caa
mov byte[ebx], al
inc ebx
inc ecx
mov dword[ebp+0x10], ecx
jmp 0x499d3b
mov eax, dword[ebp-0xc]
dec eax
cmp ecx, eax
jae 0x499cca
lea eax, [ecx+1]
cmp byte[eax], 0xa
jne 0x499cc5
add ecx, 2
mov dword[ebp+0x10], ecx
mov byte[ebx], 0xa
jmp 0x499d3a
mov dword[ebp+0x10], eax
jmp 0x499d37
inc dword[ebp+0x10]
push 0
lea eax, [ebp-0x18]
push eax
push 1
lea eax, [ebp-1]
push eax
mov eax, dword[edi]
push dword[esi+eax]
call dword[sym.imp.KERNEL32.dll_ReadFile]
test eax, eax
jne 0x499cf2
call dword[sym.imp.KERNEL32.dll_GetLastError]
test eax, eax
jne 0x499d37
cmp dword[ebp-0x18], 0
je 0x499d37
mov eax, dword[edi]
test byte[esi+eax+4], 0x48
je 0x499d15
cmp byte[ebp-1], 0xa
je 0x499cc0
mov byte[ebx], 0xd
mov eax, dword[edi]
mov cl, byte[ebp-1]
mov byte[esi+eax+5], cl
jmp 0x499d3a
cmp ebx, dword[ebp-0x10]
jne 0x499d20
cmp byte[ebp-1], 0xa
je 0x499cc0
push 1
push 0xffffffffffffffff
push 0xffffffffffffffff
push dword[ebp+8]
call fcn.00496529
add esp, 0x10
cmp byte[ebp-1], 0xa
je 0x499d3b
mov byte[ebx], 0xd
inc ebx
mov eax, dword[ebp-0xc]
cmp dword[ebp+0x10], eax
jb 0x499c8d
jmp 0x499d5e
mov eax, dword[edi]
lea eax, [esi+eax+4]
test byte[eax], 0x40
jne 0x499d59
or byte[eax], 2
jmp 0x499d5e
mov al, byte[ecx]
mov byte[ebx], al
inc ebx
mov eax, ebx
sub eax, dword[ebp-0x10]
cmp byte[ebp-2], 1
mov dword[ebp-0xc], eax
jne 0x499e40
test eax, eax
je 0x499e40
dec ebx
mov cl, byte[ebx]
test cl, cl
js 0x499d85
inc ebx
jmp 0x499e0b
xor eax, eax
inc eax
movzx ecx, cl
jmp 0x499d9c
cmp eax, 4
jg 0x499da5
cmp ebx, dword[ebp-0x10]
jb 0x499da5
dec ebx
movzx ecx, byte[ebx]
inc eax
cmp byte[ecx+0x4c2180], 0
je 0x499d8d
mov dl, byte[ebx]
movzx ecx, dl
movsx ecx, byte[ecx+0x4c2180]
test ecx, ecx
jne 0x499dc2
call fcn.00490ec2
mov dword[eax], 0x2a
jmp 0x499e3c
inc ecx
cmp ecx, eax
jne 0x499dcb
add ebx, eax
jmp 0x499e0b
mov ecx, dword[edi]
test byte[ecx+esi+4], 0x48
je 0x499df9
inc ebx
mov byte[ecx+esi+5], dl
cmp eax, 2
jl 0x499de7
mov dl, byte[ebx]
mov ecx, dword[edi]
mov byte[esi+ecx+0x25], dl
inc ebx
cmp eax, 3
jne 0x499df5
mov dl, byte[ebx]
mov ecx, dword[edi]
mov byte[esi+ecx+0x26], dl
inc ebx
sub ebx, eax
jmp 0x499e0b
neg eax
cdq
push 1
push edx
push eax
push dword[ebp+8]
call fcn.00496529
add esp, 0x10
mov eax, dword[ebp-0x1c]
sub ebx, dword[ebp-0x10]
shr eax, 1
push eax
push dword[ebp+0xc]
push ebx
push dword[ebp-0x10]
push 0
push 0xfde9
call dword[sym.imp.KERNEL32.dll_MultiByteToWideChar]
mov dword[ebp-0xc], eax
test eax, eax
jne 0x499e63
call dword[sym.imp.KERNEL32.dll_GetLastError]
push eax
call fcn.00490ee8
pop ecx
or dword[ebp-0x14], 0xffffffff
mov eax, dword[ebp-0x10]
cmp eax, dword[ebp+0xc]
je 0x499e4f
push eax
call fcn.0048e3af
pop ecx
mov eax, dword[ebp-0x14]
cmp eax, 0xfffffffe
jne 0x499fe6
mov eax, dword[ebp-0xc]
jmp 0x499fe6
mov eax, dword[ebp-0xc]
mov edx, dword[edi]
xor ecx, ecx
cmp eax, ebx
setne cl
add eax, eax
mov dword[ebp-0xc], eax
mov dword[esi+edx+0x30], ecx
jmp 0x499e40
test ecx, ecx
je 0x499e89
cmp word[ebx], 0xa
jne 0x499e89
or byte[eax], 4
jmp 0x499e8c
and byte[eax], 0xfb
mov ebx, dword[ebp-0x10]
mov eax, dword[ebp-0xc]
add eax, ebx
mov dword[ebp+0x10], ebx
mov dword[ebp-0xc], eax
cmp ebx, eax
jae 0x499fa3
mov eax, dword[ebp+0x10]
movzx ecx, word[eax]
cmp ecx, 0x1a
je 0x499f8a
cmp ecx, 0xd
je 0x499ec7
mov word[ebx], cx
add ebx, 2
add eax, 2
mov dword[ebp+0x10], eax
jmp 0x499f7c
mov ecx, dword[ebp-0xc]
add ecx, 0xfffffffe
cmp eax, ecx
jae 0x499eef
lea ecx, [eax+2]
cmp word[ecx], 0xa
jne 0x499ee7
add eax, 4
mov dword[ebp+0x10], eax
push 0xa
jmp 0x499f75
mov dword[ebp+0x10], ecx
jmp 0x499f73
add dword[ebp+0x10], 2
push 0
lea eax, [ebp-0x18]
push eax
push 2
lea eax, [ebp-8]
push eax
mov eax, dword[edi]
push dword[esi+eax]
call dword[sym.imp.KERNEL32.dll_ReadFile]
test eax, eax
jne 0x499f18
call dword[sym.imp.KERNEL32.dll_GetLastError]
test eax, eax
jne 0x499f73
cmp dword[ebp-0x18], 0
je 0x499f73
mov eax, dword[edi]
test byte[esi+eax+4], 0x48
je 0x499f4f
cmp word[ebp-8], 0xa
je 0x499ee0
push 0xd
pop eax
mov word[ebx], ax
mov eax, dword[edi]
mov cl, byte[ebp-8]
mov byte[esi+eax+5], cl
mov eax, dword[edi]
mov cl, byte[ebp-7]
mov byte[esi+eax+0x25], cl
mov eax, dword[edi]
mov byte[esi+eax+0x26], 0xa
jmp 0x499f79
cmp ebx, dword[ebp-0x10]
jne 0x499f5b
cmp word[ebp-8], 0xa
je 0x499ee0
push 1
push 0xffffffffffffffff
push 0xfffffffffffffffe
push dword[ebp+8]
call fcn.00496529
add esp, 0x10
cmp word[ebp-8], 0xa
je 0x499f7c
push 0xd
pop eax
mov word[ebx], ax
add ebx, 2
mov eax, dword[ebp-0xc]
cmp dword[ebp+0x10], eax
jb 0x499ea2
jmp 0x499fa3
mov ecx, dword[edi]
lea esi, [esi+ecx+4]
test byte[esi], 0x40
jne 0x499f9a
or byte[esi], 2
jmp 0x499fa3
mov ax, word[eax]
mov word[ebx], ax
add ebx, 2
sub ebx, dword[ebp-0x10]
mov dword[ebp-0xc], ebx
jmp 0x499e40
call dword[sym.imp.KERNEL32.dll_GetLastError]
push 5
pop esi
cmp eax, esi
jne 0x499fd2
call fcn.00490ec2
mov dword[eax], 9
call fcn.00490ed5
mov dword[eax], esi
jmp 0x499e3c
cmp eax, 0x6d
jne 0x499e35
and dword[ebp-0x14], 0
jmp 0x499e40
xor eax, eax
pop edi
pop ebx
pop esi
leave
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/4fe6510221c33bf023f6abed461fc13f