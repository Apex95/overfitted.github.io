---
layout: post
title:  "fcn.0040efe7 @ 59aef7c08025d70f84c85db2092fc99e"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.0040efe7
- **Origin (md5):** 59aef7c08025d70f84c85db2092fc99e
- **VirusTotal:** [virustotal.com/gui/file/59aef7c08025d70f84c85db2092fc99e][virustotal_ref]

# Code Tags
<span class="tag" id="MEMORY">MEMORY</span>


# Estimated Behaviour
<ul><li class="bhv-desc" id="na">Not Available :(</li></ul>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-263.0277404785156, -137.57540893554688, '<b><a href="/report/fcn.0040efe7@59aef7c08025d70f84c85db2092fc99e">fcn.0040efe7</a><br>@59aef7c08025d70f84c85db2092fc99e</b><br>', 'point { fill-color: #e0440e; }'],
[-77.27308654785156, -76.07849884033203, '<b><a href="/report/fcn.00403172@cbc200f66cbffbddf5df52f7c0da283a">fcn.00403172</a><br>@cbc200f66cbffbddf5df52f7c0da283a</b><br>', 'null'],
[3.2462410926818848, -15.57453441619873, '<b><a href="/report/fcn.005ae2f2@4e8d6f73c8261716f687f8d06429ef4d">fcn.005ae2f2</a><br>@4e8d6f73c8261716f687f8d06429ef4d</b><br>', 'null'],
[52.14358139038086, 57.68620300292969, '<b><a href="/report/fcn.004031c2@faca7110288761a0f664158c1f6c3986">fcn.004031c2</a><br>@faca7110288761a0f664158c1f6c3986</b><br>', 'null'],
[96.86924743652344, -140.32496643066406, '<b><a href="/report/fcn.00403172@7dd153bad1771b9e8d5266a341ebf949">fcn.00403172</a><br>@7dd153bad1771b9e8d5266a341ebf949</b><br>', 'null'],
[-274.3832092285156, -61.829811096191406, '<b><a href="/report/fcn.0041ab17@1123b7aa5760238fe93045e585b8234c">fcn.0041ab17</a><br>@1123b7aa5760238fe93045e585b8234c</b><br>', 'null'],
[-26.88152313232422, -169.46083068847656, '<b><a href="/report/fcn.00403172@8a08237568bc7b1a4e9813b2af535d73">fcn.00403172</a><br>@8a08237568bc7b1a4e9813b2af535d73</b><br>', 'null'],
[-72.76364135742188, 30.022308349609375, '<b><a href="/report/fcn.00596002@009ea4ad185ccb9becba67b3b2163e8b">fcn.00596002</a><br>@009ea4ad185ccb9becba67b3b2163e8b</b><br>', 'null'],
[104.20404815673828, -34.6324462890625, '<b><a href="/report/fcn.0065b382@bcba729302fe28f65deb2b102a06324a">fcn.0065b382</a><br>@bcba729302fe28f65deb2b102a06324a</b><br>', 'null'],
[-349.2641906738281, -111.72483825683594, '<b><a href="/report/fcn.1001c742@4c3818fdf32d89a09257dbc9d3e142ea">fcn.1001c742</a><br>@4c3818fdf32d89a09257dbc9d3e142ea</b><br>', 'null'],
[21.302671432495117, -94.86443328857422, '<b><a href="/report/fcn.004f7f92@ef3a0211d1ddb224667e2aa0d915337b">fcn.004f7f92</a><br>@ef3a0211d1ddb224667e2aa0d915337b</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push ebp
mov ebp, esp
sub esp, 0x10
mov ecx, dword[ebp+8]
mov eax, dword[ecx+0x10]
push esi
mov esi, dword[ebp+0xc]
push edi
mov edi, esi
sub edi, dword[ecx+0xc]
add esi, 0xfffffffc
shr edi, 0xf
mov ecx, edi
imul ecx, ecx, 0x204
lea ecx, [ecx+eax+0x144]
mov dword[ebp-0x10], ecx
mov ecx, dword[esi]
dec ecx
test cl, 1
mov dword[ebp-4], ecx
jne off.b788
push ebx
lea ebx, [ecx+esi]
mov edx, dword[ebx]
mov dword[ebp-0xc], edx
mov edx, dword[esi-4]
mov dword[ebp-8], edx
mov edx, dword[ebp-0xc]
test dl, 1
mov dword[ebp+0xc], ebx
jne off.b203
sar edx, 4
dec edx
cmp edx, 0x3f
jbe off.b99
push 0x3f
pop edx
mov ecx, dword[ebx+4]
cmp ecx, dword[ebx+8]
jne off.b173
cmp edx, 0x20
mov ebx, 0x80000000
jae off.b142
mov ecx, edx
shr ebx, cl
lea ecx, [edx+eax+4]
not ebx
and dword[eax+edi*4+0x44], ebx
dec byte[ecx]
jne off.b170
mov ecx, dword[ebp+8]
and dword[ecx], ebx
jmp off.b170
lea ecx, [edx-0x20]
shr ebx, cl
lea ecx, [edx+eax+4]
not ebx
and dword[eax+edi*4+0xc4], ebx
dec byte[ecx]
jne off.b170
mov ecx, dword[ebp+8]
and dword[ecx+4], ebx
mov ebx, dword[ebp+0xc]
mov edx, dword[ebx+8]
mov ebx, dword[ebx+4]
mov ecx, dword[ebp-4]
add ecx, dword[ebp-0xc]
mov dword[edx+4], ebx
mov edx, dword[ebp+0xc]
mov ebx, dword[edx+4]
mov edx, dword[edx+8]
mov dword[ebx+8], edx
mov dword[ebp-4], ecx
mov edx, ecx
sar edx, 4
dec edx
cmp edx, 0x3f
jbe off.b217
push 0x3f
pop edx
mov ebx, dword[ebp-8]
and ebx, 1
mov dword[ebp-0xc], ebx
jne off.b375
sub esi, dword[ebp-8]
mov ebx, dword[ebp-8]
sar ebx, 4
push 0x3f
mov dword[ebp+0xc], esi
dec ebx
pop esi
cmp ebx, esi
jbe off.b254
mov ebx, esi
add ecx, dword[ebp-8]
mov edx, ecx
sar edx, 4
dec edx
cmp edx, esi
mov dword[ebp-4], ecx
jbe off.b272
mov edx, esi
cmp ebx, edx
je off.b370
mov ecx, dword[ebp+0xc]
mov esi, dword[ecx+4]
cmp esi, dword[ecx+8]
jne off.b346
cmp ebx, 0x20
mov esi, 0x80000000
jae off.b320
mov ecx, ebx
shr esi, cl
not esi
and dword[eax+edi*4+0x44], esi
dec byte[ebx+eax+4]
jne off.b346
mov ecx, dword[ebp+8]
and dword[ecx], esi
jmp off.b346
lea ecx, [ebx-0x20]
shr esi, cl
not esi
and dword[eax+edi*4+0xc4], esi
dec byte[ebx+eax+4]
jne off.b346
mov ecx, dword[ebp+8]
and dword[ecx+4], esi
mov ecx, dword[ebp+0xc]
mov esi, dword[ecx+8]
mov ecx, dword[ecx+4]
mov dword[esi+4], ecx
mov ecx, dword[ebp+0xc]
mov esi, dword[ecx+4]
mov ecx, dword[ecx+8]
mov dword[esi+8], ecx
mov esi, dword[ebp+0xc]
jmp off.b378
mov ebx, dword[ebp+8]
cmp dword[ebp-0xc], 0
jne off.b392
cmp ebx, edx
je off.b520
mov ecx, dword[ebp-0x10]
lea ecx, [ecx+edx*8]
mov ebx, dword[ecx+4]
mov dword[esi+8], ecx
mov dword[esi+4], ebx
mov dword[ecx+4], esi
mov ecx, dword[esi+4]
mov dword[ecx+8], esi
mov ecx, dword[esi+4]
cmp ecx, dword[esi+8]
jne off.b520
mov cl, byte[edx+eax+4]
mov byte[ebp+0xf], cl
inc cl
cmp edx, 0x20
mov byte[edx+eax+4], cl
jae off.b479
cmp byte[ebp+0xf], 0
jne off.b462
mov ecx, edx
mov ebx, 0x80000000
shr ebx, cl
mov ecx, dword[ebp+8]
or dword[ecx], ebx
mov ebx, 0x80000000
mov ecx, edx
shr ebx, cl
lea eax, [eax+edi*4+0x44]
or dword[eax], ebx
jmp off.b520
cmp byte[ebp+0xf], 0
jne off.b501
lea ecx, [edx-0x20]
mov ebx, 0x80000000
shr ebx, cl
mov ecx, dword[ebp+8]
or dword[ecx+4], ebx
lea ecx, [edx-0x20]
mov edx, 0x80000000
shr edx, cl
lea eax, [eax+edi*4+0xc4]
or dword[eax], edx
mov eax, dword[ebp-4]
mov dword[esi], eax
mov dword[eax+esi-4], eax
mov eax, dword[ebp-0x10]
dec dword[eax]
jne off.b787
mov eax, dword[0x437ac0]
test eax, eax
je off.b773
mov ecx, dword[0x437ad8]
mov esi, dword[sym.imp.KERNEL32.dll_VirtualFree]
push 0x4000
shl ecx, 0xf
add ecx, dword[eax+0xc]
mov ebx, 0x8000
push ebx
push ecx
call esi
mov ecx, dword[0x437ad8]
mov eax, dword[0x437ac0]
mov edx, 0x80000000
shr edx, cl
or dword[eax+8], edx
mov eax, dword[0x437ac0]
mov eax, dword[eax+0x10]
mov ecx, dword[0x437ad8]
and dword[eax+ecx*4+0xc4], 0
mov eax, dword[0x437ac0]
mov eax, dword[eax+0x10]
dec byte[eax+0x43]
mov eax, dword[0x437ac0]
mov ecx, dword[eax+0x10]
cmp byte[ecx+0x43], 0
jne off.b662
and dword[eax+4], 0xfffffffe
mov eax, dword[0x437ac0]
cmp dword[eax+8], 0xffffffff
jne off.b773
push ebx
push 0
push dword[eax+0xc]
call esi
mov eax, dword[0x437ac0]
push dword[eax+0x10]
push 0
push dword[0x437adc]
call dword[sym.imp.KERNEL32.dll_HeapFree]
mov eax, dword[0x437ac4]
mov edx, dword[0x437ac8]
lea eax, [eax+eax*4]
shl eax, 2
mov ecx, eax
mov eax, dword[0x437ac0]
sub ecx, eax
lea ecx, [ecx+edx-0x14]
push ecx
lea ecx, [eax+0x14]
push ecx
push eax
call fcn.0040cb70
mov eax, dword[ebp+8]
add esp, 0xc
dec dword[0x437ac4]
cmp eax, dword[0x437ac0]
jbe off.b763
sub dword[ebp+8], 0x14
mov eax, dword[0x437ac8]
mov dword[0x437ad0], eax
mov eax, dword[ebp+8]
mov dword[0x437ac0], eax
mov dword[0x437ad8], edi
pop ebx
pop edi
pop esi
leave
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/59aef7c08025d70f84c85db2092fc99e