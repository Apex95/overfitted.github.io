---
layout: post
title:  "fcn.1004587f @ e5d49e0823e602f2ee948ac39d32c1eb"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.1004587f
- **Origin (md5):** e5d49e0823e602f2ee948ac39d32c1eb
- **VirusTotal:** [virustotal.com/gui/file/e5d49e0823e602f2ee948ac39d32c1eb][virustotal_ref]

# Code Tags
<span class="tag" id="SCREEN">SCREEN</span>


# Behaviour Tags
<span class="bhv-tag" id="na">N/A</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-2.5004773139953613, 145.18502807617188, '<b><a href="/report/fcn.1004587f@e5d49e0823e602f2ee948ac39d32c1eb">fcn.1004587f</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'point { fill-color: #e0440e; }'],
[142.67042541503906, 52.15498733520508, '<b><a href="/report/fcn.100438a5@e5d49e0823e602f2ee948ac39d32c1eb">fcn.100438a5</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],
[161.5784454345703, 96.05724334716797, '<b><a href="/report/fcn.0046aa15@9c2b894b84f59672d8be2e984066f76f">fcn.0046aa15</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'null'],
[28.437952041625977, -8.339600563049316, '<b><a href="/report/fcn.10044332@e5d49e0823e602f2ee948ac39d32c1eb">fcn.10044332</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],
[-47.520084381103516, 123.04047393798828, '<b><a href="/report/fcn.0046c9b9@9c2b894b84f59672d8be2e984066f76f">fcn.0046c9b9</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'null'],
[0.18187955021858215, 77.24140167236328, '<b><a href="/report/fcn.10045261@e5d49e0823e602f2ee948ac39d32c1eb">fcn.10045261</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],
[4.444770336151123, -51.311363220214844, '<b><a href="/report/fcn.0046b4d7@9c2b894b84f59672d8be2e984066f76f">fcn.0046b4d7</a><br>@9c2b894b84f59672d8be2e984066f76f</b><br>', 'null'],
[-40.19635009765625, 13.65798282623291, '<b><a href="/report/fcn.100440a9@e5d49e0823e602f2ee948ac39d32c1eb">fcn.100440a9</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],
[110.57281494140625, 137.87525939941406, '<b><a href="/report/fcn.10037b11@e5d49e0823e602f2ee948ac39d32c1eb">fcn.10037b11</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],
[66.3515625, 51.06239700317383, '<b><a href="/report/fcn.10044cbe@e5d49e0823e602f2ee948ac39d32c1eb">fcn.10044cbe</a><br>@e5d49e0823e602f2ee948ac39d32c1eb</b><br>', 'null'],
[76.64559173583984, -51.775630950927734, '<b><a href="/report/fcn.0042543e@7b00dd8f2abf54a73bfb09681334ff78">fcn.0042543e</a><br>@7b00dd8f2abf54a73bfb09681334ff78</b><br>', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

push 0x4c
mov eax, 0x1013db1e
call fcn.10124124
mov ebx, ecx
mov dword[ebp-0x4c], ebx
cmp dword[ebp+0x18], 0x64
je 0x10045d28
mov eax, dword[ebp+0x14]
sub eax, dword[ebp+0xc]
test eax, eax
jle 0x10045d28
mov eax, dword[ebp+0x10]
sub eax, dword[ebp+8]
test eax, eax
jle 0x10045d28
call fcn.100218d1
cmp dword[eax+0x1ac], 8
jg 0x100458d5
lea eax, [ebp+8]
push eax
push dword[ebx+4]
call fcn.100379c2
jmp 0x10045d28
cmp dword[ebp+0x24], 0xffffffff
je 0x100458e8
cmp dword[ebp+0x18], 0x64
jle 0x100458e8
xor eax, eax
jmp 0x10045d2b
mov edi, dword[ebp+0x10]
lea ecx, [ebp-0x3c]
mov esi, dword[ebp+0x14]
sub edi, dword[ebp+8]
sub esi, dword[ebp+0xc]
mov dword[ebp-0x44], edi
mov dword[ebp-0x40], esi
call fcn.1001703e
and dword[ebp-4], 0
mov eax, dword[ebx+4]
test eax, eax
je 0x10045910
mov eax, dword[eax+4]
push eax
call dword[sym.imp.GDI32.dll_CreateCompatibleDC]
push eax
lea ecx, [ebp-0x3c]
call fcn.100179cf
test eax, eax
jne 0x10045932
or dword[ebp-4], 0xffffffff
lea ecx, [ebp-0x3c]
call fcn.10017194
jmp 0x100458e1
and dword[ebp-0x20], 0
mov dword[ebp-0x24], 0x1014cb54
mov eax, dword[ebx+4]
push esi
push edi
mov byte[ebp-4], 1
push dword[eax+4]
call dword[sym.imp.GDI32.dll_CreateCompatibleBitmap]
push eax
lea ecx, [ebp-0x24]
call fcn.10017a05
test eax, eax
jne 0x10045971
lea ecx, [ebp-0x24]
mov byte[ebp-4], 0
mov dword[ebp-0x24], 0x1014cb54
call fcn.100171ad
jmp 0x10045924
push dword[ebp-0x20]
push dword[ebp-0x38]
call fcn.1001807d
xor ecx, ecx
mov dword[ebp-0x48], eax
test eax, eax
setne cl
test ecx, ecx
jne 0x1004598f
call fcn.10009c74
lea eax, [ebp-0x18]
mov dword[ebp-0x58], edi
push eax
lea eax, [ebp-0x58]
mov dword[ebp-0x54], esi
push eax
call fcn.10042ae4
mov dword[ebp-0x50], eax
test eax, eax
je 0x1004595c
cmp dword[ebp-0x18], 0
je 0x1004595c
push eax
push dword[ebp-0x38]
call dword[sym.imp.GDI32.dll_SelectObject]
mov eax, dword[ebx+4]
test eax, eax
je 0x100459c3
mov eax, dword[eax+4]
push 0xcc0020
push dword[ebp+0xc]
push dword[ebp+8]
push eax
push esi
push edi
push 0
push 0
push dword[ebp-0x38]
call dword[sym.imp.GDI32.dll_BitBlt]
mov ebx, dword[ebp+0x1c]
cmp ebx, 0xffffffff
je 0x10045a01
mov eax, ebx
shr eax, 8
movzx ecx, al
movzx eax, bl
shl eax, 8
or ecx, eax
shr ebx, 0x10
shl ecx, 8
movzx ebx, bl
or ebx, ecx
mov eax, esi
imul eax, edi
mov dword[ebp-0x28], eax
test eax, eax
jle 0x10045a9f
fld qword[0x101525d8]
mov eax, dword[ebp-0x18]
mov edi, dword[ebp-0x28]
cmp dword[ebp+0x20], 0
mov ecx, dword[eax]
mov dword[ebp-0x10], ecx
jle 0x10045ad4
movzx ecx, cl
fstp st(0)
movzx eax, bl
sub ecx, eax
push ecx
call fcn.10125454
pop ecx
cmp eax, dword[ebp+0x20]
jge 0x10045ae1
mov esi, dword[ebp-0x10]
mov eax, esi
shr eax, 8
movzx ecx, al
mov eax, ebx
shr eax, 8
movzx eax, al
sub ecx, eax
push ecx
call fcn.10125454
pop ecx
cmp eax, dword[ebp+0x20]
jge 0x10045ae1
mov eax, esi
shr eax, 0x10
movzx ecx, al
mov eax, ebx
shr eax, 0x10
movzx eax, al
sub ecx, eax
push ecx
call fcn.10125454
fld qword[0x101525d8]
pop ecx
cmp eax, dword[ebp+0x20]
jge 0x10045ae7
mov eax, dword[ebp-0x18]
add eax, 4
mov dword[ebp-0x18], eax
dec edi
jne 0x10045a1d
mov edi, dword[ebp-0x44]
fstp st(0)
mov esi, dword[ebp-0x40]
mov eax, dword[ebp-0x4c]
xor ebx, ebx
push 0xcc0020
push ebx
push ebx
push dword[ebp-0x38]
mov eax, dword[eax+4]
push esi
push edi
push dword[ebp+0xc]
push dword[ebp+8]
push dword[eax+4]
call dword[sym.imp.GDI32.dll_BitBlt]
mov eax, dword[ebp-0x48]
test eax, eax
jne 0x10045cf5
mov eax, ebx
jmp 0x10045cf8
xor eax, eax
cmp ecx, ebx
sete al
test eax, eax
jne 0x10045a8b
jmp 0x10045aea
fld qword[0x101525d8]
mov ecx, dword[ebp-0x10]
mov esi, dword[ebp+0x18]
cmp esi, 0xffffffff
jne 0x10045bd8
movzx esi, cl
fstp st(0)
add esi, esi
call fcn.100218d1
push 3
pop ecx
movzx eax, byte[eax+0x26]
add eax, esi
cdq
idiv ecx
mov ecx, 0xff
cmp eax, ecx
jle 0x10045b1c
mov dword[ebp-0x14], ecx
jmp 0x10045b30
call fcn.100218d1
push 3
pop ecx
movzx eax, byte[eax+0x26]
add eax, esi
cdq
idiv ecx
mov dword[ebp-0x14], eax
mov ecx, dword[ebp-0x10]
shr ecx, 8
movzx esi, cl
add esi, esi
call fcn.100218d1
push 3
pop ecx
movzx eax, byte[eax+0x25]
add eax, esi
cdq
idiv ecx
mov ecx, 0xff
cmp eax, ecx
jle 0x10045b5a
mov dword[ebp-0x1c], ecx
jmp 0x10045b6e
call fcn.100218d1
push 3
pop ecx
movzx eax, byte[eax+0x25]
add eax, esi
cdq
idiv ecx
mov dword[ebp-0x1c], eax
mov eax, dword[ebp-0x10]
shr eax, 0x10
movzx esi, al
add esi, esi
call fcn.100218d1
push 3
pop ecx
movzx eax, byte[eax+0x24]
add eax, esi
cdq
idiv ecx
cmp eax, 0xff
jle 0x10045b98
mov eax, 0xff
jmp 0x10045ba9
call fcn.100218d1
push 3
pop ecx
movzx eax, byte[eax+0x24]
add eax, esi
cdq
idiv ecx
movzx ecx, al
mov eax, dword[ebp-0x1c]
or ecx, 0xffffff00
movzx eax, al
shl ecx, 8
or ecx, eax
mov eax, dword[ebp-0x14]
fld qword[0x101525d8]
movzx eax, al
shl ecx, 8
or ecx, eax
mov eax, dword[ebp-0x18]
mov dword[eax], ecx
jmp 0x10045a8e
cmp dword[ebp+0x24], 0xffffffff
jne 0x10045c10
fild dword[ebp+0x18]
sub esp, 0x18
fstp qword[ebp-0x2c]
fmul qword[ebp-0x2c]
fst qword[esp+0x10]
fst qword[esp+8]
fstp qword[esp]
push ecx
call fcn.100462a2
mov ecx, dword[ebp-0x18]
or eax, 0xff000000
fld qword[0x101525d8]
mov dword[ecx], eax
jmp 0x10045a8b
mov eax, ecx
movzx edx, cl
shr eax, 8
fstp st(0)
movzx eax, al
mov dword[ebp-0x10], eax
shr ecx, 0x10
movzx eax, cl
mov dword[ebp-0x1c], eax
mov eax, dword[ebp+0x24]
shr eax, 0x10
push 0x64
movzx eax, al
sub eax, edx
mov dword[ebp-0x14], edx
push esi
push eax
mov dword[ebp-0x28], eax
call dword[sym.imp.KERNEL32.dll_MulDiv]
add eax, dword[ebp-0x14]
mov ecx, 0xff
cmp eax, ecx
jle 0x10045c55
mov dword[ebp-0x28], ecx
jmp 0x10045c67
push 0x64
push esi
push dword[ebp-0x28]
call dword[sym.imp.KERNEL32.dll_MulDiv]
add eax, dword[ebp-0x14]
mov dword[ebp-0x28], eax
mov ecx, dword[ebp+0x24]
shr ecx, 8
push 0x64
movzx eax, cl
sub eax, dword[ebp-0x10]
push esi
push eax
mov dword[ebp-0x14], eax
call dword[sym.imp.KERNEL32.dll_MulDiv]
add eax, dword[ebp-0x10]
mov ecx, 0xff
cmp eax, ecx
jle 0x10045c91
mov dword[ebp-0x14], ecx
jmp 0x10045ca3
push 0x64
push esi
push dword[ebp-0x14]
call dword[sym.imp.KERNEL32.dll_MulDiv]
add eax, dword[ebp-0x10]
mov dword[ebp-0x14], eax
mov eax, dword[ebp+0x24]
push 0x64
movzx eax, al
sub eax, dword[ebp-0x1c]
push esi
push eax
mov dword[ebp-0x10], eax
call dword[sym.imp.KERNEL32.dll_MulDiv]
add eax, dword[ebp-0x1c]
cmp eax, 0xff
jle 0x10045cca
mov eax, 0xff
jmp 0x10045cd9
push 0x64
push esi
push dword[ebp-0x10]
call dword[sym.imp.KERNEL32.dll_MulDiv]
add eax, dword[ebp-0x1c]
movzx ecx, al
mov eax, dword[ebp-0x14]
or ecx, 0xffffff00
movzx eax, al
shl ecx, 8
or ecx, eax
mov eax, dword[ebp-0x28]
jmp 0x10045bc0
mov eax, dword[eax+4]
push eax
push dword[ebp-0x38]
call fcn.1001807d
push dword[ebp-0x50]
call dword[sym.imp.GDI32.dll_DeleteObject]
lea ecx, [ebp-0x24]
mov byte[ebp-4], bl
mov dword[ebp-0x24], 0x1014cb54
call fcn.100171ad
or dword[ebp-4], 0xffffffff
lea ecx, [ebp-0x3c]
call fcn.10017194
xor eax, eax
inc eax
call fcn.101240f2
ret 0x20

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/e5d49e0823e602f2ee948ac39d32c1eb