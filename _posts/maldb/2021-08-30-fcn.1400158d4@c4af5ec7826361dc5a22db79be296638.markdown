---
layout: post
title:  "fcn.1400158d4 @ c4af5ec7826361dc5a22db79be296638"
date:   2021-09-10 15:52:19 +0300
categories: report
index: false
---

# Generic Information
- **Function:** fcn.1400158d4
- **Origin (md5):** c4af5ec7826361dc5a22db79be296638
- **VirusTotal:** [virustotal.com/gui/file/c4af5ec7826361dc5a22db79be296638][virustotal_ref]

# Code Tags
<span class="tag" id="MEMORY">MEMORY</span>
<span class="tag" id="PROCESS">PROCESS</span>


# Behaviour Tags
<span class="bhv-tag" id="GENERATES_CANNARIES">GENERATES_CANNARIES / 0.0562571261957773</span>

# Similar Functions
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
    var data = new google.visualization.DataTable();
        data.addColumn('number', 'X');
        data.addColumn('number', 'Y');
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});
        data.addColumn({'type': 'string', 'role': 'style'});
        
        data.addRows([
    [-175.87857055664062, 592.3407592773438, '<b><a href="/report/fcn.1400158d4@c4af5ec7826361dc5a22db79be296638">fcn.1400158d4</a><br>@c4af5ec7826361dc5a22db79be296638</b><br>mov qword[rsp+8], rbx<br>mov qword[rsp+0x10], rbp<br>mov qword[rsp+0x18], rsi<br>push rdi<br>push r14<br>push r15<br>sub rsp, 0x40<br>cmp dword[0x14001f108], 0<br>mov r14, rdx<br>mov r15, rcx<br>lea rbx, [0x14001f118]<br>jne 0x140015921<br>call qword[sym.imp.KERNEL32.dll_TlsAlloc]<br>mov rcx, rbx<br>mov dword[0x14001f140], eax<br>call qword[sym.imp.KERNEL32.dll_InitializeCriticalSection]<br>mov dword[0x14001f108], 1<br>mov ecx, dword[0x14001f140]<br>call qword[sym.imp.KERNEL32.dll_TlsGetValue]<br>mov rbp, rax<br>test rax, rax<br>jne 0x1400159f6<br>mov rcx, qword[0x14001e444]<br>lea edx, [rax+8]<br>lea r8d, [rax+0x28]<br>call qword[sym.imp.KERNEL32.dll_HeapAlloc]<br>mov rbp, rax<br>test rax, rax<br>je 0x140015a21<br>mov rcx, rbx<br>call qword[sym.imp.KERNEL32.dll_EnterCriticalSection]<br>mov rax, qword[0x14001f110]<br>test rax, rax<br>je 0x140015971<br>mov qword[rax], rbp<br>mov rcx, rbx<br>mov qword[rbp+8], rax<br>mov qword[0x14001f110], rbp<br>call qword[sym.imp.KERNEL32.dll_LeaveCriticalSection]<br>call qword[sym.imp.KERNEL32.dll_GetCurrentProcess]<br>mov rdi, rax<br>call qword[sym.imp.KERNEL32.dll_GetCurrentThread]<br>mov rbx, rax<br>call qword[sym.imp.KERNEL32.dll_GetCurrentProcess]<br>and dword[rsp+0x30], 0<br>and dword[rsp+0x28], 0<br>lea r9, [rbp+0x20]<br>mov r8, rdi<br>mov rcx, rax<br>mov rdx, rbx<br>mov dword[rsp+0x20], 0x100000<br>call qword[sym.imp.KERNEL32.dll_DuplicateHandle]<br>mov rdx, qword[rbp+0x20]<br>lea rcx, [rbp+0x18]<br>lea r8, [0x140015a3c]<br>mov r9, rbp<br>mov dword[rsp+0x28], 8<br>or dword[rsp+0x20], 0xffffffff<br>call qword[sym.imp.KERNEL32.dll_RegisterWaitForSingleObject]<br>mov ecx, dword[0x14001f140]<br>mov rdx, rbp<br>call qword[sym.imp.KERNEL32.dll_TlsSetValue]<br>mov rcx, qword[0x14001e444]<br>xor edx, edx<br>lea r8d, [rdx+0x18]<br>call qword[sym.imp.KERNEL32.dll_HeapAlloc]<br>test rax, rax<br>je 0x140015a21<br>mov qword[rax+8], r15<br>mov qword[rax+0x10], r14<br>mov rcx, qword[rbp+0x10]<br>mov qword[rax], rcx<br>mov qword[rbp+0x10], rax<br>mov rbx, qword[rsp+0x60]<br>mov rbp, qword[rsp+0x68]<br>mov rsi, qword[rsp+0x70]<br>add rsp, 0x40<br>pop r15<br>pop r14<br>pop rdi<br>ret <br><eoc> ', 'point { fill-color: #e0440e; }'],
[74.6111831665039, -161.1326141357422, '<b><a href="/report/fcn.14000feb8@c4af5ec7826361dc5a22db79be296638">fcn.14000feb8</a><br>@c4af5ec7826361dc5a22db79be296638</b><br>mov qword[rsp+8], rbx<br>mov qword[rsp+0x10], rsi<br>push rdi<br>sub rsp, 0x20<br>lea rsi, [rcx+0x38]<br>mov rbx, rcx<br>mov rdi, rdx<br>mov rcx, rsi<br>call qword[sym.imp.KERNEL32.dll_EnterCriticalSection]<br>cmp rdi, 0xffffffffffffffff<br>jne 0x14000fef3<br>mov edx, dword[rbx]<br>lea rcx, [rbx+0x18]<br>add edx, 0x10<br>call fcn.1400108c0<br>mov rbx, rax<br>jmp 0x14000ff62<br>cmp rdi, qword[rbx+8]<br>jl 0x14000ff22<br>movsxd r9, dword[rbx+4]<br>mov r8, qword[rbx+0x10]<br>mov edx, 8<br>add r9, rdi<br>mov qword[rbx+8], r9<br>mov rcx, qword[0x14001e444]<br>shl r9, 3<br>call qword[sym.imp.KERNEL32.dll_HeapReAlloc]<br>mov qword[rbx+0x10], rax<br>mov rax, qword[rbx+0x10]<br>cmp qword[rax+rdi*8], 0<br>je 0x14000ff3d<br>mov rax, qword[rbx+0x20]<br>test rax, rax<br>je 0x14000ff5a<br>mov rcx, rdi<br>call rax<br>jmp 0x14000ff5a<br>movsxd r8, dword[rbx]<br>mov rcx, qword[0x14001e444]<br>mov edx, 8<br>call qword[sym.imp.KERNEL32.dll_HeapAlloc]<br>mov rdx, qword[rbx+0x10]<br>mov qword[rdx+rdi*8], rax<br>mov rax, qword[rbx+0x10]<br>mov rbx, qword[rax+rdi*8]<br>mov rcx, rsi<br>call qword[sym.imp.KERNEL32.dll_LeaveCriticalSection]<br>mov rsi, qword[rsp+0x38]<br>mov rax, rbx<br>mov rbx, qword[rsp+0x30]<br>add rsp, 0x20<br>pop rdi<br>ret <br><eoc> ', 'null'],
[326.2389221191406, 340.8943786621094, '<b><a href="/report/fcn.1400157d8@c4af5ec7826361dc5a22db79be296638">fcn.1400157d8</a><br>@c4af5ec7826361dc5a22db79be296638</b><br>mov qword[rsp+8], rbx<br>mov qword[rsp+0x10], rsi<br>push rdi<br>sub rsp, 0x20<br>mov rdi, rcx<br>mov rcx, qword[rcx+0x18]<br>call qword[sym.imp.KERNEL32.dll_UnregisterWait]<br>mov rcx, qword[rdi+0x20]<br>call qword[sym.imp.KERNEL32.dll_CloseHandle]<br>lea rcx, [0x14001f118]<br>call qword[sym.imp.KERNEL32.dll_EnterCriticalSection]<br>mov rcx, qword[rdi]<br>mov rax, qword[rdi+8]<br>test rcx, rcx<br>je 0x14001581d<br>mov qword[rcx+8], rax<br>jmp 0x140015824<br>mov qword[0x14001f110], rax<br>mov rdx, qword[rdi+8]<br>test rdx, rdx<br>je 0x140015833<br>mov rax, qword[rdi]<br>mov qword[rdx], rax<br>lea rcx, [0x14001f118]<br>call qword[sym.imp.KERNEL32.dll_LeaveCriticalSection]<br>mov rsi, qword[rdi+0x10]<br>jmp 0x140015865<br>mov rbx, rsi<br>mov rsi, qword[rsi]<br>mov rcx, qword[rbx+0x10]<br>call qword[rbx+8]<br>mov rcx, qword[0x14001e444]<br>mov r8, rbx<br>xor edx, edx<br>call qword[sym.imp.KERNEL32.dll_HeapFree]<br>test rsi, rsi<br>jne 0x140015846<br>mov rcx, qword[0x14001e444]<br>mov r8, rdi<br>xor edx, edx<br>mov rbx, qword[rsp+0x30]<br>mov rsi, qword[rsp+0x38]<br>add rsp, 0x20<br>pop rdi<br>jmp qword[sym.imp.KERNEL32.dll_HeapFree]<br><eoc> ', 'null'],
[-427.505126953125, 90.31338500976562, '<b><a href="/report/fcn.140006278@c4af5ec7826361dc5a22db79be296638">fcn.140006278</a><br>@c4af5ec7826361dc5a22db79be296638</b><br>mov r11, rsp<br>mov qword[r11+8], rbx<br>mov qword[r11+0x10], rbp<br>mov qword[r11+0x20], rsi<br>push rdi<br>sub rsp, 0x30<br>lea rax, [r11+0x18]<br>mov r9, rdx<br>mov r8, rcx<br>mov qword[r11-0x10], rax<br>xor edi, edi<br>mov edx, 0x1000<br>xor ecx, ecx<br>mov dword[rsp+0x20], edi<br>call qword[sym.imp.KERNEL32.dll_CreateThread]<br>mov rbp, rax<br>test rax, rax<br>je 0x14000633e<br>lea rcx, [0x14001f160]<br>call qword[sym.imp.KERNEL32.dll_EnterCriticalSection]<br>mov rbx, qword[0x14001e5b0]<br>jmp 0x140006302<br>lea rsi, [rbx+0x10]<br>xor edx, edx<br>mov rcx, qword[rsi]<br>call qword[sym.imp.KERNEL32.dll_WaitForSingleObject]<br>test eax, eax<br>jne 0x1400062ff<br>mov rcx, qword[rsi]<br>call qword[sym.imp.KERNEL32.dll_CloseHandle]<br>mov rbx, qword[rbx]<br>lea rcx, [0x14001e5b0]<br>mov rdx, rsi<br>call fcn.140010878<br>jmp 0x140006302<br>mov rbx, qword[rbx]<br>test rbx, rbx<br>jne 0x1400062cf<br>mov rdx, qword[0x14001d158]<br>lea rcx, [0x14001e5b0]<br>mov rdi, rdx<br>inc rdx<br>mov qword[0x14001d158], rdx<br>lea edx, [rbx+0x20]<br>call fcn.1400108c0<br>lea rcx, [0x14001f160]<br>mov qword[rax], rbp<br>mov qword[rax+8], rdi<br>call qword[sym.imp.KERNEL32.dll_LeaveCriticalSection]<br>mov rbx, qword[rsp+0x40]<br>mov rbp, qword[rsp+0x48]<br>mov rsi, qword[rsp+0x58]<br>mov rax, rdi<br>add rsp, 0x30<br>pop rdi<br>ret <br><eoc> ', 'null'],

        ]);

    var options = {
        title: 'Similarity Plot',
        legend: 'none',
        colors: ['#dedbd9', '#e6693e', '#ec8f6e', '#f3b49f', '#f6c7b6'],
        tooltip: {isHtml: true, trigger: 'both'},
        explorer: {
        actions: ["dragToZoom", "rightClickToReset"],
        },
        chartArea: {
        width: '80%',
        height: '80%'
        },
        width: '100%',
        height: '100%'
    };

    var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

    chart.draw(data, options);
    }
    
</script>


<div id="chart_div" style="width: 100%px; height: 100%;"></div>

# Disassembled Code
{% highlight nasm %}

mov qword[rsp+8], rbx
mov qword[rsp+0x10], rbp
mov qword[rsp+0x18], rsi
push rdi
push r14
push r15
sub rsp, 0x40
cmp dword[0x14001f108], 0
mov r14, rdx
mov r15, rcx
lea rbx, [0x14001f118]
jne 0x140015921
call qword[sym.imp.KERNEL32.dll_TlsAlloc]
mov rcx, rbx
mov dword[0x14001f140], eax
call qword[sym.imp.KERNEL32.dll_InitializeCriticalSection]
mov dword[0x14001f108], 1
mov ecx, dword[0x14001f140]
call qword[sym.imp.KERNEL32.dll_TlsGetValue]
mov rbp, rax
test rax, rax
jne 0x1400159f6
mov rcx, qword[0x14001e444]
lea edx, [rax+8]
lea r8d, [rax+0x28]
call qword[sym.imp.KERNEL32.dll_HeapAlloc]
mov rbp, rax
test rax, rax
je 0x140015a21
mov rcx, rbx
call qword[sym.imp.KERNEL32.dll_EnterCriticalSection]
mov rax, qword[0x14001f110]
test rax, rax
je 0x140015971
mov qword[rax], rbp
mov rcx, rbx
mov qword[rbp+8], rax
mov qword[0x14001f110], rbp
call qword[sym.imp.KERNEL32.dll_LeaveCriticalSection]
call qword[sym.imp.KERNEL32.dll_GetCurrentProcess]
mov rdi, rax
call qword[sym.imp.KERNEL32.dll_GetCurrentThread]
mov rbx, rax
call qword[sym.imp.KERNEL32.dll_GetCurrentProcess]
and dword[rsp+0x30], 0
and dword[rsp+0x28], 0
lea r9, [rbp+0x20]
mov r8, rdi
mov rcx, rax
mov rdx, rbx
mov dword[rsp+0x20], 0x100000
call qword[sym.imp.KERNEL32.dll_DuplicateHandle]
mov rdx, qword[rbp+0x20]
lea rcx, [rbp+0x18]
lea r8, [0x140015a3c]
mov r9, rbp
mov dword[rsp+0x28], 8
or dword[rsp+0x20], 0xffffffff
call qword[sym.imp.KERNEL32.dll_RegisterWaitForSingleObject]
mov ecx, dword[0x14001f140]
mov rdx, rbp
call qword[sym.imp.KERNEL32.dll_TlsSetValue]
mov rcx, qword[0x14001e444]
xor edx, edx
lea r8d, [rdx+0x18]
call qword[sym.imp.KERNEL32.dll_HeapAlloc]
test rax, rax
je 0x140015a21
mov qword[rax+8], r15
mov qword[rax+0x10], r14
mov rcx, qword[rbp+0x10]
mov qword[rax], rcx
mov qword[rbp+0x10], rax
mov rbx, qword[rsp+0x60]
mov rbp, qword[rsp+0x68]
mov rsi, qword[rsp+0x70]
add rsp, 0x40
pop r15
pop r14
pop rdi
ret

{% endhighlight %}

[virustotal_ref]: https://www.virustotal.com/gui/file/c4af5ec7826361dc5a22db79be296638