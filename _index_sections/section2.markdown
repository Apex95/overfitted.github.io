---
layout: section-tab
icon: /assets/img/icons/ocr.svg
title: Text Recognition
---

The **Glyph Engine** (work in progress) is a text recognition system (**typed** and **handwritten**) which supports text segmentation and recognition for multiple languages, given colored, grayscaled or binarized documents. 

At the moment, Glyph can handle the following languages and scripts:
- **German - Fraktur**: (lang code: `de-frk`) (03.03.2022) ([see benchmark](/benchmarks/ocr/glyph-de-fraktur-benchmark))

We mention that Glyph is designed to operate on dense-text documents structured in a single-column format.

## API
Currently, interaction with the **Glyph API** occurs through **POST** requests which include the following parameters:
* `api_key`: this is your API key
* `lang`: the language and script of your submitted image
* `img`: the image you're submitting for text recognition

For example, the following **curl** command submits **my_image.tiff** using **de-frk** (German Fraktur) as language code. 
```bash
curl -H "Content-Type: multipart/form-data" \
     -F "lang=de-frk" \
     -F "api_key=<your_api_key>" \
     -F "img=@my_image.tiff" \
     https://glyph.api.overfitted.io/process
```

## Response

Glyph's response is **JSON**-formatted and includes the following fields:
* **text**: this represents the complete text identified in the given image, generated by concatenating all found characters
* **lines**: this is an array of text lines; each text line will include a series of characters
* **character**: this is the recognized character's representation (with unicode support)
* **confidence**: this is the character-level confidence value determined by Glyph
* **hstart / hstop / vstart / vstop**: these parameters isolate the maximum activation region in the image for each character

An example (truncated for brevity) is posted below:
```json
{ 
    "text": "Für\nEleg.", 
    "lines": [
        [
            { "character": "F", "confidence": 0.9999880790710449, "hstart": 9, "hstop": 12, "vstart": 0, "vstop": 37 },
            { "character": "ü", "confidence": 0.9999426603317261, "hstart": 30, "hstop": 33, "vstart": 0, "vstop": 37 },
            { "character": "r", "confidence": 0.9999780654907227, "hstart": 49, "hstop": 52, "vstart": 0, "vstop": 37 },
            [...]
        ],
        [
            { "character": "E", "confidence": 0.999863862991333, "hstart": 6, "hstop": 10, "vstart": 68, "vstop": 109 },
            { "character": "l", "confidence": 0.9998210072517395, "hstart": 30, "hstop": 34, "vstart": 68, "vstop": 109 },
            { "character": "e", "confidence": 0.9999490976333618, "hstart": 40, "hstop": 44, "vstart": 68, "vstop": 109 },
            { "character": "g", "confidence": 0.999992847442627, "hstart": 51, "hstop": 54, "vstart": 68, "vstop": 109 },
            { "character": ".", "confidence": 0.6917785406112671, "hstart": 68, "hstop": 71, "vstart": 68, "vstop": 109 },
            [...]
        ],
        [...]
    ]
}
```